void *sub_1D431C654(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xA0uLL);
}

_QWORD *sub_1D431C65C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  v7 = a2[2];
  if (a1[2])
  {
    if (v7)
    {
      v8 = a2[3];
      a1[2] = v7;
      a1[3] = v8;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    v9 = a2[3];
    a1[2] = v7;
    a1[3] = v9;
    goto LABEL_15;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_15:
  v10 = a2[4];
  if (a1[4])
  {
    if (v10)
    {
      v11 = a2[5];
      a1[4] = v10;
      a1[5] = v11;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v10)
  {
    v12 = a2[5];
    a1[4] = v10;
    a1[5] = v12;
    goto LABEL_22;
  }
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
LABEL_22:
  v13 = a2[6];
  if (a1[6])
  {
    if (v13)
    {
      v14 = a2[7];
      a1[6] = v13;
      a1[7] = v14;
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v13)
  {
    v15 = a2[7];
    a1[6] = v13;
    a1[7] = v15;
    goto LABEL_29;
  }
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
LABEL_29:
  v16 = a2[8];
  if (a1[8])
  {
    if (v16)
    {
      v17 = a2[9];
      a1[8] = v16;
      a1[9] = v17;
      swift_release();
      goto LABEL_36;
    }
    swift_release();
  }
  else if (v16)
  {
    v18 = a2[9];
    a1[8] = v16;
    a1[9] = v18;
    goto LABEL_36;
  }
  *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
LABEL_36:
  v19 = a2[10];
  if (a1[10])
  {
    if (v19)
    {
      v20 = a2[11];
      a1[10] = v19;
      a1[11] = v20;
      swift_release();
      goto LABEL_43;
    }
    swift_release();
  }
  else if (v19)
  {
    v21 = a2[11];
    a1[10] = v19;
    a1[11] = v21;
    goto LABEL_43;
  }
  *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
LABEL_43:
  v22 = a2[12];
  if (a1[12])
  {
    if (v22)
    {
      v23 = a2[13];
      a1[12] = v22;
      a1[13] = v23;
      swift_release();
      goto LABEL_50;
    }
    swift_release();
  }
  else if (v22)
  {
    v24 = a2[13];
    a1[12] = v22;
    a1[13] = v24;
    goto LABEL_50;
  }
  *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
LABEL_50:
  v25 = a2[14];
  if (a1[14])
  {
    if (v25)
    {
      v26 = a2[15];
      a1[14] = v25;
      a1[15] = v26;
      swift_release();
      goto LABEL_57;
    }
    swift_release();
  }
  else if (v25)
  {
    v27 = a2[15];
    a1[14] = v25;
    a1[15] = v27;
    goto LABEL_57;
  }
  *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
LABEL_57:
  v28 = a2[16];
  if (a1[16])
  {
    if (v28)
    {
      v29 = a2[17];
      a1[16] = v28;
      a1[17] = v29;
      swift_release();
      goto LABEL_64;
    }
    swift_release();
  }
  else if (v28)
  {
    v30 = a2[17];
    a1[16] = v28;
    a1[17] = v30;
    goto LABEL_64;
  }
  *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
LABEL_64:
  v31 = a2[18];
  if (!a1[18])
  {
    if (v31)
    {
      v33 = a2[19];
      a1[18] = v31;
      a1[19] = v33;
      return a1;
    }
LABEL_70:
    *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
    return a1;
  }
  if (!v31)
  {
    swift_release();
    goto LABEL_70;
  }
  v32 = a2[19];
  a1[18] = v31;
  a1[19] = v32;
  swift_release();
  return a1;
}

uint64_t sub_1D431C978(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 160))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D431C9CC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 160) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 160) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t type metadata accessor for SnoopPublisherHooks(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SnoopPublisherHooks);
}

uint64_t sub_1D431CA54(uint64_t a1)
{
  return sub_1D431B6A0(a1);
}

uint64_t sub_1D431CA74(uint64_t a1)
{
  return sub_1D431B8E0(a1);
}

uint64_t sub_1D431CA94(uint64_t a1)
{
  return sub_1D431BA8C(a1);
}

uint64_t sub_1D431CAB4()
{
  return sub_1D431BC60();
}

uint64_t sub_1D431CAD4()
{
  return sub_1D451A098();
}

uint64_t sub_1D431CAF4()
{
  return sub_1D431BDF8();
}

void sub_1D431CB14()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D431CB24()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D431CB34()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1D431CB54(uint64_t a1)
{
  uint64_t v1;

  return sub_1D431BB6C(a1, v1);
}

void sub_1D431CB5C(uint64_t a1)
{
  MEMORY[0x1E0C80A78](a1);
  type metadata accessor for SnoopPublisher.Instance();
}

uint64_t sub_1D431CBD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v4, v2);
  sub_1D431E028((void *)(v7 - 240), (const void *)(v1 + *(int *)(v3 + 36)));
  sub_1D431DEFC((uint64_t *)(v7 - 240));
  *(_QWORD *)(v7 - 248) = sub_1D431B558(v5, (const void *)(v7 - 240));
  MEMORY[0x1D825E41C](&unk_1D452A338, a1);
  sub_1D451A2CC();
  return swift_release();
}

void sub_1D431CC6C(uint64_t a1)
{
  sub_1D431CB5C(a1);
}

uint64_t sub_1D431CC80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D42B28FC(qword_1EFE4B8C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D431CCC8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 48))();
  *a1 = result;
  return result;
}

uint64_t sub_1D431CCF4()
{
  sub_1D431DFF4();
  return sub_1D451A170();
}

uint64_t sub_1D431CD18()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1D431CD70()
{
  sub_1D431DFF4();
  return sub_1D451A164();
}

uint64_t sub_1D431CD90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D42B28FC(qword_1EFE4B8C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D431CDD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D42B28FC(qword_1EFE4B8C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D431CE20(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D42B28FC(qword_1EFE4B8C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_1D431CE60(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = a1[2];
  v3 = a1[4];
  v4 = a1[6];
  v5 = a1[8];
  v6 = a1[10];
  v8 = a1[12];
  v9 = a1[14];
  v11 = a1[18];
  v10 = a1[16];
  sub_1D42B7F68(*a1);
  sub_1D42B7F68(v2);
  sub_1D42B7F68(v3);
  sub_1D42B7F68(v4);
  sub_1D42B7F68(v5);
  sub_1D42B7F68(v6);
  sub_1D42B7F68(v8);
  sub_1D42B7F68(v9);
  sub_1D42B7F68(v10);
  sub_1D42B7F68(v11);
  return a1;
}

uint64_t sub_1D431CF58()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D431CFCC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 160 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (*v11)
    {
      v12 = v11[1];
      *(_QWORD *)v10 = *v11;
      *(_QWORD *)(v10 + 8) = v12;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v10 = *(_OWORD *)v11;
    }
    v13 = v11[2];
    if (v13)
    {
      v14 = v11[3];
      *(_QWORD *)(v10 + 16) = v13;
      *(_QWORD *)(v10 + 24) = v14;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v10 + 16) = *((_OWORD *)v11 + 1);
    }
    v15 = v11[4];
    if (v15)
    {
      v16 = v11[5];
      *(_QWORD *)(v10 + 32) = v15;
      *(_QWORD *)(v10 + 40) = v16;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v10 + 32) = *((_OWORD *)v11 + 2);
    }
    v17 = v11[6];
    if (v17)
    {
      v18 = v11[7];
      *(_QWORD *)(v10 + 48) = v17;
      *(_QWORD *)(v10 + 56) = v18;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v10 + 48) = *((_OWORD *)v11 + 3);
    }
    v19 = v11[8];
    if (v19)
    {
      v20 = v11[9];
      *(_QWORD *)(v10 + 64) = v19;
      *(_QWORD *)(v10 + 72) = v20;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v10 + 64) = *((_OWORD *)v11 + 4);
    }
    v21 = v11[10];
    if (v21)
    {
      v22 = v11[11];
      *(_QWORD *)(v10 + 80) = v21;
      *(_QWORD *)(v10 + 88) = v22;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v10 + 80) = *((_OWORD *)v11 + 5);
    }
    v23 = v11[12];
    if (v23)
    {
      v24 = v11[13];
      *(_QWORD *)(v10 + 96) = v23;
      *(_QWORD *)(v10 + 104) = v24;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v10 + 96) = *((_OWORD *)v11 + 6);
    }
    v25 = v11[14];
    if (v25)
    {
      v26 = v11[15];
      *(_QWORD *)(v10 + 112) = v25;
      *(_QWORD *)(v10 + 120) = v26;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v10 + 112) = *((_OWORD *)v11 + 7);
    }
    v27 = v11[16];
    if (v27)
    {
      v28 = v11[17];
      *(_QWORD *)(v10 + 128) = v27;
      *(_QWORD *)(v10 + 136) = v28;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v10 + 128) = *((_OWORD *)v11 + 8);
    }
    v29 = v11[18];
    if (!v29)
    {
      *(_OWORD *)(v10 + 144) = *((_OWORD *)v11 + 9);
      return v4;
    }
    v30 = v11[19];
    *(_QWORD *)(v10 + 144) = v29;
    *(_QWORD *)(v10 + 152) = v30;
  }
  swift_retain();
  return v4;
}

uint64_t sub_1D431D1F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  result = (*(uint64_t (**)(void))(v3 + 8))();
  v5 = (_QWORD *)((a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8);
  if (*v5)
    result = swift_release();
  if (v5[2])
    result = swift_release();
  if (v5[4])
    result = swift_release();
  if (v5[6])
    result = swift_release();
  if (v5[8])
    result = swift_release();
  if (v5[10])
    result = swift_release();
  if (v5[12])
    result = swift_release();
  if (v5[14])
    result = swift_release();
  if (v5[16])
    result = swift_release();
  if (v5[18])
    return swift_release();
  return result;
}

uint64_t sub_1D431D2DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  if (*v8)
  {
    v9 = v8[1];
    *v7 = *v8;
    v7[1] = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v7 = *(_OWORD *)v8;
  }
  v10 = v8[2];
  if (v10)
  {
    v11 = v8[3];
    v7[2] = v10;
    v7[3] = v11;
    swift_retain();
  }
  else
  {
    *((_OWORD *)v7 + 1) = *((_OWORD *)v8 + 1);
  }
  v12 = v8[4];
  if (v12)
  {
    v13 = v8[5];
    v7[4] = v12;
    v7[5] = v13;
    swift_retain();
  }
  else
  {
    *((_OWORD *)v7 + 2) = *((_OWORD *)v8 + 2);
  }
  v14 = v8[6];
  if (v14)
  {
    v15 = v8[7];
    v7[6] = v14;
    v7[7] = v15;
    swift_retain();
  }
  else
  {
    *((_OWORD *)v7 + 3) = *((_OWORD *)v8 + 3);
  }
  v16 = v8[8];
  if (v16)
  {
    v17 = v8[9];
    v7[8] = v16;
    v7[9] = v17;
    swift_retain();
  }
  else
  {
    *((_OWORD *)v7 + 4) = *((_OWORD *)v8 + 4);
  }
  v18 = v8[10];
  if (v18)
  {
    v19 = v8[11];
    v7[10] = v18;
    v7[11] = v19;
    swift_retain();
  }
  else
  {
    *((_OWORD *)v7 + 5) = *((_OWORD *)v8 + 5);
  }
  v20 = v8[12];
  if (v20)
  {
    v21 = v8[13];
    v7[12] = v20;
    v7[13] = v21;
    swift_retain();
  }
  else
  {
    *((_OWORD *)v7 + 6) = *((_OWORD *)v8 + 6);
  }
  v22 = v8[14];
  if (v22)
  {
    v23 = v8[15];
    v7[14] = v22;
    v7[15] = v23;
    swift_retain();
  }
  else
  {
    *((_OWORD *)v7 + 7) = *((_OWORD *)v8 + 7);
  }
  v24 = v8[16];
  if (v24)
  {
    v25 = v8[17];
    v7[16] = v24;
    v7[17] = v25;
    swift_retain();
  }
  else
  {
    *((_OWORD *)v7 + 8) = *((_OWORD *)v8 + 8);
  }
  v26 = v8[18];
  if (v26)
  {
    v27 = v8[19];
    v7[18] = v26;
    v7[19] = v27;
    swift_retain();
  }
  else
  {
    *((_OWORD *)v7 + 9) = *((_OWORD *)v8 + 9);
  }
  return a1;
}

uint64_t sub_1D431D4B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = *v8;
  if (*v7)
  {
    if (v9)
    {
      v10 = v8[1];
      *v7 = v9;
      v7[1] = v10;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v9)
  {
    v11 = v8[1];
    *v7 = v9;
    v7[1] = v11;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)v7 = *(_OWORD *)v8;
LABEL_8:
  v12 = v8[2];
  if (v7[2])
  {
    if (v12)
    {
      v13 = v8[3];
      v7[2] = v12;
      v7[3] = v13;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v12)
  {
    v14 = v8[3];
    v7[2] = v12;
    v7[3] = v14;
    swift_retain();
    goto LABEL_15;
  }
  *((_OWORD *)v7 + 1) = *((_OWORD *)v8 + 1);
LABEL_15:
  v15 = v8[4];
  if (v7[4])
  {
    if (v15)
    {
      v16 = v8[5];
      v7[4] = v15;
      v7[5] = v16;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v15)
  {
    v17 = v8[5];
    v7[4] = v15;
    v7[5] = v17;
    swift_retain();
    goto LABEL_22;
  }
  *((_OWORD *)v7 + 2) = *((_OWORD *)v8 + 2);
LABEL_22:
  v18 = v8[6];
  if (v7[6])
  {
    if (v18)
    {
      v19 = v8[7];
      v7[6] = v18;
      v7[7] = v19;
      swift_retain();
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v18)
  {
    v20 = v8[7];
    v7[6] = v18;
    v7[7] = v20;
    swift_retain();
    goto LABEL_29;
  }
  *((_OWORD *)v7 + 3) = *((_OWORD *)v8 + 3);
LABEL_29:
  v21 = v8[8];
  if (v7[8])
  {
    if (v21)
    {
      v22 = v8[9];
      v7[8] = v21;
      v7[9] = v22;
      swift_retain();
      swift_release();
      goto LABEL_36;
    }
    swift_release();
  }
  else if (v21)
  {
    v23 = v8[9];
    v7[8] = v21;
    v7[9] = v23;
    swift_retain();
    goto LABEL_36;
  }
  *((_OWORD *)v7 + 4) = *((_OWORD *)v8 + 4);
LABEL_36:
  v24 = v8[10];
  if (v7[10])
  {
    if (v24)
    {
      v25 = v8[11];
      v7[10] = v24;
      v7[11] = v25;
      swift_retain();
      swift_release();
      goto LABEL_43;
    }
    swift_release();
  }
  else if (v24)
  {
    v26 = v8[11];
    v7[10] = v24;
    v7[11] = v26;
    swift_retain();
    goto LABEL_43;
  }
  *((_OWORD *)v7 + 5) = *((_OWORD *)v8 + 5);
LABEL_43:
  v27 = v8[12];
  if (v7[12])
  {
    if (v27)
    {
      v28 = v8[13];
      v7[12] = v27;
      v7[13] = v28;
      swift_retain();
      swift_release();
      goto LABEL_50;
    }
    swift_release();
  }
  else if (v27)
  {
    v29 = v8[13];
    v7[12] = v27;
    v7[13] = v29;
    swift_retain();
    goto LABEL_50;
  }
  *((_OWORD *)v7 + 6) = *((_OWORD *)v8 + 6);
LABEL_50:
  v30 = v8[14];
  if (v7[14])
  {
    if (v30)
    {
      v31 = v8[15];
      v7[14] = v30;
      v7[15] = v31;
      swift_retain();
      swift_release();
      goto LABEL_57;
    }
    swift_release();
  }
  else if (v30)
  {
    v32 = v8[15];
    v7[14] = v30;
    v7[15] = v32;
    swift_retain();
    goto LABEL_57;
  }
  *((_OWORD *)v7 + 7) = *((_OWORD *)v8 + 7);
LABEL_57:
  v33 = v8[16];
  if (v7[16])
  {
    if (v33)
    {
      v34 = v8[17];
      v7[16] = v33;
      v7[17] = v34;
      swift_retain();
      swift_release();
      goto LABEL_64;
    }
    swift_release();
  }
  else if (v33)
  {
    v35 = v8[17];
    v7[16] = v33;
    v7[17] = v35;
    swift_retain();
    goto LABEL_64;
  }
  *((_OWORD *)v7 + 8) = *((_OWORD *)v8 + 8);
LABEL_64:
  v36 = v8[18];
  if (!v7[18])
  {
    if (v36)
    {
      v38 = v8[19];
      v7[18] = v36;
      v7[19] = v38;
      swift_retain();
      return a1;
    }
LABEL_70:
    *((_OWORD *)v7 + 9) = *((_OWORD *)v8 + 9);
    return a1;
  }
  if (!v36)
  {
    swift_release();
    goto LABEL_70;
  }
  v37 = v8[19];
  v7[18] = v36;
  v7[19] = v37;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1D431D87C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  memcpy((void *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8), (const void *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFFFF8), 0xA0uLL);
  return a1;
}

uint64_t sub_1D431D8D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = *v8;
  if (*v7)
  {
    if (v9)
    {
      v10 = v8[1];
      *v7 = v9;
      v7[1] = v10;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v9)
  {
    v11 = v8[1];
    *v7 = v9;
    v7[1] = v11;
    goto LABEL_8;
  }
  *(_OWORD *)v7 = *(_OWORD *)v8;
LABEL_8:
  v12 = v8[2];
  if (v7[2])
  {
    if (v12)
    {
      v13 = v8[3];
      v7[2] = v12;
      v7[3] = v13;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v12)
  {
    v14 = v8[3];
    v7[2] = v12;
    v7[3] = v14;
    goto LABEL_15;
  }
  *((_OWORD *)v7 + 1) = *((_OWORD *)v8 + 1);
LABEL_15:
  v15 = v8[4];
  if (v7[4])
  {
    if (v15)
    {
      v16 = v8[5];
      v7[4] = v15;
      v7[5] = v16;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v15)
  {
    v17 = v8[5];
    v7[4] = v15;
    v7[5] = v17;
    goto LABEL_22;
  }
  *((_OWORD *)v7 + 2) = *((_OWORD *)v8 + 2);
LABEL_22:
  v18 = v8[6];
  if (v7[6])
  {
    if (v18)
    {
      v19 = v8[7];
      v7[6] = v18;
      v7[7] = v19;
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v18)
  {
    v20 = v8[7];
    v7[6] = v18;
    v7[7] = v20;
    goto LABEL_29;
  }
  *((_OWORD *)v7 + 3) = *((_OWORD *)v8 + 3);
LABEL_29:
  v21 = v8[8];
  if (v7[8])
  {
    if (v21)
    {
      v22 = v8[9];
      v7[8] = v21;
      v7[9] = v22;
      swift_release();
      goto LABEL_36;
    }
    swift_release();
  }
  else if (v21)
  {
    v23 = v8[9];
    v7[8] = v21;
    v7[9] = v23;
    goto LABEL_36;
  }
  *((_OWORD *)v7 + 4) = *((_OWORD *)v8 + 4);
LABEL_36:
  v24 = v8[10];
  if (v7[10])
  {
    if (v24)
    {
      v25 = v8[11];
      v7[10] = v24;
      v7[11] = v25;
      swift_release();
      goto LABEL_43;
    }
    swift_release();
  }
  else if (v24)
  {
    v26 = v8[11];
    v7[10] = v24;
    v7[11] = v26;
    goto LABEL_43;
  }
  *((_OWORD *)v7 + 5) = *((_OWORD *)v8 + 5);
LABEL_43:
  v27 = v8[12];
  if (v7[12])
  {
    if (v27)
    {
      v28 = v8[13];
      v7[12] = v27;
      v7[13] = v28;
      swift_release();
      goto LABEL_50;
    }
    swift_release();
  }
  else if (v27)
  {
    v29 = v8[13];
    v7[12] = v27;
    v7[13] = v29;
    goto LABEL_50;
  }
  *((_OWORD *)v7 + 6) = *((_OWORD *)v8 + 6);
LABEL_50:
  v30 = v8[14];
  if (v7[14])
  {
    if (v30)
    {
      v31 = v8[15];
      v7[14] = v30;
      v7[15] = v31;
      swift_release();
      goto LABEL_57;
    }
    swift_release();
  }
  else if (v30)
  {
    v32 = v8[15];
    v7[14] = v30;
    v7[15] = v32;
    goto LABEL_57;
  }
  *((_OWORD *)v7 + 7) = *((_OWORD *)v8 + 7);
LABEL_57:
  v33 = v8[16];
  if (v7[16])
  {
    if (v33)
    {
      v34 = v8[17];
      v7[16] = v33;
      v7[17] = v34;
      swift_release();
      goto LABEL_64;
    }
    swift_release();
  }
  else if (v33)
  {
    v35 = v8[17];
    v7[16] = v33;
    v7[17] = v35;
    goto LABEL_64;
  }
  *((_OWORD *)v7 + 8) = *((_OWORD *)v8 + 8);
LABEL_64:
  v36 = v8[18];
  if (!v7[18])
  {
    if (v36)
    {
      v38 = v8[19];
      v7[18] = v36;
      v7[19] = v38;
      return a1;
    }
LABEL_70:
    *((_OWORD *)v7 + 9) = *((_OWORD *)v8 + 9);
    return a1;
  }
  if (!v36)
  {
    swift_release();
    goto LABEL_70;
  }
  v37 = v8[19];
  v7[18] = v36;
  v7[19] = v37;
  swift_release();
  return a1;
}

uint64_t sub_1D431DC24(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;
  int v14;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFE)
    v7 = 2147483646;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFE)
    {
      v13 = *(_QWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      v14 = v13 - 1;
      if (v14 < 0)
        v14 = -1;
      return (v14 + 1);
    }
    else
    {
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v6, v4);
    }
  }
  else
  {
    if (((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 160) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1D431DCA0 + 4 * byte_1D452A1E0[v11]))();
  }
}

void sub_1D431DD28(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFEu)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFF60)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFF60)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 160);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1D431DE14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0x7FFFFFFE)
    {
      v8 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
      if (a2 > 0x7FFFFFFE)
      {
        *(_QWORD *)(v8 + 152) = 0;
        v9 = (a2 - 0x7FFFFFFF);
        *(_OWORD *)(v8 + 136) = 0u;
        *(_OWORD *)(v8 + 120) = 0u;
        *(_OWORD *)(v8 + 104) = 0u;
        *(_OWORD *)(v8 + 88) = 0u;
        *(_OWORD *)(v8 + 72) = 0u;
        *(_OWORD *)(v8 + 56) = 0u;
        *(_OWORD *)(v8 + 40) = 0u;
        *(_OWORD *)(v8 + 24) = 0u;
        *(_OWORD *)(v8 + 8) = 0u;
      }
      else
      {
        v9 = a2;
      }
      *(_QWORD *)v8 = v9;
    }
    else
    {
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v5, a2, a3, a4);
    }
  }
  return result;
}

uint64_t type metadata accessor for SnoopPublisher(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SnoopPublisher);
}

uint64_t sub_1D431DEE0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t *sub_1D431DEFC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = a1[2];
  v3 = a1[4];
  v4 = a1[6];
  v5 = a1[8];
  v6 = a1[10];
  v8 = a1[12];
  v9 = a1[14];
  v11 = a1[18];
  v10 = a1[16];
  sub_1D42E33B0(*a1);
  sub_1D42E33B0(v2);
  sub_1D42E33B0(v3);
  sub_1D42E33B0(v4);
  sub_1D42E33B0(v5);
  sub_1D42E33B0(v6);
  sub_1D42E33B0(v8);
  sub_1D42E33B0(v9);
  sub_1D42E33B0(v10);
  sub_1D42E33B0(v11);
  return a1;
}

uint64_t sub_1D431E014()
{
  uint64_t v0;

  return v0;
}

void *sub_1D431E028(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xA0uLL);
}

uint64_t sub_1D431E044(void *__src)
{
  _QWORD __dst[11];

  memcpy(__dst, __src, sizeof(__dst));
  return sub_1D431E088(__dst);
}

uint64_t sub_1D431E088(_QWORD *a1)
{
  _QWORD v2[3];
  uint64_t v3;

  v2[2] = &v3;
  return sub_1D431F264(a1, (uint64_t (*)(_QWORD *))sub_1D42BDEF4, (uint64_t)v2);
}

void sub_1D431E0BC()
{
  swift_getAssociatedTypeWitness();
  sub_1D43210F4();
  sub_1D43210F4();
  sub_1D43210F4();
  sub_1D4320130();
}

void sub_1D431E188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[6];

  sub_1D42BE910();
  v1 = v0;
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v8, v7);
  sub_1D42BA260();
  v9();
  v10 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v3;
  *(_QWORD *)(v11 + 24) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v11 + v10, (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  sub_1D42BA260();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = sub_1D42BE7A0();
  v14 = sub_1D42BE7A0();
  v15 = sub_1D42BE7A0();
  v16[2] = AssociatedTypeWitness;
  v16[3] = v13;
  v16[4] = v14;
  v16[5] = v15;
  sub_1D43211C4();
}

void sub_1D431E2A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for SharedSoundPrintA.Instance();
  v7 = MEMORY[0x1D825E41C](&unk_1D452A4D8, a1);
  sub_1D44782C4(v1, v3, (uint64_t)sub_1D42BE178, v2, a1, v6, v7, v4 - 72);
  swift_release();
  swift_release();
  sub_1D42BE844();
}

uint64_t sub_1D431E318()
{
  sub_1D451A614();
  sub_1D451B964();
  return sub_1D451B964();
}

uint64_t sub_1D431E36C()
{
  if ((sub_1D451A698() & 1) != 0)
    type metadata accessor for SharedSoundPrintA.Configuration();
  return 0;
}

uint64_t sub_1D431E404(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000018 && a2 == 0x80000001D45507C0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D45527D0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D45527F0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1D431E548(char a1)
{
  if (!a1)
    return 0xD000000000000018;
  if (a1 == 1)
    return 0xD000000000000016;
  return 0xD000000000000013;
}

void sub_1D431E5A4()
{
  sub_1D42BE910();
  sub_1D4321204();
}

void sub_1D431E5DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  MEMORY[0x1D825E41C](&unk_1D452A650, a1);
  v11 = sub_1D451B7A8();
  v12 = *(_QWORD *)(v11 - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&a9 - v14;
  sub_1D42B5528(v9, v9[3]);
  sub_1D451BA24();
  *(_BYTE *)(v10 - 112) = 0;
  v16 = *(_QWORD *)(v10 - 72);
  sub_1D451B760();
  if (!v16)
  {
    sub_1D4321118(1);
    sub_1D4321118(2);
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  sub_1D42BE844();
}

uint64_t sub_1D431E6E4()
{
  sub_1D451B958();
  sub_1D431E318();
  return sub_1D451B994();
}

void sub_1D431E728(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for SharedSoundPrintA.Configuration();
}

uint64_t sub_1D431E78C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + *(int *)(result + 52)) = v2;
  *(_QWORD *)(v3 + *(int *)(result + 56)) = v1;
  return result;
}

void sub_1D431E7B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D42BE910();
  v3 = v0;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v1);
  sub_1D4321160(v2, v3);
  sub_1D4321204();
}

void sub_1D431E814(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  MEMORY[0x1D825E41C](&unk_1D452A650, a1);
  sub_1D42BA260();
  v6 = sub_1D451B6E8();
  *(_QWORD *)(v5 - 136) = v6;
  *(_QWORD *)(v5 - 168) = *(_QWORD *)(v6 - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v7);
  *(_QWORD *)(v5 - 152) = v4;
  *(_QWORD *)(v5 - 144) = v1;
  *(_QWORD *)(v5 - 112) = v1;
  *(_QWORD *)(v5 - 104) = v4;
  *(_QWORD *)(v5 - 96) = v2;
  *(_QWORD *)(v5 - 88) = v3;
  sub_1D43211C4();
}

void sub_1D431E878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v13 = *(_QWORD *)(a1 - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&a9 - v15;
  sub_1D42B5528(v9, v9[3]);
  *(_QWORD *)(v11 - 120) = v10;
  sub_1D42BA260();
  v17 = *(_QWORD *)(v11 - 72);
  sub_1D451BA0C();
  if (v17)
  {
    sub_1D42B5400((uint64_t)v9);
  }
  else
  {
    *(_QWORD *)(v11 - 72) = v13;
    v18 = v16;
    v19 = *(_QWORD *)(v11 - 160);
    *(_BYTE *)(v11 - 112) = 0;
    v20 = *(_QWORD *)(v11 - 144);
    sub_1D451B688();
    (*(void (**)(char *, _QWORD, uint64_t))(v19 + 32))(v18, *(_QWORD *)(v11 - 128), v20);
    *(_QWORD *)&v18[*(int *)(a1 + 52)] = sub_1D4321130(1);
    v21 = sub_1D4321130(2);
    sub_1D4321108(*(_QWORD *)(v11 - 168));
    *(_QWORD *)&v18[*(int *)(a1 + 56)] = v21;
    v22 = *(_QWORD *)(v11 - 72);
    (*(void (**)(_QWORD, char *, uint64_t))(v22 + 16))(*(_QWORD *)(v11 - 176), v18, a1);
    sub_1D42B5400((uint64_t)v9);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v18, a1);
  }
  sub_1D42BE844();
}

BOOL sub_1D431E9E4(char *a1, char *a2)
{
  return sub_1D42C4318(*a1, *a2);
}

uint64_t sub_1D431E9FC()
{
  return sub_1D42CD7A8();
}

uint64_t sub_1D431EA0C()
{
  return sub_1D42C4328();
}

uint64_t sub_1D431EA1C()
{
  sub_1D451B958();
  sub_1D42C4328();
  return sub_1D451B994();
}

unint64_t sub_1D431EA64()
{
  char *v0;

  return sub_1D431E548(*v0);
}

uint64_t sub_1D431EA74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D431E404(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D431EAA4()
{
  return sub_1D42BA688();
}

uint64_t sub_1D431EAC8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D42C44B8();
  *a1 = result;
  return result;
}

uint64_t sub_1D431EAF8(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D452A650, a1);
  return sub_1D451BA3C();
}

uint64_t sub_1D431EB2C(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D452A650, a1);
  return sub_1D451BA48();
}

void sub_1D431EB60()
{
  sub_1D431E7B8();
}

void sub_1D431EB80()
{
  sub_1D431E5A4();
}

uint64_t sub_1D431EB9C()
{
  sub_1D451B958();
  sub_1D431E318();
  return sub_1D451B994();
}

uint64_t sub_1D431EBDC()
{
  return sub_1D431E36C();
}

uint64_t sub_1D431EBEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = sub_1D42B28FC(&qword_1EFE496F0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  sub_1D42BE8F8();
  v3 = *(_QWORD *)(v0 + 16);
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = sub_1D42BE1BC;
  v4[3] = v0;
  v4[4] = v3;
  swift_retain();
  swift_retain();
  sub_1D42B28FC((uint64_t *)&unk_1EFE4C9F0);
  sub_1D42BE210((unint64_t *)&unk_1EFE4F850, (uint64_t *)&unk_1EFE4C9F0, MEMORY[0x1E0C95D90]);
  sub_1D451A2C0();
  sub_1D42BE210(qword_1EFE496F8, &qword_1EFE496F0, MEMORY[0x1E0C96148]);
  v5 = sub_1D451A2E4();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  return v5;
}

uint64_t type metadata accessor for SharedSoundPrintA.Instance()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for SharedSoundPrintA()
{
  return &type metadata for SharedSoundPrintA;
}

uint64_t sub_1D431ED44()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D431EDC0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    *v10 = *v11;
    *(_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_1D431EE88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  *(_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D431EEF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  *(_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D431EF60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  *(_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D431EFCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  *(_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D431F038(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 >= a2)
  {
    if ((_DWORD)v6)
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v6, v4);
    return 0;
  }
  if (((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
    v7 = 2;
  else
    v7 = a2 - v6 + 1;
  if (v7 >= 0x10000)
    v8 = 4;
  else
    v8 = 2;
  if (v7 < 0x100)
    v8 = 1;
  if (v7 >= 2)
    v9 = v8;
  else
    v9 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1D431F0B0 + 4 * byte_1D452A3E0[v9]))();
}

void sub_1D431F104(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 >= a3)
  {
    v12 = 0u;
  }
  else
  {
    v9 = a3 - v7;
    if (((((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
  }
  if (a2 > v7)
  {
    if ((_DWORD)v8)
    {
      v13 = ~v7 + a2;
      bzero(a1, v8);
      *a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t sub_1D431F1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  *(_BYTE *)(v4 + v5) = 0;
  if ((_DWORD)a2)
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v4, a2, a3, a4);
  return result;
}

void sub_1D431F228(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_WORD *)(v2 + v3) = 0;
  if (!a2)
    JUMPOUT(0x1D431F230);
  JUMPOUT(0x1D431F210);
}

void type metadata accessor for SharedSoundPrintA.Configuration()
{
  JUMPOUT(0x1D825E3A4);
}

void sub_1D431F254()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D431F264(_QWORD *a1, uint64_t (*a2)(_QWORD *), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  double v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t result;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  id v44;
  void *v45;
  void *v46;
  uint64_t (*v47)(uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t (*v83)(_QWORD *);
  _QWORD __dst[11];
  uint64_t v85;

  v82 = a3;
  v83 = a2;
  v4 = sub_1D42B28FC(&qword_1EFE49680);
  v76 = *(_QWORD *)(v4 - 8);
  v77 = v4;
  MEMORY[0x1E0C80A78](v4);
  v81 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_1D42B28FC(&qword_1EFE49678);
  MEMORY[0x1E0C80A78](v79);
  v78 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D42B28FC(&qword_1EFE4B950);
  v74 = *(_QWORD *)(v7 - 8);
  v75 = v7;
  MEMORY[0x1E0C80A78](v7);
  v80 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_1D42B28FC(&qword_1EFE4B958);
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v68 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_1D42B28FC(&qword_1EFE557A0);
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v71 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D42B28FC(&qword_1EFE4B960);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1D4519D20();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  sub_1D42B5B38((uint64_t)a1);
  LODWORD(v20) = 1182400512;
  v21 = objc_msgSend(v19, sel_initWithFloat_, v20);
  v22 = v85;
  sub_1D4443168();
  if (v22)
  {
    sub_1D42BDEAC((uint64_t)a1);

    return v11;
  }
  v63 = v14;
  v64 = v12;
  v65 = v11;
  v67 = v18;
  v66 = v16;
  v85 = v15;
  memcpy(__dst, a1, 0x41uLL);
  v23 = objc_msgSend(v21, sel_integerValue);

  __dst[9] = 1;
  __dst[10] = v23;
  v24 = v83(__dst);
  sub_1D42BDEAC((uint64_t)a1);
  sub_1D4519D14();
  __dst[0] = sub_1D4398FE0();
  sub_1D42B28FC((uint64_t *)&unk_1EFE4ACD0);
  v25 = sub_1D42B28FC(&qword_1EFE4C9D0);
  sub_1D42BE210(&qword_1EFE496A0, (uint64_t *)&unk_1EFE4ACD0, MEMORY[0x1E0C95D90]);
  v26 = v81;
  v83 = (uint64_t (*)(_QWORD *))v25;
  sub_1D451A308();
  result = swift_release();
  v28 = a1[9];
  v29 = __OFSUB__(v28, 1);
  v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
    goto LABEL_10;
  }
  v31 = (unsigned __int128)(v30 * (__int128)160) >> 64;
  v32 = 160 * v30;
  v33 = (int *)v79;
  v34 = v80;
  v36 = v77;
  v35 = (uint64_t)v78;
  if (v31 != v32 >> 63)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v37 = v32 + 512;
  if (__OFADD__(v32, 512))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v82 = v24;
  v38 = a1[10];
  v39 = 160 * v38;
  if ((unsigned __int128)(v38 * (__int128)160) >> 64 == (160 * v38) >> 63)
  {
    v40 = v26;
    v41 = v26;
    v42 = v76;
    (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v78, v40, v77);
    *(_QWORD *)(v35 + v33[15]) = v37;
    *(_QWORD *)(v35 + v33[16]) = v39;
    *(_QWORD *)(v35 + v33[17]) = v83;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v36);
    sub_1D42B28FC(&qword_1EFE4C970);
    sub_1D42BE210(&qword_1EFE4B968, &qword_1EFE49678, (uint64_t)&unk_1D4535888);
    v43 = v34;
    sub_1D451A308();
    sub_1D42BDFDC(v35, &qword_1EFE49678);
    v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E958]), sel_init);
    sub_1D439C424(34, v44);
    v46 = v45;

    v47 = sub_1D4320BDC(v46);
    v49 = v48;
    v50 = swift_allocObject();
    v51 = v75;
    *(_QWORD *)(v50 + 16) = v47;
    *(_QWORD *)(v50 + 24) = v49;
    sub_1D42BE210(&qword_1EFE4B970, &qword_1EFE4B950, MEMORY[0x1E0C95950]);
    swift_retain();
    v52 = v68;
    sub_1D451A3A4();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v43, v51);
    swift_unknownObjectRelease();
    sub_1D42B28FC((uint64_t *)&unk_1EFE4A660);
    sub_1D42BE210(&qword_1EFE4B978, &qword_1EFE4B958, MEMORY[0x1E0C95B48]);
    v53 = v71;
    v54 = v70;
    sub_1D451A308();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v52, v54);
    __dst[0] = 0;
    __dst[1] = 0xE000000000000000;
    sub_1D451B400();
    swift_bridgeObjectRelease();
    __dst[0] = 0xD000000000000019;
    __dst[1] = 0x80000001D45527B0;
    sub_1D42BDF9C();
    v55 = v67;
    v56 = v85;
    sub_1D451B7C0();
    sub_1D451A794();
    swift_bridgeObjectRelease();
    sub_1D451A794();
    v57 = v63;
    sub_1D44A46CC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v53, v73);
    sub_1D42BE210(&qword_1EFE4B980, &qword_1EFE4B960, MEMORY[0x1E0C957C0]);
    v58 = v65;
    v59 = sub_1D451A374();
    sub_1D42B28FC(&qword_1EFE4B988);
    swift_allocObject();
    v60 = sub_1D43AEFD8(v59);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v57, v58);
    __dst[0] = v60;
    sub_1D42BE210(&qword_1EFE4B990, &qword_1EFE4B988, (uint64_t)&unk_1D4537AC0);
    v61 = sub_1D451A2E4();
    swift_release();
    swift_release();
    type metadata accessor for SharedSoundPrintA.Instance();
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v61;
    (*(void (**)(char *, uint64_t))(v66 + 8))(v55, v56);
    return v11;
  }
LABEL_12:
  __break(1u);
  return result;
}

void sub_1D431FA90()
{
  uint64_t v0;
  void (*v1)(uint64_t *);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  double v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  id v32;
  void *v33;
  void *v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  void (*v63)(uint64_t *);
  uint64_t v64;

  sub_1D42BE910();
  v63 = v1;
  v53 = v2;
  v58 = v3;
  v4 = sub_1D42B28FC(&qword_1EFE49680);
  v54 = *(_QWORD *)(v4 - 8);
  v55 = v4;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D4321160(v6, v44);
  v57 = (int *)sub_1D42B28FC(&qword_1EFE49678);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42BE768();
  v56 = v8;
  v9 = sub_1D42B28FC(&qword_1EFE4B950);
  v51 = *(_QWORD *)(v9 - 8);
  v52 = v9;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v10);
  sub_1D42BE768();
  v60 = v11;
  v48 = sub_1D42B28FC(&qword_1EFE4B958);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v12);
  sub_1D42BE768();
  v13 = sub_1D42B28FC(&qword_1EFE557A0);
  v49 = *(_QWORD *)(v13 - 8);
  v50 = v13;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v14);
  sub_1D42CB210();
  v17 = v16 - v15;
  v18 = sub_1D42B28FC(&qword_1EFE4B960);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  sub_1D42CB210();
  v22 = v21 - v20;
  v23 = sub_1D4519D20();
  MEMORY[0x1E0C80A78](v23);
  sub_1D42CB210();
  v24 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  v26 = sub_1D43211B8(v24, sel_initWithFloat_, v25);
  sub_1D4443168();
  if (v0)
  {

LABEL_9:
    sub_1D42BE844();
    return;
  }
  v45 = v17;
  v46 = v22;
  v47 = v23;
  v27 = objc_msgSend(v26, sel_integerValue);

  v61 = 1;
  v62 = (unint64_t)v27;
  v63(&v61);
  sub_1D4519D14();
  v61 = sub_1D4398FE0();
  sub_1D42B28FC((uint64_t *)&unk_1EFE4ACD0);
  v28 = sub_1D42B28FC(&qword_1EFE4C9D0);
  sub_1D42BE210(&qword_1EFE496A0, (uint64_t *)&unk_1EFE4ACD0, MEMORY[0x1E0C95D90]);
  sub_1D43211D4();
  sub_1D42EA1BC();
  if (__OFSUB__(v58, 1))
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v64 = v28;
  sub_1D43211A0();
  if (!v30)
    goto LABEL_11;
  v31 = v29 + 512;
  if (__OFADD__(v29, 512))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if ((unsigned __int128)(v53 * (__int128)160) >> 64 == (160 * v53) >> 63)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v56, v59, v55);
    *(_QWORD *)(v56 + v57[15]) = v31;
    *(_QWORD *)(v56 + v57[16]) = 160 * v53;
    *(_QWORD *)(v56 + v57[17]) = v64;
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v59, v55);
    sub_1D42B28FC(&qword_1EFE4C970);
    sub_1D42BE210(&qword_1EFE4B968, &qword_1EFE49678, (uint64_t)&unk_1D4535888);
    sub_1D43211D4();
    sub_1D42BDFDC(v56, &qword_1EFE49678);
    v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E958]), sel_init);
    sub_1D439C424(34, v32);
    v34 = v33;

    v35 = sub_1D4320BDC(v34);
    v37 = v36;
    v38 = sub_1D42B8DB4();
    *(_QWORD *)(v38 + 16) = v35;
    *(_QWORD *)(v38 + 24) = v37;
    sub_1D42BE210(&qword_1EFE4B970, &qword_1EFE4B950, MEMORY[0x1E0C95950]);
    swift_retain();
    sub_1D451A3A4();
    swift_release();
    sub_1D42EA1BC();
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v60, v52);
    swift_unknownObjectRelease();
    sub_1D42B28FC((uint64_t *)&unk_1EFE4A660);
    sub_1D42BE210(&qword_1EFE4B978, &qword_1EFE4B958, MEMORY[0x1E0C95B48]);
    sub_1D451A308();
    v39 = sub_1D432117C();
    v40(v39, v48);
    v61 = 0;
    v62 = 0xE000000000000000;
    sub_1D451B400();
    swift_bridgeObjectRelease();
    v61 = 0xD000000000000019;
    v62 = 0x80000001D45527B0;
    sub_1D42BDF9C();
    sub_1D451B7C0();
    sub_1D451A794();
    sub_1D42BE8B4();
    sub_1D42E3FE0();
    sub_1D44A46CC();
    sub_1D42BE8B4();
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v45, v50);
    sub_1D42BE210(&qword_1EFE4B980, &qword_1EFE4B960, MEMORY[0x1E0C957C0]);
    sub_1D451A374();
    sub_1D42B28FC(&qword_1EFE4B988);
    sub_1D42B8DB4();
    v41 = sub_1D43211F8();
    sub_1D43211E8(v46, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
    v61 = v41;
    sub_1D42BE210(&qword_1EFE4B990, &qword_1EFE4B988, (uint64_t)&unk_1D4537AC0);
    sub_1D451A2E4();
    sub_1D42EA240();
    sub_1D43211F0();
    v42 = sub_1D432117C();
    v43(v42, v47);
    type metadata accessor for SharedSoundPrintA.Instance();
    *(_QWORD *)(sub_1D43211DC() + 16) = &v61;
    goto LABEL_9;
  }
LABEL_13:
  __break(1u);
}

void sub_1D4320130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1D42BE910();
  sub_1D42B28FC(&qword_1EFE49680);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v0);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE49678);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v1);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE4B950);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v2);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE4B958);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v3);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE557A0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE4B960);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42BE768();
  v7 = sub_1D4519D20();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42CB210();
  MEMORY[0x1E0C80A78](v6);
  sub_1D42BE8F8();
  type metadata accessor for SharedReformattedAudioSource.Configuration();
}

void sub_1D432031C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  id v21;
  double v22;
  id v23;
  uint64_t v24;

  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&a9 - v17;
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  v20 = *(_QWORD *)(v14 - 72);
  *(_QWORD *)(v14 - 128) = v10;
  v19(v9, v20, v10);
  v21 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  v23 = sub_1D43211B8(v21, sel_initWithFloat_, v22);
  v24 = *(_QWORD *)(v14 - 136);
  sub_1D4443168();
  if (!v24)
  {
    *(_QWORD *)(v14 - 136) = a1;
    *(_QWORD *)(v14 - 328) = v12;
    *(_QWORD *)(v14 - 336) = v11;
    objc_msgSend(v23, sel_integerValue);

    sub_1D4398F50(v9, *(_QWORD *)(v14 - 128), (uint64_t)v18);
  }
  (*(void (**)(uint64_t, _QWORD))(v13 + 8))(v9, *(_QWORD *)(v14 - 128));

  sub_1D42BE844();
}

uint64_t sub_1D43208F4(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t result;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  sub_1D42B28FC((uint64_t *)&unk_1EFE403A0);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1D4526260;
  *(int64x2_t *)(result + 32) = vdupq_n_s64(1uLL);
  if (__OFSUB__(v2 >> 1, v1))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(result + 48) = (v2 >> 1) - v1;
    swift_unknownObjectRetain();
    sub_1D42B28FC(&qword_1EFE4C9D0);
    sub_1D42BE210((unint64_t *)&unk_1EFE4A680, &qword_1EFE4C9D0, (uint64_t)&unk_1D4547320);
    return sub_1D451A038();
  }
  return result;
}

uint64_t sub_1D43209D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1D42B28FC(&qword_1EFE4C970);
  sub_1D42BE210(&qword_1EFE4B998, &qword_1EFE4C970, MEMORY[0x1E0C9E6C8]);
  result = sub_1D451A068();
  *a1 = result;
  return result;
}

void sub_1D4320A38()
{
  sub_1D42BE964();
  MEMORY[0x1D825E41C](&unk_1D452B838);
  sub_1D4321148();
}

void sub_1D4320A5C()
{
  sub_1D42BE958();
}

void sub_1D4320A64(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;

  v4 = sub_1D42B28FC(&qword_1EFE4B9A0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)sub_1D451A6C8();
  v8 = objc_msgSend(a1, sel_featureValueForName_, v7);

  if (v8)
  {
    if (objc_msgSend(v8, sel_type) != (id)5)
    {
LABEL_5:
      sub_1D4320F00();
      swift_allocError();
      *v10 = 1;
      swift_willThrow();

      return;
    }
    sub_1D451AF80();
    v9 = sub_1D42B28FC(&qword_1EFE4C970);
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v6, 1, v9) == 1)
    {
      sub_1D42BDFDC((uint64_t)v6, &qword_1EFE4B9A0);
      goto LABEL_5;
    }

    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a2, v6, v9);
  }
  else
  {
    __break(1u);
  }
}

uint64_t (*sub_1D4320BDC(void *a1))(uint64_t a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t (*v6)(uint64_t);
  id v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v3 = objc_msgSend(a1, sel_modelDescription);
  v4 = sub_1D43967BC(v3);
  v6 = v5;

  if (!v1)
  {
    v7 = objc_msgSend(a1, sel_modelDescription);
    v9 = sub_1D43967D8(v7);
    v11 = v10;

    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v4;
    *(_QWORD *)(v12 + 24) = v6;
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = a1;
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = v9;
    *(_QWORD *)(v14 + 24) = v11;
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = sub_1D4320E98;
    v15[3] = v14;
    v15[4] = sub_1D4320E5C;
    v15[5] = v13;
    v15[6] = sub_1D4320E20;
    v15[7] = v12;
    v6 = sub_1D4320EE0;
    swift_unknownObjectRetain();
  }
  return v6;
}

uint64_t sub_1D4320D38(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(void))
{
  uint64_t v6;
  uint64_t result;
  uint64_t v10;

  result = a6();
  if (!v6)
  {
    v10 = a4();
    swift_unknownObjectRelease();
    a2(v10);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1D4320DD4()
{
  sub_1D42BE964();
  MEMORY[0x1D825E41C](&unk_1D4545864);
  sub_1D4321148();
}

void sub_1D4320DF8()
{
  sub_1D42BE958();
}

uint64_t sub_1D4320E00()
{
  sub_1D42B8F98();
  return swift_deallocObject();
}

id sub_1D4320E20(uint64_t a1)
{
  uint64_t v1;

  return sub_1D4392710(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1D4320E38()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

id sub_1D4320E5C(uint64_t a1)
{
  uint64_t v1;

  return sub_1D43969A8(a1, *(void **)(v1 + 16));
}

uint64_t sub_1D4320E74()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1D4320E98(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1D4320A64(a1, a2);
}

uint64_t sub_1D4320EB0()
{
  sub_1D42B8F98();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D4320EE0(uint64_t a1)
{
  uint64_t v1;

  return sub_1D4320D38(a1, *(void (**)(uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(void))(v1 + 32), *(_QWORD *)(v1 + 40), *(uint64_t (**)(void))(v1 + 48));
}

unint64_t sub_1D4320F00()
{
  unint64_t result;

  result = qword_1EFE4B9A8[0];
  if (!qword_1EFE4B9A8[0])
  {
    result = MEMORY[0x1D825E41C](&unk_1D4533664, &type metadata for SNCoreMLError);
    atomic_store(result, qword_1EFE4B9A8);
  }
  return result;
}

void sub_1D4320F3C()
{
  sub_1D44A5684();
}

uint64_t sub_1D4320F54(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t sub_1D4320F64()
{
  sub_1D42B8F98();
  swift_release();
  return swift_deallocObject();
}

void sub_1D4320F8C()
{
  sub_1D4320F3C();
}

uint64_t sub_1D4320F98()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

void type metadata accessor for SharedSoundPrintA.Configuration.CodingKeys()
{
  JUMPOUT(0x1D825E3A4);
}

uint64_t sub_1D4320FFC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D4321048 + 4 * byte_1D452A3F4[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D432107C + 4 * byte_1D452A3EF[v4]))();
}

uint64_t sub_1D432107C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4321084(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D432108CLL);
  return result;
}

uint64_t sub_1D4321098(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D43210A0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D43210A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43210AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1D43210B8()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D43210C8()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D43210D8()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D43210F4()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1D4321108@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(a1 + 8))(*(_QWORD *)(v2 - 120), v1);
}

uint64_t sub_1D4321118@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 112) = a1;
  return sub_1D451B754();
}

uint64_t sub_1D4321130@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 112) = a1;
  return sub_1D451B67C();
}

void sub_1D4321148()
{
  sub_1D431E0BC();
}

void sub_1D4321160(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1D432117C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4321188()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 328);
}

id sub_1D43211B8(id a1, SEL a2, double a3)
{
  LODWORD(a3) = 1182400512;
  return objc_msgSend(a1, a2, a3);
}

void sub_1D43211C4()
{
  type metadata accessor for SharedSoundPrintA.Configuration();
}

uint64_t sub_1D43211CC()
{
  return swift_release();
}

uint64_t sub_1D43211D4()
{
  return sub_1D451A308();
}

uint64_t sub_1D43211DC()
{
  return swift_allocObject();
}

uint64_t sub_1D43211E8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_1D43211F0()
{
  return swift_release();
}

uint64_t sub_1D43211F8()
{
  uint64_t v0;

  return sub_1D43AEFD8(v0);
}

void sub_1D4321204()
{
  type metadata accessor for SharedSoundPrintA.Configuration.CodingKeys();
}

uint64_t sub_1D4321210()
{
  uint64_t v0;
  uint64_t v1;

  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1D4471380();
  v1 = v0;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

void sub_1D43212B4()
{
  sub_1D43AC99C((void (*)(uint64_t))sub_1D4328AC0);
}

void sub_1D43212E8()
{
  swift_retain();
  swift_retain();
  sub_1D447139C();
}

uint64_t sub_1D4321330(uint64_t a1)
{
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_1D4321364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = swift_retain();
  sub_1D43ADFE8(v0, (void (*)(void))sub_1D4328A88);
  v2 = v1;
  swift_release();
  return v2;
}

void sub_1D43213CC()
{
  swift_retain();
  swift_retain();
  sub_1D44713B8();
}

uint64_t sub_1D4321414(uint64_t a1)
{
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_1D4321448(uint64_t a1)
{
  return sub_1D43AC2A8(a1);
}

void sub_1D432146C()
{
  sub_1D43212B4();
}

uint64_t sub_1D432148C()
{
  return sub_1D4321210();
}

uint64_t AOPClassificationDemo.Request.init(modelURL:enablePostProcessing:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t result;

  sub_1D43214E0(a1, a3);
  result = sub_1D4328B48();
  *(_BYTE *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t sub_1D43214E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D42B28FC(qword_1EFE47450);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for AOPClassificationDemo.Request()
{
  uint64_t result;

  result = qword_1EFE4BA80;
  if (!qword_1EFE4BA80)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t AOPClassificationDemo.Request.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_1D42CB348();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1D42D7108();
  sub_1D42B28FC(qword_1EFE47450);
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42BE8F8();
  sub_1D4328B7C(v0);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v0, 1, v2) == 1)
  {
    sub_1D4328B84();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v0, v2);
    sub_1D4328B84();
    sub_1D43287AC(&qword_1EFE49A80, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1D451A614();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  }
  sub_1D4328B48();
  return sub_1D4328B84();
}

uint64_t sub_1D4321670(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D42B28FC(qword_1EFE47450);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static AOPClassificationDemo.Request.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  char v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  char v24;
  uint64_t v26;

  v6 = sub_1D42CB348();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1D42D7108();
  v8 = sub_1D42B28FC(&qword_1EFE4BA30);
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v9);
  sub_1D42CB18C();
  sub_1D42B28FC(qword_1EFE47450);
  sub_1D42CB790();
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v26 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v26 - v17;
  sub_1D4321670(a1, (uint64_t)&v26 - v17);
  sub_1D4321670(a2, (uint64_t)v16);
  v19 = v2 + *(int *)(v8 + 48);
  sub_1D4321670((uint64_t)v18, v2);
  sub_1D4321670((uint64_t)v16, v19);
  sub_1D4328B50(v2);
  if (!v20)
  {
    sub_1D4321670(v2, (uint64_t)v13);
    sub_1D4328B50(v19);
    if (!v20)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v3, v19, v6);
      sub_1D43287AC(&qword_1EFE4AE68, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      v21 = sub_1D451A698();
      v22 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v22(v3, v6);
      sub_1D4328B2C((uint64_t)v16);
      sub_1D4328B2C((uint64_t)v18);
      v22((uint64_t)v13, v6);
      sub_1D4328B2C(v2);
      if ((v21 & 1) != 0)
        goto LABEL_11;
LABEL_12:
      v24 = 0;
      return v24 & 1;
    }
    sub_1D4328A1C((uint64_t)v16, qword_1EFE47450);
    sub_1D4328A1C((uint64_t)v18, qword_1EFE47450);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_9:
    sub_1D4328A1C(v2, &qword_1EFE4BA30);
    goto LABEL_12;
  }
  sub_1D4328B2C((uint64_t)v16);
  sub_1D4328B2C((uint64_t)v18);
  sub_1D4328B50(v19);
  if (!v20)
    goto LABEL_9;
  sub_1D4328A1C(v2, qword_1EFE47450);
LABEL_11:
  v23 = sub_1D4328B48();
  v24 = *(_BYTE *)(a1 + *(int *)(v23 + 20)) ^ *(_BYTE *)(a2 + *(int *)(v23 + 20)) ^ 1;
  return v24 & 1;
}

uint64_t sub_1D4321938(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4C52556C65646F6DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D4552810)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D4321A24(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000014;
  else
    return 0x4C52556C65646F6DLL;
}

uint64_t sub_1D4321A60()
{
  char *v0;

  return sub_1D4321A24(*v0);
}

uint64_t sub_1D4321A68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D4321938(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D4321A8C()
{
  sub_1D4321C18();
  return sub_1D451BA3C();
}

uint64_t sub_1D4321AB4()
{
  sub_1D4321C18();
  return sub_1D451BA48();
}

uint64_t AOPClassificationDemo.Request.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1D42B28FC(&qword_1EFE4BA38);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB18C();
  sub_1D42B5528(a1, a1[3]);
  sub_1D4321C18();
  sub_1D451BA24();
  sub_1D42CB348();
  sub_1D43287AC(qword_1EFE49980, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  sub_1D451B718();
  if (!v1)
  {
    type metadata accessor for AOPClassificationDemo.Request();
    sub_1D451B730();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

unint64_t sub_1D4321C18()
{
  unint64_t result;

  result = qword_1EFE4BA40;
  if (!qword_1EFE4BA40)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452A9B8, &type metadata for AOPClassificationDemo.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4BA40);
  }
  return result;
}

uint64_t AOPClassificationDemo.Request.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_1D42CB348();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1D42CB18C();
  sub_1D42B28FC(qword_1EFE47450);
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42BE8F8();
  sub_1D451B958();
  sub_1D4328B7C(v0);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v0, 1, v2) == 1)
  {
    sub_1D451B970();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v0, v2);
    sub_1D451B970();
    sub_1D43287AC(&qword_1EFE49A80, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1D451A614();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  }
  sub_1D4328B48();
  sub_1D451B970();
  return sub_1D451B994();
}

void AOPClassificationDemo.Request.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  uint64_t v15;

  sub_1D42B28FC(qword_1EFE47450);
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB210();
  v15 = v6 - v5;
  v14 = sub_1D42B28FC(&qword_1EFE4BA48);
  MEMORY[0x1E0C80A78](v14);
  sub_1D42CB210();
  v7 = type metadata accessor for AOPClassificationDemo.Request();
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v8);
  sub_1D42CB210();
  v11 = v10 - v9;
  sub_1D42B5528(a1, a1[3]);
  sub_1D4321C18();
  sub_1D451BA0C();
  if (v2)
  {
    sub_1D42BE944();
  }
  else
  {
    sub_1D42CB348();
    sub_1D43287AC(qword_1EFE49960, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1D451B640();
    sub_1D43214E0(v15, v11);
    v12 = sub_1D451B658();
    sub_1D4328B6C();
    *(_BYTE *)(v11 + *(int *)(v7 + 20)) = v12 & 1;
    sub_1D432211C(v11, a2);
    sub_1D42BE944();
    sub_1D4325D80(v11, (uint64_t (*)(_QWORD))type metadata accessor for AOPClassificationDemo.Request);
  }
}

void sub_1D4321F84(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  AOPClassificationDemo.Request.init(from:)(a1, a2);
}

uint64_t sub_1D4321F98(_QWORD *a1)
{
  return AOPClassificationDemo.Request.encode(to:)(a1);
}

uint64_t sub_1D4321FB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_1D4519BC4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D42B28FC(qword_1EFE47450);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D451B958();
  sub_1D4321670(v1, (uint64_t)v8);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v8, 1, v2) == 1)
  {
    sub_1D451B970();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1D451B970();
    sub_1D43287AC(&qword_1EFE49A80, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1D451A614();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_1D451B970();
  return sub_1D451B994();
}

uint64_t sub_1D432211C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AOPClassificationDemo.Request();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t AOPClassificationDemo.Session.classificationResults.getter()
{
  return swift_retain();
}

uint64_t sub_1D432216C()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD v3[5];

  v1 = *v0;
  sub_1D447DAC4();
  v3[3] = sub_1D42B28FC(&qword_1EFE4BB40);
  v3[4] = sub_1D4328748();
  v3[0] = v1;
  swift_retain();
  sub_1D447DAE0(v3);
  swift_release();
  return sub_1D42B5400((uint64_t)v3);
}

uint64_t sub_1D43221F0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v2[2] = a1;
  v2[3] = a2;
  swift_retain();
  v3 = (_QWORD *)swift_task_alloc();
  v2[4] = v3;
  *v3 = v2;
  v3[1] = sub_1D4322248;
  return sub_1D43768A8();
}

uint64_t sub_1D4322248()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v7;
  uint64_t (*v8)(void);

  sub_1D430C4B8();
  v4 = *v3;
  *v5 = v4;
  v2[5] = v0;
  v2[6] = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42F1DEC();
  }
  else
  {
    v8 = (uint64_t (*)(void))((char *)&dword_1EFE4E3C0 + dword_1EFE4E3C0);
    v7 = (_QWORD *)swift_task_alloc();
    v2[7] = v7;
    *v7 = v4;
    v7[1] = sub_1D43222D0;
    return sub_1D42E3A2C(v8);
  }
}

uint64_t sub_1D43222D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1D430C4B8();
  *v4 = *v3;
  *(_QWORD *)(v2 + 64) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 72) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D4322328()
{
  uint64_t v0;

  swift_release();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4322354()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v3)(void);

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD **)(v0 + 16);
  swift_release();
  swift_release();
  *v2 = v1;
  v3 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42E3A2C(v3);
}

uint64_t sub_1D4322394()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43223C8()
{
  return sub_1D432216C();
}

uint64_t sub_1D43223DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D4322434;
  return sub_1D43221F0(a1, a2);
}

uint64_t sub_1D4322434()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v2 + 8));
}

void sub_1D4322474(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  uint64_t v20;
  _QWORD v21[6];
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  char v29;
  void (*v30)(void *);
  uint64_t v31;
  void (*v32)();
  uint64_t v33;
  uint64_t v34;
  void *v35;
  _UNKNOWN **v36;
  uint64_t v37;

  if (qword_1EFE48EF0 != -1)
    swift_once();
  v3 = qword_1EFEA7990;
  v2 = *(_QWORD *)algn_1EFEA7998;
  v5 = qword_1EFEA79A0;
  v4 = qword_1EFEA79A8;
  v6 = qword_1EFEA79B0;
  v7 = qword_1EFEA79B8;
  v17 = byte_1EFEA79C1;
  v18 = byte_1EFEA79C0;
  v15 = byte_1EFEA79C3;
  v16 = byte_1EFEA79C2;
  v13 = byte_1EFEA79C5;
  v14 = byte_1EFEA79C4;
  v12 = qword_1EFEA79C8;
  v11 = byte_1EFEA79D0;
  v8 = sub_1D42DCEBC();
  sub_1D4328B18(v8);
  v9 = sub_1D42DCEBC();
  sub_1D4328B18(v9);
  v35 = &unk_1E979AD08;
  v36 = &off_1E979AC68;
  v34 = sub_1D42DCEBC();
  sub_1D4328B18(v34);
  v21[0] = v3;
  v21[1] = v2;
  v21[2] = v5;
  v21[3] = v4;
  v21[4] = v6;
  v21[5] = v7;
  v22 = v18;
  v23 = v17;
  v24 = v16;
  v25 = v15;
  v26 = v14;
  v27 = v13;
  v28 = v12;
  v29 = v11;
  v30 = sub_1D43289B4;
  v31 = v8;
  v32 = sub_1D43289D0;
  v33 = v9;
  swift_bridgeObjectRetain();
  sub_1D4328B8C();
  sub_1D4328B8C();
  sub_1D4328B8C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D4322770(a1, v21, &v37);
  sub_1D4328A1C((uint64_t)v21, qword_1EFE4BC88);
  if (!v20)
    *a2 = v37;
}

void sub_1D4322660(void *__src)
{
  _BYTE __dst[88];

  memcpy(__dst, __src, sizeof(__dst));
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1D439940C(__dst);
}

uint64_t sub_1D43226BC(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

void sub_1D43226FC()
{
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1D43213CC();
}

uint64_t sub_1D4322734(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_1D4322770@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t result;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(_QWORD *);
  char *v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(char *, uint64_t);
  void (*v112)(char *, uint64_t);
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t *v161;
  char *v162;
  uint64_t v163;
  char *v164;
  _QWORD *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  unint64_t v169;
  unint64_t v170;
  _BYTE __dst[72];
  uint64_t v172;

  v165 = a2;
  v161 = a3;
  v139 = sub_1D42B28FC(&qword_1EFE55B50);
  v138 = *(_QWORD *)(v139 - 8);
  MEMORY[0x1E0C80A78](v139);
  v136 = (char *)&v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = sub_1D42B28FC(&qword_1EFE4BB50);
  v135 = *(_QWORD *)(v147 - 8);
  MEMORY[0x1E0C80A78](v147);
  v137 = (char *)&v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = sub_1D42B28FC(&qword_1EFE4BB58);
  v131 = *(_QWORD *)(v132 - 8);
  MEMORY[0x1E0C80A78](v132);
  v129 = (char *)&v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_1D42B28FC(&qword_1EFE4BB60);
  v133 = *(_QWORD *)(v134 - 8);
  MEMORY[0x1E0C80A78](v134);
  v130 = (char *)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = sub_1D42B28FC(&qword_1EFE4BB68);
  v123 = *(_QWORD *)(v144 - 8);
  MEMORY[0x1E0C80A78](v144);
  v143 = (char *)&v117 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_1D42B28FC(&qword_1EFE4BB70);
  MEMORY[0x1E0C80A78](v125);
  v126 = (char *)&v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = sub_1D42B28FC(&qword_1EFE4BB78);
  v121 = *(_QWORD *)(v141 - 8);
  MEMORY[0x1E0C80A78](v141);
  v140 = (char *)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = sub_1D42B28FC(&qword_1EFE4BB80);
  v122 = *(_QWORD *)(v150 - 8);
  MEMORY[0x1E0C80A78](v150);
  v124 = (char *)&v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_1D42B28FC(&qword_1EFE4BB88);
  v127 = *(_QWORD *)(v128 - 8);
  v12 = MEMORY[0x1E0C80A78](v128);
  v146 = (char *)&v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v145 = (char *)&v117 - v14;
  v15 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v159 = *(_QWORD *)(v15 - 8);
  v160 = v15;
  MEMORY[0x1E0C80A78](v15);
  v157 = (char *)&v117 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = sub_1D451A0B0();
  v163 = *(_QWORD *)(v158 - 8);
  MEMORY[0x1E0C80A78](v158);
  v156 = (char *)&v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = sub_1D42B28FC(&qword_1EFE4BB90);
  v119 = *(_QWORD *)(v120 - 8);
  MEMORY[0x1E0C80A78](v120);
  v118 = (uint64_t)&v117 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = sub_1D42B28FC(&qword_1EFE4BB98);
  v142 = *(_QWORD *)(v151 - 8);
  v19 = MEMORY[0x1E0C80A78](v151);
  v149 = (char *)&v117 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v148 = (char *)&v117 - v21;
  v153 = sub_1D42B28FC(&qword_1EFE4BBA0);
  v152 = *(_QWORD *)(v153 - 8);
  MEMORY[0x1E0C80A78](v153);
  v164 = (char *)&v117 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = sub_1D42B28FC(&qword_1EFE55B60);
  v154 = *(_QWORD *)(v155 - 8);
  MEMORY[0x1E0C80A78](v155);
  v162 = (char *)&v117 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1D42B28FC(&qword_1EFE4BBA8);
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v117 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1D42B28FC(qword_1EFE47450);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v117 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1D4519BC4();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = MEMORY[0x1E0C80A78](v31);
  v35 = (char *)&v117 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v37 = (char *)&v117 - v36;
  v172 = sub_1D4519D20();
  v166 = *(_QWORD *)(v172 - 8);
  MEMORY[0x1E0C80A78](v172);
  v168 = (char *)&v117 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D4519D14();
  sub_1D4321670(a1, (uint64_t)v30);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v30, 1, v31) != 1)
  {
    v164 = (char *)a1;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v37, v30, v31);
    v44 = v167;
    sub_1D436BB64();
    v117 = v37;
    if (v44)
    {
      v41 = v172;
      v43 = v168;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v117, v31);
      v42 = v166;
      return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v43, v41);
    }
    v63 = v45;
    type metadata accessor for E5RTExecutionStream();
    v64 = swift_allocObject();
    *(_QWORD *)(v64 + 16) = v63;
    sub_1D4519AC8();
    sub_1D4519B88();
    v65 = *(void (**)(char *, uint64_t))(v32 + 8);
    v167 = v31;
    v65(v35, v31);
    v66 = sub_1D436BC04();
    type metadata accessor for E5RTExecutionStreamOperation();
    v67 = swift_allocObject();
    *(_QWORD *)(v67 + 16) = v66;
    sub_1D436D938(v67);
    sub_1D436BDB0(v67);
    v68 = (uint64_t (*)(_QWORD *))v165[9];
    memcpy(__dst, v165, 0x41uLL);
    v69 = sub_1D4325180(v64, v67, __dst, v68);
    v55 = v172;
    v54 = v168;
    v70 = (uint64_t)v69;
    v155 = v67;
    v162 = (char *)v64;
    v165 = 0;
    v71 = v164[*(int *)(type metadata accessor for AOPClassificationDemo.Request() + 20)];
    v154 = v70;
    if ((v71 & 1) != 0)
    {
      v72 = v118;
      sub_1D43254E8(12, 11, v70, v118);
      sub_1D42E33F8(&qword_1EFE4BBD8, &qword_1EFE4BB90);
      v73 = v120;
      v74 = sub_1D451A374();
      sub_1D42B28FC(&qword_1EFE4BBE0);
      swift_allocObject();
      v75 = sub_1D43AEFD8(v74);
      (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v72, v73);
      v169 = v75;
      v76 = v156;
      v77 = v158;
      (*(void (**)(char *, _QWORD, uint64_t))(v163 + 104))(v156, *MEMORY[0x1E0C958B0], v158);
      v78 = v157;
      *(_QWORD *)v157 = sub_1D4325710;
      *((_QWORD *)v78 + 1) = 0;
      v80 = v159;
      v79 = v160;
      (*(void (**)(char *, _QWORD, uint64_t))(v159 + 104))(v78, *MEMORY[0x1E0C958F0], v160);
      sub_1D42E33F8(&qword_1EFE4BBE8, &qword_1EFE4BBE0);
      v81 = v148;
      sub_1D451A380();
      (*(void (**)(char *, uint64_t))(v80 + 8))(v78, v79);
      (*(void (**)(char *, uint64_t))(v163 + 8))(v76, v77);
      swift_release();
      (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v149, v81, v151);
      sub_1D42E33F8(&qword_1EFE4BBF0, &qword_1EFE4BB98);
      v164 = v82;
      v83 = v140;
      sub_1D451A3A4();
      v84 = sub_1D451A9BC();
      *(_QWORD *)(v84 + 16) = 13;
      *(_OWORD *)(v84 + 32) = 0u;
      *(_OWORD *)(v84 + 48) = 0u;
      *(_OWORD *)(v84 + 64) = 0u;
      *(_OWORD *)(v84 + 80) = 0u;
      *(_OWORD *)(v84 + 96) = 0u;
      *(_OWORD *)(v84 + 112) = 0u;
      *(_QWORD *)(v84 + 128) = 0;
      v169 = v84;
      v85 = sub_1D42B28FC(&qword_1EFE4CC80);
      sub_1D42E33F8(&qword_1EFE4BBF8, &qword_1EFE4BB78);
      v163 = v86;
      sub_1D42E33F8(&qword_1EFE4BC00, &qword_1EFE4CC80);
      v160 = v87;
      v88 = v124;
      v89 = v141;
      sub_1D451A3E0();
      swift_bridgeObjectRelease();
      v159 = *(_QWORD *)(v121 + 8);
      ((void (*)(char *, uint64_t))v159)(v83, v89);
      sub_1D42E33F8(&qword_1EFE4BC08, &qword_1EFE4BB80);
      v158 = v90;
      v91 = v143;
      v120 = v85;
      sub_1D451A308();
      v92 = v123;
      v157 = *(char **)(v123 + 16);
      v93 = (uint64_t)v126;
      v94 = v144;
      ((void (*)(char *, char *, uint64_t))v157)(v126, v91, v144);
      v95 = (int *)v125;
      *(_QWORD *)(v93 + *(int *)(v125 + 60)) = 14;
      *(_QWORD *)(v93 + v95[16]) = 1;
      *(_QWORD *)(v93 + v95[17]) = v85;
      v156 = *(char **)(v92 + 8);
      ((void (*)(char *, uint64_t))v156)(v91, v94);
      *(_QWORD *)(swift_allocObject() + 16) = 4;
      sub_1D42E33F8(&qword_1EFE4BC10, &qword_1EFE4BB70);
      v153 = v96;
      sub_1D451A308();
      swift_release();
      sub_1D4328A1C(v93, &qword_1EFE4BB70);
      v152 = *(_QWORD *)(v122 + 8);
      ((void (*)(char *, uint64_t))v152)(v88, v150);
      v97 = v140;
      sub_1D451A3A4();
      v98 = sub_1D451A9BC();
      *(_QWORD *)(v98 + 16) = 27;
      bzero((void *)(v98 + 32), 0xD8uLL);
      v169 = v98;
      v99 = v141;
      v100 = v120;
      sub_1D451A3E0();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v159)(v97, v99);
      v101 = v143;
      v102 = v150;
      sub_1D451A308();
      v103 = v144;
      ((void (*)(uint64_t, char *, uint64_t))v157)(v93, v101, v144);
      v55 = v172;
      *(_QWORD *)(v93 + v95[15]) = 28;
      *(_QWORD *)(v93 + v95[16]) = 1;
      *(_QWORD *)(v93 + v95[17]) = v100;
      ((void (*)(char *, uint64_t))v156)(v101, v103);
      *(_QWORD *)(swift_allocObject() + 16) = 9;
      sub_1D451A308();
      swift_release();
      sub_1D4328A1C(v93, &qword_1EFE4BB70);
      ((void (*)(char *, uint64_t))v152)(v88, v102);
      v54 = v168;
      sub_1D42E33F8(&qword_1EFE4BC18, &qword_1EFE4BB88);
      v104 = v129;
      v105 = v145;
      v106 = v128;
      sub_1D451A320();
      sub_1D42B28FC(&qword_1EFE4BE50);
      sub_1D42E33F8(&qword_1EFE4BC20, &qword_1EFE4BB58);
      v107 = v130;
      v108 = v132;
      sub_1D451A308();
      (*(void (**)(char *, uint64_t))(v131 + 8))(v104, v108);
      sub_1D42E33F8(&qword_1EFE4BC28, &qword_1EFE4BB60);
      v109 = v134;
      v110 = sub_1D451A2E4();
      (*(void (**)(char *, uint64_t))(v133 + 8))(v107, v109);
      v111 = *(void (**)(char *, uint64_t))(v127 + 8);
      v111(v146, v106);
      v111(v105, v106);
      v112 = *(void (**)(char *, uint64_t))(v142 + 8);
      v113 = v151;
      v112(v149, v151);
      v112(v148, v113);
    }
    else
    {
      v169 = v70;
      sub_1D42B28FC(&qword_1EFE4AF78);
      sub_1D42E33F8(&qword_1EFE4AF80, &qword_1EFE4AF78);
      v110 = sub_1D451A2E4();
    }
    v114 = v147;
    v169 = v110;
    swift_retain();
    sub_1D42B28FC(&qword_1EFE4AF78);
    sub_1D42E9D88(0, &qword_1EFE4E3E0);
    sub_1D42E33F8(&qword_1EFE4AF80, &qword_1EFE4AF78);
    v115 = v136;
    sub_1D451A308();
    swift_release();
    v169 = 0;
    v170 = 0xE000000000000000;
    sub_1D451B400();
    swift_bridgeObjectRelease();
    v169 = 0xD00000000000001FLL;
    v170 = 0x80000001D4552830;
    sub_1D43287AC(&qword_1EFE4CB00, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    sub_1D451B7C0();
    sub_1D451A794();
    swift_bridgeObjectRelease();
    sub_1D451A794();
    v116 = v137;
    sub_1D4406E30();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v138 + 8))(v115, v139);
    sub_1D42E33F8(&qword_1EFE4BBD0, &qword_1EFE4BB50);
    v59 = sub_1D451A2E4();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v135 + 8))(v116, v114);
    v65(v117, v167);
    v60 = v161;
    v61 = v166;
LABEL_7:
    result = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v54, v55);
    *v60 = v59;
    return result;
  }
  v39 = v164;
  v149 = v27;
  v150 = v25;
  v151 = v24;
  sub_1D4328A1C((uint64_t)v30, qword_1EFE47450);
  v40 = v167;
  ((void (*)(void))v165[11])();
  if (!v40)
  {
    v46 = sub_1D43CB1A0();
    swift_release();
    v169 = v46;
    sub_1D42B28FC(&qword_1EFE4BBB0);
    sub_1D42E9D88(0, &qword_1EFE4E3E0);
    sub_1D42E33F8(&qword_1EFE4BBB8, &qword_1EFE4BBB0);
    v47 = v39;
    sub_1D451A308();
    swift_release();
    v48 = v156;
    v49 = v158;
    (*(void (**)(char *, _QWORD, uint64_t))(v163 + 104))(v156, *MEMORY[0x1E0C958B0], v158);
    v50 = v157;
    *(_QWORD *)v157 = sub_1D43259D4;
    *((_QWORD *)v50 + 1) = 0;
    v52 = v159;
    v51 = v160;
    (*(void (**)(char *, _QWORD, uint64_t))(v159 + 104))(v50, *MEMORY[0x1E0C958F0], v160);
    sub_1D42E33F8(&qword_1EFE4BBC0, &qword_1EFE4BBA0);
    v53 = v153;
    sub_1D451A380();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v50, v51);
    (*(void (**)(char *, uint64_t))(v163 + 8))(v48, v49);
    (*(void (**)(char *, uint64_t))(v152 + 8))(v47, v53);
    v169 = 0;
    v170 = 0xE000000000000000;
    sub_1D451B400();
    swift_bridgeObjectRelease();
    v169 = 0xD00000000000001FLL;
    v170 = 0x80000001D4552830;
    sub_1D43287AC(&qword_1EFE4CB00, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v54 = v168;
    v55 = v172;
    sub_1D451B7C0();
    sub_1D451A794();
    swift_bridgeObjectRelease();
    sub_1D451A794();
    v56 = v149;
    v57 = v162;
    sub_1D4406EC0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v154 + 8))(v57, v155);
    sub_1D42E33F8(&qword_1EFE4BBC8, &qword_1EFE4BBA8);
    v58 = v151;
    v59 = sub_1D451A2E4();
    (*(void (**)(char *, uint64_t))(v150 + 8))(v56, v58);
    v60 = v161;
    v61 = v166;
    goto LABEL_7;
  }
  v41 = v172;
  v42 = v166;
  v43 = v168;
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v43, v41);
}

uint64_t sub_1D4323C7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t (**v43)(__int128 *);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t (**v49)@<X0>(uint64_t *@<X8>);
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  void (*v56)(_QWORD, _QWORD);
  uint64_t v57;
  uint64_t *v58;
  uint64_t result;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(__int128 *);
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(_QWORD, _QWORD);
  _QWORD *v74;
  uint64_t (**v75)@<X0>(uint64_t *@<X8>);
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t (**v87)@<X0>(uint64_t *@<X8>);
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(char *, uint64_t);
  void (*v113)(char *, uint64_t);
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t (*v120)(__int128 *);
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  void (*v162)(_QWORD, _QWORD);
  uint64_t v163;
  uint64_t (**v164)@<X0>(uint64_t *@<X8>);
  _QWORD *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  unint64_t v174;
  unint64_t v175;
  uint64_t v176;

  v170 = a2;
  v168 = a3;
  v149 = sub_1D42B28FC(&qword_1EFE55B50);
  v148 = *(_QWORD *)(v149 - 8);
  MEMORY[0x1E0C80A78](v149);
  v147 = (char *)&v121 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = sub_1D42B28FC(&qword_1EFE4BB50);
  v151 = *(_QWORD *)(v152 - 8);
  MEMORY[0x1E0C80A78](v152);
  v150 = (char *)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_1D42B28FC(&qword_1EFE4BB58);
  v136 = *(_QWORD *)(v137 - 8);
  MEMORY[0x1E0C80A78](v137);
  v134 = (char *)&v121 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_1D42B28FC(&qword_1EFE4BB60);
  v138 = *(_QWORD *)(v139 - 8);
  MEMORY[0x1E0C80A78](v139);
  v135 = (char *)&v121 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = sub_1D42B28FC(&qword_1EFE4BB68);
  v128 = *(_QWORD *)(v145 - 8);
  MEMORY[0x1E0C80A78](v145);
  v144 = (char *)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_1D42B28FC(&qword_1EFE4BB70);
  MEMORY[0x1E0C80A78](v130);
  v131 = (char *)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = sub_1D42B28FC(&qword_1EFE4BB78);
  v126 = *(_QWORD *)(v141 - 8);
  MEMORY[0x1E0C80A78](v141);
  v140 = (char *)&v121 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = sub_1D42B28FC(&qword_1EFE4BB80);
  v127 = *(_QWORD *)(v154 - 8);
  MEMORY[0x1E0C80A78](v154);
  v129 = (char *)&v121 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_1D42B28FC(&qword_1EFE4BB88);
  v132 = *(_QWORD *)(v133 - 8);
  v12 = MEMORY[0x1E0C80A78](v133);
  v146 = (char *)&v121 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v155 = (char *)&v121 - v14;
  v15 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v166 = *(_QWORD *)(v15 - 8);
  v167 = v15;
  MEMORY[0x1E0C80A78](v15);
  v164 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v121 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v165 = (_QWORD *)sub_1D451A0B0();
  v163 = *(v165 - 1);
  MEMORY[0x1E0C80A78](v165);
  v18 = (char *)&v121 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_1D42B28FC(&qword_1EFE4BB90);
  v124 = *(_QWORD *)(v125 - 8);
  MEMORY[0x1E0C80A78](v125);
  v123 = (uint64_t)&v121 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = sub_1D42B28FC(&qword_1EFE4BB98);
  v143 = *(_QWORD *)(v156 - 8);
  v20 = MEMORY[0x1E0C80A78](v156);
  v142 = (char *)&v121 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v153 = (char *)&v121 - v22;
  v23 = sub_1D42B28FC(&qword_1EFE4BBA0);
  v157 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v121 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = sub_1D42B28FC(&qword_1EFE55B60);
  v158 = *(_QWORD *)(v160 - 8);
  MEMORY[0x1E0C80A78](v160);
  v169 = (char *)&v121 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1D42B28FC(&qword_1EFE4BBA8);
  v161 = *(_QWORD *)(v27 - 8);
  v162 = (void (*)(_QWORD, _QWORD))v27;
  MEMORY[0x1E0C80A78](v27);
  v159 = (char *)&v121 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1D42B28FC(qword_1EFE47450);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v121 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1D4519BC4();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = MEMORY[0x1E0C80A78](v32);
  v36 = (char *)&v121 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v38 = (char *)&v121 - v37;
  v176 = sub_1D4519D20();
  v172 = *(_QWORD *)(v176 - 8);
  MEMORY[0x1E0C80A78](v176);
  v173 = (char *)&v121 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D4519D14();
  sub_1D4321670(a1, (uint64_t)v31);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v31, 1, v32) != 1)
  {
    v43 = (uint64_t (**)(__int128 *))v170;
    v169 = (char *)a1;
    v162 = (void (*)(_QWORD, _QWORD))v18;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v38, v31, v32);
    v44 = v171;
    sub_1D436BB64();
    v122 = v38;
    if (v44)
    {
      v41 = v176;
      v42 = v173;
      (*(void (**)(char *, uint64_t))(v33 + 8))(v122, v32);
      return (*(uint64_t (**)(char *, uint64_t))(v172 + 8))(v42, v41);
    }
    v60 = v45;
    type metadata accessor for E5RTExecutionStream();
    v61 = swift_allocObject();
    *(_QWORD *)(v61 + 16) = v60;
    sub_1D4519AC8();
    sub_1D4519B88();
    v62 = *(void (**)(char *, uint64_t))(v33 + 8);
    v62(v36, v32);
    v63 = sub_1D436BC04();
    v161 = v61;
    type metadata accessor for E5RTExecutionStreamOperation();
    v64 = swift_allocObject();
    *(_QWORD *)(v64 + 16) = v63;
    sub_1D436D938(v64);
    v53 = v176;
    v52 = v173;
    sub_1D436BDB0(v64);
    v160 = v64;
    v65 = *v43;
    if (qword_1EFE48E98 != -1)
    {
      v120 = *v43;
      swift_once();
      v65 = v120;
    }
    v66 = sub_1D43263E0(v161, v160, qword_1EFE4F938, v65);
    v170 = v32;
    v67 = v169[*(int *)(type metadata accessor for AOPClassificationDemo.Request() + 20)];
    v171 = 0;
    v159 = (char *)v66;
    if ((v67 & 1) != 0)
    {
      v68 = v123;
      sub_1D43254E8(12, 11, v66, v123);
      sub_1D42E33F8(&qword_1EFE4BBD8, &qword_1EFE4BB90);
      v69 = v125;
      v70 = sub_1D451A374();
      v169 = (char *)sub_1D42B28FC(&qword_1EFE4BBE0);
      swift_allocObject();
      v71 = sub_1D43AEFD8(v70);
      (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v68, v69);
      v174 = v71;
      v73 = v162;
      v72 = v163;
      v74 = v165;
      (*(void (**)(void (*)(_QWORD, _QWORD), _QWORD, _QWORD *))(v163 + 104))(v162, *MEMORY[0x1E0C958B0], v165);
      v75 = v164;
      *v164 = sub_1D4325710;
      v75[1] = 0;
      v77 = v166;
      v76 = v167;
      (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), _QWORD, uint64_t))(v166 + 104))(v75, *MEMORY[0x1E0C958F0], v167);
      sub_1D42E33F8(&qword_1EFE4BBE8, &qword_1EFE4BBE0);
      v78 = v153;
      sub_1D451A380();
      (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v77 + 8))(v75, v76);
      (*(void (**)(_QWORD, _QWORD *))(v72 + 8))(v73, v74);
      swift_release();
      (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v142, v78, v156);
      sub_1D42E33F8(&qword_1EFE4BBF0, &qword_1EFE4BB98);
      v169 = v79;
      v80 = v140;
      sub_1D451A3A4();
      v81 = sub_1D451A9BC();
      *(_QWORD *)(v81 + 16) = 13;
      *(_OWORD *)(v81 + 32) = 0u;
      *(_OWORD *)(v81 + 48) = 0u;
      *(_OWORD *)(v81 + 64) = 0u;
      *(_OWORD *)(v81 + 80) = 0u;
      *(_OWORD *)(v81 + 96) = 0u;
      *(_OWORD *)(v81 + 112) = 0u;
      *(_QWORD *)(v81 + 128) = 0;
      v174 = v81;
      v82 = sub_1D42B28FC(&qword_1EFE4CC80);
      sub_1D42E33F8(&qword_1EFE4BBF8, &qword_1EFE4BB78);
      v167 = v83;
      sub_1D42E33F8(&qword_1EFE4BC00, &qword_1EFE4CC80);
      v166 = v84;
      v85 = v129;
      v86 = v141;
      sub_1D451A3E0();
      swift_bridgeObjectRelease();
      v165 = *(_QWORD **)(v126 + 8);
      ((void (*)(char *, uint64_t))v165)(v80, v86);
      sub_1D42E33F8(&qword_1EFE4BC08, &qword_1EFE4BB80);
      v164 = v87;
      v88 = v144;
      v125 = v82;
      v89 = v85;
      sub_1D451A308();
      v90 = v128;
      v163 = *(_QWORD *)(v128 + 16);
      v91 = (uint64_t)v131;
      v92 = v145;
      ((void (*)(char *, char *, uint64_t))v163)(v131, v88, v145);
      v93 = (int *)v130;
      *(_QWORD *)(v91 + *(int *)(v130 + 60)) = 14;
      *(_QWORD *)(v91 + v93[16]) = 1;
      *(_QWORD *)(v91 + v93[17]) = v82;
      v162 = *(void (**)(_QWORD, _QWORD))(v90 + 8);
      v162(v88, v92);
      *(_QWORD *)(swift_allocObject() + 16) = 4;
      sub_1D42E33F8(&qword_1EFE4BC10, &qword_1EFE4BB70);
      v158 = v94;
      sub_1D451A308();
      swift_release();
      sub_1D4328A1C(v91, &qword_1EFE4BB70);
      v157 = *(_QWORD *)(v127 + 8);
      v95 = v89;
      ((void (*)(char *, uint64_t))v157)(v89, v154);
      v96 = v140;
      sub_1D451A3A4();
      v97 = sub_1D451A9BC();
      *(_QWORD *)(v97 + 16) = 27;
      bzero((void *)(v97 + 32), 0xD8uLL);
      v174 = v97;
      v98 = v141;
      v99 = v125;
      sub_1D451A3E0();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v165)(v96, v98);
      v100 = v144;
      v101 = v154;
      sub_1D451A308();
      v102 = v100;
      v103 = v100;
      v104 = v145;
      ((void (*)(uint64_t, char *, uint64_t))v163)(v91, v102, v145);
      *(_QWORD *)(v91 + v93[15]) = 28;
      *(_QWORD *)(v91 + v93[16]) = 1;
      *(_QWORD *)(v91 + v93[17]) = v99;
      v162(v103, v104);
      *(_QWORD *)(swift_allocObject() + 16) = 9;
      sub_1D451A308();
      swift_release();
      sub_1D4328A1C(v91, &qword_1EFE4BB70);
      ((void (*)(char *, uint64_t))v157)(v95, v101);
      v52 = v173;
      v53 = v176;
      sub_1D42E33F8(&qword_1EFE4BC18, &qword_1EFE4BB88);
      v105 = v134;
      v106 = v133;
      v107 = v142;
      sub_1D451A320();
      sub_1D42B28FC(&qword_1EFE4BE50);
      sub_1D42E33F8(&qword_1EFE4BC20, &qword_1EFE4BB58);
      v108 = v135;
      v109 = v137;
      sub_1D451A308();
      (*(void (**)(char *, uint64_t))(v136 + 8))(v105, v109);
      sub_1D42E33F8(&qword_1EFE4BC28, &qword_1EFE4BB60);
      v110 = v139;
      v111 = sub_1D451A2E4();
      (*(void (**)(char *, uint64_t))(v138 + 8))(v108, v110);
      v112 = *(void (**)(char *, uint64_t))(v132 + 8);
      v112(v146, v106);
      v112(v155, v106);
      v113 = *(void (**)(char *, uint64_t))(v143 + 8);
      v114 = v107;
      v115 = v111;
      v116 = v156;
      v113(v114, v156);
      v113(v153, v116);
    }
    else
    {
      v174 = v66;
      sub_1D42B28FC(&qword_1EFE4AF78);
      sub_1D42E33F8(&qword_1EFE4AF80, &qword_1EFE4AF78);
      v115 = sub_1D451A2E4();
    }
    v58 = v168;
    v174 = v115;
    swift_retain();
    sub_1D42B28FC(&qword_1EFE4AF78);
    sub_1D42E9D88(0, &qword_1EFE4E3E0);
    sub_1D42E33F8(&qword_1EFE4AF80, &qword_1EFE4AF78);
    v117 = v147;
    sub_1D451A308();
    swift_release();
    v174 = 0;
    v175 = 0xE000000000000000;
    sub_1D451B400();
    swift_bridgeObjectRelease();
    v174 = 0xD00000000000001FLL;
    v175 = 0x80000001D4552830;
    sub_1D43287AC(&qword_1EFE4CB00, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    sub_1D451B7C0();
    sub_1D451A794();
    swift_bridgeObjectRelease();
    sub_1D451A794();
    v118 = v150;
    sub_1D4406E30();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v148 + 8))(v117, v149);
    sub_1D42E33F8(&qword_1EFE4BBD0, &qword_1EFE4BB50);
    v119 = v152;
    v57 = sub_1D451A2E4();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v151 + 8))(v118, v119);
    v62(v122, v170);
LABEL_7:
    result = (*(uint64_t (**)(char *, uint64_t))(v172 + 8))(v52, v53);
    *v58 = v57;
    return result;
  }
  sub_1D4328A1C((uint64_t)v31, qword_1EFE47450);
  v40 = v171;
  (*(void (**)(void))(v170 + 16))();
  v171 = v40;
  if (!v40)
  {
    v46 = sub_1D43CB1A0();
    swift_release();
    v174 = v46;
    sub_1D42B28FC(&qword_1EFE4BBB0);
    sub_1D42E9D88(0, &qword_1EFE4E3E0);
    sub_1D42E33F8(&qword_1EFE4BBB8, &qword_1EFE4BBB0);
    sub_1D451A308();
    swift_release();
    v47 = v163;
    v48 = v165;
    (*(void (**)(char *, _QWORD, _QWORD *))(v163 + 104))(v18, *MEMORY[0x1E0C958B0], v165);
    v49 = v164;
    *v164 = sub_1D43259D4;
    v49[1] = 0;
    v51 = v166;
    v50 = v167;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), _QWORD, uint64_t))(v166 + 104))(v49, *MEMORY[0x1E0C958F0], v167);
    sub_1D42E33F8(&qword_1EFE4BBC0, &qword_1EFE4BBA0);
    sub_1D451A380();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v51 + 8))(v49, v50);
    (*(void (**)(char *, _QWORD *))(v47 + 8))(v18, v48);
    (*(void (**)(char *, uint64_t))(v157 + 8))(v25, v23);
    v174 = 0;
    v175 = 0xE000000000000000;
    sub_1D451B400();
    swift_bridgeObjectRelease();
    v174 = 0xD00000000000001FLL;
    v175 = 0x80000001D4552830;
    sub_1D43287AC(&qword_1EFE4CB00, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v52 = v173;
    v53 = v176;
    sub_1D451B7C0();
    sub_1D451A794();
    swift_bridgeObjectRelease();
    sub_1D451A794();
    v54 = v159;
    v55 = v169;
    sub_1D4406EC0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v158 + 8))(v55, v160);
    sub_1D42E33F8(&qword_1EFE4BBC8, &qword_1EFE4BBA8);
    v56 = v162;
    v57 = sub_1D451A2E4();
    (*(void (**)(char *, _QWORD))(v161 + 8))(v54, v56);
    v58 = v168;
    goto LABEL_7;
  }
  v41 = v176;
  v42 = v173;
  return (*(uint64_t (**)(char *, uint64_t))(v172 + 8))(v42, v41);
}

uint64_t sub_1D43250B0(uint64_t a1, uint64_t a2, void *__src)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE __dst[72];

  memcpy(__dst, __src, sizeof(__dst));
  sub_1D42BE38C((uint64_t)__src);
  sub_1D43994BC(a1, a2);
  v7 = v6;
  sub_1D4328888((uint64_t)__src);
  return v7;
}

uint64_t sub_1D4325134()
{
  _BYTE *v0;

  sub_1D43263A4();
  swift_allocError();
  *v0 = 1;
  return swift_willThrow();
}

char *sub_1D4325180(uint64_t a1, uint64_t a2, const void *a3, uint64_t (*a4)(_QWORD *))
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD __dst[9];
  __int128 v43;
  uint64_t v44;

  v44 = a2;
  v41 = a1;
  v7 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v37 = *(_QWORD *)(v7 - 8);
  v38 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D451A0B0();
  v36 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D42B28FC(&qword_1EFE4ACA0);
  v39 = *(_QWORD *)(v13 - 8);
  v40 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1D42B28FC(&qword_1EFE4BC50);
  v33 = *(_QWORD *)(v16 - 8);
  v34 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFE48E98 != -1)
    swift_once();
  v35 = qword_1EFE4F938;
  memcpy(__dst, a3, 0x41uLL);
  v43 = xmmword_1D452A6A0;
  sub_1D42B5B38((uint64_t)a3);
  v19 = a4(__dst);
  sub_1D42BDEAC((uint64_t)a3);
  if (!v4)
  {
    v30 = v19;
    __dst[0] = sub_1D4398FE0();
    v20 = *MEMORY[0x1E0C958B8];
    v32 = v18;
    v21 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 104))(v12, v20, v10);
    v22 = *MEMORY[0x1E0C958E8];
    v31 = v10;
    v23 = v37;
    v24 = v38;
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 104))(v9, v22, v38);
    sub_1D42B28FC((uint64_t *)&unk_1EFE4ACD0);
    sub_1D42E33F8(&qword_1EFE496A0, (uint64_t *)&unk_1EFE4ACD0);
    sub_1D451A380();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v24);
    v25 = *(void (**)(char *, uint64_t))(v21 + 8);
    v26 = v32;
    v25(v12, v31);
    swift_release();
    sub_1D42B28FC(&qword_1EFE4C9D0);
    sub_1D42E33F8(&qword_1EFE4ACE8, &qword_1EFE4ACA0);
    v27 = v40;
    sub_1D451A308();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v15, v27);
    sub_1D4360F20(v41, v44, v35);
    v9 = v29;
    swift_release();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v26, v34);
  }
  return v9;
}

void sub_1D43254E8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  _QWORD *v15;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v18[0] = a4;
  v7 = sub_1D42B28FC(&qword_1EFE4BC30);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D42B28FC(&qword_1EFE4BC38);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = a3;
  sub_1D42B28FC(&qword_1EFE4AF78);
  sub_1D42B28FC(&qword_1EFE4BC40);
  sub_1D42E33F8(&qword_1EFE4AF80, &qword_1EFE4AF78);
  sub_1D451A308();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a2;
  v14[3] = sub_1D4327068;
  v14[4] = 0;
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = sub_1D4328814;
  v15[3] = v14;
  v15[4] = a1;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v10, v7);
  v16 = &v13[*(int *)(v11 + 52)];
  *(_QWORD *)v16 = sub_1D43D6F9C;
  *((_QWORD *)v16 + 1) = 0;
  v17 = &v13[*(int *)(v11 + 56)];
  *(_QWORD *)v17 = sub_1D4328840;
  *((_QWORD *)v17 + 1) = v15;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1D42B28FC(&qword_1EFE4BE50);
  sub_1D42E33F8(&qword_1EFE4BC48, &qword_1EFE4BC38);
  sub_1D451A2F0();
  sub_1D4328A1C((uint64_t)v13, &qword_1EFE4BC38);
}

uint64_t sub_1D4325710@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  _BYTE *v3;

  sub_1D43263A4();
  result = swift_allocError();
  *a1 = result;
  *v3 = 3;
  return result;
}

unint64_t sub_1D4325754@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1D4325768(a1, a2);
}

unint64_t sub_1D4325768@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  unint64_t result;
  char v5;
  _BYTE *v6;

  v3 = *a1;
  if (*(_QWORD *)(*a1 + 16) && (result = sub_1D4366B34(0x636973756DLL, 0xE500000000000000), (v5 & 1) != 0))
  {
    *a2 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * result);
  }
  else
  {
    sub_1D43263A4();
    swift_allocError();
    *v6 = 4;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1D43257F8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  swift_bridgeObjectRetain();
  sub_1D42E7E8C(0x636973756DLL, 0xE500000000000000);
  sub_1D4417870();
  return sub_1D4417870();
}

id sub_1D4325888@<X0>(_QWORD *a1@<X8>)
{
  id result;

  sub_1D42E9D88(0, &qword_1EFE4E3E0);
  sub_1D4364E48();
  result = sub_1D43258E0();
  *a1 = result;
  return result;
}

id sub_1D43258E0()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_1D42E9D88(0, (unint64_t *)&qword_1EFE404B0);
  v1 = (void *)sub_1D451A5A8();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithClassificationDictionary_, v1);

  return v2;
}

id sub_1D4325974@<X0>(_QWORD *a1@<X8>)
{
  id result;

  sub_1D42E9D88(0, &qword_1EFE4E3E0);
  type metadata accessor for AOPClassificationResult();
  sub_1D4364E48();
  result = sub_1D43258E0();
  *a1 = result;
  return result;
}

uint64_t sub_1D43259D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1D432884C();
  result = swift_allocError();
  *a1 = result;
  return result;
}

uint64_t run(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[14] = a1;
  v2[15] = a2;
  v2[16] = type metadata accessor for RemoteRequest();
  v2[17] = sub_1D42E3C80();
  sub_1D42B28FC(qword_1EFE47450);
  v2[18] = sub_1D42E3C80();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4325A64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v8;
  id v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 144);
  sub_1D4328B7C(*(_QWORD *)(v0 + 120));
  v2 = sub_1D42CB348();
  v3 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v1, 1, v2);
  sub_1D4328A1C(v1, qword_1EFE47450);
  if (v3 == 1)
  {
    v4 = *(_QWORD *)(v0 + 136);
    v5 = *(_QWORD *)(v0 + 120);
    *(_QWORD *)(v0 + 80) = &unk_1E979AC10;
    *(_QWORD *)(v0 + 88) = &off_1E979ABF0;
    sub_1D42B5528((_QWORD *)(v0 + 56), (uint64_t)&unk_1E979AC10);
    sub_1D432211C(v5, v4);
    swift_storeEnumTagMultiPayload();
    v16 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EFE4A3A0 + dword_1EFE4A3A0);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v6;
    *v6 = v0;
    v6[1] = sub_1D4325C84;
    return v16(v0 + 96, *(_QWORD *)(v0 + 136));
  }
  else
  {
    if (qword_1EFE48E58 != -1)
      swift_once();
    v8 = (void *)qword_1EFEA7770;
    if ((byte_1EFEA7798 & 1) != 0)
    {
      *(_QWORD *)(v0 + 104) = qword_1EFEA7770;
      v9 = v8;
      sub_1D42B28FC(&qword_1EFE49BB0);
      swift_willThrowTypedImpl();
      swift_task_dealloc();
      swift_task_dealloc();
      v15 = *(uint64_t (**)(void))(v0 + 8);
    }
    else
    {
      v11 = qword_1EFEA7778;
      v10 = qword_1EFEA7780;
      v12 = qword_1EFEA7788;
      v13 = qword_1EFEA7790;
      v14 = *(_QWORD *)(v0 + 120);
      *(_QWORD *)(v0 + 16) = qword_1EFEA7770;
      *(_QWORD *)(v0 + 24) = v11;
      *(_BYTE *)(v0 + 32) = v10 & 1;
      *(_QWORD *)(v0 + 40) = v12;
      *(_QWORD *)(v0 + 48) = v13;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1D4322474(v14, &v17);
      swift_release();
      sub_1D42EA1BC();
      sub_1D42E3F48();
      **(_QWORD **)(v0 + 112) = v17;
      swift_task_dealloc();
      sub_1D42E3E5C();
      v15 = (uint64_t (*)(void))sub_1D42E3DD0();
    }
    return v15();
  }
}

uint64_t sub_1D4325C84()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4325CDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  v1 = *(_QWORD *)(v0 + 96);
  sub_1D4325D80(*(_QWORD *)(v0 + 136), (uint64_t (*)(_QWORD))type metadata accessor for RemoteRequest);
  sub_1D42B5400(v0 + 56);
  **(_QWORD **)(v0 + 112) = v1;
  swift_task_dealloc();
  sub_1D42E3E5C();
  v2 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42E39E4(v2);
}

uint64_t sub_1D4325D30()
{
  uint64_t v0;

  sub_1D4325D80(*(_QWORD *)(v0 + 136), (uint64_t (*)(_QWORD))type metadata accessor for RemoteRequest);
  sub_1D42B5400(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  return sub_1D42E39E4(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1D4325D80(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = a2(0);
  sub_1D4328B34(v2);
  sub_1D42B6E24();
}

uint64_t run(_:file:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[12] = a2;
  v3[13] = a3;
  v3[11] = a1;
  sub_1D42B28FC(qword_1EFE47450);
  v3[14] = sub_1D42E3C80();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4325DEC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[10];

  v1 = v0[14];
  sub_1D4328B7C(v0[12]);
  v2 = sub_1D42CB348();
  v3 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v1, 1, v2);
  sub_1D4328A1C(v1, qword_1EFE47450);
  if (v3 == 1)
  {
    sub_1D43263A4();
    swift_allocError();
    *v4 = 2;
    swift_willThrow();
    swift_task_dealloc();
    v14 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    sub_1D4326060(v0[13], v20);
    v19 = v0[12];
    v5 = v20[0];
    v6 = v20[3];
    v17 = v20[2];
    v18 = v20[1];
    v8 = v20[4];
    v7 = v20[5];
    v10 = v20[6];
    v9 = v20[7];
    v11 = v20[8];
    v12 = (_QWORD *)swift_allocObject();
    v12[2] = v5;
    v12[3] = v18;
    v12[4] = v17;
    v12[5] = v6;
    v12[6] = v8;
    v12[7] = v7;
    v12[8] = v10;
    v12[9] = v9;
    v12[10] = v11;
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = sub_1D4327300;
    *(_QWORD *)(v13 + 24) = v12;
    v0[9] = &unk_1E97AB5B0;
    v0[10] = &off_1E97AB590;
    v0[2] = sub_1D4327338;
    v0[3] = v13;
    v0[4] = sub_1D4325134;
    v0[5] = 0;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1D4323C7C(v19, (uint64_t)(v0 + 2), v20);
    v16 = (_QWORD *)v0[11];
    sub_1D4328A1C((uint64_t)(v0 + 2), &qword_1EFE4BA68);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_1D42E3F48();
    sub_1D42EA1BC();
    swift_release();
    *v16 = v20[0];
    sub_1D42E3E5C();
    v14 = (uint64_t (*)(void))sub_1D42E3DD0();
  }
  return v14();
}

void sub_1D4326060(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)();
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v35 = a2;
  v3 = sub_1D42B28FC(&qword_1EFE4BC60);
  v37 = *(_QWORD *)(v3 - 8);
  v38 = v3;
  MEMORY[0x1E0C80A78](v3);
  v36 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_1D42B28FC(&qword_1EFE4BC68);
  MEMORY[0x1E0C80A78](v40);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D42B28FC(&qword_1EFE4BC70);
  v41 = *(_QWORD *)(v7 - 8);
  v42 = v7;
  MEMORY[0x1E0C80A78](v7);
  v39 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D4519BC4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v34 - v14;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v17 = a1;
  v16((char *)&v34 - v14, a1, v9);
  v18 = objc_allocWithZone(MEMORY[0x1E0C89A98]);
  v19 = v46;
  sub_1D446B19C((uint64_t)v15, (void *)1, 0);
  if (!v19)
  {
    v21 = v20;
    v46 = 0;
    v22 = objc_msgSend(v20, sel_processingFormat);

    v16(v13, v17, v9);
    v23 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v24 = (v11 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    v25 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v25 + v23, v13, v9);
    *(_QWORD *)(v25 + v24) = v22;
    v43 = sub_1D430679C;
    v44 = v25;
    v45 = 2048;
    sub_1D4328974();
    v26 = v22;
    v27 = v36;
    sub_1D451A830();
    swift_release();
    v29 = v37;
    v28 = v38;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v6, v27, v38);
    v30 = v40;
    v31 = &v6[*(int *)(v40 + 52)];
    *(_QWORD *)v31 = sub_1D43CC188;
    *((_QWORD *)v31 + 1) = 0;
    v32 = &v6[*(int *)(v30 + 56)];
    *(_QWORD *)v32 = sub_1D44780B0;
    *((_QWORD *)v32 + 1) = 0;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v28);
    sub_1D42B28FC(&qword_1EFE49BB0);
    sub_1D42E33F8(&qword_1EFE4BC80, &qword_1EFE4BC68);
    v33 = v39;
    sub_1D451A41C();
    sub_1D4328A1C((uint64_t)v6, &qword_1EFE4BC68);
    sub_1D44440C0(v26, v35);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v33, v42);
  }
}

unint64_t sub_1D43263A4()
{
  unint64_t result;

  result = qword_1EFE4BA60;
  if (!qword_1EFE4BA60)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452A978, &unk_1E97A47C0);
    atomic_store(result, (unint64_t *)&qword_1EFE4BA60);
  }
  return result;
}

uint64_t sub_1D43263E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(__int128 *))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;

  v34 = a2;
  v35 = a3;
  v33 = a1;
  v6 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v28 = *(_QWORD *)(v6 - 8);
  v29 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_1D451A0B0();
  v9 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D42B28FC(&qword_1EFE4ACA0);
  v30 = *(_QWORD *)(v12 - 8);
  v31 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1D42B28FC(&qword_1EFE4BC50);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v32 = (char *)v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = xmmword_1D452A6A0;
  v18 = a4(&v36);
  if (!v4)
  {
    v26 = v16;
    v27 = v15;
    v25[1] = v18;
    *(_QWORD *)&v36 = sub_1D4398FE0();
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0C958B8], v37);
    v20 = v28;
    v19 = v29;
    (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v8, *MEMORY[0x1E0C958E8], v29);
    sub_1D42B28FC((uint64_t *)&unk_1EFE4ACD0);
    sub_1D42E33F8(&qword_1EFE496A0, (uint64_t *)&unk_1EFE4ACD0);
    sub_1D451A380();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v19);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v37);
    swift_release();
    sub_1D42B28FC(&qword_1EFE4C9D0);
    sub_1D42E33F8(&qword_1EFE4ACE8, &qword_1EFE4ACA0);
    v22 = v31;
    v21 = v32;
    sub_1D451A308();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v22);
    sub_1D4360F20(v33, v34, v35);
    v16 = v24;
    swift_release();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v21, v27);
  }
  return v16;
}

uint64_t sub_1D43266CC()
{
  return sub_1D4321364();
}

void sub_1D43266EC()
{
  sub_1D43212E8();
}

uint64_t sub_1D432670C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D4326724(uint64_t a1)
{
  swift_bridgeObjectRetain_n();
  return a1;
}

uint64_t sub_1D4326750()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D4326758(uint64_t a1, unint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  v4 = a1;
  swift_bridgeObjectRetain();
  sub_1D43267D8(&v4);
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(v4 + 16) > a2)
  {
    return swift_release();
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

void sub_1D43267D8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1D42DC8B4();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_1D4326840(v5);
  *a1 = v2;
}

void sub_1D4326840(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  double *v22;
  double v23;
  uint64_t v24;
  double *v25;
  double v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  unint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  char v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;

  v3 = a1[1];
  v4 = sub_1D451B7B4();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_1D4326E20(0, v3, 1, a1);
      return;
    }
    goto LABEL_124;
  }
  v5 = v4;
  sub_1D43E2B90(v3 / 2);
  v89 = a1;
  v90 = v6;
  v94 = v7;
  v92 = v3;
  if (v3 <= 0)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    v29 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_90:
    if (v29 < 2)
    {
LABEL_101:
      swift_bridgeObjectRelease();
      if (v92 >= -1)
      {
        *(_QWORD *)(v90 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_129;
    }
    v81 = *v89;
    while (1)
    {
      v82 = v29 - 2;
      if (v29 < 2)
        break;
      if (!v81)
        goto LABEL_133;
      v83 = *(_QWORD *)(v10 + 32 + 16 * v82);
      v84 = *(_QWORD *)(v10 + 32 + 16 * (v29 - 1) + 8);
      sub_1D4326E78((char *)(v81 + 8 * v83), (char *)(v81 + 8 * *(_QWORD *)(v10 + 32 + 16 * (v29 - 1))), v81 + 8 * v84, v94);
      if (v1)
        goto LABEL_86;
      if (v84 < v83)
        goto LABEL_119;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D4333298(v10);
        v10 = v87;
      }
      if (v82 >= *(_QWORD *)(v10 + 16))
        goto LABEL_120;
      v85 = (_QWORD *)(v10 + 32 + 16 * v82);
      *v85 = v83;
      v85[1] = v84;
      v86 = *(_QWORD *)(v10 + 16);
      if (v29 > v86)
        goto LABEL_121;
      memmove((void *)(v10 + 32 + 16 * (v29 - 1)), (const void *)(v10 + 32 + 16 * v29), 16 * (v86 - v29));
      *(_QWORD *)(v10 + 16) = v86 - 1;
      v29 = v86 - 1;
      if (v86 <= 2)
        goto LABEL_101;
    }
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    return;
  }
  v8 = 0;
  v9 = *a1;
  v88 = *a1 - 8;
  v10 = MEMORY[0x1E0DEE9D8];
  v91 = v5;
  v93 = *a1;
  while (1)
  {
    v11 = v8++;
    if (v8 < v3)
    {
      v12 = *(double *)(v9 + 8 * v8);
      v13 = *(double *)(v9 + 8 * v11);
      v8 = v11 + 2;
      if (v11 + 2 < v3)
      {
        v14 = v12;
        while (1)
        {
          v15 = v14;
          v14 = *(double *)(v9 + 8 * v8);
          if (v12 < v13 == v14 >= v15)
            break;
          if (++v8 >= v3)
          {
            v8 = v3;
            break;
          }
        }
      }
      if (v12 < v13)
      {
        if (v8 < v11)
          goto LABEL_126;
        if (v11 < v8)
        {
          v16 = (uint64_t *)(v88 + 8 * v8);
          v17 = v8;
          v18 = v11;
          v19 = (uint64_t *)(v9 + 8 * v11);
          do
          {
            if (v18 != --v17)
            {
              if (!v9)
                goto LABEL_132;
              v20 = *v19;
              *v19 = *v16;
              *v16 = v20;
            }
            ++v18;
            --v16;
            ++v19;
          }
          while (v18 < v17);
        }
      }
    }
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v11))
        goto LABEL_123;
      if (v8 - v11 < v5)
      {
        v21 = v11 + v5;
        if (__OFADD__(v11, v5))
          goto LABEL_127;
        if (v21 >= v3)
          v21 = v3;
        if (v21 < v11)
          goto LABEL_128;
        if (v8 != v21)
        {
          v22 = (double *)(v88 + 8 * v8);
          do
          {
            v23 = *(double *)(v9 + 8 * v8);
            v24 = v11;
            v25 = v22;
            do
            {
              v26 = *v25;
              if (v23 >= *v25)
                break;
              if (!v9)
                goto LABEL_130;
              *v25 = v23;
              v25[1] = v26;
              --v25;
              ++v24;
            }
            while (v8 != v24);
            ++v8;
            ++v22;
          }
          while (v8 != v21);
          v8 = v21;
        }
      }
    }
    if (v8 < v11)
      goto LABEL_122;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1D43331B0(0, *(_QWORD *)(v10 + 16) + 1, 1, (char *)v10);
      v10 = v79;
    }
    v28 = *(_QWORD *)(v10 + 16);
    v27 = *(_QWORD *)(v10 + 24);
    v29 = v28 + 1;
    v9 = v93;
    if (v28 >= v27 >> 1)
    {
      sub_1D43331B0(v27 > 1, v28 + 1, 1, (char *)v10);
      v9 = v93;
      v10 = v80;
    }
    *(_QWORD *)(v10 + 16) = v29;
    v30 = v10 + 32;
    v31 = (uint64_t *)(v10 + 32 + 16 * v28);
    *v31 = v11;
    v31[1] = v8;
    if (v28)
      break;
    v29 = 1;
LABEL_81:
    v5 = v91;
    v3 = v92;
    if (v8 >= v92)
      goto LABEL_90;
  }
  while (1)
  {
    v32 = v29 - 1;
    if (v29 >= 4)
    {
      v37 = v30 + 16 * v29;
      v38 = *(_QWORD *)(v37 - 64);
      v39 = *(_QWORD *)(v37 - 56);
      v43 = __OFSUB__(v39, v38);
      v40 = v39 - v38;
      if (v43)
        goto LABEL_107;
      v42 = *(_QWORD *)(v37 - 48);
      v41 = *(_QWORD *)(v37 - 40);
      v43 = __OFSUB__(v41, v42);
      v35 = v41 - v42;
      v36 = v43;
      if (v43)
        goto LABEL_108;
      v44 = v29 - 2;
      v45 = (uint64_t *)(v30 + 16 * (v29 - 2));
      v47 = *v45;
      v46 = v45[1];
      v43 = __OFSUB__(v46, v47);
      v48 = v46 - v47;
      if (v43)
        goto LABEL_109;
      v43 = __OFADD__(v35, v48);
      v49 = v35 + v48;
      if (v43)
        goto LABEL_111;
      if (v49 >= v40)
      {
        v67 = (uint64_t *)(v30 + 16 * v32);
        v69 = *v67;
        v68 = v67[1];
        v43 = __OFSUB__(v68, v69);
        v70 = v68 - v69;
        if (v43)
          goto LABEL_117;
        v60 = v35 < v70;
        goto LABEL_70;
      }
    }
    else
    {
      if (v29 != 3)
      {
        v61 = *(_QWORD *)(v10 + 32);
        v62 = *(_QWORD *)(v10 + 40);
        v43 = __OFSUB__(v62, v61);
        v54 = v62 - v61;
        v55 = v43;
        goto LABEL_64;
      }
      v34 = *(_QWORD *)(v10 + 32);
      v33 = *(_QWORD *)(v10 + 40);
      v43 = __OFSUB__(v33, v34);
      v35 = v33 - v34;
      v36 = v43;
    }
    if ((v36 & 1) != 0)
      goto LABEL_110;
    v44 = v29 - 2;
    v50 = (uint64_t *)(v30 + 16 * (v29 - 2));
    v52 = *v50;
    v51 = v50[1];
    v53 = __OFSUB__(v51, v52);
    v54 = v51 - v52;
    v55 = v53;
    if (v53)
      goto LABEL_112;
    v56 = (uint64_t *)(v30 + 16 * v32);
    v58 = *v56;
    v57 = v56[1];
    v43 = __OFSUB__(v57, v58);
    v59 = v57 - v58;
    if (v43)
      goto LABEL_114;
    if (__OFADD__(v54, v59))
      goto LABEL_116;
    if (v54 + v59 >= v35)
    {
      v60 = v35 < v59;
LABEL_70:
      if (v60)
        v32 = v44;
      goto LABEL_72;
    }
LABEL_64:
    if ((v55 & 1) != 0)
      goto LABEL_113;
    v63 = (uint64_t *)(v30 + 16 * v32);
    v65 = *v63;
    v64 = v63[1];
    v43 = __OFSUB__(v64, v65);
    v66 = v64 - v65;
    if (v43)
      goto LABEL_115;
    if (v66 < v54)
      goto LABEL_81;
LABEL_72:
    v71 = v10;
    v72 = v32 - 1;
    if (v32 - 1 >= v29)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (!v9)
      goto LABEL_131;
    v73 = (uint64_t *)(v30 + 16 * v72);
    v74 = *v73;
    v75 = v30;
    v76 = (_QWORD *)(v30 + 16 * v32);
    v77 = v76[1];
    sub_1D4326E78((char *)(v9 + 8 * *v73), (char *)(v9 + 8 * *v76), v9 + 8 * v77, v94);
    if (v1)
      break;
    if (v77 < v74)
      goto LABEL_104;
    if (v32 > *(_QWORD *)(v71 + 16))
      goto LABEL_105;
    *v73 = v74;
    *(_QWORD *)(v75 + 16 * v72 + 8) = v77;
    v78 = *(_QWORD *)(v71 + 16);
    if (v32 >= v78)
      goto LABEL_106;
    v10 = v71;
    v29 = v78 - 1;
    memmove(v76, v76 + 2, 16 * (v78 - 1 - v32));
    v30 = v75;
    *(_QWORD *)(v71 + 16) = v78 - 1;
    v9 = v93;
    if (v78 <= 2)
      goto LABEL_81;
  }
LABEL_86:
  swift_bridgeObjectRelease();
  if (v92 < -1)
    goto LABEL_125;
  *(_QWORD *)(v90 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_1D4326E20(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  double *v8;
  double v9;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 8 * a3 - 8;
    while (2)
    {
      v6 = *(double *)(v4 + 8 * a3);
      v7 = result;
      v8 = (double *)v5;
      do
      {
        v9 = *v8;
        if (v6 >= *v8)
          break;
        if (!v4)
        {
          __break(1u);
          return result;
        }
        *v8 = v6;
        v8[1] = v9;
        --v8;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 8;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1D4326E78(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double v14;
  BOOL v15;
  double *v18;
  char *v19;
  double v20;
  BOOL v21;
  BOOL v22;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 8;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 8;
  if (v9 >= v11)
  {
    sub_1D42C6B7C(a2, (uint64_t)(a3 - (_QWORD)a2) / 8, a4);
    v12 = &v4[8 * v11];
    if (v7 >= v6 || v10 < 8)
      goto LABEL_39;
    v18 = (double *)(a3 - 8);
    while (1)
    {
      v19 = (char *)(v18 + 1);
      v20 = *((double *)v6 - 1);
      if (*((double *)v12 - 1) >= v20)
      {
        v22 = v19 != v12 || v18 >= (double *)v12;
        v20 = *((double *)v12 - 1);
        v12 -= 8;
        if (!v22)
          goto LABEL_35;
      }
      else
      {
        v21 = v19 != v6 || v18 >= (double *)v6;
        v6 -= 8;
        if (!v21)
          goto LABEL_35;
      }
      *v18 = v20;
LABEL_35:
      --v18;
      if (v6 <= v7 || v12 <= v4)
        goto LABEL_39;
    }
  }
  sub_1D42C6B7C(a1, (a2 - a1) / 8, a4);
  v12 = &v4[8 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      v14 = *(double *)v6;
      if (*(double *)v6 < *(double *)v4)
        break;
      v14 = *(double *)v4;
      v15 = v7 == v4;
      v4 += 8;
      if (!v15)
        goto LABEL_11;
LABEL_12:
      v7 += 8;
      if (v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_17;
    }
    v15 = v7 == v6;
    v6 += 8;
    if (v15)
      goto LABEL_12;
LABEL_11:
    *(double *)v7 = v14;
    goto LABEL_12;
  }
LABEL_17:
  v6 = v7;
LABEL_39:
  sub_1D42C6B7C(v4, (v12 - v4) / 8, v6);
  return 1;
}

uint64_t sub_1D4326FF0@<X0>(uint64_t *a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = sub_1D4326758(*a1, a2);
  *a3 = v5;
  return result;
}

void sub_1D4327018(double *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  sub_1D435391C(*a1);
  *a2 = v3;
}

uint64_t sub_1D4327040@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1D432670C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D4327068@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = sub_1D4326724(*a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1D4327098@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D4326750();
  *a1 = result;
  return result;
}

uint64_t sub_1D43270C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(uint64_t *__return_ptr, _QWORD *, uint64_t)@<X4>, uint64_t *a6@<X8>)
{
  uint64_t result;
  uint64_t v8;

  result = sub_1D43AE838(*a1, a1[1], a2, a3, a4, a5);
  *a6 = result;
  a6[1] = v8;
  return result;
}

_QWORD *sub_1D4327104@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, _QWORD *(*a3)(uint64_t *__return_ptr, _QWORD *, _QWORD, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  _QWORD *result;
  uint64_t v8;

  result = sub_1D43AE69C(*a1, a1[1], a2, a3, a4, a5);
  *a6 = result;
  a6[1] = v8;
  return result;
}

void sub_1D4327140(uint64_t *a1@<X0>, uint64_t (*a2)(uint64_t *)@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v9;
  uint64_t v11;

  sub_1D44720A8(*a1, a2, a3, *a4, a5, a6, a7, a8);
  if (!v9)
    *a9 = v11;
}

uint64_t sub_1D4327170@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1D4321448(*a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1D43271A0()
{
  return sub_1D432148C();
}

void sub_1D43271B8(uint64_t *a1@<X0>, void (*a2)(uint64_t *__return_ptr)@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  sub_1D44720F0(*a1, a2);
  if (!v3)
    *a3 = v5;
}

void sub_1D43271E4(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D432146C();
  if (!v1)
    *a1 = v3;
}

void sub_1D4327210()
{
  sub_1D43266EC();
}

uint64_t sub_1D4327228@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1D43266CC();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_1D4327254(uint64_t a1, uint64_t a2, void *__src)
{
  _BYTE __dst[72];

  memcpy(__dst, __src, sizeof(__dst));
  return sub_1D43250B0(a1, a2, __dst);
}

uint64_t sub_1D43272AC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D4327300(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D4327254(a1, a2, (void *)(v2 + 16));
}

uint64_t sub_1D4327318()
{
  sub_1D42B8F98();
  return swift_deallocObject();
}

uint64_t sub_1D4327338(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

void sub_1D4327360()
{
  sub_1D43287AC(&qword_1EFE4BA70, (void (*)(uint64_t))type metadata accessor for AOPClassificationDemo.Request);
}

void type metadata accessor for AOPClassificationDemo()
{
  sub_1D42CB35C();
}

uint64_t *initializeBufferWithCopyOfBuffer for AOPClassificationDemo.Request(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D4519BC4();
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_1D42B28FC(qword_1EFE47450);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v7);
    }
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for AOPClassificationDemo.Request(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1D4519BC4();
  result = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for AOPClassificationDemo.Request(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1D4519BC4();
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_1D42B28FC(qword_1EFE47450);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v6);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithCopy for AOPClassificationDemo.Request(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1D4519BC4();
  v7 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, 1, v6);
  v8 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    v9 = *(_QWORD *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v10 = sub_1D42B28FC(qword_1EFE47450);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_7:
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *initializeWithTake for AOPClassificationDemo.Request(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1D4519BC4();
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_1D42B28FC(qword_1EFE47450);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v6);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithTake for AOPClassificationDemo.Request(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1D4519BC4();
  v7 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, 1, v6);
  v8 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    v9 = *(_QWORD *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v10 = sub_1D42B28FC(qword_1EFE47450);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_7:
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for AOPClassificationDemo.Request()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D4327824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v8;

  v6 = sub_1D42B28FC(qword_1EFE47450);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, a2, v6);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 2)
    return ((v8 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AOPClassificationDemo.Request()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D43278BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_1D42B28FC(qword_1EFE47450);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

void sub_1D4327934()
{
  unint64_t v0;

  sub_1D43279A4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1D43279A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFE4BA90[0])
  {
    sub_1D4519BC4();
    v0 = sub_1D451B160();
    if (!v1)
      atomic_store(v0, qword_1EFE4BA90);
  }
}

void type metadata accessor for AOPClassificationDemo.Session()
{
  sub_1D42CB35C();
}

uint64_t sub_1D4327A04()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1D4327A0C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1D4327AB0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(unint64_t, unint64_t, uint64_t);

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v10 = *(_QWORD *)(v6 + 64) + v8;
  v11 = *(_QWORD *)(v7 + 64) + 7;
  v12 = v8 | *(_DWORD *)(v6 + 80) & 0xF8;
  v13 = (*(_DWORD *)(v6 + 80) | v8) & 0x100000;
  if (v12 > 7
    || v13 != 0
    || ((((((v11 + (v10 & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 40 > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7)));
    swift_retain();
  }
  else
  {
    v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v18 = ((unint64_t)a2 + v10) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v10) & v17, v18, v5);
    v19 = (_QWORD *)((v11 + (((unint64_t)v4 + v10) & v17)) & 0xFFFFFFFFFFFFFFF8);
    v20 = (_QWORD *)((v11 + v18) & 0xFFFFFFFFFFFFFFF8);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = (_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
    v23 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = ((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8;
    v26 = ((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8;
    v27 = *(_QWORD *)(v26 + 24);
    *(_QWORD *)(v25 + 24) = v27;
    *(_QWORD *)(v25 + 32) = *(_QWORD *)(v26 + 32);
    v28 = **(void (***)(unint64_t, unint64_t, uint64_t))(v27 - 8);
    swift_retain();
    swift_retain();
    v28(v25, v26, v27);
  }
  return v4;
}

uint64_t sub_1D4327C28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  return sub_1D42B5400((((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
}

uint64_t sub_1D4327CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void (*v23)(unint64_t, unint64_t, uint64_t);

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = ((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = ((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  v22 = *(_QWORD *)(v21 + 24);
  *(_QWORD *)(v20 + 24) = v22;
  *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
  v23 = **(void (***)(unint64_t, unint64_t, uint64_t))(v22 - 8);
  swift_retain();
  swift_retain();
  v23(v20, v21, v22);
  return a1;
}

uint64_t sub_1D4327DB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain();
  swift_release();
  v17 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_retain();
  swift_release();
  sub_1D4327E90((uint64_t *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8), (uint64_t *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8));
  return a1;
}

uint64_t *sub_1D4327E90(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t sub_1D4327FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  _OWORD *v17;
  unint64_t v18;
  unint64_t v19;
  __int128 v20;
  __int128 v21;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = v13 + v11;
  v15 = (_OWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  v14 &= 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v14 = *v15;
  v16 = (_OWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_OWORD *)((v14 + 23) & 0xFFFFFFFFFFFFF8);
  *v17 = *v16;
  v18 = ((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  v19 = ((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_OWORD *)v19;
  v20 = *(_OWORD *)(v19 + 16);
  *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
  *(_OWORD *)v18 = v21;
  *(_OWORD *)(v18 + 16) = v20;
  return a1;
}

uint64_t sub_1D43280B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  unint64_t v16;
  _OWORD *v17;
  unint64_t v18;
  unint64_t v19;
  __int128 v20;
  __int128 v21;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_OWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = v13 + v12;
  v16 = (v15 & 0xFFFFFFFFFFFFFFF8) + 23;
  *v14 = *(_OWORD *)(v15 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  v17 = (_OWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  v16 &= 0xFFFFFFFFFFFFF8uLL;
  *v17 = *(_OWORD *)v16;
  swift_release();
  v18 = ((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  sub_1D42B5400(v18);
  v20 = *(_OWORD *)v19;
  v21 = *(_OWORD *)(v19 + 16);
  *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
  *(_OWORD *)v18 = v20;
  *(_OWORD *)(v18 + 16) = v21;
  return a1;
}

uint64_t sub_1D4328190(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  unint64_t v19;

  v5 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(v4 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= v7)
    v10 = *(_DWORD *)(v6 + 84);
  else
    v10 = *(_DWORD *)(v8 + 84);
  if (v10 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v11 = *(_QWORD *)(v6 + 64);
  v12 = *(unsigned __int8 *)(v8 + 80);
  v13 = v11 + v12;
  v14 = *(_QWORD *)(v8 + 64) + 7;
  if (v10 < a2)
  {
    if (((((((((v14 + (v13 & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
         + 40) & 0xFFFFFFF8) != 0)
      v15 = 2;
    else
      v15 = a2 - v10 + 1;
    if (v15 >= 0x10000)
      v16 = 4;
    else
      v16 = 2;
    if (v15 < 0x100)
      v16 = 1;
    if (v15 >= 2)
      v17 = v16;
    else
      v17 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1D4328240 + 4 * byte_1D452A6B0[v17]))();
  }
  if ((_DWORD)v7 == v10)
  {
    v9 = v7;
    v4 = v5;
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v9, v4);
  }
  a1 = (v13 + a1) & ~v12;
  if ((_DWORD)v9 == v10)
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v9, v4);
  v19 = *(_QWORD *)((v14 + a1) & 0xFFFFFFFFFFFFF8);
  if (v19 >= 0xFFFFFFFF)
    LODWORD(v19) = -1;
  return (v19 + 1);
}

void sub_1D43282E0(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  v8 = ((((((*(_QWORD *)(v6 + 64)
           + 7
           + ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 40;
  if (v7 >= a3)
  {
    v11 = 0u;
  }
  else
  {
    if (((((((*(_DWORD *)(v6 + 64)
             + 7
             + ((*(_DWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFF8)
           + 23) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFD8)
      v9 = a3 - v7 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
  }
  if (a2 > v7)
  {
    if ((_DWORD)v8)
    {
      v12 = ~v7 + a2;
      bzero(a1, v8);
      *a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

void sub_1D4328404(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  *(_BYTE *)(v9 + v10) = 0;
  if ((_DWORD)a1)
  {
    if ((_DWORD)v4 == v6)
    {
      v11 = v9;
      a2 = v4;
      a3 = a4;
LABEL_5:
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v11, a1, a2, a3);
      return;
    }
    v11 = (v8 + v9) & v5;
    if ((_DWORD)a2 == v6)
      goto LABEL_5;
    v12 = (_QWORD *)((v7 + v11) & 0xFFFFFFFFFFFFFFF8);
    if ((a1 & 0x80000000) != 0)
    {
      v13 = a1 ^ 0x80000000;
      v12[1] = 0;
    }
    else
    {
      v13 = (a1 - 1);
    }
    *v12 = v13;
  }
}

void type metadata accessor for AOPClassificationDemo.DistilledEnvironment()
{
  JUMPOUT(0x1D825E3A4);
}

uint64_t sub_1D43284B4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D4328500 + 4 * byte_1D452A6C4[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D4328534 + 4 * byte_1D452A6BF[v4]))();
}

uint64_t sub_1D4328534(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D432853C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4328544);
  return result;
}

uint64_t sub_1D4328550(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4328558);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D432855C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4328564(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AOPClassificationDemo.DomainError()
{
  sub_1D42CB35C();
}

uint64_t storeEnumTagSinglePayload for AOPClassificationDemo.Request.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D43285C8 + 4 * byte_1D452A6CE[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D43285FC + 4 * byte_1D452A6C9[v4]))();
}

uint64_t sub_1D43285FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4328604(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D432860CLL);
  return result;
}

uint64_t sub_1D4328618(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4328620);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D4328624(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D432862C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AOPClassificationDemo.Request.CodingKeys()
{
  return &type metadata for AOPClassificationDemo.Request.CodingKeys;
}

unint64_t sub_1D432864C()
{
  unint64_t result;

  result = qword_1EFE4BB18;
  if (!qword_1EFE4BB18)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452A8E8, &type metadata for AOPClassificationDemo.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4BB18);
  }
  return result;
}

unint64_t sub_1D432868C()
{
  unint64_t result;

  result = qword_1EFE4BB20;
  if (!qword_1EFE4BB20)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452A950, &unk_1E97A47C0);
    atomic_store(result, (unint64_t *)&qword_1EFE4BB20);
  }
  return result;
}

unint64_t sub_1D43286CC()
{
  unint64_t result;

  result = qword_1EFE4BB28;
  if (!qword_1EFE4BB28)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452A858, &type metadata for AOPClassificationDemo.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4BB28);
  }
  return result;
}

unint64_t sub_1D432870C()
{
  unint64_t result;

  result = qword_1EFE4BB30;
  if (!qword_1EFE4BB30)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452A880, &type metadata for AOPClassificationDemo.Request.CodingKeys);
    atomic_store(result, &qword_1EFE4BB30);
  }
  return result;
}

unint64_t sub_1D4328748()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFE4BB48;
  if (!qword_1EFE4BB48)
  {
    v1 = sub_1D42B8B10(&qword_1EFE4BB40);
    v2[0] = &off_1E97AE478;
    v2[1] = &off_1E97AE488;
    result = MEMORY[0x1D825E41C](&unk_1D45293A0, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFE4BB48);
  }
  return result;
}

void sub_1D43287AC(_QWORD *a1, void (*a2)(uint64_t))
{
  if (!*a1)
  {
    a2(255);
    sub_1D42E3FC0();
  }
  sub_1D42B6E24();
}

uint64_t sub_1D43287E4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1D4326FF0(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1D43287F0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D4328814@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1D43270C4(a1, a2, a3, *(_QWORD *)(v4 + 16), *(void (**)(uint64_t *__return_ptr, _QWORD *, uint64_t))(v4 + 24), a4);
}

uint64_t sub_1D4328820()
{
  sub_1D42B8F98();
  return swift_deallocObject();
}

_QWORD *sub_1D4328840@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_1D4327104(a1, a2, *(_QWORD *(**)(uint64_t *__return_ptr, _QWORD *, _QWORD, uint64_t))(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), a3);
}

unint64_t sub_1D432884C()
{
  unint64_t result;

  result = qword_1EFE4BC58;
  if (!qword_1EFE4BC58)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45345F0, &unk_1E97ACB20);
    atomic_store(result, (unint64_t *)&qword_1EFE4BC58);
  }
  return result;
}

uint64_t sub_1D4328888(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_1D4328904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1D42CB348();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

unint64_t sub_1D4328974()
{
  unint64_t result;

  result = qword_1EFE4BC78;
  if (!qword_1EFE4BC78)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for AudioFileSequence, &type metadata for AudioFileSequence);
    atomic_store(result, (unint64_t *)&qword_1EFE4BC78);
  }
  return result;
}

void sub_1D43289B4(void *a1)
{
  sub_1D4322660(a1);
}

void sub_1D43289D0()
{
  sub_1D43226FC();
}

uint64_t sub_1D43289EC()
{
  sub_1D42B8F98();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1D4328A1C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = sub_1D42B28FC(a2);
  sub_1D4328B34(v2);
  sub_1D42B6E24();
}

void sub_1D4328A4C(uint64_t *a1@<X8>)
{
  sub_1D4327228(a1);
  sub_1D42B6F28();
}

void sub_1D4328A6C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1D43271B8(a1, *(void (**)(uint64_t *__return_ptr))(v2 + 16), a2);
}

void sub_1D4328A88()
{
  sub_1D4327210();
}

void sub_1D4328AA0(_QWORD *a1@<X8>)
{
  sub_1D43271E4(a1);
  sub_1D42B6F28();
}

uint64_t sub_1D4328AC0()
{
  return sub_1D43271A0();
}

void sub_1D4328AD8(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1D4327170(a1, a2);
  sub_1D42B6F28();
}

void sub_1D4328AF8(uint64_t *a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, _QWORD *a6@<X8>)
{
  uint64_t v6;

  sub_1D4327140(a1, *(uint64_t (**)(uint64_t *))(v6 + 16), *(_QWORD *)(v6 + 24), *(uint64_t **)(v6 + 32), a2, a3, a4, a5, a6);
}

__n128 sub_1D4328B18(uint64_t a1)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)v1;
  v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(v1 + 32);
  return result;
}

void sub_1D4328B2C(uint64_t a1)
{
  uint64_t *v1;

  sub_1D4328A1C(a1, v1);
}

uint64_t sub_1D4328B34(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_1D4328B48()
{
  return type metadata accessor for AOPClassificationDemo.Request();
}

uint64_t sub_1D4328B50(uint64_t a1)
{
  uint64_t v1;

  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, 1, v1);
}

uint64_t sub_1D4328B6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_1D4328B7C(uint64_t a1)
{
  uint64_t v1;

  return sub_1D4321670(a1, v1);
}

uint64_t sub_1D4328B84()
{
  return sub_1D451B970();
}

uint64_t sub_1D4328B8C()
{
  return swift_retain_n();
}

uint64_t sub_1D4328B94()
{
  _QWORD *v0;

  sub_1D42B5528(v0, v0[3]);
  return sub_1D4519930();
}

uint64_t sub_1D4328BD4()
{
  _QWORD *v0;

  sub_1D42B5528(v0, v0[3]);
  return sub_1D4328C5C();
}

uint64_t sub_1D4328C5C()
{
  return sub_1D4519924();
}

uint64_t sub_1D4328CA4()
{
  return sub_1D4328BD4();
}

uint64_t sub_1D4328CC4(uint64_t a1, uint64_t a2, uint64_t (*a3)())
{
  swift_getAssociatedTypeWitness();
  sub_1D451A6B0();
  sub_1D451A6B0();
  swift_dynamicCast();
  return a3();
}

uint64_t sub_1D4328D78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D4328CC4(a1, a2, *(uint64_t (**)())(v2 + 48));
}

uint64_t sub_1D4328D9C(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *sub_1D4328DD4(uint64_t *a1, uint64_t *a2)
{
  sub_1D4327E90(a1, a2);
  return a1;
}

uint64_t sub_1D4328DF8(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  sub_1D42B5400(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t sub_1D4328E30(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D4328E70(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for AnyAccelerateBuffer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyAccelerateBuffer);
}

uint64_t sub_1D4328EC4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v18;

  v18 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_24;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      v16 = a3;
      v6 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v7 = (id)MEMORY[0x1D825CD78](v6, a1);
LABEL_7:
        v8 = v7;
        v9 = v6 + 1;
        if (__OFADD__(v6, 1))
          goto LABEL_23;
        v10 = sub_1D44C5DB8(v7);
        if (v11)
        {
          if (v10 == a2 && v11 == a3)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            v13 = sub_1D451B820();
            swift_bridgeObjectRelease();
            if ((v13 & 1) == 0)
            {

LABEL_18:
              a3 = v16;
              goto LABEL_19;
            }
          }
          sub_1D451B484();
          sub_1D451B4A8();
          sub_1D451B4B4();
          sub_1D451B490();
          goto LABEL_18;
        }

LABEL_19:
        ++v6;
        if (v9 == v5)
        {
          v14 = v18;
          goto LABEL_26;
        }
      }
      if (v6 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      v5 = sub_1D451B5A4();
      if (!v5)
        goto LABEL_25;
    }
    v7 = *(id *)(a1 + 8 * v6 + 32);
    goto LABEL_7;
  }
LABEL_25:
  v14 = MEMORY[0x1E0DEE9D8];
LABEL_26:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1D4329064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[12] = a2;
  v3[13] = a3;
  v3[11] = a1;
  return sub_1D42E39F0();
}

uint64_t sub_1D4329078()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[12];
  v1 = (void *)v0[13];
  v3 = v0[11];
  v0[7] = v0 + 10;
  v4 = sub_1D432ADB0((uint64_t)sub_1D43290D8);
  sub_1D432911C(v4, v3, v2, v1);
  return swift_continuation_await();
}

uint64_t sub_1D43290D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D432AD94();
  if (!v0)
    return sub_1D432ADC0(*(_QWORD *)(v2 + 80), *(uint64_t (**)(void))(v1 + 8));
  sub_1D42B6F54();
  return sub_1D430C35C(*(uint64_t (**)(void))(v1 + 8));
}

void sub_1D432911C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v8;
  uint64_t v9;
  void *v10;
  _QWORD v11[6];

  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D1B370]), sel_init);
  sub_1D432AA90(a2, a3, v8);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  v11[4] = sub_1D432AC1C;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1D43292CC;
  v11[3] = &unk_1E97B3838;
  v10 = _Block_copy(v11);
  swift_release();
  objc_msgSend(v8, sel_setCompletionHandler_, v10);
  _Block_release(v10);
  objc_msgSend(a4, sel_performQuery_, v8);

}

uint64_t sub_1D4329220(void *a1, void *a2, uint64_t a3)
{
  uint64_t result;
  id v7;
  _QWORD *v8;
  id v9;

  result = sub_1D451AB54();
  if ((result & 1) == 0)
  {
    if (a1)
    {
      **(_QWORD **)(*(_QWORD *)(a3 + 64) + 40) = a1;
      v7 = a1;
      return swift_continuation_throwingResume();
    }
    else if (a2)
    {
      sub_1D42B28FC(&qword_1EFE49BB0);
      swift_allocError();
      *v8 = a2;
      v9 = a2;
      return swift_continuation_throwingResumeWithError();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_1D43292CC(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_1D4329340(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 136) = a1;
  return sub_1D42E39F0();
}

uint64_t sub_1D4329350()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;

  v1 = (void *)v0[17];
  v0[7] = v0 + 16;
  v2 = sub_1D432ADB0((uint64_t)sub_1D4329420);
  v3 = swift_allocObject();
  v0[10] = MEMORY[0x1E0C809B0];
  v4 = v0 + 10;
  *(_QWORD *)(v3 + 16) = v2;
  v4[4] = sub_1D432ABD4;
  v4[5] = v3;
  v4[1] = 1107296256;
  v4[2] = sub_1D4329514;
  v4[3] = &unk_1E97B3AC0;
  v5 = _Block_copy(v4);
  swift_release();
  objc_msgSend(v1, sel_getIdentitiesWithCompletion_, v5);
  _Block_release(v5);
  return swift_continuation_await();
}

uint64_t sub_1D4329420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D432AD94();
  if (!v0)
    return sub_1D432ADC0(*(_QWORD *)(v2 + 128), *(uint64_t (**)(void))(v1 + 8));
  sub_1D42B6F54();
  return sub_1D430C35C(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1D4329464(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t result;
  _QWORD *v7;
  id v8;

  result = sub_1D451AB54();
  if ((result & 1) == 0)
  {
    if (a1)
    {
      **(_QWORD **)(*(_QWORD *)(a3 + 64) + 40) = a1;
      swift_bridgeObjectRetain();
      return swift_continuation_throwingResume();
    }
    else if (a2)
    {
      sub_1D42B28FC(&qword_1EFE49BB0);
      swift_allocError();
      *v7 = a2;
      v8 = a2;
      return swift_continuation_throwingResumeWithError();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1D4329514(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1D432ABDC();
    v4 = sub_1D451A92C();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4329590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v5;

  v3[3] = a1;
  v3[4] = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v3[5] = v5;
  *v5 = v3;
  v5[1] = sub_1D43295E0;
  return sub_1D4329340(a3);
}

uint64_t sub_1D43295E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 48) = v1;
  swift_task_dealloc();
  if (v1)
    return sub_1D430C35C(*(uint64_t (**)(void))(v4 + 8));
  *(_QWORD *)(v4 + 56) = a1;
  return swift_task_switch();
}

uint64_t sub_1D4329658()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  sub_1D42CB7B8();
  v4 = sub_1D4328EC4(v1, v3, v2);
  if (v4 >> 62)
  {
    sub_1D42CB7B8();
    v5 = sub_1D451B5A4();
    sub_1D42BE8B4();
    if (v5 == 1)
    {
      sub_1D42CB7B8();
      v9 = sub_1D451B5A4();
      sub_1D42BE8B4();
      if (v9)
        goto LABEL_3;
      sub_1D42BE8B4();
      __break(1u);
    }
LABEL_9:
    type metadata accessor for SNError();
    sub_1D451B400();
    swift_bridgeObjectRelease();
    sub_1D451A794();
    sub_1D451A794();
    sub_1D42BE8B4();
    *(_QWORD *)(v0 + 16) = v5;
    sub_1D451B7C0();
    sub_1D451A794();
    sub_1D42BE8B4();
    v10 = sub_1D4311F54();
    sub_1D43EC59C(v10, v11, v12, v13, v14, 0x80000001D45528C0);
    sub_1D42BE8B4();
    sub_1D42B6F54();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v5 != 1)
    goto LABEL_9;
LABEL_3:
  sub_1D42D2E5C(0, (v4 & 0xC000000000000001) == 0, v4);
  if ((v4 & 0xC000000000000001) != 0)
    v6 = (id)MEMORY[0x1D825CD78](0, v4);
  else
    v6 = *(id *)(v4 + 32);
  v7 = v6;
  sub_1D42BE8B4();
  return (*(uint64_t (**)(id))(v0 + 8))(v7);
}

uint64_t sub_1D4329850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[16] = a5;
  v6[17] = a6;
  v6[14] = a3;
  v6[15] = a4;
  v6[12] = a1;
  v6[13] = a2;
  return sub_1D42E39F0();
}

uint64_t sub_1D4329868()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 136);
  *(_QWORD *)(v0 + 56) = v0 + 80;
  v2 = sub_1D432ADB0((uint64_t)sub_1D43298E8);
  sub_1D4329940(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_1D43298E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D432AD94();
  if (!v0)
    return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 8))(*(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
  sub_1D42B6F54();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_1D4329940(uint64_t a1, void *a2)
{
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[6];

  v4 = (void *)sub_1D451A6C8();
  v5 = (void *)sub_1D451A5A8();
  v6 = (void *)sub_1D451A6C8();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  v9[4] = sub_1D432ABB0;
  v9[5] = v7;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1D4329B0C;
  v9[3] = &unk_1E97B34A0;
  v8 = _Block_copy(v9);
  swift_release();
  objc_msgSend(a2, sel_sendRequestID_request_destinationID_options_responseHandler_, v4, v5, v6, 0, v8);
  _Block_release(v8);

}

uint64_t sub_1D4329A68(uint64_t result, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t *v4;
  _QWORD *v6;
  id v7;

  if (result)
  {
    if (a2)
    {
      v4 = *(uint64_t **)(*(_QWORD *)(a4 + 64) + 40);
      *v4 = result;
      v4[1] = a2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return swift_continuation_throwingResume();
    }
    __break(1u);
  }
  else if (a3)
  {
    sub_1D42B28FC(&qword_1EFE49BB0);
    swift_allocError();
    *v6 = a3;
    v7 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  __break(1u);
  return result;
}

uint64_t sub_1D4329B0C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, void *);
  uint64_t v7;
  id v8;

  v5 = a3;
  v6 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (!a2)
  {
    v7 = 0;
    if (!a3)
      goto LABEL_4;
    goto LABEL_3;
  }
  v7 = sub_1D451A5CC();
  if (v5)
LABEL_3:
    v5 = sub_1D451A5CC();
LABEL_4:
  swift_retain();
  v8 = a4;
  v6(v7, v5, a4);
  swift_release();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_1D4329BD8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  objc_class *v17;
  char *v18;
  char *v19;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  objc_super v27;
  uint64_t v28;

  v2 = sub_1D432AAD4(a1, (SEL *)&selRef_identifier);
  if (!v3)
    goto LABEL_13;
  v4 = v2;
  v5 = v3;
  v6 = sub_1D44C5DC4(a1);
  if (!v7)
  {
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_13:
    type metadata accessor for SNError();
    v21 = sub_1D4311F54();
    sub_1D43EC59C(v21, v22, v23, v24, v25, v26);
    return (id)swift_willThrow();
  }
  v8 = v6;
  v9 = v7;
  v10 = sub_1D432AAD4(a1, (SEL *)&selRef_model);
  if (!v11)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v12 = v11;
  v28 = v10;
  v13 = sub_1D432AAD4(a1, (SEL *)&selRef_name);
  if (v14)
    v15 = v13;
  else
    v15 = 0x6E776F6E6B6E753CLL;
  if (v14)
    v16 = v14;
  else
    v16 = 0xE90000000000003ELL;
  v17 = (objc_class *)type metadata accessor for SNFileServerInfo();
  v18 = (char *)objc_allocWithZone(v17);
  v19 = &v18[OBJC_IVAR___SNFileServerInfo_impl];
  *(_QWORD *)v19 = v4;
  *((_QWORD *)v19 + 1) = v5;
  *((_QWORD *)v19 + 2) = v8;
  *((_QWORD *)v19 + 3) = v9;
  *((_QWORD *)v19 + 4) = v28;
  *((_QWORD *)v19 + 5) = v12;
  *((_QWORD *)v19 + 6) = v15;
  *((_QWORD *)v19 + 7) = v16;
  v27.receiver = v18;
  v27.super_class = v17;
  return objc_msgSendSuper2(&v27, sel_init);
}

id sub_1D4329D4C(unint64_t a1, void *a2)
{
  uint64_t v2;
  id v3;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  objc_class *v13;
  char *v14;
  char *v15;
  uint64_t v17;
  uint64_t v18;
  objc_super v19;
  uint64_t v20;

  v5 = (char *)sub_1D4329BD8(a2);
  if (!v2)
  {
    v6 = v5;
    v7 = *(_QWORD *)&v5[OBJC_IVAR___SNFileServerInfo_impl + 8];
    v20 = *(_QWORD *)&v5[OBJC_IVAR___SNFileServerInfo_impl];
    v8 = *(_QWORD *)&v5[OBJC_IVAR___SNFileServerInfo_impl + 24];
    v9 = *(_QWORD *)&v5[OBJC_IVAR___SNFileServerInfo_impl + 40];
    v17 = *(_QWORD *)&v5[OBJC_IVAR___SNFileServerInfo_impl + 32];
    v18 = *(_QWORD *)&v5[OBJC_IVAR___SNFileServerInfo_impl + 16];
    v11 = *(_QWORD *)&v5[OBJC_IVAR___SNFileServerInfo_impl + 48];
    v10 = *(_QWORD *)&v5[OBJC_IVAR___SNFileServerInfo_impl + 56];
    type metadata accessor for SNFileSharingUtils();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_1D4329EB0(a1) & 1;
    v13 = (objc_class *)type metadata accessor for SNFileServerDiscoveryResult();
    v14 = (char *)objc_allocWithZone(v13);
    v15 = &v14[OBJC_IVAR___SNFileServerDiscoveryResult_impl];
    *(_QWORD *)v15 = v20;
    *((_QWORD *)v15 + 1) = v7;
    *((_QWORD *)v15 + 2) = v18;
    *((_QWORD *)v15 + 3) = v8;
    *((_QWORD *)v15 + 4) = v17;
    *((_QWORD *)v15 + 5) = v9;
    *((_QWORD *)v15 + 6) = v11;
    *((_QWORD *)v15 + 7) = v10;
    v15[64] = v12;
    v19.receiver = v14;
    v19.super_class = v13;
    v3 = objc_msgSendSuper2(&v19, sel_init);

  }
  return v3;
}

unint64_t sub_1D4329EB0(unint64_t result)
{
  _BYTE *v1;

  if (result >= 2)
  {
    sub_1D432AB30();
    sub_1D42B6D0C();
    *v1 = 2;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1D4329F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[21] = a3;
  v4[22] = v3;
  v4[19] = a1;
  v4[20] = a2;
  return sub_1D42E39F0();
}

uint64_t sub_1D4329F18()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = sub_1D451A5E4();
  v0[23] = v1;
  v2 = (_QWORD *)swift_task_alloc();
  v0[24] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_1D4329FB0;
  return sub_1D4329850(0xD000000000000012, 0x80000001D45529C0, v1, v0[19], v0[20], v0[21]);
}

uint64_t sub_1D4329FB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 200) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    sub_1D42BE8B4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + 208) = a1;
  }
  return sub_1D42E3818();
}

uint64_t sub_1D432A034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  char v3;

  *(_QWORD *)(v0 + 120) = 0x6E6F6973726576;
  v1 = *(_QWORD *)(v0 + 208);
  *(_QWORD *)(v0 + 128) = 0xE700000000000000;
  sub_1D451B3B8();
  sub_1D4364A70(v1, (_OWORD *)(v0 + 88));
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 112))
  {
    sub_1D42D6F98(v0 + 16);
    sub_1D42B293C((_OWORD *)(v0 + 88), (_OWORD *)(v0 + 56));
    swift_dynamicCast();
    result = sub_1D432A15C(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144));
    if ((v3 & 1) == 0)
      return (*(uint64_t (**)(double))(v0 + 8))(*(double *)&result);
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D432A128()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D432A15C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _BYTE *v7;
  char v9;

  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    sub_1D451B3F4();
    swift_bridgeObjectRelease();
    v6 = v9;
  }
  else
  {
    MEMORY[0x1E0C80A78](a1);
    if ((a2 & 0x2000000000000000) != 0)
    {
      v6 = (v3 > 0x20u || ((0x100003E01uLL >> v3) & 1) == 0)
        && (v7 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0
        && *v7 == 0;
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v3 & 0x1000000000000000) != 0)
      {
        v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v5 = v3 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v4 = sub_1D451B46C();
      }
      v6 = sub_1D432AA3C(v4, v5, (void (*)(uint64_t *__return_ptr))sub_1D432AC3C);
      swift_bridgeObjectRelease();
    }
  }
  if ((v6 & 1) != 0)
    return 0;
  else
    return 0;
}

uint64_t sub_1D432A2C4(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 64) = v3;
  *(double *)(v4 + 56) = a3;
  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a2;
  return sub_1D42E39F0();
}

uint64_t sub_1D432A2DC()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  result = sub_1D432AAD4(*(void **)(v0 + 40), (SEL *)&selRef_identifier);
  *(_QWORD *)(v0 + 72) = v2;
  if (v2)
  {
    v3 = result;
    v4 = v2;
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v5;
    *v5 = v0;
    v5[1] = sub_1D432A35C;
    return sub_1D4329F04(v3, v4, *(_QWORD *)(v0 + 48));
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D432A35C(double a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(double *)(v3 + 88) = a1;
  *(_QWORD *)(v3 + 96) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_bridgeObjectRelease();
  return sub_1D42E3818();
}

uint64_t sub_1D432A3C8()
{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _DWORD *v8;
  void **v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24[3];

  if (*(double *)(v1 + 88) >= *(double *)(v1 + 56))
  {
    v9 = *(void ***)(v1 + 96);
    v10 = sub_1D4329D4C(0, *(void **)(v1 + 40));
    v8 = v9;
    if (!v9)
      return (*(uint64_t (**)(id))(v1 + 8))(v10);
  }
  else
  {
    v0 = (void *)type metadata accessor for SNError();
    v24[0] = 0;
    v24[1] = 0xE000000000000000;
    sub_1D451B400();
    *(_QWORD *)(v1 + 16) = 0;
    *(_QWORD *)(v1 + 24) = 0xE000000000000000;
    sub_1D451A794();
    sub_1D451ABD8();
    v2 = *(_QWORD *)(v1 + 24);
    v3 = sub_1D4311F54();
    v8 = sub_1D43EC59C(v3, v4, v5, v6, v7, v2);
    swift_bridgeObjectRelease();
    v9 = (void **)v8;
    swift_willThrow();
  }
  if (qword_1EFE40338 != -1)
    swift_once();
  v11 = sub_1D432ADFC();
  sub_1D42CC880(v11, (uint64_t)qword_1EFEA7700);
  v12 = v0;
  v13 = (void *)sub_1D4519FFC();
  v14 = sub_1D451AF44();
  v15 = sub_1D432AE3C(v14);
  v16 = *v9;
  if (v15)
  {
    sub_1D432AE2C();
    v24[0] = sub_1D432AE0C();
    *v8 = 136315138;
    v17 = sub_1D432AAD4(v16, (SEL *)&selRef_identifier);
    if (v18)
    {
      v19 = v18;
    }
    else
    {
      v17 = 0x6E776F6E6B6E753CLL;
      v19 = 0xE90000000000003ELL;
    }
    v20 = sub_1D43D72EC(v17, v19, v24);
    sub_1D432ADD0(v20, (_QWORD *)(v1 + 32));
    sub_1D42BE8B4();

    sub_1D432ADE8(&dword_1D42A7000, v21, v22, "Failed to discover file server at %s; this may not be an issue, since not all devices are expected to host file se"
      "rvers compatible with this client");
    sub_1D432AE1C();
    sub_1D42CC934();
  }

  v10 = 0;
  return (*(uint64_t (**)(id))(v1 + 8))(v10);
}

uint64_t sub_1D432A614()
{
  void *v0;
  void **v1;
  uint64_t v2;
  _DWORD *v3;
  uint64_t v4;
  id v5;
  void *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  swift_bridgeObjectRelease();
  v3 = *(_DWORD **)(v2 + 96);
  if (qword_1EFE40338 != -1)
    swift_once();
  v4 = sub_1D432ADFC();
  sub_1D42CC880(v4, (uint64_t)qword_1EFEA7700);
  v5 = v0;
  v6 = (void *)sub_1D4519FFC();
  v7 = sub_1D451AF44();
  v8 = sub_1D432AE3C(v7);
  v9 = *v1;
  if (v8)
  {
    sub_1D432AE2C();
    v17 = sub_1D432AE0C();
    *v3 = 136315138;
    v10 = sub_1D432AAD4(v9, (SEL *)&selRef_identifier);
    if (v11)
    {
      v12 = v11;
    }
    else
    {
      v10 = 0x6E776F6E6B6E753CLL;
      v12 = 0xE90000000000003ELL;
    }
    v13 = sub_1D43D72EC(v10, v12, &v17);
    sub_1D432ADD0(v13, (_QWORD *)(v2 + 32));
    sub_1D42BE8B4();

    sub_1D432ADE8(&dword_1D42A7000, v14, v15, "Failed to discover file server at %s; this may not be an issue, since not all devices are expected to host file se"
      "rvers compatible with this client");
    sub_1D432AE1C();
    sub_1D42CC934();
  }

  return (*(uint64_t (**)(_QWORD))(v2 + 8))(0);
}

uint64_t sub_1D432A798@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t result;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;

  v4 = sub_1D42B28FC(qword_1EFE47450);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D4519BC4();
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v24 - v11;
  v13 = sub_1D432AAD4(a1, (SEL *)&selRef_filename);
  if (v14)
  {
    v15 = v14;
    v25 = v13;
    v26 = a2;
    v16 = objc_msgSend(a1, sel_itemURL);
    if (v16)
    {
      v17 = v16;
      sub_1D4519B7C();

      sub_1D432AE58((uint64_t)v6, (uint64_t)v10);
      sub_1D432AE4C((uint64_t)v6, 0);
      if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v6, 1, v7) != 1)
      {
        sub_1D432AE58((uint64_t)v12, (uint64_t)v6);
        v18 = objc_msgSend(a1, sel_fileSize);
        v19 = type metadata accessor for FileCopyingResult(0);
        v20 = v26;
        result = sub_1D432AE58((uint64_t)v26 + *(int *)(v19 + 24), (uint64_t)v12);
        *v20 = v25;
        v20[1] = v15;
        v20[2] = (uint64_t)v18;
        return result;
      }
    }
    else
    {
      sub_1D432AE4C((uint64_t)v6, 1);
    }
    swift_bridgeObjectRelease();
    sub_1D432AB6C((uint64_t)v6);
    sub_1D432AB30();
    sub_1D42B6D0C();
    v23 = 1;
  }
  else
  {
    sub_1D432AB30();
    sub_1D42B6D0C();
    v23 = 0;
  }
  *v22 = v23;
  return swift_willThrow();
}

uint64_t sub_1D432A9A4()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SNFileSharingUtils()
{
  return objc_opt_self();
}

_BYTE *sub_1D432A9D4@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t sub_1D432AA3C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  uint64_t v3;
  char v4;
  uint64_t var2;

  if (a1)
  {
    a3(&var2);
    if (!v3)
      v4 = var2;
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, _QWORD, _QWORD))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3)
      v4 = BYTE1(var2);
  }
  return v4 & 1;
}

void sub_1D432AA90(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_1D451A6C8();
  objc_msgSend(a3, sel_setPath_, v4);

}

uint64_t sub_1D432AAD4(void *a1, SEL *a2)
{
  id v2;
  void *v3;
  uint64_t v4;

  v2 = objc_msgSend(a1, *a2);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = sub_1D451A6EC();

  return v4;
}

unint64_t sub_1D432AB30()
{
  unint64_t result;

  result = qword_1EFE4BD10;
  if (!qword_1EFE4BD10)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452AB48, &type metadata for SNFileSharingUtils.DomainError);
    atomic_store(result, &qword_1EFE4BD10);
  }
  return result;
}

uint64_t sub_1D432AB6C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D42B28FC(qword_1EFE47450);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D432ABB0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  return sub_1D4329A68(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_1D432ABB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D432ABC8()
{
  return swift_release();
}

uint64_t sub_1D432ABD4(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1D4329464(a1, a2, *(_QWORD *)(v2 + 16));
}

unint64_t sub_1D432ABDC()
{
  unint64_t result;

  result = qword_1EFE4BD30;
  if (!qword_1EFE4BD30)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_1EFE4BD30);
  }
  return result;
}

uint64_t sub_1D432AC1C(void *a1, void *a2)
{
  uint64_t v2;

  return sub_1D4329220(a1, a2, *(_QWORD *)(v2 + 16));
}

_BYTE *sub_1D432AC24@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1D432A9D4(a1, a2);
}

_QWORD *sub_1D432AC3C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2)
    *a1 = v5;
  return result;
}

uint64_t storeEnumTagSinglePayload for SNFileSharingUtils.DomainError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D432ACC4 + 4 * byte_1D452AA95[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D432ACF8 + 4 * byte_1D452AA90[v4]))();
}

uint64_t sub_1D432ACF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D432AD00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D432AD08);
  return result;
}

uint64_t sub_1D432AD14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D432AD1CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D432AD20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D432AD28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SNFileSharingUtils.DomainError()
{
  return &type metadata for SNFileSharingUtils.DomainError;
}

unint64_t sub_1D432AD48()
{
  unint64_t result;

  result = qword_1EFE4BD50;
  if (!qword_1EFE4BD50)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452AB20, &type metadata for SNFileSharingUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4BD50);
  }
  return result;
}

void sub_1D432AD94()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 - 8);
  *v2 = *v0;
  *v2 = *v0;
}

uint64_t sub_1D432ADB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v1;
  *(_QWORD *)(v1 + 24) = a1;
  return swift_continuation_init();
}

uint64_t sub_1D432ADC0(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1D432ADD0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = a1;
  return sub_1D451B1A8();
}

void sub_1D432ADE8(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_1D432ADFC()
{
  return sub_1D451A014();
}

uint64_t sub_1D432AE0C()
{
  return swift_slowAlloc();
}

uint64_t sub_1D432AE1C()
{
  return swift_arrayDestroy();
}

uint64_t sub_1D432AE2C()
{
  return swift_slowAlloc();
}

BOOL sub_1D432AE3C(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1D432AE4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a1, a2, 1, v2);
}

uint64_t sub_1D432AE58(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

double SNDirectionOfArrivalResult.timeRange.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 40);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(v2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 + 16);
  result = *(double *)(v2 + 32);
  *(double *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v3;
  return result;
}

double SNDirectionOfArrivalResult.timeRange.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl;
  *(_QWORD *)v3 = *(_QWORD *)a1;
  *(_QWORD *)(v3 + 8) = *(_QWORD *)(a1 + 8);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a1 + 16);
  result = *(double *)(a1 + 32);
  *(double *)(v3 + 32) = result;
  *(_QWORD *)(v3 + 40) = v2;
  return result;
}

double (*SNDirectionOfArrivalResult.timeRange.modify(_QWORD *a1))(void **a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  SNDirectionOfArrivalResult.timeRange.getter((uint64_t)v3);
  return sub_1D432AFC8;
}

double sub_1D432AFC8(void **a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  double result;

  v1 = *a1;
  v2 = v1[5];
  v3 = v1[6] + OBJC_IVAR___SNDirectionOfArrivalResult_impl;
  v4 = v1[1];
  v5 = v1[4];
  v6 = *((_OWORD *)v1 + 1);
  *(_QWORD *)v3 = *v1;
  *(_QWORD *)(v3 + 8) = v4;
  *(_OWORD *)(v3 + 16) = v6;
  *(_QWORD *)(v3 + 32) = v5;
  *(_QWORD *)(v3 + 40) = v2;
  free(v1);
  return result;
}

float SNDirectionOfArrivalResult.azimuth.getter()
{
  uint64_t v0;

  return *(float *)(v0 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 48);
}

void SNDirectionOfArrivalResult.azimuth.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 48) = a1;
}

float (*SNDirectionOfArrivalResult.azimuth.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR___SNDirectionOfArrivalResult_impl;
  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(v1 + v2 + 48);
  return sub_1D42AB9A0;
}

float SNDirectionOfArrivalResult.elevation.getter()
{
  uint64_t v0;

  return *(float *)(v0 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 52);
}

void SNDirectionOfArrivalResult.elevation.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 52) = a1;
}

float (*SNDirectionOfArrivalResult.elevation.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR___SNDirectionOfArrivalResult_impl;
  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(v1 + v2 + 52);
  return sub_1D432B124;
}

float sub_1D432B124(uint64_t a1)
{
  float result;

  result = *(float *)(a1 + 16);
  *(float *)(*(_QWORD *)a1 + *(_QWORD *)(a1 + 8) + 52) = result;
  return result;
}

uint64_t SNDirectionOfArrivalResult.spatialSpectrum.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 56);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v7 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1D451B49C();
    v4 = 0;
    do
    {
      v5 = v4 + 1;
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, *(double *)(v1 + 8 * v4 + 32));
      sub_1D451B484();
      sub_1D451B4A8();
      sub_1D451B4B4();
      sub_1D451B490();
      v4 = v5;
    }
    while (v2 != v5);
    v3 = v7;
    swift_bridgeObjectRelease();
  }
  return v3;
}

void SNDirectionOfArrivalResult.spatialSpectrum.setter(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v2 = v1;
  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
LABEL_13:
    sub_1D42CB0C4();
    v6 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    *(_QWORD *)(v2 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 56) = v6;
    swift_bridgeObjectRelease();
    return;
  }
  v4 = sub_1D451B5A4();
  if (!v4)
    goto LABEL_13;
LABEL_3:
  v12 = MEMORY[0x1E0DEE9D8];
  sub_1D42C7654();
  if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = 0;
    v6 = v12;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x1D825CD78](v5, a1);
      else
        v7 = *(id *)(a1 + 8 * v5 + 32);
      v8 = v7;
      objc_msgSend(v7, sel_doubleValue);
      v10 = v9;

      v11 = *(_QWORD *)(v12 + 16);
      if (v11 >= *(_QWORD *)(v12 + 24) >> 1)
        sub_1D42C7654();
      ++v5;
      *(_QWORD *)(v12 + 16) = v11 + 1;
      *(_QWORD *)(v12 + 8 * v11 + 32) = v10;
    }
    while (v4 != v5);
    sub_1D42CB0C4();
    goto LABEL_14;
  }
  __break(1u);
}

void sub_1D432B43C()
{
  unint64_t v0;

  v0 = swift_bridgeObjectRetain();
  SNDirectionOfArrivalResult.spatialSpectrum.setter(v0);
}

void (*SNDirectionOfArrivalResult.spatialSpectrum.modify(uint64_t *a1))(unint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = SNDirectionOfArrivalResult.spatialSpectrum.getter();
  return sub_1D432B498;
}

void sub_1D432B498(unint64_t *a1, char a2)
{
  unint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = swift_bridgeObjectRetain();
    SNDirectionOfArrivalResult.spatialSpectrum.setter(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    SNDirectionOfArrivalResult.spatialSpectrum.setter(*a1);
    sub_1D42B6E24();
  }
}

id sub_1D432B4D8()
{
  char *v0;
  objc_class *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  objc_super v7;

  v1 = (objc_class *)sub_1D42B7104();
  v2 = MEMORY[0x1E0CA2E40];
  v3 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 40);
  v4 = &v0[OBJC_IVAR___SNDirectionOfArrivalResult_impl];
  *(_QWORD *)v4 = *MEMORY[0x1E0CA2E40];
  *((_QWORD *)v4 + 1) = *(_QWORD *)(v2 + 8);
  *((_OWORD *)v4 + 1) = *(_OWORD *)(v2 + 16);
  *((_QWORD *)v4 + 4) = *(_QWORD *)(v2 + 32);
  *((_QWORD *)v4 + 5) = v3;
  v5 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v4 + 6) = 0;
  *((_QWORD *)v4 + 7) = v5;
  v7.receiver = v0;
  v7.super_class = v1;
  return objc_msgSendSuper2(&v7, sel_init);
}

id sub_1D432B570()
{
  uint64_t v0;
  objc_class *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_super v7;

  v2 = (char *)sub_1D42B7238();
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = &v2[OBJC_IVAR___SNDirectionOfArrivalResult_impl];
  *(_QWORD *)v5 = *(_QWORD *)v0;
  *((_QWORD *)v5 + 1) = *(_QWORD *)(v0 + 8);
  *((_OWORD *)v5 + 1) = *(_OWORD *)(v0 + 16);
  *((_QWORD *)v5 + 4) = *(_QWORD *)(v0 + 32);
  *((_QWORD *)v5 + 5) = v3;
  *((_QWORD *)v5 + 6) = *(_QWORD *)(v0 + 48);
  *((_QWORD *)v5 + 7) = v4;
  v7.receiver = v2;
  v7.super_class = v1;
  return objc_msgSendSuper2(&v7, sel_init);
}

id SNDirectionOfArrivalResult.copy(with:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  id result;

  v2 = sub_1D42B7104();
  swift_bridgeObjectRetain();
  result = sub_1D432B570();
  a1[3] = v2;
  *a1 = result;
  return result;
}

uint64_t SNDirectionOfArrivalResult.hash.getter()
{
  uint64_t v0;

  sub_1D432BF18(v0 + OBJC_IVAR___SNDirectionOfArrivalResult_impl);
  return sub_1D42FA36C();
}

uint64_t SNDirectionOfArrivalResult.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v8;
  _QWORD v9[2];
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD v15[2];
  __int128 v16;
  uint64_t v17;

  sub_1D42B7104();
  sub_1D42B28B4(a1, (uint64_t)&v16);
  if (v17)
  {
    sub_1D42B293C(&v16, v15);
    sub_1D42B294C((uint64_t)v15, (uint64_t)v9);
    if (swift_dynamicCast() && (v3 = v8) != 0)
    {
      v4 = *(_QWORD *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 40);
      v5 = *(_QWORD *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 56);
      v9[0] = *(_QWORD *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl);
      v9[1] = *(_QWORD *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 8);
      v10 = *(_OWORD *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 16);
      v11 = *(_QWORD *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 32);
      v12 = v4;
      v13 = *(_QWORD *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 48);
      v14 = v5;
      sub_1D432BF18((uint64_t)v8 + OBJC_IVAR___SNDirectionOfArrivalResult_impl);
      v6 = sub_1D42F9E48((float *)v9, (float *)&v8);

    }
    else
    {
      v6 = 0;
    }
    sub_1D42B5400((uint64_t)v15);
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

id SNDirectionOfArrivalResult.__allocating_init(coder:)()
{
  void *v0;

  sub_1D42B7238();
  return SNDirectionOfArrivalResult.init(coder:)(v0);
}

id SNDirectionOfArrivalResult.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  id v4;

  v3 = v1;
  sub_1D42B16C8();
  swift_getObjectType();

  v4 = sub_1D432B570();
  sub_1D432BF64();
  return v4;
}

Swift::Void __swiftcall SNDirectionOfArrivalResult.encode(with:)(NSCoder with)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  _OWORD v5[4];

  v3 = *(_OWORD *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 16);
  v5[0] = *(_OWORD *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl);
  v5[1] = v3;
  v4 = *(_OWORD *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 48);
  v5[2] = *(_OWORD *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 32);
  v5[3] = v4;
  sub_1D42B603C((uint64_t)v5);
  sub_1D42AF960((uint64_t)v5, 1819307369, 0xE400000000000000, (uint64_t)with.super.isa);
  sub_1D432BDA0((uint64_t)v5);
}

uint64_t static SNDirectionOfArrivalResult.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t SNDirectionOfArrivalResult.description.getter()
{
  void *v0;
  objc_class *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  _QWORD v12[6];
  objc_super v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = (objc_class *)sub_1D42B7104();
  v16 = 0;
  v17 = 0xE000000000000000;
  sub_1D451B400();
  v14 = 0;
  v15 = 0xE000000000000000;
  v13.receiver = v0;
  v13.super_class = v1;
  v2 = objc_msgSendSuper2(&v13, sel_description);
  sub_1D451A6EC();
  sub_1D42B722C();
  sub_1D42B7190();
  sub_1D42CB208();
  sub_1D451A794();
  sub_1D432BF54();
  sub_1D451A794();
  sub_1D432BF54();
  sub_1D451A794();
  v3 = swift_bridgeObjectRetain();
  MEMORY[0x1D825C280](v3, MEMORY[0x1E0DEB070]);
  sub_1D451A794();
  sub_1D42CB0C4();
  sub_1D42CB208();
  sub_1D451A794();
  SNDirectionOfArrivalResult.timeRange.getter((uint64_t)&v16);
  v4 = v16;
  v5 = v18;
  v6 = v19;
  v7 = v21;
  v8 = (void *)objc_opt_self();
  v12[0] = v4;
  v12[1] = v17;
  v12[2] = v5;
  v12[3] = v6;
  v12[4] = v20;
  v12[5] = v7;
  v9 = objc_msgSend(v8, sel_valueWithCMTimeRange_, v12);
  v10 = objc_msgSend(v9, sel_description);
  sub_1D451A6EC();
  sub_1D42B722C();
  sub_1D42B7190();

  sub_1D42CB208();
  return v14;
}

id SNDirectionOfArrivalResult.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1D42B7104();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D432BDA0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1D432BDC8(uint64_t a1@<X8>)
{
  SNDirectionOfArrivalResult.timeRange.getter(a1);
  sub_1D42B6E24();
}

void sub_1D432BDE4(uint64_t a1)
{
  SNDirectionOfArrivalResult.timeRange.setter(a1);
  sub_1D42B6E24();
}

void sub_1D432BE00(float *a1@<X8>)
{
  *a1 = SNDirectionOfArrivalResult.azimuth.getter();
  sub_1D42B6E24();
}

void sub_1D432BE24(float *a1)
{
  SNDirectionOfArrivalResult.azimuth.setter(*a1);
  sub_1D42B6E24();
}

void sub_1D432BE44(float *a1@<X8>)
{
  *a1 = SNDirectionOfArrivalResult.elevation.getter();
  sub_1D42B6E24();
}

void sub_1D432BE68(float *a1)
{
  SNDirectionOfArrivalResult.elevation.setter(*a1);
  sub_1D42B6E24();
}

void sub_1D432BE88(uint64_t *a1@<X8>)
{
  *a1 = SNDirectionOfArrivalResult.spatialSpectrum.getter();
  sub_1D42B6E24();
}

uint64_t type metadata accessor for SNDirectionOfArrivalResult()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNDirectionOfArrivalResult()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_1D432BEDC()
{
  unint64_t result;

  result = qword_1EFE404B0;
  if (!qword_1EFE404B0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFE404B0);
  }
  return result;
}

double sub_1D432BF18@<D0>(uint64_t a1@<X8>)
{
  return *(double *)(a1 + 48);
}

uint64_t sub_1D432BF54()
{
  return sub_1D451ABE4();
}

uint64_t sub_1D432BF64()
{
  return swift_deallocPartialClassInstance();
}

ValueMetadata *type metadata accessor for FindMyBundle()
{
  return &type metadata for FindMyBundle;
}

uint64_t sub_1D432BF80(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t result;
  __int128 v5;

  v5 = *a3;
  result = MEMORY[0x1D825E41C](&unk_1D452ACDC, a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1D432BFC0()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D432BFD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1);
  v10 = a5 + *(int *)(type metadata accessor for Rational(0, a3, a4, v9) + 36);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v10, a2, a4);
}

uint64_t sub_1D432C03C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1D432BFD0(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
}

uint64_t sub_1D432C048@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t sub_1D432C060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t sub_1D432C07C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int8x16_t v4;
  _OWORD v6[2];
  uint64_t v7;

  v3 = *(_QWORD *)(a3 - 48);
  v4 = vextq_s8(*(int8x16_t *)(a3 - 32), *(int8x16_t *)(a3 - 32), 8uLL);
  v6[0] = vextq_s8(*(int8x16_t *)(a3 - 16), *(int8x16_t *)(a3 - 16), 8uLL);
  v6[1] = v4;
  v7 = v3;
  return MEMORY[0x1D825E41C](&unk_1D452AE5C, a1, v6);
}

void sub_1D432C0C0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(char *, char *, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, char *, uint64_t, uint64_t);
  uint64_t v29;
  char *v30;
  void (*v31)(uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  sub_1D42CB740();
  v61 = v0;
  v46 = v1;
  v47 = v2;
  v54 = v4;
  v55 = v3;
  v53 = v5;
  v57 = v6;
  v58 = v7;
  v8 = *(_QWORD *)(v5 + 8);
  v10 = v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  sub_1D432D380();
  v52 = v12 - v13;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v14);
  sub_1D432D3D4();
  v50 = v15;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v16);
  sub_1D432D3D4();
  v51 = v17;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v18);
  sub_1D432D3D4();
  v60 = v19;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v20);
  sub_1D432D3D4();
  v59 = v21;
  sub_1D432D374();
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v44 - v24;
  v26 = MEMORY[0x1E0C80A78](v23);
  v28 = (void (*)(uint64_t, char *, uint64_t, uint64_t))((char *)&v44 - v27);
  MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v44 - v29;
  v31 = *(void (**)(uint64_t, uint64_t))(v8 + 32);
  sub_1D432D3A0();
  sub_1D432D3A0();
  v44 = v31;
  v49 = *(_QWORD *)(v61 + 8);
  sub_1D43CBFD0(v28, (uint64_t)v25, AssociatedTypeWitness, v46, *(_QWORD *)(v49 + 8), (uint64_t)v30);
  sub_1D432D320((uint64_t)v25);
  v56 = v28;
  sub_1D432D320((uint64_t)v28);
  v31(v10, v8);
  v47 = *(void (**)(char *, char *, uint64_t))(v55 + 8);
  v48 = v30;
  v45 = v25;
  v32 = v30;
  v47(v25, v30, AssociatedTypeWitness);
  sub_1D432D320((uint64_t)v25);
  v33 = v59;
  v34 = v44;
  v44(v10, v8);
  ((void (*)(uint64_t, char *, uint64_t, uint64_t))v47)(v33, v32, AssociatedTypeWitness, v55);
  sub_1D432D320(v33);
  v35 = v60;
  v36 = v10;
  v34(v10, v8);
  sub_1D451AC50();
  sub_1D432D320(v35);
  v37 = v8;
  v38 = *(void (**)(uint64_t, uint64_t))(v8 + 24);
  v39 = v50;
  v38(v10, v8);
  v40 = v51;
  sub_1D432D390();
  sub_1D432D320(v39);
  v41 = v52;
  v38(v36, v37);
  v42 = (uint64_t)v45;
  sub_1D432D390();
  sub_1D432D320(v41);
  v43 = v60;
  sub_1D451B574();
  sub_1D432D320(v39);
  sub_1D432D320(v40);
  sub_1D432D320(v42);
  sub_1D432D320((uint64_t)v56);
  sub_1D432D320((uint64_t)v48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v43, v59, v36);
  sub_1D42CB520();
}

void sub_1D432C408()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(uint64_t, uint64_t);
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D42CB740();
  v21 = v0;
  v22 = v1;
  v3 = v2;
  sub_1D432D350();
  sub_1D432D3AC();
  MEMORY[0x1E0C80A78](v4);
  v20 = (char *)&v19 - v5;
  v6 = sub_1D432D350();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1D432D380();
  v10 = v8 - v9;
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v19 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v19 - v15;
  sub_1D451B190();
  sub_1D432D364();
  sub_1D451B580();
  v17 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v17(v10, v6);
  v17((uint64_t)v14, v6);
  v18 = v20;
  sub_1D432D364();
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v16, v18, v3);
  sub_1D42CB520();
}

void sub_1D432C564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;

  sub_1D42CB740();
  a19 = v20;
  a20 = v21;
  v23 = v22;
  v24 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D432C408();
  sub_1D432C0C0();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
  sub_1D42CB520();
}

uint64_t sub_1D432C620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  sub_1D42CB740();
  v54 = v9;
  v55 = v10;
  v51 = v12;
  v52 = v11;
  v47 = v13;
  v48 = v14;
  AssociatedConformanceWitness = v15;
  v17 = v16;
  v44 = v18;
  v20 = v19;
  v42 = a9;
  v53 = *(_QWORD *)(a9 + 16);
  v21 = *(_QWORD *)(v16 + 8);
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1D432D3AC();
  MEMORY[0x1E0C80A78](v22);
  v49 = (uint64_t)&v42 - v23;
  v24 = swift_checkMetadataState();
  MEMORY[0x1E0C80A78](v24);
  sub_1D432D380();
  v27 = v25 - v26;
  v29 = MEMORY[0x1E0C80A78](v28);
  v31 = (char *)&v42 - v30;
  v32 = MEMORY[0x1E0C80A78](v29);
  v34 = (char *)&v42 - v33;
  v35 = v52;
  v50 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v32);
  v37 = (char *)&v42 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D432C564(v44, v20, v35, v17, AssociatedConformanceWitness, v47, (uint64_t)v48, v42, v42, v43, v44, AssociatedTypeWitness, AssociatedConformanceWitness, v47, (uint64_t)v48, v49, v50, v51, v52,
    v53);
  v48 = *(void (**)(uint64_t, uint64_t))(v21 + 24);
  sub_1D432D3E0();
  v43 = v21;
  sub_1D432D3E0();
  sub_1D451AC50();
  sub_1D432D328(v27);
  sub_1D432D328((uint64_t)v31);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1D451B880();
  sub_1D432D3C0();
  sub_1D451B808();
  LODWORD(v47) = sub_1D451A650();
  sub_1D432D328((uint64_t)v31);
  sub_1D432D328((uint64_t)v34);
  v38 = v52;
  v48(v52, v43);
  sub_1D451B880();
  sub_1D432D3C0();
  sub_1D451B808();
  v39 = sub_1D451A698();
  sub_1D432D328((uint64_t)v31);
  sub_1D432D328((uint64_t)v34);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v37, v38);
  v40 = 1;
  if ((v47 & 1) == 0)
    v40 = -1;
  if ((v39 & 1) != 0)
    return 0;
  else
    return v40;
}

void sub_1D432C928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D432D3EC(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_1D42B6F28();
}

void sub_1D432C948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D432D3EC(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_1D42B6F28();
}

void sub_1D432C968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D432D304(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_1D42B6F28();
}

void sub_1D432C988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D432D304(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_1D42B6F28();
}

void sub_1D432C9A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1D432D304(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_1D42B6F28();
}

uint64_t sub_1D432C9C8()
{
  sub_1D451A614();
  return sub_1D451A614();
}

uint64_t sub_1D432CA24()
{
  sub_1D451B958();
  sub_1D432C9C8();
  return sub_1D451B994();
}

void sub_1D432CA78()
{
  sub_1D432CA90();
}

void sub_1D432CA84()
{
  sub_1D432CA90();
}

void sub_1D432CA90()
{
  void (*v0)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D432D330();
  v10 = MEMORY[0x1D825E41C](&unk_1D452AEE8, v9);
  v0(v3, v2, v1, v10, v4, v5, v6, v7, v8);
  sub_1D42CB430();
}

void sub_1D432CAF8()
{
  sub_1D432CB1C();
}

void sub_1D432CB04()
{
  sub_1D432CB1C();
}

void sub_1D432CB10()
{
  sub_1D432CB1C();
}

void sub_1D432CB1C()
{
  void (*v0)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D432D330();
  v5 = MEMORY[0x1D825E41C](&unk_1D452AEE8, v4);
  v0(v3, v2, v1, v5);
  sub_1D42CB430();
}

uint64_t sub_1D432CB80()
{
  return sub_1D432CA24();
}

uint64_t sub_1D432CB88()
{
  return sub_1D432C9C8();
}

uint64_t sub_1D432CB90()
{
  sub_1D451B958();
  sub_1D432C9C8();
  return sub_1D451B994();
}

uint64_t sub_1D432CBE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int8x16_t v4;
  _OWORD v6[2];
  uint64_t v7;

  v3 = *(_QWORD *)(a3 - 40);
  v4 = vextq_s8(*(int8x16_t *)(a3 - 32), *(int8x16_t *)(a3 - 32), 8uLL);
  v6[0] = vextq_s8(*(int8x16_t *)(a3 - 16), *(int8x16_t *)(a3 - 16), 8uLL);
  v6[1] = v4;
  v7 = v3;
  return MEMORY[0x1D825E41C](&unk_1D452AE5C, a1, v6);
}

uint64_t sub_1D432CC24()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1D432CCB0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v10 = *(_QWORD *)(v6 + 64) + v8;
  v11 = *(_DWORD *)(v6 + 80) | v8;
  v12 = v11;
  v13 = v11 & 0x100000;
  if (v12 > 7 || v13 != 0 || (v10 & (unint64_t)~v9) + *(_QWORD *)(v7 + 64) > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v10) & v17, ((unint64_t)a2 + v10) & v17, v5);
  }
  return v4;
}

uint64_t sub_1D432CD80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_1D432CDD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1D432CE44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1D432CEB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1D432CF1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1D432CF88(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1D432D064 + 4 * byte_1D452ABD0[v21 - 1]))();
}

void sub_1D432D0D8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0u;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t type metadata accessor for Rational(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Rational);
}

uint64_t sub_1D432D2D8(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1D825E41C](&unk_1D452AD1C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D432D304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  return sub_1D432C620(a1, a2, a3, a4, a6, a7, a8, *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24));
}

uint64_t sub_1D432D320(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_1D432D328(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_1D432D350()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1D432D364()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t sub_1D432D390()
{
  return sub_1D451AC50();
}

uint64_t sub_1D432D3A0()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0, v2);
}

uint64_t sub_1D432D3C0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D432D3E0()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t sub_1D432D3EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  return sub_1D432C620(a1, a2, a3, a4, a5, a6, a7, a8, *(_QWORD *)(v8 + 16));
}

uint64_t *sub_1D432D3F8(void *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *v1;
  *((_DWORD *)v1 + 8) = 0;
  *((_BYTE *)v1 + 36) = 1;
  v1[5] = (uint64_t)a1;
  v1[2] = 0;
  v1[3] = 0;
  v5 = sub_1D42B8DB4();
  *(_QWORD *)(v5 + 16) = v1;
  *(_QWORD *)(v5 + 24) = v4;
  swift_retain();
  v6 = a1;
  v7 = sub_1D42CEEA4();
  if (v2)
  {
    swift_release();
    swift_release();
  }
  else
  {
    v8 = v7;

    swift_release();
    v6 = (id)v1[2];
    v1[2] = v8;
  }

  return v1;
}

id sub_1D432D4B0(uint64_t a1)
{
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  void *v44;
  id v45;
  void *v46;
  char v47;
  id v48;
  id v49;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  id v54;
  id v55;
  unsigned int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  __int128 *v63;
  uint64_t v64;
  void *v65;
  id v66;
  unsigned int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  __int128 *v74;
  uint64_t v75;
  id v76;
  unsigned int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  __int128 *v84;
  uint64_t v85;
  _BYTE *v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  id v97;
  id v98;
  id v99;
  id v100;
  _BYTE *v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  id v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  id v163;
  id v164;
  unsigned int v165;
  int v166;
  uint64_t v167;
  uint64_t v168;
  void *v169;
  uint64_t v170;
  uint64_t v171;
  __int128 *v172;
  uint64_t v173;
  id v174;
  unsigned int v175;
  int v176;
  int v177;
  uint64_t v178;
  uint64_t v179;
  void *v180;
  uint64_t v181;
  uint64_t v182;
  __int128 *v183;
  uint64_t v184;
  id v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  id v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  id v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  void *v255;
  void *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  void *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  void *v271;
  uint64_t v272;
  void *v273;
  void *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  void *v278;
  void *v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  void *v285;
  void *v286;
  uint64_t v287;
  void *v288;
  uint64_t v289;
  uint64_t v290;
  void *v291;
  id v292[8];

  v292[7] = *(id *)MEMORY[0x1E0C80C00];
  v2 = objc_opt_self();
  v292[0] = 0;
  v3 = sub_1D45001AC(v2, (uint64_t)v292);
  if (v3)
  {
    v4 = v292[0];
    v5 = (void *)sub_1D4307288();
    sub_1D44F5D78((uint64_t)v3, v5);

    v6 = (void *)sub_1D451A6C8();
    v292[0] = 0;
    v7 = sub_1D44FD014(v2, v3, v6, (uint64_t)v292);

    v8 = v292[0];
    if (v7)
    {
      v9 = v292[0];
      v10 = (void *)sub_1D451A6C8();
      v18 = sub_1D432DED4(v10, v11, v12, v13, v14, v15, v16, v17, v252, v265, v276, v282, v287, v289, (uint64_t)v292[0]);
      sub_1D432DF14();
      v19 = v292[0];
      if (v8)
      {
        v20 = v292[0];
        sub_1D451A6C8();
        v21 = sub_1D432DEB8();
        v25 = sub_1D44FF208(v21, v22, v23, v24);

        if (!v25)
        {
          v100 = v292[0];
          sub_1D432DEAC();
          sub_1D42F1E64();
          sub_1D42F1DA8();

LABEL_17:
          goto LABEL_24;
        }
        v26 = v292[0];
        v27 = (void *)sub_1D4307288();
        v35 = sub_1D432DED4(v27, v28, v29, v30, v31, v32, v33, v34, v253, v266, v277, v283, (uint64_t)v8, v290, (uint64_t)v292[0]);
        sub_1D432DF14();
        v284 = (uint64_t)v8;
        v36 = v292[0];
        sub_1D451A6C8();
        v37 = sub_1D432DEB8();
        v41 = sub_1D44FF500(v37, v38, v39, v40);
        sub_1D432DF14();
        v42 = v292[0];
        v278 = v8;
        v267 = v25;
        v292[6] = &unk_1EFEAADC8;
        v43 = swift_dynamicCastObjCProtocolConditional();
        if (!v43)
        {
          sub_1D42CF6E8();
          sub_1D42B6D0C();
          *v101 = 7;
          v102 = v42;
          sub_1D42F1DA8();

          sub_1D42F1E6C(v103, v104, v105, v106, v107, v108, v109, v110, v254, v25);
          sub_1D42F1F1C(v111, v112, v113, v114, v115, v116, v117, v118, v257, v268, (uint64_t)v8, v8);
          v96 = v279;
          goto LABEL_19;
        }
        v44 = (void *)v43;
        v292[0] = 0;
        v45 = v42;
        swift_unknownObjectRetain();
        v46 = v8;
        v47 = sub_1D44FF7D0(v2, v8, v44, (uint64_t)v292);
        v48 = v292[0];
        if ((v47 & 1) == 0)
        {
          v119 = v292[0];
          sub_1D432DEAC();
          sub_1D42F1E64();
          sub_1D42F1DA8();

          sub_1D42F1E6C(v120, v121, v122, v123, v124, v125, v126, v127, v254, v25);
          sub_1D42F1F1C(v128, v129, v130, v131, v132, v133, v134, v135, v258, v269, (uint64_t)v8, v8);

          swift_unknownObjectRelease();
          return v3;
        }
        v49 = v292[0];
        swift_unknownObjectRelease();
        sub_1D451A6C8();
        v50 = sub_1D432DEB8();
        v54 = sub_1D44FD2A4(v50, v51, v52, v53);

        if (!v54)
        {
          v146 = v292[0];
          sub_1D432DEAC();
          sub_1D42F1E64();
          sub_1D42F1DA8();

          sub_1D42F1E6C(v147, v148, v149, v150, v151, v152, v153, v154, v254, v267);
          sub_1D42F1F1C(v155, v156, v157, v158, v159, v160, v161, v162, v259, v270, (uint64_t)v8, v8);

          goto LABEL_24;
        }
        v255 = v54;
        v55 = v292[0];
        sub_1D432DEF0();
        sub_1D450053C(v56, v57, 1, v58);
        v59 = sub_1D432DE74();
        v65 = v291;
        if ((sub_1D42F1E90(v59, v60, v7, v288, v61, v62, v63, v64) & 1) != 0
          && (v66 = v291,
              sub_1D432DEF0(),
              sub_1D432DF0C(v67, v68, 400, v69),
              v70 = sub_1D432DE74(),
              v65 = v291,
              sub_1D42F1E90(v70, v71, v288, v267, v72, v73, v74, v75)))
        {
          v76 = v291;
          sub_1D432DEF0();
          sub_1D432DF0C(v77, v78, 64, v79);
          v80 = sub_1D432DE74();
          if (!sub_1D42F1E90(v80, v81, v267, v8, v82, v83, v84, v85))
          {
            v163 = v291;
            sub_1D432DF1C();
            sub_1D42F1E64();
            sub_1D42F1DA8();

            goto LABEL_23;
          }
          if ((*(_DWORD *)(a1
                                        + OBJC_IVAR____TtC13SoundAnalysis42SNLogMelBasedFeatureExtractorConfiguration_stepSizeFrames)
                            - 15361) < 0xFFFFC400)
          {
            sub_1D432DD14();
            sub_1D42B6D0C();
            *v86 = 0;
            v87 = v291;
            sub_1D42F1DA8();

            sub_1D42F1E6C(v88, v89, v90, v91, v92, v93, v94, v95, (uint64_t)v54, v267);
            v96 = v256;
LABEL_19:

            return v3;
          }
          v164 = v291;
          sub_1D432DF28();
          sub_1D432DF0C(v165, v166, 6144, v167);
          v168 = sub_1D432DE74();
          v46 = v8;
          if (sub_1D42F1E90(v168, v169, v8, v8, v170, v171, v172, v173))
          {
            v174 = v291;
            sub_1D4342438();
            sub_1D432DF28();
            sub_1D432DF0C(v175, v176, v177, v178);
            v179 = sub_1D432DE74();
            v8 = v54;
            if ((sub_1D42F1E90(v179, v180, v278, v54, v181, v182, v183, v184) & 1) != 0)
            {
              v185 = v291;
              sub_1D44F3DE8((uint64_t)v3);
              sub_1D44F44A0((uint64_t)v3);

              sub_1D432DF04(v186, v187, v188, v189, v190, v191, v192, v193, (uint64_t)v54, (uint64_t)v267, (uint64_t)v278, v284, v288);
              sub_1D42F1E6C(v194, v195, v196, v197, v198, v199, v200, v201, v260, v271);
              sub_1D42F1F1C(v202, v203, v204, v205, v206, v207, v208, v209, v261, v272, v280, v285);

              return v3;
            }
            v227 = v291;
            sub_1D4519AA4();

            sub_1D42F1DA8();
            sub_1D432DF04(v228, v229, v230, v231, v232, v233, v234, v235, (uint64_t)v54, (uint64_t)v267, (uint64_t)v278, v284, v288);
            sub_1D42F1E6C(v236, v237, v238, v239, v240, v241, v242, v243, v263, v274);
            sub_1D42F1F1C(v244, v245, v246, v247, v248, v249, v250, v251, v264, v275, v281, v286);

            goto LABEL_17;
          }
          v210 = v291;
          sub_1D432DEAC();
          sub_1D42F1E64();
          sub_1D42F1DA8();

          sub_1D432DF04(v211, v212, v213, v214, v215, v216, v217, v218, (uint64_t)v54, (uint64_t)v267, (uint64_t)v8, (uint64_t)v8, v288);
          sub_1D42F1E6C(v219, v220, v221, v222, v223, v224, v225, v226, v262, v273);

        }
        else
        {
          v136 = v65;
          sub_1D432DEAC();
          sub_1D42F1E64();
          sub_1D42F1DA8();

          sub_1D42F1F1C(v137, v138, v139, v140, v141, v142, v143, v144, (uint64_t)v54, (uint64_t)v267, (uint64_t)v8, v8);
        }

LABEL_23:
        goto LABEL_24;
      }
      v99 = v292[0];
      sub_1D432DEAC();
      sub_1D42F1E64();
      sub_1D42F1DA8();

    }
    else
    {
      v98 = v292[0];
      sub_1D4519AA4();
      sub_1D42F1E64();
      sub_1D42F1DA8();
    }
LABEL_24:

    return v3;
  }
  v97 = v292[0];
  sub_1D4519AA4();
  sub_1D42F1E64();
  sub_1D42F1DA8();
  return v3;
}

id sub_1D432DAEC()
{
  uint64_t v0;
  void *v1;
  _BYTE *v3;

  v1 = *(void **)(v0 + 16);
  if (v1)
    return v1;
  sub_1D432DD14();
  sub_1D42B6D0C();
  *v3 = 1;
  return (id)swift_willThrow();
}

void sub_1D432DB44(int a1, double a2)
{
  double *v2;
  uint64_t v3;
  double v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v6 = *v2;
  if ((*((_BYTE *)v2 + 36) & 1) != 0 || (v2[3] == a2 ? (v7 = *((_DWORD *)v2 + 8) == a1) : (v7 = 0), !v7))
  {
    v8 = sub_1D42B8DB4();
    *(_QWORD *)(v8 + 16) = v2;
    *(double *)(v8 + 24) = v6;
    swift_retain();
    v9 = sub_1D42CEEA4();
    swift_release();
    if (!v3)
    {
      v10 = (void *)*((_QWORD *)v2 + 2);
      *((_QWORD *)v2 + 2) = v9;

      v2[3] = a2;
      *((_DWORD *)v2 + 8) = a1;
      *((_BYTE *)v2 + 36) = 0;
    }
  }
}

void sub_1D432DBF8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v4;
  id v5;

  v4 = *(id *)(a1 + 40);
  v5 = sub_1D432D4B0((uint64_t)v4);

  if (!v2)
    *a2 = v5;
}

uint64_t sub_1D432DC4C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D432DC70()
{
  sub_1D432DC4C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SNLogMelBasedFeatureExtractor()
{
  return objc_opt_self();
}

void sub_1D432DCB0(int a1, double a2)
{
  sub_1D432DB44(a1, a2);
}

id sub_1D432DCC4()
{
  return sub_1D432DAEC();
}

uint64_t sub_1D432DCD8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1D432DCFC(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1D432DBF8(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1D432DD14()
{
  unint64_t result;

  result = qword_1EFE4BDE8;
  if (!qword_1EFE4BDE8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452AFE4, &type metadata for SNLogMelBasedFeatureExtractor.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4BDE8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SNLogMelBasedFeatureExtractor.DomainError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D432DD9C + 4 * byte_1D452AF15[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D432DDD0 + 4 * byte_1D452AF10[v4]))();
}

uint64_t sub_1D432DDD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D432DDD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D432DDE0);
  return result;
}

uint64_t sub_1D432DDEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D432DDF4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D432DDF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D432DE00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SNLogMelBasedFeatureExtractor.DomainError()
{
  return &type metadata for SNLogMelBasedFeatureExtractor.DomainError;
}

unint64_t sub_1D432DE20()
{
  unint64_t result;

  result = qword_1EFE4BDF0;
  if (!qword_1EFE4BDF0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452AFBC, &type metadata for SNLogMelBasedFeatureExtractor.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4BDF0);
  }
  return result;
}

void sub_1D432DE60(_QWORD *a1@<X8>)
{
  sub_1D432DCFC(a1);
}

uint64_t sub_1D432DE74()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D432DEAC()
{
  return sub_1D4519AA4();
}

uint64_t sub_1D432DEB8()
{
  uint64_t v0;

  return v0;
}

id sub_1D432DED4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  void *v15;
  uint64_t v16;

  a15 = 0;
  return sub_1D44FEE98(v16, v15, a1, (uint64_t)&a15);
}

uint64_t sub_1D432DEF0()
{
  uint64_t v0;

  return v0;
}

void sub_1D432DF04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{

}

double sub_1D432DF0C@<D0>(unsigned int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  return sub_1D4500620(a1, a2, a3, 1, a4);
}

void sub_1D432DF14()
{
  void *v0;

}

uint64_t sub_1D432DF1C()
{
  return sub_1D4519AA4();
}

uint64_t sub_1D432DF28()
{
  uint64_t v0;

  return v0;
}

id sub_1D432DF3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  char v6;
  char v7;
  id v8;

  sub_1D451B13C();
  sub_1D432E5CC();
  MEMORY[0x1E0C80A78](v3);
  sub_1D42CB18C();
  sub_1D432E500();
  swift_bridgeObjectRetain();
  v4 = sub_1D432E03C();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0CB2398], v0);
  v5 = sub_1D451B130();
  v7 = v6;
  sub_1D432E5BC();
  if ((v7 & 1) != 0 || (objc_msgSend(v4, sel_isAtEnd) & 1) == 0)
  {

    return 0;
  }
  else
  {
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, *(double *)&v5);

  }
  return v8;
}

id sub_1D432E03C()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_1D451A6C8();
  sub_1D42BE8B4();
  v2 = objc_msgSend(v0, sel_initWithString_, v1);

  return v2;
}

id sub_1D432E0A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *), SEL *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  char v12;
  char v13;
  id v14;
  uint64_t v16;

  v6 = sub_1D451B13C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D432E500();
  swift_bridgeObjectRetain();
  v10 = sub_1D432E03C();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0CB2398], v6);
  v11 = a3(v9);
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((v13 & 1) != 0 || (objc_msgSend(v10, sel_isAtEnd) & 1) == 0)
  {

    return 0;
  }
  else
  {
    v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), *a4, v11);

  }
  return v14;
}

id sub_1D432E1D0(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v4 = sub_1D432E0A8(a1, a2, MEMORY[0x1E0CB2370], (SEL *)&selRef_initWithUnsignedLongLong_);
  v5 = v4;
  if (v4)
  {
    v6 = v4;
  }
  else
  {
    v7 = sub_1D432E0A8(a1, a2, MEMORY[0x1E0CB23B8], (SEL *)&selRef_initWithLongLong_);
    if (!v7)
    {
      v7 = sub_1D432DF3C();
      if (!v7)
      {
        type metadata accessor for SNError();
        sub_1D451B400();
        swift_bridgeObjectRelease();
        sub_1D451A794();
        v6 = (id)0x80000001D4552AF0;
        sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD000000000000026, 0x80000001D4552AF0);
        swift_bridgeObjectRelease();
        swift_willThrow();
        return v6;
      }
    }
    v6 = v7;
  }
  v8 = v5;

  return v6;
}

uint64_t sub_1D432E30C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  v3 = MEMORY[0x1E0DEE9D8];
  do
  {
    v4 = *(v2 - 1);
    v5 = *v2;
    if (v4)
      v6 = 0;
    else
      v6 = v5 == 0xE000000000000000;
    if (!v6 && (sub_1D451B820() & 1) == 0)
    {
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1D42C71F0();
      v7 = *(_QWORD *)(v3 + 16);
      if (v7 >= *(_QWORD *)(v3 + 24) >> 1)
        sub_1D42C71F0();
      *(_QWORD *)(v3 + 16) = v7 + 1;
      v8 = v3 + 16 * v7;
      *(_QWORD *)(v8 + 32) = v4;
      *(_QWORD *)(v8 + 40) = v5;
    }
    v2 += 2;
    --v1;
  }
  while (v1);
  sub_1D42BE8B4();
  return v3;
}

uint64_t sub_1D432E42C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D45199FC();
  sub_1D432E5CC();
  MEMORY[0x1E0C80A78](v0);
  sub_1D42CB18C();
  sub_1D45199F0();
  sub_1D432E53C();
  v1 = sub_1D451B1D8();
  sub_1D432E30C(v1);
  sub_1D42BE8B4();
  sub_1D432E5BC();
  sub_1D42B28FC((uint64_t *)&unk_1EFE51A80);
  sub_1D432E578();
  v2 = sub_1D451A644();
  swift_bridgeObjectRelease();
  return v2;
}

unint64_t sub_1D432E500()
{
  unint64_t result;

  result = qword_1EFE4BE00;
  if (!qword_1EFE4BE00)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFE4BE00);
  }
  return result;
}

unint64_t sub_1D432E53C()
{
  unint64_t result;

  result = qword_1EFE40470;
  if (!qword_1EFE40470)
  {
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EFE40470);
  }
  return result;
}

unint64_t sub_1D432E578()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFE56360;
  if (!qword_1EFE56360)
  {
    v1 = sub_1D42B8B10((uint64_t *)&unk_1EFE51A80);
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1EFE56360);
  }
  return result;
}

uint64_t sub_1D432E5BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

ValueMetadata *type metadata accessor for EmptyAudioSourceConfiguration()
{
  return &type metadata for EmptyAudioSourceConfiguration;
}

void sub_1D432E5F0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  void *v8;
  uint64_t v9;
  char v10;

  sub_1D432EE40(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  sub_1D432EE74();
  sub_1D432E670(v8);
}

void sub_1D432E610(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  if (!v2)
    *v1 = a1;
  sub_1D432EEA8();
}

void sub_1D432E620(void *a1)
{
  swift_retain();
  sub_1D432E81C(a1);
}

uint64_t sub_1D432E648(uint64_t a1)
{
  swift_release();
  return a1;
}

void sub_1D432E670(void *a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1D432E81C(a1);
}

uint64_t sub_1D432E6B0(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_1D432E6EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v12 = (char *)&v14 - v11;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a5 + 56))(a1, AssociatedTypeWitness, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, AssociatedTypeWitness);
}

void sub_1D432E7D8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char __src[72];

  sub_1D432EE40(a1, a2, a3, a4, a5, a6, a7, a8, v8, __src[0]);
  sub_1D432E81C(__src);
}

uint64_t sub_1D432E800(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;

  if (!v2)
    *v1 = result;
  return result;
}

void sub_1D432E81C(void *__src)
{
  _BYTE __dst[65];

  memcpy(__dst, __src, sizeof(__dst));
  swift_retain();
  swift_retain();
  sub_1D42B5B38((uint64_t)__src);
  sub_1D447124C();
}

uint64_t sub_1D432E898(uint64_t a1)
{
  uint64_t v1;

  sub_1D42BDEAC(v1);
  swift_release();
  swift_release();
  return a1;
}

void sub_1D432E8D8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  void *v8;
  uint64_t v9;
  char v10;

  sub_1D432EE40(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  sub_1D432EE74();
  sub_1D432E620(v8);
}

void sub_1D432E8F8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  if (!v2)
    *v1 = a1;
  sub_1D432EEA8();
}

_QWORD *sub_1D432E908(void *__src)
{
  __int128 __dst[4];

  memcpy(__dst, __src, 0x41uLL);
  return sub_1D42E2620(__dst);
}

uint64_t sub_1D432E94C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_1D42B28FC(&qword_1EFE4BE08);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42B5528(a1, a1[3]);
  sub_1D432EC94();
  sub_1D451BA24();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1D432EA10()
{
  sub_1D432EC94();
  return sub_1D451BA3C();
}

uint64_t sub_1D432EA38()
{
  sub_1D432EC94();
  return sub_1D451BA48();
}

uint64_t sub_1D432EA60(_QWORD *a1)
{
  return sub_1D432E94C(a1);
}

unint64_t sub_1D432EA78()
{
  unint64_t result;

  result = qword_1EFE478B0;
  if (!qword_1EFE478B0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452B0E0, &type metadata for EmptyAudioSourceConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EFE478B0);
  }
  return result;
}

uint64_t _s13SoundAnalysis6PubSubV14AnyCancellableV9toCombine0H0ADCyF_0()
{
  return swift_retain();
}

uint64_t sub_1D432EABC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_1D432EAC4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

void sub_1D432EACC()
{
  sub_1D432EEB8();
  MEMORY[0x1D825E41C](&unk_1D452B918);
  _s14descr1E97B8181C21ServerEnvironmentImplVMa();
}

void sub_1D432EB0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = MEMORY[0x1D825E41C](&unk_1D452B6C8, a1);
  sub_1D432EE58(v1, v2, v3, v4);
  sub_1D432EE94();
}

void sub_1D432EB28()
{
  sub_1D432EEB8();
  MEMORY[0x1D825E41C](&unk_1D4545650);
  type metadata accessor for AudioStreamAnalyzerEnvironmentImpl();
}

void sub_1D432EB68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = MEMORY[0x1D825E41C](&unk_1D45458B8, a1);
  sub_1D432EE58(v1, v2, v3, v4);
  sub_1D432EE94();
}

_QWORD *sub_1D432EB84@<X0>(void *__src@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  _BYTE __dst[72];

  memcpy(__dst, __src, 0x41uLL);
  result = sub_1D432E908(__dst);
  if (!v2)
    *a2 = result;
  return result;
}

_QWORD *sub_1D432EBE0@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1D432EB84(a1, a2);
}

void sub_1D432EC04(void *__src@<X3>, uint64_t *a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X2>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  _BYTE __dst[72];

  v9 = *a2;
  memcpy(__dst, __src, 0x41uLL);
  sub_1D4471F28(v9, a3, a4, __dst);
  if (!v5)
    *a5 = v10;
}

void sub_1D432EC78(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1D432EC04(*(void **)(v2 + 32), a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

unint64_t sub_1D432EC94()
{
  unint64_t result;

  result = qword_1EFE4BE10;
  if (!qword_1EFE4BE10)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452B22C, &type metadata for EmptyAudioSourceConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4BE10);
  }
  return result;
}

ValueMetadata *type metadata accessor for EmptyAudioSourceConfiguration.CodingKeys()
{
  return &type metadata for EmptyAudioSourceConfiguration.CodingKeys;
}

uint64_t initializeBufferWithCopyOfBuffer for StaticAudioSourceInstance(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t destroy for StaticAudioSourceInstance()
{
  return swift_release();
}

_QWORD *assignWithCopy for StaticAudioSourceInstance(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for StaticAudioSourceInstance(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

ValueMetadata *type metadata accessor for StaticAudioSourceInstance()
{
  return &type metadata for StaticAudioSourceInstance;
}

unint64_t sub_1D432EDC0()
{
  unint64_t result;

  result = qword_1EFE4BE18;
  if (!qword_1EFE4BE18)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452B1DC, &type metadata for EmptyAudioSourceConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4BE18);
  }
  return result;
}

unint64_t sub_1D432EE00()
{
  unint64_t result;

  result = qword_1EFE4BE20;
  if (!qword_1EFE4BE20)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452B204, &type metadata for EmptyAudioSourceConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4BE20);
  }
  return result;
}

void *sub_1D432EE40(void *__src, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char __dst)
{
  return memcpy(&__dst, __src, 0x41uLL);
}

uint64_t sub_1D432EE58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return sub_1D432E6EC(v5, v4, v6, a4, a1);
}

__n128 sub_1D432EE74()
{
  uint64_t v0;

  return *(__n128 *)v0;
}

void sub_1D432EECC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1D42C77C0();
    v3 = sub_1D4396C0C(a1);
    if ((v3 & 0x8000000000000000) == 0)
    {
      v5 = v3;
      if (v3 < 1 << *(_BYTE *)(a1 + 32))
      {
        v6 = v4;
        v7 = a1 + 64;
        while ((*(_QWORD *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v6 != *(_DWORD *)(a1 + 36))
            goto LABEL_18;
          v8 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v5);
          v9 = v8[1];
          v15 = v1;
          v16 = *v8;
          v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v5);
          v12 = *(_QWORD *)(v17 + 16);
          v11 = *(_QWORD *)(v17 + 24);
          swift_bridgeObjectRetain();
          if (v12 >= v11 >> 1)
            sub_1D42C77C0();
          *(_QWORD *)(v17 + 16) = v12 + 1;
          v13 = (_QWORD *)(v17 + 24 * v12);
          v13[4] = v16;
          v13[5] = v9;
          v13[6] = v10;
          if ((uint64_t)v5 >= -(-1 << *(_BYTE *)(a1 + 32)))
            goto LABEL_19;
          v7 = a1 + 64;
          if ((*(_QWORD *)(a1 + 64 + 8 * (v5 >> 6)) & (1 << v5)) == 0)
            goto LABEL_20;
          if (v6 != *(_DWORD *)(a1 + 36))
            goto LABEL_21;
          v14 = sub_1D451B304();
          v1 = v15 - 1;
          if (v15 == 1)
            return;
          v5 = v14;
          if ((v14 & 0x8000000000000000) == 0)
          {
            v6 = *(_DWORD *)(a1 + 36);
            if (v14 < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

uint64_t AOPClassificationResult.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D43341C8();
  sub_1D42B4EF4(&qword_1EFE4BE30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1D43341B8();
  sub_1D4334220();
  sub_1D43341B8();
  sub_1D42CB7B8();
  v0 = sub_1D4334124();
  sub_1D43332AC(v0, v1);
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for AOPClassificationResult()
{
  uint64_t result;

  result = qword_1EFE4BEC8;
  if (!qword_1EFE4BEC8)
    return swift_getSingletonMetadata();
  return result;
}

void static AOPClassificationResult.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((sub_1D4519CC0() & 1) != 0 && (v4 = sub_1D4334220(), (sub_1D4519CC0() & 1) != 0))
    sub_1D432F4C8(*(_QWORD *)(a1 + *(int *)(v4 + 24)), *(_QWORD *)(a2 + *(int *)(v4 + 24)));
  else
    sub_1D42CB15C();
}

void sub_1D432F1BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a1 == a2)
    return;
  sub_1D43340A4();
  if (!v7)
    return;
  v8 = 0;
  v9 = v2 + 64;
  sub_1D433402C();
  while (1)
  {
    if (v6)
    {
      sub_1D433408C();
      goto LABEL_21;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v11 >= v5)
      return;
    ++v8;
    if (!*(_QWORD *)(v9 + 8 * v11))
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v5)
        return;
      if (!*(_QWORD *)(v9 + 8 * v8))
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v5)
          return;
        if (!*(_QWORD *)(v9 + 8 * v8))
          break;
      }
    }
LABEL_20:
    sub_1D4334074();
LABEL_21:
    v13 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v14 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v10);
    sub_1D42DCE84();
    sub_1D4334214();
    sub_1D43341D0();
    if ((v4 & 1) == 0 || *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v13) != v14)
      return;
  }
  v12 = v11 + 3;
  if (v12 >= v5)
    return;
  if (*(_QWORD *)(v9 + 8 * v12))
  {
    v8 = v12;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v8 >= v5)
      return;
    ++v12;
    if (*(_QWORD *)(v9 + 8 * v8))
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

void sub_1D432F2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  char v22;
  _QWORD *v23;
  BOOL v24;
  char v25;
  int64_t v26;

  if (a1 == a2)
    return;
  sub_1D43340A4();
  if (!v24)
    return;
  v4 = 0;
  v5 = v2 + 64;
  v6 = 1 << *(_BYTE *)(v2 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(v2 + 64);
  v26 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v11 >= v26)
      return;
    v12 = *(_QWORD *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v26)
        return;
      v12 = *(_QWORD *)(v5 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v26)
          return;
        v12 = *(_QWORD *)(v5 + 8 * v4);
        if (!v12)
          break;
      }
    }
LABEL_22:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
    v14 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v15 = *v14;
    v16 = v14[1];
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 56) + 16 * v10);
    v19 = *v17;
    v18 = v17[1];
    swift_bridgeObjectRetain();
    sub_1D42CB7F8();
    v20 = sub_1D4366B34(v15, v16);
    v22 = v21;
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {
      sub_1D42CB0C4();
      return;
    }
    v23 = (_QWORD *)(*(_QWORD *)(v3 + 56) + 16 * v20);
    v24 = *v23 == v19 && v23[1] == v18;
    if (v24)
    {
      sub_1D42CB0C4();
    }
    else
    {
      v25 = sub_1D451B820();
      sub_1D42CB0C4();
      if ((v25 & 1) == 0)
        return;
    }
  }
  v13 = v11 + 3;
  if (v13 >= v26)
    return;
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v26)
      return;
    v12 = *(_QWORD *)(v5 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_34:
  __break(1u);
}

void sub_1D432F4C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;

  if (a1 == a2)
    return;
  sub_1D43340A4();
  if (!v7)
    return;
  v8 = 0;
  v9 = v2 + 64;
  sub_1D433402C();
  while (1)
  {
    if (v6)
    {
      sub_1D433408C();
      goto LABEL_21;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v11 >= v5)
      return;
    ++v8;
    if (!*(_QWORD *)(v9 + 8 * v11))
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v5)
        return;
      if (!*(_QWORD *)(v9 + 8 * v8))
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v5)
          return;
        if (!*(_QWORD *)(v9 + 8 * v8))
          break;
      }
    }
LABEL_20:
    sub_1D4334074();
LABEL_21:
    v13 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v14 = *(double *)(*(_QWORD *)(v2 + 56) + 8 * v10);
    sub_1D42DCE84();
    sub_1D4334214();
    sub_1D43341D0();
    if ((v4 & 1) == 0 || *(double *)(*(_QWORD *)(v3 + 56) + 8 * v13) != v14)
      return;
  }
  v12 = v11 + 3;
  if (v12 >= v5)
    return;
  if (*(_QWORD *)(v9 + 8 * v12))
  {
    v8 = v12;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v8 >= v5)
      return;
    ++v12;
    if (*(_QWORD *)(v9 + 8 * v8))
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1D432F5FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6D617473656D6974 && a2 == 0xEE00747261745370;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6D617473656D6974 && a2 == 0xEC000000646E4570;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6966697373616C63 && a2 == 0xEF736E6F69746163)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1D451B820();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1D432F7A0(unsigned __int8 a1)
{
  uint64_t result;

  result = 0x6D617473656D6974;
  if (a1 >= 2u)
    return 0x6966697373616C63;
  return result;
}

uint64_t sub_1D432F80C()
{
  unsigned __int8 *v0;

  return sub_1D432F7A0(*v0);
}

uint64_t sub_1D432F814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D432F5FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D432F838()
{
  sub_1D43333BC();
  return sub_1D451BA3C();
}

uint64_t sub_1D432F860()
{
  sub_1D43333BC();
  return sub_1D451BA48();
}

void AOPClassificationResult.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_1D42B28FC(&qword_1EFE4BE38);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1D42CB210();
  v7 = v6 - v5;
  sub_1D42B5528(a1, a1[3]);
  sub_1D43333BC();
  sub_1D451BA24();
  sub_1D4519CE4();
  sub_1D42B4EF4(&qword_1EFE4BE48, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1D43340F8();
  if (!v1)
  {
    type metadata accessor for AOPClassificationResult();
    sub_1D43340F8();
    sub_1D42B28FC(&qword_1EFE4BE50);
    sub_1D43333F8(&qword_1EFE4BE58, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB080], MEMORY[0x1E0DEA0B8]);
    sub_1D451B760();
  }
  sub_1D42F1FA0(v7, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_1D42BE844();
}

uint64_t AOPClassificationResult.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  sub_1D42BE9A8();
  sub_1D43341C8();
  sub_1D42B4EF4(&qword_1EFE4BE30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1D43341A8();
  v1 = sub_1D4334220();
  sub_1D43341A8();
  v2 = *(_QWORD *)(v0 + *(int *)(v1 + 24));
  sub_1D42CB7B8();
  sub_1D43332AC((uint64_t)v4, v2);
  sub_1D42BE8B4();
  return sub_1D42CB230();
}

void AOPClassificationResult.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(uint64_t, char *, uint64_t);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;

  v28 = a2;
  v31 = sub_1D4519CE4();
  v29 = *(_QWORD *)(v31 - 8);
  v3 = MEMORY[0x1E0C80A78](v31);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v30 = (char *)&v24 - v6;
  v32 = sub_1D42B28FC(&qword_1EFE4BE60);
  v7 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  sub_1D42CB210();
  v10 = v9 - v8;
  v11 = type metadata accessor for AOPClassificationResult();
  MEMORY[0x1E0C80A78](v11);
  sub_1D42CB210();
  v14 = v13 - v12;
  sub_1D42B5528(a1, a1[3]);
  sub_1D43333BC();
  v33 = v10;
  v15 = v34;
  sub_1D451BA0C();
  if (v15)
  {
    sub_1D42B5400((uint64_t)a1);
  }
  else
  {
    v26 = v5;
    v27 = a1;
    v34 = v7;
    v38 = 0;
    sub_1D42B4EF4(&qword_1EFE4BE68, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    v17 = v30;
    v16 = v31;
    sub_1D4334110();
    v18 = *(void (**)(uint64_t, char *, uint64_t))(v29 + 32);
    v25 = v14;
    v18(v14, v17, v16);
    v37 = 1;
    v19 = v26;
    sub_1D4334110();
    v20 = v11;
    v21 = *(int *)(v11 + 20);
    v22 = v25;
    v18(v25 + v21, v19, v16);
    sub_1D42B28FC(&qword_1EFE4BE50);
    v36 = 2;
    sub_1D43333F8(&qword_1EFE4BE70, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB0A8], MEMORY[0x1E0DEA0D8]);
    sub_1D451B688();
    v23 = (uint64_t)v27;
    sub_1D4334170();
    *(_QWORD *)(v22 + *(int *)(v20 + 24)) = v35;
    sub_1D433345C(v22, v28);
    sub_1D42B5400(v23);
    sub_1D43334A0(v22);
  }
  sub_1D42BE844();
}

uint64_t sub_1D432FDBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _BYTE v6[72];

  sub_1D451B958();
  sub_1D4519CE4();
  sub_1D42B4EF4(&qword_1EFE4BE30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1D451A614();
  sub_1D451A614();
  v4 = *(_QWORD *)(v2 + *(int *)(a2 + 24));
  swift_bridgeObjectRetain();
  sub_1D43332AC((uint64_t)v6, v4);
  swift_bridgeObjectRelease();
  return sub_1D451B994();
}

void sub_1D432FE7C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  AOPClassificationResult.init(from:)(a1, a2);
}

void sub_1D432FE90(_QWORD *a1)
{
  AOPClassificationResult.encode(to:)(a1);
}

void _SNClassification.identifier.getter()
{
  sub_1D42CB6CC();
  sub_1D42B6E24();
}

uint64_t _SNClassification.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____SNClassification_impl);
  *v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D432FF88(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _SNClassification.identifier.setter(v1, v2);
}

void _SNClassification.identifier.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____SNClassification_impl + 8);
  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____SNClassification_impl);
  a1[1] = v3;
  swift_bridgeObjectRetain();
  sub_1D42B6E24();
}

void sub_1D4330008(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    sub_1D42CB7B8();
    sub_1D4334208();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D4334208();
    sub_1D42CB15C();
  }
}

double _SNClassification.confidence.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____SNClassification_impl + 16);
}

void _SNClassification.confidence.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR____SNClassification_impl + 16) = a1;
}

double (*_SNClassification.confidence.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR____SNClassification_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(_QWORD *)(v1 + v2 + 16);
  return sub_1D43300DC;
}

double sub_1D43300DC(uint64_t a1)
{
  double result;

  result = *(double *)a1;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + *(_QWORD *)(a1 + 16) + 16) = *(_QWORD *)a1;
  return result;
}

void sub_1D43300F0()
{
  sub_1D4334198();
  __break(1u);
}

void sub_1D4330148(uint64_t a1, uint64_t a2, double a3)
{
  char *v3;
  objc_class *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  objc_super v15;

  v7 = (objc_class *)sub_1D42B7104();
  v8 = &v3[OBJC_IVAR____SNClassification_impl];
  *(_QWORD *)v8 = a1;
  *((_QWORD *)v8 + 1) = a2;
  *((double *)v8 + 2) = a3;
  v15.receiver = v3;
  v15.super_class = v7;
  sub_1D42CB364((uint64_t)v7, sel_init, v9, v10, v11, v12, v13, v14, v15);
  sub_1D4334190();
}

id _SNClassification.copy(with:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  id result;
  objc_super v11;

  v3 = (objc_class *)sub_1D42B7104();
  v4 = v1 + OBJC_IVAR____SNClassification_impl;
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____SNClassification_impl);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____SNClassification_impl + 8);
  v7 = *(_QWORD *)(v4 + 16);
  v8 = (char *)objc_allocWithZone(v3);
  v9 = &v8[OBJC_IVAR____SNClassification_impl];
  *(_QWORD *)v9 = v6;
  *((_QWORD *)v9 + 1) = v5;
  *((_QWORD *)v9 + 2) = v7;
  v11.receiver = v8;
  v11.super_class = v3;
  sub_1D42CB6CC();
  result = objc_msgSendSuper2(&v11, sel_init);
  a1[3] = v3;
  *a1 = result;
  return result;
}

void _SNClassification.hash.getter()
{
  sub_1D42BE9A8();
  sub_1D42CB7F8();
  sub_1D451A74C();
  sub_1D451B988();
  sub_1D42CB230();
  sub_1D42CB0C4();
  sub_1D43341E8();
}

BOOL _SNClassification.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  double v3;
  double v4;
  char v6;
  _BOOL8 v7;
  char *v9;
  _BYTE v10[32];
  _OWORD v11[2];
  __int128 v12;
  uint64_t v13;

  sub_1D42B7104();
  sub_1D42B28B4(a1, (uint64_t)&v12);
  if (v13)
  {
    sub_1D42B293C(&v12, v11);
    sub_1D42B294C((uint64_t)v11, (uint64_t)v10);
    if (sub_1D42B6E2C() && v9)
    {
      v3 = *(double *)(v1 + OBJC_IVAR____SNClassification_impl + 16);
      v4 = *(double *)&v9[OBJC_IVAR____SNClassification_impl + 16];
      if (*(_QWORD *)(v1 + OBJC_IVAR____SNClassification_impl) == *(_QWORD *)&v9[OBJC_IVAR____SNClassification_impl]
        && *(_QWORD *)(v1 + OBJC_IVAR____SNClassification_impl + 8) == *(_QWORD *)&v9[OBJC_IVAR____SNClassification_impl
                                                                                    + 8])
      {

      }
      else
      {
        v6 = sub_1D451B820();

        v7 = 0;
        if ((v6 & 1) == 0)
          goto LABEL_14;
      }
      v7 = v3 == v4;
    }
    else
    {
      v7 = 0;
    }
LABEL_14:
    sub_1D42B5400((uint64_t)v11);
    return v7;
  }
  return 0;
}

void _SNClassification.__allocating_init(coder:)(void *a1)
{
  sub_1D42CB9E4();
  _SNClassification.init(coder:)(a1);
  sub_1D42B6E24();
}

void _SNClassification.init(coder:)(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v2 = v1;
  swift_getObjectType();
  v4 = v2;
  v5 = (void *)sub_1D43340DC();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v5);

  sub_1D42CB340(v6, &qword_1EFE4BE88);
  v7 = sub_1D451B0D0();
  if (v7)
  {
    v8 = (void *)v7;
    sub_1D451A6E0();

  }
  swift_bridgeObjectRelease();
  sub_1D4334124();
  swift_deallocPartialClassInstance();
  sub_1D42EA500();
}

Swift::Void __swiftcall _SNClassification.encode(with:)(NSCoder with)
{
  uint64_t v1;
  double v3;
  void *v4;
  void *v5;
  id v6;

  v3 = *(double *)(v1 + OBJC_IVAR____SNClassification_impl + 16);
  v4 = (void *)sub_1D43340DC();
  -[objc_class encodeDouble:forKey:](with.super.isa, sel_encodeDouble_forKey_, v4, v3);

  sub_1D42CB7F8();
  v5 = (void *)sub_1D451A6C8();
  sub_1D42CB0C4();
  v6 = (id)sub_1D451A6C8();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v5, v6);

}

uint64_t _SNClassification.description.getter()
{
  sub_1D42CB7F8();
  sub_1D43341F0();
  sub_1D451A794();
  sub_1D42CB0C4();
  sub_1D451A794();
  sub_1D451ABD8();
  return 0;
}

void sub_1D4330774()
{
  sub_1D42BE9A8();
  sub_1D451B964();
  sub_1D42CB230();
  sub_1D42EA500();
}

void sub_1D43307A8()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____SNClassificationResult_cachedClassifications] = 0;

  sub_1D4334198();
  __break(1u);
}

void _SNClassificationResult.classificationDictionary.getter()
{
  uint64_t v0;

  sub_1D4311F3C();
  v0 = sub_1D42CB7B8();
  sub_1D433251C(v0);
  sub_1D42BE8B4();
  sub_1D4334190();
}

void _SNClassificationResult.classificationDictionary.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = sub_1D43341E0(a1);
  sub_1D42BE8B4();
  v3 = v1 + OBJC_IVAR____SNClassificationResult_impl;
  sub_1D42B8E84();
  *(_QWORD *)(v3 + 48) = v2;
  swift_bridgeObjectRelease();
  sub_1D42CB7D0();
}

void sub_1D43309B0()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  _SNClassificationResult.classificationDictionary.setter(v0);
}

void _SNClassificationResult.classificationDictionary.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  _SNClassificationResult.classificationDictionary.getter();
  *a1 = v3;
  sub_1D42B6E24();
}

void sub_1D4330A08(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = sub_1D42CB7B8();
    _SNClassificationResult.classificationDictionary.setter(v2);
    sub_1D4334130();
  }
  else
  {
    _SNClassificationResult.classificationDictionary.setter(*a1);
    sub_1D42B6E24();
  }
}

double _SNClassificationResult.timeRange.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double result;

  v3 = v1 + OBJC_IVAR____SNClassificationResult_impl;
  sub_1D4311F3C();
  v4 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(v3 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v3 + 16);
  result = *(double *)(v3 + 32);
  *(double *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v4;
  return result;
}

double _SNClassificationResult.timeRange.setter(double *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  v3 = *(_QWORD *)a1;
  v4 = *((_QWORD *)a1 + 2);
  v5 = *((_QWORD *)a1 + 3);
  v6 = *((_QWORD *)a1 + 5);
  v7 = v1 + OBJC_IVAR____SNClassificationResult_impl;
  sub_1D42B8E84();
  *(_QWORD *)v7 = v3;
  *(double *)(v7 + 8) = a1[1];
  *(_QWORD *)(v7 + 16) = v4;
  *(_QWORD *)(v7 + 24) = v5;
  result = a1[4];
  *(double *)(v7 + 32) = result;
  *(_QWORD *)(v7 + 40) = v6;
  return result;
}

void _SNClassificationResult.timeRange.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[12] = v1;
  _SNClassificationResult.timeRange.getter((uint64_t)v3);
  sub_1D42CB15C();
}

void sub_1D4330C0C(uint64_t **a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *a1;
  v2 = **a1;
  v3 = (*a1)[2];
  v4 = (*a1)[3];
  v5 = (*a1)[5];
  v6 = (_QWORD *)((*a1)[12] + OBJC_IVAR____SNClassificationResult_impl);
  v7 = (*a1)[1];
  v8 = (*a1)[4];
  sub_1D42B8E84();
  *v6 = v2;
  v6[1] = v7;
  v6[2] = v3;
  v6[3] = v4;
  v6[4] = v8;
  v6[5] = v5;
  free(v1);
}

uint64_t _SNClassificationResult.classifierIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____SNClassificationResult_impl;
  sub_1D4311F3C();
  v2 = *(_QWORD *)(v1 + 56);
  sub_1D42CB7B8();
  return v2;
}

void _SNClassificationResult.classifierIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = v2 + OBJC_IVAR____SNClassificationResult_impl;
  sub_1D42B8E84();
  *(_QWORD *)(v5 + 56) = a1;
  *(_QWORD *)(v5 + 64) = a2;
  swift_bridgeObjectRelease();
  sub_1D42CB7D0();
}

void sub_1D4330DE0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  _SNClassificationResult.classifierIdentifier.setter(v1, v2);
}

void _SNClassificationResult.classifierIdentifier.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  v4 = v1 + OBJC_IVAR____SNClassificationResult_impl;
  sub_1D43341F0();
  sub_1D4311F3C();
  v5 = *(_QWORD *)(v4 + 64);
  v3[3] = *(_QWORD *)(v4 + 56);
  v3[4] = v5;
  swift_bridgeObjectRetain();
  sub_1D43341F0();
  sub_1D42CB15C();
}

void sub_1D4330E78(void **a1, char a2)
{
  void *v2;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    sub_1D42CB7F8();
    sub_1D4334228();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D4334228();
  }
  free(v2);
}

id sub_1D4330EC8(void *a1)
{
  char *v1;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  objc_super v21;

  v3 = (objc_class *)sub_1D42B7104();
  *(_QWORD *)&v1[OBJC_IVAR____SNClassificationResult_cachedClassifications] = 0;
  v4 = MEMORY[0x1E0CA2E40];
  v5 = *MEMORY[0x1E0CA2E40];
  v6 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 16);
  v7 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 24);
  v8 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 40);
  v9 = v1;
  v10 = sub_1D451A5E4();
  v11 = &v9[OBJC_IVAR____SNClassificationResult_impl];
  *(_QWORD *)v11 = v5;
  *((_QWORD *)v11 + 1) = *(_QWORD *)(v4 + 8);
  *((_QWORD *)v11 + 2) = v6;
  *((_QWORD *)v11 + 3) = v7;
  *((_QWORD *)v11 + 4) = *(_QWORD *)(v4 + 32);
  *((_QWORD *)v11 + 5) = v8;
  *((_QWORD *)v11 + 6) = v10;
  *((_QWORD *)v11 + 7) = 0;
  *((_QWORD *)v11 + 8) = 0;

  v21.receiver = v9;
  v21.super_class = v3;
  v19 = sub_1D42CB364(v12, sel_init, v13, v14, v15, v16, v17, v18, v21);

  return v19;
}

void sub_1D4330FD0(uint64_t a1)
{
  char *v1;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  char *v11;
  objc_super v12;

  v3 = (objc_class *)sub_1D42B7104();
  *(_QWORD *)&v1[OBJC_IVAR____SNClassificationResult_cachedClassifications] = 0;
  v4 = MEMORY[0x1E0CA2E40];
  v5 = *MEMORY[0x1E0CA2E40];
  v6 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 16);
  v7 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 24);
  v8 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 40);
  v9 = v1;
  v10 = sub_1D43341E0(a1);
  sub_1D42BE8B4();
  v11 = &v9[OBJC_IVAR____SNClassificationResult_impl];
  *(_QWORD *)v11 = v5;
  *((_QWORD *)v11 + 1) = *(_QWORD *)(v4 + 8);
  *((_QWORD *)v11 + 2) = v6;
  *((_QWORD *)v11 + 3) = v7;
  *((_QWORD *)v11 + 4) = *(_QWORD *)(v4 + 32);
  *((_QWORD *)v11 + 5) = v8;
  *((_QWORD *)v11 + 6) = v10;
  *((_QWORD *)v11 + 7) = 0;
  *((_QWORD *)v11 + 8) = 0;

  v12.receiver = v9;
  v12.super_class = v3;
  objc_msgSendSuper2(&v12, sel_init);
  sub_1D43341E8();
}

void sub_1D43310EC(uint64_t a1, uint64_t a2)
{
  if (a2)
    sub_1D43310FC(a1, a2);
}

void sub_1D43310FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  objc_class *v13;
  char *v14;
  char *v15;
  objc_super v16;

  v5 = v2 + OBJC_IVAR____SNClassificationResult_impl;
  sub_1D42B8E84();
  v6 = *(_QWORD *)(v5 + 48);
  v7 = *(_QWORD *)(v6 + 16);
  sub_1D42CB7B8();
  if (v7 && (v8 = sub_1D4334124(), v10 = sub_1D4366B34(v8, v9), (v11 & 1) != 0))
  {
    v12 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v10);
    swift_endAccess();
    sub_1D42BE8B4();
    v13 = (objc_class *)type metadata accessor for _SNClassification();
    v14 = (char *)objc_allocWithZone(v13);
    v15 = &v14[OBJC_IVAR____SNClassification_impl];
    *(_QWORD *)v15 = a1;
    *((_QWORD *)v15 + 1) = a2;
    *((_QWORD *)v15 + 2) = v12;
    v16.receiver = v14;
    v16.super_class = v13;
    sub_1D42CB7B8();
    objc_msgSendSuper2(&v16, sel_init);
  }
  else
  {
    swift_endAccess();
    sub_1D42BE8B4();
  }
  sub_1D42EA500();
}

void sub_1D4331238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____SNClassificationResult_cachedClassifications;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____SNClassificationResult_cachedClassifications))
  {
    sub_1D4311F3C();
    v2 = sub_1D42CB7F8();
    v3 = sub_1D43312BC(v2);
    sub_1D42CB0C4();
    *(_QWORD *)(v0 + v1) = v3;
    sub_1D42CB7B8();
    sub_1D42CB0C4();
  }
  swift_bridgeObjectRetain();
  sub_1D4334190();
}

uint64_t sub_1D43312BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  objc_super v13;
  uint64_t v14;

  sub_1D432EECC(a1);
  v14 = v1;
  swift_bridgeObjectRetain();
  sub_1D43328F4(&v14);
  sub_1D42BE8B4();
  v2 = v14;
  v3 = *(_QWORD *)(v14 + 16);
  if (v3)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1D451B49C();
    v4 = (objc_class *)type metadata accessor for _SNClassification();
    v5 = (uint64_t *)(v2 + 48);
    do
    {
      v7 = *(v5 - 2);
      v6 = *(v5 - 1);
      v8 = *v5;
      v5 += 3;
      v9 = (char *)objc_allocWithZone(v4);
      v10 = &v9[OBJC_IVAR____SNClassification_impl];
      *(_QWORD *)v10 = v7;
      *((_QWORD *)v10 + 1) = v6;
      *((_QWORD *)v10 + 2) = v8;
      v13.receiver = v9;
      v13.super_class = v4;
      sub_1D42CB6CC();
      objc_msgSendSuper2(&v13, sel_init);
      sub_1D451B484();
      sub_1D451B4A8();
      sub_1D451B4B4();
      sub_1D451B490();
      --v3;
    }
    while (v3);
    v11 = v14;
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9D8];
  }
  return v11;
}

id sub_1D4331458(uint64_t a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  objc_super v15;

  sub_1D42B7104();
  sub_1D43341FC();
  *(_QWORD *)&v1[OBJC_IVAR____SNClassificationResult_cachedClassifications] = 0;
  v3 = &v1[OBJC_IVAR____SNClassificationResult_impl];
  *(_QWORD *)v3 = v4;
  *((_QWORD *)v3 + 1) = *(_QWORD *)(a1 + 8);
  *((_OWORD *)v3 + 1) = *(_OWORD *)(a1 + 16);
  *((_QWORD *)v3 + 4) = *(_QWORD *)(a1 + 32);
  *((_QWORD *)v3 + 5) = v5;
  *((_QWORD *)v3 + 6) = v6;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)(a1 + 56);
  v15.receiver = v1;
  v15.super_class = v7;
  return sub_1D42CB364((uint64_t)v7, sel_init, v8, v9, v10, v11, v12, v13, v15);
}

id _SNClassificationResult.copy(with:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id result;
  _QWORD v11[2];
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = (objc_class *)sub_1D42B7104();
  v4 = v1 + OBJC_IVAR____SNClassificationResult_impl;
  sub_1D4311F3C();
  v5 = *(_QWORD *)(v4 + 40);
  v6 = *(_QWORD *)(v4 + 48);
  v7 = *(_QWORD *)(v4 + 56);
  v8 = *(_QWORD *)(v4 + 64);
  v11[0] = *(_QWORD *)v4;
  v11[1] = *(_QWORD *)(v4 + 8);
  v12 = *(_OWORD *)(v4 + 16);
  v13 = *(_QWORD *)(v4 + 32);
  v14 = v5;
  v15 = v6;
  v16 = v7;
  v17 = v8;
  v9 = objc_allocWithZone(v3);
  sub_1D42D71EC();
  sub_1D42DCE84();
  result = sub_1D4331458((uint64_t)v11);
  a1[3] = v3;
  *a1 = result;
  return result;
}

uint64_t sub_1D4331588(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *__return_ptr))
{
  id v5;
  uint64_t v6;
  _QWORD v8[4];

  v5 = a1;
  a4(v8);

  sub_1D42B5528(v8, v8[3]);
  v6 = sub_1D451B814();
  sub_1D42B5400((uint64_t)v8);
  return v6;
}

void _SNClassificationResult.hash.getter()
{
  sub_1D4311F3C();
  sub_1D43341FC();
  sub_1D43EF408();
  sub_1D43341E8();
}

uint64_t _SNClassificationResult.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v17[2];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23[2];
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  _OWORD v29[2];
  __int128 v30;
  uint64_t v31;

  sub_1D42B7104();
  sub_1D42B28B4(a1, (uint64_t)&v30);
  if (v31)
  {
    sub_1D42B293C(&v30, v29);
    sub_1D42B294C((uint64_t)v29, (uint64_t)v23);
    if (sub_1D42B6E2C() && (v3 = (void *)v17[0]) != 0)
    {
      v4 = v1 + OBJC_IVAR____SNClassificationResult_impl;
      sub_1D4311F3C();
      sub_1D43341FC();
      v23[0] = v5;
      v6 = *(_QWORD *)(v4 + 8);
      v24 = *(_OWORD *)(v4 + 16);
      v7 = *(_QWORD *)(v4 + 32);
      v23[1] = v6;
      v25 = v7;
      v26 = v8;
      v27 = v9;
      v10 = *(_OWORD *)(v4 + 56);
      v11 = v17[0] + OBJC_IVAR____SNClassificationResult_impl;
      v28 = v10;
      sub_1D4311F3C();
      sub_1D43341FC();
      v17[0] = v12;
      v17[1] = *(_QWORD *)(v11 + 8);
      v18 = *(_OWORD *)(v11 + 16);
      v19 = *(_QWORD *)(v11 + 32);
      v20 = v13;
      v21 = v14;
      v22 = *(_OWORD *)(v11 + 56);
      v15 = sub_1D43F1A60(v23, v17);

    }
    else
    {
      v15 = 0;
    }
    sub_1D42B5400((uint64_t)v29);
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1D43317D4(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_OWORD *))
{
  id v6;
  id v7;
  char v8;
  _OWORD v10[2];

  if (a3)
  {
    v6 = a1;
    swift_unknownObjectRetain();
    sub_1D451B208();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
    v7 = a1;
  }
  v8 = a4(v10);

  sub_1D42B5464((uint64_t)v10);
  return v8 & 1;
}

void _SNClassificationResult.__allocating_init(coder:)(void *a1)
{
  sub_1D42CB9E4();
  _SNClassificationResult.init(coder:)(a1);
  sub_1D42B6E24();
}

id _SNClassificationResult.init(coder:)(void *a1)
{
  char *v1;
  void *v2;
  char *v3;
  uint64_t ObjectType;
  char *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  id v23;
  uint64_t v24;
  _BYTE *v25;
  objc_class *v27;
  objc_super v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = v1;
  ObjectType = swift_getObjectType();
  *(_QWORD *)&v3[OBJC_IVAR____SNClassificationResult_cachedClassifications] = 0;
  sub_1D42CB340(ObjectType, (unint64_t *)&qword_1EFE47310);
  v6 = v3;
  v7 = sub_1D451B0D0();
  if (!v7)
  {
    sub_1D42B7F2C();
    v11 = sub_1D42B6D0C();
    sub_1D4334160(v11, v12);

LABEL_9:
    sub_1D42B7204();
    swift_deallocPartialClassInstance();
    return 0;
  }
  v8 = (void *)v7;
  sub_1D42CB340(v7, &qword_1EFE4BE88);
  v9 = sub_1D451B0D0();
  v10 = (void *)v9;
  if (v9)
  {
    v30 = 0;
    sub_1D451A6E0();

  }
  v2 = 0;
  sub_1D42CB340(v9, (unint64_t *)&qword_1EFE404B0);
  v13 = sub_1D451B0DC();
  if (!v13 || (v29 = v13, sub_1D42B28FC(&qword_1EFE4BEA8), sub_1D42B28FC(&qword_1EFE4BEB0), (sub_1D42B6E2C() & 1) == 0))
  {
    sub_1D42B7F2C();
    v24 = sub_1D42B6D0C();
    sub_1D4334160(v24, v25);

    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v14 = v35;
  objc_msgSend(v8, sel_CMTimeRangeValue);
  v15 = v29;
  v27 = (objc_class *)ObjectType;
  v17 = v31;
  v16 = v32;
  v18 = v34;
  v19 = v30;
  v20 = v33;
  v21 = sub_1D43341E0(v14);
  sub_1D42CB5C8();

  v22 = &v6[OBJC_IVAR____SNClassificationResult_impl];
  *(_QWORD *)v22 = v15;
  *((_QWORD *)v22 + 1) = v19;
  *((_QWORD *)v22 + 2) = v17;
  *((_QWORD *)v22 + 3) = v16;
  *((_QWORD *)v22 + 4) = v20;
  *((_QWORD *)v22 + 5) = v18;
  *((_QWORD *)v22 + 6) = v21;
  *((_QWORD *)v22 + 7) = 0;
  *((_QWORD *)v22 + 8) = 0;

  v28.receiver = v6;
  v28.super_class = v27;
  v23 = objc_msgSendSuper2(&v28, sel_init);

  return v23;
}

Swift::Void __swiftcall _SNClassificationResult.encode(with:)(NSCoder with)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  _QWORD v16[6];
  _QWORD v17[6];

  _SNClassificationResult.timeRange.getter((uint64_t)v17);
  v3 = v17[0];
  v4 = v17[2];
  v5 = v17[3];
  v6 = v17[5];
  v7 = (void *)objc_opt_self();
  v16[0] = v3;
  v16[1] = v17[1];
  v16[2] = v4;
  v16[3] = v5;
  v16[4] = v17[4];
  v16[5] = v6;
  v8 = objc_msgSend(v7, sel_valueWithCMTimeRange_, v16);
  v9 = (void *)sub_1D451A6C8();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v8, v9);

  _SNClassificationResult.classificationDictionary.getter();
  sub_1D42CB340(v10, (unint64_t *)&qword_1EFE404B0);
  v11 = (void *)sub_1D451A5A8();
  sub_1D42CB0C4();
  sub_1D430740C();
  v12 = (void *)sub_1D451A6C8();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v11, v12);

  v13 = v1 + OBJC_IVAR____SNClassificationResult_impl;
  sub_1D4311F3C();
  if (*(_QWORD *)(v13 + 64))
  {
    sub_1D42CB6CC();
    v14 = (void *)sub_1D451A6C8();
    sub_1D42B7204();
    sub_1D430740C();
    v15 = (void *)sub_1D451A6C8();
    -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v14, v15);

  }
}

id sub_1D4331D70(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  void *v5;

  v4 = a1;
  a3();

  sub_1D43341F0();
  v5 = (void *)sub_1D451A6C8();
  sub_1D42CB0C4();
  return v5;
}

uint64_t _SNClassificationResult.description.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  _QWORD v13[6];
  objc_super v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[6];

  v14.receiver = v0;
  v14.super_class = (Class)sub_1D42B7104();
  v1 = objc_msgSendSuper2(&v14, sel_description);
  v2 = sub_1D451A6EC();
  v4 = v3;

  v15 = v2;
  v16 = v4;
  sub_1D4334150();
  _SNClassificationResult.timeRange.getter((uint64_t)v17);
  v5 = v17[0];
  v6 = v17[2];
  v7 = v17[3];
  v8 = v17[5];
  v9 = (void *)objc_opt_self();
  v13[0] = v5;
  v13[1] = v17[1];
  v13[2] = v6;
  v13[3] = v7;
  v13[4] = v17[4];
  v13[5] = v8;
  v10 = objc_msgSend(v9, sel_valueWithCMTimeRange_, v13);
  v11 = objc_msgSend(v10, sel_description);
  sub_1D451A6EC();

  sub_1D451A794();
  sub_1D42CB5C8();
  sub_1D4334150();
  sub_1D4311F3C();
  sub_1D42CB7B8();
  sub_1D451A5D8();
  sub_1D451A794();
  sub_1D42BE8B4();
  sub_1D42CB0C4();
  return v15;
}

void sub_1D4331F1C()
{
  uint64_t v0;
  unint64_t v1;

  sub_1D42CB9E4();
  v0 = sub_1D4334124();
  sub_1D4331F4C(v0, v1);
  sub_1D42CB15C();
}

id sub_1D4331F4C(uint64_t a1, unint64_t a2)
{
  char *v2;
  objc_class *v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  objc_class *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  id v29;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  objc_super v36;

  v5 = (objc_class *)sub_1D42B7104();
  *(_QWORD *)&v2[OBJC_IVAR____SNClassificationResult_cachedClassifications] = 0;
  sub_1D42CB340((uint64_t)v5, (unint64_t *)&unk_1EFE4BEF0);
  sub_1D42CB340(v6, &qword_1EFE4E3E0);
  v7 = v2;
  v18 = (void *)sub_1D451AF98();
  if (v18)
  {
    sub_1D4332194();
    v20 = v19;

    v21 = &v20[OBJC_IVAR____SNClassificationResult_impl];
    sub_1D4311F3C();
    v22 = *(_QWORD *)v21;
    v23 = *((_QWORD *)v21 + 2);
    v24 = *((_QWORD *)v21 + 6);
    v35 = *((_QWORD *)v21 + 5);
    v25 = *((_QWORD *)v21 + 8);
    v32 = *((_QWORD *)v21 + 3);
    v33 = *((_QWORD *)v21 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26 = *((_QWORD *)v21 + 1);
    v27 = *((_QWORD *)v21 + 4);

    v28 = &v7[OBJC_IVAR____SNClassificationResult_impl];
    *(_QWORD *)v28 = v22;
    *((_QWORD *)v28 + 1) = v26;
    *((_QWORD *)v28 + 2) = v23;
    *((_QWORD *)v28 + 3) = v32;
    *((_QWORD *)v28 + 4) = v27;
    *((_QWORD *)v28 + 5) = v35;
    *((_QWORD *)v28 + 6) = v24;
    *((_QWORD *)v28 + 7) = v33;
    *((_QWORD *)v28 + 8) = v25;
  }
  else
  {
    sub_1D4333D90();
    v31 = (void *)sub_1D42B6D0C();
    swift_willThrow();
    sub_1D430740C();
    sub_1D44734B4(0xD000000000000047, v8);
    v9 = MEMORY[0x1E0CA2E40];
    v10 = *MEMORY[0x1E0CA2E40];
    v11 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 16);
    v12 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 24);
    v34 = a1;
    v13 = a2;
    v14 = v5;
    v15 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 40);
    v16 = sub_1D451A5E4();

    v17 = &v7[OBJC_IVAR____SNClassificationResult_impl];
    *(_QWORD *)v17 = v10;
    *((_QWORD *)v17 + 1) = *(_QWORD *)(v9 + 8);
    *((_QWORD *)v17 + 2) = v11;
    *((_QWORD *)v17 + 3) = v12;
    *((_QWORD *)v17 + 4) = *(_QWORD *)(v9 + 32);
    *((_QWORD *)v17 + 5) = v15;
    *((_QWORD *)v17 + 6) = v16;
    v5 = v14;
    a2 = v13;
    a1 = v34;
    *((_QWORD *)v17 + 7) = 0;
    *((_QWORD *)v17 + 8) = 0;
  }

  v36.receiver = v7;
  v36.super_class = v5;
  v29 = objc_msgSendSuper2(&v36, sel_init);
  sub_1D42B5420(a1, a2);
  return v29;
}

void sub_1D4332194()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, sel_impl);
  sub_1D451B208();
  swift_unknownObjectRelease();
  type metadata accessor for _SNClassificationResult();
  swift_dynamicCast();
  sub_1D4334190();
}

uint64_t sub_1D4332254()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  unint64_t v11;
  id v13[5];

  v13[4] = *(id *)MEMORY[0x1E0C80C00];
  v1 = (void *)sub_1D42B7104();
  v2 = (void *)objc_opt_self();
  v13[3] = v1;
  v13[0] = v0;
  v3 = objc_allocWithZone((Class)SNClassificationResult);
  v4 = v0;
  v5 = (void *)sub_1D43F6E18(v13);
  v13[0] = 0;
  v6 = objc_msgSend(v2, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v5, 1, v13);

  v7 = v13[0];
  if (v6)
  {
    v8 = sub_1D4519C54();

  }
  else
  {
    v9 = v7;
    v10 = (void *)sub_1D4519AA4();

    swift_willThrow();
    sub_1D430740C();
    sub_1D44734B4(0xD000000000000043, v11);

    return 0;
  }
  return v8;
}

void sub_1D43323E0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;

  swift_bridgeObjectRelease();
  sub_1D4334124();
  v1 = (void *)sub_1D4519C3C();
  objc_msgSend(v0, sel_initWithBinarySampleRepresentation_, v1);
  v2 = sub_1D4334124();
  sub_1D42B5420(v2, v3);

  sub_1D42CB15C();
}

_QWORD *sub_1D433251C(uint64_t a1)
{
  _QWORD *result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  id v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  sub_1D42B28FC(&qword_1EFE4BF18);
  result = (_QWORD *)sub_1D451B5B0();
  v3 = result;
  v4 = 0;
  v5 = *(_QWORD *)(a1 + 64);
  v25 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = (char *)(result + 8);
  if ((v7 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v18 = *v16;
    v17 = v16[1];
    v19 = *(double *)(*(_QWORD *)(a1 + 56) + 8 * i);
    v20 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    swift_bridgeObjectRetain();
    result = objc_msgSend(v20, sel_initWithDouble_, v19);
    *(_QWORD *)&v10[(i >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << i;
    v21 = (_QWORD *)(v3[6] + 16 * i);
    *v21 = v18;
    v21[1] = v17;
    *(_QWORD *)(v3[7] + 8 * i) = result;
    v22 = v3[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v24;
    if (v8)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v13 >= v9)
      return v3;
    v14 = *(_QWORD *)(v25 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        return v3;
      v14 = *(_QWORD *)(v25 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v9)
          return v3;
        v14 = *(_QWORD *)(v25 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v9)
    return v3;
  v14 = *(_QWORD *)(v25 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v9)
      return v3;
    v14 = *(_QWORD *)(v25 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

_QWORD *sub_1D433271C(uint64_t a1)
{
  _QWORD *result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  sub_1D42B28FC(&qword_1EFE4BF10);
  result = (_QWORD *)sub_1D451B5B0();
  v3 = result;
  v4 = 0;
  v5 = *(_QWORD *)(a1 + 64);
  v25 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = (char *)(result + 8);
  if ((v7 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v18 = *v16;
    v17 = v16[1];
    v19 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * i);
    sub_1D42D71EC();
    result = objc_msgSend(v19, sel_doubleValue);
    *(_QWORD *)&v10[(i >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << i;
    v20 = (_QWORD *)(v3[6] + 16 * i);
    *v20 = v18;
    v20[1] = v17;
    *(_QWORD *)(v3[7] + 8 * i) = v21;
    v22 = v3[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v24;
    if (v8)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v13 >= v9)
      return v3;
    v14 = *(_QWORD *)(v25 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        return v3;
      v14 = *(_QWORD *)(v25 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v9)
          return v3;
        v14 = *(_QWORD *)(v25 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v9)
    return v3;
  v14 = *(_QWORD *)(v25 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v9)
      return v3;
    v14 = *(_QWORD *)(v25 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1D43328F4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1D42DC8C8();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_1D433295C(v5);
  *a1 = v2;
}

void sub_1D433295C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  double *v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  unint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  char v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  unint64_t v77;
  double *v78;
  double v79;
  uint64_t v80;
  double *v81;
  double v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __int128 *v98;
  uint64_t v99;

  v3 = a1[1];
  v4 = sub_1D451B7B4();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_1D4332F9C(0, v3, 1, a1);
      return;
    }
    goto LABEL_125;
  }
  v5 = v4;
  sub_1D43E2B9C(v3 / 2);
  v94 = a1;
  v95 = v6;
  v97 = v3;
  v98 = v7;
  if (v3 <= 0)
  {
    v99 = MEMORY[0x1E0DEE9D8];
    v30 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_91:
    if (v30 < 2)
    {
LABEL_102:
      swift_bridgeObjectRelease();
      if (v97 >= -1)
      {
        *(_QWORD *)(v95 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_130;
    }
    v86 = *v94;
    while (1)
    {
      v87 = v30 - 2;
      if (v30 < 2)
        break;
      if (!v86)
        goto LABEL_134;
      v88 = v99;
      v89 = *(_QWORD *)(v99 + 32 + 16 * v87);
      v90 = *(_QWORD *)(v99 + 32 + 16 * (v30 - 1) + 8);
      sub_1D4333018(v86 + 24 * v89, (__int128 *)(v86 + 24 * *(_QWORD *)(v99 + 32 + 16 * (v30 - 1))), v86 + 24 * v90, v98);
      if (v1)
        goto LABEL_87;
      if (v90 < v89)
        goto LABEL_120;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D4333298(v99);
        v88 = v93;
      }
      if (v87 >= *(_QWORD *)(v88 + 16))
        goto LABEL_121;
      v91 = (_QWORD *)(v88 + 32 + 16 * v87);
      *v91 = v89;
      v91[1] = v90;
      v92 = *(_QWORD *)(v88 + 16);
      if (v30 > v92)
        goto LABEL_122;
      memmove((void *)(v88 + 32 + 16 * (v30 - 1)), (const void *)(v88 + 32 + 16 * v30), 16 * (v92 - v30));
      v99 = v88;
      *(_QWORD *)(v88 + 16) = v92 - 1;
      v30 = v92 - 1;
      if (v92 <= 2)
        goto LABEL_102;
    }
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
    return;
  }
  v8 = 0;
  v9 = *a1;
  v99 = MEMORY[0x1E0DEE9D8];
  v96 = v5;
  while (1)
  {
    v10 = v8++;
    if (v8 < v3)
    {
      v11 = *(double *)(v9 + 24 * v8 + 16);
      v12 = *(double *)(v9 + 24 * v10 + 16);
      v8 = v10 + 2;
      if (v10 + 2 < v3)
      {
        v13 = (double *)(v9 + 64 + 24 * v10);
        v14 = v11;
        while (1)
        {
          v15 = v14;
          v14 = *v13;
          if (v12 < v11 == v15 >= *v13)
            break;
          ++v8;
          v13 += 3;
          if (v8 >= v3)
          {
            v8 = v3;
            break;
          }
        }
      }
      if (v12 < v11)
      {
        if (v8 < v10)
          goto LABEL_127;
        if (v10 < v8)
        {
          v16 = 24 * v8;
          v17 = 24 * v10;
          v18 = v8;
          v19 = v10;
          do
          {
            if (v19 != --v18)
            {
              if (!v9)
                goto LABEL_133;
              v20 = v9 + v17;
              v21 = v9 + v16;
              v22 = *(_QWORD *)(v9 + v17);
              v23 = *(_QWORD *)(v9 + v17 + 8);
              v24 = *(_QWORD *)(v9 + v17 + 16);
              v25 = *(_QWORD *)(v9 + v16 - 8);
              *(_OWORD *)v20 = *(_OWORD *)(v9 + v16 - 24);
              *(_QWORD *)(v20 + 16) = v25;
              *(_QWORD *)(v21 - 24) = v22;
              *(_QWORD *)(v21 - 16) = v23;
              *(_QWORD *)(v21 - 8) = v24;
            }
            ++v19;
            v16 -= 24;
            v17 += 24;
          }
          while (v19 < v18);
        }
      }
    }
    if (v8 >= v3)
      goto LABEL_26;
    if (__OFSUB__(v8, v10))
      goto LABEL_124;
    if (v8 - v10 >= v5)
      goto LABEL_26;
    v26 = v10 + v5;
    if (__OFADD__(v10, v5))
      goto LABEL_128;
    if (v26 >= v3)
      v26 = v3;
    if (v26 < v10)
      goto LABEL_129;
    if (v8 == v26)
    {
LABEL_26:
      v27 = v99;
    }
    else
    {
      v78 = (double *)(v9 + 24 * v8);
      v27 = v99;
      do
      {
        v79 = *(double *)(v9 + 24 * v8 + 16);
        v80 = v10;
        v81 = v78;
        do
        {
          if (*(v81 - 1) >= v79)
            break;
          if (!v9)
            goto LABEL_131;
          v82 = *v81;
          v83 = *((_QWORD *)v81 + 1);
          *(_OWORD *)v81 = *(_OWORD *)(v81 - 3);
          v81[2] = *(v81 - 1);
          *((_QWORD *)v81 - 2) = v83;
          *(v81 - 1) = v79;
          *(v81 - 3) = v82;
          v81 -= 3;
          ++v80;
        }
        while (v8 != v80);
        ++v8;
        v78 += 3;
      }
      while (v8 != v26);
      v8 = v26;
    }
    if (v8 < v10)
      goto LABEL_123;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1D43331B0(0, *(_QWORD *)(v27 + 16) + 1, 1, (char *)v27);
      v27 = v84;
    }
    v29 = *(_QWORD *)(v27 + 16);
    v28 = *(_QWORD *)(v27 + 24);
    v30 = v29 + 1;
    if (v29 >= v28 >> 1)
    {
      sub_1D43331B0(v28 > 1, v29 + 1, 1, (char *)v27);
      v27 = v85;
    }
    *(_QWORD *)(v27 + 16) = v30;
    v31 = v27 + 32;
    v32 = (uint64_t *)(v27 + 32 + 16 * v29);
    *v32 = v10;
    v32[1] = v8;
    v99 = v27;
    if (v29)
      break;
    v30 = 1;
LABEL_75:
    v5 = v96;
    v3 = v97;
    if (v8 >= v97)
      goto LABEL_91;
  }
  while (1)
  {
    v33 = v30 - 1;
    if (v30 >= 4)
    {
      v38 = v31 + 16 * v30;
      v39 = *(_QWORD *)(v38 - 64);
      v40 = *(_QWORD *)(v38 - 56);
      v44 = __OFSUB__(v40, v39);
      v41 = v40 - v39;
      if (v44)
        goto LABEL_108;
      v43 = *(_QWORD *)(v38 - 48);
      v42 = *(_QWORD *)(v38 - 40);
      v44 = __OFSUB__(v42, v43);
      v36 = v42 - v43;
      v37 = v44;
      if (v44)
        goto LABEL_109;
      v45 = v30 - 2;
      v46 = (uint64_t *)(v31 + 16 * (v30 - 2));
      v48 = *v46;
      v47 = v46[1];
      v44 = __OFSUB__(v47, v48);
      v49 = v47 - v48;
      if (v44)
        goto LABEL_110;
      v44 = __OFADD__(v36, v49);
      v50 = v36 + v49;
      if (v44)
        goto LABEL_112;
      if (v50 >= v41)
      {
        v68 = (uint64_t *)(v31 + 16 * v33);
        v70 = *v68;
        v69 = v68[1];
        v44 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v44)
          goto LABEL_118;
        v61 = v36 < v71;
        goto LABEL_64;
      }
    }
    else
    {
      if (v30 != 3)
      {
        v62 = *(_QWORD *)(v27 + 32);
        v63 = *(_QWORD *)(v27 + 40);
        v44 = __OFSUB__(v63, v62);
        v55 = v63 - v62;
        v56 = v44;
        goto LABEL_58;
      }
      v35 = *(_QWORD *)(v27 + 32);
      v34 = *(_QWORD *)(v27 + 40);
      v44 = __OFSUB__(v34, v35);
      v36 = v34 - v35;
      v37 = v44;
    }
    if ((v37 & 1) != 0)
      goto LABEL_111;
    v45 = v30 - 2;
    v51 = (uint64_t *)(v31 + 16 * (v30 - 2));
    v53 = *v51;
    v52 = v51[1];
    v54 = __OFSUB__(v52, v53);
    v55 = v52 - v53;
    v56 = v54;
    if (v54)
      goto LABEL_113;
    v57 = (uint64_t *)(v31 + 16 * v33);
    v59 = *v57;
    v58 = v57[1];
    v44 = __OFSUB__(v58, v59);
    v60 = v58 - v59;
    if (v44)
      goto LABEL_115;
    if (__OFADD__(v55, v60))
      goto LABEL_117;
    if (v55 + v60 >= v36)
    {
      v61 = v36 < v60;
LABEL_64:
      if (v61)
        v33 = v45;
      goto LABEL_66;
    }
LABEL_58:
    if ((v56 & 1) != 0)
      goto LABEL_114;
    v64 = (uint64_t *)(v31 + 16 * v33);
    v66 = *v64;
    v65 = v64[1];
    v44 = __OFSUB__(v65, v66);
    v67 = v65 - v66;
    if (v44)
      goto LABEL_116;
    if (v67 < v55)
      goto LABEL_75;
LABEL_66:
    v72 = v33 - 1;
    if (v33 - 1 >= v30)
    {
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
      goto LABEL_119;
    }
    if (!v9)
      goto LABEL_132;
    v73 = (uint64_t *)(v31 + 16 * v72);
    v74 = *v73;
    v75 = (_QWORD *)(v31 + 16 * v33);
    v76 = v75[1];
    sub_1D4333018(v9 + 24 * *v73, (__int128 *)(v9 + 24 * *v75), v9 + 24 * v76, v98);
    if (v1)
      break;
    if (v76 < v74)
      goto LABEL_105;
    if (v33 > *(_QWORD *)(v99 + 16))
      goto LABEL_106;
    *v73 = v74;
    *(_QWORD *)(v31 + 16 * v72 + 8) = v76;
    v77 = *(_QWORD *)(v99 + 16);
    if (v33 >= v77)
      goto LABEL_107;
    v27 = v99;
    v30 = v77 - 1;
    memmove((void *)(v31 + 16 * v33), v75 + 2, 16 * (v77 - 1 - v33));
    *(_QWORD *)(v99 + 16) = v77 - 1;
    if (v77 <= 2)
      goto LABEL_75;
  }
LABEL_87:
  swift_bridgeObjectRelease();
  if (v97 < -1)
    goto LABEL_126;
  *(_QWORD *)(v95 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_1D4332F9C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  double *v8;
  double v9;
  uint64_t v10;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 24 * a3;
    while (2)
    {
      v6 = *(double *)(v4 + 24 * a3 + 16);
      v7 = result;
      v8 = (double *)v5;
      do
      {
        if (*(v8 - 1) >= v6)
          break;
        if (!v4)
        {
          __break(1u);
          return result;
        }
        v9 = *v8;
        v10 = *((_QWORD *)v8 + 1);
        *(_OWORD *)v8 = *(_OWORD *)(v8 - 3);
        v8[2] = *(v8 - 1);
        *((_QWORD *)v8 - 2) = v10;
        *(v8 - 1) = v6;
        *(v8 - 3) = v9;
        v8 -= 3;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 24;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1D4333018(unint64_t a1, __int128 *a2, unint64_t a3, __int128 *a4)
{
  __int128 *v4;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v14;
  __int128 *v15;
  __int128 v18;
  unint64_t v21;
  __int128 *v22;
  __int128 *v23;
  BOOL v24;
  BOOL v25;
  __int128 v26;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = (uint64_t)a2 - a1;
  v9 = (uint64_t)((uint64_t)a2 - a1) / 24;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 24;
  if (v9 >= v11)
  {
    sub_1D42C6B20(a2, (uint64_t)(a3 - (_QWORD)a2) / 24, a4);
    v12 = (unint64_t)v4 + 24 * v11;
    if (v7 >= (unint64_t)v6 || v10 < 24)
      goto LABEL_45;
    v21 = a3 - 24;
    while (1)
    {
      v22 = (__int128 *)(v21 + 24);
      if (*((double *)v6 - 1) >= *(double *)(v12 - 8))
      {
        v23 = (__int128 *)(v12 - 24);
        v25 = v22 != (__int128 *)v12 || v21 >= v12;
        v12 -= 24;
        if (!v25)
          goto LABEL_41;
      }
      else
      {
        v23 = (__int128 *)((char *)v6 - 24);
        v24 = v22 != v6 || v21 >= (unint64_t)v6;
        v6 = (__int128 *)((char *)v6 - 24);
        if (!v24)
          goto LABEL_41;
      }
      v26 = *v23;
      *(_QWORD *)(v21 + 16) = *((_QWORD *)v23 + 2);
      *(_OWORD *)v21 = v26;
LABEL_41:
      v21 -= 24;
      if ((unint64_t)v6 <= v7 || v12 <= (unint64_t)v4)
        goto LABEL_45;
    }
  }
  sub_1D42C6B20(a1, (uint64_t)((uint64_t)a2 - a1) / 24, a4);
  v12 = (unint64_t)v4 + 24 * v9;
  if ((unint64_t)v6 < a3 && v8 >= 24)
  {
    do
    {
      if (*((double *)v4 + 2) >= *((double *)v6 + 2))
      {
        v14 = v7 == (_QWORD)v4;
        v15 = v4;
        v4 = (__int128 *)((char *)v4 + 24);
        if (v14 && v7 < (unint64_t)v4)
          goto LABEL_18;
      }
      else
      {
        v14 = v7 == (_QWORD)v6;
        v15 = v6;
        v6 = (__int128 *)((char *)v6 + 24);
        if (v14 && v7 < (unint64_t)v6)
          goto LABEL_18;
      }
      v18 = *v15;
      *(_QWORD *)(v7 + 16) = *((_QWORD *)v15 + 2);
      *(_OWORD *)v7 = v18;
LABEL_18:
      v7 += 24;
    }
    while ((unint64_t)v4 < v12 && (unint64_t)v6 < a3);
  }
  v6 = (__int128 *)v7;
LABEL_45:
  sub_1D42C6B20(v4, (uint64_t)(v12 - (_QWORD)v4) / 24, v6);
  return 1;
}

void sub_1D43331B0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1D42B28FC(&qword_1EFE40528);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12)
      memmove(v12, v13, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  sub_1D42BE8B4();
  sub_1D42CB15C();
}

void sub_1D4333298(uint64_t a1)
{
  sub_1D43331B0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_1D43332AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2 + 64;
  sub_1D433402C();
  sub_1D4326750();
  v5 = 0;
  v6 = 0;
  if (!v3)
    goto LABEL_3;
LABEL_2:
  sub_1D433408C();
  while (1)
  {
    sub_1D4334180();
    sub_1D43340BC();
    sub_1D4334138();
    sub_1D42CB5C8();
    sub_1D451B988();
    v5 ^= sub_1D451B994();
    if (v3)
      goto LABEL_2;
LABEL_3:
    v7 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    if (v7 >= v2)
      goto LABEL_17;
    ++v6;
    if (!*(_QWORD *)(v4 + 8 * v7))
    {
      v6 = v7 + 1;
      if (v7 + 1 >= v2)
        goto LABEL_17;
      if (!*(_QWORD *)(v4 + 8 * v6))
        break;
    }
LABEL_14:
    sub_1D4334074();
  }
  v8 = v7 + 2;
  if (v8 >= v2)
  {
LABEL_17:
    sub_1D42CFC14();
    sub_1D4334144();
    sub_1D42CB414();
    return;
  }
  if (*(_QWORD *)(v4 + 8 * v8))
  {
    v6 = v8;
    goto LABEL_14;
  }
  while (1)
  {
    v6 = v8 + 1;
    if (__OFADD__(v8, 1))
      break;
    if (v6 >= v2)
      goto LABEL_17;
    ++v8;
    if (*(_QWORD *)(v4 + 8 * v6))
      goto LABEL_14;
  }
LABEL_19:
  __break(1u);
}

unint64_t sub_1D43333BC()
{
  unint64_t result;

  result = qword_1EFE4BE40;
  if (!qword_1EFE4BE40)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452B4AC, &type metadata for AOPClassificationResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4BE40);
  }
  return result;
}

uint64_t sub_1D43333F8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = sub_1D42B8B10(&qword_1EFE4BE50);
    v10[0] = a2;
    v10[1] = a3;
    result = MEMORY[0x1D825E41C](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D433345C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AOPClassificationResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D43334A0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AOPClassificationResult();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1D43334DC()
{
  sub_1D42B4EF4((unint64_t *)&unk_1EFE4BEB8, (uint64_t (*)(uint64_t))type metadata accessor for AOPClassificationResult, (uint64_t)&protocol conformance descriptor for AOPClassificationResult);
}

void sub_1D4333508()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D42CB12C();
  _SNClassification.identifier.getter();
  *v0 = v1;
  v0[1] = v2;
  sub_1D42B6E24();
}

void sub_1D433352C()
{
  double *v0;

  sub_1D42CB12C();
  *v0 = _SNClassification.confidence.getter();
  sub_1D42B6E24();
}

void sub_1D433354C(double *a1)
{
  _SNClassification.confidence.setter(*a1);
  sub_1D42B6E24();
}

void sub_1D433356C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42CB12C();
  _SNClassificationResult.classificationDictionary.getter();
  *v0 = v1;
  sub_1D42B6E24();
}

void sub_1D4333590(uint64_t a1@<X8>)
{
  _SNClassificationResult.timeRange.getter(a1);
  sub_1D42B6E24();
}

void sub_1D43335AC(double *a1)
{
  _SNClassificationResult.timeRange.setter(a1);
  sub_1D42B6E24();
}

void sub_1D43335C8()
{
  uint64_t *v0;
  uint64_t v1;

  sub_1D42CB12C();
  *v0 = _SNClassificationResult.classifierIdentifier.getter();
  v0[1] = v1;
  sub_1D42B6E24();
}

uint64_t *initializeBufferWithCopyOfBuffer for AOPClassificationResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D4519CE4();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AOPClassificationResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v4 = sub_1D4519CE4();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AOPClassificationResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1D4519CE4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AOPClassificationResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1D4519CE4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AOPClassificationResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1D4519CE4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for AOPClassificationResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1D4519CE4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AOPClassificationResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1D4333910(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D43341C8();
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, a2, v4);
  else
    sub_1D42CB15C();
}

uint64_t storeEnumTagSinglePayload for AOPClassificationResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1D4333988(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_1D43341C8();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
    sub_1D42CB15C();
  }
}

uint64_t sub_1D43339F0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D4519CE4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for _SNClassification()
{
  return objc_opt_self();
}

uint64_t method lookup function for _SNClassification()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of _SNClassification.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t type metadata accessor for _SNClassificationResult()
{
  return objc_opt_self();
}

uint64_t method lookup function for _SNClassificationResult()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of _SNClassificationResult.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t storeEnumTagSinglePayload for AOPClassificationResult.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D4333B1C + 4 * byte_1D452B285[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D4333B50 + 4 * byte_1D452B280[v4]))();
}

uint64_t sub_1D4333B50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4333B58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4333B60);
  return result;
}

uint64_t sub_1D4333B6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4333B74);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D4333B78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4333B80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AOPClassificationResult.CodingKeys()
{
  return &type metadata for AOPClassificationResult.CodingKeys;
}

unint64_t sub_1D4333BA0()
{
  unint64_t result;

  result = qword_1EFE4BED8;
  if (!qword_1EFE4BED8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452B484, &type metadata for AOPClassificationResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4BED8);
  }
  return result;
}

unint64_t sub_1D4333BE0()
{
  unint64_t result;

  result = qword_1EFE4BEE0;
  if (!qword_1EFE4BEE0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452B3F4, &type metadata for AOPClassificationResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4BEE0);
  }
  return result;
}

unint64_t sub_1D4333C20()
{
  unint64_t result;

  result = qword_1EFE4BEE8;
  if (!qword_1EFE4BEE8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452B41C, &type metadata for AOPClassificationResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4BEE8);
  }
  return result;
}

void sub_1D4333C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;

  v2 = a2 + 64;
  sub_1D4334054();
  v5 = v4 & v3;
  v7 = (unint64_t)(v6 + 63) >> 6;
  sub_1D4326750();
  v8 = 0;
  v9 = 0;
  if (!v5)
    goto LABEL_3;
LABEL_2:
  for (v5 &= v5 - 1; ; v5 = (v11 - 1) & v11)
  {
    sub_1D4334180();
    sub_1D43340BC();
    sub_1D4334138();
    sub_1D42CB5C8();
    sub_1D451B964();
    v8 ^= sub_1D451B994();
    if (v5)
      goto LABEL_2;
LABEL_3:
    v10 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    if (v10 >= v7)
      goto LABEL_17;
    v11 = *(_QWORD *)(v2 + 8 * v10);
    ++v9;
    if (!v11)
    {
      v9 = v10 + 1;
      if (v10 + 1 >= v7)
        goto LABEL_17;
      v11 = *(_QWORD *)(v2 + 8 * v9);
      if (!v11)
        break;
    }
LABEL_14:
    ;
  }
  v12 = v10 + 2;
  if (v12 >= v7)
  {
LABEL_17:
    sub_1D42CFC14();
    sub_1D4334144();
    sub_1D42CB414();
    return;
  }
  v11 = *(_QWORD *)(v2 + 8 * v12);
  if (v11)
  {
    v9 = v12;
    goto LABEL_14;
  }
  while (1)
  {
    v9 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v9 >= v7)
      goto LABEL_17;
    v11 = *(_QWORD *)(v2 + 8 * v9);
    ++v12;
    if (v11)
      goto LABEL_14;
  }
LABEL_19:
  __break(1u);
}

unint64_t sub_1D4333D90()
{
  unint64_t result;

  result = qword_1EFE4BF00;
  if (!qword_1EFE4BF00)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452B570, &type metadata for _SNClassificationResult.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4BF00);
  }
  return result;
}

uint64_t sub_1D4333DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;

  v13 = a2 + 64;
  sub_1D4334054();
  v4 = v3 & v2;
  v6 = (unint64_t)(v5 + 63) >> 6;
  result = sub_1D4326750();
  v8 = 0;
  v9 = 0;
  if (!v4)
    goto LABEL_3;
LABEL_2:
  for (v4 &= v4 - 1; ; v4 = (v11 - 1) & v11)
  {
    sub_1D4334180();
    sub_1D42D71EC();
    swift_bridgeObjectRetain();
    sub_1D4334138();
    sub_1D42CB5C8();
    sub_1D451A74C();
    swift_bridgeObjectRelease();
    result = sub_1D451B994();
    v8 ^= result;
    if (v4)
      goto LABEL_2;
LABEL_3:
    v10 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    if (v10 >= v6)
      goto LABEL_17;
    v11 = *(_QWORD *)(v13 + 8 * v10);
    ++v9;
    if (!v11)
    {
      v9 = v10 + 1;
      if (v10 + 1 >= v6)
        goto LABEL_17;
      v11 = *(_QWORD *)(v13 + 8 * v9);
      if (!v11)
        break;
    }
LABEL_14:
    ;
  }
  v12 = v10 + 2;
  if (v12 >= v6)
  {
LABEL_17:
    sub_1D42CFC14();
    return sub_1D4334144();
  }
  v11 = *(_QWORD *)(v13 + 8 * v12);
  if (v11)
  {
    v9 = v12;
    goto LABEL_14;
  }
  while (1)
  {
    v9 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v9 >= v6)
      goto LABEL_17;
    v11 = *(_QWORD *)(v13 + 8 * v9);
    ++v12;
    if (v11)
      goto LABEL_14;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t storeEnumTagSinglePayload for _SNClassificationResult.DomainError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D4333F90 + 4 * byte_1D452B28A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D4333FB0 + 4 * byte_1D452B28F[v4]))();
}

_BYTE *sub_1D4333F90(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D4333FB0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4333FB8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4333FC0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4333FC8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4333FD0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for _SNClassificationResult.DomainError()
{
  return &type metadata for _SNClassificationResult.DomainError;
}

unint64_t sub_1D4333FF0()
{
  unint64_t result;

  result = qword_1EFE4BF20;
  if (!qword_1EFE4BF20)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452B548, &type metadata for _SNClassificationResult.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4BF20);
  }
  return result;
}

uint64_t sub_1D43340BC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D43340DC()
{
  return sub_1D451A6C8();
}

uint64_t sub_1D43340F8()
{
  return sub_1D451B760();
}

uint64_t sub_1D4334110()
{
  return sub_1D451B688();
}

uint64_t sub_1D4334124()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4334130()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4334138()
{
  return sub_1D451A74C();
}

uint64_t sub_1D4334144()
{
  return sub_1D451B964();
}

uint64_t sub_1D4334150()
{
  return sub_1D451A794();
}

uint64_t sub_1D4334160(uint64_t a1, _BYTE *a2)
{
  *a2 = 0;
  return swift_willThrow();
}

uint64_t sub_1D4334170()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 96) + 8))(*(_QWORD *)(v0 - 104), *(_QWORD *)(v0 - 112));
}

uint64_t sub_1D4334198()
{
  return sub_1D451B55C();
}

uint64_t sub_1D43341A8()
{
  return sub_1D451A614();
}

uint64_t sub_1D43341B8()
{
  return sub_1D451A614();
}

uint64_t sub_1D43341C8()
{
  return sub_1D4519CE4();
}

uint64_t sub_1D43341D0()
{
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1D43341E0(uint64_t a1)
{
  return sub_1D433271C(a1);
}

uint64_t sub_1D43341F0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4334208()
{
  uint64_t v0;
  uint64_t v1;

  return _SNClassification.identifier.setter(v1, v0);
}

unint64_t sub_1D4334214()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1D4366B34(v0, v1);
}

uint64_t sub_1D4334220()
{
  return type metadata accessor for AOPClassificationResult();
}

void sub_1D4334228()
{
  uint64_t v0;
  uint64_t v1;

  _SNClassificationResult.classifierIdentifier.setter(v1, v0);
}

BOOL sub_1D4334234(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

BOOL sub_1D4334244(int a1, int a2)
{
  return a1 == a2;
}

void sub_1D4334250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_1D451A6EC();
  v2 = v1;
  if (v0 != sub_1D451A6EC() || v2 != v3)
    sub_1D4334958();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D42CB15C();
}

void sub_1D43342C0(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD00000000000001BLL;
  else
    v3 = 0xD000000000000016;
  if (v2)
    v4 = 0x80000001D45500E0;
  else
    v4 = 0x80000001D4550100;
  if ((a2 & 1) != 0)
    v5 = 0xD00000000000001BLL;
  else
    v5 = 0xD000000000000016;
  if ((a2 & 1) != 0)
    v6 = 0x80000001D4550100;
  else
    v6 = 0x80000001D45500E0;
  if (v3 != v5 || v4 != v6)
    sub_1D4334958();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D42CB15C();
}

uint64_t static MediaUtils.extractAudio(mediaAssetURL:outputURL:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[24] = a1;
  v2[25] = a2;
  v3 = sub_1D4519BC4();
  v2[26] = v3;
  v2[27] = *(_QWORD *)(v3 - 8);
  v2[28] = swift_task_alloc();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43343A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _BYTE *v15;

  v2 = *(_QWORD *)(v0 + 216);
  v1 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 192);
  sub_1D4334814();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  v5 = sub_1D4334850(v1);
  *(_QWORD *)(v0 + 232) = v5;
  sub_1D451A6EC();
  objc_allocWithZone(MEMORY[0x1E0C8AFC0]);
  v6 = v5;
  v7 = sub_1D43348DC(v6);
  *(_QWORD *)(v0 + 240) = v7;
  if (v7)
  {
    v8 = v7;
    v9 = (void *)sub_1D4519B28();
    objc_msgSend(v8, sel_setOutputURL_, v9);

    objc_msgSend(v8, sel_setOutputFileType_, *MEMORY[0x1E0C8A2B8]);
    v10 = MEMORY[0x1E0CA2E68];
    v11 = *MEMORY[0x1E0CA2E68];
    *(_QWORD *)(v0 + 288) = *(_QWORD *)(MEMORY[0x1E0CA2E68] + 8);
    v12 = *(_QWORD *)(v10 + 16);
    *(_QWORD *)(v0 + 248) = v11;
    *(_QWORD *)(v0 + 256) = v12;
    sub_1D42B28FC(qword_1EFE4BF40);
    *(_QWORD *)(v0 + 264) = sub_1D4519D74();
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 272) = v13;
    *v13 = v0;
    v13[1] = sub_1D4334560;
    return sub_1D451B040();
  }
  else
  {
    sub_1D42B7F2C();
    swift_allocError();
    *v15 = 0;
    swift_willThrow();

    sub_1D4334968();
    return sub_1D42B8E40(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_1D4334560()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1D43345CC()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = v0[32];
  v2 = (void *)v0[30];
  v3 = v0[21];
  v4 = v0[23];
  v5 = v0[22];
  v0[10] = v0[31];
  v0[11] = v0[36];
  v0[12] = v1;
  v0[13] = v3;
  v0[14] = v5;
  v0[15] = v4;
  objc_msgSend(v2, sel_setTimeRange_, v0 + 10);
  v0[2] = v0;
  v0[3] = sub_1D4334694;
  v6 = swift_continuation_init();
  v0[16] = MEMORY[0x1E0C809B0];
  v7 = v0 + 16;
  v7[1] = 0x40000000;
  v7[2] = sub_1D43348D0;
  v7[3] = &unk_1E97B34C8;
  v7[4] = v6;
  objc_msgSend(v2, sel_exportAsynchronouslyWithCompletionHandler_, v7);
  return swift_continuation_await();
}

uint64_t sub_1D4334694()
{
  return sub_1D42B8DA8();
}

uint64_t sub_1D43346D8()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  id v4;

  v1 = objc_msgSend(*(id *)(v0 + 240), sel_status);
  v3 = *(void **)(v0 + 232);
  v2 = *(void **)(v0 + 240);
  if (v1 == (id)3)
  {

    swift_task_dealloc();
  }
  else
  {
    type metadata accessor for SNError();
    v4 = objc_msgSend(v2, sel_error);
    sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, v4, 0x662074726F707865, 0xED000064656C6961);

    swift_willThrow();
    sub_1D4334968();
  }
  return sub_1D42B8E40(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43347CC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 240);

  swift_release();
  sub_1D4334968();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1D4334814()
{
  unint64_t result;

  result = qword_1EFE4BF38;
  if (!qword_1EFE4BF38)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFE4BF38);
  }
  return result;
}

id sub_1D4334850(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;

  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v3 = (void *)sub_1D4519B28();
  v4 = objc_msgSend(v2, sel_initWithURL_options_, v3, 0);

  v5 = sub_1D4519BC4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return v4;
}

uint64_t sub_1D43348D0(uint64_t a1)
{
  return j__swift_continuation_resume(*(_QWORD *)(a1 + 32));
}

id sub_1D43348DC(void *a1)
{
  void *v1;
  void *v3;
  id v4;

  v3 = (void *)sub_1D451A6C8();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v1, sel_initWithAsset_presetName_, a1, v3);

  return v4;
}

ValueMetadata *type metadata accessor for MediaUtils()
{
  return &type metadata for MediaUtils;
}

uint64_t sub_1D4334958()
{
  return sub_1D451B820();
}

uint64_t sub_1D4334968()
{
  return swift_task_dealloc();
}

void sub_1D4334970()
{
  _s14descr1E97B8181C21ServerEnvironmentImplVMa();
}

uint64_t sub_1D43349F4()
{
  return sub_1D451B964();
}

uint64_t sub_1D4334A18(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x444965736163 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1D451B820();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1D4334A94()
{
  return 0x444965736163;
}

uint64_t sub_1D4334AA8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_1D42B28FC(&qword_1EFE4C078);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42B5528(a1, a1[3]);
  sub_1D4335A20();
  sub_1D451BA24();
  sub_1D451B754();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1D4334B88()
{
  sub_1D451B958();
  sub_1D451B964();
  return sub_1D451B994();
}

uint64_t sub_1D4334BCC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v3 = sub_1D42B28FC(&qword_1EFE4C068);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t)sub_1D42B5528(a1, a1[3]);
  sub_1D4335A20();
  sub_1D451BA0C();
  if (!v1)
  {
    v7 = sub_1D451B67C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_1D42B5400((uint64_t)a1);
  return v7;
}

uint64_t sub_1D4334CD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D4334A18(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D4334CFC()
{
  sub_1D4335A20();
  return sub_1D451BA3C();
}

uint64_t sub_1D4334D24()
{
  sub_1D4335A20();
  return sub_1D451BA48();
}

uint64_t sub_1D4334D4C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1D4334BCC(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1D4334D74(_QWORD *a1)
{
  return sub_1D4334AA8(a1);
}

uint64_t sub_1D4334D8C()
{
  return sub_1D4334B88();
}

uint64_t sub_1D4334D94()
{
  return sub_1D43349F4();
}

uint64_t sub_1D4334D9C()
{
  sub_1D42B28FC(&qword_1EFE4C080);
  sub_1D4335A5C();
  return sub_1D451A2B4();
}

void sub_1D4334DE0()
{
  _s14descr1E97B8181C21ServerEnvironmentImplVMa();
}

uint64_t sub_1D4334E10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
  swift_release();
  return v2;
}

void sub_1D4334E48()
{
  sub_1D4334DE0();
}

uint64_t sub_1D4334E54()
{
  return swift_deallocClassInstance();
}

void _s14descr1E97B8181C17ServerEnvironmentCMa()
{
  JUMPOUT(0x1D825E3A4);
}

void _s14descr1E97B8181C21ServerEnvironmentImplVMa()
{
  JUMPOUT(0x1D825E3A4);
}

uint64_t sub_1D4334E84()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1D4334E8C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D4334F24(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64) + 7;
  v7 = *(_DWORD *)(v4 + 80) & 0x100000;
  v8 = *a2;
  *(_QWORD *)a1 = *a2;
  if (v5 > 7
    || v7 != 0
    || ((((((((v6 + ((v5 + 24) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8 > 0x18)
  {
    v11 = v8 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16));
  }
  else
  {
    v11 = a1;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    v12 = (a1 + v5 + 24) & ~v5;
    v13 = ((unint64_t)a2 + v5 + 24) & ~v5;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    swift_retain();
    v14(v12, v13, v3);
    v15 = (_QWORD *)((v6 + v12) & 0xFFFFFFFFFFFFF8);
    v16 = (_QWORD *)((v6 + v13) & 0xFFFFFFFFFFFFF8);
    *v15 = *v16;
    v17 = (_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8);
    v18 = (_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFF8);
    *v17 = *v18;
    v19 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFF8);
    v20 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFF8);
    *v19 = *v20;
    *(_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFF8);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v11;
}

uint64_t sub_1D4335078(uint64_t a1, uint64_t a2)
{
  swift_release();
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)
                                                                                            + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1D4335104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 24 + a1) & ~v6;
  v8 = (v6 + 24 + a2) & ~v6;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  swift_retain();
  v9(v7, v8, v4);
  v10 = *(_QWORD *)(v5 + 64) + 7;
  v11 = (_QWORD *)((v10 + v7) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)((v10 + v8) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFF8);
  *v15 = *v16;
  *(_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_1D43351E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 24) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 24) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v8, v9);
  v10 = *(_QWORD *)(v6 + 64) + 7;
  v11 = (_QWORD *)((v10 + v8) & 0xFFFFFFFFFFFFFFF8);
  v12 = v10 + v9;
  v13 = (v12 & 0xFFFFFFFFFFFFFFF8) + 15;
  *v11 = *(_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  v14 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  v13 &= 0xFFFFFFFFFFFFF8uLL;
  *v14 = *(_QWORD *)v13;
  swift_retain();
  swift_release();
  v15 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)((v13 + 15) & 0xFFFFFFFFFFFFF8);
  *v15 = *v16;
  swift_retain();
  swift_release();
  *(_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1D4335300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 24 + a1) & ~v5;
  v7 = (v5 + 24 + a2) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  v9 = (_QWORD *)((v8 + v6) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)((v8 + v7) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v11 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFF8);
  *v13 = *v14;
  *(_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D43353B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 + 24 + a1) & ~v7;
  v9 = (v7 + 24 + a2) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 40))(v8, v9);
  v10 = *(_QWORD *)(v6 + 64) + 7;
  v11 = (_QWORD *)((v10 + v8) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)((v10 + v9) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  swift_release();
  v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFF8);
  *v13 = *v14;
  swift_release();
  v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFF8);
  *v15 = *v16;
  swift_release();
  *(_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1D43354A0(uint64_t *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v5 + 80);
  if (v7 >= a2)
  {
    if ((v6 & 0x80000000) != 0)
    {
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(((unint64_t)a1 + v8 + 24) & ~v8, v6, v4);
    }
    else
    {
      v13 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
  }
  else
  {
    if (((((((((((*(_QWORD *)(v5 + 64) + ((v8 + 24) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 8) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1D4335544 + 4 * byte_1D452B5F0[v11]))();
  }
}

void sub_1D43355C0(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((((((((*(_QWORD *)(v5 + 64)
             + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
             + 7) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  if (v6 >= a3)
  {
    v10 = 0u;
  }
  else
  {
    if (((((((((*(_DWORD *)(v5 + 64) + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~*(unsigned __int8 *)(v5 + 80)) + 7) & 0xFFFFFFF8)
             + 15) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v8 = a3 - v6 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
  }
  if (a2 > v6)
  {
    if ((_DWORD)v7)
    {
      v11 = ~v6 + a2;
      bzero(a1, v7);
      *a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t sub_1D43356D8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  *((_BYTE *)v5 + v6) = 0;
  if ((_DWORD)a1)
  {
    if ((a2 & 0x80000000) != 0)
    {
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(((unint64_t)v5 + v4 + 24) & a4, a1, a2, a3);
    }
    else
    {
      if ((a1 & 0x80000000) != 0)
      {
        v7 = a1 ^ 0x80000000;
        v5[1] = 0;
        v5[2] = 0;
      }
      else
      {
        v7 = (a1 - 1);
      }
      *v5 = v7;
    }
  }
  return result;
}

void sub_1D433575C()
{
  _s14descr1E97B8181C21ServerEnvironmentImplVMa();
}

uint64_t sub_1D4335794(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t sub_1D43357BC()
{
  return swift_retain();
}

uint64_t sub_1D43357E8()
{
  return swift_retain();
}

uint64_t sub_1D43357F4()
{
  return swift_retain();
}

uint64_t sub_1D4335800()
{
  return swift_retain();
}

uint64_t sub_1D433580C()
{
  return swift_retain();
}

uint64_t sub_1D4335818@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = sub_1D43357BC();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
    a1[2] = v5;
  }
  return result;
}

uint64_t sub_1D4335844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

unint64_t sub_1D4335864()
{
  unint64_t result;

  result = qword_1EFE4C048;
  if (!qword_1EFE4C048)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452B784, &_s14descr1E97B8181C28ICACAudioDeviceConfigurationVN);
    atomic_store(result, (unint64_t *)&qword_1EFE4C048);
  }
  return result;
}

unint64_t sub_1D43358A4()
{
  unint64_t result;

  result = qword_1EFE4C050;
  if (!qword_1EFE4C050)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452B75C, &_s14descr1E97B8181C28ICACAudioDeviceConfigurationVN);
    atomic_store(result, (unint64_t *)&qword_1EFE4C050);
  }
  return result;
}

unint64_t sub_1D43358E4()
{
  unint64_t result;

  result = qword_1EFE4C058;
  if (!qword_1EFE4C058)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452B6F4, &_s14descr1E97B8181C28ICACAudioDeviceConfigurationVN);
    atomic_store(result, (unint64_t *)&qword_1EFE4C058);
  }
  return result;
}

_UNKNOWN **sub_1D4335920()
{
  return &off_1E97A3F78;
}

unint64_t sub_1D4335930()
{
  unint64_t result;

  result = qword_1EFE4C060;
  if (!qword_1EFE4C060)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452B734, &_s14descr1E97B8181C28ICACAudioDeviceConfigurationVN);
    atomic_store(result, (unint64_t *)&qword_1EFE4C060);
  }
  return result;
}

uint64_t sub_1D4335970(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1D825E41C](&unk_1D452B7AC);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D433599C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1D825E41C](&unk_1D452B7E4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D43359C8(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1D825E41C](&unk_1D452B81C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D43359F4(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1D825E41C](&unk_1D452B838);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1D4335A20()
{
  unint64_t result;

  result = qword_1EFE4C070;
  if (!qword_1EFE4C070)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452BA30, &_s14descr1E97B8181C28ICACAudioDeviceConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFE4C070);
  }
  return result;
}

unint64_t sub_1D4335A5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFE4C088;
  if (!qword_1EFE4C088)
  {
    v1 = sub_1D42B8B10(&qword_1EFE4C080);
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0C95F40], v1);
    atomic_store(result, (unint64_t *)&qword_1EFE4C088);
  }
  return result;
}

uint64_t _s14descr1E97B8181C28ICACAudioDeviceConfigurationV10CodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D4335AE0 + 4 * byte_1D452B5FF[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D4335B00 + 4 * byte_1D452B604[v4]))();
}

_BYTE *sub_1D4335AE0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D4335B00(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4335B08(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4335B10(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4335B18(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4335B20(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s14descr1E97B8181C28ICACAudioDeviceConfigurationV10CodingKeysOMa()
{
  return &_s14descr1E97B8181C28ICACAudioDeviceConfigurationV10CodingKeysON;
}

ValueMetadata *_s14descr1E97B8181C28ICACAudioDeviceConfigurationVMa()
{
  return &_s14descr1E97B8181C28ICACAudioDeviceConfigurationVN;
}

ValueMetadata *_s14descr1E97B8181C23ICACAudioDeviceInstanceVMa()
{
  return &_s14descr1E97B8181C23ICACAudioDeviceInstanceVN;
}

unint64_t sub_1D4335B60()
{
  unint64_t result;

  result = qword_1EFE4C090;
  if (!qword_1EFE4C090)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452BA08, &_s14descr1E97B8181C28ICACAudioDeviceConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFE4C090);
  }
  return result;
}

unint64_t sub_1D4335BA0()
{
  unint64_t result;

  result = qword_1EFE4C098;
  if (!qword_1EFE4C098)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452B978, &_s14descr1E97B8181C28ICACAudioDeviceConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFE4C098);
  }
  return result;
}

unint64_t sub_1D4335BE0()
{
  unint64_t result;

  result = qword_1EFE4C0A0;
  if (!qword_1EFE4C0A0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452B9A0, &_s14descr1E97B8181C28ICACAudioDeviceConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFE4C0A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for X()
{
  return &type metadata for X;
}

objc_class *sub_1D4335C2C(void *a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v6;
  id v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  objc_super v15;

  v3 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  swift_bridgeObjectRelease();
  v6 = OBJC_IVAR____SNVGGishFeatureEmbeddingCustomModel_modelDescription;
  *(_QWORD *)&v1[OBJC_IVAR____SNVGGishFeatureEmbeddingCustomModel_modelDescription] = a1;
  v7 = objc_allocWithZone(MEMORY[0x1E0C9E958]);
  v8 = v3;
  v9 = a1;
  v10 = objc_msgSend(v7, sel_init);
  sub_1D439CBCC(0x15u, v10);
  v12 = v11;

  if (v2)
  {

    v13 = *(void **)&v3[v6];
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)&v8[OBJC_IVAR____SNVGGishFeatureEmbeddingCustomModel_model] = v12;

    v15.receiver = v8;
    v15.super_class = ObjectType;
    ObjectType = (objc_class *)objc_msgSendSuper2(&v15, sel_init);

  }
  return ObjectType;
}

id sub_1D4335DF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  id v20[2];

  v20[1] = *(id *)MEMORY[0x1E0C80C00];
  v6 = *(void **)(v2 + OBJC_IVAR____SNVGGishFeatureEmbeddingCustomModel_modelDescription);
  v7 = *(void **)(v2 + OBJC_IVAR____SNVGGishFeatureEmbeddingCustomModel_model);
  v8 = sub_1D4336154();
  v9 = sub_1D42F3FD0(v6, v8);

  if (!v9)
    goto LABEL_6;
  v10 = sub_1D4336154();
  v11 = sub_1D42F3FDC(v6, v10);

  if (!v11)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    v10 = (id)type metadata accessor for SNError();
    sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD00000000000002CLL, 0x80000001D4552E30);
    swift_willThrow();
    return v10;
  }
  sub_1D42F4138(a1, v9);
  v13 = v12;
  swift_bridgeObjectRelease();
  if (v3)
  {
    sub_1D42CB8F4();
  }
  else
  {
    v20[0] = 0;
    v15 = objc_msgSend(v7, sel_predictionFromFeatures_options_error_, v13, a2, v20);
    v10 = v20[0];
    if (v15)
    {
      v16 = (uint64_t)v15;
      v17 = v20[0];
      sub_1D42F4230(v16, v11);
      v10 = v18;
      sub_1D42CB8F4();
      swift_unknownObjectRelease();
    }
    else
    {
      v19 = v20[0];
      sub_1D42CB8F4();
      sub_1D4519AA4();

      swift_willThrow();
    }
    swift_unknownObjectRelease();
  }
  return v10;
}

void sub_1D43360C4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for SNVGGishFeatureEmbeddingCustomModel()
{
  return objc_opt_self();
}

id sub_1D4336154()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 2782));
}

void sub_1D4336160(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  sub_1D433832C();
  sub_1D451A74C();
  swift_bridgeObjectRelease();
  v4 = a3;
  objc_msgSend(v4, sel_hash);
  sub_1D451B964();

}

id sub_1D43361EC(char a1, void *a2, char a3, uint64_t a4)
{
  char v6;

  sub_1D43342C0(a1 & 1, a3 & 1);
  if ((v6 & 1) != 0)
    return objc_msgSend(a2, sel_isEqual_, a4);
  else
    return 0;
}

uint64_t sub_1D4336238(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001D4552EA0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D4552EC0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1D4336324(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000011;
  else
    return 0xD000000000000014;
}

void sub_1D4336360(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_1D42B28FC(&qword_1EFE4C1C8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1D42CB210();
  v7 = v6 - v5;
  sub_1D42B5528(a1, a1[3]);
  sub_1D43380E8();
  sub_1D451BA24();
  sub_1D4338160();
  sub_1D4338480();
  if (!v1)
  {
    sub_1D42B28FC(&qword_1EFE49DA8);
    sub_1D42D0C84(&qword_1EFE49DD8, (uint64_t)&unk_1D4540694);
    sub_1D4338480();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  sub_1D42BE844();
}

void sub_1D4336498(uint64_t a1, void *a2)
{
  id v3;

  sub_1D42BE9A8();
  sub_1D433832C();
  sub_1D451A74C();
  swift_bridgeObjectRelease();
  v3 = a2;
  objc_msgSend(v3, sel_hash);
  sub_1D4338458();

  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t sub_1D4336520(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 v4;

  v2 = sub_1D42B28FC(&qword_1EFE4C1B0);
  MEMORY[0x1E0C80A78](v2);
  sub_1D42CB210();
  sub_1D42B5528(a1, a1[3]);
  sub_1D43380E8();
  sub_1D451BA0C();
  sub_1D4338124();
  sub_1D4338474();
  sub_1D42B28FC(&qword_1EFE49DA8);
  sub_1D42D0C84(&qword_1EFE49DB0, (uint64_t)&unk_1D45406BC);
  sub_1D4338474();
  sub_1D42CFC04();
  sub_1D42B5400((uint64_t)a1);
  return v4;
}

void sub_1D433668C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  char v6;

  v2 = *(void **)v0;
  v1 = *(void **)(v0 + 8);
  if (*(_BYTE *)(v0 + 16))
  {
    if (*(_BYTE *)(v0 + 16) == 1)
    {
      sub_1D4338434();
      sub_1D451A74C();
      return;
    }
    sub_1D4338434();
    objc_msgSend(v2, sel_hash);
    sub_1D451B964();
    v4 = v2;
    v5 = v1;
    v6 = 2;
  }
  else
  {
    sub_1D4338434();
    sub_1D433832C();
    v3 = v1;
    sub_1D451A74C();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_hash);
    sub_1D4338434();
    v4 = sub_1D433838C();
  }
  sub_1D42B62C8(v4, v5, v6);
}

uint64_t sub_1D4336790(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;
  int v4;
  void *v5;
  id v6;
  int v7;
  unsigned __int8 v9;
  char v10;
  unsigned __int8 v11;
  void *v12;
  void *v13;
  char v14;
  void *v15;
  void *v16;
  char v17;
  void *v18;
  void *v19;
  char v20;

  v3 = *(id *)a1;
  v2 = *(void **)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v6 = *(id *)a2;
  v5 = *(void **)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    if (v4 == 1)
    {
      if (v7 == 1)
      {
        if (v3 == v6 && v2 == v5)
          v9 = 1;
        else
          v9 = sub_1D42D1158();
        sub_1D42B633C(v6, v5, 1);
        sub_1D42B633C(v3, v2, 1);
        sub_1D42B62C8(v3, v2, 1);
        v15 = v6;
        v16 = v5;
        v17 = 1;
        goto LABEL_20;
      }
    }
    else if (v7 == 2)
    {
      sub_1D433833C();
      sub_1D433833C();
      v9 = objc_msgSend(v3, sel_isEqual_, v6);
      sub_1D42B62C8(v3, v2, 2);
      sub_1D43383EC();
      sub_1D43383EC();
      v15 = v3;
      v16 = v2;
      v17 = 2;
LABEL_20:
      sub_1D42B62C8(v15, v16, v17);
      return v9 & 1;
    }
    goto LABEL_15;
  }
  if (*(_BYTE *)(a2 + 16))
  {
LABEL_15:
    sub_1D42B633C(*(id *)a2, *(void **)(a2 + 8), v7);
    sub_1D42B633C(v3, v2, v4);
    sub_1D42B62C8(v3, v2, v4);
    v18 = v6;
    v19 = v5;
    v20 = v7;
LABEL_16:
    sub_1D42B62C8(v18, v19, v20);
    goto LABEL_17;
  }
  sub_1D42B633C(*(id *)a2, *(void **)(a2 + 8), 0);
  sub_1D42B633C(v3, v2, 0);
  sub_1D43342C0(v3 & 1, v6 & 1);
  if ((v10 & 1) == 0)
  {
    v18 = (void *)sub_1D43383B4();
    goto LABEL_16;
  }
  v11 = objc_msgSend(v2, sel_isEqual_, v5);
  v12 = (void *)sub_1D43383B4();
  sub_1D42B62C8(v12, v13, v14);
  if ((v11 & 1) == 0)
  {
LABEL_17:
    v9 = 0;
    return v9 & 1;
  }
  v9 = 1;
  return v9 & 1;
}

uint64_t sub_1D4336948(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001D4552E60 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D4551A80 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D4552E80)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1D4336A88(char a1)
{
  unint64_t result;

  result = 0xD000000000000010;
  if (a1)
  {
    if (a1 == 1)
      return 0xD000000000000012;
    else
      return 0xD000000000000015;
  }
  return result;
}

void sub_1D4336AE8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  void *v17;
  void *v18;
  char v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;

  v25 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE4C118) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42BE768();
  v24 = v5;
  v23 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE4C120) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v6);
  sub_1D43383FC();
  v22 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE4C128) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42CB210();
  v10 = v9 - v8;
  v28 = sub_1D42B28FC(&qword_1EFE4C130);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v11);
  sub_1D42CB210();
  v26 = *(void **)v2;
  v27 = *(void **)(v2 + 8);
  v12 = *(unsigned __int8 *)(v2 + 16);
  sub_1D42B5528(a1, a1[3]);
  sub_1D4337994();
  sub_1D451BA24();
  if (!v12)
  {
    sub_1D4337A48();
    v27;
    sub_1D4338424();
    sub_1D4337B20();
    sub_1D433846C();
    sub_1D42CB44C(v10, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
    v15 = sub_1D43383DC();
    v16(v15, v28);
    v17 = v26;
    v18 = v27;
    v19 = 0;
LABEL_6:
    sub_1D42B62C8(v17, v18, v19);
    goto LABEL_7;
  }
  if (v12 != 1)
  {
    sub_1D433848C();
    v26;
    sub_1D4338424();
    sub_1D42B28FC(&qword_1EFE49DA8);
    sub_1D42D0C84(&qword_1EFE49DD8, (uint64_t)&unk_1D4540694);
    sub_1D433846C();
    sub_1D4307058(v24, *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
    v20 = sub_1D43383DC();
    sub_1D42CB44C(v20, v21);
    v17 = v26;
    v18 = v27;
    v19 = 2;
    goto LABEL_6;
  }
  sub_1D4338460();
  sub_1D451B6F4();
  sub_1D42B28FC(&qword_1EFE4C0F8);
  sub_1D4337AC0(&qword_1EFE4C138, MEMORY[0x1E0DEA970], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
  sub_1D433846C();
  sub_1D42CB44C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
  v13 = sub_1D43383DC();
  sub_1D4307058(v13, v14);
LABEL_7:
  sub_1D42BE844();
}

uint64_t sub_1D4336E08()
{
  uint64_t v0;
  void *v1;
  void *v2;
  int v3;
  id v4;
  void *v5;
  void *v6;
  char v7;

  v2 = *(void **)v0;
  v1 = *(void **)(v0 + 8);
  v3 = *(unsigned __int8 *)(v0 + 16);
  sub_1D42BE9A8();
  if (!v3)
  {
    sub_1D42D1094();
    sub_1D433832C();
    v4 = v1;
    sub_1D451A74C();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_hash);
    sub_1D4338458();
    v5 = sub_1D433838C();
LABEL_6:
    sub_1D42B62C8(v5, v6, v7);
    return sub_1D42CB230();
  }
  if (v3 != 1)
  {
    sub_1D451B964();
    objc_msgSend(v2, sel_hash);
    sub_1D4338458();
    v5 = v2;
    v6 = v1;
    v7 = 2;
    goto LABEL_6;
  }
  sub_1D451B964();
  sub_1D451A74C();
  return sub_1D42CB230();
}

void sub_1D4336F14(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v28 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE4C0C0) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v3);
  sub_1D42BE768();
  v30 = v4;
  sub_1D42B28FC(&qword_1EFE4C0C8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42BE768();
  v6 = sub_1D42B28FC(&qword_1EFE4C0D0);
  MEMORY[0x1E0C80A78](v6);
  sub_1D43383FC();
  v7 = sub_1D42B28FC(&qword_1EFE4C0D8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1D42CB210();
  v11 = v10 - v9;
  v31 = a1;
  sub_1D42B5528(a1, a1[3]);
  sub_1D4337994();
  sub_1D451BA0C();
  if (v34)
  {
    v12 = (uint64_t)a1;
    goto LABEL_11;
  }
  v13 = sub_1D451B6D0();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
    v12 = (uint64_t)a1;
LABEL_10:
    v20 = sub_1D451B460();
    swift_allocError();
    v22 = v21;
    sub_1D42B28FC(&qword_1EFE49ED0);
    *v22 = &type metadata for DetectorVariant;
    sub_1D451B61C();
    sub_1D451B454();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x1E0DEC450], v20);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
    goto LABEL_11;
  }
  v27 = v7;
  v15 = *(unsigned __int8 *)(v13 + 32);
  sub_1D43B7948(1, v14, v13, v13 + 32, 0, (2 * v14) | 1);
  v17 = v16;
  v19 = v18;
  swift_bridgeObjectRelease();
  if (v17 != v19 >> 1)
  {
    v12 = (uint64_t)v31;
    v7 = v27;
    goto LABEL_10;
  }
  if (v15)
  {
    if (v15 == 1)
    {
      sub_1D4338460();
      sub_1D4338364();
      sub_1D42B28FC(&qword_1EFE4C0F8);
      sub_1D4337AC0(&qword_1EFE4C100, MEMORY[0x1E0DEA9A0], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
      sub_1D4338450();
      v12 = (uint64_t)v31;
      v23 = sub_1D433843C();
      v24(v23);
      sub_1D42B6E6C();
      sub_1D4338414();
      v25 = v32;
      v26 = v33;
    }
    else
    {
      sub_1D433848C();
      sub_1D4338364();
      sub_1D42B28FC(&qword_1EFE49DA8);
      sub_1D42D0C84(&qword_1EFE49DB0, (uint64_t)&unk_1D45406BC);
      sub_1D4338450();
      v12 = (uint64_t)v31;
      sub_1D4307058(v30, *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8));
      sub_1D42B6E6C();
      sub_1D4338414();
      v26 = 0;
      v25 = v32;
    }
  }
  else
  {
    sub_1D4337A48();
    sub_1D451B610();
    sub_1D4337A84();
    sub_1D4338450();
    v12 = (uint64_t)v31;
    sub_1D4338378();
    sub_1D42B6E6C();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v27);
    v25 = 0;
    v26 = v33;
    LOBYTE(v15) = 0;
  }
  *(_QWORD *)a2 = v25;
  *(_QWORD *)(a2 + 8) = v26;
  *(_BYTE *)(a2 + 16) = v15;
LABEL_11:
  sub_1D42B5400(v12);
  sub_1D42BE844();
}

unint64_t sub_1D4337438()
{
  char *v0;

  return sub_1D4336324(*v0);
}

uint64_t sub_1D4337440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D4336238(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D4337464()
{
  sub_1D43380E8();
  return sub_1D451BA3C();
}

uint64_t sub_1D433748C()
{
  sub_1D43380E8();
  return sub_1D451BA48();
}

uint64_t sub_1D43374B4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_1D4336520(a1);
  if (!v2)
  {
    *(_BYTE *)a2 = result & 1;
    *(_QWORD *)(a2 + 8) = v5;
  }
  return result;
}

void sub_1D43374E4(_QWORD *a1)
{
  sub_1D4336360(a1);
}

void sub_1D4337500()
{
  void **v0;

  sub_1D4336498(*(unsigned __int8 *)v0, v0[1]);
}

void sub_1D433750C(uint64_t a1)
{
  void **v1;

  sub_1D4336160(a1, *(unsigned __int8 *)v1, v1[1]);
}

uint64_t sub_1D4337518()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  sub_1D451B958();
  sub_1D451A74C();
  swift_bridgeObjectRelease();
  v2 = v1;
  objc_msgSend(v2, sel_hash);
  sub_1D451B964();

  return sub_1D451B994();
}

id sub_1D43375BC(uint64_t a1, uint64_t a2)
{
  return sub_1D43361EC(*(_BYTE *)a1, *(void **)(a1 + 8), *(_BYTE *)a2, *(_QWORD *)(a2 + 8));
}

unint64_t sub_1D43375D8()
{
  char *v0;

  return sub_1D4336A88(*v0);
}

uint64_t sub_1D43375E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D4336948(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D4337604()
{
  sub_1D4337994();
  return sub_1D451BA3C();
}

uint64_t sub_1D433762C()
{
  sub_1D4337994();
  return sub_1D451BA48();
}

uint64_t sub_1D4337654()
{
  sub_1D4337A48();
  return sub_1D451BA3C();
}

uint64_t sub_1D433767C()
{
  sub_1D4337A48();
  return sub_1D451BA48();
}

uint64_t sub_1D43376A4()
{
  sub_1D4337A0C();
  return sub_1D451BA3C();
}

uint64_t sub_1D43376CC()
{
  sub_1D4337A0C();
  return sub_1D451BA48();
}

uint64_t sub_1D43376F4()
{
  sub_1D43379D0();
  return sub_1D451BA3C();
}

uint64_t sub_1D433771C()
{
  sub_1D43379D0();
  return sub_1D451BA48();
}

void sub_1D4337744(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1D4336F14(a1, a2);
}

void sub_1D4337758(_QWORD *a1)
{
  sub_1D4336AE8(a1);
}

uint64_t sub_1D4337774()
{
  sub_1D451B958();
  sub_1D433668C();
  return sub_1D451B994();
}

void destroy for DetectorVariant(uint64_t a1)
{
  sub_1D42B62C8(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s13SoundAnalysis15DetectorVariantOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1D42B633C(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DetectorVariant(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1D42B633C(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1D42B62C8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for DetectorVariant(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1D42B62C8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DetectorVariant(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DetectorVariant(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1D433793C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DetectorVariant()
{
  return &type metadata for DetectorVariant;
}

unint64_t sub_1D4337958()
{
  unint64_t result;

  result = qword_1EFE4C0B8;
  if (!qword_1EFE4C0B8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452BB08, &type metadata for DetectorVariant);
    atomic_store(result, (unint64_t *)&qword_1EFE4C0B8);
  }
  return result;
}

unint64_t sub_1D4337994()
{
  unint64_t result;

  result = qword_1EFE4C0E0;
  if (!qword_1EFE4C0E0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452C0CC, &type metadata for DetectorVariant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4C0E0);
  }
  return result;
}

unint64_t sub_1D43379D0()
{
  unint64_t result;

  result = qword_1EFE4C0E8;
  if (!qword_1EFE4C0E8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452C07C, &type metadata for DetectorVariant.EndToEndDetectorModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4C0E8);
  }
  return result;
}

unint64_t sub_1D4337A0C()
{
  unint64_t result;

  result = qword_1EFE4C0F0;
  if (!qword_1EFE4C0F0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452C02C, &type metadata for DetectorVariant.DetectorIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4C0F0);
  }
  return result;
}

unint64_t sub_1D4337A48()
{
  unint64_t result;

  result = qword_1EFE4C108;
  if (!qword_1EFE4C108)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452BFDC, &type metadata for DetectorVariant.ComposedDetectorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4C108);
  }
  return result;
}

unint64_t sub_1D4337A84()
{
  unint64_t result;

  result = qword_1EFE4C110;
  if (!qword_1EFE4C110)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452BFB4, &type metadata for ComposedDetector);
    atomic_store(result, (unint64_t *)&qword_1EFE4C110);
  }
  return result;
}

uint64_t sub_1D4337AC0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_1D42B8B10(&qword_1EFE4C0F8);
    v8 = a2;
    result = MEMORY[0x1D825E41C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D4337B20()
{
  unint64_t result;

  result = qword_1EFE4C140;
  if (!qword_1EFE4C140)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452BF8C, &type metadata for ComposedDetector);
    atomic_store(result, (unint64_t *)&qword_1EFE4C140);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DetectorVariant.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D4337BA8 + 4 * byte_1D452BAC5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D4337BDC + 4 * asc_1D452BAC0[v4]))();
}

uint64_t sub_1D4337BDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4337BE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4337BECLL);
  return result;
}

uint64_t sub_1D4337BF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4337C00);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D4337C04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4337C0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DetectorVariant.CodingKeys()
{
  return &type metadata for DetectorVariant.CodingKeys;
}

ValueMetadata *type metadata accessor for DetectorVariant.ComposedDetectorCodingKeys()
{
  return &type metadata for DetectorVariant.ComposedDetectorCodingKeys;
}

ValueMetadata *type metadata accessor for DetectorVariant.DetectorIdentifierCodingKeys()
{
  return &type metadata for DetectorVariant.DetectorIdentifierCodingKeys;
}

uint64_t _s13SoundAnalysis15DetectorVariantO26ComposedDetectorCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D4337C8C + 4 * byte_1D452BACA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D4337CAC + 4 * byte_1D452BACF[v4]))();
}

_BYTE *sub_1D4337C8C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D4337CAC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4337CB4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4337CBC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4337CC4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4337CCC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DetectorVariant.EndToEndDetectorModelCodingKeys()
{
  return &type metadata for DetectorVariant.EndToEndDetectorModelCodingKeys;
}

uint64_t initializeBufferWithCopyOfBuffer for ComposedDetector(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  v4 = v3;
  return a1;
}

void destroy for ComposedDetector(uint64_t a1)
{

}

uint64_t assignWithCopy for ComposedDetector(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  v5 = v3;

  return a1;
}

uint64_t assignWithTake for ComposedDetector(uint64_t a1, uint64_t a2)
{
  void *v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  return a1;
}

ValueMetadata *type metadata accessor for ComposedDetector()
{
  return &type metadata for ComposedDetector;
}

unint64_t sub_1D4337DAC()
{
  unint64_t result;

  result = qword_1EFE4C148;
  if (!qword_1EFE4C148)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452BC44, &type metadata for ComposedDetector);
    atomic_store(result, (unint64_t *)&qword_1EFE4C148);
  }
  return result;
}

unint64_t sub_1D4337DEC()
{
  unint64_t result;

  result = qword_1EFE4C150;
  if (!qword_1EFE4C150)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452BD3C, &type metadata for DetectorVariant.EndToEndDetectorModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4C150);
  }
  return result;
}

unint64_t sub_1D4337E2C()
{
  unint64_t result;

  result = qword_1EFE4C158;
  if (!qword_1EFE4C158)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452BDF4, &type metadata for DetectorVariant.DetectorIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4C158);
  }
  return result;
}

unint64_t sub_1D4337E6C()
{
  unint64_t result;

  result = qword_1EFE4C160;
  if (!qword_1EFE4C160)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452BEAC, &type metadata for DetectorVariant.ComposedDetectorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4C160);
  }
  return result;
}

unint64_t sub_1D4337EAC()
{
  unint64_t result;

  result = qword_1EFE4C168;
  if (!qword_1EFE4C168)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452BF64, &type metadata for DetectorVariant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4C168);
  }
  return result;
}

unint64_t sub_1D4337EEC()
{
  unint64_t result;

  result = qword_1EFE4C170;
  if (!qword_1EFE4C170)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452BE1C, &type metadata for DetectorVariant.ComposedDetectorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4C170);
  }
  return result;
}

unint64_t sub_1D4337F2C()
{
  unint64_t result;

  result = qword_1EFE4C178;
  if (!qword_1EFE4C178)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452BE44, &type metadata for DetectorVariant.ComposedDetectorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4C178);
  }
  return result;
}

unint64_t sub_1D4337F6C()
{
  unint64_t result;

  result = qword_1EFE4C180;
  if (!qword_1EFE4C180)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452BD64, &type metadata for DetectorVariant.DetectorIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4C180);
  }
  return result;
}

unint64_t sub_1D4337FAC()
{
  unint64_t result;

  result = qword_1EFE4C188;
  if (!qword_1EFE4C188)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452BD8C, &type metadata for DetectorVariant.DetectorIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4C188);
  }
  return result;
}

unint64_t sub_1D4337FEC()
{
  unint64_t result;

  result = qword_1EFE4C190;
  if (!qword_1EFE4C190)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452BCAC, &type metadata for DetectorVariant.EndToEndDetectorModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4C190);
  }
  return result;
}

unint64_t sub_1D433802C()
{
  unint64_t result;

  result = qword_1EFE4C198;
  if (!qword_1EFE4C198)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452BCD4, &type metadata for DetectorVariant.EndToEndDetectorModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4C198);
  }
  return result;
}

unint64_t sub_1D433806C()
{
  unint64_t result;

  result = qword_1EFE4C1A0;
  if (!qword_1EFE4C1A0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452BED4, &type metadata for DetectorVariant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4C1A0);
  }
  return result;
}

unint64_t sub_1D43380AC()
{
  unint64_t result;

  result = qword_1EFE4C1A8;
  if (!qword_1EFE4C1A8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452BEFC, &type metadata for DetectorVariant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4C1A8);
  }
  return result;
}

unint64_t sub_1D43380E8()
{
  unint64_t result;

  result = qword_1EFE4C1B8;
  if (!qword_1EFE4C1B8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452C1D4, &type metadata for ComposedDetector.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4C1B8);
  }
  return result;
}

unint64_t sub_1D4338124()
{
  unint64_t result;

  result = qword_1EFE4C1C0;
  if (!qword_1EFE4C1C0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4533F28, &type metadata for SNFeatureExtractorIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EFE4C1C0);
  }
  return result;
}

unint64_t sub_1D4338160()
{
  unint64_t result;

  result = qword_1EFE4C1D0;
  if (!qword_1EFE4C1D0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4533F00, &type metadata for SNFeatureExtractorIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EFE4C1D0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ComposedDetector.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D43381E8 + 4 * byte_1D452BAD9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D433821C + 4 * byte_1D452BAD4[v4]))();
}

uint64_t sub_1D433821C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4338224(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D433822CLL);
  return result;
}

uint64_t sub_1D4338238(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4338240);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D4338244(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D433824C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ComposedDetector.CodingKeys()
{
  return &type metadata for ComposedDetector.CodingKeys;
}

unint64_t sub_1D433826C()
{
  unint64_t result;

  result = qword_1EFE4C1D8;
  if (!qword_1EFE4C1D8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452C1AC, &type metadata for ComposedDetector.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4C1D8);
  }
  return result;
}

unint64_t sub_1D43382AC()
{
  unint64_t result;

  result = qword_1EFE4C1E0;
  if (!qword_1EFE4C1E0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452C11C, &type metadata for ComposedDetector.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4C1E0);
  }
  return result;
}

unint64_t sub_1D43382EC()
{
  unint64_t result;

  result = qword_1EFE4C1E8;
  if (!qword_1EFE4C1E8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452C144, &type metadata for ComposedDetector.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4C1E8);
  }
  return result;
}

id sub_1D433833C()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;

  sub_1D42B633C(v1, v0, 2);
  return sub_1D42B633C(v3, v2, 2);
}

uint64_t sub_1D4338364()
{
  return sub_1D451B610();
}

uint64_t sub_1D4338378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 192) + 8))(v0, v1);
}

void *sub_1D433838C()
{
  void *v0;
  void *v1;

  sub_1D42B62C8(v1, v0, 0);
  return v1;
}

uint64_t sub_1D43383B4()
{
  uint64_t v0;
  void *v1;
  void *v2;

  sub_1D42B62C8(v2, v1, 0);
  return v0;
}

uint64_t sub_1D43383DC()
{
  uint64_t v0;

  return v0;
}

void sub_1D43383EC()
{
  void *v0;
  void *v1;

  sub_1D42B62C8(v1, v0, 2);
}

uint64_t sub_1D4338414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 176));
}

uint64_t sub_1D4338424()
{
  return sub_1D451B6F4();
}

uint64_t sub_1D4338434()
{
  return sub_1D451B964();
}

uint64_t sub_1D433843C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4338450()
{
  return sub_1D451B688();
}

uint64_t sub_1D4338458()
{
  return sub_1D451B964();
}

unint64_t sub_1D4338460()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 96) = 1;
  return sub_1D4337A0C();
}

uint64_t sub_1D433846C()
{
  return sub_1D451B760();
}

uint64_t sub_1D4338474()
{
  return sub_1D451B688();
}

uint64_t sub_1D4338480()
{
  return sub_1D451B760();
}

unint64_t sub_1D433848C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 96) = 2;
  return sub_1D43379D0();
}

uint64_t *destroy for XPCEncoded(uint64_t *result)
{
  uint64_t *v1;
  unint64_t v2;

  v1 = result;
  v2 = result[1];
  if (v2 >> 60 != 15)
    result = (uint64_t *)sub_1D42B5420(*result, v2);
  if (v1[2])
  {
    swift_release();
    return (uint64_t *)swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for XPCEncoded(uint64_t a1, uint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v5 = *a2;
    sub_1D42DD16C(*a2, a2[1]);
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4;
  }
  v6 = a2[2];
  if (v6)
  {
    *(_QWORD *)(a1 + 16) = v6;
    v7 = a2[5];
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_QWORD *)(a1 + 40) = v7;
    swift_retain();
    swift_retain();
  }
  else
  {
    v8 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v8;
  }
  return a1;
}

uint64_t *assignWithCopy for XPCEncoded(uint64_t *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;

  v4 = a2[1];
  if ((unint64_t)a1[1] >> 60 == 15)
  {
    if (v4 >> 60 != 15)
    {
      v5 = *a2;
      sub_1D42DD16C(*a2, a2[1]);
      *a1 = v5;
      a1[1] = v4;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
    sub_1D43386B4((uint64_t)a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  v6 = *a2;
  sub_1D42DD16C(*a2, a2[1]);
  v7 = *a1;
  v8 = a1[1];
  *a1 = v6;
  a1[1] = v4;
  sub_1D42B5420(v7, v8);
LABEL_8:
  v9 = a1 + 2;
  v11 = a2 + 2;
  v10 = a2[2];
  if (a1[2])
  {
    if (v10)
    {
      v12 = a2[3];
      a1[2] = v10;
      a1[3] = v12;
      swift_retain();
      swift_release();
      v13 = a2[5];
      a1[4] = a2[4];
      a1[5] = v13;
      swift_retain();
      swift_release();
    }
    else
    {
      sub_1D43386E8((uint64_t)(a1 + 2));
      v17 = *((_OWORD *)a2 + 2);
      *v9 = *v11;
      *((_OWORD *)a1 + 2) = v17;
    }
  }
  else if (v10)
  {
    v14 = a2[3];
    a1[2] = v10;
    a1[3] = v14;
    v15 = a2[4];
    v16 = a2[5];
    a1[4] = v15;
    a1[5] = v16;
    swift_retain();
    swift_retain();
  }
  else
  {
    v18 = *((_OWORD *)a2 + 2);
    *v9 = *v11;
    *((_OWORD *)a1 + 2) = v18;
  }
  return a1;
}

uint64_t sub_1D43386B4(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0CB0338] - 8) + 8))();
  return a1;
}

uint64_t sub_1D43386E8(uint64_t a1)
{
  sub_1D4316A28();
  return a1;
}

uint64_t assignWithTake for XPCEncoded(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 >> 60 == 15)
    goto LABEL_4;
  v5 = *(_QWORD *)(a2 + 8);
  if (v5 >> 60 == 15)
  {
    sub_1D43386B4(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  v6 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  sub_1D42B5420(v6, v4);
LABEL_6:
  v7 = *(_QWORD *)(a2 + 16);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_10:
    v9 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v9;
    return a1;
  }
  if (!v7)
  {
    sub_1D43386E8(a1 + 16);
    goto LABEL_10;
  }
  v8 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCEncoded(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCEncoded(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCEncoded()
{
  return &type metadata for XPCEncoded;
}

uint64_t sub_1D433889C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v1;
  sub_1D447DAC4();
  v3 = *v0;
  v4 = v0[1];
  swift_retain();
  sub_1D439E174(v3, v4);
  if (!v2)
  {
    swift_release();
    v5 = v0[2];
    v6 = v0[3];
    v8 = v0[4];
    v7 = v0[5];
    swift_retain();
    sub_1D42B7C80(v5, v6, v8, v7);
  }
  swift_release();
  return swift_release();
}

uint64_t sub_1D433894C()
{
  return sub_1D433889C();
}

uint64_t sub_1D4338960(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1D43389AC;
  return sub_1D43768A8();
}

uint64_t sub_1D43389AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v6;

  v4 = *v2;
  v6 = *v2;
  sub_1D42B8F34(&v6);
  if (v1)
    return ((uint64_t (*)(void))v2[1])();
  *(_QWORD *)(v4 + 32) = a1;
  return swift_task_switch();
}

uint64_t sub_1D4338A20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(uint64_t **)(v0 + 16);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD **)(v1 + 24);
  v5 = *(_QWORD *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  sub_1D42E2EE8(v5, v6);
  v7 = v4[2];
  v8 = v4[3];
  v9 = v4[4];
  v10 = v4[5];
  swift_retain();
  sub_1D42B7FE4(v7);
  swift_release();
  swift_release();
  *v2 = v5;
  v2[1] = v6;
  v2[2] = v7;
  v2[3] = v8;
  v2[4] = v9;
  v2[5] = v10;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D4338AC8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 64) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 72) = v2;
  *v2 = v1;
  v2[1] = sub_1D4338B24;
  return sub_1D4338960(v1 + 16);
}

uint64_t sub_1D4338B24()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  uint64_t v7;

  v2 = *v1;
  v7 = *v1;
  sub_1D42B8F34(&v7);
  if (!v0)
  {
    v3 = *(_OWORD **)(v2 + 64);
    v4 = *(_OWORD *)(v2 + 16);
    v5 = *(_OWORD *)(v2 + 48);
    v3[1] = *(_OWORD *)(v2 + 32);
    v3[2] = v5;
    *v3 = v4;
  }
  return ((uint64_t (*)(void))v1[1])();
}

uint64_t sub_1D4338B7C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1D4338BEC(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1D4338C28(a1);
  return v2;
}

uint64_t sub_1D4338C28(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 32))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 88), a1);
  return v1;
}

uint64_t sub_1D4338C58()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  return v0;
}

uint64_t sub_1D4338C84()
{
  sub_1D4338C58();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WrapperRef(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WrapperRef);
}

uint64_t sub_1D4338CB4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1D4338D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(_QWORD *)v2 + *(_QWORD *)(**(_QWORD **)v2 + 88);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 80) - 8) + 16))(a2, v5);
}

uint64_t sub_1D4338D90@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1D4338BEC(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1D4338DB4()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  char v7;
  void (*v8)(char *, uint64_t);
  uint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v2 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v10 - v5;
  sub_1D4339610();
  sub_1D4339610();
  v7 = sub_1D451A698();
  v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, AssociatedTypeWitness);
  v8(v6, AssociatedTypeWitness);
  return v7 & 1;
}

uint64_t sub_1D4338EC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v8 = (char *)&v10 - v7;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  sub_1D451A614();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
}

uint64_t sub_1D4338F88(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  _BYTE v7[72];

  v3 = *v1;
  sub_1D451B958();
  v4 = MEMORY[0x1D825E41C](&unk_1D452C394, v3);
  v6 = a1;
  MEMORY[0x1D825E41C](&unk_1D452C314, v3, &v6);
  sub_1D4338EC0((uint64_t)v7, v3, v4);
  return sub_1D451B994();
}

uint64_t sub_1D4339014@<X0>(uint64_t a1@<X8>)
{
  char *v1;

  return (*(uint64_t (**)(uint64_t, char *))(*(_QWORD *)(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v1)
                                                                            + 0x50)
                                                                - 8)
                                                    + 16))(a1, &v1[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v1) + 0x60)]);
}

uint64_t sub_1D4339044()
{
  uint64_t v0;

  MEMORY[0x1D825E41C](&unk_1D452C394, v0);
  return sub_1D4338DB4() & 1;
}

uint64_t sub_1D433909C(uint64_t a1, uint64_t a2)
{
  return sub_1D4338F88(*(_QWORD *)(a2 - 8));
}

uint64_t sub_1D43390C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = MEMORY[0x1D825E41C](&unk_1D452C394);
  return sub_1D4338EC0(a1, a2, v4);
}

uint64_t sub_1D4339108(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _BYTE v5[72];

  sub_1D451B958();
  v3 = MEMORY[0x1D825E41C](&unk_1D452C394, a2);
  sub_1D4338EC0((uint64_t)v5, a2, v3);
  return sub_1D451B994();
}

id sub_1D433916C(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return sub_1D433919C(a1);
}

id sub_1D433919C(uint64_t a1)
{
  char *v1;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  objc_super v8;

  v3 = (objc_class *)sub_1D42B7104();
  v4 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v1) + 0x50);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(&v1[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v1) + 0x60)], a1, v4);
  v8.receiver = v1;
  v8.super_class = v3;
  v6 = objc_msgSendSuper2(&v8, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v6;
}

uint64_t sub_1D4339238(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[5];
  _QWORD *v9;

  v3 = sub_1D42B7104();
  v4 = *MEMORY[0x1E0DEEDD8] & *v1;
  v9 = v1;
  v5 = *(_QWORD *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 88);
  v8[2] = v5;
  v8[3] = v6;
  return sub_1D4344594((uint64_t)&v9, a1, (uint64_t)sub_1D4339608, (uint64_t)v8, v3, v5, *(_QWORD *)(v6 + 8)) & 1;
}

uint64_t sub_1D43392A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(a2 - 8) + 16))(a3, *a1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)*a1) + 0x60));
}

uint64_t sub_1D43392D8(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  id v5;
  char v6;
  _OWORD v8[2];

  if (a3)
  {
    v4 = a1;
    swift_unknownObjectRetain();
    sub_1D451B208();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
    v5 = a1;
  }
  v6 = sub_1D4339238((uint64_t)v8);

  sub_1D42B5464((uint64_t)v8);
  return v6 & 1;
}

uint64_t sub_1D433934C(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  v2 = sub_1D433937C((uint64_t)v1);

  return v2;
}

uint64_t sub_1D433937C(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v2 = *MEMORY[0x1E0DEEDD8] & *(_QWORD *)v1;
  v3 = *(_QWORD *)(v2 + 0x50);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v9 - v5;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))((char *)&v9 - v5, &v1[*(_QWORD *)(v2 + 96)], v3);
  v7 = sub_1D451A620();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v7;
}

id sub_1D4339428@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  uint64_t v9;

  v3 = sub_1D42B7104();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - v4;
  (*(void (**)(char *, uint64_t))(v7 + 16))((char *)&v9 - v4, v1 + *(_QWORD *)(v6 + 96));
  result = sub_1D433916C((uint64_t)v5);
  a1[3] = v3;
  *a1 = result;
  return result;
}

uint64_t sub_1D43394C0(void *a1)
{
  id v1;
  uint64_t v2;
  _QWORD v4[4];

  v1 = a1;
  sub_1D4339428(v4);

  sub_1D42B5528(v4, v4[3]);
  v2 = sub_1D451B814();
  sub_1D42B5400((uint64_t)v4);
  return v2;
}

void sub_1D433951C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1D4339548()
{
  sub_1D433951C();
}

uint64_t sub_1D4339554(char *a1)
{
  return (*(uint64_t (**)(char *))(*(_QWORD *)(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)a1) + 0x50)
                                                       - 8)
                                           + 8))(&a1[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)a1) + 0x60)]);
}

uint64_t type metadata accessor for WrapperNSHashableShallowCopying(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WrapperNSHashableShallowCopying);
}

uint64_t sub_1D433958C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D4339014(a1);
}

id sub_1D43395AC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = sub_1D433916C(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1D43395D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x1D825E41C](&unk_1D452C360, a1, &v4);
}

uint64_t sub_1D4339608@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1D43392A4(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1D4339610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

void sub_1D433961C()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D433962C(void (*a1)(_QWORD, _QWORD, _QWORD), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD v7[8];

  v7[2] = a4;
  v7[3] = a5;
  v7[4] = a6;
  v7[5] = a2;
  v7[6] = a3;
  return sub_1D433986C(a1, (void (*)(uint64_t, char *))sub_1D43406F0, (uint64_t)v7, a4, a5, a6);
}

uint64_t sub_1D4339660@<X0>(void (*a1)(uint64_t, uint64_t)@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  v26 = *(_QWORD *)(a2 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42CB210();
  v10 = v9 - v8;
  v12 = *(_QWORD *)(v11 + 16);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v14);
  sub_1D42CB210();
  v17 = v16 - v15;
  MEMORY[0x1E0C80A78](v18);
  sub_1D42CB210();
  v21 = v20 - v19;
  (*(void (**)(uint64_t, uint64_t))(v22 + 16))(v20 - v19, v23);
  v24 = 1;
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v21, 1, v12) != 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v17, v21, v12);
    a1(v17, v10);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v17, v12);
    if (v5)
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(a4, v10, a2);
    v24 = 0;
  }
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a5, v24, 1, a3);
}

uint64_t sub_1D43397D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(uint64_t);
  uint64_t result;
  uint64_t v15;

  v9 = *(_QWORD *)(a6 - 8);
  v10 = MEMORY[0x1E0C80A78]();
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = v13(v10);
  if (!v6)
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, a6);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v12, a6);
  }
  return result;
}

uint64_t sub_1D433986C(void (*a1)(_QWORD, _QWORD, _QWORD), void (*a2)(uint64_t, char *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t);
  void (*v30)(_QWORD, _QWORD, _QWORD);
  void (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(_QWORD, _QWORD, _QWORD);
  uint64_t v42;
  void (*v43)(uint64_t, char *);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;

  v43 = a2;
  v44 = a3;
  v41 = a1;
  v40 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v45 = *(_QWORD *)(AssociatedTypeWitness - 8);
  sub_1D42BA1F0();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v33 - v12;
  sub_1D451B160();
  sub_1D432D3AC();
  MEMORY[0x1E0C80A78](v14);
  sub_1D4340B24();
  v34 = *(_QWORD *)(a4 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v15);
  sub_1D4340A24(v16, v33);
  v17 = swift_getAssociatedTypeWitness();
  v33 = *(_QWORD *)(v17 - 8);
  sub_1D42BA1F0();
  MEMORY[0x1E0C80A78](v18);
  v47 = (char *)&v33 - v19;
  v37 = *(_QWORD *)(a5 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v20);
  sub_1D42BA15C();
  v38 = v21;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v33 - v23;
  v48 = a5;
  v49 = sub_1D451A59C();
  v36 = a4;
  result = sub_1D451A824();
  if (__OFADD__(result, 1))
  {
    __break(1u);
  }
  else
  {
    v26 = v48;
    v27 = sub_1D451AA1C();
    v46 = v17;
    v28 = v27;
    sub_1D451A974();
    v29 = *(void (**)(char *, _QWORD, uint64_t))(v37 + 16);
    v29(v24, v41, v26);
    v42 = v28;
    sub_1D451A9F8();
    v30 = v41;
    v41 = (void (*)(_QWORD, _QWORD, _QWORD))v29;
    v29(v38, v30, v26);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v35, v39, v36);
    sub_1D451A818();
    swift_getAssociatedConformanceWitness();
    sub_1D451B190();
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v7, 1, AssociatedTypeWitness) == 1)
    {
LABEL_6:
      sub_1D4340AEC();
      sub_1D4340A4C();
      return v49;
    }
    else
    {
      v31 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 32);
      v32 = v38;
      while (1)
      {
        v31(v13, v7, AssociatedTypeWitness);
        v43((uint64_t)v32, v13);
        if (v6)
          break;
        v41(v24, v32, v48);
        sub_1D451A9F8();
        sub_1D43409DC();
        sub_1D451B190();
        if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v7, 1, AssociatedTypeWitness) == 1)
          goto LABEL_6;
      }
      sub_1D43409DC();
      sub_1D4340AEC();
      sub_1D4340A4C();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1D4339BA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  _QWORD *v18;

  sub_1D42CB740();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v14 = type metadata accessor for ExclusiveReductionsSequence.Iterator(0, v12, v0, v13);
  v15 = v11 + *(int *)(v14 + 44);
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v15, 1, 1, v1);
  sub_1D4340B50();
  swift_getAssociatedTypeWitness();
  sub_1D4340A88();
  v16(v11, v9);
  sub_1D4340A98();
  v17 = sub_1D451B160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v7, v17);
  v18 = (_QWORD *)(v11 + *(int *)(v14 + 48));
  *v18 = v5;
  v18[1] = v3;
  sub_1D42CB520();
}

void sub_1D4339C70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[2];
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_1D42CB740();
  v1 = v0;
  v3 = v2;
  v40 = v4;
  v5 = *(_QWORD *)(v2 + 16);
  v37 = *(_QWORD *)(v2 + 32);
  sub_1D4340C38();
  v38 = sub_1D43408D0();
  v36 = *(_QWORD *)(v38 - 8);
  sub_1D42BA1F0();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v33 - v7;
  v9 = *(_QWORD *)(v3 + 24);
  v10 = sub_1D451B160();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1D42BA15C();
  v35 = v12;
  sub_1D432D374();
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v33 - v15;
  v17 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v14);
  sub_1D42CB210();
  v20 = v19 - v18;
  v21 = *(int *)(v3 + 44);
  v39 = v1;
  v22 = v1 + v21;
  sub_1D4340BD4((uint64_t)v16, v1 + v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
  sub_1D4340834((uint64_t)v16, 1, v9);
  if (v23)
  {
    sub_1D43211E8((uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
    v31 = 1;
    v32 = v40;
  }
  else
  {
    v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 32);
    sub_1D4340978(v20, (uint64_t)v16, v34);
    v24 = v37;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    v25 = v39;
    v26 = sub_1D451B190();
    v33[1] = v33;
    MEMORY[0x1E0C80A78](v26);
    v33[-6] = v5;
    v33[-5] = v9;
    v33[-4] = v24;
    v33[-3] = v20;
    v33[-2] = v25;
    v27 = v35;
    v28 = v38;
    sub_1D4339660((void (*)(uint64_t, uint64_t))sub_1D433C2A4, MEMORY[0x1E0DEDCE8], v9, v29, v35);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v28);
    sub_1D4340BD4(v22, v27, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 40));
    v30 = v40;
    v34(v40, v20, v9);
    v31 = 0;
    v32 = v30;
  }
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v32, v31, 1, v9);
  sub_1D42CB520();
}

uint64_t sub_1D4339EDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  void (*v13)(uint64_t, uint64_t);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(a7, a2, a5);
  v13 = *(void (**)(uint64_t, uint64_t))(a3
                                                + *(int *)(type metadata accessor for ExclusiveReductionsSequence.Iterator(0, a4, a5, a6)+ 48));
  swift_retain();
  v13(a7, a1);
  return swift_release();
}

void sub_1D4339F80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1D42CB740();
  v3 = v2;
  v4 = *(_QWORD *)(v2 + 24);
  sub_1D451B160();
  sub_1D432D3AC();
  MEMORY[0x1E0C80A78](v5);
  sub_1D4340B14();
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 16) - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1D42BE8F8();
  swift_getAssociatedTypeWitness();
  sub_1D432D3AC();
  MEMORY[0x1E0C80A78](v8);
  sub_1D4340B24();
  sub_1D4340BD4(v0, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
  sub_1D451A818();
  sub_1D43409C8(v1, v0 + *(int *)(v3 + 44), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16));
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v1, 0, 1, v4);
  swift_retain();
  sub_1D4339BA8();
  sub_1D42CB520();
}

uint64_t sub_1D433A0AC(uint64_t a1, uint64_t a2)
{
  return sub_1D433B688(a1, a2, sub_1D4339F80);
}

uint64_t sub_1D433A0C4()
{
  return sub_1D451A860();
}

uint64_t sub_1D433A0E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;

  v7 = _s5IndexV14RepresentationOMa(0, a2, a3, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a5, a1, v7);
}

void sub_1D433A120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  void (*v28)(uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;

  sub_1D42CB740();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  sub_1D4340A98();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v37 = *(_QWORD *)(AssociatedTypeWitness - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v12);
  sub_1D42BA15C();
  v36 = v13;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v14);
  v35 = (char *)&v34 - v15;
  v16 = _s5IndexV14RepresentationOMa(255, v6, v4, v2);
  sub_1D4340718();
  sub_1D432D3AC();
  MEMORY[0x1E0C80A78](v17);
  sub_1D4340B24();
  v19 = v0 + *(int *)(v18 + 48);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  v20(v0, v10, v16);
  v20(v19, v8, v16);
  v21 = sub_1D4340718();
  sub_1D4340798(v0);
  if (!v26)
  {
    v24 = *(int *)(v21 + 48);
    v25 = v0 + v24;
    sub_1D4340798(v19);
    if (!v26)
    {
      v34 = v19 + v24;
      v27 = v37;
      v28 = *(void (**)(uint64_t))(v37 + 32);
      v29 = v35;
      v30 = sub_1D4340ADC();
      v28(v30);
      v31 = v36;
      ((void (*)(uint64_t, uint64_t, uint64_t))v28)(v36, v19, AssociatedTypeWitness);
      sub_1D4340BBC();
      sub_1D4340ADC();
      sub_1D451A698();
      v32 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
      v32(v31, AssociatedTypeWitness);
      v32((uint64_t)v29, AssociatedTypeWitness);
      v33 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
      v33(v34, v4);
      v33(v25, v4);
      goto LABEL_9;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v24, v4);
    v22 = *(uint64_t (**)(uint64_t, uint64_t))(v37 + 8);
    v23 = v0;
LABEL_8:
    sub_1D4340B5C(v23, v22);
    goto LABEL_9;
  }
  sub_1D4340798(v19);
  if (!v26)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v19 + *(int *)(v21 + 48), v4);
    v22 = *(uint64_t (**)(uint64_t, uint64_t))(v37 + 8);
    v23 = v19;
    goto LABEL_8;
  }
LABEL_9:
  sub_1D42CB520();
}

void sub_1D433A350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1D42CB740();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v11 = sub_1D4340B44();
  v38 = *(_QWORD *)(v11 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v12);
  sub_1D42BA15C();
  v36 = v13;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v14);
  v35 = (char *)&v33 - v15;
  v37 = v2;
  v16 = _s5IndexV14RepresentationOMa(255, v6, v4, v2);
  sub_1D4340718();
  sub_1D432D3AC();
  MEMORY[0x1E0C80A78](v17);
  sub_1D4340994();
  v19 = v0 + *(int *)(v18 + 48);
  v20 = *(_QWORD *)(v16 - 8);
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
  v21(v0, v10, v16);
  v21(v19, v8, v16);
  sub_1D4340B50();
  v22 = sub_1D4340718();
  sub_1D4340834(v0, 1, v22);
  if (v23)
  {
    sub_1D43211E8(v19, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
  }
  else
  {
    sub_1D4340834(v19, 1, v22);
    if (v23)
    {
      sub_1D43211E8(v0, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
    }
    else
    {
      v24 = *(int *)(v22 + 48);
      v34 = v0 + v24;
      v25 = v19 + v24;
      v26 = v38;
      v27 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 32);
      v28 = v35;
      v27(v35, v0, v11);
      v29 = v36;
      v30 = sub_1D4340ADC();
      ((void (*)(uint64_t))v27)(v30);
      sub_1D4340BBC();
      sub_1D451A650();
      v31 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
      v31(v29, v11);
      v31((uint64_t)v28, v11);
      v32 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
      v32(v25, v4);
      v32(v34, v4);
    }
  }
  sub_1D42CB520();
}

void sub_1D433A558()
{
  sub_1D433A350();
}

void sub_1D433A574()
{
  sub_1D433A120();
}

void sub_1D433A584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D42CB740();
  v3 = v2;
  v5 = v4;
  v6 = *(_QWORD *)(v2 + 24);
  _s5IndexV14RepresentationOMa(0, *(_QWORD *)(v2 + 16), v6, v7);
  sub_1D432D3AC();
  MEMORY[0x1E0C80A78](v8);
  sub_1D4340B04();
  sub_1D4340898();
  v9 = sub_1D4340718();
  v10 = v1 + *(int *)(v9 + 48);
  sub_1D4340C18();
  sub_1D4340978(v10, v0 + *(int *)(v3 + 44), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16));
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v1, 0, 1, v9);
  sub_1D4340A60(v1, v5);
  sub_1D42CB520();
}

void sub_1D433A654(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  _s5IndexV14RepresentationOMa(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
  sub_1D432D3AC();
  MEMORY[0x1E0C80A78](v5);
  sub_1D4340994();
  sub_1D4340898();
  v6 = sub_1D4340718();
  sub_1D43409D0(v3, v7, v8, v6);
  sub_1D4340A60(v3, a3);
  sub_1D42CB084();
}

void sub_1D433A6EC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 + 24);
  _s5IndexV14RepresentationOMa(0, *(_QWORD *)(a2 + 16), v6, a3);
  sub_1D4340A70();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v14 - v8, a1);
  v11 = sub_1D4340C38();
  v12 = sub_1D4340718();
  sub_1D4340834((uint64_t)v9, 1, v12);
  if (v13)
  {
    sub_1D4340B90();
    v14 = 279;
    sub_1D42F201C();
    sub_1D4340B84();
    sub_1D4340878();
    sub_1D4340B78();
  }
  sub_1D43409C8(a4, (uint64_t)&v9[*(int *)(v12 + 48)], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32));
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  sub_1D42CB084();
}

void sub_1D433A808()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(void);
  uint64_t v39;
  uint64_t v40;
  char **v41;
  char *v42;
  char *v43;
  void (*v44)(uint64_t *, _QWORD);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(void);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  sub_1D42CB740();
  v67 = v2;
  v68 = v0;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = *(_QWORD *)(v5 + 16);
  v63 = *(_QWORD *)(v9 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v10);
  v62 = (uint64_t)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D4340898();
  v59 = *(_QWORD *)(v12 - 8);
  v60 = v12;
  sub_1D42BA1F0();
  MEMORY[0x1E0C80A78](v13);
  v57 = (uint64_t)&v55 - v14;
  v58 = (char *)v6;
  v15 = *(_QWORD *)(v6 + 24);
  v16 = *(_QWORD *)(v15 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v17);
  sub_1D4340A24(v18, v55);
  v19 = sub_1D4340898();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  sub_1D43408A0();
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v55 - v22;
  v24 = sub_1D4340A98();
  v26 = _s5IndexV14RepresentationOMa(v24, v25, v15, v4);
  MEMORY[0x1E0C80A78](v26);
  v66 = (uint64_t)&v55 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v55 - v29;
  (*(void (**)(char *, uint64_t))(v31 + 16))((char *)&v55 - v29, v8);
  v69 = v15;
  v32 = sub_1D4340718();
  sub_1D4340834((uint64_t)v30, 1, v32);
  if (v33)
  {
    sub_1D4340B90();
    v55 = 291;
    sub_1D42F201C();
    sub_1D4340B84();
    sub_1D4340878();
    sub_1D4340B78();
  }
  v64 = &v30[*(int *)(v32 + 48)];
  v65 = v32;
  sub_1D4340BB0((uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 16));
  sub_1D4340A40();
  swift_getAssociatedConformanceWitness();
  v34 = sub_1D451A698();
  sub_1D4340AFC(v1);
  sub_1D4340AFC((uint64_t)v23);
  if ((v34 & 1) != 0)
  {
    v37 = v66;
    sub_1D43409D0(v66, v35, v36, v65);
    sub_1D433A0E4(v37, v9, v69, v4, v67);
    sub_1D4340B5C((uint64_t)v64, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
    sub_1D4340AFC((uint64_t)v30);
  }
  else
  {
    sub_1D4340BB0(v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 32));
    v38 = *(void (**)(void))(v16 + 32);
    v55 = v4;
    v56 = v38;
    v39 = v61;
    v38();
    v40 = v68;
    v41 = (char **)(v68 + *((int *)v58 + 12));
    v43 = *v41;
    v42 = v41[1];
    v64 = v43;
    v58 = v42;
    v44 = (void (*)(uint64_t *, _QWORD))sub_1D451ADA0();
    v45 = v59;
    v46 = v60;
    v47 = v57;
    sub_1D4340930(v57, v48, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 16));
    v44(&v70, 0);
    ((void (*)(uint64_t, uint64_t))v64)(v39, v47);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v47, v46);
    v50 = v65;
    v49 = v66;
    v64 = (char *)(v66 + *(int *)(v65 + 48));
    v51 = v62;
    v52 = v63;
    sub_1D4340870(v62, v40, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 16));
    v53 = v55;
    sub_1D451ACB0();
    sub_1D4340970(v51, *(uint64_t (**)(uint64_t, uint64_t))(v52 + 8));
    sub_1D4340AFC(v1);
    v54 = v69;
    ((void (*)(char *, uint64_t, uint64_t))v56)(v64, v39, v69);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v49, 0, 1, v50);
    sub_1D433A0E4(v49, v9, v54, v53, v67);
  }
  sub_1D42CB520();
}

void sub_1D433ABEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  sub_1D42CB740();
  v33 = v0;
  v3 = v2;
  v5 = v4;
  v35 = v6;
  v8 = v7;
  v9 = *(_QWORD *)(v4 + 16);
  sub_1D4340B50();
  v10 = sub_1D4340C38();
  v32 = *(_QWORD *)(v10 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v11);
  sub_1D43408A0();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v32 - v13;
  v15 = *(_QWORD *)(v5 + 24);
  v34 = v3;
  v16 = _s5IndexV14RepresentationOMa(255, v9, v15, v3);
  sub_1D4340718();
  sub_1D432D3AC();
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v32 - v19;
  v21 = (char *)&v32 + *(int *)(v18 + 48) - v19;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  v22((char *)&v32 - v19, v8, v16);
  v22(v21, v35, v16);
  sub_1D4340A98();
  v35 = v15;
  v23 = sub_1D4340718();
  sub_1D4340798((uint64_t)v20);
  if (v26)
  {
    sub_1D4340798((uint64_t)v21);
    if (v26)
      goto LABEL_12;
    v28 = *(int *)(v23 + 48);
    sub_1D4340870((uint64_t)v14, (uint64_t)v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 32));
    sub_1D4340A04();
    v29 = sub_1D4340C40();
    sub_1D43408DC(v1);
    sub_1D43408DC((uint64_t)v14);
    if (!__OFSUB__(v29, 1))
    {
      (*(void (**)(char *))(*(_QWORD *)(v35 - 8) + 8))(&v21[v28]);
      goto LABEL_12;
    }
  }
  else
  {
    v24 = *(int *)(v23 + 48);
    v25 = (uint64_t)&v20[v24];
    sub_1D4340798((uint64_t)v21);
    if (!v26)
    {
      v30 = (uint64_t)&v21[v24];
      v31 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
      v31(v14, v20, v10);
      v31((char *)v1, v21, v10);
      sub_1D451ACD4();
      sub_1D43408DC(v1);
      sub_1D43408DC((uint64_t)v14);
      sub_1D43408DC(v30);
      sub_1D43408DC(v25);
LABEL_12:
      sub_1D42CB520();
      return;
    }
    sub_1D4340870((uint64_t)v14, (uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 32));
    sub_1D4340A04();
    v27 = sub_1D4340C40();
    sub_1D43408DC(v1);
    sub_1D43408DC((uint64_t)v14);
    if (!__OFADD__(v27, 1))
    {
      (*(void (**)(uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v25);
      goto LABEL_12;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_1D433AE74()
{
  sub_1D433A584();
}

void sub_1D433AE7C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1D433A654(a1, *(_QWORD *)(a2 - 8), a3);
}

uint64_t (*sub_1D433AE94(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  _QWORD *v8;

  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[4] = sub_1D433AEFC(v8, a2, a3, *(_QWORD *)(a4 - 8));
  return sub_1D433AEF8;
}

uint64_t (*sub_1D433AEFC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v8 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  *a1 = v8;
  a1[1] = v9;
  v10 = malloc(*(_QWORD *)(v9 + 64));
  a1[2] = v10;
  sub_1D433A6EC(a2, a3, a4, (uint64_t)v10);
  return sub_1D433AF70;
}

uint64_t sub_1D433AF88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  _s5IndexVMa(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), *(_QWORD *)(a3 - 8));
  sub_1D43408D0();
  v3 = sub_1D4340C04();
  return sub_1D43409B8(v3, v4, v5, v6);
}

void sub_1D433AFC4()
{
  sub_1D433ABEC();
}

void sub_1D433AFD8()
{
  sub_1D433A808();
}

uint64_t sub_1D433AFE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v4 = _s5IndexVMa(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), *(_QWORD *)(a3 - 8));
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v9 - v6;
  sub_1D433A808();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a1, v7, v4);
}

void sub_1D433B09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t AssociatedTypeWitness;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char *v37;

  sub_1D42CB740();
  a19 = v22;
  a20 = v23;
  v25 = v24;
  v26 = *(_QWORD *)(v24 + 32);
  v27 = *(_QWORD *)(v24 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  sub_1D4340994();
  v30 = *(_QWORD *)(v25 + 24);
  _s5IndexV14RepresentationOMa(0, v27, v30, v26);
  sub_1D4340A70();
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&a9 - v32;
  (*(void (**)(char *, uint64_t))(v34 + 16))((char *)&a9 - v32, v20);
  v35 = sub_1D4340718();
  sub_1D4340834((uint64_t)v33, 1, v35);
  if (!v36)
  {
    v37 = &v33[*(int *)(v35 + 48)];
    sub_1D4340870(v21, (uint64_t)v33, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 32));
    sub_1D451A614();
    sub_1D4340970(v21, *(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v37, v30);
  }
  sub_1D42CB520();
}

void sub_1D433B1D0(uint64_t a1, uint64_t a2)
{
  sub_1D433C0C4(a1, *(_QWORD *)(a2 - 8), (void (*)(_BYTE *, uint64_t, uint64_t))sub_1D433B09C);
}

void sub_1D433B1F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1D433B09C(a1, a2, *(_QWORD *)(a3 - 8), a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_1D433B1F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D433C144(a1, a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))sub_1D433B09C);
}

void sub_1D433B204()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  _QWORD *v16;

  sub_1D42CB740();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v10 = type metadata accessor for InclusiveReductionsSequence.Iterator(0, v8, v9, v8);
  v11 = v7 + *(int *)(v10 + 36);
  v12 = sub_1D43409A4();
  sub_1D43409D0(v11, v13, v14, v12);
  sub_1D43409A4();
  sub_1D4340A88();
  v15(v7, v5);
  v16 = (_QWORD *)(v7 + *(int *)(v10 + 40));
  *v16 = v3;
  v16[1] = v1;
  sub_1D42CB520();
}

void sub_1D433B29C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char v25;
  char *v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;

  sub_1D42CB740();
  v3 = v0;
  v5 = v4;
  v39 = (char *)v6;
  v37 = *(_QWORD *)(v4 + 24);
  swift_getAssociatedTypeWitness();
  v7 = sub_1D4340B34();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1D43408A0();
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v30 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v30 - v13;
  v36 = *(_QWORD *)(v1 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v15);
  sub_1D42BA15C();
  v34 = v16;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v30 - v18;
  v35 = v5;
  v20 = *(int *)(v5 + 36);
  v38 = v3;
  v21 = v3 + v20;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v22(v14, v21, v7);
  sub_1D4340834((uint64_t)v14, 1, v1);
  if (v25)
  {
    sub_1D4340B5C((uint64_t)v14, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    sub_1D451B190();
    sub_1D43409C8(v21, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 40));
    v22(v39, v21, v7);
  }
  else
  {
    v31 = v21;
    v32 = v8;
    v33 = v7;
    v23 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
    v23(v19, v14, v1);
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    v24 = v38;
    sub_1D451B190();
    sub_1D4340834((uint64_t)v12, 1, v1);
    if (v25)
    {
      (*(void (**)(char *, uint64_t))(v36 + 8))(v19, v1);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v33);
      sub_1D432AE4C((uint64_t)v39, 1);
    }
    else
    {
      v26 = v34;
      v23(v34, v12, v1);
      (*(void (**)(char *, char *))(v24 + *(int *)(v35 + 40)))(v19, v26);
      v27 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
      v27((uint64_t)v26, v1);
      v27((uint64_t)v19, v1);
      sub_1D432AE4C(v2, 0);
      v28 = v31;
      v29 = v33;
      sub_1D43409C8(v31, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 40));
      v22(v39, v28, v29);
    }
  }
  sub_1D42CB520();
}

void sub_1D433B5A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 16) - 8);
  MEMORY[0x1E0C80A78](a1);
  sub_1D42BE8F8();
  swift_getAssociatedTypeWitness();
  sub_1D432D3AC();
  MEMORY[0x1E0C80A78](v3);
  sub_1D4340B04();
  sub_1D43409C8(v1, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  sub_1D451A818();
  sub_1D433B204();
  swift_retain();
  sub_1D42CB0F8();
}

uint64_t sub_1D433B67C(uint64_t a1, uint64_t a2)
{
  return sub_1D433B688(a1, a2, (void (*)(void))sub_1D433B5A8);
}

uint64_t sub_1D433B688(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3;

  a3();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v3, a1);
}

uint64_t sub_1D433B6B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1D4340980();
  v5 = v4;
  sub_1D4340B44();
  sub_1D4340A88();
  v6(v5, v3);
  v8 = v5 + *(int *)(_s5IndexVMa_0(0, v1, v0, v7) + 36);
  swift_getAssociatedTypeWitness();
  v9 = sub_1D43408D0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, v2, v9);
}

void sub_1D433B75C()
{
  sub_1D4340980();
  sub_1D4340AA4();
  sub_1D43409F0();
  sub_1D4340BDC();
  sub_1D451A650();
  sub_1D42CB084();
}

void sub_1D433B7B0()
{
  sub_1D4340980();
  sub_1D4340AA4();
  sub_1D43409F0();
  sub_1D4340BDC();
  sub_1D451A698();
  sub_1D42CB084();
}

void sub_1D433B804()
{
  sub_1D433B75C();
}

void sub_1D433B810()
{
  sub_1D433B7B0();
}

void sub_1D433B81C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D4340BF0();
  sub_1D4340898();
  sub_1D43408D0();
  sub_1D432D3AC();
  MEMORY[0x1E0C80A78](v0);
  sub_1D4340994();
  sub_1D4340898();
  sub_1D432D3AC();
  MEMORY[0x1E0C80A78](v1);
  sub_1D4340B14();
  sub_1D4340C18();
  sub_1D451AD40();
  sub_1D4340A18();
  sub_1D42CB084();
}

void sub_1D433B8C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D4340BF0();
  sub_1D4340898();
  sub_1D4340B34();
  sub_1D432D3AC();
  MEMORY[0x1E0C80A78](v1);
  sub_1D4340B14();
  sub_1D4340898();
  sub_1D432D3AC();
  MEMORY[0x1E0C80A78](v2);
  sub_1D4340B04();
  sub_1D4340A40();
  sub_1D432AE4C(v0, 1);
  sub_1D4340A18();
  sub_1D42CB0F8();
}

void sub_1D433B974(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  v7 = *(_QWORD *)(a2 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1D4340B50();
  v9 = sub_1D451B160();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v16 - v11;
  v14 = _s5IndexVMa_0(0, v7, a3, v13);
  sub_1D4340870((uint64_t)v12, a1 + *(int *)(v14 + 36), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
  sub_1D4340834((uint64_t)v12, 1, AssociatedTypeWitness);
  if (v15)
  {
    sub_1D4340970((uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    sub_1D4340B90();
    v16 = 478;
    sub_1D42F201C();
    sub_1D4340B84();
    sub_1D4340878();
    sub_1D4340B78();
  }
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a4, v12, AssociatedTypeWitness);
  sub_1D42CB0F8();
}

void sub_1D433BA98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  char v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t *, _QWORD);
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  sub_1D42CB740();
  v54 = v0;
  v2 = v1;
  v4 = v3;
  v58 = v5;
  v51 = v6;
  v7 = sub_1D4340898();
  v60 = *(_QWORD *)(v7 - 8);
  sub_1D42BE838();
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v52 = (char *)&v49 - v12;
  v13 = sub_1D4340898();
  v14 = sub_1D451B160();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  sub_1D42BA15C();
  v55 = v16;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v17);
  v53 = (char *)&v49 - v18;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v49 - v20;
  v59 = *(_QWORD *)(v13 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v22);
  sub_1D42BA15C();
  v50 = v23;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v49 - v25;
  v27 = sub_1D4340A98();
  v30 = v4 + *(int *)(_s5IndexVMa_0(v27, v28, v2, v29) + 36);
  v56 = v15;
  v57 = v14;
  sub_1D4340978((uint64_t)v21, v30, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16));
  sub_1D4340798((uint64_t)v21);
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v56 + 8))(v21, v57);
    sub_1D4340B90();
    v49 = 486;
    sub_1D42F201C();
    sub_1D4340B84();
    sub_1D4340878();
    sub_1D4340B78();
  }
  sub_1D4340930((uint64_t)v26, (uint64_t)v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 32));
  v32 = v52;
  v33 = v54;
  sub_1D451ACB0();
  sub_1D4340A40();
  swift_getAssociatedConformanceWitness();
  v34 = sub_1D451A698();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v7);
  v35 = v32;
  v36 = v26;
  if ((v34 & 1) != 0)
  {
    v37 = 1;
    v38 = (uint64_t)v53;
    (*(void (**)(char *, uint64_t))(v59 + 8))(v26, v13);
  }
  else
  {
    v39 = (uint64_t *)(v33 + *(int *)(v51 + 36));
    v41 = *v39;
    v40 = v39[1];
    v51 = v41;
    v49 = v40;
    v42 = (void (*)(uint64_t *, _QWORD))sub_1D451ADA0();
    v43 = v59;
    v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 16);
    v54 = v7;
    v45 = v50;
    sub_1D4340930(v50, v46, v44);
    v42(&v61, 0);
    v38 = (uint64_t)v53;
    ((void (*)(char *, uint64_t))v51)(v36, v45);
    v47 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
    v48 = v45;
    v7 = v54;
    v47(v48, v13);
    v37 = 0;
    v47((uint64_t)v36, v13);
  }
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v38, v37, 1, v13);
  (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v11, v35, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 32))(v55, v38, v57);
  sub_1D4340A18();
  sub_1D42CB520();
}

uint64_t sub_1D433BE14()
{
  return sub_1D451ACD4();
}

void sub_1D433BE1C()
{
  sub_1D433B81C();
}

void sub_1D433BE24()
{
  sub_1D433B8C8();
}

uint64_t (*sub_1D433BE2C(uint64_t **a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t *v8;

  v8 = (uint64_t *)malloc(0x28uLL);
  *a1 = v8;
  v8[4] = (uint64_t)sub_1D433BEB8(v8, a2, a3, *(_QWORD *)(a4 - 8));
  return sub_1D433AEF8;
}

void sub_1D433BE90(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  sub_1D43409C0(v1);
}

uint64_t (*sub_1D433BEB8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  void *v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *a1 = AssociatedTypeWitness;
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  a1[1] = v9;
  v10 = malloc(*(_QWORD *)(v9 + 64));
  a1[2] = (uint64_t)v10;
  sub_1D433B974(a2, a3, a4, (uint64_t)v10);
  return sub_1D433AF70;
}

void sub_1D433BF4C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)a1[2];
  (*(void (**)(void *, _QWORD))(a1[1] + 8))(v1, *a1);
  sub_1D43409C0(v1);
}

uint64_t sub_1D433BF7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  _s5IndexVMa_0(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8), a4);
  sub_1D43408D0();
  v4 = sub_1D4340C04();
  return sub_1D43409B8(v4, v5, v6, v7);
}

uint64_t sub_1D433BFAC()
{
  return sub_1D433BE14();
}

void sub_1D433BFB4()
{
  sub_1D433BA98();
}

uint64_t sub_1D433BFBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v5 = _s5IndexVMa_0(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8), a4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - v7;
  sub_1D433BA98();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v8, v5);
}

uint64_t sub_1D433C070()
{
  swift_getAssociatedTypeWitness();
  return sub_1D451A614();
}

void sub_1D433C0C4(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t, uint64_t))
{
  _BYTE v6[72];

  sub_1D451B958();
  a3(v6, a1, a2);
  sub_1D451B994();
  sub_1D42CB708();
}

void sub_1D433C110(uint64_t a1, uint64_t a2)
{
  sub_1D433C0C4(a1, *(_QWORD *)(a2 - 8), (void (*)(_BYTE *, uint64_t, uint64_t))sub_1D433C070);
}

uint64_t sub_1D433C130()
{
  return sub_1D433C070();
}

void sub_1D433C138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D433C144(a1, a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))sub_1D433C070);
}

void sub_1D433C144(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, uint64_t, uint64_t))
{
  uint64_t v6;
  _BYTE v7[72];

  v6 = *(_QWORD *)(a3 - 8);
  sub_1D451B958();
  a4(v7, a2, v6);
  sub_1D451B994();
  sub_1D42CB708();
}

void sub_1D433C18C()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D433C19C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a3 - 8);
  return MEMORY[0x1D825E41C](&unk_1D452C534, a1, &v4);
}

void sub_1D433C1D0()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D433C1E0()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D433C1F0()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D433C200()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D433C210()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D433C220()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D433C230()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D433C240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a3 - 8);
  return MEMORY[0x1D825E41C](&unk_1D452C7F8, a1, &v4);
}

void sub_1D433C274()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D433C284()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D433C294()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D433C2A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1D4339EDC(a1, v2[5], v2[6], v2[2], v2[3], v2[4], a2);
}

uint64_t type metadata accessor for ExclusiveReductionsSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ExclusiveReductionsSequence.Iterator);
}

uint64_t _s5IndexV14RepresentationOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&_s5IndexV14RepresentationOMn);
}

uint64_t _s5IndexVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&_s5IndexVMn);
}

uint64_t type metadata accessor for InclusiveReductionsSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InclusiveReductionsSequence.Iterator);
}

uint64_t _s5IndexVMa_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&_s5IndexVMn_0);
}

uint64_t sub_1D433C304()
{
  uint64_t AssociatedTypeWitness;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    v2 = swift_checkMetadataState();
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      swift_getTupleTypeLayout2();
      swift_initEnumMetadataSinglePayload();
      return 0;
    }
  }
  return AssociatedTypeWitness;
}

uint64_t sub_1D433C3D4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(v5 + 64);
  v11 = *(unsigned __int8 *)(v8 + 80);
  v12 = v10 + v11;
  if (v9 | v6)
  {
    if (v6 >= v9)
    {
      v16 = AssociatedTypeWitness;
      v13 = a1;
      v7 = v16;
    }
    else
    {
      v13 = (v12 + a1) & ~v11;
      v6 = *(unsigned int *)(v8 + 84);
    }
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v13, v6, v7);
  }
  else
  {
    v14 = (v12 & ~v11) + *(_QWORD *)(v8 + 64);
    if (*(_BYTE *)(a1 + v14))
    {
      v15 = (*(unsigned __int8 *)(a1 + v14) - 1) << (8 * v14);
      if (v14 > 3)
        v15 = 0;
      if ((_DWORD)v14)
      {
        if (v14 > 3)
          LODWORD(v14) = 4;
        __asm { BR              X11 }
      }
      return (v15 + 1);
    }
    else
    {
      return 0;
    }
  }
}

void sub_1D433C4F8(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 24);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8)
    v12 = *(_DWORD *)(v7 + 84);
  else
    v12 = *(_DWORD *)(v10 + 84);
  v13 = *(_QWORD *)(v7 + 64);
  v14 = *(unsigned __int8 *)(v10 + 80);
  v15 = v13 + v14;
  v16 = (v15 & ~v14) + *(_QWORD *)(v10 + 64);
  if (v12 >= a2)
  {
    v19 = AssociatedTypeWitness;
    if (v12)
    {
      if (!(_DWORD)a2)
        return;
    }
    else
    {
      a1[v16] = 0;
      if (!(_DWORD)a2)
        return;
    }
    if (v8 >= v11)
    {
      v21 = (uint64_t)a1;
      v22 = a2;
      v9 = v19;
    }
    else
    {
      v21 = (unint64_t)&a1[v15] & ~v14;
      v22 = a2;
      v8 = v11;
    }
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v21, v22, v8, v9);
    return;
  }
  v17 = ~v12 + a2;
  if (v16 >= 4)
  {
    bzero(a1, (v15 & ~v14) + *(_QWORD *)(v10 + 64));
    *(_DWORD *)a1 = v17;
    LOBYTE(v18) = 1;
    if (v12)
      return;
    goto LABEL_23;
  }
  v18 = (v17 >> (8 * v16)) + 1;
  if (!(_DWORD)v16)
  {
LABEL_22:
    if (v12)
      return;
    goto LABEL_23;
  }
  v20 = v17 & ~(-1 << (8 * v16));
  bzero(a1, (v15 & ~v14) + *(_QWORD *)(v10 + 64));
  if ((_DWORD)v16 == 3)
  {
    *(_WORD *)a1 = v20;
    a1[2] = BYTE2(v20);
    goto LABEL_22;
  }
  if ((_DWORD)v16 == 2)
  {
    *(_WORD *)a1 = v20;
    if (v12)
      return;
    goto LABEL_23;
  }
  *a1 = v20;
  if (!v12)
LABEL_23:
    a1[v16] = v18;
}

uint64_t sub_1D433C670()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    result = sub_1D451B160();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1D433C71C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  unsigned int v14;
  int v15;
  uint64_t v18;
  uint64_t v19;
  const void *v20;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10;
  v12 = *(_QWORD *)(v7 + 64) + v10;
  if (*(_DWORD *)(v9 + 84))
    v13 = *(_QWORD *)(v9 + 64);
  else
    v13 = *(_QWORD *)(v9 + 64) + 1;
  v14 = v10 | *(_DWORD *)(v7 + 80) & 0xF8;
  v15 = (*(_DWORD *)(v7 + 80) | v10) & 0x100000;
  if (v14 > 7 || v15 != 0 || ((v13 + (v12 & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + (((v14 | 7) + 16) & ~(unint64_t)(v14 | 7)));
  }
  else
  {
    v19 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
    v20 = (const void *)(((unint64_t)a2 + v12) & v19);
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v20, 1, v8))
    {
      memcpy((void *)(((unint64_t)a1 + v12) & v19), v20, v13);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v9 + 16))(((unint64_t)a1 + v12) & v19, v20, v8);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(((unint64_t)a1 + v12) & v19, 0, 1, v8);
    }
    v22 = (_QWORD *)(((unint64_t)v20 + v13 + 7) & 0xFFFFFFFFFFFFFFF8);
    v23 = v22[1];
    v24 = (_QWORD *)(((((unint64_t)a1 + v12) & v19) + v13 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v24 = *v22;
    v24[1] = v23;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1D433C894(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (v6 + a1 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  if (!_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v9, 1, v7))
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v9, v7);
  return swift_release();
}

uint64_t sub_1D433C950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  int v15;
  size_t v16;
  size_t v17;
  size_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(a3 + 24);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v8 + v11;
  v13 = (void *)((v12 + a1) & ~v11);
  v14 = (const void *)((v12 + a2) & ~v11);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v14, 1, v9))
  {
    v15 = *(_DWORD *)(v10 + 84);
    v16 = *(_QWORD *)(v10 + 64);
    if (v15)
      v17 = v16;
    else
      v17 = v16 + 1;
    memcpy(v13, v14, v17);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v13, v14, v9);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v13, 0, 1, v9);
    v15 = *(_DWORD *)(v10 + 84);
    v16 = *(_QWORD *)(v10 + 64);
  }
  if (v15)
    v18 = v16;
  else
    v18 = v16 + 1;
  v19 = (uint64_t)v13 + v18 + 7;
  v20 = (uint64_t *)(((unint64_t)v14 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
  v22 = *v20;
  v21 = v20[1];
  v23 = (_QWORD *)(v19 & 0xFFFFFFFFFFFFFFF8);
  *v23 = v22;
  v23[1] = v21;
  swift_retain();
  return a1;
}

uint64_t sub_1D433CA74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  int v15;
  int v16;
  size_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(a3 + 24);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v8 + v11;
  v13 = (void *)((v12 + a1) & ~v11);
  v14 = (const void *)((v12 + a2) & ~v11);
  v15 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v13, 1, v9);
  v16 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v14, 1, v9);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v13, v14, v9);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v13, 0, 1, v9);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 24))(v13, v14, v9);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v13, v9);
  }
  if (*(_DWORD *)(v10 + 84))
    v17 = *(_QWORD *)(v10 + 64);
  else
    v17 = *(_QWORD *)(v10 + 64) + 1;
  memcpy(v13, v14, v17);
LABEL_10:
  if (*(_DWORD *)(v10 + 84))
    v18 = *(_QWORD *)(v10 + 64);
  else
    v18 = *(_QWORD *)(v10 + 64) + 1;
  v19 = (_QWORD *)(((unint64_t)v13 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)v14 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1D433CBE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  int v15;
  size_t v16;
  size_t v17;
  size_t v18;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(a3 + 24);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v8 + v11;
  v13 = (void *)((v12 + a1) & ~v11);
  v14 = (const void *)((v12 + a2) & ~v11);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v14, 1, v9))
  {
    v15 = *(_DWORD *)(v10 + 84);
    v16 = *(_QWORD *)(v10 + 64);
    if (v15)
      v17 = v16;
    else
      v17 = v16 + 1;
    memcpy(v13, v14, v17);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v13, v14, v9);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v13, 0, 1, v9);
    v15 = *(_DWORD *)(v10 + 84);
    v16 = *(_QWORD *)(v10 + 64);
  }
  if (v15)
    v18 = v16;
  else
    v18 = v16 + 1;
  *(_OWORD *)(((unint64_t)v13 + v18 + 7) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v14 + v18 + 7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D433CD08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  int v15;
  int v16;
  size_t v17;
  uint64_t v18;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(a3 + 24);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v8 + v11;
  v13 = (void *)((v12 + a1) & ~v11);
  v14 = (const void *)((v12 + a2) & ~v11);
  v15 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v13, 1, v9);
  v16 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v14, 1, v9);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v13, v14, v9);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v13, 0, 1, v9);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 40))(v13, v14, v9);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v13, v9);
  }
  if (*(_DWORD *)(v10 + 84))
    v17 = *(_QWORD *)(v10 + 64);
  else
    v17 = *(_QWORD *)(v10 + 64) + 1;
  memcpy(v13, v14, v17);
LABEL_10:
  if (*(_DWORD *)(v10 + 84))
    v18 = *(_QWORD *)(v10 + 64);
  else
    v18 = *(_QWORD *)(v10 + 64) + 1;
  *(_OWORD *)(((unint64_t)v13 + v18 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v14 + v18 + 7) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1D433CE74(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v22;
  unint64_t v23;
  unsigned int v24;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 24);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if ((_DWORD)v11)
    v12 = v11 - 1;
  else
    v12 = 0;
  if (v12 <= v8)
    v13 = *(_DWORD *)(v7 + 84);
  else
    v13 = v12;
  if (v13 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  if ((_DWORD)v11)
    v14 = *(_QWORD *)(v10 + 64);
  else
    v14 = *(_QWORD *)(v10 + 64) + 1;
  if (!a2)
    return 0;
  v15 = *(unsigned __int8 *)(v10 + 80);
  v16 = *(_QWORD *)(v7 + 64) + v15;
  v17 = v14 + 7;
  if (v13 < a2)
  {
    if (((((v17 + (v16 & ~v15)) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v18 = 2;
    else
      v18 = a2 - v13 + 1;
    if (v18 >= 0x10000)
      v19 = 4;
    else
      v19 = 2;
    if (v18 < 0x100)
      v19 = 1;
    if (v18 >= 2)
      v20 = v19;
    else
      v20 = 0;
    __asm { BR              X3 }
  }
  if ((_DWORD)v8 == v13)
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v8, AssociatedTypeWitness);
  v22 = (v16 + a1) & ~v15;
  if (v12 == v13)
  {
    if (v11 < 2)
      return 0;
    v24 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v22, v11, v9);
    if (v24 >= 2)
      return v24 - 1;
    else
      return 0;
  }
  else
  {
    v23 = *(_QWORD *)((v17 + v22) & 0xFFFFFFFFFFFFF8);
    if (v23 >= 0xFFFFFFFF)
      LODWORD(v23) = -1;
    return (v23 + 1);
  }
}

void sub_1D433D034(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  int v18;
  unsigned int v19;

  v8 = 0u;
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v11 = *(_DWORD *)(v10 + 84);
  if (v11)
    v12 = v11 - 1;
  else
    v12 = 0;
  if (v12 <= *(_DWORD *)(v9 + 84))
    v13 = *(_DWORD *)(v9 + 84);
  else
    v13 = v12;
  if (v13 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  v14 = *(unsigned __int8 *)(v10 + 80);
  v15 = *(_QWORD *)(v9 + 64) + v14;
  v16 = *(_QWORD *)(v10 + 64);
  if (!v11)
    ++v16;
  if (v13 < a3)
  {
    if ((((_DWORD)v16 + 7 + (v15 & ~(_DWORD)v14)) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v17 = a3 - v13 + 1;
    else
      v17 = 2;
    if (v17 >= 0x10000)
      v18 = 4;
    else
      v18 = 2;
    if (v17 < 0x100)
      v18 = 1;
    if (v17 >= 2)
      v8 = v18;
    else
      v8 = 0;
  }
  if (a2 > v13)
  {
    if ((((_DWORD)v16 + 7 + (v15 & ~(_DWORD)v14)) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      v19 = ~v13 + a2;
      bzero(a1, ((v16 + 7 + (v15 & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 16);
      *a1 = v19;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X17 }
}

void sub_1D433D180(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  *(_BYTE *)(v9 + v11) = 0;
  if ((_DWORD)v10)
  {
    if ((_DWORD)v3 == v4)
    {
      v12 = v9;
      v13 = v10;
      a1 = v3;
      a2 = a3;
LABEL_6:
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v12, v13, a1, a2);
      return;
    }
    v12 = (v7 + v9) & v8;
    if (v5 == v4)
    {
      v13 = (v10 + 1);
      goto LABEL_6;
    }
    v14 = (_QWORD *)((v6 + v12) & 0xFFFFFFFFFFFFFFF8);
    if ((v10 & 0x80000000) != 0)
    {
      v15 = v10 ^ 0x80000000;
      v14[1] = 0;
    }
    else
    {
      v15 = (v10 - 1);
    }
    *v14 = v15;
  }
}

uint64_t sub_1D433D22C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1D433D2C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v10 = *(_QWORD *)(v6 + 64) + v8;
  v11 = *(_QWORD *)(v7 + 64) + 7;
  v12 = v8 | *(_DWORD *)(v6 + 80) & 0xF8;
  v13 = (*(_DWORD *)(v6 + 80) | v8) & 0x100000;
  if (v12 > 7 || v13 != 0 || ((v11 + (v10 & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7)));
  }
  else
  {
    v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v18 = ((unint64_t)a2 + v10) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v10) & v17, v18, v5);
    v19 = (_QWORD *)((v11 + v18) & 0xFFFFFFFFFFFFFFF8);
    v20 = v19[1];
    v21 = (_QWORD *)((v11 + (((unint64_t)v4 + v10) & v17)) & 0xFFFFFFFFFFFFFFF8);
    *v21 = *v19;
    v21[1] = v20;
  }
  swift_retain();
  return v4;
}

uint64_t sub_1D433D3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64)
                                                                                            + a1
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
  return swift_release();
}

uint64_t sub_1D433D444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain();
  return a1;
}

uint64_t sub_1D433D4DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1D433D580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  *(_OWORD *)((*(_QWORD *)(v8 + 64) + 7 + v11) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v8 + 64) + 7 + v12) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D433D614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  *(_OWORD *)((*(_QWORD *)(v8 + 64) + 7 + v11) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v8 + 64) + 7 + v12) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1D433D6B0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  unint64_t v19;

  v5 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(v4 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= v7)
    v10 = *(_DWORD *)(v6 + 84);
  else
    v10 = *(_DWORD *)(v8 + 84);
  if (v10 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v11 = *(_QWORD *)(v6 + 64);
  v12 = *(unsigned __int8 *)(v8 + 80);
  v13 = v11 + v12;
  v14 = *(_QWORD *)(v8 + 64) + 7;
  if (v10 < a2)
  {
    if (((((v14 + (v13 & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v15 = 2;
    else
      v15 = a2 - v10 + 1;
    if (v15 >= 0x10000)
      v16 = 4;
    else
      v16 = 2;
    if (v15 < 0x100)
      v16 = 1;
    if (v15 >= 2)
      v17 = v16;
    else
      v17 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1D433D750 + 4 * byte_1D452C3C3[v17]))();
  }
  if ((_DWORD)v7 == v10)
  {
    v9 = v7;
    v4 = v5;
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v9, v4);
  }
  a1 = (v13 + a1) & ~v12;
  if ((_DWORD)v9 == v10)
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v9, v4);
  v19 = *(_QWORD *)((v14 + a1) & 0xFFFFFFFFFFFFF8);
  if (v19 >= 0xFFFFFFFF)
    LODWORD(v19) = -1;
  return (v19 + 1);
}

void sub_1D433D7F0(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  v8 = ((*(_QWORD *)(v6 + 64)
       + 7
       + ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  if (v7 >= a3)
  {
    v11 = 0u;
  }
  else
  {
    if (((*(_DWORD *)(v6 + 64)
         + 7
         + ((*(_DWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v9 = a3 - v7 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
  }
  if (a2 > v7)
  {
    if ((_DWORD)v8)
    {
      v12 = ~v7 + a2;
      bzero(a1, v8);
      *a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

void sub_1D433D904(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  *(_BYTE *)(v9 + v10) = 0;
  if ((_DWORD)a1)
  {
    if ((_DWORD)v4 == v6)
    {
      v11 = v9;
      a2 = v4;
      a3 = a4;
LABEL_5:
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v11, a1, a2, a3);
      return;
    }
    v11 = (v8 + v9) & v5;
    if ((_DWORD)a2 == v6)
      goto LABEL_5;
    v12 = (_QWORD *)((v7 + v11) & 0xFFFFFFFFFFFFFFF8);
    if ((a1 & 0x80000000) != 0)
    {
      v13 = a1 ^ 0x80000000;
      v12[1] = 0;
    }
    else
    {
      v13 = (a1 - 1);
    }
    *v12 = v13;
  }
}

uint64_t type metadata accessor for ExclusiveReductionsSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ExclusiveReductionsSequence);
}

uint64_t sub_1D433D9B4(uint64_t *a1)
{
  uint64_t result;
  unint64_t v2;

  result = _s5IndexV14RepresentationOMa(319, a1[2], a1[3], a1[4]);
  if (v2 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D433DA28()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int v12;
  int v13;
  size_t v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  int v26;
  uint64_t v28;

  sub_1D4340780();
  v3 = sub_1D43408E4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v6 + 80);
  v7 = *(unsigned int *)(v6 + 84);
  v9 = v8;
  v10 = *(_QWORD *)(v4 + 64) + v8;
  v11 = (v10 & ~(unint64_t)v8) + *(_QWORD *)(v6 + 64);
  v12 = *(_DWORD *)(v4 + 84);
  v13 = v7 | v12;
  if (v7 | v12)
    v14 = (v10 & ~(unint64_t)v8) + *(_QWORD *)(v6 + 64);
  else
    v14 = v11 + 1;
  v15 = *(_DWORD *)(v4 + 80) | v8;
  v16 = (*(_BYTE *)(v4 + 80) | v8);
  v17 = v15 & 0x100000;
  if (v16 > 7 || v17 != 0 || v14 > 0x18)
  {
    v20 = *v1;
    *v0 = *v1;
    v0 = (uint64_t *)(v20 + ((v16 + 16) & ~v16));
    swift_retain();
  }
  else
  {
    v21 = v3;
    v22 = ~v9;
    v28 = v22;
    if (v13)
    {
      if (v12 >= v7)
      {
        v23 = (uint64_t)v1;
        v7 = *(unsigned int *)(v4 + 84);
        v24 = v21;
      }
      else
      {
        v23 = ((unint64_t)v1 + v10) & v22;
        v24 = v5;
      }
      if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v23, v7, v24))
      {
LABEL_26:
        memcpy(v0, v1, v14);
        return v0;
      }
    }
    else if (*((_BYTE *)v1 + v11))
    {
      v25 = (*((unsigned __int8 *)v1 + v11) - 1) << (8 * v11);
      if (v11 > 3)
        v25 = 0;
      if ((_DWORD)v11)
      {
        if (v11 <= 3)
          v26 = v11;
        else
          v26 = 4;
        __asm { BR              X11 }
      }
      if (sub_1D4340924(v25))
        goto LABEL_26;
    }
    sub_1D4340938(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
    sub_1D4340870(((unint64_t)v0 + v10) & v28, ((unint64_t)v1 + v10) & v28, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
    if (!v13)
      *((_BYTE *)v0 + v11) = 0;
  }
  return v0;
}

void sub_1D433DBE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;

  v4 = sub_1D43408E4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = *(unsigned __int8 *)(v8 + 80);
  v11 = ~v10;
  v12 = *(_QWORD *)(v5 + 64) + v10;
  if (v9 | v6)
  {
    if (v6 >= v9)
    {
      v13 = a1;
      v14 = v4;
    }
    else
    {
      v13 = (v12 + a1) & v11;
      v6 = *(unsigned int *)(v8 + 84);
      v14 = v7;
    }
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v13, v6, v14))
    {
LABEL_13:
      sub_1D42CB0F8();
      return;
    }
  }
  else
  {
    v15 = (v12 & ~v10) + *(_QWORD *)(v8 + 64);
    if (*(_BYTE *)(a1 + v15))
    {
      v16 = (*(unsigned __int8 *)(a1 + v15) - 1) << (8 * v15);
      if (v15 > 3)
        v16 = 0;
      if ((_DWORD)v15)
      {
        if (v15 > 3)
          LODWORD(v15) = 4;
        __asm { BR              X11 }
      }
      if (sub_1D4340924(v16))
        goto LABEL_13;
    }
  }
  sub_1D4340970(a1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))((v12 + a1) & v11, v7);
}

void sub_1D433DD40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  size_t v35;
  uint64_t v36;
  uint64_t v37;

  sub_1D42CB740();
  sub_1D4340780();
  sub_1D43408E4();
  sub_1D43407F8();
  if (v17)
  {
    if (v19 >= v20)
    {
      v21 = v13;
      v22 = v14;
    }
    else
    {
      v21 = sub_1D4340C24();
    }
    v33 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v21, v19, v22);
    if ((_DWORD)v33)
      goto LABEL_12;
    goto LABEL_17;
  }
  if (!*(_BYTE *)(v13 + v15))
    goto LABEL_17;
  sub_1D4340AC4();
  if (!(_DWORD)v15)
  {
    v33 = sub_1D4340924(v31);
    if ((_DWORD)v33)
    {
LABEL_12:
      if (v17)
        v35 = v15;
      else
        v35 = v15 + 1;
      sub_1D4340948(v33, v34, v35);
LABEL_19:
      sub_1D42CB520();
      return;
    }
LABEL_17:
    sub_1D4340938(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16));
    v36 = sub_1D4340B64();
    sub_1D4340870(v36, v37, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16));
    if (!v17)
      *(_BYTE *)(v12 + v15) = 0;
    goto LABEL_19;
  }
  if (v15 <= 3)
    v32 = v15;
  else
    v32 = 4;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_1D433DDBC + 4 * byte_1D452C3DA[v32 - 1]))(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10, a11, a12);
}

void sub_1D433DE30()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;

  sub_1D4340780();
  sub_1D43408E4();
  sub_1D43407B4();
  if (v8)
  {
    if (v2 >= v3)
    {
      v9 = sub_1D43408EC();
      if (v3)
      {
LABEL_4:
        if (!(_DWORD)v9)
          goto LABEL_32;
        goto LABEL_26;
      }
    }
    else
    {
      v9 = sub_1D4340724();
      if (v11)
        goto LABEL_4;
    }
    if (!(_DWORD)v9)
    {
LABEL_30:
      v17 = sub_1D4340888(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 24));
      v25 = sub_1D4340858(v17, v18, v19, v20, v21, v22, v23, v24, v38, v39, v40);
      sub_1D4340870(v25, v26, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 24));
      goto LABEL_34;
    }
LABEL_25:
    sub_1D4340AB4();
    v9 = sub_1D4340970((v6 + v0) & v40, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    goto LABEL_26;
  }
  if (!*(_BYTE *)(v0 + v5))
    goto LABEL_37;
  sub_1D4340B9C();
  if ((_DWORD)v5)
  {
    if (v5 <= 3)
      v13 = v5;
    else
      v13 = 4;
    __asm { BR              X12 }
  }
  if (v12 == -1)
  {
LABEL_37:
    if (!*(_BYTE *)(v1 + v5))
      goto LABEL_30;
    sub_1D43408BC();
    if ((_DWORD)v5)
    {
      if (v5 <= 3)
        v15 = v5;
      else
        v15 = 4;
      __asm { BR              X11 }
    }
    if (!sub_1D4340924(v14))
      goto LABEL_30;
    goto LABEL_25;
  }
  if (!*(_BYTE *)(v1 + v5) || (sub_1D43408BC(), v9 = sub_1D4340924(v27), !(_DWORD)v9))
  {
LABEL_32:
    v28 = sub_1D4340888(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
    v36 = sub_1D4340858(v28, v29, v30, v31, v32, v33, v34, v35, v38, v39, v40);
    sub_1D4340870(v36, v37, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
    if (!v41)
      *(_BYTE *)(v0 + v5) = 0;
    goto LABEL_34;
  }
LABEL_26:
  if (v41)
    v16 = v5;
  else
    v16 = v5 + 1;
  sub_1D4340948(v9, v10, v16);
LABEL_34:
  sub_1D4340954();
}

void sub_1D433E044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  size_t v35;
  uint64_t v36;
  uint64_t v37;

  sub_1D42CB740();
  sub_1D4340780();
  sub_1D43408E4();
  sub_1D43407F8();
  if (v17)
  {
    if (v19 >= v20)
    {
      v21 = v13;
      v22 = v14;
    }
    else
    {
      v21 = sub_1D4340C24();
    }
    v33 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v21, v19, v22);
    if ((_DWORD)v33)
      goto LABEL_12;
    goto LABEL_17;
  }
  if (!*(_BYTE *)(v13 + v15))
    goto LABEL_17;
  sub_1D4340AC4();
  if (!(_DWORD)v15)
  {
    v33 = sub_1D4340924(v31);
    if ((_DWORD)v33)
    {
LABEL_12:
      if (v17)
        v35 = v15;
      else
        v35 = v15 + 1;
      sub_1D4340948(v33, v34, v35);
LABEL_19:
      sub_1D42CB520();
      return;
    }
LABEL_17:
    sub_1D4340938(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32));
    v36 = sub_1D4340B64();
    sub_1D4340870(v36, v37, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 32));
    if (!v17)
      *(_BYTE *)(v12 + v15) = 0;
    goto LABEL_19;
  }
  if (v15 <= 3)
    v32 = v15;
  else
    v32 = 4;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_1D433E0C0 + 4 * byte_1D452C3EA[v32 - 1]))(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10, a11, a12);
}

void sub_1D433E134()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;

  sub_1D4340780();
  sub_1D43408E4();
  sub_1D43407B4();
  if (v8)
  {
    if (v2 >= v3)
    {
      v9 = sub_1D43408EC();
      if (v3)
      {
LABEL_4:
        if (!(_DWORD)v9)
          goto LABEL_32;
        goto LABEL_26;
      }
    }
    else
    {
      v9 = sub_1D4340724();
      if (v11)
        goto LABEL_4;
    }
    if (!(_DWORD)v9)
    {
LABEL_30:
      v17 = sub_1D4340888(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 40));
      v25 = sub_1D4340858(v17, v18, v19, v20, v21, v22, v23, v24, v38, v39, v40);
      sub_1D4340870(v25, v26, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40));
      goto LABEL_34;
    }
LABEL_25:
    sub_1D4340AB4();
    v9 = sub_1D4340970((v6 + v0) & v40, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    goto LABEL_26;
  }
  if (!*(_BYTE *)(v0 + v5))
    goto LABEL_37;
  sub_1D4340B9C();
  if ((_DWORD)v5)
  {
    if (v5 <= 3)
      v13 = v5;
    else
      v13 = 4;
    __asm { BR              X12 }
  }
  if (v12 == -1)
  {
LABEL_37:
    if (!*(_BYTE *)(v1 + v5))
      goto LABEL_30;
    sub_1D43408BC();
    if ((_DWORD)v5)
    {
      if (v5 <= 3)
        v15 = v5;
      else
        v15 = 4;
      __asm { BR              X11 }
    }
    if (!sub_1D4340924(v14))
      goto LABEL_30;
    goto LABEL_25;
  }
  if (!*(_BYTE *)(v1 + v5) || (sub_1D43408BC(), v9 = sub_1D4340924(v27), !(_DWORD)v9))
  {
LABEL_32:
    v28 = sub_1D4340888(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
    v36 = sub_1D4340858(v28, v29, v30, v31, v32, v33, v34, v35, v38, v39, v40);
    sub_1D4340870(v36, v37, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
    if (!v41)
      *(_BYTE *)(v0 + v5) = 0;
    goto LABEL_34;
  }
LABEL_26:
  if (v41)
    v16 = v5;
  else
    v16 = v5 + 1;
  sub_1D4340948(v9, v10, v16);
LABEL_34:
  sub_1D4340954();
}

uint64_t sub_1D433E348(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  int v21;
  unsigned int v22;
  int v23;
  int v24;
  uint64_t v25;
  unsigned int v26;

  v6 = sub_1D43408E4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 24);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8)
    v12 = *(_DWORD *)(v7 + 84);
  else
    v12 = *(_DWORD *)(v10 + 84);
  v13 = v12 - 1;
  if (!v12)
    v13 = 0;
  v14 = *(_QWORD *)(v10 + 64);
  if (!v12)
    ++v14;
  if (!a2)
    return 0;
  v15 = v6;
  v16 = *(_QWORD *)(v7 + 64);
  v17 = *(unsigned __int8 *)(v10 + 80);
  v18 = v16 + v17;
  if (a2 > v13)
  {
    v19 = v14 + (v18 & ~v17);
    v20 = 8 * v19;
    if (v19 > 3)
      goto LABEL_11;
    v22 = ((a2 - v13 + ~(-1 << v20)) >> v20) + 1;
    if (HIWORD(v22))
    {
      v21 = *(_DWORD *)(a1 + v19);
      if (v21)
        goto LABEL_18;
    }
    else
    {
      if (v22 <= 0xFF)
      {
        if (v22 < 2)
          goto LABEL_27;
LABEL_11:
        v21 = *(unsigned __int8 *)(a1 + v19);
        if (!*(_BYTE *)(a1 + v19))
          goto LABEL_27;
LABEL_18:
        v23 = (v21 - 1) << v20;
        if (v19 > 3)
          v23 = 0;
        if ((_DWORD)v19)
        {
          if (v19 <= 3)
            v24 = v19;
          else
            v24 = 4;
          __asm { BR              X12 }
        }
        return v13 + v23 + 1;
      }
      v21 = *(unsigned __int16 *)(a1 + v19);
      if (*(_WORD *)(a1 + v19))
        goto LABEL_18;
    }
  }
LABEL_27:
  if (v12 < 2)
    return 0;
  if (v8 >= v11)
  {
    v25 = a1;
    v9 = v15;
  }
  else
  {
    v25 = (v18 + a1) & ~v17;
    v8 = v11;
  }
  v26 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v25, v8, v9);
  if (v26 >= 2)
    return v26 - 1;
  else
    return 0;
}

void sub_1D433E4FC(uint64_t a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;
  unsigned int v15;
  char v16;
  unsigned int v17;
  unsigned int v18;
  int v19;

  v8 = 0u;
  v9 = *(_QWORD *)(sub_1D43408E4() - 8);
  v10 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v10 + 84) <= *(_DWORD *)(v9 + 84))
    v11 = *(_DWORD *)(v9 + 84);
  else
    v11 = *(_DWORD *)(v10 + 84);
  if (v11)
    v12 = v11 - 1;
  else
    v12 = 0;
  v13 = (*(_QWORD *)(v9 + 64) + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v14 = *(_QWORD *)(v10 + 64);
  if (v11)
    v15 = v13 + v14;
  else
    v15 = v13 + v14 + 1;
  v16 = 8 * v15;
  if (a3 > v12)
  {
    if (v15 <= 3)
    {
      v17 = ((a3 - v12 + ~(-1 << v16)) >> v16) + 1;
      if (HIWORD(v17))
      {
        v8 = 4u;
      }
      else if (v17 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v17 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  if (v12 < a2)
  {
    v18 = ~v12 + a2;
    if (v15 < 4)
    {
      if (v15)
      {
        v19 = v18 & ~(-1 << v16);
        sub_1D4340BC8();
        if (v15 == 3)
        {
          *(_WORD *)a1 = v19;
          *(_BYTE *)(a1 + 2) = BYTE2(v19);
        }
        else if (v15 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *(_BYTE *)a1 = v19;
        }
      }
    }
    else
    {
      sub_1D4340BC8();
      *(_DWORD *)a1 = v18;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X15 }
}

void sub_1D433E738()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  sub_1D42CB084();
}

void sub_1D433E740()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  sub_1D42CB084();
}

void sub_1D433E774()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  sub_1D42CB084();
}

void sub_1D433E77C()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  sub_1D42CB084();
}

void sub_1D433E78C()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  sub_1D42CB084();
}

uint64_t sub_1D433E798()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    result = sub_1D451B160();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1D433E870(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  unsigned int v13;
  int v14;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const void *v20;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v9;
  v11 = v6 + v9;
  if (*(_DWORD *)(v8 + 84))
    v12 = *(_QWORD *)(v8 + 64);
  else
    v12 = *(_QWORD *)(v8 + 64) + 1;
  v13 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  v14 = (*(_DWORD *)(v5 + 80) | v9) & 0x100000;
  if (v13 > 7 || v14 != 0 || ((v12 + (v11 & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
  }
  else
  {
    v18 = v7;
    v19 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v20 = (const void *)(((unint64_t)a2 + v11) & v19);
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v20, 1, v18))
    {
      memcpy((void *)(((unint64_t)a1 + v11) & v19), v20, v12);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v8 + 16))(((unint64_t)a1 + v11) & v19, v20, v18);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(((unint64_t)a1 + v11) & v19, 0, 1, v18);
    }
    v22 = (_QWORD *)(((unint64_t)v20 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
    v23 = v22[1];
    v24 = (_QWORD *)(((((unint64_t)a1 + v11) & v19) + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v24 = *v22;
    v24[1] = v23;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1D433EA14(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  v4 = *(_QWORD *)(v3 + 64) + a1;
  v5 = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  if (!_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v7, 1, v5))
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  return swift_release();
}

uint64_t sub_1D433EAF8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  int v12;
  size_t v13;
  size_t v14;
  size_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)((v6 + v9 + a1) & ~v9);
  v11 = (const void *)((v6 + v9 + a2) & ~v9);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v11, 1, v7))
  {
    v12 = *(_DWORD *)(v8 + 84);
    v13 = *(_QWORD *)(v8 + 64);
    if (v12)
      v14 = v13;
    else
      v14 = v13 + 1;
    memcpy(v10, v11, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, v7);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v10, 0, 1, v7);
    v12 = *(_DWORD *)(v8 + 84);
    v13 = *(_QWORD *)(v8 + 64);
  }
  if (v12)
    v15 = v13;
  else
    v15 = v13 + 1;
  v16 = (uint64_t)v10 + v15 + 7;
  v17 = (uint64_t *)(((unint64_t)v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  v19 = *v17;
  v18 = v17[1];
  v20 = (_QWORD *)(v16 & 0xFFFFFFFFFFFFFFF8);
  *v20 = v19;
  v20[1] = v18;
  swift_retain();
  return a1;
}

uint64_t sub_1D433EC3C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  int v12;
  int v13;
  size_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)((v6 + v9 + a1) & ~v9);
  v11 = (const void *)((v6 + v9 + a2) & ~v9);
  v12 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v10, 1, v7);
  v13 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v11, 1, v7);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, v7);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v10, 0, 1, v7);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(v10, v11, v7);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v14 = *(_QWORD *)(v8 + 64);
  else
    v14 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v10, v11, v14);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v15 = *(_QWORD *)(v8 + 64);
  else
    v15 = *(_QWORD *)(v8 + 64) + 1;
  v16 = (_QWORD *)(((unint64_t)v10 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1D433EDD8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  int v12;
  size_t v13;
  size_t v14;
  size_t v15;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)((v6 + v9 + a1) & ~v9);
  v11 = (const void *)((v6 + v9 + a2) & ~v9);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v11, 1, v7))
  {
    v12 = *(_DWORD *)(v8 + 84);
    v13 = *(_QWORD *)(v8 + 64);
    if (v12)
      v14 = v13;
    else
      v14 = v13 + 1;
    memcpy(v10, v11, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v10, v11, v7);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v10, 0, 1, v7);
    v12 = *(_DWORD *)(v8 + 84);
    v13 = *(_QWORD *)(v8 + 64);
  }
  if (v12)
    v15 = v13;
  else
    v15 = v13 + 1;
  *(_OWORD *)(((unint64_t)v10 + v15 + 7) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v11 + v15 + 7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D433EF18(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  int v12;
  int v13;
  size_t v14;
  uint64_t v15;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)((v6 + v9 + a1) & ~v9);
  v11 = (const void *)((v6 + v9 + a2) & ~v9);
  v12 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v10, 1, v7);
  v13 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v11, 1, v7);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v10, v11, v7);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v10, 0, 1, v7);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(v10, v11, v7);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v14 = *(_QWORD *)(v8 + 64);
  else
    v14 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v10, v11, v14);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v15 = *(_QWORD *)(v8 + 64);
  else
    v15 = *(_QWORD *)(v8 + 64) + 1;
  *(_OWORD *)(((unint64_t)v10 + v15 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v11 + v15 + 7) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1D433F0AC(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;
  unsigned int v23;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  if ((_DWORD)v9)
    v10 = v9 - 1;
  else
    v10 = 0;
  if (v10 <= v6)
    v11 = v6;
  else
    v11 = v10;
  if (v11 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  if ((_DWORD)v9)
    v12 = *(_QWORD *)(v8 + 64);
  else
    v12 = *(_QWORD *)(v8 + 64) + 1;
  if (!a2)
    return 0;
  v13 = v7;
  v14 = *(unsigned __int8 *)(v8 + 80);
  v15 = *(_QWORD *)(v5 + 64) + v14;
  v16 = v12 + 7;
  if (v11 < a2)
  {
    if (((((v16 + (v15 & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v17 = 2;
    else
      v17 = a2 - v11 + 1;
    if (v17 >= 0x10000)
      v18 = 4;
    else
      v18 = 2;
    if (v17 < 0x100)
      v18 = 1;
    if (v17 >= 2)
      v19 = v18;
    else
      v19 = 0;
    __asm { BR              X17 }
  }
  if ((_DWORD)v6 == v11)
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v6, AssociatedTypeWitness);
  v21 = (v15 + a1) & ~v14;
  if (v10 == v11)
  {
    if (v9 < 2)
      return 0;
    v23 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v21, v9, v13);
    if (v23 >= 2)
      return v23 - 1;
    else
      return 0;
  }
  else
  {
    v22 = *(_QWORD *)((v16 + v21) & 0xFFFFFFFFFFFFF8);
    if (v22 >= 0xFFFFFFFF)
      LODWORD(v22) = -1;
    return (v22 + 1);
  }
}

void sub_1D433F2A4(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  int v17;
  unsigned int v18;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = 0u;
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10)
    v11 = v10 - 1;
  else
    v11 = 0;
  if (v11 <= v7)
    v12 = v7;
  else
    v12 = v11;
  if (v12 <= 0x7FFFFFFF)
    v12 = 0x7FFFFFFF;
  v13 = *(unsigned __int8 *)(v9 + 80);
  v15 = *(_QWORD *)(v9 + 64);
  if (!v10)
    ++v15;
  v14 = *(_QWORD *)(v6 + 64) + v13;
  if (v12 < a3)
  {
    if ((((_DWORD)v15 + 7 + (v14 & ~(_DWORD)v13)) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v16 = a3 - v12 + 1;
    else
      v16 = 2;
    if (v16 >= 0x10000)
      v17 = 4;
    else
      v17 = 2;
    if (v16 < 0x100)
      v17 = 1;
    if (v16 >= 2)
      v8 = v17;
    else
      v8 = 0;
  }
  if (a2 > v12)
  {
    if ((((_DWORD)v15 + 7 + (v14 & ~(_DWORD)v13)) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      v18 = ~v12 + a2;
      bzero(a1, ((v15 + 7 + (v14 & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 16);
      *a1 = v18;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X15 }
}

void sub_1D433F418(uint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  *(_BYTE *)(v7 + v11) = 0;
  if ((_DWORD)v8)
  {
    if ((_DWORD)v10 == a3)
    {
      v12 = v7;
      v13 = v8;
      a1 = v10;
      a2 = v9;
LABEL_6:
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v12, v13, a1, a2);
      return;
    }
    v12 = (v5 + v7) & v6;
    if (v3 == a3)
    {
      v13 = (v8 + 1);
      goto LABEL_6;
    }
    v14 = (_QWORD *)((v4 + v12) & 0xFFFFFFFFFFFFFFF8);
    if ((v8 & 0x80000000) != 0)
    {
      v15 = v8 ^ 0x80000000;
      v14[1] = 0;
    }
    else
    {
      v15 = (v8 - 1);
    }
    *v14 = v15;
  }
}

uint64_t sub_1D433F4D4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D433F54C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = v10[1];
    v12 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v10;
    v12[1] = v11;
  }
  swift_retain();
  return v4;
}

uint64_t sub_1D433F5FC(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_release();
}

uint64_t sub_1D433F63C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain();
  return a1;
}

uint64_t sub_1D433F69C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1D433F708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D433F764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1D433F7C8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v6, v4);
    }
  }
  else
  {
    if (((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1D433F844 + 4 * byte_1D452C41B[v11]))();
  }
}

void sub_1D433F8C4(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1D433F9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0x7FFFFFFF)
    {
      v8 = (_QWORD *)((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      if ((a2 & 0x80000000) != 0)
      {
        v9 = a2 ^ 0x80000000;
        v8[1] = 0;
      }
      else
      {
        v9 = (a2 - 1);
      }
      *v8 = v9;
    }
    else
    {
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v5, a2, a3, a4);
    }
  }
  return result;
}

uint64_t type metadata accessor for InclusiveReductionsSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InclusiveReductionsSequence);
}

uint64_t sub_1D433FA4C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    result = sub_1D451B160();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1D433FB18(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const void *v21;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v9;
  v11 = v6 + v9;
  if (*(_DWORD *)(v8 + 84))
    v12 = *(_QWORD *)(v8 + 64);
  else
    v12 = *(_QWORD *)(v8 + 64) + 1;
  v13 = *(_DWORD *)(v5 + 80) | v9;
  v14 = (*(_BYTE *)(v5 + 80) | v9);
  v15 = v13 & 0x100000;
  if (v14 > 7 || v15 != 0 || (v11 & ~v10) + v12 > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  else
  {
    v19 = v7;
    v20 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v21 = (const void *)(((unint64_t)a2 + v11) & v20);
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v21, 1, v19))
    {
      memcpy((void *)(((unint64_t)a1 + v11) & v20), v21, v12);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v8 + 16))(((unint64_t)a1 + v11) & v20, v21, v19);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(((unint64_t)a1 + v11) & v20, 0, 1, v19);
    }
  }
  return a1;
}

uint64_t sub_1D433FC88(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  v4 = *(_QWORD *)(v3 + 64) + a1;
  v5 = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  result = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v7, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  return result;
}

uint64_t sub_1D433FD50(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  size_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)((v6 + v9 + a1) & ~v9);
  v11 = (const void *)((v6 + v9 + a2) & ~v9);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v11, 1, v7))
  {
    if (*(_DWORD *)(v8 + 84))
      v12 = *(_QWORD *)(v8 + 64);
    else
      v12 = *(_QWORD *)(v8 + 64) + 1;
    memcpy(v10, v11, v12);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, v7);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v10, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1D433FE60(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  int v12;
  size_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)((v6 + v9 + a1) & ~v9);
  v11 = (const void *)((v6 + v9 + a2) & ~v9);
  LODWORD(v6) = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v10, 1, v7);
  v12 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v11, 1, v7);
  if ((_DWORD)v6)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, v7);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v10, 0, 1, v7);
      return a1;
    }
  }
  else
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(v10, v11, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v13 = *(_QWORD *)(v8 + 64);
  else
    v13 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v10, v11, v13);
  return a1;
}

uint64_t sub_1D433FFB4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  size_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)((v6 + v9 + a1) & ~v9);
  v11 = (const void *)((v6 + v9 + a2) & ~v9);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v11, 1, v7))
  {
    if (*(_DWORD *)(v8 + 84))
      v12 = *(_QWORD *)(v8 + 64);
    else
      v12 = *(_QWORD *)(v8 + 64) + 1;
    memcpy(v10, v11, v12);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v10, v11, v7);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v10, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1D43400C4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  int v12;
  size_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)((v6 + v9 + a1) & ~v9);
  v11 = (const void *)((v6 + v9 + a2) & ~v9);
  LODWORD(v6) = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v10, 1, v7);
  v12 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v11, 1, v7);
  if ((_DWORD)v6)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v10, v11, v7);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v10, 0, 1, v7);
      return a1;
    }
  }
  else
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(v10, v11, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v13 = *(_QWORD *)(v8 + 64);
  else
    v13 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v10, v11, v13);
  return a1;
}

uint64_t sub_1D4340218(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  unsigned int v21;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  if ((_DWORD)v9)
    v10 = v9 - 1;
  else
    v10 = 0;
  if (v10 <= v6)
    v11 = v6;
  else
    v11 = v10;
  if ((_DWORD)v9)
    v12 = *(_QWORD *)(v8 + 64);
  else
    v12 = *(_QWORD *)(v8 + 64) + 1;
  if (!a2)
    return 0;
  v13 = *(unsigned __int8 *)(v8 + 80);
  v14 = *(_QWORD *)(v5 + 64) + v13;
  if (a2 <= v11)
    goto LABEL_29;
  v15 = v12 + (v14 & ~v13);
  v16 = 8 * v15;
  if (v15 <= 3)
  {
    v18 = ((a2 - v11 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v18))
    {
      v17 = *(_DWORD *)(a1 + v15);
      if (!v17)
        goto LABEL_29;
      goto LABEL_20;
    }
    if (v18 > 0xFF)
    {
      v17 = *(unsigned __int16 *)(a1 + v15);
      if (!*(_WORD *)(a1 + v15))
        goto LABEL_29;
      goto LABEL_20;
    }
    if (v18 < 2)
    {
LABEL_29:
      if (v11)
      {
        if (v6 >= v10)
          return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v6, AssociatedTypeWitness);
        v21 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((v14 + a1) & ~v13, v9, v7);
        if (v21 >= 2)
          return v21 - 1;
        else
          return 0;
      }
      return 0;
    }
  }
  v17 = *(unsigned __int8 *)(a1 + v15);
  if (!*(_BYTE *)(a1 + v15))
    goto LABEL_29;
LABEL_20:
  v19 = (v17 - 1) << v16;
  if (v15 > 3)
    v19 = 0;
  if ((_DWORD)v15)
  {
    if (v15 <= 3)
      v20 = v15;
    else
      v20 = 4;
    __asm { BR              X12 }
  }
  return v11 + v19 + 1;
}

void sub_1D4340410(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  char v17;
  unsigned int v18;
  unsigned int v19;
  int v20;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = 0u;
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = v10 - 1;
  if (!v10)
    v11 = 0;
  if (v11 <= v7)
    v12 = v7;
  else
    v12 = v11;
  v13 = (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = *(_QWORD *)(v9 + 64);
  if (v10)
    v15 = v14;
  else
    v15 = v14 + 1;
  v16 = v13 + v15;
  v17 = 8 * (v13 + v15);
  if (a3 > v12)
  {
    if (v16 <= 3)
    {
      v18 = ((a3 - v12 + ~(-1 << v17)) >> v17) + 1;
      if (HIWORD(v18))
      {
        v8 = 4u;
      }
      else if (v18 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v18 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  if (v12 < a2)
  {
    v19 = ~v12 + a2;
    if (v16 < 4)
    {
      if ((_DWORD)v16)
      {
        v20 = v19 & ~(-1 << v17);
        bzero(a1, v16);
        if ((_DWORD)v16 == 3)
        {
          *(_WORD *)a1 = v20;
          a1[2] = BYTE2(v20);
        }
        else if ((_DWORD)v16 == 2)
        {
          *(_WORD *)a1 = v20;
        }
        else
        {
          *a1 = v20;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v19;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

void sub_1D43406A0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
}

void sub_1D43406A8()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
}

void sub_1D43406CC()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1D43406DC()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1D43406E4()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_1D43406F0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1D43397D0(a1, a2, v2[5], v2[6], v2[2], v2[3]);
}

uint64_t sub_1D4340718()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t sub_1D4340724()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = v3;
  v7 = v3;
  v8 = v0;
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((v5 + v1) & v0, v4, v6);
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((v5 + v2) & v8, v4, v7);
}

uint64_t sub_1D4340798(uint64_t a1)
{
  uint64_t v1;

  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, 1, v1);
}

uint64_t sub_1D4340834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, a2, a3);
}

uint64_t sub_1D4340858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;

  return (v12 + v11) & a11;
}

uint64_t sub_1D4340870@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_1D4340878()
{
  return sub_1D451B55C();
}

uint64_t sub_1D4340888@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, v2, v3);
}

uint64_t sub_1D4340898()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1D43408D0()
{
  return sub_1D451B160();
}

uint64_t sub_1D43408DC(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_1D43408E4()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1D43408EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v0, v2, v3);
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v1, v2, v3);
}

uint64_t sub_1D4340924@<X0>(unsigned int a1@<W8>)
{
  int v1;

  return (v1 | a1) + 1;
}

uint64_t sub_1D4340930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_1D4340938@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, v2, v3);
}

void *sub_1D4340948(uint64_t a1, uint64_t a2, size_t a3)
{
  void *v3;
  const void *v4;

  return memcpy(v3, v4, a3);
}

uint64_t sub_1D4340970@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_1D4340978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_1D43409A4()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1D43409B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a1, a2, a3, a4);
}

void sub_1D43409C0(void *a1)
{
  free(a1);
}

uint64_t sub_1D43409C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_1D43409D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a1, 1, 1, a4);
}

uint64_t sub_1D43409DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 112) + 8))(v1, v0);
}

uint64_t sub_1D43409F0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1D4340A04()
{
  return sub_1D451ACE0();
}

uint64_t sub_1D4340A18()
{
  return sub_1D433B6B8();
}

void sub_1D4340A24(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 192) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1D4340A40()
{
  return sub_1D451ACE0();
}

uint64_t sub_1D4340A4C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 176) + 8))(v0, *(_QWORD *)(v1 - 88));
}

uint64_t sub_1D4340A60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return sub_1D433A0E4(a1, v3, v4, v2, a2);
}

uint64_t sub_1D4340A98()
{
  return 0;
}

uint64_t sub_1D4340AA4()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1D4340AB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_1D4340ADC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4340AEC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 208) + 8))(*(_QWORD *)(v0 - 96), *(_QWORD *)(v0 - 104));
}

uint64_t sub_1D4340AFC(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_1D4340B34()
{
  return sub_1D451B160();
}

uint64_t sub_1D4340B44()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1D4340B50()
{
  return 0;
}

uint64_t sub_1D4340B5C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_1D4340B64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (v2 + v0) & v1;
}

void sub_1D4340B78()
{
  __break(1u);
}

uint64_t sub_1D4340BB0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

uint64_t sub_1D4340BBC()
{
  return swift_getAssociatedConformanceWitness();
}

void sub_1D4340BC8()
{
  void *v0;
  size_t v1;

  bzero(v0, v1);
}

uint64_t sub_1D4340BD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_1D4340BDC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4340C04()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4340C18()
{
  return sub_1D451AC98();
}

uint64_t sub_1D4340C24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (v2 + v0) & v1;
}

uint64_t sub_1D4340C38()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1D4340C40()
{
  return sub_1D451ACD4();
}

uint64_t sub_1D4340C4C(unint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  unsigned int v13;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  _QWORD *v20;

  v6 = v5;
  v8 = a1;
  v9 = HIDWORD(a1);
  if (HIDWORD(a1) < a1)
    v10 = -(uint64_t)(a1 - HIDWORD(a1));
  else
    v10 = (HIDWORD(a1) - a1);
  if (v10)
  {
    v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v11 = &v20;
    result = sub_1D451B49C();
    if ((v10 & 0x8000000000000000) == 0)
    {
      v13 = v8;
      while (1)
      {
        v18 = v13;
        sub_1D4341640(&v18, a2, a3, a4, a5, &v17, &v19);
        if (v6)
        {
          swift_release();

          swift_release();
          return (uint64_t)v11;
        }
        v6 = 0;
        sub_1D451B484();
        sub_1D451B4A8();
        sub_1D451B4B4();
        v11 = &v20;
        result = sub_1D451B490();
        if (v9 < v8)
          break;
        if (v13 >= v9)
          goto LABEL_17;
        ++v13;
        if (!--v10)
        {
          v11 = v20;

          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_17:
      __break(1u);
    }
    __break(1u);
  }
  else
  {

    v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_13:
    swift_release();
    return (uint64_t)v11;
  }
  return result;
}

void sub_1D4340DB8()
{
  sub_1D4341190();
}

double sub_1D4340DF0()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___SNCorrelateAudioRequest_impl + 8);
}

void sub_1D4340E48(double a1)
{
  sub_1D4340E94(a1);
}

void sub_1D4340E94(double a1)
{
  uint64_t v1;
  double v2;

  v2 = *(double *)(v1 + OBJC_IVAR___SNCorrelateAudioRequest_impl + 8);
  if (v2 >= 0.0 && v2 < 1.0)
  {
    *(double *)(v1 + OBJC_IVAR___SNCorrelateAudioRequest_impl + 8) = a1;
  }
  else
  {
    sub_1D4342288();
    sub_1D42B6D0C();
    sub_1D4312028();
  }
}

uint64_t sub_1D4340EF8()
{
  uint64_t v0;
  void *v1;
  double v2;
  uint64_t v3;

  if (qword_1EFE403C0 != -1)
    swift_once();
  if ((byte_1EFE403B0 & 1) != 0)
  {
    v1 = *(void **)(v0 + OBJC_IVAR___SNCorrelateAudioRequest_impl);
    v2 = *(double *)(v0 + OBJC_IVAR___SNCorrelateAudioRequest_impl + 8);
    type metadata accessor for SNAudioCorrelator();
    v3 = swift_allocObject();
    sub_1D434122C(v1, v2);
  }
  else
  {
    v3 = type metadata accessor for SNError();
    sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD00000000000001ALL, 0x80000001D4551C80);
    sub_1D4312028();
  }
  return v3;
}

id sub_1D4340FF4(uint64_t a1, double a2)
{
  char *v2;
  objc_class *v5;
  double *v6;
  objc_super v8;

  v5 = (objc_class *)sub_1D42B7104();
  v6 = (double *)&v2[OBJC_IVAR___SNCorrelateAudioRequest_impl];
  *(_QWORD *)v6 = a1;
  v6[1] = a2;
  v8.receiver = v2;
  v8.super_class = v5;
  return objc_msgSendSuper2(&v8, sel_init);
}

id sub_1D4341084(uint64_t a1)
{
  char *v1;
  objc_class *v3;
  char *v4;
  objc_super v6;

  v3 = (objc_class *)sub_1D42B7104();
  v4 = &v1[OBJC_IVAR___SNCorrelateAudioRequest_impl];
  *(_QWORD *)v4 = a1;
  *((_QWORD *)v4 + 1) = 0x3FE0000000000000;
  v6.receiver = v1;
  v6.super_class = v3;
  return objc_msgSendSuper2(&v6, sel_init);
}

id SNCorrelateAudioRequest.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SNCorrelateAudioRequest.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SNCorrelateAudioRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1D42B7104();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D4341190()
{
  sub_1D451B958();
  sub_1D42D1094();
  sub_1D451B994();
  sub_1D42BE978();
}

uint64_t sub_1D43411C0()
{
  return sub_1D4340EF8();
}

uint64_t type metadata accessor for SNCorrelateAudioRequest()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNCorrelateAudioRequest()
{
  return swift_lookUpClassMethod();
}

void sub_1D4341200()
{
  sub_1D451B958();
  sub_1D42D1094();
  sub_1D451B994();
  sub_1D42BE978();
}

uint64_t sub_1D434122C(void *a1, double a2)
{
  uint64_t v2;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = a1;
  v4 = a1;
  v5 = objc_msgSend(v4, sel_processingFormat);
  objc_msgSend(v5, sel_sampleRate);
  v7 = v6;

  *(_QWORD *)(v2 + 32) = v7;
  *(_QWORD *)(v2 + 40) = 1;
  *(double *)(v2 + 48) = a2;
  return v2;
}

char *sub_1D43412A8(void *a1, int a2, double a3, float a4)
{
  uint64_t v4;
  char *v9;
  char *result;
  float v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  v9 = (char *)objc_msgSend(a1, sel_length);
  result = (char *)sub_1D434242C();
  v11 = (float)(uint64_t)result * a4;
  if ((~LODWORD(v11) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v11 <= -9.2234e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v11 >= 9.2234e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  result = &v9[-(uint64_t)v11];
  if (__OFSUB__(v9, (uint64_t)v11))
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v12 = sub_1D4341DE4(a3);
  v14 = (void *)sub_1D4341F84(v12, v13);
  if (v4)
  {
    swift_bridgeObjectRelease();
    return (char *)v14;
  }
  swift_bridgeObjectRelease();
  sub_1D4341410(v14, a1, a2, a4);
  result = (char *)sub_1D434242C();
  if ((~*(_QWORD *)&a3 & 0x7FF0000000000000) == 0)
    goto LABEL_16;
  if (a3 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (a3 < 9.22337204e18)
  {
    sub_1D44F3DE8((uint64_t)v14);
    sub_1D44F44A0((uint64_t)v14);
    return (char *)v14;
  }
LABEL_18:
  __break(1u);
  return result;
}

void sub_1D4341410(void *a1, void *a2, int a3, float a4)
{
  void *v8;
  id v9;

  v8 = (void *)sub_1D43423F0();
  v9 = sub_1D44F590C(a1, v8);

  sub_1D4341B94(v9, a2, a3, a4);
}

uint64_t sub_1D434149C(void *a1, unint64_t a2, void (*a3)(void))
{
  uint64_t v3;
  uint64_t v4;
  int v6;
  unsigned int v7;
  uint64_t v8;
  unint64_t v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && !HIDWORD(a2))
  {
    v6 = *(_DWORD *)(v3 + 44);
    v7 = v6 + a2;
    if (__CFADD__(v6, (_DWORD)a2))
    {
      __break(1u);
    }
    else
    {
      v8 = v4;
      *(_DWORD *)(v3 + 44) = v7;
      if ((uint64_t)objc_msgSend(*(id *)(v3 + 24), sel_length) > v7)
        return MEMORY[0x1E0DEE9D8];
      v11 = (unint64_t)*(unsigned int *)(v3 + 40) << 32;
      v12 = a1;
      swift_retain();
      v13 = sub_1D4340C4C(v11, v12, a2, v3, a3);
      if (v8)
        return v3;
      v14 = v13;
      if (!(v13 >> 62))
      {
        swift_bridgeObjectRetain();
        sub_1D451B868();
        v3 = v14;
LABEL_9:
        swift_bridgeObjectRelease();
        return v3;
      }
    }
    swift_bridgeObjectRetain();
    sub_1D42B28FC(&qword_1EFE4C690);
    v3 = sub_1D451B568();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_1D42DCED4();
  result = sub_1D43074E8();
  __break(1u);
  return result;
}

void sub_1D4341640(unsigned int *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(void)@<X4>, uint64_t *a6@<X6>, _QWORD *a7@<X8>)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v14;
  char *v15;
  double *v16;
  float v17;
  uint64_t *v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  BOOL v27;
  int64_t v28;
  int32_t v29;
  CMTimeValue value;
  uint64_t v31;
  CMTimeEpoch epoch;
  id v33;
  int32_t v34;
  uint64_t v35;
  uint64_t v36;
  float v37;
  id v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  double *v44;
  uint64_t v45;
  uint64_t v46;
  CMTimeRange v48;
  CMTime duration;
  CMTime start;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  CMTimeRange v56;
  uint64_t v57;

  v9 = v7;
  v57 = *MEMORY[0x1E0C80C00];
  v14 = *a1;
  v15 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SNAudioCorrelationResult()), sel_init);
  v16 = (double *)&v15[OBJC_IVAR___SNAudioCorrelationResult_impl];
  *(_QWORD *)&v15[OBJC_IVAR___SNAudioCorrelationResult_impl + 80] = v14;
  sub_1D44C88E8((uint64_t)a2, 0, 4, v14);
  if (v7)
  {

    v18 = a6;
LABEL_10:
    *v18 = v9;
    return;
  }
  v44 = v16;
  v45 = v14;
  v16[6] = v17;
  v19 = objc_opt_self();
  v48.start.value = 0;
  v46 = (uint64_t)a2;
  v20 = sub_1D4500E1C(v19, a2, (uint64_t)&v48);
  if (!v20)
  {
    v38 = (id)v48.start.value;
    v9 = sub_1D4519AA4();

    swift_willThrow();
    v18 = a6;
    goto LABEL_10;
  }
  v21 = v20;
  v22 = (id)v48.start.value;
  v23 = sub_1D451AC38();

  v24 = v23 + a3;
  if (__OFADD__(v23, a3))
  {
    __break(1u);
    goto LABEL_18;
  }
  v25 = *(void **)(a4 + 24);
  v26 = objc_msgSend(v25, sel_length);
  v27 = __OFSUB__(v24, v26);
  v28 = v24 - (_QWORD)v26;
  if (v27)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v43 = v23;
  v29 = sub_1D44F2078(v46);
  if (v29 < 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  CMTimeMake(&v48.start, v28, v29);
  value = v48.start.value;
  v31 = *(_QWORD *)&v48.start.timescale;
  epoch = v48.start.epoch;
  v33 = objc_msgSend(v25, sel_length);
  v34 = sub_1D44F2078(v46);
  if (v34 < 0)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  CMTimeMake(&v48.start, (int64_t)v33, v34);
  duration = v48.start;
  start.value = value;
  *(_QWORD *)&start.timescale = v31;
  start.epoch = epoch;
  CMTimeRangeMake(&v48, &start, &duration);
  v56 = v48;
  a5();
  v35 = sub_1D451AEE4();
  ((void (*)(uint64_t))a5)(v35);
  sub_1D451AEF0();
  v36 = v55;
  *(_QWORD *)v44 = v51;
  *((_QWORD *)v44 + 1) = v52;
  *((_OWORD *)v44 + 1) = v53;
  *((_QWORD *)v44 + 4) = v54;
  *((_QWORD *)v44 + 5) = v36;
  sub_1D44C88E8(v46, 1, 4, v45);
  if ((~LODWORD(v37) & 0x7F800000) == 0)
    goto LABEL_21;
  if (v37 <= -9.2234e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v37 >= 9.2234e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (__OFADD__(v43, (uint64_t)v37))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
  }
  if ((sub_1D44F2078(v46) & 0x80000000) != 0)
    goto LABEL_25;
  v39 = sub_1D451B0A0();
  *((_QWORD *)v44 + 7) = ((uint64_t (*)(uint64_t))a5)(v39);
  *((_DWORD *)v44 + 16) = v40;
  *((_DWORD *)v44 + 17) = v41;
  *((_QWORD *)v44 + 9) = v42;
  *a7 = v15;
}

id sub_1D4341A1C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  if (v1)
    return v1;
  sub_1D4342210();
  sub_1D42B6D0C();
  return (id)sub_1D4312028();
}

void sub_1D4341A68(int a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v3 = *v1;
  *((_DWORD *)v1 + 10) = a1;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v3;
  swift_retain();
  v5 = sub_1D42CEEA4();
  swift_release();
  if (!v2)
  {
    v6 = (void *)v1[2];
    v1[2] = v5;

  }
}

char *sub_1D4341AF0@<X0>(uint64_t a1@<X0>, char **a2@<X8>)
{
  uint64_t v2;
  float v4;
  char *result;

  v4 = *(double *)(a1 + 48);
  result = sub_1D43412A8(*(void **)(a1 + 24), *(_DWORD *)(a1 + 40), *(double *)(a1 + 32), v4);
  if (!v2)
    *a2 = result;
  return result;
}

id sub_1D4341B34()
{
  uint64_t v0;
  id result;
  void *v2;
  void *v3;
  id v4;

  result = sub_1D4341A1C();
  if (!v0)
  {
    v2 = result;
    v3 = (void *)sub_1D43423F0();
    v4 = sub_1D44F590C(v2, v3);

    return v4;
  }
  return result;
}

void sub_1D4341B94(void *a1, id a2, int a3, float a4)
{
  id v8;
  unint64_t v9;
  id v10;
  unsigned __int8 v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  int v16;
  int v17;
  _BYTE *v18;
  id v19;
  void *v20;
  id v21[2];

  v21[1] = *(id *)MEMORY[0x1E0C80C00];
  v8 = objc_msgSend(a2, sel_processingFormat);
  v9 = (unint64_t)objc_msgSend(a2, sel_length);
  if ((v9 & 0x8000000000000000) == 0 && !HIDWORD(v9))
  {
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C89AC0]), sel_initWithPCMFormat_frameCapacity_, v8, v9);

    if (!v10)
    {
      sub_1D42B7F2C();
      sub_1D42B6D0C();
      *v18 = 0;
      sub_1D4312028();
      return;
    }
    objc_msgSend(a2, sel_setFramePosition_, 0);
    v21[0] = 0;
    v11 = objc_msgSend(a2, sel_readIntoBuffer_error_, v10, v21);
    v12 = v21[0];
    if ((v11 & 1) != 0)
    {
      v13 = objc_opt_self();
      v21[0] = 0;
      v14 = v12;
      LODWORD(v13) = sub_1D44FF8F4(a4, v13, a1, v10, (uint64_t)v21);
      v15 = v21[0];
      if ((_DWORD)v13)
      {
        if (a3)
        {
          v16 = 0;
          do
          {
            v17 = v16 + 1;
            sub_1D44F01E8((uint64_t)a1);
            v16 = v17;
          }
          while (a3 != v17);
        }
        goto LABEL_14;
      }
      v20 = v15;
      sub_1D4519AA4();

    }
    else
    {
      v19 = v21[0];
      sub_1D4519AA4();

    }
    swift_willThrow();
LABEL_14:

    return;
  }
  sub_1D42DCED4();
  sub_1D43074E8();
  __break(1u);
}

uint64_t sub_1D4341DE4(double a1)
{
  uint64_t result;

  sub_1D451B400();
  result = sub_1D4311FA8();
  if ((~*(_QWORD *)&a1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (a1 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a1 < 9.22337204e18)
  {
    sub_1D434241C();
    sub_1D4342414();
    swift_bridgeObjectRelease();
    sub_1D4311FA8();
    sub_1D434241C();
    sub_1D4342414();
    swift_bridgeObjectRelease();
    sub_1D4311FA8();
    sub_1D451B7C0();
    sub_1D4342414();
    swift_bridgeObjectRelease();
    sub_1D451A794();
    sub_1D434241C();
    sub_1D4342414();
    swift_bridgeObjectRelease();
    sub_1D4311FA8();
    return 0;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1D4341F84(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  _BYTE *v9;

  sub_1D42B28FC((uint64_t *)&unk_1EFE498B0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D45261D0;
  *(_QWORD *)(inited + 32) = 1954047316;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 56) = a2;
  swift_bridgeObjectRetain();
  sub_1D451A5E4();
  v5 = objc_allocWithZone((Class)type metadata accessor for SNDSPGraphInfo());
  v6 = sub_1D43A026C();
  v7 = type metadata accessor for SNDSPGraphLoader();
  v8 = sub_1D439FDA0((uint64_t)v6);
  if (v8)
  {
    v7 = (uint64_t)v8;
  }
  else
  {
    sub_1D42B7F2C();
    sub_1D42B6D0C();
    *v9 = 0;
    sub_1D4312028();
  }

  return v7;
}

uint64_t sub_1D43420A0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D43420C4()
{
  sub_1D43420A0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SNAudioCorrelator()
{
  return objc_opt_self();
}

_QWORD *sub_1D4342104(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  return a1;
}

uint64_t sub_1D4342130(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  return a1;
}

uint64_t sub_1D4342178(uint64_t a1, _QWORD *a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  return a1;
}

void type metadata accessor for CorrelateAudioRequest()
{
  sub_1D42CB35C();
}

uint64_t sub_1D43421C0(void *a1, unint64_t a2, void (*a3)(void))
{
  return sub_1D434149C(a1, a2, a3);
}

id sub_1D43421D4()
{
  return sub_1D4341B34();
}

void sub_1D43421E8(int a1)
{
  sub_1D4341A68(a1);
}

id sub_1D43421FC()
{
  return sub_1D4341A1C();
}

unint64_t sub_1D4342210()
{
  unint64_t result;

  result = qword_1EFE4C688;
  if (!qword_1EFE4C688)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452CCCC, &unk_1E97A2348);
    atomic_store(result, (unint64_t *)&qword_1EFE4C688);
  }
  return result;
}

uint64_t sub_1D434224C()
{
  swift_release();
  return swift_deallocObject();
}

char *sub_1D4342270@<X0>(char **a1@<X8>)
{
  uint64_t v1;

  return sub_1D4341AF0(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1D4342288()
{
  unint64_t result;

  result = qword_1EFE4C698;
  if (!qword_1EFE4C698)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452CC8C, &unk_1E97A7BA8);
    atomic_store(result, (unint64_t *)&qword_1EFE4C698);
  }
  return result;
}

void type metadata accessor for SNCorrelateAudioRequest.DomainError()
{
  sub_1D42CB35C();
}

uint64_t sub_1D43422D4(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D4342314 + 4 * byte_1D452CAB0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D4342334 + 4 * byte_1D452CAB5[v4]))();
}

_BYTE *sub_1D4342314(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D4342334(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D434233C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4342344(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D434234C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4342354(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for SNAudioCorrelator.DomainError()
{
  sub_1D42CB35C();
}

unint64_t sub_1D4342370()
{
  unint64_t result;

  result = qword_1EFE4C6A0;
  if (!qword_1EFE4C6A0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452CBFC, &unk_1E97A2348);
    atomic_store(result, (unint64_t *)&qword_1EFE4C6A0);
  }
  return result;
}

unint64_t sub_1D43423B0()
{
  unint64_t result;

  result = qword_1EFE4C6A8;
  if (!qword_1EFE4C6A8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452CC64, &unk_1E97A7BA8);
    atomic_store(result, (unint64_t *)&qword_1EFE4C6A8);
  }
  return result;
}

uint64_t sub_1D43423F0()
{
  return sub_1D451A6C8();
}

uint64_t sub_1D4342414()
{
  return sub_1D451A794();
}

uint64_t sub_1D434241C()
{
  return sub_1D451B7C0();
}

id sub_1D434242C()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 2376));
}

uint64_t sub_1D4342438()
{
  uint64_t v0;
  void *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC13SoundAnalysis42SNLogMelBasedFeatureExtractorConfiguration_model);
  type metadata accessor for SNUtils();
  v2 = objc_msgSend(v1, sel_modelDescription);
  v3 = sub_1D44BC35C(v2);

  v4 = sub_1D44BE0AC(v3, 1u);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1D43424B4()
{
  uint64_t v0;

  return *(unsigned int *)(v0
                         + OBJC_IVAR____TtC13SoundAnalysis42SNLogMelBasedFeatureExtractorConfiguration_stepSizeFrames);
}

void sub_1D43424C4(void *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;

  v2 = objc_msgSend(a1, sel_modelDescription);
  v3 = objc_msgSend(v2, sel_inputDescriptionsByName);

  sub_1D42EA3E0(v4, (unint64_t *)&qword_1EFE40360);
  v5 = sub_1D451A5CC();

  if (*(_QWORD *)(v5 + 16) != 1)
  {
    sub_1D42B7204();
    goto LABEL_6;
  }
  sub_1D4396690(v5);
  v7 = v6;
  v9 = v8;
  sub_1D42B7204();
  if (!v7)
  {
LABEL_6:
    sub_1D42DCEE8();
    sub_1D4342D78(0x80000001D4551120, 0xD000000000000040, (uint64_t)"SNLogMelBasedFeatureExtractor models must have one input feature");
    swift_willThrow();
    return;
  }
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v9, sel_multiArrayConstraint);
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v10, sel_shape);

    sub_1D42EA3E0(v13, (unint64_t *)&qword_1EFE404B0);
    v14 = sub_1D451A92C();

  }
  else
  {
    v14 = 0;
  }
  type metadata accessor for SNUtils();
  sub_1D44BD6F0();
  if (!v14)
  {
    sub_1D42B7204();
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  v15 = sub_1D42FE5D4();
  swift_bridgeObjectRelease_n();
  sub_1D42B7204();
  if ((v15 & 1) == 0)
  {
LABEL_18:
    sub_1D451B400();
    sub_1D42F1E08();
    v29 = objc_msgSend(v9, sel_multiArrayConstraint, 0);
    v30 = v29;
    if (v29)
    {
      v31 = objc_msgSend(v29, sel_shape);

      sub_1D42EA3E0(v32, (unint64_t *)&qword_1EFE404B0);
      sub_1D4342DD0();

    }
    sub_1D42DCEE8();
    sub_1D42B28FC(&qword_1EFE4C6C0);
    sub_1D4342DC4();
    sub_1D4342D94();
    sub_1D42CB5C8();
    sub_1D451A794();
    v33 = sub_1D44BD6F0();
    v34 = sub_1D42EA3E0(v33, (unint64_t *)&qword_1EFE404B0);
    MEMORY[0x1D825C280](v33, v34);
    sub_1D4342D94();
    sub_1D42CB5C8();
    sub_1D42CB8F4();
    v35 = sub_1D4342D9C();
    sub_1D43EC59C(v35, v36, v37, v38, v39, 0xE000000000000000);
    sub_1D42CB5C8();
    goto LABEL_23;
  }
  v16 = objc_msgSend(a1, sel_modelDescription);
  v17 = objc_msgSend(v16, sel_outputDescriptionsByName);

  v18 = sub_1D451A5CC();
  if (*(_QWORD *)(v18 + 16) != 1)
  {
    sub_1D42B7204();
    goto LABEL_22;
  }
  sub_1D4396690(v18);
  v20 = v19;
  v22 = v21;
  sub_1D42B7204();
  if (!v20)
  {
LABEL_22:
    sub_1D42DCEE8();
    sub_1D4342D78(0x80000001D4551120, 0xD000000000000041, (uint64_t)"SNLogMelBasedFeatureExtractor models must have one output feature");
LABEL_23:
    swift_willThrow();

    return;
  }
  sub_1D42CB8F4();
  v23 = sub_1D4342DB8();
  if (!v23)
    goto LABEL_24;
  v24 = v23;
  v25 = objc_msgSend(v23, sel_shape);

  sub_1D42EA3E0(v26, (unint64_t *)&qword_1EFE404B0);
  v27 = sub_1D451A92C();

  if (v27 >> 62)
  {
    swift_bridgeObjectRetain();
    v28 = sub_1D451B5A4();
    sub_1D42B7204();
  }
  else
  {
    v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  sub_1D42B7204();
  if (v28 == 1)
  {

  }
  else
  {
LABEL_24:
    sub_1D451B400();
    sub_1D42F1E08();
    v40 = sub_1D4342DB8();
    v41 = v40;
    if (v40)
    {
      v42 = objc_msgSend(v40, sel_shape, 0);

      sub_1D42EA3E0(v43, (unint64_t *)&qword_1EFE404B0);
      sub_1D4342DD0();

    }
    sub_1D42DCEE8();
    sub_1D42B28FC(&qword_1EFE4C6C0);
    sub_1D4342DC4();
    sub_1D4342D94();
    sub_1D42CB8F4();
    sub_1D42F1E08();
    v44 = sub_1D4342D9C();
    sub_1D43EC59C(v44, v45, v46, v47, v48, 0xE000000000000000);
    sub_1D42CB8F4();
    swift_willThrow();

  }
}

id sub_1D4342A54(void *a1, int a2)
{
  void *v2;
  void *v3;
  objc_class *ObjectType;
  char *v7;
  id v8;
  objc_super v10;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v7 = v3;
  sub_1D43424C4(a1);
  *(_QWORD *)&v7[OBJC_IVAR____TtC13SoundAnalysis42SNLogMelBasedFeatureExtractorConfiguration_model] = a1;
  *(_DWORD *)&v7[OBJC_IVAR____TtC13SoundAnalysis42SNLogMelBasedFeatureExtractorConfiguration_stepSizeFrames] = a2;
  swift_unknownObjectRetain();

  v10.receiver = v7;
  v10.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v10, sel_init);
  swift_unknownObjectRelease();
  return v8;
}

uint64_t sub_1D4342B5C()
{
  uint64_t v0;
  unint64_t v1;

  v1 = (unint64_t)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC13SoundAnalysis42SNLogMelBasedFeatureExtractorConfiguration_model), sel_hash);
  return sub_1D451B9F4() ^ v1;
}

BOOL sub_1D4342BA4(uint64_t a1)
{
  uint64_t v1;
  int v3;
  int v4;
  char *v5;
  _BYTE v6[24];
  uint64_t v7;

  sub_1D42B28B4(a1, (uint64_t)v6);
  if (v7)
  {
    type metadata accessor for SNSoundPrintFeatureExtractorConfiguration();
    if ((swift_dynamicCast() & 1) != 0)
    {
      if (*(_QWORD *)(v1 + OBJC_IVAR____TtC13SoundAnalysis42SNLogMelBasedFeatureExtractorConfiguration_model) == *(_QWORD *)&v5[OBJC_IVAR____TtC13SoundAnalysis41SNSoundPrintFeatureExtractorConfiguration_model])
      {
        v3 = *(_DWORD *)(v1 + OBJC_IVAR____TtC13SoundAnalysis42SNLogMelBasedFeatureExtractorConfiguration_stepSizeFrames);
        v4 = *(_DWORD *)&v5[OBJC_IVAR____TtC13SoundAnalysis41SNSoundPrintFeatureExtractorConfiguration_stepSizeFrames];

        return v3 == v4;
      }

    }
  }
  else
  {
    sub_1D42B5464((uint64_t)v6);
  }
  return 0;
}

void sub_1D4342CDC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for SNLogMelBasedFeatureExtractorConfiguration()
{
  return objc_opt_self();
}

double sub_1D4342D44()
{
  return 16000.0;
}

uint64_t sub_1D4342D50()
{
  return 15360;
}

uint64_t sub_1D4342D58()
{
  return sub_1D43424B4();
}

id sub_1D4342D78@<X0>(uint64_t a1@<X1>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  return sub_1D43EC59C(0xD000000000000017, a1, 1, 0, a2, (a3 - 32) | 0x8000000000000000);
}

uint64_t sub_1D4342D94()
{
  return sub_1D451A794();
}

unint64_t sub_1D4342D9C()
{
  return 0xD000000000000017;
}

id sub_1D4342DB8()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 3112));
}

uint64_t sub_1D4342DC4()
{
  return sub_1D451A728();
}

uint64_t sub_1D4342DD0()
{
  return sub_1D451A92C();
}

uint64_t sub_1D4342DDC()
{
  uint64_t v0;
  char v1;
  id v2;
  uint64_t v3;
  uint64_t result;
  void (*v5)(uint64_t@<X8>);
  uint64_t v6;
  void *v7;

  if (qword_1EFE48E40 != -1)
    swift_once();
  v0 = qword_1EFEA7748;
  v1 = byte_1EFEA7750;
  if ((byte_1EFEA7750 & 1) != 0)
  {
    v2 = (id)qword_1EFEA7748;
    sub_1D42B28FC(&qword_1EFE49BB0);
    swift_willThrowTypedImpl();
    v3 = 0;
    result = 0;
    v5 = (void (*)(uint64_t@<X8>))v0;
    v0 = 0;
  }
  else
  {
    sub_1D42B28FC((uint64_t *)&unk_1EFE4F270);
    v6 = sub_1D42B6F40();
    v7 = (void *)objc_opt_self();
    swift_retain();
    *(_QWORD *)(v6 + 16) = objc_msgSend(v7, sel_mapTableWithKeyOptions_valueOptions_, 0x10000, 5);
    sub_1D42B28FC(&qword_1EFE4C720);
    sub_1D42B6F40();
    result = sub_1D4312B70(v6);
    v5 = sub_1D4342F1C;
    v3 = 1;
  }
  qword_1EFEA7770 = (uint64_t)v5;
  qword_1EFEA7778 = 0;
  qword_1EFEA7780 = v3;
  qword_1EFEA7788 = result;
  qword_1EFEA7790 = v0;
  byte_1EFEA7798 = v1;
  return result;
}

void sub_1D4342F1C(uint64_t a1@<X8>)
{
  type metadata accessor for SNUtils();
  sub_1D44BC2A0(a1);
}

uint64_t sub_1D4342F70(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  void *v5;
  os_log_type_t v6;
  _WORD *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;

  sub_1D42B5528(a1, a1[3]);
  if ((sub_1D43441D4() & 1) != 0)
  {
    if (qword_1EFE40338 != -1)
      swift_once();
    v4 = sub_1D451A014();
    sub_1D42CC880(v4, (uint64_t)qword_1EFEA7700);
    v5 = (void *)sub_1D4519FFC();
    v6 = sub_1D451AF5C();
    if (!sub_1D4344460(v6))
    {
      v10 = 0;
      goto LABEL_14;
    }
    v7 = (_WORD *)sub_1D43074C8();
    *v7 = 0;
    sub_1D434442C(&dword_1D42A7000, v8, v9, "SoundAnalysis is defanged; refusing to launch daemon");
    v10 = 0;
LABEL_6:
    MEMORY[0x1D825E524](v7, -1, -1);
LABEL_14:

    sub_1D43442C4();
    swift_allocError();
    *v16 = v10;
    return swift_willThrow();
  }
  result = sub_1D444BFE4(a2, 0xD000000000000025, 0x80000001D45534C0);
  if (!v2 && (result & 1) == 0)
  {
    if (qword_1EFE40338 != -1)
      swift_once();
    v12 = sub_1D451A014();
    sub_1D42CC880(v12, (uint64_t)qword_1EFEA7700);
    v5 = (void *)sub_1D4519FFC();
    v13 = sub_1D451AF5C();
    if (!sub_1D4344460(v13))
    {
      v10 = 1;
      goto LABEL_14;
    }
    v7 = (_WORD *)sub_1D43074C8();
    *v7 = 0;
    sub_1D434442C(&dword_1D42A7000, v14, v15, "inadequate entitlements to host daemon");
    v10 = 1;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1D4343120(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return sub_1D42E39F0();
}

uint64_t sub_1D4343130()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  _QWORD *v4;

  v1 = v0[2];
  v2 = v0[3];
  v3 = objc_allocWithZone((Class)type metadata accessor for SNFileServer());
  swift_bridgeObjectRetain();
  v0[4] = sub_1D43E2F9C(v1, v2);
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = v4;
  sub_1D42E3D3C(v4, (uint64_t)sub_1D43431AC);
  return sub_1D43E4F24();
}

uint64_t sub_1D43431AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = *v1;
  *(_QWORD *)(*v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1D42B8EC8();
    return sub_1D431B32C();
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 56) = v4;
    sub_1D42E3D3C(v4, (uint64_t)sub_1D4343224);
    return sub_1D4344440();
  }
}

uint64_t sub_1D4343224()
{
  sub_1D430C324();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4343260()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  v1 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42B8DC0(v1);
}

uint64_t sub_1D4343288()
{
  uint64_t v0;

  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43432B4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 128) = a3;
  *(_QWORD *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 72) = a2;
  sub_1D42B28FC(&qword_1EFE4DC70);
  *(_QWORD *)(v3 + 80) = swift_task_alloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4343308()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = v0[9];
  v1 = v0[10];
  v3 = *((_BYTE *)v0 + 128);
  v4 = v0[8];
  sub_1D451AAC4();
  sub_1D4344418();
  v5 = sub_1D42B6F40();
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0;
  *(_BYTE *)(v5 + 32) = v3;
  v0[11] = sub_1D44C3524(v1, (uint64_t)&unk_1EFE4C6E8, v5);
  sub_1D4344418();
  v6 = (_QWORD *)sub_1D42B6F40();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v4;
  v6[5] = v2;
  swift_bridgeObjectRetain();
  v0[12] = sub_1D44C3524(v1, (uint64_t)&unk_1EFE4C6F8, (uint64_t)v6);
  if (qword_1EFE48EA8 != -1)
    swift_once();
  v7 = (id)qword_1EFEA7830;
  v8 = (void *)sub_1D451A6C8();
  v9 = sub_1D42B6F40();
  *(_QWORD *)(v9 + 16) = sub_1D434394C;
  *(_QWORD *)(v9 + 24) = 0;
  v0[6] = sub_1D42E9EC0;
  v0[7] = v9;
  v0[2] = MEMORY[0x1E0C809B0];
  v0[3] = 1107296256;
  v0[4] = sub_1D42CF3AC;
  v0[5] = &unk_1E97B86B8;
  v10 = _Block_copy(v0 + 2);
  swift_release();
  v0[13] = sub_1D45017F4((uint64_t)v7, v8, v10);

  _Block_release(v10);
  sub_1D4344418();
  v11 = sub_1D42B6F40();
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  sub_1D444D358();
  v0[14] = v12;
  v13 = (_QWORD *)swift_task_alloc();
  v0[15] = v13;
  sub_1D42E3D3C(v13, (uint64_t)sub_1D4343508);
  return static AsyncUtils.sleepUntilCancelled()();
}

uint64_t sub_1D4343508()
{
  sub_1D430C324();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4343544()
{
  uint64_t v0;
  const void *v1;
  uint64_t (*v2)(void);

  v1 = *(const void **)(v0 + 104);
  sub_1D42B28FC(&qword_1EFE49BB0);
  sub_1D4344470();
  sub_1D4344470();
  sub_1D451AB3C();
  _Block_release(v1);
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  v2 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42B8ED4(v2);
}

uint64_t sub_1D4343604(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  *(_BYTE *)(v4 + 40) = a4;
  return swift_task_switch();
}

uint64_t sub_1D434361C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  if (*(_BYTE *)(v0 + 40) == 1)
  {
    sub_1D4456588();
    v2 = v1;
    v4 = v3;
    *(_QWORD *)(v0 + 16) = v3;
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 24) = v5;
    sub_1D42E3D3C(v5, (uint64_t)sub_1D4343690);
    return sub_1D4343120(v2, v4);
  }
  else
  {
    v7 = (uint64_t (*)(void))sub_1D42E3DD0();
    return sub_1D42B8ED4(v7);
  }
}

uint64_t sub_1D4343690()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 32) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1D42B8EC8();
    return sub_1D431B32C();
  }
  else
  {
    swift_bridgeObjectRelease();
    return sub_1D42B8ED4(*(uint64_t (**)(void))(v2 + 8));
  }
}

uint64_t sub_1D43436F4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4343720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 24) = a4;
  *(_QWORD *)(v5 + 32) = a5;
  return swift_task_switch();
}

uint64_t sub_1D4343738()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v1 = qword_1EFE48E40;
  swift_bridgeObjectRetain_n();
  if (v1 != -1)
    swift_once();
  v2 = (void *)qword_1EFEA7748;
  *(_QWORD *)(v0 + 40) = qword_1EFEA7748;
  if ((byte_1EFEA7750 & 1) != 0)
  {
    v3 = v2;
    sub_1D42BE8B4();
    *(_QWORD *)(v0 + 16) = v2;
    sub_1D42B28FC(&qword_1EFE49BB0);
    swift_willThrowTypedImpl();
    sub_1D42BE8B4();
    return sub_1D42B8ED4(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v5 = objc_allocWithZone(MEMORY[0x1E0CB3B58]);
    swift_retain();
    v6 = (void *)sub_1D451A6C8();
    sub_1D42BE8B4();
    v7 = objc_msgSend(v5, sel_initWithMachServiceName_, v6);

    v8 = sub_1D42B6F40();
    *(_QWORD *)(v8 + 16) = sub_1D43441B4;
    *(_QWORD *)(v8 + 24) = v2;
    swift_retain();
    v9 = sub_1D43B1E14(v7, (uint64_t)sub_1D43441CC, v8);
    v11 = v10;
    swift_release();

    *(_QWORD *)(v0 + 48) = v9;
    *(_QWORD *)(v0 + 56) = v11;
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v12;
    sub_1D42E3D3C(v12, (uint64_t)sub_1D43438BC);
    return sub_1D4344440();
  }
}

uint64_t sub_1D43438BC()
{
  sub_1D430C324();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43438F8()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v1 = (uint64_t (*)(void))sub_1D42E3DD0();
  return v1();
}

uint64_t sub_1D434394C()
{
  return sub_1D451A5E4();
}

uint64_t sub_1D4343994()
{
  uint64_t v0;

  return sub_1D43441AC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43439A0(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v4;

  *(_BYTE *)(v4 + 137) = a4;
  *(_BYTE *)(v4 + 136) = a3;
  *(_QWORD *)(v4 + 104) = a1;
  *(_QWORD *)(v4 + 112) = a2;
  return sub_1D42E39F0();
}

uint64_t sub_1D43439B8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int v12;
  int v13;
  uint64_t v14;

  if (qword_1EFE40338 != -1)
    swift_once();
  v1 = sub_1D451A014();
  sub_1D42CC880(v1, (uint64_t)qword_1EFEA7700);
  v2 = sub_1D4519FFC();
  v3 = sub_1D451AF74();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)sub_1D42CC940();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1D42A7000, v2, v3, "Checking if it's OK to run...", v4, 2u);
    sub_1D42CC934();
  }

  *(_QWORD *)(v0 + 40) = &type metadata for SystemBootArgsReader;
  *(_QWORD *)(v0 + 48) = &off_1E97A46D0;
  *(_QWORD *)(v0 + 80) = &unk_1E97AB5B0;
  *(_QWORD *)(v0 + 88) = &off_1E97AB590;
  sub_1D4342F70((_QWORD *)(v0 + 16), (_QWORD *)(v0 + 56));
  sub_1D42B5400(v0 + 56);
  sub_1D42B5400(v0 + 16);
  swift_bridgeObjectRetain_n();
  v5 = sub_1D4519FFC();
  v6 = sub_1D451AF74();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = *(_QWORD *)(v0 + 104);
    v13 = *(unsigned __int8 *)(v0 + 137);
    v12 = *(unsigned __int8 *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 112);
    v9 = sub_1D42CC940();
    v14 = sub_1D42CC940();
    *(_DWORD *)v9 = 136315650;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 96) = sub_1D43D72EC(v7, v8, &v14);
    sub_1D451B1A8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 1024;
    *(_DWORD *)(v0 + 128) = v12;
    sub_1D451B1A8();
    *(_WORD *)(v9 + 18) = 1024;
    *(_DWORD *)(v0 + 132) = v13;
    sub_1D451B1A8();
    _os_log_impl(&dword_1D42A7000, v5, v6, "Running with service name %s; file server? %{BOOL}d; biome donation? %{BOOL}d.",
      (uint8_t *)v9,
      0x18u);
    swift_arrayDestroy();
    sub_1D42CC934();
  }
  swift_bridgeObjectRelease_n();

  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v10;
  *v10 = v0;
  v10[1] = sub_1D4343CCC;
  return sub_1D43432B4(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_BYTE *)(v0 + 136));
}

uint64_t sub_1D4343CCC()
{
  uint64_t v0;

  sub_1D430C324();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t static SNDaemon.soundanalysisdLaunch()()
{
  return sub_1D42E39F0();
}

uint64_t sub_1D4343D0C()
{
  uint64_t v0;
  char v1;
  char v2;
  _QWORD *v3;

  sub_1D44564B8();
  if ((v1 & 1) != 0)
  {
    if (qword_1EFE472D0 != -1)
      swift_once();
    v2 = byte_1EFEA7718;
  }
  else
  {
    v2 = 0;
  }
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v3;
  *v3 = v0;
  v3[1] = sub_1D4319390;
  return sub_1D43439A0(0xD000000000000018, 0x80000001D4553460, v2, 1);
}

uint64_t (*static SNSystemService.audiomxdLaunch()())(_QWORD)
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  if (qword_1EFE40338 != -1)
    swift_once();
  v0 = sub_1D451A014();
  sub_1D42CC880(v0, (uint64_t)qword_1EFEA7700);
  v1 = sub_1D4519FFC();
  v2 = sub_1D451AF74();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)sub_1D42CC940();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1D42A7000, v1, v2, "Not launching SoundAnalysis in audiomxd.", v3, 2u);
    sub_1D42CC934();
  }

  return nullsub_1;
}

id SNSystemService.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id SNSystemService.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id SNSystemService.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

ValueMetadata *type metadata accessor for SNDaemon()
{
  return &type metadata for SNDaemon;
}

uint64_t type metadata accessor for SNSystemService()
{
  return objc_opt_self();
}

uint64_t sub_1D4343FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D4343FD8()
{
  return swift_release();
}

uint64_t sub_1D4343FE0()
{
  sub_1D431B468();
  return swift_deallocObject();
}

uint64_t sub_1D4344000()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_BYTE *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  v4 = sub_1D4344448(v3);
  return sub_1D4343604(v4, v5, v6, v2);
}

uint64_t sub_1D434405C()
{
  sub_1D431B468();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D4344084()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  v5 = sub_1D4344448(v4);
  return sub_1D4343720(v5, v6, v7, v3, v2);
}

uint64_t sub_1D43440EC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D4344110()
{
  sub_1D431B468();
  return swift_deallocObject();
}

uint64_t sub_1D4344130()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  sub_1D42E3D3C(v1, (uint64_t)sub_1D4344170);
  return sub_1D4344170();
}

uint64_t sub_1D4344170()
{
  uint64_t v0;

  sub_1D430C324();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D43441AC(uint64_t (*a1)(void))
{
  return a1();
}

void *sub_1D43441B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1D43B25C8(a1, a2, a3, v3);
}

uint64_t sub_1D43441CC(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1D43B1EB4(a1, a2, *(uint64_t (**)(_QWORD *, void *, uint64_t))(v2 + 16));
}

uint64_t sub_1D43441D4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *i;
  BOOL v3;

  v0 = sub_1D44C7E6C();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    for (i = (_QWORD *)(v0 + 40); ; i += 4)
    {
      v3 = *(i - 1) == 0x6E616665645F6E73 && *i == 0xE900000000000067;
      if (v3 || (sub_1D451B820() & 1) != 0)
        break;
      if (!--v1)
      {
        swift_bridgeObjectRelease_n();
        return 0;
      }
    }
    swift_bridgeObjectRelease_n();
    return 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

unint64_t sub_1D43442C4()
{
  unint64_t result;

  result = qword_1EFE4C718;
  if (!qword_1EFE4C718)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452CE24, &type metadata for SNDaemon.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4C718);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SNDaemon.DomainError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D434434C + 4 * byte_1D452CD75[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D4344380 + 4 * byte_1D452CD70[v4]))();
}

uint64_t sub_1D4344380(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4344388(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4344390);
  return result;
}

uint64_t sub_1D434439C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D43443A4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D43443A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43443B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SNDaemon.DomainError()
{
  return &type metadata for SNDaemon.DomainError;
}

unint64_t sub_1D43443D0()
{
  unint64_t result;

  result = qword_1EFE4C728;
  if (!qword_1EFE4C728)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452CDFC, &type metadata for SNDaemon.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4C728);
  }
  return result;
}

uint64_t sub_1D4344418()
{
  uint64_t v0;
  uint64_t v1;

  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v0, 1, 1, v1);
}

void sub_1D434442C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 2u);
}

uint64_t sub_1D4344440()
{
  return static AsyncUtils.sleepUntilCancelled()();
}

uint64_t sub_1D4344448(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

BOOL sub_1D4344460(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1D4344470()
{
  return sub_1D451AB3C();
}

uint64_t sub_1D4344480()
{
  uint64_t v1;

  v1 = sub_1D451B7C0();
  sub_1D451A794();
  sub_1D451B7C0();
  sub_1D451A794();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1D4344508()
{
  uint64_t v0;

  v0 = sub_1D4344480();
  sub_1D451AEE4();
  sub_1D4344480();
  sub_1D451A794();
  sub_1D451A794();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D4344594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _OWORD v14[2];
  __int128 v15;
  uint64_t v16;
  char v17;

  sub_1D42B28B4(a2, (uint64_t)&v15);
  if (!v16)
    return 0;
  sub_1D42B293C(&v15, v14);
  sub_1D4344790((uint64_t)v14, a1, a3, a4, a5, a6, a7, &v17);
  sub_1D42B5400((uint64_t)v14);
  return v17 & 1;
}

uint64_t sub_1D4344640(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, _BYTE *), uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  char v17;
  _BYTE v19[32];

  v9 = sub_1D451B160();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = &v19[-v12];
  v14 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](v11);
  v16 = &v19[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D42B294C(a2, (uint64_t)v19);
  if (swift_dynamicCast())
  {
    sub_1D42D7214((uint64_t)v13, 0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 32))(v16, v13, a5);
    v17 = a3(a1, v16);
    (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v16, a5);
  }
  else
  {
    sub_1D42D7214((uint64_t)v13, 1);
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v9);
    v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_1D4344790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _BYTE *a8@<X8>)
{
  uint64_t result;
  _QWORD v10[8];

  v10[2] = a5;
  v10[3] = a6;
  v10[4] = a7;
  v10[5] = a3;
  v10[6] = a4;
  result = sub_1D4344640(a2, a1, (uint64_t (*)(uint64_t, _BYTE *))sub_1D43448CC, (uint64_t)v10, a5);
  *a8 = result & 1;
  return result;
}

uint64_t sub_1D43447EC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(uint64_t);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v9 = *(_QWORD *)(a6 - 8);
  v10 = MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v20 - v14;
  v16(v13);
  a3(a2);
  v17 = sub_1D451A698();
  v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v12, a6);
  v18(v15, a6);
  return v17 & 1;
}

uint64_t sub_1D43448CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D43447EC(a1, a2, *(void (**)(uint64_t))(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

ValueMetadata *type metadata accessor for HashableUtilsError()
{
  return &type metadata for HashableUtilsError;
}

uint64_t sub_1D43448EC(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000011 && a2 == 0x80000001D4553530)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D451B820();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1D4344970()
{
  return 0xD000000000000011;
}

uint64_t sub_1D434498C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_1D42B28FC(&qword_1EFE4C760);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42B5528(a1, a1[3]);
  sub_1D434575C();
  sub_1D451BA24();
  sub_1D451B754();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1D4344A6C()
{
  sub_1D42BE9A8();
  sub_1D42CB3DC();
  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t sub_1D4344A94(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v3 = sub_1D42B28FC(&qword_1EFE4C750);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t)sub_1D42B5528(a1, a1[3]);
  sub_1D434575C();
  sub_1D451BA0C();
  if (!v1)
  {
    v7 = sub_1D451B67C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_1D42B5400((uint64_t)a1);
  return v7;
}

uint64_t sub_1D4344B9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D43448EC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D4344BC4()
{
  sub_1D434575C();
  return sub_1D451BA3C();
}

uint64_t sub_1D4344BEC()
{
  sub_1D434575C();
  return sub_1D451BA48();
}

uint64_t sub_1D4344C14@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1D4344A94(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1D4344C3C(_QWORD *a1)
{
  return sub_1D434498C(a1);
}

void sub_1D4344C54()
{
  sub_1D4344A6C();
}

uint64_t sub_1D4344C7C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___SNExceptionRequest_impl);
}

uint64_t sub_1D4344CB0(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR___SNExceptionRequest_impl) = result;
  return result;
}

uint64_t sub_1D4344CC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___SNExceptionRequest_impl);
  type metadata accessor for SNExceptionDetector();
  result = sub_1D42B8DB4();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = v1;
  return result;
}

id sub_1D4344D00(uint64_t a1)
{
  char *v1;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v11;

  v3 = (objc_class *)sub_1D42B7104();
  *(_QWORD *)&v1[OBJC_IVAR___SNExceptionRequest_impl] = a1;
  v11.receiver = v1;
  v11.super_class = v3;
  return sub_1D42CB364((uint64_t)v3, sel_init, v4, v5, v6, v7, v8, v9, v11);
}

id sub_1D4344D68()
{
  char *v0;
  objc_class *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v9;

  v1 = (objc_class *)sub_1D42B7104();
  *(_QWORD *)&v0[OBJC_IVAR___SNExceptionRequest_impl] = 0;
  v9.receiver = v0;
  v9.super_class = v1;
  return sub_1D42CB364((uint64_t)v1, sel_init, v2, v3, v4, v5, v6, v7, v9);
}

void SNExceptionRequest.copy(with:)(_QWORD *a1@<X8>)
{
  uint64_t v1;
  objc_class *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  objc_super v13;

  v3 = (objc_class *)sub_1D42B7104();
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___SNExceptionRequest_impl);
  v5 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v5[OBJC_IVAR___SNExceptionRequest_impl] = v4;
  v13.receiver = v5;
  v13.super_class = v3;
  v12 = sub_1D42CB364((uint64_t)v5, sel_init, v6, v7, v8, v9, v10, v11, v13);
  a1[3] = v3;
  *a1 = v12;
  sub_1D42CB758();
}

void SNExceptionRequest.hash.getter()
{
  sub_1D42BE9A8();
  sub_1D42CB3DC();
  sub_1D42CB230();
  sub_1D42BE978();
}

BOOL SNExceptionRequest.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BOOL8 v5;
  char *v7;
  _BYTE v8[32];
  _OWORD v9[2];
  __int128 v10;
  uint64_t v11;

  sub_1D42B7104();
  sub_1D42B28B4(a1, (uint64_t)&v10);
  if (!v11)
    return 0;
  sub_1D42B293C(&v10, v9);
  sub_1D42B294C((uint64_t)v9, (uint64_t)v8);
  if (swift_dynamicCast())
  {
    v3 = *(_QWORD *)(v1 + OBJC_IVAR___SNExceptionRequest_impl);
    v4 = *(_QWORD *)&v7[OBJC_IVAR___SNExceptionRequest_impl];

    v5 = v3 == v4;
  }
  else
  {
    v5 = 0;
  }
  sub_1D42B5400((uint64_t)v9);
  return v5;
}

id SNExceptionRequest.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return SNExceptionRequest.init(coder:)(a1);
}

id SNExceptionRequest.init(coder:)(void *a1)
{
  void *v1;
  void *v2;
  objc_class *v4;
  id v5;
  uint64_t v6;
  char *v7;
  id v8;
  objc_super v10;

  v2 = v1;
  v4 = (objc_class *)sub_1D42CFC30();
  v5 = v2;
  v6 = sub_1D42B17A8();

  v7 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v7[OBJC_IVAR___SNExceptionRequest_impl] = v6;
  v10.receiver = v7;
  v10.super_class = v4;
  v8 = objc_msgSendSuper2(&v10, sel_init);

  sub_1D42CFC30();
  sub_1D4345948();
  return v8;
}

Swift::Void __swiftcall SNExceptionRequest.encode(with:)(NSCoder with)
{
  uint64_t v1;

  sub_1D42AF9C4(*(_QWORD *)(v1 + OBJC_IVAR___SNExceptionRequest_impl), 1819307369, 0xE400000000000000, (uint64_t)with.super.isa);
  sub_1D42CB758();
}

uint64_t static SNExceptionRequest.supportsSecureCoding.getter()
{
  return 1;
}

id SNExceptionRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1D42B7104();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_UNKNOWN **sub_1D434522C()
{
  uint64_t v0;
  _UNKNOWN **result;

  result = (_UNKNOWN **)sub_1D4344CC0();
  if (v0)
    return &off_1E97A3580;
  return result;
}

id sub_1D4345254(uint64_t a1)
{
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v17;
  __int128 v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v2 = objc_opt_self();
  *(_QWORD *)&v18 = 0;
  v3 = sub_1D45001AC(v2, (uint64_t)&v18);
  if (!v3)
  {
    v12 = (id)v18;
    sub_1D4519AA4();

    sub_1D42B6F54();
    return v3;
  }
  v4 = (id)v18;
  v5 = (void *)sub_1D451A6C8();
  *(_QWORD *)&v18 = 0;
  v6 = sub_1D44FD014(v2, v3, v5, (uint64_t)&v18);

  if (!v6)
  {
    v13 = (id)v18;
    sub_1D4519AA4();

    sub_1D42B6F54();
LABEL_10:

    return v3;
  }
  v7 = (id)v18;
  v8 = (void *)sub_1D451A6C8();
  *(_QWORD *)&v18 = 0;
  v9 = sub_1D44FD824(v2, v3, v8, a1, (uint64_t)&v18);

  if (!v9)
  {
    v14 = (id)v18;
    sub_1D4519AA4();

    sub_1D42B6F54();
    goto LABEL_10;
  }
  v10 = (id)v18;
  sub_1D450053C(0x3E80u, 512, 1, (uint64_t)&v18);
  v17 = 0;
  if ((sub_1D45002DC(v2, v3, v6, v9, 0, 0, &v18, (uint64_t)&v17) & 1) == 0)
  {
    v15 = v17;
    sub_1D4519AA4();

    sub_1D42B6F54();
    goto LABEL_10;
  }
  v11 = v17;
  sub_1D44F3DE8((uint64_t)v3);
  sub_1D44F44A0((uint64_t)v3);

  return v3;
}

id sub_1D43454A8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  if (v1)
    return v1;
  sub_1D43456E4();
  swift_allocError();
  return (id)swift_willThrow();
}

void sub_1D4345500()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *v0;
  v3 = sub_1D42B8DB4();
  *(_QWORD *)(v3 + 16) = v0;
  *(_QWORD *)(v3 + 24) = v2;
  swift_retain();
  v4 = sub_1D42CEEA4();
  swift_release();
  if (!v1)
  {
    v5 = (void *)v0[2];
    v0[2] = v4;

  }
}

id sub_1D434557C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id result;

  result = sub_1D4345254(*(_QWORD *)(a1 + 24));
  if (!v2)
    *a2 = result;
  return result;
}

void sub_1D43455A8()
{
  uint64_t v0;
  id v1;
  void *v2;
  _QWORD *v3;

  v1 = sub_1D43454A8();
  if (!v0)
  {
    v2 = v1;
    v3 = sub_1D44F65F4((uint64_t)v1);

    if (!v3)
      __break(1u);
  }
}

uint64_t sub_1D4345600()
{
  return MEMORY[0x1E0DEE9D8];
}

void sub_1D434560C()
{
  sub_1D43455A8();
}

void sub_1D4345620()
{
  sub_1D4345500();
}

id sub_1D4345634()
{
  return sub_1D43454A8();
}

uint64_t type metadata accessor for SNExceptionRequest()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNExceptionRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for SNExceptionDetector()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for ExceptionRequest()
{
  return &type metadata for ExceptionRequest;
}

unint64_t sub_1D43456A8()
{
  unint64_t result;

  result = qword_1EFE4C740;
  if (!qword_1EFE4C740)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452CF84, &type metadata for ExceptionRequest);
    atomic_store(result, (unint64_t *)&qword_1EFE4C740);
  }
  return result;
}

unint64_t sub_1D43456E4()
{
  unint64_t result;

  result = qword_1EFE4C748;
  if (!qword_1EFE4C748)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452D1E4, &type metadata for SNExceptionDetector.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4C748);
  }
  return result;
}

uint64_t sub_1D4345720()
{
  swift_release();
  return swift_deallocObject();
}

id sub_1D4345744@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1D434557C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1D434575C()
{
  unint64_t result;

  result = qword_1EFE4C758;
  if (!qword_1EFE4C758)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452D194, &type metadata for ExceptionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4C758);
  }
  return result;
}

ValueMetadata *type metadata accessor for ExceptionRequest.CodingKeys()
{
  return &type metadata for ExceptionRequest.CodingKeys;
}

uint64_t _s13SoundAnalysis16ExceptionRequestV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D43457EC + 4 * byte_1D452CED0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D434580C + 4 * byte_1D452CED5[v4]))();
}

_BYTE *sub_1D43457EC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D434580C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4345814(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D434581C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4345824(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D434582C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SNExceptionDetector.DomainError()
{
  return &type metadata for SNExceptionDetector.DomainError;
}

unint64_t sub_1D434584C()
{
  unint64_t result;

  result = qword_1EFE4C768;
  if (!qword_1EFE4C768)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452D0B4, &type metadata for SNExceptionDetector.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4C768);
  }
  return result;
}

unint64_t sub_1D434588C()
{
  unint64_t result;

  result = qword_1EFE4C770;
  if (!qword_1EFE4C770)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452D16C, &type metadata for ExceptionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4C770);
  }
  return result;
}

unint64_t sub_1D43458CC()
{
  unint64_t result;

  result = qword_1EFE4C778;
  if (!qword_1EFE4C778)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452D0DC, &type metadata for ExceptionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4C778);
  }
  return result;
}

unint64_t sub_1D434590C()
{
  unint64_t result;

  result = qword_1EFE4C780;
  if (!qword_1EFE4C780)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452D104, &type metadata for ExceptionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4C780);
  }
  return result;
}

uint64_t sub_1D4345948()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1D434595C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  _BYTE *v5;
  _BYTE *v6;

  if (!(a1 >> 62))
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_11:
    sub_1D42BE058();
    sub_1D42B6D0C();
    *v6 = 1;
    sub_1D4312028();
    sub_1D42BE8B4();
    return v1;
  }
  swift_bridgeObjectRetain();
  v3 = sub_1D451B5A4();
  if (!v3)
    goto LABEL_11;
LABEL_3:
  v4 = a1 & 0xC000000000000001;
  sub_1D42D2E5C(0, (a1 & 0xC000000000000001) == 0, a1);
  if ((a1 & 0xC000000000000001) != 0)
  {
    v1 = MEMORY[0x1D825CD78](0, a1);
  }
  else
  {
    v1 = *(_QWORD *)(a1 + 32);
    swift_retain();
  }
  if (v3 == 1)
  {
    sub_1D42BE8B4();
  }
  else
  {
    sub_1D42D2E5C(1, v4 == 0, a1);
    if (v4)
    {
      MEMORY[0x1D825CD78](1, a1);
      swift_unknownObjectRelease();
    }
    sub_1D42BE058();
    sub_1D42B6D0C();
    *v5 = 2;
    sub_1D4312028();
    sub_1D42BE8B4();
    swift_release();
  }
  return v1;
}

uint64_t sub_1D4345AA0(uint64_t a1)
{
  char v1;
  _BYTE *v2;

  if (*(_QWORD *)(a1 + 16) == 1)
    return *(_QWORD *)(a1 + 32);
  sub_1D4347928();
  sub_1D42B6D0C();
  *v2 = v1;
  return sub_1D4312028();
}

uint64_t sub_1D4345AF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  _BYTE *v16;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;

  v4 = sub_1D42B28FC(qword_1EFE47450);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  v10 = *(_QWORD *)(a1 + 16);
  v11 = sub_1D4519BC4();
  v12 = v11;
  if (!v10)
  {
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v9, 1, 1, v11);
    goto LABEL_6;
  }
  v20 = a2;
  v13 = *(_QWORD *)(v11 - 8);
  v14 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v15(v9, v14, v11);
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v9, 0, 1, v12);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v9, 1, v12) == 1)
  {
LABEL_6:
    swift_bridgeObjectRetain();
    sub_1D42BDFDC((uint64_t)v9, qword_1EFE47450);
    sub_1D42BE058();
    swift_allocError();
    *v16 = 1;
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v20, v9, v12);
  if (v10 != 1)
  {
    v15(v7, v14 + *(_QWORD *)(v13 + 72), v12);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v7, 0, 1, v12);
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v7, 1, v12) == 1)
      return sub_1D42BDFDC((uint64_t)v7, qword_1EFE47450);
    swift_bridgeObjectRetain();
    sub_1D42BDFDC((uint64_t)v7, qword_1EFE47450);
    sub_1D42BE058();
    swift_allocError();
    *v18 = 2;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v20, v12);
    return swift_bridgeObjectRelease();
  }
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v7, 1, 1, v12);
  return sub_1D42BDFDC((uint64_t)v7, qword_1EFE47450);
}

uint64_t sub_1D4345D48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  if (*(_QWORD *)(a1 + 16) == 1)
  {
    v6 = *(_QWORD *)(a1 + 56);
    v5 = *(_QWORD *)(a1 + 64);
    v7 = *(_BYTE *)(a1 + 48);
    v9 = *(_QWORD *)(a1 + 32);
    v8 = *(_QWORD *)(a1 + 40);
    v10 = *(_BYTE *)(a1 + 72);
    swift_bridgeObjectRetain();
    result = sub_1D43477C8(v6, v5, v10);
    *(_QWORD *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v8;
    *(_BYTE *)(a2 + 16) = v7;
    *(_QWORD *)(a2 + 24) = v6;
    *(_QWORD *)(a2 + 32) = v5;
    *(_BYTE *)(a2 + 40) = v10;
  }
  else
  {
    sub_1D4347928();
    sub_1D42B6D0C();
    *v3 = a2;
    return sub_1D4312028();
  }
  return result;
}

uint64_t sub_1D4345DEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v16;
  char *v17;

  v2 = a1 + 56;
  v3 = *(_BYTE *)(a1 + 32);
  v4 = 1 << v3;
  v5 = -1;
  if (1 << v3 < 64)
    v5 = ~(-1 << (1 << v3));
  v6 = v5 & *(_QWORD *)(a1 + 56);
  if (!v6)
  {
    v10 = v3 & 0x3F;
    if (v10 > 6)
    {
      v11 = *(_QWORD *)(a1 + 64);
      if (v11)
      {
        v7 = 1;
        goto LABEL_9;
      }
      if (v10 >= 8)
      {
        v11 = *(_QWORD *)(a1 + 72);
        if (v11)
        {
          v7 = 2;
          goto LABEL_9;
        }
        v11 = *(_QWORD *)(a1 + 80);
        if (v11)
        {
          v7 = 3;
          goto LABEL_9;
        }
        if (v10 >= 9)
        {
          v11 = *(_QWORD *)(a1 + 88);
          if (v11)
          {
            v7 = 4;
            goto LABEL_9;
          }
          v11 = *(_QWORD *)(a1 + 96);
          if (v11)
          {
            v7 = 5;
LABEL_9:
            v12 = (v11 - 1) & v11;
            v8 = __clz(__rbit64(v11)) + (v7 << 6);
            if (v12)
              goto LABEL_5;
            goto LABEL_10;
          }
          v16 = 13;
          while (v16 - 7 < (unint64_t)(v4 + 63) >> 6)
          {
            v11 = *(_QWORD *)(a1 + 8 * v16++);
            if (v11)
            {
              v7 = v16 - 8;
              goto LABEL_9;
            }
          }
        }
      }
    }
    v9 = 1;
    goto LABEL_40;
  }
  v7 = 0;
  v8 = __clz(__rbit64(v6));
  if (((v6 - 1) & v6) != 0)
  {
LABEL_5:
    v9 = 2;
LABEL_40:
    sub_1D42BE058();
    sub_1D42B6D0C();
    *v17 = v9;
    sub_1D4312028();
    return v1;
  }
LABEL_10:
  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v8);
  v13 = v4 + 63;
  if (v7 + 1 < (uint64_t)(v13 >> 6))
  {
    if (*(_QWORD *)(v2 + 8 * (v7 + 1)))
      goto LABEL_5;
    v14 = v13 >> 6;
    if (v7 + 2 < v14)
    {
      if (*(_QWORD *)(v2 + 8 * (v7 + 2)))
        goto LABEL_5;
      if (v7 + 3 < v14)
      {
        if (*(_QWORD *)(v2 + 8 * (v7 + 3)))
          goto LABEL_5;
        if (v7 + 4 < v14)
        {
          if (*(_QWORD *)(v2 + 8 * (v7 + 4)))
            goto LABEL_5;
          if (v7 + 5 < v14)
          {
            if (*(_QWORD *)(v2 + 8 * (v7 + 5)))
              goto LABEL_5;
            v9 = 2;
            while (v7 + 6 < (unint64_t)v14)
            {
              if (*(_QWORD *)(a1 + 104 + 8 * v7++))
                goto LABEL_40;
            }
          }
        }
      }
    }
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1D4345FE0(uint64_t a1)
{
  uint64_t v1;
  _BYTE *v2;

  if (*(_QWORD *)(a1 + 16) == 1)
  {
    v1 = *(_QWORD *)(a1 + 32);
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1D4347928();
    sub_1D42B6D0C();
    *v2 = v1;
    sub_1D4312028();
  }
  return v1;
}

uint64_t sub_1D4346044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v5;
  _BYTE v7[40];
  __int128 v8;
  uint64_t v9;

  sub_1D4326750();
  sub_1D451B3B8();
  sub_1D4364A70(a3, &v8);
  sub_1D42D6F98((uint64_t)v7);
  if (v9)
  {
    sub_1D42B28FC(&qword_1EFE4A590);
    if ((swift_dynamicCast() & 1) != 0)
      return a1;
  }
  else
  {
    sub_1D42BDFDC((uint64_t)&v8, &qword_1EFE47160);
  }
  sub_1D43477E0();
  sub_1D42B6D0C();
  *v5 = 0;
  return sub_1D4312028();
}

uint64_t sub_1D434611C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  __int128 v12;
  _BYTE v13[40];

  result = sub_1D4346044(a1, a2, a5);
  if (!v5)
  {
    v9 = result;
    *(_QWORD *)&v12 = a3;
    *((_QWORD *)&v12 + 1) = a4;
    swift_bridgeObjectRetain();
    sub_1D451B3B8();
    sub_1D4364A70(v9, &v12);
    swift_bridgeObjectRelease();
    sub_1D42D6F98((uint64_t)v13);
    sub_1D42B28FC(&qword_1EFE47160);
    if ((swift_dynamicCast() & 1) != 0)
    {
      return v11;
    }
    else
    {
      sub_1D43477E0();
      swift_allocError();
      *v10 = 1;
      return swift_willThrow();
    }
  }
  return result;
}

void sub_1D4346210()
{
  void *v0;
  id v1;
  void *v2;
  unsigned int v3;
  char *v4;
  char v5;
  id v6;
  void *v7;
  unsigned int v8;
  id v9;
  id v10;
  id v11;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  if ((sub_1D4519ABC() & 1) != 0)
  {
    v12 = 0;
    v0 = (void *)objc_opt_self();
    v1 = objc_msgSend(v0, sel_defaultManager);
    sub_1D4519B88();
    v2 = (void *)sub_1D451A6C8();
    sub_1D42CB8F4();
    v3 = objc_msgSend(v1, sel_fileExistsAtPath_isDirectory_, v2, &v12);

    if (!v3)
    {
      v6 = objc_msgSend(v0, sel_defaultManager);
      v7 = (void *)sub_1D4519B28();
      v11 = 0;
      v8 = objc_msgSend(v6, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v7, 1, 0, &v11);

      if (v8)
      {
        v9 = v11;
        return;
      }
      v10 = v11;
      sub_1D4519AA4();

      goto LABEL_7;
    }
    if ((v12 & 1) != 0)
      return;
    sub_1D43477E0();
    sub_1D42B6D0C();
    v5 = 3;
  }
  else
  {
    sub_1D43477E0();
    sub_1D42B6D0C();
    v5 = 2;
  }
  *v4 = v5;
LABEL_7:
  swift_willThrow();
}

uint64_t sub_1D43463C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;

  sub_1D434793C();
  result = sub_1D434611C(v17, v18, v19, v20, v21);
  if (!v11)
  {
    v26 = result;
    v27 = v23;
    sub_1D4326750();
    sub_1D4347964();
    sub_1D451A794();
    sub_1D42CB8F4();
    sub_1D42B28FC(&qword_1EFE40520);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D45261D0;
    *(_QWORD *)(inited + 32) = v26;
    *(_QWORD *)(inited + 40) = v27;
    sub_1D442A2D8(a1, a2, a3, inited, a11, a10, a4, a5, a6, a7);
    sub_1D4347A14();
    return sub_1D43476FC();
  }
  return result;
}

void sub_1D43464DC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  void *v46;
  void *v47;
  unsigned __int8 v48;
  id v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  id v72;
  unint64_t v73;
  char v74;
  uint64_t v75;

  v69 = a6;
  *(_QWORD *)&v70 = a7;
  v67 = (char *)a4;
  v68 = a5;
  v65 = a2;
  v66 = a3;
  v64 = a1;
  v75 = *MEMORY[0x1E0C80C00];
  v14 = sub_1D4519C84();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  sub_1D43479B4();
  v16 = sub_1D42CB348();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D434793C();
  v20 = v71;
  v25 = sub_1D434611C(v21, v22, v23, v24, a12);
  if (!v20)
  {
    v60 = v12;
    v61 = a12;
    v58 = v15;
    v59 = (id)v25;
    v71 = v26;
    v62 = v17;
    v63 = v16;
    type metadata accessor for SNFileUtils();
    sub_1D44D2D78(a10, 0x6966697265766E75, 0xEB000000002D6465);
    sub_1D4448D84();
    v27 = sub_1D43463C4(v64, v65, v66, (uint64_t)v67, v68, v69, v70, a8, a9, (uint64_t)v19, a11);
    v68 = a10;
    v28 = (void *)MEMORY[0x1D825DB34](v27);
    v29 = sub_1D4519BF4();
    v69 = 0;
    v31 = v29;
    v32 = v30;
    v67 = v19;
    v33 = sub_1D442C920();
    v35 = v34;
    sub_1D42B5420(v31, v32);
    objc_autoreleasePoolPop(v28);
    sub_1D42DD16C(v33, v35);
    sub_1D4519C0C();
    v65 = v35;
    v66 = v33;
    sub_1D42B5420(v33, v35);
    sub_1D430DBE8((unint64_t *)&qword_1EFE4C790, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB02C0], MEMORY[0x1E0CB02D0]);
    sub_1D43479D8();
    if ((v74 & 1) != 0)
    {
      v36 = 0;
      v37 = 0xE000000000000000;
      v38 = v60;
    }
    else
    {
      v36 = 0;
      v37 = 0xE000000000000000;
      v70 = xmmword_1D45261D0;
      v39 = MEMORY[0x1E0DEDE70];
      v40 = MEMORY[0x1E0DEDEC8];
      v38 = v60;
      do
      {
        sub_1D42B28FC(&qword_1EFE47330);
        v41 = sub_1D43479CC();
        *(_OWORD *)(v41 + 16) = v70;
        *(_QWORD *)(v41 + 56) = v39;
        *(_QWORD *)(v41 + 64) = v40;
        sub_1D4347950(v41);
        v72 = v36;
        v73 = v37;
        swift_bridgeObjectRetain();
        sub_1D451A794();
        sub_1D42CB338();
        swift_bridgeObjectRelease();
        v36 = v72;
        v37 = v73;
        sub_1D43479D8();
      }
      while (v74 != 1);
    }
    sub_1D42CB44C(v38, *(uint64_t (**)(uint64_t, uint64_t))(v58 + 8));
    sub_1D42B5420(v66, v65);
    v42 = v36 == v59 && v37 == v71;
    v43 = (uint64_t)v67;
    if (v42 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_1D42CB8F4();
      v44 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
      v45 = v43;
      v46 = (void *)sub_1D4519B28();
      v47 = (void *)sub_1D4519B28();
      v72 = 0;
      v48 = objc_msgSend(v44, sel_moveItemAtURL_toURL_error_, v46, v47, &v72);

      if ((v48 & 1) != 0)
      {
        v49 = v72;
      }
      else
      {
        v50 = v72;
        sub_1D4519AA4();

        sub_1D42B7124();
      }
      sub_1D4346A3C();
      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v45, v63);
    }
    else
    {
      type metadata accessor for SNError();
      v72 = 0;
      v73 = 0xE000000000000000;
      sub_1D451B400();
      sub_1D451A794();
      sub_1D451A794();
      sub_1D42CB8F4();
      sub_1D451A794();
      sub_1D451A794();
      sub_1D42CB338();
      v51 = v43;
      v52 = v73;
      v53 = sub_1D4342D9C();
      sub_1D43EC59C(v53, v54, v55, v56, v57, v52);
      sub_1D42CB208();
      sub_1D42B7124();
      sub_1D4346A3C();
      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v51, v63);
    }
  }
  sub_1D42BE844();
}

void sub_1D4346A3C()
{
  sub_1D4448D84();
}

void static SNACITestAssets.uploadTestAsset(s3Endpoint:bucket:aciID:aciSecretKey:testAsset:url:timeoutTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t inited;
  uint64_t v27;
  uint64_t v28;
  uint64_t v36;
  uint64_t v37;
  char v38;

  v14 = sub_1D4519C84();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  sub_1D434799C();
  v16 = (void *)MEMORY[0x1D825DB34]();
  v17 = sub_1D4519BF4();
  if (v11)
  {
    objc_autoreleasePoolPop(v16);
  }
  else
  {
    v19 = v17;
    v20 = v18;
    v28 = v15;
    v21 = sub_1D442C920();
    v23 = v22;
    sub_1D42B5420(v19, v20);
    objc_autoreleasePoolPop(v16);
    sub_1D42DD16C(v21, v23);
    sub_1D4519C0C();
    sub_1D42B5420(v21, v23);
    sub_1D430DBE8((unint64_t *)&qword_1EFE4C790, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB02C0], MEMORY[0x1E0CB02D0]);
    sub_1D4347970();
    if ((v38 & 1) == 0)
    {
      v24 = MEMORY[0x1E0DEDEC8];
      do
      {
        sub_1D42B28FC(&qword_1EFE47330);
        v25 = sub_1D43479CC();
        *(_OWORD *)(v25 + 16) = xmmword_1D45261D0;
        *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEDE70];
        *(_QWORD *)(v25 + 64) = v24;
        sub_1D4347950(v25);
        sub_1D4347A08();
        sub_1D451A794();
        sub_1D4347994();
        sub_1D42CB338();
        sub_1D4347970();
      }
      while (v38 != 1);
    }
    sub_1D42CB44C(v12, *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8));
    sub_1D42B5420(v21, v23);
    sub_1D4347A08();
    sub_1D4347964();
    sub_1D451A794();
    sub_1D4347994();
    sub_1D42B28FC(&qword_1EFE40520);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D45261D0;
    *(_QWORD *)(inited + 32) = v36;
    *(_QWORD *)(inited + 40) = v37;
    sub_1D442A45C(a10, a1, a2, a3, inited, a11, a4, a5, a6, a7, v27, v23, v21, a9, v28, a11, a10, a1, 0, a8, a2, a7);
    sub_1D4347A14();
    sub_1D43476FC();
  }
  sub_1D42BE844();
}

void sub_1D4346D8C(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  unsigned __int8 v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;

  v18 = sub_1D4519AD4();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  sub_1D434799C();
  sub_1D434793C();
  sub_1D434611C(v20, v21, v22, v23, a13);
  if (v14)
    goto LABEL_7;
  sub_1D4326750();
  sub_1D4347964();
  v35 = a8;
  sub_1D451A794();
  sub_1D4347994();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v19 + 104))(v15, *MEMORY[0x1E0CAFD78], v18);
  sub_1D432E53C();
  v24 = a9;
  sub_1D4519BB8();
  sub_1D42CB44C(v15, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
  sub_1D4347994();
  if ((sub_1D4519ABC() & 1) == 0)
  {
    type metadata accessor for SNError();
    sub_1D451B400();
    swift_bridgeObjectRelease();
    v28 = sub_1D42CB348();
    sub_1D430DBE8((unint64_t *)&qword_1EFE4C7B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    sub_1D451B7C0();
    sub_1D451A794();
    sub_1D42CB8F4();
    v29 = sub_1D4342D9C();
    sub_1D43EC59C(v29, v30, v31, v32, v33, 0x80000001D4553580);
    sub_1D42CB8F4();
    swift_willThrow();
LABEL_6:
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v24, v28);
    goto LABEL_7;
  }
  v25 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_1D4519B88();
  v26 = (void *)sub_1D451A6C8();
  sub_1D42B7204();
  v27 = objc_msgSend(v25, sel_fileExistsAtPath_, v26);

  if ((v27 & 1) != 0)
  {
LABEL_7:
    sub_1D42BE844();
    return;
  }
  sub_1D4346210();
  if (__OFADD__(a14, 1))
  {
    __break(1u);
  }
  else if (((a14 + 1) & 0x8000000000000000) == 0)
  {
    if (a14 != -1)
    {
      sub_1D43464DC(a1, a2, a3, a4, a5, a6, a7, v35, a10, a9, a12, a13);
      goto LABEL_7;
    }
    sub_1D43477E0();
    sub_1D42B6D0C();
    *v34 = 4;
    sub_1D4312028();
    v28 = sub_1D42CB348();
    v24 = a9;
    goto LABEL_6;
  }
  __break(1u);
}

void static SNACITestAssets.url(s3Endpoint:bucket:aciID:aciSecretKey:timeoutSeconds:testAsset:testAssetsDatabase:assetDirectoryURL:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  sub_1D43072F8();
  v43 = v24;
  v41 = v25;
  v42 = v26;
  v39 = v27;
  v40 = v28;
  v38 = v29;
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v36 = sub_1D4519CE4();
  v37 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  sub_1D42BE8F8();
  sub_1D43479FC();
  sub_1D4346D8C(v33, v31, v38, v39, v40, v41, v42, v43, v35, a21, a23, v23, a22, 3);
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v23, v36);
  sub_1D42CB3F8();
}

void sub_1D43471B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void *v43;
  id v44;
  void *v45;
  unsigned __int8 v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  id v50;
  void *v51;
  unsigned int v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  void (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74[2];

  sub_1D43072F8();
  v72 = v25;
  v73 = v24;
  v70 = v26;
  v71 = v27;
  v68 = v28;
  v69 = v29;
  v66 = v30;
  v67 = v31;
  v33 = v32;
  v64 = v34;
  v74[1] = *(id *)MEMORY[0x1E0C80C00];
  v35 = sub_1D4519CE4();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  sub_1D42BE8F8();
  v63 = sub_1D42CB348();
  v65 = *(_QWORD *)(v63 - 8);
  v37 = MEMORY[0x1E0C80A78](v63);
  v39 = (char *)&v62 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v37);
  v41 = (char *)&v62 - v40;
  sub_1D43479FC();
  v42 = v73;
  sub_1D4346D8C(v33, v66, v67, v68, v69, v70, v71, v72, (uint64_t)v39, a21, a23, v23, a22, 3);
  if (v42)
  {
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v23, v35);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v23, v35);
    (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v41, v39, v63);
    sub_1D4519B4C();
    v43 = (void *)objc_opt_self();
    v44 = objc_msgSend(v43, sel_defaultManager);
    sub_1D4519B94();
    v45 = (void *)sub_1D451A6C8();
    sub_1D42B7204();
    v46 = objc_msgSend(v44, sel_fileExistsAtPath_, v45);

    if ((v46 & 1) != 0)
    {
      v47 = sub_1D4347A20();
      v49(v47, v48);
    }
    else
    {
      v50 = objc_msgSend(v43, sel_defaultManager);
      v51 = (void *)sub_1D4519B28();
      v74[0] = 0;
      v52 = objc_msgSend(v50, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v51, 0, 0, v74);

      if (v52)
      {
        v53 = v74[0];
        v54 = sub_1D4519B88();
        v56 = v55;
        v57 = sub_1D4519B94();
        sub_1D43ECFE4(v54, v56, v57, v58);
        v60 = sub_1D4347A20();
        v61(v60);
        sub_1D42CB208();
        sub_1D42B7204();
      }
      else
      {
        v59 = v74[0];
        sub_1D4519AA4();

        sub_1D42B7124();
        sub_1D4448D84();
        sub_1D42B7124();
        sub_1D4347984();
        sub_1D43479F0();
      }
    }
  }
  sub_1D42CB3F8();
}

#error "1D434757C: call analysis failed (funcsize=117)"

uint64_t sub_1D43476A0()
{
  return sub_1D4347750((uint64_t *)&unk_1EFE4C7A0);
}

uint64_t sub_1D43476AC()
{
  return sub_1D4347750((uint64_t *)&unk_1EFE403D0);
}

uint64_t sub_1D43476B8()
{
  return sub_1D4347750((uint64_t *)&unk_1EFE472F0);
}

uint64_t sub_1D43476C4()
{
  return sub_1D4347750(&qword_1EFE55A00);
}

uint64_t sub_1D43476D0()
{
  swift_arrayDestroy();
  sub_1D42EA3A0();
  return swift_deallocClassInstance();
}

uint64_t sub_1D43476FC()
{
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1D434772C()
{
  return sub_1D4347750(&qword_1EFE4FCA0);
}

uint64_t sub_1D4347738()
{
  return sub_1D4347750((uint64_t *)&unk_1EFE557B0);
}

uint64_t sub_1D4347744()
{
  return sub_1D4347750(&qword_1EFE4C7B0);
}

uint64_t sub_1D4347750(uint64_t *a1)
{
  sub_1D42B28FC(a1);
  swift_arrayDestroy();
  sub_1D42EA3A0();
  return swift_deallocClassInstance();
}

uint64_t sub_1D4347790()
{
  swift_arrayDestroy();
  sub_1D42EA3A0();
  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for SNACITestAssets()
{
  return &type metadata for SNACITestAssets;
}

uint64_t sub_1D43477C8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 0xFDu)
    return swift_bridgeObjectRetain();
  return result;
}

unint64_t sub_1D43477E0()
{
  unint64_t result;

  result = qword_1EFE4C7C0;
  if (!qword_1EFE4C7C0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452D2B4, &type metadata for SNACITestAssets.Err);
    atomic_store(result, (unint64_t *)&qword_1EFE4C7C0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SNACITestAssets.Err(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D4347868 + 4 * byte_1D452D22D[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D434789C + 4 * byte_1D452D228[v4]))();
}

uint64_t sub_1D434789C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43478A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D43478ACLL);
  return result;
}

uint64_t sub_1D43478B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D43478C0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D43478C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43478CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SNACITestAssets.Err()
{
  return &type metadata for SNACITestAssets.Err;
}

unint64_t sub_1D43478EC()
{
  unint64_t result;

  result = qword_1EFE4C7D0[0];
  if (!qword_1EFE4C7D0[0])
  {
    result = MEMORY[0x1D825E41C](&unk_1D452D28C, &type metadata for SNACITestAssets.Err);
    atomic_store(result, qword_1EFE4C7D0);
  }
  return result;
}

unint64_t sub_1D4347928()
{
  return sub_1D42BE058();
}

uint64_t sub_1D4347950(uint64_t a1)
{
  char v1;

  *(_BYTE *)(a1 + 32) = v1;
  return sub_1D451A704();
}

uint64_t sub_1D4347964()
{
  return sub_1D451A794();
}

uint64_t sub_1D4347970()
{
  return sub_1D451B190();
}

uint64_t sub_1D4347984()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_1D4347994()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43479CC()
{
  return swift_allocObject();
}

uint64_t sub_1D43479D8()
{
  return sub_1D451B190();
}

uint64_t sub_1D43479E4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43479F0()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t sub_1D43479FC()
{
  return sub_1D4519C9C();
}

uint64_t sub_1D4347A08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = v0;
  *(_QWORD *)(v2 - 96) = v1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D4347A14()
{
  return swift_setDeallocating();
}

uint64_t sub_1D4347A20()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4347A34(void (*a1)(uint64_t), uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t a7)
{
  uint64_t result;

  if (a1)
    a1(a7);
  result = a5(a7);
  if (a3)
    return a3(a7);
  return result;
}

ValueMetadata *type metadata accessor for HookUtils()
{
  return &type metadata for HookUtils;
}

uint64_t sub_1D4347AC0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D451B160();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D4347B2C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  int v12;
  uint64_t v15;
  const void *v17;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  v9 = *(_DWORD *)(v6 + 80);
  v10 = ~v9;
  v11 = v8 + v7;
  v12 = v7 & 0x100000;
  if (v9 > 7 || v12 != 0 || (v11 & v10) + v8 > 0x18)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v9 + 16) & v10));
    swift_retain();
  }
  else
  {
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, *(_QWORD *)(a3 + 16)))
    {
      memcpy(a1, a2, v8);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v5);
    }
    v17 = (const void *)(((unint64_t)a2 + v11) & v10);
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v17, 1, v5))
    {
      memcpy((void *)(((unint64_t)a1 + v11) & v10), v17, v8);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v6 + 16))(((unint64_t)a1 + v11) & v10, v17, v5);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(((unint64_t)a1 + v11) & v10, 0, 1, v5);
    }
  }
  return a1;
}

uint64_t sub_1D4347C74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, 1, v3);
  v5 = *(_QWORD *)(v3 - 8);
  if (!v4)
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v3);
  v6 = *(_QWORD *)(v5 + 64) + a1;
  if (!*(_DWORD *)(v5 + 84))
    ++v6;
  v7 = (v6 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  result = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v7, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v5 + 8))(v7, v3);
  return result;
}

void *sub_1D4347D10(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  size_t v9;
  size_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, v5);
  v7 = *(_QWORD *)(v5 - 8);
  if (v6)
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8)
      v10 = *(_QWORD *)(v7 + 64);
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v5);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v5);
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
  }
  if (!v8)
    ++v9;
  v11 = *(unsigned __int8 *)(v7 + 80);
  v12 = (void *)(((unint64_t)a1 + v9 + v11) & ~v11);
  v13 = (const void *)(((unint64_t)a2 + v9 + v11) & ~v11);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v13, 1, v5))
  {
    memcpy(v12, v13, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v12, v13, v5);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v12, 0, 1, v5);
  }
  return a1;
}

void *sub_1D4347E20(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  size_t v9;
  size_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  int v14;
  int v15;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, 1, v5);
  v7 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, v5);
  v8 = *(_QWORD *)(v5 - 8);
  if (v6)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(a1, a2, v5);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v8 + 84))
    v9 = *(_QWORD *)(v8 + 64);
  else
    v9 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(a1, a2, v9);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v10 = *(_QWORD *)(v8 + 64);
  else
    v10 = *(_QWORD *)(v8 + 64) + 1;
  v11 = *(unsigned __int8 *)(v8 + 80);
  v12 = (void *)(((unint64_t)a1 + v10 + v11) & ~v11);
  v13 = (const void *)(((unint64_t)a2 + v10 + v11) & ~v11);
  v14 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v12, 1, v5);
  v15 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v13, 1, v5);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(v12, v13, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v12, v5);
    goto LABEL_18;
  }
  if (v15)
  {
LABEL_18:
    memcpy(v12, v13, v10);
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v12, v13, v5);
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v12, 0, 1, v5);
  return a1;
}

void *sub_1D4347FBC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  size_t v9;
  size_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, v5);
  v7 = *(_QWORD *)(v5 - 8);
  if (v6)
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8)
      v10 = *(_QWORD *)(v7 + 64);
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v5);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v5);
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
  }
  if (!v8)
    ++v9;
  v11 = *(unsigned __int8 *)(v7 + 80);
  v12 = (void *)(((unint64_t)a1 + v9 + v11) & ~v11);
  v13 = (const void *)(((unint64_t)a2 + v9 + v11) & ~v11);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v13, 1, v5))
  {
    memcpy(v12, v13, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v12, v13, v5);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v12, 0, 1, v5);
  }
  return a1;
}

void *sub_1D43480CC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  size_t v9;
  size_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  int v14;
  int v15;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, 1, v5);
  v7 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, v5);
  v8 = *(_QWORD *)(v5 - 8);
  if (v6)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a1, a2, v5);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v8 + 84))
    v9 = *(_QWORD *)(v8 + 64);
  else
    v9 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(a1, a2, v9);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v10 = *(_QWORD *)(v8 + 64);
  else
    v10 = *(_QWORD *)(v8 + 64) + 1;
  v11 = *(unsigned __int8 *)(v8 + 80);
  v12 = (void *)(((unint64_t)a1 + v10 + v11) & ~v11);
  v13 = (const void *)(((unint64_t)a2 + v10 + v11) & ~v11);
  v14 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v12, 1, v5);
  v15 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v13, 1, v5);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(v12, v13, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v12, v5);
    goto LABEL_18;
  }
  if (v15)
  {
LABEL_18:
    memcpy(v12, v13, v10);
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v12, v13, v5);
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v12, 0, 1, v5);
  return a1;
}

uint64_t sub_1D4348268(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  char v11;
  int v12;
  unsigned int v13;
  int v14;
  unsigned int v16;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = v6 - 1;
  if ((_DWORD)v6)
  {
    v8 = *(_QWORD *)(v5 + 64);
  }
  else
  {
    v7 = 0;
    v8 = *(_QWORD *)(v5 + 64) + 1;
  }
  if (!a2)
    return 0;
  v9 = a2 - v7;
  if (a2 > v7)
  {
    v10 = ((v8 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + v8;
    v11 = 8 * v10;
    if (v10 > 3)
      goto LABEL_7;
    v13 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v13))
    {
      v12 = *(_DWORD *)(a1 + v10);
      if (v12)
        goto LABEL_14;
    }
    else
    {
      if (v13 <= 0xFF)
      {
        if (v13 < 2)
          goto LABEL_21;
LABEL_7:
        v12 = *(unsigned __int8 *)(a1 + v10);
        if (!*(_BYTE *)(a1 + v10))
          goto LABEL_21;
LABEL_14:
        v14 = (v12 - 1) << v11;
        if (v10 > 3)
          v14 = 0;
        if ((_DWORD)v10)
        {
          if (v10 > 3)
            LODWORD(v10) = 4;
          __asm { BR              X12 }
        }
        return v7 + v14 + 1;
      }
      v12 = *(unsigned __int16 *)(a1 + v10);
      if (*(_WORD *)(a1 + v10))
        goto LABEL_14;
    }
  }
LABEL_21:
  if (v6 < 2)
    return 0;
  v16 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v6, v4);
  if (v16 >= 2)
    return v16 - 1;
  else
    return 0;
}

void sub_1D43483A4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  size_t v11;
  char v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  v10 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v10;
  v11 = ((v10 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + v10;
  v12 = 8 * v11;
  v13 = a3 >= v9;
  v14 = a3 - v9;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      v15 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v15))
      {
        v6 = 4u;
      }
      else if (v15 >= 0x100)
      {
        v6 = 2;
      }
      else
      {
        v6 = v15 > 1;
      }
    }
    else
    {
      v6 = 1u;
    }
  }
  if (v9 < a2)
  {
    v16 = ~v9 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v17 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *a1 = v17;
          *((_BYTE *)a1 + 2) = BYTE2(v17);
        }
        else if ((_DWORD)v11 == 2)
        {
          *a1 = v17;
        }
        else
        {
          *(_BYTE *)a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

void sub_1D4348548()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1D4348550()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t type metadata accessor for HookUtils.PrePostHook(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HookUtils.PrePostHook);
}

uint64_t sub_1D4348580()
{
  uint64_t v0;

  swift_beginAccess();
  nullsub_1(v0 + 16);
  swift_endAccess();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnsafeSamplerNode()
{
  return objc_opt_self();
}

ValueMetadata *_s14descr1E97B8949C29AccessibilitySoundRecognitionVMa()
{
  return &_s14descr1E97B8949C29AccessibilitySoundRecognitionVN;
}

unint64_t sub_1D434860C()
{
  unint64_t result;

  result = qword_1EFE4C860;
  if (!qword_1EFE4C860)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454F7B8, &unk_1E9798F20);
    atomic_store(result, (unint64_t *)&qword_1EFE4C860);
  }
  return result;
}

void sub_1D434864C()
{
  sub_1D42BE9A8();
  sub_1D4338458();
  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t sub_1D4348678()
{
  sub_1D451B958();
  sub_1D451B970();
  return sub_1D451B994();
}

void sub_1D43486C0()
{
  sub_1D42BE9A8();
  sub_1D4349550();
  sub_1D42CB230();
  sub_1D42BE978();
}

void sub_1D43486E8()
{
  sub_1D42BE9A8();
  sub_1D4338458();
  sub_1D42CB230();
  sub_1D42BE978();
}

void sub_1D4348714()
{
  sub_1D43487B4();
}

void sub_1D4348720()
{
  sub_1D451B964();
  sub_1D42B6E24();
}

uint64_t sub_1D4348740()
{
  sub_1D451A74C();
  return swift_bridgeObjectRelease();
}

void sub_1D434879C()
{
  sub_1D43495F8();
  sub_1D42B6E24();
}

void sub_1D43487B4()
{
  sub_1D434955C();
  sub_1D451A74C();
  swift_bridgeObjectRelease();
  sub_1D42CB230();
  sub_1D42BE978();
}

void sub_1D4348828()
{
  sub_1D434955C();
  sub_1D4338458();
  sub_1D42CB230();
  sub_1D42BE978();
}

void sub_1D4348854()
{
  sub_1D434955C();
  sub_1D4338458();
  sub_1D42CB230();
  sub_1D42BE978();
}

void sub_1D4348880()
{
  sub_1D434955C();
  sub_1D4349550();
  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t sub_1D43488AC()
{
  sub_1D451B958();
  sub_1D451B970();
  return sub_1D451B994();
}

void sub_1D43488EC()
{
  sub_1D43486C0();
}

void sub_1D4348904()
{
  sub_1D434879C();
}

void sub_1D434890C()
{
  sub_1D4348880();
}

uint64_t sub_1D4348924(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 == *(_DWORD *)a2
    && (sub_1D42FE41C(*(_QWORD *)(a1 + 8), *(_QWORD *)(a2 + 8)) & 1) != 0
    && (sub_1D42FE41C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a2 + 16)) & 1) != 0
    && (sub_1D42FE41C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a2 + 24)) & 1) != 0
    && (sub_1D42FE41C(*(_QWORD *)(a1 + 32), *(_QWORD *)(a2 + 32)) & 1) != 0
    && (sub_1D42FE41C(*(_QWORD *)(a1 + 40), *(_QWORD *)(a2 + 40)) & 1) != 0
    && (sub_1D42FE41C(*(_QWORD *)(a1 + 48), *(_QWORD *)(a2 + 48)) & 1) != 0
    && (sub_1D42FE41C(*(_QWORD *)(a1 + 56), *(_QWORD *)(a2 + 56)) & 1) != 0
    && (sub_1D42FE41C(*(_QWORD *)(a1 + 64), *(_QWORD *)(a2 + 64)) & 1) != 0
    && (sub_1D42FE41C(*(_QWORD *)(a1 + 72), *(_QWORD *)(a2 + 72)) & 1) != 0
    && (sub_1D42FE41C(*(_QWORD *)(a1 + 80), *(_QWORD *)(a2 + 80)) & 1) != 0
    && (sub_1D42FE41C(*(_QWORD *)(a1 + 88), *(_QWORD *)(a2 + 88)) & 1) != 0
    && (sub_1D42FE41C(*(_QWORD *)(a1 + 96), *(_QWORD *)(a2 + 96)) & 1) != 0
    && (sub_1D42FE41C(*(_QWORD *)(a1 + 104), *(_QWORD *)(a2 + 104)) & 1) != 0
    && (sub_1D42FE41C(*(_QWORD *)(a1 + 112), *(_QWORD *)(a2 + 112)) & 1) != 0)
  {
    return sub_1D42FE41C(*(_QWORD *)(a1 + 120), *(_QWORD *)(a2 + 120));
  }
  else
  {
    return 0;
  }
}

void sub_1D4348A4C()
{
  sub_1D451B97C();
  sub_1D434951C();
  sub_1D434951C();
  sub_1D434951C();
  sub_1D434951C();
  sub_1D434951C();
  sub_1D434951C();
  sub_1D434951C();
  sub_1D434951C();
  sub_1D434951C();
  sub_1D434951C();
  sub_1D434951C();
  sub_1D434951C();
  sub_1D434951C();
  sub_1D434951C();
  sub_1D42D6264();
}

void sub_1D4348AEC()
{
  sub_1D42BE9A8();
  sub_1D4348A4C();
  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t sub_1D4348B1C()
{
  sub_1D451B958();
  sub_1D4348A4C();
  return sub_1D451B994();
}

void sub_1D4348B58(const void *a1)
{
  int v1;
  _QWORD *v2;
  void *v3;
  int v4;
  _QWORD *v5;
  _QWORD v6[16];
  _BYTE v7[128];
  _QWORD v8[16];
  _BYTE v9[128];

  sub_1D434936C(a1, v8);
  v1 = sub_1D43493A8(v8);
  v2 = sub_1D43493B4(v8);
  if (v1 == 1)
  {
    v3 = sub_1D4349524(v9, v2);
    sub_1D43495E4((uint64_t)v3, v6);
    v4 = sub_1D43493A8(v6);
    v5 = sub_1D43493B4(v6);
    if (v4 == 1)
    {
      sub_1D4349524(v7, v5);
      sub_1D4348924((uint64_t)v9, (uint64_t)v7);
    }
  }
  else
  {
    sub_1D43495E4((uint64_t)v2, v9);
    sub_1D434952C();
  }
  sub_1D43495D8();
}

void sub_1D4348C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  _QWORD *v9;
  uint64_t v10[16];
  _BYTE v11[128];

  sub_1D4349570(a1, a2, a3, a4, a5, a6, a7, a8, v10[0]);
  v8 = sub_1D43493A8(v10);
  v9 = sub_1D43493B4(v10);
  if (v8 == 1)
  {
    sub_1D4349524(v11, v9);
    sub_1D43495C0();
  }
  else
  {
    sub_1D43495A8();
  }
}

uint64_t sub_1D4348C78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[16];
  _BYTE v14[128];

  v0 = sub_1D42BE9A8();
  sub_1D43495EC(v0, v1, v2, v3, v4, v5, v6, v7, v11, v12);
  v8 = sub_1D43493A8(v13);
  v9 = sub_1D43493B4(v13);
  if (v8 == 1)
  {
    sub_1D4349524(v14, v9);
    sub_1D4348A4C();
  }
  else
  {
    sub_1D43495B4();
  }
  return sub_1D42CB230();
}

uint64_t sub_1D4348CE8()
{
  const void *v0;
  uint64_t v2;

  sub_1D434936C(v0, &v2);
  return sub_1D4348C78();
}

void sub_1D4348D1C(uint64_t a1)
{
  const void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D434936C(v1, &v10);
  sub_1D4348C18(a1, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1D4348D58()
{
  const void *v0;
  int v1;
  _QWORD *v2;
  _BYTE __dst[128];
  _BYTE v5[128];
  _QWORD v6[16];

  sub_1D434936C(v0, v5);
  sub_1D451B958();
  sub_1D434936C(v5, v6);
  v1 = sub_1D43493A8(v6);
  v2 = sub_1D43493B4(v6);
  if (v1 == 1)
  {
    memcpy(__dst, v2, sizeof(__dst));
    sub_1D4348A4C();
  }
  else
  {
    sub_1D451B970();
  }
  return sub_1D451B994();
}

uint64_t sub_1D4348DF8(const void *a1, const void *a2)
{
  char v3;
  _BYTE v5[128];
  _BYTE v6[128];

  sub_1D434936C(a1, v5);
  sub_1D434936C(a2, v6);
  sub_1D4348B58(v5);
  return v3 & 1;
}

uint64_t sub_1D4348E44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1D451B964();
  if (v3)
  {
    v5 = a2 + 32;
    do
    {
      ++v5;
      result = sub_1D451B970();
      --v3;
    }
    while (v3);
  }
  return result;
}

void sub_1D4348E90()
{
  sub_1D42BE9A8();
  sub_1D43495CC();
  sub_1D42CB230();
  sub_1D42BE978();
}

void sub_1D4348EB8()
{
  sub_1D4348E90();
}

uint64_t sub_1D4348EC0(uint64_t a1)
{
  uint64_t *v1;

  return sub_1D4348E44(a1, *v1);
}

void sub_1D4348EC8()
{
  sub_1D434955C();
  sub_1D43495CC();
  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t sub_1D4348EF0(_QWORD *a1, _QWORD *a2)
{
  return sub_1D4348E40(*a1, *a2);
}

void sub_1D4348EFC(const void *a1)
{
  void *v1;
  int v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t v20[16];
  _BYTE v21[128];
  _BYTE v22[128];
  _BYTE v23[128];
  _QWORD v24[32];

  v1 = sub_1D434936C(a1, v21);
  sub_1D43495E4((uint64_t)v1, v20);
  sub_1D434936C(v21, v24);
  v2 = sub_1D43493A8(v24);
  v3 = sub_1D43493B4(v24);
  if (v2 == 1)
  {
    v10 = sub_1D4349524(v22, v3);
    sub_1D4349564((uint64_t)v10, v11, v12, v13, v14, v15, v16, v17, v20[0]);
    v18 = sub_1D434952C();
    if (v19)
    {
      sub_1D4349524(v23, v18);
      sub_1D4348924((uint64_t)v22, (uint64_t)v23);
    }
  }
  else
  {
    sub_1D4349564((uint64_t)v3, (uint64_t)v3, v4, v5, v6, v7, v8, v9, v20[0]);
    sub_1D434952C();
  }
  sub_1D43495D8();
}

void sub_1D4348FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const void *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[256];

  v9 = sub_1D4349570(a1, a2, a3, a4, a5, a6, a7, a8, v19);
  sub_1D4349564((uint64_t)v9, v10, v11, v12, v13, v14, v15, v16, v20);
  sub_1D4349580();
  if (v18)
  {
    sub_1D4349524(v21, v17);
    sub_1D43495C0();
  }
  else
  {
    sub_1D43495A8();
    sub_1D43493C4(v8);
  }
}

uint64_t sub_1D434900C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const void *v9;
  char v10;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[128];
  _BYTE v15[128];
  _BYTE v16[128];

  v1 = sub_1D42BE9A8();
  sub_1D43495EC(v1, v2, v3, v4, v5, v6, v7, v8, v12, v13);
  sub_1D434936C(v14, v16);
  sub_1D4349580();
  if (v10)
  {
    sub_1D4349524(v15, v9);
    sub_1D4348A4C();
  }
  else
  {
    sub_1D43495B4();
    sub_1D43493C4(v0);
  }
  return sub_1D42CB230();
}

uint64_t sub_1D434907C()
{
  const void *v0;
  _BYTE v2[128];

  memcpy(v2, v0, sizeof(v2));
  return sub_1D434900C();
}

void sub_1D43490B4(uint64_t a1)
{
  const void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[128];

  memcpy(v10, v1, sizeof(v10));
  sub_1D4348FB4(a1, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1D43490F4()
{
  const void *v0;
  int v1;
  _QWORD *v2;
  _BYTE v4[128];
  uint64_t __dst[16];
  _QWORD v6[16];

  memcpy(__dst, v0, sizeof(__dst));
  sub_1D451B958();
  sub_1D434936C(__dst, v6);
  v1 = sub_1D43493A8(v6);
  v2 = sub_1D43493B4(v6);
  if (v1 == 1)
  {
    memcpy(v4, v2, sizeof(v4));
    sub_1D4348A4C();
  }
  else
  {
    sub_1D451B970();
    sub_1D43493C4(__dst);
  }
  return sub_1D451B994();
}

uint64_t sub_1D43491A0(void *__src, const void *a2)
{
  char v3;
  _BYTE v5[128];
  _BYTE __dst[128];

  memcpy(v5, __src, sizeof(v5));
  memcpy(__dst, a2, sizeof(__dst));
  sub_1D4348EFC(v5);
  return v3 & 1;
}

void sub_1D43491F4()
{
  sub_1D451B970();
  sub_1D42B6E24();
}

uint64_t sub_1D4349214()
{
  return sub_1D4348678();
}

void sub_1D434921C()
{
  sub_1D43491F4();
}

uint64_t sub_1D4349224()
{
  return sub_1D43488AC();
}

unint64_t sub_1D4349230()
{
  unint64_t result;

  result = qword_1EFE4C868;
  if (!qword_1EFE4C868)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452D3E0, &unk_1E9798EA0);
    atomic_store(result, (unint64_t *)&qword_1EFE4C868);
  }
  return result;
}

unint64_t sub_1D4349270()
{
  unint64_t result;

  result = qword_1EFE4C870;
  if (!qword_1EFE4C870)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452D448, &unk_1E97AC9A8);
    atomic_store(result, (unint64_t *)&qword_1EFE4C870);
  }
  return result;
}

unint64_t sub_1D43492B0()
{
  unint64_t result;

  result = qword_1EFE4C878;
  if (!qword_1EFE4C878)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452D4B0, &unk_1E9798FB0);
    atomic_store(result, (unint64_t *)&qword_1EFE4C878);
  }
  return result;
}

unint64_t sub_1D43492F0()
{
  unint64_t result;

  result = qword_1EFE4C880;
  if (!qword_1EFE4C880)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452D518, &unk_1E97AB848);
    atomic_store(result, (unint64_t *)&qword_1EFE4C880);
  }
  return result;
}

unint64_t sub_1D4349330()
{
  unint64_t result;

  result = qword_1EFE4C888;
  if (!qword_1EFE4C888)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454F880, &unk_1E9799040);
    atomic_store(result, (unint64_t *)&qword_1EFE4C888);
  }
  return result;
}

void *sub_1D434936C(const void *a1, void *a2)
{
  sub_1D44D8E2C(a2, a1);
  return a2;
}

uint64_t sub_1D43493A8(_QWORD *a1)
{
  return *a1 >> 63;
}

_QWORD *sub_1D43493B4(_QWORD *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_1D43493C4(uint64_t *a1)
{
  sub_1D434941C(*a1);
  return a1;
}

uint64_t sub_1D434941C(uint64_t result)
{
  if (result < 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1D434951C()
{
  sub_1D42D6264();
}

void *sub_1D4349524(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x80uLL);
}

_QWORD *sub_1D434952C()
{
  uint64_t v0;

  sub_1D43493A8((_QWORD *)(v0 - 160));
  return sub_1D43493B4((_QWORD *)(v0 - 160));
}

uint64_t sub_1D4349550()
{
  return sub_1D451B970();
}

uint64_t sub_1D434955C()
{
  return sub_1D451B958();
}

void *sub_1D4349564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  return sub_1D434936C(&a9, (void *)(v9 - 160));
}

void *sub_1D4349570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  const void *v9;

  return sub_1D434936C(v9, &a9);
}

_QWORD *sub_1D4349580()
{
  uint64_t v0;

  sub_1D43493A8((_QWORD *)(v0 - 160));
  return sub_1D43493B4((_QWORD *)(v0 - 160));
}

uint64_t sub_1D43495A8()
{
  return sub_1D451B970();
}

uint64_t sub_1D43495B4()
{
  return sub_1D451B970();
}

void sub_1D43495C0()
{
  sub_1D4348A4C();
}

void sub_1D43495CC()
{
  sub_1D42D5BA8();
}

void *sub_1D43495E4(uint64_t a1, void *a2)
{
  const void *v2;

  return sub_1D434936C(v2, a2);
}

void *sub_1D43495EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  const void *v10;
  va_list va;

  va_start(va, a10);
  return sub_1D434936C(v10, va);
}

uint64_t sub_1D43495F8()
{
  return sub_1D451B970();
}

uint64_t sub_1D4349604()
{
  uint64_t v0;

  swift_beginAccess();
  nullsub_1(v0 + 16);
  swift_endAccess();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnsafeSoundPrintNode()
{
  return objc_opt_self();
}

char *sub_1D434967C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  char *v7;
  void *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v21 = *(char **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = &v21[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = *(char **)a2;
        v8 = *(void **)(a2 + 8);
        v9 = *(_BYTE *)(a2 + 16);
        sub_1D42B5CE4(*(void **)a2, v8, v9);
        *(_QWORD *)a1 = v7;
        *((_QWORD *)a1 + 1) = v8;
        a1[16] = v9;
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        v10 = *(_QWORD *)(a2 + 48);
        *((_QWORD *)a1 + 5) = *(_QWORD *)(a2 + 40);
        *((_QWORD *)a1 + 6) = v10;
        v11 = *(_QWORD *)(a2 + 56);
        v12 = *(_QWORD *)(a2 + 64);
        v13 = *(_QWORD *)(a2 + 72);
        v14 = *(_QWORD *)(a2 + 80);
        v15 = *(_QWORD *)(a2 + 88);
        v16 = *(_QWORD *)(a2 + 96);
        v17 = *(_BYTE *)(a2 + 104);
        sub_1D42B5CF4(v11, v12, v13, v14, v15, v16, v17);
        *((_QWORD *)a1 + 7) = v11;
        *((_QWORD *)a1 + 8) = v12;
        *((_QWORD *)a1 + 9) = v13;
        *((_QWORD *)a1 + 10) = v14;
        *((_QWORD *)a1 + 11) = v15;
        *((_QWORD *)a1 + 12) = v16;
        a1[104] = v17;
        v18 = *(_QWORD *)(a2 + 120);
        *((_QWORD *)a1 + 14) = *(_QWORD *)(a2 + 112);
        *((_QWORD *)a1 + 15) = v18;
        v19 = *(_QWORD *)(a2 + 136);
        *((_QWORD *)a1 + 16) = *(_QWORD *)(a2 + 128);
        *((_QWORD *)a1 + 17) = v19;
        v20 = *(_QWORD *)(a2 + 152);
        *((_QWORD *)a1 + 18) = *(_QWORD *)(a2 + 144);
        *((_QWORD *)a1 + 19) = v20;
        *((_QWORD *)a1 + 20) = *(_QWORD *)(a2 + 160);
        *((_DWORD *)a1 + 42) = *(_DWORD *)(a2 + 168);
        *((_WORD *)a1 + 86) = *(_WORD *)(a2 + 172);
        *((_QWORD *)a1 + 22) = *(_QWORD *)(a2 + 176);
        a1[184] = *(_BYTE *)(a2 + 184);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 1u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v22 = *(_QWORD *)(a2 + 24);
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        *((_QWORD *)a1 + 3) = v22;
        v23 = *(_QWORD *)(a2 + 40);
        *((_QWORD *)a1 + 4) = *(_QWORD *)(a2 + 32);
        *((_QWORD *)a1 + 5) = v23;
        *((_QWORD *)a1 + 6) = *(_QWORD *)(a2 + 48);
        *((_DWORD *)a1 + 14) = *(_DWORD *)(a2 + 56);
        *((_WORD *)a1 + 30) = *(_WORD *)(a2 + 60);
        v24 = *(_QWORD *)(a2 + 64);
        a1[72] = *(_BYTE *)(a2 + 72);
        *((_QWORD *)a1 + 8) = v24;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 2u:
      case 3u:
        v25 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v25;
        v26 = *(_QWORD *)(a2 + 24);
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        *((_QWORD *)a1 + 3) = v26;
        v27 = *(_QWORD *)(a2 + 40);
        *((_QWORD *)a1 + 4) = *(_QWORD *)(a2 + 32);
        *((_QWORD *)a1 + 5) = v27;
        *((_DWORD *)a1 + 12) = *(_DWORD *)(a2 + 48);
        *((_WORD *)a1 + 26) = *(_WORD *)(a2 + 52);
        v28 = *(_QWORD *)(a2 + 56);
        a1[64] = *(_BYTE *)(a2 + 64);
        *((_QWORD *)a1 + 7) = v28;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 4u:
        v29 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v29;
        *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
        v30 = *(_QWORD *)(a2 + 56);
        *((_QWORD *)a1 + 6) = *(_QWORD *)(a2 + 48);
        *((_QWORD *)a1 + 7) = v30;
        v31 = *(_QWORD *)(a2 + 72);
        *((_QWORD *)a1 + 8) = *(_QWORD *)(a2 + 64);
        *((_QWORD *)a1 + 9) = v31;
        v32 = *(_QWORD *)(a2 + 88);
        *((_QWORD *)a1 + 10) = *(_QWORD *)(a2 + 80);
        *((_QWORD *)a1 + 11) = v32;
        *((_QWORD *)a1 + 12) = *(_QWORD *)(a2 + 96);
        *((_DWORD *)a1 + 26) = *(_DWORD *)(a2 + 104);
        *((_WORD *)a1 + 54) = *(_WORD *)(a2 + 108);
        *((_QWORD *)a1 + 14) = *(_QWORD *)(a2 + 112);
        a1[120] = *(_BYTE *)(a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 5u:
        v33 = *(void **)a2;
        v34 = *(void **)(a2 + 8);
        v35 = *(_BYTE *)(a2 + 16);
        sub_1D42B633C(*(id *)a2, v34, v35);
        *(_QWORD *)a1 = v33;
        *((_QWORD *)a1 + 1) = v34;
        a1[16] = v35;
        v36 = *(_QWORD *)(a2 + 32);
        *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
        *((_QWORD *)a1 + 4) = v36;
        v38 = *(void **)(a2 + 40);
        v37 = *(_QWORD *)(a2 + 48);
        *((_QWORD *)a1 + 5) = v38;
        *((_QWORD *)a1 + 6) = v37;
        v39 = *(_QWORD *)(a2 + 64);
        *((_QWORD *)a1 + 7) = *(_QWORD *)(a2 + 56);
        *((_QWORD *)a1 + 8) = v39;
        v40 = *(_QWORD *)(a2 + 80);
        *((_QWORD *)a1 + 9) = *(_QWORD *)(a2 + 72);
        *((_QWORD *)a1 + 10) = v40;
        *((_QWORD *)a1 + 11) = *(_QWORD *)(a2 + 88);
        *((_DWORD *)a1 + 24) = *(_DWORD *)(a2 + 96);
        *((_WORD *)a1 + 50) = *(_WORD *)(a2 + 100);
        *((_QWORD *)a1 + 13) = *(_QWORD *)(a2 + 104);
        a1[112] = *(_BYTE *)(a2 + 112);
        swift_bridgeObjectRetain();
        v41 = v38;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 6u:
        v42 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v42;
        v43 = *(_QWORD *)(a2 + 24);
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        *((_QWORD *)a1 + 3) = v43;
        v44 = *(_QWORD *)(a2 + 40);
        *((_QWORD *)a1 + 4) = *(_QWORD *)(a2 + 32);
        *((_QWORD *)a1 + 5) = v44;
        v45 = *(_QWORD *)(a2 + 56);
        *((_QWORD *)a1 + 6) = *(_QWORD *)(a2 + 48);
        *((_QWORD *)a1 + 7) = v45;
        *((_DWORD *)a1 + 16) = *(_DWORD *)(a2 + 64);
        a1[68] = *(_BYTE *)(a2 + 68);
        a1[69] = *(_BYTE *)(a2 + 69);
        *((_QWORD *)a1 + 9) = *(_QWORD *)(a2 + 72);
        a1[80] = *(_BYTE *)(a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 7u:
        v58 = *(_QWORD *)(a2 + 64);
        v59 = *(_QWORD *)(a2 + 72);
        v60 = *(_QWORD *)(a2 + 80);
        v61 = *(_QWORD *)(a2 + 88);
        v62 = *(_QWORD *)(a2 + 96);
        v63 = *(_QWORD *)(a2 + 104);
        v64 = *(_QWORD *)(a2 + 112);
        v65 = *(_QWORD *)(a2 + 120);
        v66 = *(_QWORD *)(a2 + 128);
        v67 = *(_QWORD *)(a2 + 136);
        v68 = *(_QWORD *)(a2 + 144);
        v69 = *(_QWORD *)(a2 + 152);
        v70 = *(_QWORD *)(a2 + 160);
        v71 = *(_QWORD *)(a2 + 168);
        v72 = *(_QWORD *)(a2 + 176);
        v73 = *(_QWORD *)(a2 + 184);
        v74 = *(_QWORD *)(a2 + 192);
        v75 = *(_QWORD *)(a2 + 200);
        v76 = *(_BYTE *)(a2 + 208);
        v46 = *(void **)a2;
        v47 = *(_QWORD *)(a2 + 8);
        v48 = *(_QWORD *)(a2 + 16);
        v49 = *(_QWORD *)(a2 + 24);
        v50 = *(_QWORD *)(a2 + 32);
        v51 = *(_QWORD *)(a2 + 40);
        v52 = *(_QWORD *)(a2 + 48);
        v53 = *(_QWORD *)(a2 + 56);
        sub_1D4349CB0((uint64_t)v46, v47, v48, v49, v50, v51, v52, v53, v58, v59, v60, v61, v62, v63, v64, v65, v66, v67, v68,
          v69,
          v70,
          v71,
          v72,
          v73,
          v74,
          v75,
          v76);
        *(_QWORD *)a1 = v46;
        *((_QWORD *)a1 + 1) = v47;
        *((_QWORD *)a1 + 2) = v48;
        *((_QWORD *)a1 + 3) = v49;
        *((_QWORD *)a1 + 4) = v50;
        *((_QWORD *)a1 + 5) = v51;
        *((_QWORD *)a1 + 6) = v52;
        *((_QWORD *)a1 + 7) = v53;
        *((_QWORD *)a1 + 8) = v58;
        *((_QWORD *)a1 + 9) = v59;
        *((_QWORD *)a1 + 10) = v60;
        *((_QWORD *)a1 + 11) = v61;
        *((_QWORD *)a1 + 12) = v62;
        *((_QWORD *)a1 + 13) = v63;
        *((_QWORD *)a1 + 14) = v64;
        *((_QWORD *)a1 + 15) = v65;
        *((_QWORD *)a1 + 16) = v66;
        *((_QWORD *)a1 + 17) = v67;
        *((_QWORD *)a1 + 18) = v68;
        *((_QWORD *)a1 + 19) = v69;
        *((_QWORD *)a1 + 20) = v70;
        *((_QWORD *)a1 + 21) = v71;
        *((_QWORD *)a1 + 22) = v72;
        *((_QWORD *)a1 + 23) = v73;
        *((_QWORD *)a1 + 24) = v74;
        *((_QWORD *)a1 + 25) = v75;
        a1[208] = v76;
        goto LABEL_16;
      case 8u:
        v54 = sub_1D4519BC4();
        if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a2, 1, v54))
        {
          v55 = sub_1D42B28FC(qword_1EFE47450);
          memcpy(a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(a1, a2, v54);
          _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v54);
        }
        v56 = type metadata accessor for AOPClassificationDemo.Request();
        a1[*(int *)(v56 + 20)] = *(_BYTE *)(a2 + *(int *)(v56 + 20));
LABEL_16:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, (const void *)a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1D4349CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t result;

  if ((a27 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D4349E5C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      sub_1D42B5C3C(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
      sub_1D42B5C4C(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_BYTE *)(a1 + 104));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 1:
    case 2:
    case 3:
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 5:
      sub_1D42B62C8(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_6:
      result = swift_bridgeObjectRelease();
      break;
    case 7:
      result = sub_1D434A018(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
                 *(_QWORD *)(a1 + 152),
                 *(_QWORD *)(a1 + 160),
                 *(_QWORD *)(a1 + 168),
                 *(_QWORD *)(a1 + 176),
                 *(_QWORD *)(a1 + 184),
                 *(_QWORD *)(a1 + 192),
                 *(_QWORD *)(a1 + 200),
                 *(_BYTE *)(a1 + 208));
      break;
    case 8:
      v3 = sub_1D4519BC4();
      result = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, 1, v3);
      if (!(_DWORD)result)
        result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D434A018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t result;

  if ((a27 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_1D434A1C4(char *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = *(void **)a2;
      v7 = *(void **)(a2 + 8);
      v8 = *(_BYTE *)(a2 + 16);
      sub_1D42B5CE4(*(void **)a2, v7, v8);
      *(_QWORD *)a1 = v6;
      *((_QWORD *)a1 + 1) = v7;
      a1[16] = v8;
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      v9 = *(_QWORD *)(a2 + 48);
      *((_QWORD *)a1 + 5) = *(_QWORD *)(a2 + 40);
      *((_QWORD *)a1 + 6) = v9;
      v10 = *(_QWORD *)(a2 + 56);
      v11 = *(_QWORD *)(a2 + 64);
      v12 = *(_QWORD *)(a2 + 72);
      v13 = *(_QWORD *)(a2 + 80);
      v14 = *(_QWORD *)(a2 + 88);
      v15 = *(_QWORD *)(a2 + 96);
      v16 = *(_BYTE *)(a2 + 104);
      sub_1D42B5CF4(v10, v11, v12, v13, v14, v15, v16);
      *((_QWORD *)a1 + 7) = v10;
      *((_QWORD *)a1 + 8) = v11;
      *((_QWORD *)a1 + 9) = v12;
      *((_QWORD *)a1 + 10) = v13;
      *((_QWORD *)a1 + 11) = v14;
      *((_QWORD *)a1 + 12) = v15;
      a1[104] = v16;
      v17 = *(_QWORD *)(a2 + 120);
      *((_QWORD *)a1 + 14) = *(_QWORD *)(a2 + 112);
      *((_QWORD *)a1 + 15) = v17;
      v18 = *(_QWORD *)(a2 + 136);
      *((_QWORD *)a1 + 16) = *(_QWORD *)(a2 + 128);
      *((_QWORD *)a1 + 17) = v18;
      v19 = *(_QWORD *)(a2 + 152);
      *((_QWORD *)a1 + 18) = *(_QWORD *)(a2 + 144);
      *((_QWORD *)a1 + 19) = v19;
      *((_QWORD *)a1 + 20) = *(_QWORD *)(a2 + 160);
      *((_DWORD *)a1 + 42) = *(_DWORD *)(a2 + 168);
      *((_WORD *)a1 + 86) = *(_WORD *)(a2 + 172);
      *((_QWORD *)a1 + 22) = *(_QWORD *)(a2 + 176);
      a1[184] = *(_BYTE *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 1u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v20 = *(_QWORD *)(a2 + 24);
      *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
      *((_QWORD *)a1 + 3) = v20;
      v21 = *(_QWORD *)(a2 + 40);
      *((_QWORD *)a1 + 4) = *(_QWORD *)(a2 + 32);
      *((_QWORD *)a1 + 5) = v21;
      *((_QWORD *)a1 + 6) = *(_QWORD *)(a2 + 48);
      *((_DWORD *)a1 + 14) = *(_DWORD *)(a2 + 56);
      *((_WORD *)a1 + 30) = *(_WORD *)(a2 + 60);
      v22 = *(_QWORD *)(a2 + 64);
      a1[72] = *(_BYTE *)(a2 + 72);
      *((_QWORD *)a1 + 8) = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 2u:
    case 3u:
      v23 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v23;
      v24 = *(_QWORD *)(a2 + 24);
      *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
      *((_QWORD *)a1 + 3) = v24;
      v25 = *(_QWORD *)(a2 + 40);
      *((_QWORD *)a1 + 4) = *(_QWORD *)(a2 + 32);
      *((_QWORD *)a1 + 5) = v25;
      *((_DWORD *)a1 + 12) = *(_DWORD *)(a2 + 48);
      *((_WORD *)a1 + 26) = *(_WORD *)(a2 + 52);
      v26 = *(_QWORD *)(a2 + 56);
      a1[64] = *(_BYTE *)(a2 + 64);
      *((_QWORD *)a1 + 7) = v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 4u:
      v27 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v27;
      *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
      v28 = *(_QWORD *)(a2 + 56);
      *((_QWORD *)a1 + 6) = *(_QWORD *)(a2 + 48);
      *((_QWORD *)a1 + 7) = v28;
      v29 = *(_QWORD *)(a2 + 72);
      *((_QWORD *)a1 + 8) = *(_QWORD *)(a2 + 64);
      *((_QWORD *)a1 + 9) = v29;
      v30 = *(_QWORD *)(a2 + 88);
      *((_QWORD *)a1 + 10) = *(_QWORD *)(a2 + 80);
      *((_QWORD *)a1 + 11) = v30;
      *((_QWORD *)a1 + 12) = *(_QWORD *)(a2 + 96);
      *((_DWORD *)a1 + 26) = *(_DWORD *)(a2 + 104);
      *((_WORD *)a1 + 54) = *(_WORD *)(a2 + 108);
      *((_QWORD *)a1 + 14) = *(_QWORD *)(a2 + 112);
      a1[120] = *(_BYTE *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 5u:
      v31 = *(void **)a2;
      v32 = *(void **)(a2 + 8);
      v33 = *(_BYTE *)(a2 + 16);
      sub_1D42B633C(*(id *)a2, v32, v33);
      *(_QWORD *)a1 = v31;
      *((_QWORD *)a1 + 1) = v32;
      a1[16] = v33;
      v34 = *(_QWORD *)(a2 + 32);
      *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
      *((_QWORD *)a1 + 4) = v34;
      v36 = *(void **)(a2 + 40);
      v35 = *(_QWORD *)(a2 + 48);
      *((_QWORD *)a1 + 5) = v36;
      *((_QWORD *)a1 + 6) = v35;
      v37 = *(_QWORD *)(a2 + 64);
      *((_QWORD *)a1 + 7) = *(_QWORD *)(a2 + 56);
      *((_QWORD *)a1 + 8) = v37;
      v38 = *(_QWORD *)(a2 + 80);
      *((_QWORD *)a1 + 9) = *(_QWORD *)(a2 + 72);
      *((_QWORD *)a1 + 10) = v38;
      *((_QWORD *)a1 + 11) = *(_QWORD *)(a2 + 88);
      *((_DWORD *)a1 + 24) = *(_DWORD *)(a2 + 96);
      *((_WORD *)a1 + 50) = *(_WORD *)(a2 + 100);
      *((_QWORD *)a1 + 13) = *(_QWORD *)(a2 + 104);
      a1[112] = *(_BYTE *)(a2 + 112);
      swift_bridgeObjectRetain();
      v39 = v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 6u:
      v40 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v40;
      v41 = *(_QWORD *)(a2 + 24);
      *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
      *((_QWORD *)a1 + 3) = v41;
      v42 = *(_QWORD *)(a2 + 40);
      *((_QWORD *)a1 + 4) = *(_QWORD *)(a2 + 32);
      *((_QWORD *)a1 + 5) = v42;
      v43 = *(_QWORD *)(a2 + 56);
      *((_QWORD *)a1 + 6) = *(_QWORD *)(a2 + 48);
      *((_QWORD *)a1 + 7) = v43;
      *((_DWORD *)a1 + 16) = *(_DWORD *)(a2 + 64);
      a1[68] = *(_BYTE *)(a2 + 68);
      a1[69] = *(_BYTE *)(a2 + 69);
      *((_QWORD *)a1 + 9) = *(_QWORD *)(a2 + 72);
      a1[80] = *(_BYTE *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 7u:
      v56 = *(_QWORD *)(a2 + 64);
      v57 = *(_QWORD *)(a2 + 72);
      v58 = *(_QWORD *)(a2 + 80);
      v59 = *(_QWORD *)(a2 + 88);
      v60 = *(_QWORD *)(a2 + 96);
      v61 = *(_QWORD *)(a2 + 104);
      v62 = *(_QWORD *)(a2 + 112);
      v63 = *(_QWORD *)(a2 + 120);
      v64 = *(_QWORD *)(a2 + 128);
      v65 = *(_QWORD *)(a2 + 136);
      v66 = *(_QWORD *)(a2 + 144);
      v67 = *(_QWORD *)(a2 + 152);
      v68 = *(_QWORD *)(a2 + 160);
      v69 = *(_QWORD *)(a2 + 168);
      v70 = *(_QWORD *)(a2 + 176);
      v71 = *(_QWORD *)(a2 + 184);
      v72 = *(_QWORD *)(a2 + 192);
      v73 = *(_QWORD *)(a2 + 200);
      v74 = *(_BYTE *)(a2 + 208);
      v44 = *(void **)a2;
      v45 = *(_QWORD *)(a2 + 8);
      v46 = *(_QWORD *)(a2 + 16);
      v47 = *(_QWORD *)(a2 + 24);
      v48 = *(_QWORD *)(a2 + 32);
      v49 = *(_QWORD *)(a2 + 40);
      v50 = *(_QWORD *)(a2 + 48);
      v51 = *(_QWORD *)(a2 + 56);
      sub_1D4349CB0((uint64_t)v44, v45, v46, v47, v48, v49, v50, v51, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66,
        v67,
        v68,
        v69,
        v70,
        v71,
        v72,
        v73,
        v74);
      *(_QWORD *)a1 = v44;
      *((_QWORD *)a1 + 1) = v45;
      *((_QWORD *)a1 + 2) = v46;
      *((_QWORD *)a1 + 3) = v47;
      *((_QWORD *)a1 + 4) = v48;
      *((_QWORD *)a1 + 5) = v49;
      *((_QWORD *)a1 + 6) = v50;
      *((_QWORD *)a1 + 7) = v51;
      *((_QWORD *)a1 + 8) = v56;
      *((_QWORD *)a1 + 9) = v57;
      *((_QWORD *)a1 + 10) = v58;
      *((_QWORD *)a1 + 11) = v59;
      *((_QWORD *)a1 + 12) = v60;
      *((_QWORD *)a1 + 13) = v61;
      *((_QWORD *)a1 + 14) = v62;
      *((_QWORD *)a1 + 15) = v63;
      *((_QWORD *)a1 + 16) = v64;
      *((_QWORD *)a1 + 17) = v65;
      *((_QWORD *)a1 + 18) = v66;
      *((_QWORD *)a1 + 19) = v67;
      *((_QWORD *)a1 + 20) = v68;
      *((_QWORD *)a1 + 21) = v69;
      *((_QWORD *)a1 + 22) = v70;
      *((_QWORD *)a1 + 23) = v71;
      *((_QWORD *)a1 + 24) = v72;
      *((_QWORD *)a1 + 25) = v73;
      a1[208] = v74;
      goto LABEL_14;
    case 8u:
      v52 = sub_1D4519BC4();
      if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a2, 1, v52))
      {
        v53 = sub_1D42B28FC(qword_1EFE47450);
        memcpy(a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(a1, a2, v52);
        _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v52);
      }
      v54 = type metadata accessor for AOPClassificationDemo.Request();
      a1[*(int *)(v54 + 20)] = *(_BYTE *)(a2 + *(int *)(v54 + 20));
LABEL_14:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1D434A7D0(char *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  char v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  void *v24;
  void *v25;
  char v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;

  if (a1 != (char *)a2)
  {
    sub_1D4325D80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for RemoteRequest);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = *(void **)a2;
        v7 = *(void **)(a2 + 8);
        v8 = *(_BYTE *)(a2 + 16);
        sub_1D42B5CE4(*(void **)a2, v7, v8);
        *(_QWORD *)a1 = v6;
        *((_QWORD *)a1 + 1) = v7;
        a1[16] = v8;
        v9 = *(_OWORD *)(a2 + 24);
        *((_QWORD *)a1 + 5) = *(_QWORD *)(a2 + 40);
        *(_OWORD *)(a1 + 24) = v9;
        *((_QWORD *)a1 + 6) = *(_QWORD *)(a2 + 48);
        v10 = *(_QWORD *)(a2 + 56);
        v11 = *(_QWORD *)(a2 + 64);
        v12 = *(_QWORD *)(a2 + 72);
        v13 = *(_QWORD *)(a2 + 80);
        v14 = *(_QWORD *)(a2 + 88);
        v15 = *(_QWORD *)(a2 + 96);
        v16 = *(_BYTE *)(a2 + 104);
        sub_1D42B5CF4(v10, v11, v12, v13, v14, v15, v16);
        *((_QWORD *)a1 + 7) = v10;
        *((_QWORD *)a1 + 8) = v11;
        *((_QWORD *)a1 + 9) = v12;
        *((_QWORD *)a1 + 10) = v13;
        *((_QWORD *)a1 + 11) = v14;
        *((_QWORD *)a1 + 12) = v15;
        a1[104] = v16;
        *((_QWORD *)a1 + 14) = *(_QWORD *)(a2 + 112);
        *((_QWORD *)a1 + 15) = *(_QWORD *)(a2 + 120);
        *((_QWORD *)a1 + 16) = *(_QWORD *)(a2 + 128);
        *((_QWORD *)a1 + 17) = *(_QWORD *)(a2 + 136);
        *((_QWORD *)a1 + 18) = *(_QWORD *)(a2 + 144);
        *((_QWORD *)a1 + 19) = *(_QWORD *)(a2 + 152);
        *((_QWORD *)a1 + 20) = *(_QWORD *)(a2 + 160);
        a1[168] = *(_BYTE *)(a2 + 168);
        a1[169] = *(_BYTE *)(a2 + 169);
        a1[170] = *(_BYTE *)(a2 + 170);
        a1[171] = *(_BYTE *)(a2 + 171);
        a1[172] = *(_BYTE *)(a2 + 172);
        a1[173] = *(_BYTE *)(a2 + 173);
        v17 = *(_QWORD *)(a2 + 176);
        a1[184] = *(_BYTE *)(a2 + 184);
        *((_QWORD *)a1 + 22) = v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_15;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *(_QWORD *)(a2 + 8);
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
        *((_QWORD *)a1 + 4) = *(_QWORD *)(a2 + 32);
        *((_QWORD *)a1 + 5) = *(_QWORD *)(a2 + 40);
        *((_QWORD *)a1 + 6) = *(_QWORD *)(a2 + 48);
        a1[56] = *(_BYTE *)(a2 + 56);
        a1[57] = *(_BYTE *)(a2 + 57);
        a1[58] = *(_BYTE *)(a2 + 58);
        a1[59] = *(_BYTE *)(a2 + 59);
        a1[60] = *(_BYTE *)(a2 + 60);
        a1[61] = *(_BYTE *)(a2 + 61);
        v18 = *(_QWORD *)(a2 + 64);
        a1[72] = *(_BYTE *)(a2 + 72);
        *((_QWORD *)a1 + 8) = v18;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_15;
      case 2u:
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *(_QWORD *)(a2 + 8);
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
        *((_QWORD *)a1 + 4) = *(_QWORD *)(a2 + 32);
        *((_QWORD *)a1 + 5) = *(_QWORD *)(a2 + 40);
        a1[48] = *(_BYTE *)(a2 + 48);
        a1[49] = *(_BYTE *)(a2 + 49);
        a1[50] = *(_BYTE *)(a2 + 50);
        a1[51] = *(_BYTE *)(a2 + 51);
        a1[52] = *(_BYTE *)(a2 + 52);
        a1[53] = *(_BYTE *)(a2 + 53);
        v19 = *(_QWORD *)(a2 + 56);
        a1[64] = *(_BYTE *)(a2 + 64);
        *((_QWORD *)a1 + 7) = v19;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_15;
      case 4u:
        v20 = *(_OWORD *)a2;
        v21 = *(_OWORD *)(a2 + 16);
        v22 = *(_OWORD *)(a2 + 32);
        *((_QWORD *)a1 + 6) = *(_QWORD *)(a2 + 48);
        *((_OWORD *)a1 + 1) = v21;
        *((_OWORD *)a1 + 2) = v22;
        *(_OWORD *)a1 = v20;
        *((_QWORD *)a1 + 7) = *(_QWORD *)(a2 + 56);
        *((_QWORD *)a1 + 8) = *(_QWORD *)(a2 + 64);
        *((_QWORD *)a1 + 9) = *(_QWORD *)(a2 + 72);
        *((_QWORD *)a1 + 10) = *(_QWORD *)(a2 + 80);
        *((_QWORD *)a1 + 11) = *(_QWORD *)(a2 + 88);
        *((_QWORD *)a1 + 12) = *(_QWORD *)(a2 + 96);
        a1[104] = *(_BYTE *)(a2 + 104);
        a1[105] = *(_BYTE *)(a2 + 105);
        a1[106] = *(_BYTE *)(a2 + 106);
        a1[107] = *(_BYTE *)(a2 + 107);
        a1[108] = *(_BYTE *)(a2 + 108);
        a1[109] = *(_BYTE *)(a2 + 109);
        v23 = *(_QWORD *)(a2 + 112);
        a1[120] = *(_BYTE *)(a2 + 120);
        *((_QWORD *)a1 + 14) = v23;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_15;
      case 5u:
        v24 = *(void **)a2;
        v25 = *(void **)(a2 + 8);
        v26 = *(_BYTE *)(a2 + 16);
        sub_1D42B633C(*(id *)a2, v25, v26);
        *(_QWORD *)a1 = v24;
        *((_QWORD *)a1 + 1) = v25;
        a1[16] = v26;
        *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
        *((_QWORD *)a1 + 4) = *(_QWORD *)(a2 + 32);
        v27 = *(void **)(a2 + 40);
        *((_QWORD *)a1 + 5) = v27;
        *((_QWORD *)a1 + 6) = *(_QWORD *)(a2 + 48);
        *((_QWORD *)a1 + 7) = *(_QWORD *)(a2 + 56);
        *((_QWORD *)a1 + 8) = *(_QWORD *)(a2 + 64);
        *((_QWORD *)a1 + 9) = *(_QWORD *)(a2 + 72);
        *((_QWORD *)a1 + 10) = *(_QWORD *)(a2 + 80);
        *((_QWORD *)a1 + 11) = *(_QWORD *)(a2 + 88);
        a1[96] = *(_BYTE *)(a2 + 96);
        a1[97] = *(_BYTE *)(a2 + 97);
        a1[98] = *(_BYTE *)(a2 + 98);
        a1[99] = *(_BYTE *)(a2 + 99);
        a1[100] = *(_BYTE *)(a2 + 100);
        a1[101] = *(_BYTE *)(a2 + 101);
        v28 = *(_QWORD *)(a2 + 104);
        a1[112] = *(_BYTE *)(a2 + 112);
        *((_QWORD *)a1 + 13) = v28;
        swift_bridgeObjectRetain();
        v29 = v27;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_15;
      case 6u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *(_QWORD *)(a2 + 8);
        *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
        *((_QWORD *)a1 + 3) = *(_QWORD *)(a2 + 24);
        *((_QWORD *)a1 + 4) = *(_QWORD *)(a2 + 32);
        *((_QWORD *)a1 + 5) = *(_QWORD *)(a2 + 40);
        *((_QWORD *)a1 + 6) = *(_QWORD *)(a2 + 48);
        *((_QWORD *)a1 + 7) = *(_QWORD *)(a2 + 56);
        a1[64] = *(_BYTE *)(a2 + 64);
        a1[65] = *(_BYTE *)(a2 + 65);
        a1[66] = *(_BYTE *)(a2 + 66);
        a1[67] = *(_BYTE *)(a2 + 67);
        a1[68] = *(_BYTE *)(a2 + 68);
        a1[69] = *(_BYTE *)(a2 + 69);
        v30 = *(_QWORD *)(a2 + 72);
        a1[80] = *(_BYTE *)(a2 + 80);
        *((_QWORD *)a1 + 9) = v30;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_15;
      case 7u:
        v43 = *(_QWORD *)(a2 + 64);
        v44 = *(_QWORD *)(a2 + 72);
        v45 = *(_QWORD *)(a2 + 80);
        v46 = *(_QWORD *)(a2 + 88);
        v47 = *(_QWORD *)(a2 + 96);
        v48 = *(_QWORD *)(a2 + 104);
        v49 = *(_QWORD *)(a2 + 112);
        v50 = *(_QWORD *)(a2 + 120);
        v51 = *(_QWORD *)(a2 + 128);
        v52 = *(_QWORD *)(a2 + 136);
        v53 = *(_QWORD *)(a2 + 144);
        v54 = *(_QWORD *)(a2 + 152);
        v55 = *(_QWORD *)(a2 + 160);
        v56 = *(_QWORD *)(a2 + 168);
        v57 = *(_QWORD *)(a2 + 176);
        v58 = *(_QWORD *)(a2 + 184);
        v59 = *(_QWORD *)(a2 + 192);
        v60 = *(_QWORD *)(a2 + 200);
        v61 = *(_BYTE *)(a2 + 208);
        v31 = *(void **)a2;
        v32 = *(_QWORD *)(a2 + 8);
        v33 = *(_QWORD *)(a2 + 16);
        v34 = *(_QWORD *)(a2 + 24);
        v35 = *(_QWORD *)(a2 + 32);
        v36 = *(_QWORD *)(a2 + 40);
        v37 = *(_QWORD *)(a2 + 48);
        v38 = *(_QWORD *)(a2 + 56);
        sub_1D4349CB0((uint64_t)v31, v32, v33, v34, v35, v36, v37, v38, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53,
          v54,
          v55,
          v56,
          v57,
          v58,
          v59,
          v60,
          v61);
        *(_QWORD *)a1 = v31;
        *((_QWORD *)a1 + 1) = v32;
        *((_QWORD *)a1 + 2) = v33;
        *((_QWORD *)a1 + 3) = v34;
        *((_QWORD *)a1 + 4) = v35;
        *((_QWORD *)a1 + 5) = v36;
        *((_QWORD *)a1 + 6) = v37;
        *((_QWORD *)a1 + 7) = v38;
        *((_QWORD *)a1 + 8) = v43;
        *((_QWORD *)a1 + 9) = v44;
        *((_QWORD *)a1 + 10) = v45;
        *((_QWORD *)a1 + 11) = v46;
        *((_QWORD *)a1 + 12) = v47;
        *((_QWORD *)a1 + 13) = v48;
        *((_QWORD *)a1 + 14) = v49;
        *((_QWORD *)a1 + 15) = v50;
        *((_QWORD *)a1 + 16) = v51;
        *((_QWORD *)a1 + 17) = v52;
        *((_QWORD *)a1 + 18) = v53;
        *((_QWORD *)a1 + 19) = v54;
        *((_QWORD *)a1 + 20) = v55;
        *((_QWORD *)a1 + 21) = v56;
        *((_QWORD *)a1 + 22) = v57;
        *((_QWORD *)a1 + 23) = v58;
        *((_QWORD *)a1 + 24) = v59;
        *((_QWORD *)a1 + 25) = v60;
        a1[208] = v61;
        goto LABEL_15;
      case 8u:
        v39 = sub_1D4519BC4();
        if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a2, 1, v39))
        {
          v40 = sub_1D42B28FC(qword_1EFE47450);
          memcpy(a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(a1, a2, v39);
          _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v39);
        }
        v41 = type metadata accessor for AOPClassificationDemo.Request();
        a1[*(int *)(v41 + 20)] = *(_BYTE *)(a2 + *(int *)(v41 + 20));
LABEL_15:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for RemoteRequest()
{
  uint64_t result;

  result = qword_1EFE4C898;
  if (!qword_1EFE4C898)
    return swift_getSingletonMetadata();
  return result;
}

void *sub_1D434AFC4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (swift_getEnumCaseMultiPayload() == 8)
  {
    v6 = sub_1D4519BC4();
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, v6))
    {
      v7 = sub_1D42B28FC(qword_1EFE47450);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v6);
    }
    v8 = type metadata accessor for AOPClassificationDemo.Request();
    *((_BYTE *)a1 + *(int *)(v8 + 20)) = *((_BYTE *)a2 + *(int *)(v8 + 20));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1D434B0B4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1D4325D80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for RemoteRequest);
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      v6 = sub_1D4519BC4();
      if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, v6))
      {
        v7 = sub_1D42B28FC(qword_1EFE47450);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v6);
      }
      v8 = type metadata accessor for AOPClassificationDemo.Request();
      *((_BYTE *)a1 + *(int *)(v8 + 20)) = *((_BYTE *)a2 + *(int *)(v8 + 20));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1D434B1C8()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1D434B1D8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AOPClassificationDemo.Request();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1D434B284(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[178] = v2;
  v3[177] = a2;
  v3[176] = a1;
  sub_1D4328B48();
  v3[179] = sub_1D42E3C80();
  v3[180] = sub_1D435ED4C();
  v3[181] = sub_1D42E3C80();
  return sub_1D42B8DA8();
}

void sub_1D434B2D8()
{
  uint64_t v0;
  char *v1;

  sub_1D435ED30(*(_QWORD *)(v0 + 1424));
  v1 = (char *)sub_1D434B38C + 4 * byte_1D452D640[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1D434B38C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 *a9)
{
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void);

  sub_1D435EBC8();
  sub_1D435EBC0(v11, v12);
  sub_1D435EB38();
  v15 = sub_1D434E3F0(v13, v14);
  if (v9)
  {
    sub_1D435C34C((uint64_t)v11);
    sub_1D435EA54();
    sub_1D42E3E5C();
  }
  else
  {
    v16 = v15;
    v17 = v10[176];
    v10[174] = &unk_1E979A628;
    v10[175] = &off_1E979A608;
    sub_1D435C34C((uint64_t)v11);
    v10[171] = v16;
    sub_1D42E33E0(a9, v17);
    sub_1D435EA54();
    sub_1D42E3E5C();
    sub_1D42E3DD0();
  }
  sub_1D435EB54();
  return v18();
}

uint64_t sub_1D434B960()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 1464) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_1D435C794(v2 + 16);
  return swift_task_switch();
}

uint64_t sub_1D434B9D4()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_1D42E33E0((__int128 *)(v0 + 1048), *(_QWORD *)(v0 + 1408));
  sub_1D435EA54();
  sub_1D42E3E5C();
  v1 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42B8DC0(v1);
}

uint64_t sub_1D434BA08()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1480) = v0;
  swift_task_dealloc();
  return sub_1D42B8DA8();
}

uint64_t sub_1D434BA64()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_1D42E33E0((__int128 *)(v0 + 1008), *(_QWORD *)(v0 + 1408));
  sub_1D435EA54();
  sub_1D42E3E5C();
  v1 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42B8DC0(v1);
}

uint64_t sub_1D434BA98()
{
  uint64_t v0;

  sub_1D435C794(v0 + 16);
  sub_1D4306718(v0 + 1048);
  sub_1D435EC30();
  swift_task_dealloc();
  return sub_1D42E39E4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D434BAE4()
{
  uint64_t v0;

  sub_1D4306718(v0 + 1008);
  sub_1D435EC30();
  swift_task_dealloc();
  return sub_1D42E39E4(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1D434BB1C(void *__src)
{
  _BYTE __dst[88];

  memcpy(__dst, __src, sizeof(__dst));
  sub_1D42BE934();
  sub_1D42BE984();
  sub_1D435C664();
  sub_1D447130C();
}

uint64_t sub_1D434BB90(uint64_t a1)
{
  sub_1D435C6A4();
  swift_release();
  sub_1D42FC448();
  return a1;
}

uint64_t sub_1D434BBCC(uint64_t a1, uint64_t a2)
{
  const void *v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[6];
  _QWORD v9[2];

  v5 = swift_allocObject();
  memcpy((void *)(v5 + 16), v2, 0x48uLL);
  v9[0] = a1;
  v9[1] = a2;
  v8[2] = sub_1D435DB50;
  v8[3] = v5;
  v8[4] = v9;
  swift_retain();
  sub_1D435DA44((uint64_t)v2);
  v6 = sub_1D4471480(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1D435DB68, (uint64_t)v8);
  swift_release();
  swift_release();
  return v6;
}

void sub_1D434BC9C(_QWORD *a1)
{
  sub_1D43529B8(a1, (uint64_t)sub_1D435C5B4);
}

uint64_t sub_1D434BCD0(void *__src)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE __dst[80];

  memcpy(__dst, __src, sizeof(__dst));
  swift_retain();
  swift_retain();
  sub_1D435C664();
  sub_1D44712C8();
  v2 = v1;
  sub_1D435C6A4();
  swift_release();
  swift_release();
  return v2;
}

uint64_t sub_1D434BD8C()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = swift_allocObject();
  memcpy((void *)(v1 + 16), v0, 0x48uLL);
  swift_retain();
  sub_1D435DA44((uint64_t)v0);
  sub_1D447153C();
  v3 = v2;
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_1D434BE54(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  _QWORD v16[5];
  _QWORD v17[15];
  _BYTE __dst[72];
  __int128 v19[3];

  v17[3] = &type metadata for RuntimeFeatureFlags.SoundAnalysis;
  v17[4] = sub_1D435C408();
  v5 = sub_1D4519D80();
  sub_1D42B5400((uint64_t)v17);
  if ((v5 & 1) != 0)
  {
    v6 = a1[1];
    v19[0] = *a1;
    v19[1] = v6;
    v19[2] = a1[2];
    memcpy(__dst, a1 + 3, 0x41uLL);
    v7 = type metadata accessor for SNDetectSoundRequest();
    v8 = a2;
    v9 = v7;
    v10 = sub_1D434BFA8(v19, (uint64_t)__dst, v8);
    if (!v2)
      return v10;
  }
  else
  {
    memcpy(v17, a1, 0x71uLL);
    v16[3] = &unk_1E979AD08;
    v16[4] = &off_1E979ACE8;
    v11 = swift_allocObject();
    v16[0] = v11;
    v12 = *(_QWORD *)(a2 + 32);
    v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v11 + 16) = *(_OWORD *)a2;
    *(_OWORD *)(v11 + 32) = v13;
    *(_QWORD *)(v11 + 48) = v12;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1D42EC870();
    v9 = v14;
    sub_1D42B5400((uint64_t)v16);
  }
  return v9;
}

uint64_t sub_1D434BFA8(__int128 *a1, uint64_t a2, uint64_t a3)
{
  id v3;
  uint8x8_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  __int128 v24;
  uint64_t *v25;
  void *v26;
  uint64_t result;
  id v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  unint64_t v47;
  uint64_t v48;
  id v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int16x8_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  _BYTE *v62;
  id v63;
  uint8x8_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t (**v71)@<X0>(uint64_t *@<X8>);
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  int v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t (**v125)@<X0>(uint64_t *@<X8>);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  uint64_t v134;
  __int128 v135;
  __int128 v136;
  uint64_t v137;
  _QWORD __src[6];
  unsigned __int32 v139;
  char v140;
  char v141;
  uint64_t v142;
  char v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t *v146;

  v130 = a3;
  v118 = *(_QWORD *)a2;
  v117 = *(_QWORD *)(a2 + 8);
  v116 = *(_QWORD *)(a2 + 16);
  v115 = *(_QWORD *)(a2 + 24);
  v114 = *(_QWORD *)(a2 + 32);
  v113 = *(_QWORD *)(a2 + 40);
  v4.i32[0] = *(_DWORD *)(a2 + 48);
  v112 = *(unsigned __int8 *)(a2 + 52);
  v111 = *(unsigned __int8 *)(a2 + 53);
  v120 = *(_QWORD *)(a2 + 56);
  LODWORD(v119) = *(unsigned __int8 *)(a2 + 64);
  v101 = sub_1D42B28FC(&qword_1EFE4ACA0);
  v99 = *(_QWORD *)(v101 - 8);
  MEMORY[0x1E0C80A78](v101);
  v97 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_1D42B28FC((uint64_t *)&unk_1EFE4C990);
  v102 = *(_QWORD *)(v104 - 8);
  MEMORY[0x1E0C80A78](v104);
  v98 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_1D42B28FC(&qword_1EFE4BC50);
  v103 = *(_QWORD *)(v105 - 8);
  MEMORY[0x1E0C80A78](v105);
  v100 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_1D42B28FC(&qword_1EFE4C9A0);
  MEMORY[0x1E0C80A78](v107);
  v106 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_1D42B28FC(&qword_1EFE4C9A8);
  v109 = *(_QWORD *)(v96 - 8);
  MEMORY[0x1E0C80A78](v96);
  v108 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = sub_1D42B28FC(&qword_1EFE4C9B0);
  v127 = *(_QWORD *)(v129 - 8);
  MEMORY[0x1E0C80A78](v129);
  v110 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_1D42B28FC(&qword_1EFE4C9B8);
  MEMORY[0x1E0C80A78](v128);
  v95 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v126 = *(_QWORD *)(v121 - 8);
  MEMORY[0x1E0C80A78](v121);
  v125 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v122 = sub_1D451A0B0();
  v124 = *(_QWORD *)(v122 - 8);
  MEMORY[0x1E0C80A78](v122);
  v123 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1D42B28FC(&qword_1EFE4C9C0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1D42B28FC(&qword_1EFE4C9C8);
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1[1];
  v131 = *a1;
  v132 = v24;
  v133 = a1[2];
  v25 = v146;
  sub_1D42ED2F0((uint64_t)&v131, (uint64_t)&v135);
  if (v25)
    return (uint64_t)v3;
  v90 = v19;
  v91 = v17;
  v89 = v16;
  v92 = v23;
  v93 = v21;
  v94 = v20;
  v146 = (uint64_t *)a2;
  type metadata accessor for SNSoundDetector();
  v26 = (void *)v135;
  sub_1D42EE8C8();
  v88 = 0;
  v3 = (id)type metadata accessor for SNUtils();
  v28 = objc_msgSend(v26, sel_modelDescription);
  sub_1D44BE340(v28, 0);
  v30 = v29;

  if (!v30[2])
    goto LABEL_32;
  v32 = v30[4];
  v31 = v30[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33 = objc_msgSend(v26, sel_modelDescription);
  sub_1D44BE340(v33, 1);
  v35 = v34;

  v36 = v35[2];
  if (v36 == 1)
  {
    v37 = v35[5];
    v85 = v35[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v38 = 0;
    v87 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    if (v36 != 2)
    {
      swift_bridgeObjectRelease();
      v3 = (id)type metadata accessor for SNError();
      sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD00000000000001DLL, 0x80000001D4551A60);
      swift_willThrow();
LABEL_3:
      sub_1D42F0D34((uint64_t)&v135);
      return (uint64_t)v3;
    }
    v37 = 0xEA00000000006563;
    v85 = 0x6E656469666E6F43;
    v87 = 0xE800000000000000;
    v38 = 0x6465746365746544;
  }
  v39 = v137;
  if ((~v137 & 0xF000000000000007) != 0)
  {
    v3 = (id)(v137 & 0x7FFFFFFFFFFFFFFFLL);
    swift_bridgeObjectRelease();
    v59 = v130;
    if (v39 < 0)
    {
      v63 = v3;
      sub_1D4354F34((uint64_t)v63, v64, v59, v146);
    }
    v60 = (id)v39;
    v61 = v88;
    sub_1D4354AC8((uint64_t)v60, v146, (uint64_t *)&v131);
    v88 = v61;
    if (!v61)
    {
      v84 = v38;
      v86 = v37;
      v81 = v26;
      v80 = *((_QWORD *)&v131 + 1);
      v65 = v131;
      v83 = v132;
      v120 = DWORD1(v132);
      v79 = *((_QWORD *)&v132 + 1);
      v78 = v133;
      v82 = DWORD2(v133);
      v119 = HIDWORD(v133);
      v77 = v134;
      v66 = v121;
      v67 = v126;
      v126 = v131;
      v76 = v39;
      sub_1D42F0D80(v39);
      *(_QWORD *)&v131 = v65;
      v68 = v124;
      v69 = v123;
      v70 = v122;
      (*(void (**)(char *, _QWORD, uint64_t))(v124 + 104))(v123, *MEMORY[0x1E0C958B0], v122);
      v71 = v125;
      *v125 = sub_1D42F1CF0;
      v71[1] = 0;
      (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), _QWORD, uint64_t))(v67 + 104))(v71, *MEMORY[0x1E0C958F0], v66);
      sub_1D42B28FC((uint64_t *)&unk_1EFE4C9F0);
      sub_1D4306C60((uint64_t)&unk_1EFE4F850);
      v72 = v90;
      sub_1D451A380();
      (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v67 + 8))(v71, v66);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v70);
      sub_1D42B28FC(&qword_1EFE4C970);
      sub_1D4306C60((uint64_t)&unk_1EFE4CA00);
      v73 = v92;
      v74 = v89;
      sub_1D451A308();
      (*(void (**)(char *, uint64_t))(v91 + 8))(v72, v74);
      sub_1D4306C60((uint64_t)&unk_1EFE4CA08);
      v75 = v94;
      sub_1D451A2E4();
      swift_release();
      sub_1D42F0D80(v76);
      (*(void (**)(char *, uint64_t))(v93 + 8))(v73, v75);
      sub_1D43D3474(v146);
    }
    sub_1D42F0D80(v39);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D42F0D80(v39);
    sub_1D42F0D34((uint64_t)&v135);
    return (uint64_t)v3;
  }
  v84 = v38;
  v86 = v37;
  v40 = objc_msgSend(v26, (SEL)&selRef_initWithCommonFormat_sampleRate_channels_interleaved_ + 6);
  v41 = objc_msgSend(v40, sel_inputDescriptionsByName);

  sub_1D42E9D88(0, (unint64_t *)&qword_1EFE40360);
  v42 = sub_1D451A5CC();

  sub_1D4364898(v32, v31, v42);
  v44 = v43;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v44
    || (v45 = objc_msgSend(v44, sel_multiArrayConstraint), v44, !v45))
  {
    sub_1D42B7F2C();
    swift_allocError();
    *v62 = 0;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_3;
  }
  v46 = objc_msgSend(v45, sel_shape);

  sub_1D42E9D88(0, (unint64_t *)&qword_1EFE404B0);
  v47 = sub_1D451A92C();

  v48 = sub_1D44BBDCC(v47);
  swift_bridgeObjectRelease();
  v49 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInt_, v48);
  sub_1D44BD638(v49);

  v50 = *(double *)&v136;
  if ((~(_QWORD)v136 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_28;
  }
  if (*(double *)&v136 <= -2147483650.0)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (*(double *)&v136 >= 2147483650.0)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v51 = sub_1D451B0A0();
  v83 = v52;
  v54 = v53;
  v55 = sub_1D451B0A0();
  v82 = v57;
  if (v50 > -9.22337204e18)
  {
    v77 = v56;
    v78 = v55;
    v79 = v54;
    v80 = v51;
    v81 = v26;
    if (v50 < 9.22337204e18)
    {
      v58 = (int16x8_t)vmovl_u8(v4);
      v58.i64[0] &= 0xFF01FF01FF01FF01;
      __src[0] = v118;
      __src[1] = v117;
      __src[2] = v116;
      __src[3] = v115;
      __src[4] = v114;
      __src[5] = v113;
      v139 = vmovn_s16(v58).u32[0];
      v140 = v112 & 1;
      v141 = v111 & 1;
      v142 = v120;
      v143 = v119 & 1;
      v144 = 1;
      v145 = (uint64_t)v50;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1D435C664();
      sub_1D439940C(__src);
    }
    goto LABEL_31;
  }
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

void sub_1D434D28C(__int128 *a1, uint64_t a2, const void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  void *v66;
  uint64_t v67;
  id v68;
  id v69;
  unint64_t v70;
  uint64_t v71;
  id v72;
  unsigned int v73;
  unsigned int v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  id v90;
  const void *v91;
  uint64_t *v92;
  _BYTE *v93;
  id v94;
  uint64_t v95;
  const void *v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(uint64_t, _QWORD, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(void);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(void);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  id v127;
  void *v128;
  id v129;
  uint64_t v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  double (**v138)@<D0>(uint64_t@<X8>);
  void (**v139)(void **@<X0>, uint64_t *@<X1>, uint64_t@<X8>);
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t (**v174)@<X0>(uint64_t *@<X8>);
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  const void *v183;
  uint64_t v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  uint64_t v188;
  _OWORD v189[2];
  __int128 v190;
  uint64_t v191;
  char v192[8];
  char v193[8];
  char v194[8];
  uint64_t v195;

  v183 = a3;
  v182 = a2;
  v164 = sub_1D42B28FC(&qword_1EFE4ACA0);
  v162 = *(_QWORD *)(v164 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42BE768();
  sub_1D42BA180(v6);
  v7 = sub_1D42B28FC((uint64_t *)&unk_1EFE4C990);
  sub_1D42BA240(v7, (uint64_t)&v190 + 8);
  v165 = v8;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  sub_1D42BE768();
  sub_1D42BA180(v10);
  v11 = sub_1D42B28FC(&qword_1EFE4BC50);
  sub_1D42BA240(v11, (uint64_t)&v191);
  v166 = v12;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v13);
  sub_1D42BA180((uint64_t)&v140 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v168 = sub_1D42B28FC(&qword_1EFE4C9A0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v15);
  sub_1D42BA180((uint64_t)&v140 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_1D42B28FC(&qword_1EFE4C9A8);
  sub_1D42BA240(v17, (uint64_t)v193);
  v170 = v18;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v19);
  sub_1D42BA180((uint64_t)&v140 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = sub_1D42B28FC(&qword_1EFE4C9B0);
  sub_1D42BA240(v21, (uint64_t)&v195);
  v178 = v22;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v23);
  sub_1D42BA180((uint64_t)&v140 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v173 = sub_1D42B28FC(&qword_1EFE4C9B8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v25);
  sub_1D42BE768();
  sub_1D42BA180(v26);
  v172 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v176 = *(_QWORD *)(v172 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v27);
  sub_1D42BE768();
  v29 = sub_1D435EBB0(v28);
  sub_1D42BA240(v29, (uint64_t)v194);
  v181 = v30;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v31);
  sub_1D42CB18C();
  v32 = sub_1D42B28FC(&qword_1EFE4C9C0);
  v33 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  sub_1D42CB210();
  v36 = v35 - v34;
  v37 = sub_1D42B28FC(&qword_1EFE4C9C8);
  v38 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  sub_1D42CB210();
  v41 = v40 - v39;
  v42 = a1[1];
  v185 = *a1;
  v43 = a1[2];
  v186 = v42;
  v187 = v43;
  v44 = v184;
  sub_1D42ED2F0((uint64_t)&v185, (uint64_t)v189);
  if (v44)
    goto LABEL_4;
  v156 = v36;
  v157 = v33;
  v158 = v32;
  v159 = v41;
  v160 = v38;
  v155 = v37;
  v184 = v3;
  type metadata accessor for SNSoundDetector();
  v45 = *(_QWORD *)&v189[0];
  sub_1D42EE8C8();
  v154 = 0;
  v46 = type metadata accessor for SNUtils();
  v47 = sub_1D435EBD4(v46, sel_modelDescription);
  sub_1D44BE340(v47, 0);
  v49 = v48;

  if (v49[2])
  {
    v50 = v49[4];
    v51 = v49[5];
    swift_bridgeObjectRetain();
    v52 = sub_1D42CB338();
    v53 = sub_1D435EBD4(v52, sel_modelDescription);
    sub_1D44BE340(v53, 1);
    v55 = v54;

    v56 = v55[2];
    if (v56 == 1)
    {
      v57 = v50;
      v58 = v55[4];
      v153 = v55[5];
      swift_bridgeObjectRetain();
      v59 = sub_1D42CB338();
      v151 = 0;
      v152 = 0;
    }
    else
    {
      v59 = sub_1D42CB338();
      if (v56 != 2)
      {
        sub_1D4347994();
        type metadata accessor for SNError();
        sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD00000000000001DLL, 0x80000001D4551A60);
        sub_1D4312028();
        goto LABEL_3;
      }
      v57 = v50;
      v153 = 0xEA00000000006563;
      v58 = 0x6E656469666E6F43;
      v152 = 0xE800000000000000;
      v151 = 0x6465746365746544;
    }
    v60 = v191;
    if ((~v191 & 0xF000000000000007) != 0)
    {
      v89 = (id)(v191 & 0x7FFFFFFFFFFFFFFFLL);
      sub_1D4347994();
      if (v60 < 0)
      {
        v94 = v89;
        sub_1D435EA88();
        sub_1D43551C0(v95, v96, v97);
      }
      else
      {
        v90 = (id)v60;
        sub_1D435EA88();
        sub_1D4354D7C(v91, v92);
      }
      v154 = 0;
      v149 = v58;
      v150 = v45;
      v143 = *((_QWORD *)&v185 + 1);
      v98 = v185;
      v142 = v186;
      v141 = DWORD1(v186);
      v147 = *((_QWORD *)&v186 + 1);
      v146 = v187;
      v148 = DWORD2(v187);
      v140 = HIDWORD(v187);
      v145 = v188;
      v99 = v172;
      v100 = v176;
      v176 = v185;
      v144 = v60;
      sub_1D435ECE0();
      *(_QWORD *)&v185 = v98;
      v101 = v181;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v181 + 104))(v184, *MEMORY[0x1E0C958B0], v175);
      v102 = (uint64_t)v174;
      *v174 = sub_1D42F1CF0;
      *(_QWORD *)(v102 + 8) = 0;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v100 + 104))(v102, *MEMORY[0x1E0C958F0], v99);
      v103 = sub_1D42CB9F8();
      sub_1D43071A0((uint64_t)&unk_1EFE4F850);
      sub_1D435EBEC();
      sub_1D451A380();
      sub_1D42F1FA0(v102, *(uint64_t (**)(uint64_t, uint64_t))(v100 + 8));
      sub_1D42FC43C(*(uint64_t (**)(uint64_t, uint64_t))(v101 + 8));
      sub_1D42B28FC(&qword_1EFE4C970);
      sub_1D4306C60((uint64_t)&unk_1EFE4CA00);
      v104 = v159;
      sub_1D435EB1C();
      sub_1D42F1FA0(0, *(uint64_t (**)(uint64_t, uint64_t))(v157 + 8));
      sub_1D4306C60((uint64_t)&unk_1EFE4CA08);
      sub_1D435EC98((uint64_t)&v184);
      sub_1D451A2E4();
      swift_release();
      sub_1D42F0D80(v144);
      sub_1D42F1FA0(v104, *(uint64_t (**)(uint64_t, uint64_t))(v160 + 8));
      v105 = v180;
      sub_1D435ECB0();
      v106 = v177;
      goto LABEL_27;
    }
    v149 = v58;
    v150 = v45;
    v61 = sub_1D435EBD4(v59, sel_modelDescription);
    v62 = objc_msgSend(v61, sel_inputDescriptionsByName);

    sub_1D42EA3E0(v63, (unint64_t *)&qword_1EFE40360);
    v64 = sub_1D451A5CC();

    sub_1D4364898(v57, v51, v64);
    v66 = v65;
    sub_1D4347994();
    v67 = swift_bridgeObjectRelease();
    if (v66)
    {
      v68 = sub_1D435EBD4(v67, sel_multiArrayConstraint);

      if (v68)
      {
        v69 = objc_msgSend(v68, sel_shape);

        sub_1D42E9D88(0, (unint64_t *)&qword_1EFE404B0);
        v70 = sub_1D451A92C();

        v71 = sub_1D44BBDCC(v70);
        swift_bridgeObjectRelease();
        v72 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInt_, v71);
        sub_1D44BD638(v72);
        v74 = v73;

        v75 = *(double *)&v190;
        if ((~(_QWORD)v190 & 0x7FF0000000000000) != 0)
        {
          v76 = v181;
          v77 = v184;
          if (*(double *)&v190 > -2147483650.0)
          {
            if (*(double *)&v190 < 2147483650.0)
            {
              v78 = sub_1D451B0A0();
              v80 = v79;
              v82 = v81;
              v83 = HIDWORD(v190);
              v84 = sub_1D451B0A0();
              v148 = v86;
              if (v75 > -9.22337204e18)
              {
                v160 = v83;
                v145 = v85;
                v146 = v84;
                v147 = v82;
                if (v75 < 9.22337204e18)
                {
                  v87 = (uint64_t)v183;
                  sub_1D435ED44(v192, v183);
                  sub_1D435DA44(v87);
                  v88 = v154;
                  sub_1D43994BC(1, (uint64_t)v75);
                  sub_1D4328888(v87);
                  v154 = v88;
                  if (v88)
                  {
                    sub_1D435E990();
                    sub_1D435E990();
                    sub_1D435EAEC();
                    goto LABEL_4;
                  }
                  v143 = v78;
                  v142 = v80;
                  v141 = HIDWORD(v80);
                  v140 = HIDWORD(v148);
                  v107 = sub_1D4398FE0();
                  swift_release();
                  *(_QWORD *)&v185 = v107;
                  v108 = *(void (**)(uint64_t, _QWORD, uint64_t))(v76 + 104);
                  v109 = v76;
                  v110 = v175;
                  v108(v77, *MEMORY[0x1E0C958B0], v175);
                  v102 = (uint64_t)v174;
                  *v174 = sub_1D42EEBA4;
                  *(_QWORD *)(v102 + 8) = 0;
                  v111 = v176;
                  v159 = v74;
                  sub_1D435ECA4();
                  v112();
                  sub_1D42CB9F8();
                  sub_1D43071A0((uint64_t)&qword_1EFE496A0);
                  sub_1D435EBEC();
                  sub_1D451A380();
                  sub_1D42F1FA0(v102, *(uint64_t (**)(uint64_t, uint64_t))(v111 + 8));
                  (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v77, v110);
                  swift_release();
                  sub_1D42B28FC(&qword_1EFE4AF18);
                  sub_1D4306C60((uint64_t)&qword_1EFE4ACE8);
                  v113 = v161;
                  sub_1D435EB1C();
                  v114 = (uint64_t)v55;
                  v105 = v180;
                  sub_1D42F1FA0(v114, *(uint64_t (**)(uint64_t, uint64_t))(v162 + 8));
                  v115 = sub_1D42B28FC(&qword_1EFE4C9D0);
                  v116 = v163;
                  sub_1D435ECA4();
                  sub_1D451A0C8();
                  sub_1D42F1FA0(v113, *(uint64_t (**)(uint64_t, uint64_t))(v165 + 8));
                  v117 = v166;
                  v103 = v167;
                  sub_1D435ECA4();
                  v118();
                  v119 = v168;
                  *(_QWORD *)(v103 + *(int *)(v168 + 60)) = v159;
                  *(_QWORD *)(v103 + *(int *)(v119 + 64)) = v160;
                  *(_QWORD *)(v103 + *(int *)(v119 + 68)) = v115;
                  sub_1D42F1FA0(v116, *(uint64_t (**)(uint64_t, uint64_t))(v117 + 8));
                  sub_1D42B28FC(&qword_1EFE4C970);
                  sub_1D435EC60((uint64_t)&unk_1EFE4C9D8);
                  v120 = v169;
                  sub_1D451A308();
                  sub_1D435EC68(v103);
                  sub_1D4306C60((uint64_t)&unk_1EFE4C9E0);
                  v121 = v171;
                  sub_1D451A2E4();
                  (*(void (**)(uint64_t, uint64_t))(v170 + 8))(v120, v121);
                  v106 = v177;
                  sub_1D435ECB0();
LABEL_27:
                  v122 = v154;
                  sub_1D43D34E8();
                  v124 = v179;
                  if (v122)
                  {
                    sub_1D435E990();
                    sub_1D42FC448();
                    sub_1D435E990();
                    sub_1D435EAEC();
                  }
                  else
                  {
                    v125 = v123;
                    v126 = sub_1D42B6F40();
                    *(_QWORD *)(v126 + 16) = v125;
                    v127 = objc_allocWithZone((Class)type metadata accessor for RecursiveMLModel());
                    sub_1D42BE984();
                    v128 = (void *)swift_unknownObjectRetain();
                    v129 = sub_1D4441984(v128);
                    sub_1D438FD44(v129);
                    sub_1D42FC448();

                    v130 = sub_1D42B6F40();
                    *(_QWORD *)(v130 + 16) = v146;
                    v131 = v140;
                    *(_DWORD *)(v130 + 24) = v148;
                    *(_DWORD *)(v130 + 28) = v131;
                    v132 = v149;
                    *(_QWORD *)(v130 + 32) = v145;
                    *(_QWORD *)(v130 + 40) = v132;
                    v133 = v151;
                    *(_QWORD *)(v130 + 48) = v153;
                    *(_QWORD *)(v130 + 56) = v133;
                    v134 = v143;
                    *(_QWORD *)(v130 + 64) = v152;
                    *(_QWORD *)(v130 + 72) = v134;
                    LODWORD(v134) = v141;
                    *(_DWORD *)(v130 + 80) = v142;
                    *(_DWORD *)(v130 + 84) = v134;
                    *(_QWORD *)(v130 + 88) = v147;
                    *(_QWORD *)(v130 + 96) = sub_1D435E71C;
                    *(_QWORD *)(v130 + 104) = v126;
                    v135 = v189[0];
                    v136 = v189[1];
                    v137 = v190;
                    *(_QWORD *)(v130 + 160) = v191;
                    *(_OWORD *)(v130 + 128) = v136;
                    *(_OWORD *)(v130 + 144) = v137;
                    *(_OWORD *)(v130 + 112) = v135;
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 16))(v105, v106, v124);
                    v138 = (double (**)@<D0>(uint64_t@<X8>))(v105 + *(int *)(v103 + 52));
                    *v138 = sub_1D42EF0D8;
                    v138[1] = 0;
                    v139 = (void (**)(void **@<X0>, uint64_t *@<X1>, uint64_t@<X8>))(v105 + *(int *)(v103 + 56));
                    *v139 = sub_1D435C528;
                    v139[1] = (void (*)(void **@<X0>, uint64_t *@<X1>, uint64_t@<X8>))v130;
                    sub_1D42BE9A0();
                    sub_1D42F0CE4((uint64_t)v189);
                    sub_1D42FC43C(*(uint64_t (**)(uint64_t, uint64_t))(v102 + 8));
                    sub_1D4306C60((uint64_t)&unk_1EFE4C9E8);
                    sub_1D451A2E4();
                    sub_1D435EAEC();
                    sub_1D42FC448();
                    swift_release();
                    sub_1D4328A1C(v105, &qword_1EFE4C9B8);
                  }
                  goto LABEL_4;
                }
                goto LABEL_34;
              }
LABEL_33:
              __break(1u);
LABEL_34:
              __break(1u);
              goto LABEL_35;
            }
LABEL_32:
            __break(1u);
            goto LABEL_33;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_32;
      }
    }
    sub_1D42B7F2C();
    sub_1D42B6D0C();
    *v93 = 0;
    sub_1D4312028();
    sub_1D435E990();
    sub_1D435E990();
LABEL_3:
    sub_1D435EAEC();
LABEL_4:
    sub_1D42CB3F8();
    return;
  }
LABEL_35:
  sub_1D42CB338();
  __break(1u);
}

uint64_t sub_1D434E204(const void *a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v14[3];
  void *v15;
  _UNKNOWN **v16;
  _QWORD __dst[10];

  __dst[3] = &type metadata for RuntimeFeatureFlags.SoundAnalysis;
  __dst[4] = sub_1D435C408();
  v4 = sub_1D4519D80();
  sub_1D42B5400((uint64_t)__dst);
  if ((v4 & 1) != 0)
  {
    memcpy(__dst, a1, 0x49uLL);
    v15 = &unk_1E979AD08;
    v16 = &off_1E979AC30;
    v5 = swift_allocObject();
    v14[0] = v5;
    v6 = *(_QWORD *)(a2 + 32);
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v5 + 16) = *(_OWORD *)a2;
    *(_OWORD *)(v5 + 32) = v7;
    *(_QWORD *)(v5 + 48) = v6;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1D42F62C4();
  }
  else
  {
    memcpy(__dst, a1, 0x49uLL);
    v15 = &unk_1E979AD08;
    v16 = &off_1E979ACE8;
    v9 = swift_allocObject();
    v14[0] = v9;
    v10 = *(_QWORD *)(a2 + 32);
    v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v9 + 16) = *(_OWORD *)a2;
    *(_OWORD *)(v9 + 32) = v11;
    *(_QWORD *)(v9 + 48) = v10;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1D42F6454();
  }
  v12 = v8;
  sub_1D42B5400((uint64_t)v14);
  return v12;
}

uint64_t sub_1D434E368(_QWORD *a1)
{
  return sub_1D431E088(a1);
}

void sub_1D434E388(int a1, int a2, void *__src)
{
  _BYTE __dst[72];

  memcpy(__dst, __src, sizeof(__dst));
  sub_1D431FA90();
}

uint64_t sub_1D434E3F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  _QWORD v15[5];
  _QWORD v16[24];
  uint64_t v17[9];
  _BYTE __dst[120];

  v16[3] = &type metadata for RuntimeFeatureFlags.SoundAnalysis;
  v16[4] = sub_1D435C408();
  v5 = sub_1D4519D80();
  sub_1D42B5400((uint64_t)v16);
  if ((v5 & 1) != 0)
  {
    v6 = type metadata accessor for _SNClassifySoundRequest();
    memcpy(__dst, (const void *)a1, sizeof(__dst));
    memcpy(v17, (const void *)(a1 + 120), 0x41uLL);
    v7 = a2;
    v8 = v6;
    v9 = sub_1D4355B64((__n128 *)__dst, v17, v7);
    if (!v2)
      return v9;
  }
  else
  {
    memcpy(v16, (const void *)a1, 0xB9uLL);
    v15[3] = &unk_1E979AD08;
    v15[4] = &off_1E979ACE8;
    v10 = swift_allocObject();
    v15[0] = v10;
    v11 = *(_QWORD *)(a2 + 32);
    v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v10 + 16) = *(_OWORD *)a2;
    *(_OWORD *)(v10 + 32) = v12;
    *(_QWORD *)(v10 + 48) = v11;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1D43F254C();
    v8 = v13;
    sub_1D42B5400((uint64_t)v15);
  }
  return v8;
}

uint64_t sub_1D434E540(const void *a1, uint64_t a2, uint64_t (*a3)(_QWORD *, _QWORD *), uint64_t (*a4)(_QWORD *, _QWORD *))
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  _QWORD v18[3];
  void *v19;
  _UNKNOWN **v20;
  _QWORD __dst[9];

  __dst[3] = &type metadata for RuntimeFeatureFlags.SoundAnalysis;
  __dst[4] = sub_1D435C408();
  v8 = sub_1D4519D80();
  sub_1D42B5400((uint64_t)__dst);
  if ((v8 & 1) != 0)
  {
    memcpy(__dst, a1, 0x41uLL);
    v19 = &unk_1E979AD08;
    v20 = &off_1E979AC30;
    v9 = sub_1D42B6F40();
    v18[0] = v9;
    v10 = *(_QWORD *)(a2 + 32);
    v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v9 + 16) = *(_OWORD *)a2;
    *(_OWORD *)(v9 + 32) = v11;
    *(_QWORD *)(v9 + 48) = v10;
    swift_retain();
    sub_1D42B8F24();
    sub_1D42BE984();
    v12 = a3(__dst, v18);
  }
  else
  {
    memcpy(__dst, a1, 0x41uLL);
    v19 = &unk_1E979AD08;
    v20 = &off_1E979ACE8;
    v13 = sub_1D42B6F40();
    v18[0] = v13;
    v14 = *(_QWORD *)(a2 + 32);
    v15 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v13 + 16) = *(_OWORD *)a2;
    *(_OWORD *)(v13 + 32) = v15;
    *(_QWORD *)(v13 + 48) = v14;
    swift_retain();
    sub_1D42B8F24();
    sub_1D42BE9A0();
    v12 = a4(__dst, v18);
  }
  v16 = v12;
  sub_1D42B5400((uint64_t)v18);
  return v16;
}

uint64_t sub_1D434E69C(const void *a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  _QWORD v14[3];
  void *v15;
  _UNKNOWN **v16;
  _QWORD __dst[16];

  __dst[3] = &type metadata for RuntimeFeatureFlags.SoundAnalysis;
  __dst[4] = sub_1D435C408();
  v4 = sub_1D4519D80();
  sub_1D42B5400((uint64_t)__dst);
  if ((v4 & 1) != 0)
  {
    memcpy(__dst, a1, 0x79uLL);
    v15 = &unk_1E979AD08;
    v16 = &off_1E979AC30;
    v5 = swift_allocObject();
    v14[0] = v5;
    v6 = *(_QWORD *)(a2 + 32);
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v5 + 16) = *(_OWORD *)a2;
    *(_OWORD *)(v5 + 32) = v7;
    *(_QWORD *)(v5 + 48) = v6;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1D443A0E4(__dst, v14);
  }
  else
  {
    memcpy(__dst, a1, 0x79uLL);
    v15 = &unk_1E979AD08;
    v16 = &off_1E979ACE8;
    v9 = swift_allocObject();
    v14[0] = v9;
    v10 = *(_QWORD *)(a2 + 32);
    v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v9 + 16) = *(_OWORD *)a2;
    *(_OWORD *)(v9 + 32) = v11;
    *(_QWORD *)(v9 + 48) = v10;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1D443A284(__dst, (uint64_t)v14);
  }
  v12 = v8;
  sub_1D42B5400((uint64_t)v14);
  return v12;
}

uint64_t sub_1D434E800(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  return swift_task_switch();
}

uint64_t sub_1D434E81C()
{
  uint64_t v0;
  id v1;
  char v2;
  char v3;
  uint64_t v4;
  __n128 *v5;
  char v6;
  __n128 *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t (*v10)(void);
  const void *v12;
  __int128 *v13;
  uint64_t v14;
  uint64_t v15;

  if ((sub_1D44084A8() & 1) == 0)
    goto LABEL_11;
  if (qword_1EFE47240 != -1)
    swift_once();
  v1 = objc_msgSend((id)qword_1EFE47238, sel_dictionaryRepresentation);
  sub_1D451A5CC();

  sub_1D435EA6C();
  if (v1)
  {

    sub_1D42BE8B4();
    goto LABEL_8;
  }
  v3 = v2;
  sub_1D42BE8B4();
  if ((v3 & 1) != 0)
  {
LABEL_8:
    v4 = MGGetProductType();
    if (sub_1D4380234(v4))
      goto LABEL_9;
LABEL_11:
    sub_1D435C6E0();
    v8 = sub_1D42B6D0C();
    sub_1D435EB70(v8, v9);
    goto LABEL_12;
  }
LABEL_9:
  sub_1D440883C();
  v5 = *(__n128 **)(v0 + 72);
  if ((v6 & 1) != 0)
  {
    sub_1D435EB08(&v15, *(const void **)(v0 + 80));
    *(_QWORD *)(v0 + 40) = &unk_1E979AD08;
    *(_QWORD *)(v0 + 48) = &off_1E979AC78;
    *(_QWORD *)(v0 + 56) = &off_1E979AC58;
    v7 = (__n128 *)sub_1D42B6F40();
    *(_QWORD *)(v0 + 16) = v7;
    sub_1D435EBDC(v7, v5[1], *v5);
    sub_1D42B8F24();
    sub_1D42EA340();
    sub_1D440DD98();
    sub_1D435EC70();
LABEL_15:
    v10 = (uint64_t (*)(void))sub_1D42E3DD0();
    return v10();
  }
  sub_1D435EB38();
  sub_1D4355368(v12, v13, v14);
  if (!v1)
    goto LABEL_15;
LABEL_12:
  v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1D434E9E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return swift_task_switch();
}

uint64_t sub_1D434EA00()
{
  uint64_t v0;
  id v1;
  char v2;
  char v3;
  uint64_t v4;
  __n128 *v5;
  char v6;
  __n128 *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t (*v10)(void);

  if ((sub_1D43BDE58() & 1) == 0)
    goto LABEL_11;
  if (qword_1EFE47240 != -1)
    swift_once();
  v1 = objc_msgSend((id)qword_1EFE47238, sel_dictionaryRepresentation);
  sub_1D451A5CC();

  sub_1D435EA6C();
  if (v1)
  {

    sub_1D42BE8B4();
    goto LABEL_8;
  }
  v3 = v2;
  sub_1D42BE8B4();
  if ((v3 & 1) != 0)
  {
LABEL_8:
    v4 = MGGetProductType();
    if (sub_1D4380234(v4))
      goto LABEL_9;
LABEL_11:
    sub_1D435D008();
    v8 = sub_1D42B6D0C();
    sub_1D435EB70(v8, v9);
    v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
LABEL_9:
  sub_1D43BE0B0();
  v5 = *(__n128 **)(v0 + 72);
  if ((v6 & 1) != 0)
  {
    *(_QWORD *)(v0 + 40) = &unk_1E979AD08;
    *(_QWORD *)(v0 + 48) = &off_1E979AC78;
    *(_QWORD *)(v0 + 56) = &off_1E979AC58;
    v7 = (__n128 *)sub_1D42B6F40();
    *(_QWORD *)(v0 + 16) = v7;
    sub_1D435EBDC(v7, v5[1], *v5);
    sub_1D42B8F24();
    sub_1D42EA340();
    sub_1D43BF9D0();
    sub_1D435EC70();
  }
  else
  {
    sub_1D43539A8(*(__int128 **)(v0 + 72), *(char **)(v0 + 64));
  }
  v10 = (uint64_t (*)(void))sub_1D42E3DD0();
  return v10();
}

void sub_1D434EBB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  v1 = sub_1D4519BC4();
  MEMORY[0x1E0C80A78](v1);
  sub_1D42D7108();
  sub_1D42B28FC(qword_1EFE47450);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v2);
  sub_1D43479B4();
  sub_1D4328B48();
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v3);
  sub_1D434799C();
  sub_1D435ED4C();
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42BE8F8();
  sub_1D430BC2C(v0, v0);
  v5 = (char *)sub_1D434ECA0 + 4 * word_1D452D64C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1D434ECA0()
{
  uint64_t v0;
  const void *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  __int128 v17;

  sub_1D435EBC0((void *)(v0 + 352), v1);
  sub_1D435E9A8();
  v2 = *(_BYTE *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 400);
  v6 = *(_BYTE *)(v0 + 456);
  v7 = *(_OWORD *)(v0 + 472);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 488);
  *(_OWORD *)(v0 + 96) = v7;
  v8 = *(_QWORD *)(v0 + 464);
  v9 = *(_QWORD *)(v0 + 504);
  v10 = *(_QWORD *)(v0 + 512);
  v11 = *(_BYTE *)(v0 + 520);
  v12 = *(_BYTE *)(v0 + 521);
  v13 = *(_BYTE *)(v0 + 522);
  v14 = *(_BYTE *)(v0 + 523);
  v15 = *(_BYTE *)(v0 + 524);
  v16 = *(_BYTE *)(v0 + 525);
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v0 + 528);
  *(_QWORD *)(v0 + 72) = v9;
  *(_DWORD *)(v0 + 60) = *(unsigned __int8 *)(v0 + 536);
  *(_OWORD *)(v0 + 128) = *(_OWORD *)(v0 + 352);
  *(_BYTE *)(v0 + 144) = v2;
  *(_QWORD *)(v0 + 152) = v3;
  *(_QWORD *)(v0 + 160) = *(_QWORD *)(v0 + 384);
  *(_QWORD *)(v0 + 168) = v4;
  *(_QWORD *)(v0 + 176) = v5;
  *(_OWORD *)(v0 + 184) = *(_OWORD *)(v0 + 408);
  *(_OWORD *)(v0 + 200) = *(_OWORD *)(v0 + 424);
  *(_OWORD *)(v0 + 216) = *(_OWORD *)(v0 + 440);
  *(_BYTE *)(v0 + 232) = v6;
  *(_QWORD *)(v0 + 240) = v8;
  sub_1D43EF984();
  v17 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 128) = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 144) = v17;
  *(_QWORD *)(v0 + 160) = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 168) = v10;
  *(_BYTE *)(v0 + 176) = v11;
  *(_BYTE *)(v0 + 177) = v12;
  *(_BYTE *)(v0 + 178) = v13;
  *(_BYTE *)(v0 + 179) = v14;
  *(_BYTE *)(v0 + 180) = v15;
  *(_BYTE *)(v0 + 181) = v16;
  *(_QWORD *)(v0 + 184) = *(_QWORD *)(v0 + 64);
  *(_BYTE *)(v0 + 192) = *(_DWORD *)(v0 + 60);
  AudioConfiguration.hash(into:)();
  return sub_1D435C34C(v0 + 352);
}

void sub_1D434F258(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;

  sub_1D4328B48();
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v3);
  sub_1D42BE768();
  sub_1D435ED4C();
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42BA15C();
  MEMORY[0x1E0C80A78](v5);
  sub_1D432D3D4();
  v7 = MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  sub_1D435ED08();
  MEMORY[0x1E0C80A78](v8);
  sub_1D432D3D4();
  v10 = MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  sub_1D435ECF4();
  MEMORY[0x1E0C80A78](v11);
  sub_1D435ED1C();
  MEMORY[0x1E0C80A78](v12);
  sub_1D42B28FC(&qword_1EFE4CF80);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v13);
  sub_1D42BE8F8();
  v15 = v2 + *(int *)(v14 + 48);
  sub_1D430BC2C(a1, v2);
  sub_1D430BC2C(a2, v15);
  v16 = (char *)sub_1D434F400 + 4 * word_1D452D662[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1D434F400()
{
  uint64_t v0;
  const void *v1;
  uint64_t v2;
  const void *v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  char v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  unsigned __int8 v34;
  unsigned __int8 v35;
  unsigned __int8 v36;
  unsigned __int8 v37;
  char v38;

  v4 = sub_1D435EB10();
  sub_1D430BC2C(v4, (uint64_t)v3);
  sub_1D435EBC0((void *)(v0 + 896), v3);
  if (sub_1D435E998())
  {
    sub_1D435EC84();
    sub_1D4328A1C(v2, &qword_1EFE4CF80);
LABEL_9:
    v5 = 0;
    return v5 & 1;
  }
  sub_1D435EBC0((void *)(v0 + 672), v1);
  v6 = *(_BYTE *)(v0 + 912);
  v7 = *(_QWORD *)(v0 + 920);
  v8 = *(_QWORD *)(v0 + 936);
  v9 = *(_QWORD *)(v0 + 944);
  v10 = *(_BYTE *)(v0 + 1000);
  v11 = *(_QWORD *)(v0 + 1008);
  v12 = *(_BYTE *)(v0 + 688);
  v13 = *(_QWORD *)(v0 + 696);
  v14 = *(_QWORD *)(v0 + 712);
  v15 = *(_QWORD *)(v0 + 720);
  v16 = *(_BYTE *)(v0 + 776);
  v17 = *(_QWORD *)(v0 + 784);
  *(_OWORD *)(v0 + 448) = *(_OWORD *)(v0 + 896);
  *(_BYTE *)(v0 + 464) = v6;
  *(_QWORD *)(v0 + 472) = v7;
  *(_QWORD *)(v0 + 480) = *(_QWORD *)(v0 + 928);
  *(_QWORD *)(v0 + 488) = v8;
  *(_QWORD *)(v0 + 496) = v9;
  *(_OWORD *)(v0 + 504) = *(_OWORD *)(v0 + 952);
  *(_OWORD *)(v0 + 520) = *(_OWORD *)(v0 + 968);
  *(_OWORD *)(v0 + 536) = *(_OWORD *)(v0 + 984);
  *(_BYTE *)(v0 + 552) = v10;
  *(_QWORD *)(v0 + 560) = v11;
  *(_OWORD *)(v0 + 224) = *(_OWORD *)(v0 + 672);
  *(_BYTE *)(v0 + 240) = v12;
  *(_QWORD *)(v0 + 248) = v13;
  *(_QWORD *)(v0 + 256) = *(_QWORD *)(v0 + 704);
  *(_QWORD *)(v0 + 264) = v14;
  *(_QWORD *)(v0 + 272) = v15;
  *(_OWORD *)(v0 + 280) = *(_OWORD *)(v0 + 728);
  *(_OWORD *)(v0 + 296) = *(_OWORD *)(v0 + 744);
  *(_OWORD *)(v0 + 312) = *(_OWORD *)(v0 + 760);
  *(_BYTE *)(v0 + 328) = v16;
  *(_QWORD *)(v0 + 336) = v17;
  sub_1D43EF5FC((__int128 *)(v0 + 448), (__int128 *)(v0 + 224));
  if ((v18 & 1) == 0)
  {
    sub_1D435C34C(v0 + 672);
    sub_1D435EC84();
LABEL_8:
    sub_1D4325D80(v2, (uint64_t (*)(_QWORD))type metadata accessor for RemoteRequest);
    goto LABEL_9;
  }
  v19 = *(_QWORD *)(v0 + 1032);
  v20 = *(_QWORD *)(v0 + 1040);
  v21 = *(_BYTE *)(v0 + 1064);
  v22 = *(_BYTE *)(v0 + 1065);
  v23 = *(_BYTE *)(v0 + 1066);
  v24 = *(_BYTE *)(v0 + 1067);
  v25 = *(_BYTE *)(v0 + 1068);
  v26 = *(_BYTE *)(v0 + 1069);
  v27 = *(_QWORD *)(v0 + 1072);
  v28 = *(_BYTE *)(v0 + 1080);
  v29 = *(_OWORD *)(v0 + 792);
  v30 = *(_QWORD *)(v0 + 808);
  v31 = *(_QWORD *)(v0 + 816);
  v32 = *(_BYTE *)(v0 + 840);
  v33 = *(_BYTE *)(v0 + 841);
  v34 = *(_BYTE *)(v0 + 842);
  v35 = *(_BYTE *)(v0 + 843);
  v36 = *(_BYTE *)(v0 + 844);
  v37 = *(_BYTE *)(v0 + 845);
  *(_OWORD *)(v0 + 448) = *(_OWORD *)(v0 + 1016);
  *(_QWORD *)(v0 + 464) = v19;
  *(_QWORD *)(v0 + 472) = v20;
  *(_OWORD *)(v0 + 480) = *(_OWORD *)(v0 + 1048);
  *(_BYTE *)(v0 + 496) = v21;
  *(_BYTE *)(v0 + 497) = v22;
  *(_BYTE *)(v0 + 498) = v23;
  *(_BYTE *)(v0 + 499) = v24;
  *(_BYTE *)(v0 + 500) = v25;
  *(_BYTE *)(v0 + 501) = v26;
  *(_QWORD *)(v0 + 504) = v27;
  *(_BYTE *)(v0 + 512) = v28;
  *(_OWORD *)(v0 + 224) = v29;
  *(_QWORD *)(v0 + 240) = v30;
  *(_QWORD *)(v0 + 248) = v31;
  v38 = sub_1D435E9F0(*(__n128 *)(v0 + 824), v30, v31, v32, v33, v34, v35, v36, v37);
  sub_1D435C34C(v0 + 672);
  sub_1D435EC84();
  if ((v38 & 1) == 0)
    goto LABEL_8;
  sub_1D4325D80(v2, (uint64_t (*)(_QWORD))type metadata accessor for RemoteRequest);
  v5 = 1;
  return v5 & 1;
}

uint64_t sub_1D4350218(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  char v11;

  v2 = a1 == 0x656C706D617865 && a2 == 0xE700000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D4553720 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = a1 == 0x7455686365657073 && a2 == 0xEF65636E61726574;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x6D45686365657073 && a2 == 0xED00006E6F69746FLL;
      if (v7 || (sub_1D451B820() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = a1 == 0x76654C6F69647561 && a2 == 0xEA00000000006C65;
        if (v8 || (sub_1D451B820() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = a1 == 0x6D617A616873 && a2 == 0xE600000000000000;
          if (v9 || (sub_1D451B820() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v10 = a1 == 0x746544646E756F73 && a2 == 0xEE006E6F69746365;
            if (v10 || (sub_1D451B820() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else if (a1 == 0xD000000000000012 && a2 == 0x80000001D4553740 || (sub_1D451B820() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001D4553760 || (sub_1D451B820() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 8;
            }
            else if (a1 == 0xD000000000000019 && a2 == 0x80000001D4553780 || (sub_1D451B820() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 9;
            }
            else if (a1 == 0xD000000000000015 && a2 == 0x80000001D45537A0)
            {
              swift_bridgeObjectRelease();
              return 10;
            }
            else
            {
              v11 = sub_1D451B820();
              swift_bridgeObjectRelease();
              if ((v11 & 1) != 0)
                return 10;
              else
                return 11;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1D43506B4()
{
  return 11;
}

uint64_t sub_1D43506BC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D43506F0 + 4 * byte_1D452D678[a1]))(0x656C706D617865, 0xE700000000000000);
}

unint64_t sub_1D43506F0()
{
  return 0xD000000000000013;
}

uint64_t sub_1D4350810(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1D451B820();
    sub_1D42BE8B4();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_1D4350878(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;

  sub_1D42B28FC(&qword_1EFE4CF88);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v3);
  sub_1D42BE768();
  type metadata accessor for AOPClassificationDemo.Request();
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE4CF90);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE4CF98);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v6);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE4CFA0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE4CFA8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v8);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE4CFB0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE4CFB8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v10);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE4CFC0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v11);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE4CFC8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v12);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE4CFD0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v13);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE4CFD8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v14);
  sub_1D42CB210();
  type metadata accessor for RemoteRequest();
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v15);
  sub_1D42CB18C();
  sub_1D42B28FC(&qword_1EFE4CFE0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v16);
  sub_1D43479B4();
  sub_1D42B5528(a1, a1[3]);
  sub_1D435D14C();
  sub_1D451BA24();
  sub_1D430BC2C(v18, v1);
  v17 = (char *)sub_1D4350BC0 + 4 * word_1D452D684[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_1D4350BC0()
{
  uint64_t *v0;
  const void *v1;

  sub_1D435EBC0(v0 + 64, v1);
  *((_BYTE *)v0 + 296) = 1;
  sub_1D435D584();
  sub_1D435E7B0();
  sub_1D435EBC0(v0 + 37, v0 + 64);
  sub_1D435D5C0();
  sub_1D435E864();
  sub_1D435E8E8(v0[2]);
  sub_1D435E874();
  sub_1D435C34C((uint64_t)(v0 + 64));
  sub_1D42BE844();
}

void sub_1D4351398()
{
  sub_1D42BE9A8();
  sub_1D434EBB4();
  sub_1D42CB230();
  sub_1D42BE978();
}

void sub_1D43513C0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t *v79;
  _QWORD v80[20];
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97[8];
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  char v101[8];
  char v102[8];
  char *v103;

  v91 = a2;
  v7 = sub_1D42B28FC(&qword_1EFE4D0A0);
  sub_1D42BA240(v7, (uint64_t)v102);
  v94 = v8;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  sub_1D42BE768();
  sub_1D42BA180(v10);
  v82 = sub_1D42B28FC(&qword_1EFE4D0A8);
  v93 = *(_QWORD *)(v82 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v11);
  sub_1D42BA180((uint64_t)v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_1D42B28FC(&qword_1EFE4D0B0);
  sub_1D42BA240(v13, (uint64_t)v101);
  v92 = v14;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v15);
  sub_1D42BE768();
  sub_1D42BA180(v16);
  v81 = sub_1D42B28FC(&qword_1EFE4D0B8);
  v90 = *(_QWORD *)(v81 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v17);
  sub_1D42BA180((uint64_t)v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = sub_1D42B28FC(&qword_1EFE4D0C0);
  sub_1D42BA240(v19, (uint64_t)&v100);
  v89 = v20;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v21);
  sub_1D42BE768();
  sub_1D42BA180(v22);
  v23 = sub_1D42B28FC(&qword_1EFE4D0C8);
  sub_1D42BA240(v23, (uint64_t)&v99);
  v88 = v24;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v25);
  sub_1D42BE768();
  sub_1D42BA180(v26);
  v27 = sub_1D42B28FC(&qword_1EFE4D0D0);
  sub_1D42BA240(v27, (uint64_t)&v98);
  v87 = v28;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v29);
  sub_1D42BA180((uint64_t)v80 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v31 = sub_1D42B28FC(&qword_1EFE4D0D8);
  sub_1D42BA240(v31, (uint64_t)v97);
  v86 = v32;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v33);
  sub_1D42BE768();
  sub_1D42BA180(v34);
  v35 = sub_1D42B28FC(&qword_1EFE4D0E0);
  sub_1D42BA240(v35, (uint64_t)&v96);
  v85 = v36;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v37);
  sub_1D42BE768();
  sub_1D42BA180(v38);
  v39 = sub_1D42B28FC(&qword_1EFE4D0E8);
  sub_1D42BA240(v39, (uint64_t)&v95);
  v84 = v40;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v41);
  sub_1D42BE768();
  sub_1D42BA180(v42);
  v43 = sub_1D42B28FC(&qword_1EFE4D0F0);
  sub_1D42BA240(v43, (uint64_t)&v94);
  v83 = v44;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v45);
  sub_1D42BA180((uint64_t)v80 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  v98 = sub_1D42B28FC((uint64_t *)&unk_1EFE4D0F8);
  v96 = *(_QWORD *)(v98 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v47);
  sub_1D42D7108();
  v95 = type metadata accessor for RemoteRequest();
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v48);
  sub_1D42BA15C();
  sub_1D42BA170();
  MEMORY[0x1E0C80A78](v49);
  sub_1D432D3D4();
  sub_1D42BA170();
  MEMORY[0x1E0C80A78](v50);
  sub_1D432D3D4();
  sub_1D42BA170();
  MEMORY[0x1E0C80A78](v51);
  sub_1D432D3D4();
  sub_1D42BA170();
  MEMORY[0x1E0C80A78](v52);
  sub_1D432D3D4();
  sub_1D42BA170();
  MEMORY[0x1E0C80A78](v53);
  sub_1D432D3D4();
  sub_1D42BA170();
  MEMORY[0x1E0C80A78](v54);
  sub_1D432D3D4();
  sub_1D42BA170();
  MEMORY[0x1E0C80A78](v55);
  sub_1D435ECF4();
  v57 = MEMORY[0x1E0C80A78](v56);
  v59 = (char *)v80 - v58;
  MEMORY[0x1E0C80A78](v57);
  sub_1D435ED1C();
  MEMORY[0x1E0C80A78](v60);
  sub_1D435ED08();
  MEMORY[0x1E0C80A78](v61);
  v63 = (char *)v80 - v62;
  v64 = a1[3];
  v100 = a1;
  sub_1D42B5528(a1, v64);
  sub_1D435D14C();
  v99 = v3;
  v65 = v103;
  sub_1D451BA0C();
  if (!v65)
  {
    v80[2] = v5;
    v80[3] = v2;
    v80[4] = v59;
    v80[5] = v4;
    v103 = v63;
    v66 = v98;
    v67 = v99;
    v68 = sub_1D451B6D0();
    v69 = *(_QWORD *)(v68 + 16);
    if (v69)
    {
      v80[1] = 0;
      v70 = *(unsigned __int8 *)(v68 + 32);
      sub_1D43B7948(1, v69, v68, v68 + 32, 0, (2 * v69) | 1);
      v72 = v71;
      v74 = v73;
      swift_bridgeObjectRelease();
      if (v72 == v74 >> 1)
        __asm { BR              X9 }
      v67 = v99;
    }
    v75 = v95;
    v76 = v96;
    v77 = sub_1D451B460();
    sub_1D42B6D0C();
    v79 = v78;
    sub_1D42B28FC(&qword_1EFE49ED0);
    *v79 = v75;
    sub_1D451B61C();
    sub_1D451B454();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v77 - 8) + 104))(v79, *MEMORY[0x1E0DEC450], v77);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v67, v66);
  }
  sub_1D42B5400((uint64_t)v100);
  sub_1D42BE844();
}

uint64_t sub_1D435223C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D4350810(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D4352264()
{
  sub_1D435D1C4();
  return sub_1D451BA3C();
}

uint64_t sub_1D435228C()
{
  sub_1D435D1C4();
  return sub_1D451BA48();
}

uint64_t sub_1D43522B4()
{
  sub_1D435D23C();
  return sub_1D451BA3C();
}

uint64_t sub_1D43522DC()
{
  sub_1D435D23C();
  return sub_1D451BA48();
}

uint64_t sub_1D4352304()
{
  sub_1D435D188();
  return sub_1D451BA3C();
}

uint64_t sub_1D435232C()
{
  sub_1D435D188();
  return sub_1D451BA48();
}

uint64_t sub_1D4352354()
{
  sub_1D435D41C();
  return sub_1D451BA3C();
}

uint64_t sub_1D435237C()
{
  sub_1D435D41C();
  return sub_1D451BA48();
}

uint64_t sub_1D43523A4()
{
  unsigned __int8 *v0;

  return sub_1D43506BC(*v0);
}

uint64_t sub_1D43523AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D4350218(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D43523D0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D43506B4();
  *a1 = result;
  return result;
}

uint64_t sub_1D43523F4()
{
  sub_1D435D14C();
  return sub_1D451BA3C();
}

uint64_t sub_1D435241C()
{
  sub_1D435D14C();
  return sub_1D451BA48();
}

uint64_t sub_1D4352444()
{
  sub_1D435D2B4();
  return sub_1D451BA3C();
}

uint64_t sub_1D435246C()
{
  sub_1D435D2B4();
  return sub_1D451BA48();
}

uint64_t sub_1D4352494()
{
  sub_1D435D5FC();
  return sub_1D451BA3C();
}

uint64_t sub_1D43524BC()
{
  sub_1D435D5FC();
  return sub_1D451BA48();
}

uint64_t sub_1D43524E4()
{
  sub_1D435D3A4();
  return sub_1D451BA3C();
}

uint64_t sub_1D435250C()
{
  sub_1D435D3A4();
  return sub_1D451BA48();
}

uint64_t sub_1D4352534()
{
  sub_1D435D584();
  return sub_1D451BA3C();
}

uint64_t sub_1D435255C()
{
  sub_1D435D584();
  return sub_1D451BA48();
}

uint64_t sub_1D4352584()
{
  sub_1D435D32C();
  return sub_1D451BA3C();
}

uint64_t sub_1D43525AC()
{
  sub_1D435D32C();
  return sub_1D451BA48();
}

uint64_t sub_1D43525D4()
{
  sub_1D435D494();
  return sub_1D451BA3C();
}

uint64_t sub_1D43525FC()
{
  sub_1D435D494();
  return sub_1D451BA48();
}

uint64_t sub_1D4352624()
{
  sub_1D435D50C();
  return sub_1D451BA3C();
}

uint64_t sub_1D435264C()
{
  sub_1D435D50C();
  return sub_1D451BA48();
}

uint64_t sub_1D435267C()
{
  sub_1D451B958();
  sub_1D434EBB4();
  return sub_1D451B994();
}

void sub_1D43526B8(_QWORD *a1)
{
  sub_1D4350878(a1);
}

void sub_1D43526CC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1D43513C0(a1, a2);
}

void sub_1D43526E0(uint64_t a1)
{
  uint64_t v2;

  sub_1D4306C10((uint64_t)&unk_1EFE4C8B0);
  *(_QWORD *)(a1 + 16) = v2;
}

void sub_1D435271C(uint64_t a1)
{
  uint64_t v2;

  sub_1D4306C10((uint64_t)&unk_1EFE4C8B8);
  *(_QWORD *)(a1 + 16) = v2;
}

void sub_1D4352758()
{
  sub_1D4306C10((uint64_t)&unk_1EFE4C8C0);
}

void sub_1D4352784(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint8x8_t v10;
  int16x8_t v11;
  __int128 __src;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  unsigned __int32 v16;
  char v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;

  v4 = *((_QWORD *)a4 + 2);
  v5 = *((_QWORD *)a4 + 3);
  v6 = *((_QWORD *)a4 + 7);
  v7 = *((_BYTE *)a4 + 64);
  v8 = *((_BYTE *)a4 + 52) & 1;
  v9 = *((_BYTE *)a4 + 53) & 1;
  __src = *a4;
  v13 = v4;
  v14 = v5;
  v15 = a4[2];
  v10.i32[1] = DWORD1(v15);
  v10.i32[0] = *((_DWORD *)a4 + 12);
  v11 = (int16x8_t)vmovl_u8(v10);
  v11.i64[0] &= 0xFF01FF01FF01FF01;
  v16 = vmovn_s16(v11).u32[0];
  v17 = v8;
  v18 = v9;
  v19 = v6;
  v20 = v7 & 1;
  v21 = a1;
  v22 = a2;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1D435C664();
  sub_1D439940C(&__src);
}

uint64_t sub_1D4352834(uint64_t a1)
{
  sub_1D435C6A4();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_1D435287C(uint64_t a1, uint64_t a2, const void *a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[72];

  sub_1D435ED44(v9, a3);
  sub_1D435DA44((uint64_t)a3);
  sub_1D43994BC(a1, a2);
  v7 = v6;
  sub_1D4328888((uint64_t)a3);
  return v7;
}

void sub_1D43528FC(_QWORD *a1)
{
  sub_1D434BC9C(a1);
}

void sub_1D435291C(uint64_t a1, const void *a2)
{
  _BYTE __dst[72];

  memcpy(__dst, a2, sizeof(__dst));
  sub_1D4353168(a1, (uint64_t)sub_1D435DAA8);
}

uint64_t sub_1D4352978(void *a1)
{
  return sub_1D42BB60C(a1);
}

uint64_t sub_1D4352998()
{
  return sub_1D42BB6BC();
}

void sub_1D43529B8(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  _DWORD __dst[23];
  char v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;

  v71 = a2;
  v68 = sub_1D42B28FC(&qword_1EFE4CA18);
  v59 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v58 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_1D42B28FC(&qword_1EFE4CA20);
  MEMORY[0x1E0C80A78](v61);
  v60 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_1D42B28FC(&qword_1EFE4CA28);
  v64 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v69 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_1D42B28FC(&qword_1EFE4CA30);
  v63 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v62 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_1D42B28FC(&qword_1EFE4CA38);
  v57 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v67 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D42B28FC(&qword_1EFE4CA40);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D42B28FC(&qword_1EFE4CA48);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(__dst, a1, 0x41uLL);
  *(_QWORD *)&__dst[17] = 0x40467A0000;
  *(_QWORD *)&__dst[19] = 0x45EA600042FA0000;
  *(_QWORD *)&__dst[21] = 0x3C23D70A00000002;
  v73 = 0;
  v74 = xmmword_1D452E6F0;
  v75 = 0;
  sub_1D435C664();
  v16 = v76;
  v17 = ((uint64_t (*)(_DWORD *))v71)(__dst);
  if (v16)
  {
    sub_1D435C6A4();
  }
  else
  {
    v18 = v17;
    v55 = v11;
    v56 = v15;
    v71 = v9;
    v19 = v70;
    v76 = v13;
    sub_1D435C6A4();
    sub_1D439C424(21, 0);
    v21 = v20;
    v54 = v18;
    v22 = objc_msgSend(v20, sel_modelDescription);
    sub_1D44418BC();
    v24 = v23;

    v25 = *(_QWORD *)(v24 + 16);
    swift_bridgeObjectRelease();
    if (v25 == 1
      && (v26 = objc_msgSend(v21, sel_modelDescription),
          sub_1D44418BC(),
          v28 = v27,
          v26,
          v29 = sub_1D4396620(v28),
          v31 = v30,
          swift_bridgeObjectRelease(),
          v31))
    {
      v49 = v29;
      v53 = v31;
      v52 = sub_1D42BA9B8();
      v51 = a1[9];
      *(_QWORD *)__dst = v52;
      sub_1D42B28FC((uint64_t *)&unk_1EFE4C9F0);
      v50 = sub_1D42B28FC((uint64_t *)&unk_1EFE557D0);
      sub_1D4306C60((uint64_t)&unk_1EFE4F850);
      v32 = v58;
      sub_1D451A308();
      v33 = v59;
      v34 = (uint64_t)v60;
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v60, v32, v68);
      v35 = v61;
      *(_QWORD *)(v34 + *(int *)(v61 + 60)) = 96;
      *(_QWORD *)(v34 + *(int *)(v35 + 64)) = v51;
      *(_QWORD *)(v34 + *(int *)(v35 + 68)) = v50;
      (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v68);
      swift_release();
      v36 = sub_1D42B28FC((uint64_t *)&unk_1EFE4A660);
      sub_1D4306C60((uint64_t)&unk_1EFE51690);
      v68 = v36;
      sub_1D451A308();
      sub_1D4328A1C(v34, &qword_1EFE4CA20);
      *(_QWORD *)(swift_allocObject() + 16) = &unk_1E97A9620;
      v37 = sub_1D42B28FC(&qword_1EFE4C970);
      v38 = v62;
      v39 = v66;
      v61 = v37;
      v40 = v69;
      sub_1D451A0C8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v40, v39);
      v41 = v67;
      sub_1D438FC18(v21);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v38, v65);
      v43 = swift_allocObject();
      v44 = v53;
      *(_QWORD *)(v43 + 16) = v49;
      *(_QWORD *)(v43 + 24) = v44;
      sub_1D4306C60((uint64_t)&unk_1EFE4CA60);
      v45 = v55;
      sub_1D451A3A4();
      swift_release();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v41, v19);
      v46 = v56;
      sub_1D451A110();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v45, v8);
      sub_1D4306C60((uint64_t)&unk_1EFE4CA68);
      v47 = sub_1D451A2E4();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v46, v12);
      swift_unknownObjectRelease();
      swift_release();
      type metadata accessor for SharedVGGish.Instance();
      *(_QWORD *)(swift_allocObject() + 16) = v47;
    }
    else
    {
      sub_1D435C5CC();
      swift_allocError();
      *v42 = 1;
      swift_willThrow();
      swift_release();
      swift_unknownObjectRelease();
    }
  }
}

void sub_1D4353168(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD v76[3];
  char v77;
  __int128 v78;
  uint64_t v79;
  char *v80;

  v75 = a2;
  v65 = a1;
  v2 = sub_1D42B28FC(&qword_1EFE4CA18);
  v63 = *(_QWORD *)(v2 - 8);
  v64 = v2;
  MEMORY[0x1E0C80A78](v2);
  v62 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_1D42B28FC(&qword_1EFE4CA20);
  MEMORY[0x1E0C80A78](v67);
  v66 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_1D42B28FC(&qword_1EFE4CA28);
  v71 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v69 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_1D42B28FC(&qword_1EFE4CA30);
  v70 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v68 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_1D42B28FC(&qword_1EFE4CA38);
  v7 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D42B28FC(&qword_1EFE4CA40);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1D42B28FC(&qword_1EFE4CA48);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76[0] = 0x40467A0000;
  v76[1] = 0x45EA600042FA0000;
  v76[2] = 0x3C23D70A00000002;
  v77 = 0;
  v78 = xmmword_1D452E6F0;
  v79 = 0;
  v18 = v80;
  v19 = ((uint64_t (*)(_QWORD *))v75)(v76);
  if (!v18)
  {
    v20 = v19;
    v58 = v13;
    v80 = v9;
    v59 = v11;
    v60 = v7;
    v21 = v74;
    v61 = v17;
    v75 = v15;
    sub_1D439C424(21, 0);
    v23 = v22;
    v57 = v20;
    v24 = objc_msgSend(v22, sel_modelDescription);
    sub_1D44418BC();
    v26 = v25;

    v27 = *(_QWORD *)(v26 + 16);
    swift_bridgeObjectRelease();
    if (v27 != 1)
      goto LABEL_8;
    v28 = objc_msgSend(v23, sel_modelDescription);
    sub_1D44418BC();
    v30 = v29;
    v56 = 0;

    v31 = sub_1D4396620(v30);
    v33 = v32;
    swift_bridgeObjectRelease();
    if (v33)
    {
      v52 = v31;
      v55 = v33;
      v54 = sub_1D42BA9B8();
      v76[0] = v54;
      sub_1D42B28FC((uint64_t *)&unk_1EFE4C9F0);
      v53 = sub_1D42B28FC((uint64_t *)&unk_1EFE557D0);
      sub_1D4306C60((uint64_t)&unk_1EFE4F850);
      v34 = v62;
      sub_1D451A308();
      v36 = v63;
      v35 = v64;
      v37 = (uint64_t)v66;
      (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v66, v34, v64);
      v38 = v67;
      *(_QWORD *)(v37 + *(int *)(v67 + 60)) = 96;
      *(_QWORD *)(v37 + *(int *)(v38 + 64)) = v65;
      *(_QWORD *)(v37 + *(int *)(v38 + 68)) = v53;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v35);
      swift_release();
      v39 = sub_1D42B28FC((uint64_t *)&unk_1EFE4A660);
      sub_1D4306C60((uint64_t)&unk_1EFE51690);
      v40 = v69;
      v67 = v39;
      sub_1D451A308();
      sub_1D4328A1C(v37, &qword_1EFE4CA20);
      *(_QWORD *)(swift_allocObject() + 16) = &unk_1E97A95E8;
      v41 = sub_1D42B28FC(&qword_1EFE4C970);
      v42 = v68;
      v43 = v73;
      v66 = (char *)v41;
      sub_1D451A0C8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v40, v43);
      v44 = v80;
      v45 = v56;
      sub_1D438FC18(v23);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v42, v72);
      v56 = v45;
      if (v45)
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        v47 = swift_allocObject();
        v48 = v55;
        *(_QWORD *)(v47 + 16) = v52;
        *(_QWORD *)(v47 + 24) = v48;
        sub_1D4306C60((uint64_t)&unk_1EFE4CA60);
        v49 = v58;
        sub_1D451A3A4();
        swift_release();
        (*(void (**)(char *, uint64_t))(v60 + 8))(v44, v21);
        v50 = v61;
        sub_1D451A110();
        (*(void (**)(char *, uint64_t))(v59 + 8))(v49, v10);
        sub_1D4306C60((uint64_t)&unk_1EFE4CA68);
        v51 = sub_1D451A2E4();
        swift_unknownObjectRelease();
        swift_release();
        (*(void (**)(char *, uint64_t))(v75 + 8))(v50, v14);
        type metadata accessor for SharedVGGish.Instance();
        *(_QWORD *)(swift_allocObject() + 16) = v51;
      }
    }
    else
    {
LABEL_8:
      sub_1D435C5CC();
      swift_allocError();
      *v46 = 1;
      swift_willThrow();
      swift_release();
      swift_unknownObjectRelease();
    }
  }
}

void sub_1D43538D0(uint64_t a1)
{
  uint64_t v2;

  sub_1D42B28FC((uint64_t *)&unk_1EFE4CA70);
  v2 = sub_1D42B6F40();
  *(_OWORD *)(v2 + 16) = xmmword_1D45261D0;
  *(_QWORD *)(v2 + 32) = a1;
  swift_bridgeObjectRetain();
  sub_1D42B6E24();
}

double sub_1D435391C(double a1)
{
  uint64_t v2;
  double result;

  sub_1D42B28FC(&qword_1EFE4D160);
  v2 = sub_1D42B6F40();
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v2 + 16) = xmmword_1D45261D0;
  *(double *)(v2 + 32) = a1;
  return result;
}

void sub_1D435395C(uint64_t a1)
{
  uint64_t v2;

  sub_1D42B28FC(qword_1EFE40540);
  v2 = sub_1D42B6F40();
  *(_OWORD *)(v2 + 16) = xmmword_1D45261D0;
  sub_1D42B294C(a1, v2 + 32);
  sub_1D42B6E24();
}

uint64_t sub_1D43539A8@<X0>(__int128 *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  NSObject *v32;
  os_log_type_t v33;
  BOOL v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v42;
  char *v43;
  void (**v44)(uint64_t *@<X8>);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  void (*v71)(char *, char *, uint64_t);
  char *v72;
  NSObject *v73;
  os_log_type_t v74;
  char *v75;
  uint8_t *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  void (*v81)(char *, uint64_t);
  char *v82;
  void (*v83)(char *, uint64_t);
  uint64_t v84;
  void (*v85)(char *, char *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  void (**v104)(uint64_t *@<X8>);
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint8_t *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  unint64_t v122;
  __int128 v123;
  __int128 v124;
  uint64_t v125;
  __int128 v126;
  __int128 v127;
  uint64_t v128;
  uint64_t v129;

  v99 = a2;
  v91 = sub_1D42B28FC((uint64_t *)&unk_1EFE4CF00);
  v90 = *(_QWORD *)(v91 - 8);
  v3 = MEMORY[0x1E0C80A78](v91);
  v88 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = v4;
  MEMORY[0x1E0C80A78](v3);
  v89 = (char *)&v83 - v5;
  v96 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7D0);
  v94 = *(_QWORD *)(v96 - 8);
  MEMORY[0x1E0C80A78](v96);
  v93 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_1D42B28FC((uint64_t *)&unk_1EFE4CF10);
  v97 = *(_QWORD *)(v98 - 8);
  MEMORY[0x1E0C80A78](v98);
  v95 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F840);
  v84 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v115 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D42B28FC(&qword_1EFE4CF20);
  v113 = *(_QWORD *)(v10 - 8);
  v114 = v10;
  MEMORY[0x1E0C80A78](v10);
  v112 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v105 = *(_QWORD *)(v106 - 8);
  MEMORY[0x1E0C80A78](v106);
  v104 = (void (**)(uint64_t *@<X8>))((char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_1D451A0B0();
  v117 = *(uint8_t **)(v13 - 8);
  v118 = v13;
  MEMORY[0x1E0C80A78](v13);
  v103 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_1D42B28FC(&qword_1EFE4C9C0);
  v108 = *(_QWORD *)(v109 - 8);
  MEMORY[0x1E0C80A78](v109);
  v107 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_1D42B28FC(&qword_1EFE4CF28);
  MEMORY[0x1E0C80A78](v111);
  v110 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_1D42B28FC((uint64_t *)&unk_1EFE4CF30);
  v101 = *(_QWORD *)(v102 - 8);
  MEMORY[0x1E0C80A78](v102);
  v18 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1D4519D20();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x1E0C80A78](v19);
  v92 = (char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v83 - v24;
  MEMORY[0x1E0C80A78](v23);
  v27 = (char *)&v83 - v26;
  v28 = a1[1];
  v123 = *a1;
  v124 = v28;
  v125 = *((_QWORD *)a1 + 4);
  sub_1D4519D14();
  if (qword_1EFE40338 != -1)
    swift_once();
  v29 = sub_1D451A014();
  v30 = sub_1D42CC880(v29, (uint64_t)qword_1EFEA7700);
  v31 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  v120 = v27;
  v85 = v31;
  v31(v25, v27, v19);
  v86 = v30;
  v32 = sub_1D4519FFC();
  v33 = sub_1D451AF74();
  v34 = os_log_type_enabled(v32, v33);
  v116 = v18;
  v100 = v8;
  if (v34)
  {
    v35 = (uint8_t *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    v121 = v36;
    *(_DWORD *)v35 = 136446210;
    v83 = (void (*)(char *, uint64_t))(v35 + 4);
    sub_1D4306C10((uint64_t)&qword_1EFE4CB00);
    v37 = sub_1D451B7C0();
    v129 = sub_1D43D72EC(v37, v38, &v121);
    sub_1D451B1A8();
    swift_bridgeObjectRelease();
    v39 = *(void (**)(char *, uint64_t))(v20 + 8);
    v39(v25, v19);
    _os_log_impl(&dword_1D42A7000, v32, v33, "Started Creating Accessibility Sound Actions Session %{public}s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D825E524](v36, -1, -1);
    MEMORY[0x1D825E524](v35, -1, -1);
  }
  else
  {
    v39 = *(void (**)(char *, uint64_t))(v20 + 8);
    v39(v25, v19);
  }

  v126 = v123;
  v127 = v124;
  v128 = v125;
  v40 = v119;
  sub_1D43BDCD4();
  if (v40)
    return ((uint64_t (*)(char *, uint64_t))v39)(v120, v19);
  v83 = v39;
  v119 = v19;
  v42 = sub_1D42BA9B8();
  swift_release();
  v121 = v42;
  v43 = v103;
  (*((void (**)(char *, _QWORD, uint64_t))v117 + 13))(v103, *MEMORY[0x1E0C958B0], v118);
  v44 = v104;
  *v104 = sub_1D43BF480;
  v44[1] = 0;
  v45 = v105;
  v46 = v106;
  (*(void (**)(void (**)(uint64_t *@<X8>), _QWORD, uint64_t))(v105 + 104))(v44, *MEMORY[0x1E0C958F0], v106);
  sub_1D42B28FC((uint64_t *)&unk_1EFE4C9F0);
  sub_1D4306C60((uint64_t)&unk_1EFE4F850);
  v47 = v107;
  sub_1D451A380();
  (*(void (**)(void (**)(uint64_t *@<X8>), uint64_t))(v45 + 8))(v44, v46);
  (*((void (**)(char *, uint64_t))v117 + 1))(v43, v118);
  swift_release();
  v48 = sub_1D42B28FC((uint64_t *)&unk_1EFE557D0);
  sub_1D4306C60((uint64_t)&unk_1EFE4CA00);
  v49 = v112;
  v50 = v109;
  sub_1D451A308();
  v51 = v113;
  v52 = v114;
  v53 = (uint64_t)v110;
  (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v110, v49, v114);
  v54 = v111;
  *(_QWORD *)(v53 + *(int *)(v111 + 60)) = 96;
  *(_QWORD *)(v53 + *(int *)(v54 + 64)) = 2;
  *(_QWORD *)(v53 + *(int *)(v54 + 68)) = v48;
  (*(void (**)(char *, uint64_t))(v51 + 8))(v49, v52);
  (*(void (**)(char *, uint64_t))(v108 + 8))(v47, v50);
  sub_1D42B28FC((uint64_t *)&unk_1EFE4A660);
  sub_1D4306C60((uint64_t)&unk_1EFE4F860);
  v55 = v116;
  sub_1D451A308();
  sub_1D4328A1C(v53, &qword_1EFE4CF28);
  MEMORY[0x1E0C80A78](v56);
  *(&v83 - 2) = (void (*)(char *, uint64_t))v55;
  *(&v83 - 1) = (void (*)(char *, uint64_t))&v123;
  sub_1D43F8CA4(0xD000000000000022, 0x80000001D45536C0, (uint64_t (*)(void))sub_1D435D044);
  v118 = 0;
  sub_1D4306C60((uint64_t)&unk_1EFE4CF40);
  v57 = v89;
  v58 = v100;
  sub_1D451A308();
  v59 = v90;
  v60 = v88;
  v61 = v91;
  (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v88, v57, v91);
  v62 = (*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  v63 = swift_allocObject();
  *(_QWORD *)(v63 + 16) = sub_1D43BF7D8;
  *(_QWORD *)(v63 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v59 + 32))(v63 + v62, v60, v61);
  sub_1D42B28FC((uint64_t *)&unk_1EFE4F720);
  sub_1D4306C60((uint64_t)&qword_1EFE4CF50);
  v64 = v93;
  sub_1D451A2C0();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v57, v61);
  v121 = 0;
  v122 = 0xE000000000000000;
  sub_1D451B400();
  swift_bridgeObjectRelease();
  v121 = 0xD000000000000022;
  v122 = 0x80000001D45536F0;
  sub_1D4306C10((uint64_t)&qword_1EFE4CB00);
  v66 = v119;
  v65 = v120;
  sub_1D451B7C0();
  sub_1D451A794();
  swift_bridgeObjectRelease();
  sub_1D451A794();
  v67 = v95;
  sub_1D4406DA0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v64, v96);
  sub_1D4306C60((uint64_t)&unk_1EFE4F800);
  v68 = v98;
  v69 = sub_1D451A2E4();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v67, v68);
  v70 = v99;
  v71 = v85;
  v85(v99, v65, v66);
  *(_QWORD *)&v70[*(int *)(type metadata accessor for AccessibilitySoundActions.Session() + 20)] = v69;
  v72 = v92;
  v71(v92, v65, v66);
  swift_retain();
  v73 = sub_1D4519FFC();
  v74 = sub_1D451AF74();
  if (os_log_type_enabled(v73, v74))
  {
    v75 = v72;
    v76 = (uint8_t *)swift_slowAlloc();
    v77 = swift_slowAlloc();
    v121 = v77;
    *(_DWORD *)v76 = 136446210;
    v117 = v76 + 4;
    v78 = v75;
    v79 = sub_1D451B7C0();
    v129 = sub_1D43D72EC(v79, v80, &v121);
    sub_1D451B1A8();
    swift_bridgeObjectRelease();
    v81 = v83;
    v83(v78, v66);
    _os_log_impl(&dword_1D42A7000, v73, v74, "Finished Creating Accessibility Sound Actions Session %{public}s", v76, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D825E524](v77, -1, -1);
    MEMORY[0x1D825E524](v76, -1, -1);
    swift_release();

    (*(void (**)(char *, uint64_t))(v84 + 8))(v115, v100);
    v82 = v120;
  }
  else
  {

    v81 = v83;
    v83(v72, v66);
    swift_release();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v115, v58);
    v82 = v65;
  }
  v81(v82, v66);
  return (*(uint64_t (**)(char *, uint64_t))(v101 + 8))(v116, v102);
}

uint64_t sub_1D43546B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;

  v28 = a1;
  v35 = sub_1D4519AD4();
  v32 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v31 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1D42B28FC((uint64_t *)&unk_1EFE4CF60);
  v29 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D4519BC4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v30 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - v10;
  sub_1D42B28FC((uint64_t *)&unk_1EFE4CF30);
  sub_1D4306C60((uint64_t)&unk_1EFE4F870);
  v12 = sub_1D451A2E4();
  sub_1D439CDF4(0x14u, (uint64_t)v11);
  if (!v1)
  {
    v26 = v7;
    v27 = v12;
    v33 = v12;
    sub_1D42B28FC((uint64_t *)&unk_1EFE4C9F0);
    sub_1D4306C60((uint64_t)&unk_1EFE4F850);
    sub_1D451A308();
    sub_1D4306C60((uint64_t)&unk_1EFE4CF70);
    v13 = sub_1D451A2E4();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v3);
    v33 = 0x6A2E657069636572;
    v34 = 0xEB000000006E6F73;
    v15 = v31;
    v14 = v32;
    v16 = v35;
    (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v31, *MEMORY[0x1E0CAFD78], v35);
    sub_1D432E53C();
    v17 = v30;
    sub_1D4519BAC();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v15, v16);
    v18 = sub_1D4519BF4();
    v20 = v19;
    v21 = sub_1D43A9078();
    v22 = sub_1D43594F8(v21, v13, (uint64_t)v11);
    v24 = *(void (**)(char *, uint64_t))(v26 + 8);
    v35 = v22;
    v24(v17, v6);
    sub_1D42B5420(v18, v20);
    swift_release();
    swift_bridgeObjectRelease();
    v33 = v35;
    sub_1D42B28FC(&qword_1EFE4CB60);
    sub_1D4306C60((uint64_t)&unk_1EFE4CB70);
    sub_1D451A3A4();
    swift_release();
    v24(v11, v6);
  }
  return swift_release();
}

uint64_t sub_1D4354AC8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t *a3@<X8>)
{
  uint8x8_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  _BYTE *v11;
  uint64_t result;
  uint16x8_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  int16x8_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD __src[6];
  unsigned __int32 v36;
  char v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;

  v6 = *a2;
  v7 = a2[2];
  v30 = a2[3];
  v31 = a2[1];
  v8 = a2[5];
  v29 = a2[4];
  v3.i32[0] = *((_DWORD *)a2 + 12);
  v9 = *((_BYTE *)a2 + 52);
  v10 = *((_BYTE *)a2 + 53);
  v33 = a2[7];
  v32 = *((_BYTE *)a2 + 64);
  if ((sub_1D4342438() & 0x3F) != 0)
  {
    sub_1D435C53C();
    swift_allocError();
    *v11 = 2;
    return swift_willThrow();
  }
  else
  {
    v26 = a3;
    v13 = vmovl_u8(v3);
    v28 = v10 & 1;
    v13.i64[0] &= 0xFF01FF01FF01FF01;
    v27 = (int16x8_t)v13;
    v24 = sub_1D451B0A0();
    v25 = v14;
    v22 = v15;
    v16 = *(_DWORD *)(a1 + OBJC_IVAR____TtC13SoundAnalysis42SNLogMelBasedFeatureExtractorConfiguration_stepSizeFrames)
        / 0xA0u;
    v21 = sub_1D451B0A0();
    v18 = v17;
    v23 = v19;
    __src[0] = v6;
    __src[1] = v31;
    __src[2] = v7;
    __src[3] = v30;
    __src[4] = v29;
    __src[5] = v8;
    v36 = vmovn_s16(v27).u32[0];
    v37 = v9 & 1;
    v38 = v28;
    v39 = v33;
    v40 = v32 & 1;
    v41 = v16;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1D435C664();
    sub_1D434BCD0(__src);
    sub_1D435C6A4();
    swift_release();
    swift_release();
    if (v34)
    {
      return swift_release();
    }
    else
    {
      swift_release();
      sub_1D4397930();
      swift_release();
      sub_1D42B28FC((uint64_t *)&unk_1EFE4C9F0);
      sub_1D4306C60((uint64_t)&unk_1EFE4F850);
      v20 = sub_1D451A2E4();
      result = swift_release();
      *v26 = v20;
      v26[1] = v24;
      v26[2] = v25;
      v26[3] = v22;
      v26[4] = v21;
      v26[5] = v18;
      v26[6] = v23;
    }
  }
  return result;
}

uint64_t sub_1D4354D7C@<X0>(const void *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  _BYTE *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE __dst[72];
  uint64_t v20;

  if ((sub_1D4342438() & 0x3F) != 0)
  {
    sub_1D435C53C();
    swift_allocError();
    *v5 = 2;
    return swift_willThrow();
  }
  else
  {
    v17 = sub_1D451B0A0();
    v18 = v7;
    v9 = v8;
    v10 = sub_1D451B0A0();
    v12 = v11;
    v14 = v13;
    memcpy(__dst, a1, sizeof(__dst));
    sub_1D435DA44((uint64_t)a1);
    sub_1D434BD8C();
    if (v2)
    {
      return sub_1D4328888((uint64_t)a1);
    }
    else
    {
      sub_1D4328888((uint64_t)a1);
      v15 = sub_1D4397930();
      swift_release();
      v20 = v15;
      sub_1D42B28FC((uint64_t *)&unk_1EFE4C9F0);
      sub_1D4306C60((uint64_t)&unk_1EFE4F850);
      v16 = sub_1D451A2E4();
      result = swift_release();
      *a2 = v16;
      a2[1] = v17;
      a2[2] = v9;
      a2[3] = v18;
      a2[4] = v10;
      a2[5] = v12;
      a2[6] = v14;
    }
  }
  return result;
}

void sub_1D4354F34(uint64_t a1, uint8x8_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint16x8_t v6;
  char v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  int16x8_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD __src[6];
  unsigned __int32 v21;
  char v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;

  v16 = a4[1];
  v17 = *a4;
  v5 = a4[4];
  v14 = a4[3];
  v15 = a4[2];
  v13 = a4[5];
  a2.i32[0] = *((_DWORD *)a4 + 12);
  v6 = vmovl_u8(a2);
  v19 = a4[7];
  v18 = *((_BYTE *)a4 + 64);
  v6.i64[0] &= 0xFF01FF01FF01FF01;
  v12 = (int16x8_t)v6;
  v7 = *((_BYTE *)a4 + 52) & 1;
  v8 = *((_BYTE *)a4 + 53) & 1;
  v9 = *(_DWORD *)(a1 + OBJC_IVAR____TtC13SoundAnalysis41SNSoundPrintFeatureExtractorConfiguration_windowLengthFrames);
  if (v9 >= 0x200)
    v10 = (v9 - 512) / 0xA0 + 1;
  else
    v10 = 0;
  sub_1D451B0A0();
  v11 = *(_DWORD *)(a1 + OBJC_IVAR____TtC13SoundAnalysis41SNSoundPrintFeatureExtractorConfiguration_stepSizeFrames)
      / 0xA0u;
  sub_1D451B0A0();
  __src[0] = v17;
  __src[1] = v16;
  __src[2] = v15;
  __src[3] = v14;
  __src[4] = v5;
  __src[5] = v13;
  v21 = vmovn_s16(v12).u32[0];
  v22 = v7;
  v23 = v8;
  v24 = v19;
  v25 = v18 & 1;
  v26 = v10;
  v27 = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1D435C664();
  sub_1D434BB1C(__src);
}

uint64_t sub_1D43550AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  sub_1D435C6A4();
  swift_release();
  swift_release();
  if (v0)
    return swift_release();
  swift_release();
  v3 = sub_1D431EBEC();
  swift_release();
  *(_QWORD *)(v1 - 72) = v3;
  sub_1D42B28FC((uint64_t *)&unk_1EFE4C9F0);
  sub_1D4306C60((uint64_t)&unk_1EFE4F850);
  v4 = sub_1D451A2E4();
  result = swift_release();
  *(_QWORD *)v13 = v4;
  *(_QWORD *)(v13 + 8) = v9;
  *(_DWORD *)(v13 + 16) = v10;
  *(_DWORD *)(v13 + 20) = v11;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v5;
  *(_DWORD *)(v13 + 40) = v6;
  *(_DWORD *)(v13 + 44) = v7;
  *(_QWORD *)(v13 + 48) = v8;
  return result;
}

uint64_t sub_1D43551C0@<X0>(uint64_t a1@<X0>, const void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE __dst[72];
  uint64_t v24;

  v7 = *(_DWORD *)(a1 + OBJC_IVAR____TtC13SoundAnalysis41SNSoundPrintFeatureExtractorConfiguration_windowLengthFrames);
  if (v7 >= 0x200)
    v8 = (v7 - 512) / 0xA0 + 1;
  else
    v8 = 0;
  v21 = sub_1D451B0A0();
  v22 = v9;
  v11 = v10;
  v12 = *(_DWORD *)(a1 + OBJC_IVAR____TtC13SoundAnalysis41SNSoundPrintFeatureExtractorConfiguration_stepSizeFrames)
      / 0xA0u;
  v13 = sub_1D451B0A0();
  v15 = v14;
  v20 = v16;
  memcpy(__dst, a2, sizeof(__dst));
  sub_1D435DA44((uint64_t)a2);
  sub_1D434BBCC(v8, v12);
  if (v3)
    return sub_1D4328888((uint64_t)a2);
  sub_1D4328888((uint64_t)a2);
  v18 = sub_1D431EBEC();
  swift_release();
  v24 = v18;
  sub_1D42B28FC((uint64_t *)&unk_1EFE4C9F0);
  sub_1D4306C60((uint64_t)&unk_1EFE4F850);
  v19 = sub_1D451A2E4();
  result = swift_release();
  *a3 = v19;
  a3[1] = v21;
  a3[2] = v11;
  a3[3] = v22;
  a3[4] = v13;
  a3[5] = v15;
  a3[6] = v20;
  return result;
}

uint64_t sub_1D4355368@<X0>(const void *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  __int128 *v34;
  __int128 *v36;
  _QWORD *v37;
  __int128 *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  char *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t (*v56)(char *, uint64_t);
  __int128 *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t (*v61)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  char *v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  const void *v76;
  __int128 *v77;
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  _BYTE v83[216];
  _BYTE v84[224];
  uint64_t v85;

  v77 = a2;
  v73 = a3;
  v70 = sub_1D42B28FC(&qword_1EFE4CA80);
  v68 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v67 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D42B28FC(&qword_1EFE4CA88);
  v71 = *(_QWORD *)(v5 - 8);
  v72 = v5;
  MEMORY[0x1E0C80A78](v5);
  v69 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_1D4519D20();
  v7 = *(_QWORD *)(v80 - 8);
  v8 = MEMORY[0x1E0C80A78](v80);
  v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v62 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v62 - v14;
  sub_1D4519D14();
  v76 = a1;
  sub_1D435C71C(a1, v83);
  sub_1D435C71C(v83, v84);
  LODWORD(a1) = sub_1D435C758((uint64_t)v84);
  v16 = (char *)nullsub_1(v84);
  if ((_DWORD)a1 == 1)
  {
    v81 = 0x206D6F74737563;
    v82 = 0xE700000000000000;
    sub_1D451A794();
  }
  else
  {
    v17 = *v16;
    v81 = 0;
    v82 = 0xE000000000000000;
    LOBYTE(v85) = v17;
    sub_1D451B514();
  }
  v18 = v82;
  v79 = v81;
  if (qword_1EFE40338 != -1)
    swift_once();
  v19 = sub_1D451A014();
  v20 = sub_1D42CC880(v19, (uint64_t)qword_1EFEA7700);
  v65 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v65(v13, v15, v80);
  swift_bridgeObjectRetain_n();
  v66 = v20;
  v21 = sub_1D4519FFC();
  v22 = sub_1D451AF74();
  LODWORD(v75) = v22;
  v23 = os_log_type_enabled(v21, v22);
  v74 = v10;
  if (v23)
  {
    v24 = swift_slowAlloc();
    v64 = v15;
    v25 = v24;
    v63 = swift_slowAlloc();
    v81 = v63;
    *(_DWORD *)v25 = 136446466;
    v62 = v25 + 4;
    sub_1D4306C10((uint64_t)&qword_1EFE4CB00);
    v26 = v80;
    v27 = sub_1D451B7C0();
    v85 = sub_1D43D72EC(v27, v28, &v81);
    sub_1D451B1A8();
    swift_bridgeObjectRelease();
    v29 = *(void (**)(char *, uint64_t))(v7 + 8);
    v29(v13, v26);
    *(_WORD *)(v25 + 12) = 2080;
    swift_bridgeObjectRetain();
    v30 = v79;
    v85 = sub_1D43D72EC(v79, v18, &v81);
    sub_1D451B1A8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D42A7000, v21, (os_log_type_t)v75, "Started Creating Accessibility Sound Recognition Session %{public}s (%s)", (uint8_t *)v25, 0x16u);
    v31 = v63;
    swift_arrayDestroy();
    MEMORY[0x1D825E524](v31, -1, -1);
    v32 = v25;
    v15 = v64;
    MEMORY[0x1D825E524](v32, -1, -1);

  }
  else
  {
    v29 = *(void (**)(char *, uint64_t))(v7 + 8);
    v29(v13, v80);

    swift_bridgeObjectRelease_n();
    v30 = v79;
  }
  v33 = v78;
  v34 = sub_1D4357D9C(v76, v77);
  if (v33)
  {
    v29(v15, v80);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v36 = v34;
    v76 = 0;
    v78 = v29;
    v37 = (_QWORD *)swift_allocObject();
    v37[2] = sub_1D440E708;
    v37[3] = 0;
    v37[4] = v36;
    sub_1D42B28FC((uint64_t *)&unk_1EFE4CAF0);
    v38 = (__int128 *)v18;
    sub_1D4306C60((uint64_t)&unk_1EFE50D00);
    v39 = v67;
    sub_1D451A2C0();
    v81 = 0;
    v82 = 0xE000000000000000;
    sub_1D451B400();
    swift_bridgeObjectRelease();
    v81 = 0xD000000000000026;
    v82 = 0x80000001D4553660;
    sub_1D4306C10((uint64_t)&qword_1EFE4CB00);
    v40 = v80;
    v75 = v41;
    sub_1D451B7C0();
    sub_1D451A794();
    swift_bridgeObjectRelease();
    sub_1D451A794();
    v79 = v30;
    sub_1D451A794();
    sub_1D451A794();
    v42 = v69;
    sub_1D4406D10();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v39, v70);
    sub_1D4306C60((uint64_t)&unk_1EFE50FB0);
    v43 = v72;
    v44 = sub_1D451A2E4();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v42, v43);
    v45 = v73;
    v46 = v65;
    v65((char *)v73, v15, v40);
    *(_QWORD *)(v45 + *(int *)(type metadata accessor for AccessibilitySoundRecognition.Session(0) + 20)) = v44;
    v47 = v74;
    v46(v74, v15, v40);
    v77 = v38;
    swift_bridgeObjectRetain();
    swift_retain();
    v48 = v15;
    v49 = sub_1D4519FFC();
    v50 = sub_1D451AF74();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = swift_slowAlloc();
      v72 = swift_slowAlloc();
      v81 = v72;
      *(_DWORD *)v51 = 136446466;
      v73 = v44;
      v64 = v48;
      v52 = v80;
      v53 = sub_1D451B7C0();
      v85 = sub_1D43D72EC(v53, v54, &v81);
      sub_1D451B1A8();
      swift_bridgeObjectRelease();
      v55 = v47;
      v56 = (uint64_t (*)(char *, uint64_t))v78;
      v78(v55, v52);
      *(_WORD *)(v51 + 12) = 2080;
      v57 = v77;
      swift_bridgeObjectRetain();
      v85 = sub_1D43D72EC(v79, (unint64_t)v57, &v81);
      sub_1D451B1A8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D42A7000, v49, v50, "Finished Creating Accessibility Sound Recognition Session %{public}s (%s)", (uint8_t *)v51, 0x16u);
      v58 = v72;
      swift_arrayDestroy();
      MEMORY[0x1D825E524](v58, -1, -1);
      MEMORY[0x1D825E524](v51, -1, -1);
      swift_release();

      return v56(v64, v52);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      v59 = v47;
      v60 = v80;
      v61 = (uint64_t (*)(char *, uint64_t))v78;
      v78(v59, v80);
      swift_release();
      return v61(v48, v60);
    }
  }
}

uint64_t sub_1D4355B64(__n128 *a1, uint64_t *a2, uint64_t a3)
{
  uint8x8_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  CMTimeValue v29;
  CMTimeEpoch v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  int v37;
  id v38;
  int v39;
  int v40;
  id v41;
  id v42;
  uint64_t v43;
  void *v44;
  id v45;
  id v46;
  unint64_t v47;
  unsigned int v48;
  double v49;
  unsigned int v50;
  unsigned int v51;
  _BYTE *v53;
  uint16x8_t v54;
  int v55;
  char v56;
  id v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t *v66;
  unint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  int v96;
  int16x8_t v97;
  CMTime v98;
  CMTime time;
  __n128 v100;
  _QWORD __src[6];
  unsigned __int32 v102;
  char v103;
  char v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;

  v93 = a3;
  v92 = *a2;
  v91 = a2[1];
  v90 = a2[2];
  v89 = a2[3];
  v88 = a2[4];
  v87 = a2[5];
  v3.i32[0] = *((_DWORD *)a2 + 12);
  v96 = *((unsigned __int8 *)a2 + 52);
  v86 = *((unsigned __int8 *)a2 + 53);
  v95 = a2[7];
  v94 = *((unsigned __int8 *)a2 + 64);
  v82 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v80 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v79 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_1D451A0B0();
  v77 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v76 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_1D42B28FC(&qword_1EFE4ACA0);
  v83 = *(_QWORD *)(v84 - 8);
  MEMORY[0x1E0C80A78](v84);
  v81 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_1D42B28FC(&qword_1EFE4ACA8);
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v85 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_1D42B28FC(&qword_1EFE4C8F0);
  MEMORY[0x1E0C80A78](v72);
  v75 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_1D42B28FC(&qword_1EFE4C8F8);
  v71 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D42B28FC(&qword_1EFE4C960);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1D42B28FC(&qword_1EFE4C968);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t)a1;
  sub_1D435C470(a1, &v100);
  sub_1D435C470(&v100, (__n128 *)&time);
  v21 = v109;
  v22 = v97.i64[0];
  sub_1D43F32E0((uint64_t)&time);
  if (!v22)
  {
    v68 = v23;
    v97.i64[0] = v20;
    v66 = a2;
    v64 = v12;
    v69 = 0;
    v65 = v16;
    sub_1D435C470(&v100, (__n128 *)&time);
    sub_1D43F335C((uint64_t)&time);
    v63 = v19;
    v62 = v13;
    v61 = v17;
    v60 = v14;
    if (v24)
    {
      v25 = v24;
      v59 = sub_1D451A6EC();
      v67 = v26;

    }
    else
    {
      v59 = 0;
      v67 = 0xE000000000000000;
    }
    v27 = v96;
    v28 = v97.i64[0];
    v29 = *(_QWORD *)(v97.i64[0] + 24);
    v30 = *(_QWORD *)(v97.i64[0] + 40);
    type metadata accessor for SNModelMetadataUtils();
    v31 = *(_QWORD *)(v28 + 32);
    v32 = v68;
    v33 = objc_msgSend(v68, sel_modelDescription);
    v34 = sub_1D44C962C(v33, 16000);

    v35 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    LODWORD(v109) = v34;
    v36 = objc_msgSend(v35, sel_initWithUnsignedInt_, v34);
    sub_1D42DC694(v36);
    LODWORD(v33) = v37;

    time.value = v29;
    *(_QWORD *)&time.timescale = v31;
    time.epoch = v30;
    CMTimeConvertScale(&v98, &time, (int32_t)v33, kCMTimeRoundingMethod_RoundTowardZero);
    v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithLongLong_, v98.value);
    sub_1D44BD638(v38);
    v40 = v39;

    v41 = objc_msgSend(v32, sel_modelDescription);
    v42 = objc_msgSend(v41, sel_inputDescriptionsByName);

    sub_1D42E9D88(0, (unint64_t *)&qword_1EFE40360);
    v43 = sub_1D451A5CC();

    v44 = (void *)sub_1D4396600(v43);
    swift_bridgeObjectRelease();
    if (v44
      && (v45 = objc_msgSend(v44, sel_multiArrayConstraint), v44, v45))
    {
      v46 = objc_msgSend(v45, sel_shape);

      sub_1D42E9D88(0, (unint64_t *)&qword_1EFE404B0);
      v47 = sub_1D451A92C();

    }
    else
    {
      v47 = MEMORY[0x1E0DEE9D8];
    }
    v48 = v109;
    v49 = *(double *)(v97.i64[0] + 48);
    v21 = type metadata accessor for SNUtils();
    sub_1D44BC438(v47);
    v51 = v50;
    swift_bridgeObjectRelease();
    if (v49 >= 0.0 && v49 < 1.0)
    {
      v54 = vmovl_u8(v3);
      v55 = v40;
      v56 = v86 & 1;
      v54.i64[0] &= 0xFF01FF01FF01FF01;
      v97 = (int16x8_t)v54;
      v96 = v55;
      v57 = objc_msgSend(v32, sel_modelDescription, v59, v60, v61, v62, v63);
      sub_1D44C9714(v57);

      __src[0] = v92;
      __src[1] = v91;
      __src[2] = v90;
      __src[3] = v89;
      __src[4] = v88;
      __src[5] = v87;
      v102 = vmovn_s16(v97).u32[0];
      v103 = v27 & 1;
      v104 = v56;
      v105 = v95;
      v106 = v94 & 1;
      v107 = v51;
      v108 = v48;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1D435C664();
      sub_1D439940C(__src);
    }
    swift_bridgeObjectRelease();
    sub_1D435C4AC();
    swift_allocError();
    *v53 = 1;
    swift_willThrow();
    swift_unknownObjectRelease();
  }
  return v21;
}

void sub_1D43567CC(__n128 *a1, uint64_t a2, const void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 *v30;
  void *v31;
  void *v32;
  void *v33;
  unint64_t v34;
  __n128 *v35;
  CMTimeValue v36;
  CMTimeEpoch v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  id v42;
  void *v43;
  void *v44;
  id v45;
  unsigned int v46;
  unsigned int v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  const void *v54;
  id v55;
  uint64_t v56;
  double v57;
  unsigned int v58;
  unsigned int v59;
  uint64_t v60;
  _BYTE *v62;
  unsigned int v63;
  double v64;
  double v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  const void *v71;
  const void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (**v76)@<X0>(uint64_t *@<X8>);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  double (**v96)@<D0>(uint64_t@<X8>);
  void (**v97)(uint64_t@<X8>);
  void (*v98)(uint64_t, uint64_t);
  uint64_t v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t (**v121)@<X0>(uint64_t *@<X8>);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  const void *v126;
  __n128 *v127;
  CMTime v128;
  CMTime time;
  char v130[8];
  __n128 v131;
  char v132[8];
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;

  v126 = a3;
  v7 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  sub_1D42BA240(v7, (uint64_t)&v134);
  v122 = v8;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  sub_1D42BE768();
  v11 = sub_1D435EBB0(v10);
  sub_1D42BA240(v11, (uint64_t)&v133);
  v119 = v12;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v13);
  sub_1D42BE768();
  sub_1D42BA180(v14);
  v15 = sub_1D42B28FC(&qword_1EFE4ACA0);
  sub_1D42BA240(v15, (uint64_t)&v135);
  v124 = v16;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v17);
  sub_1D42BE768();
  sub_1D42BA180(v18);
  v19 = sub_1D42B28FC(&qword_1EFE4ACA8);
  sub_1D42BA240(v19, (uint64_t)v132);
  v115 = v20;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v21);
  sub_1D42BE768();
  v125 = v22;
  v112 = sub_1D42B28FC(&qword_1EFE4C8F0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v23);
  sub_1D42BA180((uint64_t)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v114 = sub_1D42B28FC(&qword_1EFE4C8F8);
  v113 = *(_QWORD *)(v114 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v25);
  sub_1D434799C();
  v26 = sub_1D42B28FC(&qword_1EFE4C960);
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  sub_1D42CB18C();
  v28 = sub_1D42B28FC(&qword_1EFE4C968);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v29);
  sub_1D42D7108();
  sub_1D435C470(a1, &v131);
  sub_1D435ECE8();
  v30 = v127;
  sub_1D43F32E0((uint64_t)&time);
  if (v30)
    goto LABEL_20;
  v110 = v31;
  v127 = a1;
  v106 = v5;
  v111 = 0;
  v107 = v3;
  sub_1D435ECE8();
  sub_1D43F335C((uint64_t)&time);
  v105 = v4;
  v104 = v26;
  v103 = v28;
  v102 = v27;
  if (v32)
  {
    v33 = v32;
    v101 = sub_1D451A6EC();
    v109 = v34;

  }
  else
  {
    v101 = 0;
    v109 = 0xE000000000000000;
  }
  v35 = v127;
  v36 = v127[1].n128_i64[1];
  v37 = v127[2].n128_i64[1];
  v38 = type metadata accessor for SNModelMetadataUtils();
  v39 = v35[2].n128_i64[0];
  v40 = sub_1D435ECCC(v38, sel_modelDescription);
  v108 = v38;
  v41 = sub_1D44C962C(v40, 16000);

  v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedInt_, v41);
  sub_1D42DC694(v42);
  v44 = v43;

  time.value = v36;
  *(_QWORD *)&time.timescale = v39;
  time.epoch = v37;
  CMTimeConvertScale(&v128, &time, (int32_t)v44, kCMTimeRoundingMethod_RoundTowardZero);
  v45 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithLongLong_, v128.value);
  sub_1D44BD638(v45);
  v47 = v46;

  v49 = objc_msgSend(sub_1D435ECCC(v48, sel_modelDescription), sel_inputDescriptionsByName);
  sub_1D435EBFC();
  sub_1D42EA3E0(v50, (unint64_t *)&qword_1EFE40360);
  v51 = sub_1D451A5CC();

  v52 = (void *)sub_1D4396600(v51);
  sub_1D435EB80();
  if (v52)
  {
    v53 = objc_msgSend(v52, sel_multiArrayConstraint);
    sub_1D435EBFC();
    v54 = v126;
    if (v44)
    {
      v55 = objc_msgSend(v44, sel_shape);

      sub_1D42EA3E0(v56, (unint64_t *)&qword_1EFE404B0);
      sub_1D451A92C();
      sub_1D435EBFC();
    }
    else
    {
      v44 = (void *)MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    v44 = (void *)MEMORY[0x1E0DEE9D8];
    v54 = v126;
  }
  v57 = v127[3].n128_f64[0];
  type metadata accessor for SNUtils();
  sub_1D44BC438((unint64_t)v44);
  v59 = v58;
  v60 = swift_bridgeObjectRelease();
  if (v57 < 0.0 || v57 >= 1.0)
  {
    sub_1D435E990();
    sub_1D435C4AC();
    sub_1D42B6D0C();
    *v62 = 1;
    sub_1D4312028();
    sub_1D42D1104();
LABEL_20:
    sub_1D42CB3F8();
    return;
  }
  v63 = v47;
  v64 = round((1.0 - v57) * (double)v47);
  if (v64 > 1.0)
    v65 = v64;
  else
    v65 = 1.0;
  v66 = sub_1D435ECCC(v60, sel_modelDescription);
  sub_1D44C9714(v66);
  v68 = v67;

  v69 = v41;
  sub_1D435ED44(v130, v54);
  sub_1D435DA44((uint64_t)v54);
  v70 = v111;
  sub_1D43994BC(v59, v41);
  v111 = v70;
  if (v70)
  {
    sub_1D4328888((uint64_t)v54);
    sub_1D42D1104();
    sub_1D435EB80();
    sub_1D435E990();
    goto LABEL_20;
  }
  v72 = v71;
  v108 = v68;
  LODWORD(v127) = v63;
  v100 = v69;
  sub_1D4328888((uint64_t)v54);
  v126 = v72;
  time.value = sub_1D4398FE0();
  v73 = v119;
  v74 = v118;
  v75 = v120;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v119 + 104))(v118, *MEMORY[0x1E0C958B0], v120);
  v76 = v121;
  *v121 = sub_1D43F45CC;
  v76[1] = 0;
  v77 = v122;
  v78 = v123;
  (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), _QWORD, uint64_t))(v122 + 104))(v76, *MEMORY[0x1E0C958F0], v123);
  sub_1D42CB9F8();
  sub_1D43071A0((uint64_t)&qword_1EFE496A0);
  sub_1D435EBEC();
  sub_1D451A380();
  (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v77 + 8))(v76, v78);
  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v74, v75);
  swift_release();
  v79 = sub_1D42B28FC(&qword_1EFE4ACE0);
  sub_1D4306C60((uint64_t)&qword_1EFE4ACE8);
  sub_1D435ECA4();
  sub_1D451A308();
  sub_1D42F1FA0((uint64_t)v54, *(uint64_t (**)(uint64_t, uint64_t))(v124 + 8));
  if ((~*(_QWORD *)&v65 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_28;
  }
  v80 = v117;
  v81 = v116;
  v82 = v115;
  v83 = v110;
  if (v65 <= -9.22337204e18)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v65 < 9.22337204e18)
  {
    v84 = v127;
    v85 = v125;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v115 + 16))(v117, v125, v116);
    v86 = v112;
    *(_QWORD *)(v80 + *(int *)(v112 + 60)) = v84;
    *(_QWORD *)(v80 + *(int *)(v86 + 64)) = (uint64_t)v65;
    *(_QWORD *)(v80 + *(int *)(v86 + 68)) = v79;
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v85, v81);
    sub_1D42B28FC(&qword_1EFE4C970);
    sub_1D435EC60((uint64_t)&unk_1EFE4C978);
    sub_1D451A308();
    sub_1D435EC68(v80);
    v87 = v107;
    v88 = v111;
    sub_1D438FAEC(v83);
    sub_1D435EAA8((uint64_t)&v131);
    if (v88)
    {
      sub_1D42D1104();
      sub_1D435E990();
      sub_1D435E990();
      swift_release();
    }
    else
    {
      v89 = sub_1D42B6F40();
      *(double *)(v89 + 16) = v65;
      *(_DWORD *)(v89 + 24) = v100;
      v90 = v108;
      *(_QWORD *)(v89 + 32) = v83;
      *(_QWORD *)(v89 + 40) = v90;
      *(_DWORD *)(v89 + 48) = (_DWORD)v127;
      v91 = v109;
      *(_QWORD *)(v89 + 56) = v101;
      *(_QWORD *)(v89 + 64) = v91;
      v92 = v102;
      v93 = v105;
      v94 = v104;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 16))(v105, v87, v104);
      v95 = v103;
      v96 = (double (**)@<D0>(uint64_t@<X8>))(v93 + *(int *)(v103 + 52));
      *v96 = sub_1D42EF0D8;
      v96[1] = 0;
      v97 = (void (**)(uint64_t@<X8>))(v93 + *(int *)(v95 + 56));
      *v97 = sub_1D435C4EC;
      v97[1] = (void (*)(uint64_t@<X8>))v89;
      v98 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
      swift_unknownObjectRetain();
      v98(v87, v94);
      sub_1D435EC60((uint64_t)&unk_1EFE4C980);
      sub_1D451A2E4();
      sub_1D42D1104();
      swift_release();
      sub_1D435EC68(v93);
    }
    goto LABEL_20;
  }
LABEL_29:
  __break(1u);
}

void sub_1D435712C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD __src[6];
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  v4 = qword_1EFE48EE8;
  swift_retain();
  sub_1D42BE984();
  sub_1D42BE934();
  if (v4 != -1)
    swift_once();
  __src[0] = qword_1EFEA7940;
  __src[1] = *(_QWORD *)algn_1EFEA7948;
  __src[2] = qword_1EFEA7950;
  __src[3] = unk_1EFEA7958;
  __src[4] = qword_1EFEA7960;
  __src[5] = unk_1EFEA7968;
  v6 = byte_1EFEA7970;
  v7 = byte_1EFEA7971;
  v8 = byte_1EFEA7972;
  v9 = byte_1EFEA7973;
  v10 = byte_1EFEA7974;
  v11 = byte_1EFEA7975;
  v12 = qword_1EFEA7978;
  v13 = byte_1EFEA7980;
  v14 = a1;
  v15 = a2;
  swift_bridgeObjectRetain();
  sub_1D42BE934();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D434BB1C(__src);
}

void sub_1D435727C(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  _QWORD v16[6];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _QWORD __src[6];
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;

  v30 = a1;
  v19 = sub_1D42B28FC(&qword_1EFE4CB40);
  v16[5] = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v16[2] = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1D42B28FC(&qword_1EFE4CB48);
  v16[4] = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v16[1] = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1D42B28FC(&qword_1EFE4CB50);
  v16[3] = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v16[0] = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1D42B28FC(&qword_1EFE4CB58);
  v21 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v20 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v28 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v27 = sub_1D451A0B0();
  v26 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v25 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1D42B28FC(&qword_1EFE4C9C0);
  v23 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v31 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *((_QWORD *)a4 + 4);
  v14 = a4[1];
  v32 = *a4;
  v33 = v14;
  v34 = v13;
  v15 = qword_1EFE48EE8;
  swift_retain();
  swift_retain();
  swift_retain();
  if (v15 != -1)
    swift_once();
  __src[0] = qword_1EFEA7940;
  __src[1] = *(_QWORD *)algn_1EFEA7948;
  __src[2] = qword_1EFEA7950;
  __src[3] = unk_1EFEA7958;
  __src[4] = qword_1EFEA7960;
  __src[5] = unk_1EFEA7968;
  v36 = byte_1EFEA7970;
  v37 = byte_1EFEA7971;
  v38 = byte_1EFEA7972;
  v39 = byte_1EFEA7973;
  v40 = byte_1EFEA7974;
  v41 = byte_1EFEA7975;
  v42 = qword_1EFEA7978;
  v43 = byte_1EFEA7980;
  v44 = a2;
  v45 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D434BB1C(__src);
}

uint64_t sub_1D435796C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;

  v24 = a1;
  v25 = sub_1D4519AD4();
  v1 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D4519BC4();
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D42B28FC(&qword_1EFE4CB80);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42B28FC(&qword_1EFE4C9C0);
  sub_1D4306C60((uint64_t)&unk_1EFE4CA00);
  sub_1D451A308();
  sub_1D4306C60((uint64_t)&unk_1EFE4CB88);
  v11 = sub_1D451A2E4();
  v12 = v24;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v26 = 0x6A2E657069636572;
  v27 = 0xEB000000006E6F73;
  v13 = v25;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAFD78], v25);
  sub_1D432E53C();
  sub_1D4519BAC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v13);
  v14 = v28;
  v15 = sub_1D4519BF4();
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v23);
    swift_release();
  }
  else
  {
    v17 = v15;
    v18 = v16;
    v20 = v22;
    v19 = v23;
    v28 = sub_1D43A9078();
    v13 = sub_1D43594F8(v28, v11, v12);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v19);
    sub_1D42B5420(v17, v18);
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v13;
}

void sub_1D4357C4C(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  uint64_t v8;

  v8 = sub_1D42B28FC(&qword_1EFE4CB28);
  MEMORY[0x1E0C80A78](v8);
  sub_1D435727C(a1, a2, a3, a4);
}

uint64_t sub_1D4357CD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (!v3)
  {
    *(_QWORD *)(v6 - 72) = a1;
    sub_1D42B28FC(&qword_1EFE4CB10);
    sub_1D4306C60((uint64_t)&unk_1EFE4CB18);
    sub_1D435C964();
    sub_1D451A410();
    swift_release();
    sub_1D4306C60((uint64_t)&unk_1EFE4CB38);
    v2 = sub_1D451A2E4();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v1);
  }
  return v2;
}

__int128 *sub_1D4357D9C(const void *a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  const void *v12;
  char *v13;
  int v14;
  unsigned __int8 v15;
  uint64_t v16;
  char v18[208];
  _BYTE v19[216];
  _QWORD v20[24];
  _BYTE v21[216];

  v5 = sub_1D4519BC4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v11 = &v18[-v10];
  sub_1D435C71C(a1, v19);
  sub_1D435C71C(v19, v21);
  if (sub_1D435C758((uint64_t)v21) == 1)
  {
    v12 = (const void *)nullsub_1(v21);
    memcpy(v18, v12, sizeof(v18));
    sub_1D435C794((uint64_t)a1);
    swift_bridgeObjectRelease();
    memcpy(v20, &v18[16], sizeof(v20));
    sub_1D435811C(v20, (uint64_t)a2);
  }
  v13 = (char *)nullsub_1(v21);
  v14 = *v13;
  v18[0] = *v13;
  v15 = sub_1D440F428(v18);
  sub_1D439CDF4(v15, (uint64_t)v9);
  if (!v2)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v9, v5);
    if (v14)
      v16 = 96;
    else
      v16 = 74;
    sub_1D4357FC4((uint64_t)v11, v16, 48, a2);
  }
  return a2;
}

void sub_1D4357FC4(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  uint64_t v8;

  v8 = sub_1D42B28FC(&qword_1EFE4CB08);
  MEMORY[0x1E0C80A78](v8);
  sub_1D4357C4C(a1, a2, a3, a4);
}

uint64_t sub_1D4358048(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (!v3)
  {
    *(_QWORD *)(v6 - 72) = a1;
    sub_1D42B28FC(&qword_1EFE4CB10);
    sub_1D4306C60((uint64_t)&unk_1EFE4CB18);
    sub_1D451A308();
    swift_release();
    sub_1D4306C60((uint64_t)&unk_1EFE4CB20);
    v2 = sub_1D451A2E4();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v1);
  }
  return v2;
}

void sub_1D435811C(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[18];

  v15[17] = a2;
  v3 = sub_1D42B28FC(&qword_1EFE4CD78);
  MEMORY[0x1E0C80A78](v3);
  v15[3] = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D42B28FC(&qword_1EFE4CD80);
  v15[5] = *(_QWORD *)(v5 - 8);
  v15[6] = v5;
  MEMORY[0x1E0C80A78](v5);
  v15[12] = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D42B28FC(&qword_1EFE4CD88);
  v15[8] = *(_QWORD *)(v7 - 8);
  v15[9] = v7;
  MEMORY[0x1E0C80A78](v7);
  v15[7] = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D42B28FC(&qword_1EFE4CD90);
  v15[11] = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v15[10] = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D42B28FC(&qword_1EFE4CD98);
  v15[13] = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v12 = sub_1D42B28FC(&qword_1EFE4CDA0);
  v15[14] = *(_QWORD *)(v12 - 8);
  v15[15] = v12;
  MEMORY[0x1E0C80A78](v12);
  v13 = sub_1D42B28FC(&qword_1EFE4CDA8);
  MEMORY[0x1E0C80A78](v13);
  sub_1D42B28FC(&qword_1EFE4CDB0);
  swift_allocObject();
  sub_1D4413C94(20, 0, MEMORY[0x1E0DEE9D8]);
  v15[4] = a1;
  v14 = *a1 - 512;
  if (!__OFSUB__(*a1, 512))
  {
    v15[2] = v3;
    sub_1D4408574(v14 / 160 + 1, 46);
  }
  __break(1u);
}

uint64_t sub_1D43587BC(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = sub_1D4519BC4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v20 - v10;
  if (__OFSUB__(*a1, 512))
  {
    __break(1u);
  }
  else
  {
    v12 = sub_1D4411DA4((*a1 - 512) / 5120 + 1);
    v13 = sub_1D441765C(v12);
    swift_bridgeObjectRelease();
    if (!v1)
    {
      sub_1D439CDF4(0x27u, (uint64_t)v11);
      sub_1D436BB64();
      v15 = v14;
      type metadata accessor for E5RTExecutionStream();
      v21 = swift_allocObject();
      *(_QWORD *)(v21 + 16) = v15;
      sub_1D4519AC8();
      sub_1D4519B88();
      v16 = *(void (**)(char *, uint64_t))(v5 + 8);
      v16(v8, v4);
      v17 = sub_1D436BC04();
      v18 = v21;
      type metadata accessor for E5RTExecutionStreamOperation();
      v19 = swift_allocObject();
      *(_QWORD *)(v19 + 16) = v17;
      sub_1D436C54C(v13);
      sub_1D436D938(v19);
      sub_1D436BDB0(v19);
      swift_release();
      type metadata accessor for AccessibilitySoundRecognition.CustomModel();
      swift_allocObject();
      sub_1D435CE08((uint64_t)a1);
      v2 = sub_1D440EC70(v18, v19, a1);
      v16(v11, v4);
    }
    return (uint64_t)v2;
  }
  return result;
}

uint64_t sub_1D4358A34(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD v14[6];
  uint64_t v15;
  __int128 *v16;

  v16 = a1;
  v2 = sub_1D42B28FC((uint64_t *)&unk_1EFE4CEC0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1D42B28FC((uint64_t *)&unk_1EFE51140);
  v6 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D4519BC4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D439CDF4(3u, (uint64_t)v12);
  if (!v1)
  {
    v14[0] = v5;
    v14[1] = v3;
    v14[2] = v8;
    v14[3] = v6;
    v14[4] = v10;
    v14[5] = v9;
    sub_1D435727C((uint64_t)v12, 96, 48, v16);
  }
  return v3;
}

_QWORD *sub_1D4358D2C(char a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t (*v36)@<X0>(uint64_t@<X8>);
  uint64_t v37;
  void (*v38)(_QWORD *@<X8>);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v41 = a5;
  v34 = a4;
  v31 = a3;
  v10 = sub_1D42B28FC(&qword_1EFE4CE18);
  v32 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D42B28FC(&qword_1EFE4CE20);
  v33 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1D42B28FC(&qword_1EFE4CE28);
  v17 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    swift_retain();
  }
  else
  {
    v35 = a2;
    v29 = v17;
    v30 = v18;
    sub_1D42B28FC((uint64_t *)&unk_1EFE4CDC0);
    sub_1D4306C60((uint64_t)&unk_1EFE4CE30);
    v28 = sub_1D451A2E4();
    v35 = v28;
    v36 = sub_1D4417EDC;
    v37 = 0;
    v38 = sub_1D435CF68;
    v26 = v13;
    v39 = v31;
    v40 = 1;
    swift_retain();
    sub_1D42B28FC((uint64_t *)&unk_1EFE51040);
    sub_1D42B28FC((uint64_t *)&unk_1EFE4CE40);
    v27 = v6;
    sub_1D4306C60((uint64_t)&unk_1EFE51050);
    sub_1D451A2F0();
    swift_release();
    sub_1D4306C60((uint64_t)&unk_1EFE4CE50);
    sub_1D451A32C();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v10);
    sub_1D4306C60((uint64_t)&unk_1EFE51060);
    v21 = v26;
    sub_1D451A3A4();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v21);
    sub_1D4306C60((uint64_t)&unk_1EFE4CE60);
    v22 = v29;
    v23 = sub_1D451A2E4();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v20, v22);
    a6 = sub_1D435905C(v23, v34);
    swift_release();
    swift_release();
  }
  return a6;
}

_QWORD *sub_1D435905C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD v38[2];
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v40 = a1;
  v4 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v41 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (_QWORD *)((char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1D451A0B0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_1D42B28FC((uint64_t *)&unk_1EFE51070);
  v45 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v12 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_1D42B28FC((uint64_t *)&unk_1EFE4CE70);
  v44 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1D42B28FC((uint64_t *)&unk_1EFE51080);
  v48 = *(_QWORD *)(v15 - 8);
  v49 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1D42B28FC((uint64_t *)&unk_1EFE4CE80);
  v50 = *(_QWORD *)(v18 - 8);
  v51 = v18;
  MEMORY[0x1E0C80A78](v18);
  v43 = (char *)v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1D42B28FC((uint64_t *)&unk_1EFE51090);
  v53 = *(_QWORD *)(v20 - 8);
  v54 = v20;
  MEMORY[0x1E0C80A78](v20);
  v52 = (char *)v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1D43587BC(a2);
  if (!v2)
  {
    v55 = v40;
    v23 = *MEMORY[0x1E0C958B0];
    v38[1] = v22;
    v39 = v17;
    v24 = v8;
    v25 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
    v40 = 0;
    v25(v10, v23, v7);
    *v6 = sub_1D44131A4;
    v6[1] = 0;
    v26 = *MEMORY[0x1E0C958F0];
    v38[0] = v7;
    v28 = v41;
    v27 = v42;
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v41 + 104))(v6, v26, v42);
    sub_1D42B28FC((uint64_t *)&unk_1EFE4CE90);
    sub_1D4306C60((uint64_t)&unk_1EFE510A0);
    sub_1D451A380();
    (*(void (**)(_QWORD *, uint64_t))(v28 + 8))(v6, v27);
    (*(void (**)(char *, _QWORD))(v24 + 8))(v10, v38[0]);
    sub_1D4306C60((uint64_t)&unk_1EFE4CEA0);
    swift_retain();
    v29 = v47;
    sub_1D451A3A4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v12, v29);
    v30 = v39;
    v31 = v46;
    sub_1D451A110();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v14, v31);
    sub_1D4306C60((uint64_t)&unk_1EFE510B0);
    v32 = v43;
    v33 = v49;
    sub_1D451A410();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v30, v33);
    sub_1D4306C60((uint64_t)&unk_1EFE4CEB0);
    v34 = v51;
    v35 = v52;
    sub_1D451A308();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v32, v34);
    sub_1D4306C60((uint64_t)&unk_1EFE510C0);
    v36 = v54;
    v6 = (_QWORD *)sub_1D451A2E4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v35, v36);
  }
  return v6;
}

uint64_t sub_1D43594F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v50[7];
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int v127;

  v110 = a3;
  v109 = sub_1D42B28FC(&qword_1EFE4CB98);
  MEMORY[0x1E0C80A78](v109);
  v108 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_1D42B28FC(&qword_1EFE4CBA0);
  v106 = *(_QWORD *)(v107 - 8);
  MEMORY[0x1E0C80A78](v107);
  v105 = (char *)v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_1D42B28FC(&qword_1EFE4CBA8);
  v103 = *(_QWORD *)(v104 - 8);
  MEMORY[0x1E0C80A78](v104);
  v102 = (char *)v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_1D42B28FC(&qword_1EFE4CBB0);
  v100 = *(_QWORD *)(v101 - 8);
  MEMORY[0x1E0C80A78](v101);
  v99 = (char *)v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_1D42B28FC(&qword_1EFE4CBB8);
  v10 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v12 = (char *)v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D42B28FC(&qword_1EFE4CBC0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_1D42B28FC(&qword_1EFE4CB40);
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v52 = (char *)v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_1D42B28FC(&qword_1EFE4CBC8);
  v97 = *(_QWORD *)(v98 - 8);
  MEMORY[0x1E0C80A78](v98);
  v96 = (char *)v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_1D42B28FC(&qword_1EFE4CBD0);
  MEMORY[0x1E0C80A78](v95);
  v94 = (char *)v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_1D42B28FC(&qword_1EFE4CBD8);
  v92 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v91 = (char *)v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_1D42B28FC(&qword_1EFE4CBE0);
  v89 = *(_QWORD *)(v90 - 8);
  MEMORY[0x1E0C80A78](v90);
  v88 = (char *)v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_1D42B28FC(&qword_1EFE4CBE8);
  v86 = *(_QWORD *)(v87 - 8);
  MEMORY[0x1E0C80A78](v87);
  v85 = (char *)v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1D42B28FC(&qword_1EFE4CBF0);
  v116 = *(_QWORD *)(v23 - 8);
  v117 = v23;
  v24 = MEMORY[0x1E0C80A78](v23);
  v84 = (char *)v50 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v115 = (char *)v50 - v26;
  v113 = sub_1D42B28FC(&qword_1EFE4CBF8);
  v112 = *(_QWORD *)(v113 - 8);
  MEMORY[0x1E0C80A78](v113);
  v111 = (char *)v50 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_1D42B28FC(&qword_1EFE4CC00);
  v62 = *(_QWORD *)(v63 - 8);
  v28 = MEMORY[0x1E0C80A78](v63);
  v60 = (char *)v50 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v61 = (char *)v50 - v30;
  v83 = sub_1D42B28FC(&qword_1EFE4CC08);
  MEMORY[0x1E0C80A78](v83);
  v82 = (char *)v50 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_1D42B28FC(&qword_1EFE4CC10);
  MEMORY[0x1E0C80A78](v81);
  v80 = (char *)v50 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_1D42B28FC(&qword_1EFE4CC18);
  MEMORY[0x1E0C80A78](v79);
  v78 = (char *)v50 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_1D42B28FC(&qword_1EFE4CC20);
  v76 = *(_QWORD *)(v77 - 8);
  MEMORY[0x1E0C80A78](v77);
  v75 = (char *)v50 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_1D42B28FC(&qword_1EFE4CC28);
  v57 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v56 = (char *)v50 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_1D42B28FC(&qword_1EFE4CC30);
  MEMORY[0x1E0C80A78](v51);
  v50[6] = (char *)v50 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_1D42B28FC(&qword_1EFE4CB48);
  v119 = *(_QWORD *)(v37 - 8);
  v120 = v37;
  MEMORY[0x1E0C80A78](v37);
  v121 = (char *)v50 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1D42B28FC(&qword_1EFE4CC38);
  v123 = *(_QWORD *)(v39 - 8);
  v124 = v39;
  v40 = MEMORY[0x1E0C80A78](v39);
  v114 = (char *)v50 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v40);
  v122 = (char *)v50 - v42;
  v73 = sub_1D42B28FC(&qword_1EFE4CC40);
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v71 = (char *)v50 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_1D42B28FC(&qword_1EFE4CC48);
  MEMORY[0x1E0C80A78](v70);
  v69 = (char *)v50 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_1D42B28FC(&qword_1EFE4CC50);
  MEMORY[0x1E0C80A78](v68);
  v67 = (char *)v50 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_1D42B28FC((uint64_t *)&unk_1EFE4CC58);
  v65 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v64 = (char *)v50 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16))
  {
    v47 = *(_QWORD *)(a1 + 16);
    v50[1] = v16;
    v50[2] = v14;
    v50[3] = v13;
    v50[4] = v12;
    v50[5] = v10;
    v118 = v3;
    swift_bridgeObjectRetain_n();
    swift_retain();
    v59 = a1;
    v126 = a1 + 80;
    v74 = MEMORY[0x1E0DEE9B8] + 8;
    v125 = v47;
    v48 = *(_QWORD *)(a1 + 56);
    v127 = *(_DWORD *)(a1 + 80);
    v126 = a1 + 136;
    __asm { BR              X9 }
  }
  swift_retain();
  return a2;
}

uint64_t sub_1D435B6FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t);
  void (*v51)(uint64_t *@<X8>);
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  void (**v56)(uint64_t *@<X8>);
  void (**v57)(uint64_t);
  void (*v58)(char *, uint64_t);
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;

  v83 = a5;
  v64 = a4;
  v79 = a3;
  v82 = a2;
  v6 = sub_1D42B28FC(&qword_1EFE4CBF0);
  v67 = *(_QWORD *)(v6 - 8);
  v68 = v6;
  MEMORY[0x1E0C80A78](v6);
  v65 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D42B28FC(&qword_1EFE4CD30);
  v69 = *(_QWORD *)(v8 - 8);
  v70 = v8;
  MEMORY[0x1E0C80A78](v8);
  v66 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_1D42B28FC(&qword_1EFE4CD38);
  v71 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v81 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_1D42B28FC(&qword_1EFE4CD40);
  MEMORY[0x1E0C80A78](v74);
  v72 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D42B28FC(&qword_1EFE4CD48);
  v75 = *(_QWORD *)(v12 - 8);
  v76 = v12;
  MEMORY[0x1E0C80A78](v12);
  v73 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1D42B28FC(&qword_1EFE4CD50);
  v77 = *(_QWORD *)(v14 - 8);
  v78 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1D4519AD4();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1D4519BC4();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v27 = (char *)&v63 - v26;
  v84 = a1;
  v85 = v82;
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E0CAFD78], v17);
  sub_1D432E53C();
  v28 = (uint64_t)v83;
  sub_1D4519BAC();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  v29 = v86;
  sub_1D436BB64();
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v27, v21);
  }
  else
  {
    v31 = v30;
    v83 = v16;
    type metadata accessor for E5RTExecutionStream();
    v32 = swift_allocObject();
    *(_QWORD *)(v32 + 16) = v31;
    v86 = v27;
    sub_1D4519AC8();
    sub_1D4519B88();
    v33 = *(void (**)(char *, uint64_t))(v22 + 8);
    v33(v25, v21);
    v34 = v21;
    v35 = sub_1D436BC04();
    type metadata accessor for E5RTExecutionStreamOperation();
    v36 = swift_allocObject();
    *(_QWORD *)(v36 + 16) = v35;
    sub_1D436D938(v36);
    v37 = v32;
    sub_1D436BDB0(v36);
    v84 = v64;
    sub_1D42B28FC(&qword_1EFE4CB60);
    v82 = sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);
    sub_1D4306C60((uint64_t)&unk_1EFE4CB70);
    v39 = v65;
    sub_1D451A3A4();
    sub_1D42B28FC((uint64_t *)&unk_1EFE4CD58);
    v40 = v66;
    v41 = v68;
    sub_1D451A104();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v39, v41);
    sub_1D42B28FC(&qword_1EFE4C7B0);
    v42 = v70;
    sub_1D451A104();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v40, v42);
    v43 = swift_allocObject();
    *(_QWORD *)(v43 + 16) = v37;
    *(_QWORD *)(v43 + 24) = v36;
    v44 = swift_allocObject();
    v45 = v79;
    *(_QWORD *)(v44 + 16) = v79;
    v46 = v45;
    v47 = swift_allocObject();
    *(_QWORD *)(v47 + 16) = sub_1D435CBF8;
    *(_QWORD *)(v47 + 24) = v44;
    v48 = swift_allocObject();
    *(_QWORD *)(v48 + 16) = sub_1D435CC10;
    *(_QWORD *)(v48 + 24) = v47;
    v49 = swift_allocObject();
    *(_QWORD *)(v49 + 16) = sub_1D435CBE0;
    *(_QWORD *)(v49 + 24) = v43;
    v50 = (void (*)(uint64_t))swift_allocObject();
    *((_QWORD *)v50 + 2) = sub_1D449FFBC;
    *((_QWORD *)v50 + 3) = 0;
    *((_QWORD *)v50 + 4) = sub_1D435CC40;
    *((_QWORD *)v50 + 5) = v49;
    *((_QWORD *)v50 + 6) = sub_1D435CC28;
    *((_QWORD *)v50 + 7) = v48;
    v51 = (void (*)(uint64_t *@<X8>))swift_allocObject();
    *((_QWORD *)v51 + 2) = v37;
    *((_QWORD *)v51 + 3) = v36;
    *((_QWORD *)v51 + 4) = v46;
    v52 = v71;
    v53 = *(void (**)(char *, char *, uint64_t))(v71 + 16);
    v63 = v37;
    v54 = (uint64_t)v72;
    v70 = v36;
    v53(v72, v81, v80);
    v55 = v74;
    v56 = (void (**)(uint64_t *@<X8>))(v54 + *(int *)(v74 + 52));
    *v56 = sub_1D435CCD0;
    v56[1] = v51;
    v57 = (void (**)(uint64_t))(v54 + *(int *)(v55 + 56));
    *v57 = sub_1D435CC84;
    v57[1] = v50;
    v58 = *(void (**)(char *, uint64_t))(v52 + 8);
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v58(v81, v80);
    sub_1D4306C60((uint64_t)&unk_1EFE4CD68);
    v59 = v73;
    sub_1D451A308();
    sub_1D4328A1C(v54, &qword_1EFE4CD40);
    v60 = v83;
    v61 = v76;
    sub_1D451A0C8();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v59, v61);
    sub_1D4306C60((uint64_t)&unk_1EFE4CD70);
    v62 = v78;
    v28 = sub_1D451A2E4();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v60, v62);
    v33(v86, v34);
  }
  return v28;
}

void sub_1D435BE84(uint64_t a1)
{
  if (a1)
    sub_1D435EB44();
  __break(1u);
}

void sub_1D435BEF4(void *__src@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD v5[10];

  memcpy(v5, __src, sizeof(v5));
  sub_1D43528FC(v5);
  if (!v2)
    *a2 = v4;
}

void sub_1D435BF50(void *__src@<X3>, uint64_t *a2@<X0>, void (*a3)(uint64_t *__return_ptr, _BYTE *)@<X1>, int a4@<W2>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[80];

  v9 = *a2;
  memcpy(v11, __src, sizeof(v11));
  sub_1D4471FE8(v9, a3, a4, v11);
  if (!v5)
    *a5 = v10;
}

uint64_t sub_1D435BFC4(void *__src)
{
  _BYTE __dst[120];

  memcpy(__dst, __src, sizeof(__dst));
  return sub_1D4352978(__dst);
}

void sub_1D435C00C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  sub_1D43538D0(*a1);
  *a2 = v3;
  sub_1D42B6E24();
}

uint64_t sub_1D435C030@<X0>(void *__src@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  _QWORD __dst[11];

  memcpy(__dst, __src, sizeof(__dst));
  result = sub_1D434E368(__dst);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_1D435C08C(void *__src@<X3>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  _BYTE __dst[88];

  memcpy(__dst, __src, sizeof(__dst));
  sub_1D4471F14();
  if (!v2)
    *a2 = v4;
}

void sub_1D435C100()
{
  sub_1D44A5A74();
}

void sub_1D435C118(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  sub_1D42B6E24();
}

void sub_1D435C124()
{
  sub_1D44A5C6C();
}

void sub_1D435C138(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  sub_1D42B6E24();
}

uint64_t sub_1D435C144@<X0>(uint64_t a1@<X8>)
{
  return sub_1D43546B0(a1);
}

uint64_t sub_1D435C174@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1D435796C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

_QWORD *sub_1D435C1B8@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v7;
  char v9;
  __int128 v10;
  _QWORD *result;
  _OWORD v12[2];
  uint64_t v13;

  v9 = *a1;
  v10 = *(_OWORD *)(a5 + 16);
  v12[0] = *(_OWORD *)a5;
  v12[1] = v10;
  v13 = *(_QWORD *)(a5 + 32);
  result = sub_1D4358D2C(v9, a2, a3, a4, (uint64_t)v12, a6);
  if (!v7)
    *a7 = result;
  return result;
}

void sub_1D435C200(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  __int128 v4;
  _OWORD v5[2];
  uint64_t v6;

  v4 = *(_OWORD *)(a3 + 16);
  v5[0] = *(_OWORD *)a3;
  v5[1] = v4;
  v6 = *(_QWORD *)(a3 + 32);
  sub_1D4352784(a1, a2, (uint64_t)v5, a4);
}

void sub_1D435C230(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1D435C200(a1, a2, *(_QWORD *)(v2 + 16), *(__int128 **)(v2 + 24));
}

uint64_t sub_1D435C248(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 40);
  sub_1D42B62C8(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D435C2BC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D435C304(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D435C34C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 80);
  v6 = *(_QWORD *)(a1 + 88);
  v7 = *(_QWORD *)(a1 + 96);
  v8 = *(_BYTE *)(a1 + 104);
  sub_1D42B5C3C(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
  sub_1D42B5C4C(v2, v3, v4, v5, v6, v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1D435C408()
{
  unint64_t result;

  result = qword_1EFE4C8E0;
  if (!qword_1EFE4C8E0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4529F5C, &type metadata for RuntimeFeatureFlags.SoundAnalysis);
    atomic_store(result, (unint64_t *)&qword_1EFE4C8E0);
  }
  return result;
}

uint64_t sub_1D435C444()
{
  sub_1D42B8F98();
  sub_1D42B8F2C();
  swift_release();
  return swift_deallocObject();
}

__n128 *sub_1D435C470(__n128 *a1, __n128 *a2)
{
  initializeWithTake for ClassifierVariant(a2, a1);
  return a2;
}

unint64_t sub_1D435C4AC()
{
  unint64_t result;

  result = qword_1EFE505D0;
  if (!qword_1EFE505D0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45392F0, &unk_1E9797848);
    atomic_store(result, (unint64_t *)&qword_1EFE505D0);
  }
  return result;
}

void sub_1D435C4EC(uint64_t a1@<X8>)
{
  sub_1D435D938(a1);
}

uint64_t sub_1D435C500()
{
  return sub_1D42B6E34();
}

void sub_1D435C50C()
{
  sub_1D42EECC8();
}

void sub_1D435C528(void **a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1D435D9D0(a1, a2, a3);
}

unint64_t sub_1D435C53C()
{
  unint64_t result;

  result = qword_1EFE4CA10;
  if (!qword_1EFE4CA10)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4536C44, &type metadata for ProcessingUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4CA10);
  }
  return result;
}

void sub_1D435C578(void *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1D435BEF4(a1, a2);
}

void sub_1D435C59C()
{
  uint64_t *v0;
  void (*v1)(uint64_t *__return_ptr, _BYTE *);
  int v2;
  void *v3;
  _QWORD *v4;

  sub_1D435ED38();
  sub_1D435BF50(v3, v0, v1, v2, v4);
}

uint64_t sub_1D435C5B4(void *a1)
{
  return sub_1D435BFC4(a1);
}

unint64_t sub_1D435C5CC()
{
  unint64_t result;

  result = qword_1EFE4CA50;
  if (!qword_1EFE4CA50)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45339CC, &type metadata for SharedVGGish.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4CA50);
  }
  return result;
}

uint64_t sub_1D435C608()
{
  return sub_1D43980F0();
}

uint64_t sub_1D435C610@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D4398180(a1, a2);
}

uint64_t sub_1D435C628@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1D435C030(a1, a2);
}

void sub_1D435C64C()
{
  void *v0;
  _QWORD *v1;

  sub_1D435ED38();
  sub_1D435C08C(v0, v1);
}

void sub_1D435C664()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D42CB15C();
}

void sub_1D435C6A4()
{
  swift_bridgeObjectRelease();
  sub_1D42B7204();
  swift_bridgeObjectRelease();
  sub_1D42CB15C();
}

unint64_t sub_1D435C6E0()
{
  unint64_t result;

  result = qword_1EFE50FD0;
  if (!qword_1EFE50FD0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C4C4, &unk_1E97979D0);
    atomic_store(result, (unint64_t *)&qword_1EFE50FD0);
  }
  return result;
}

void *sub_1D435C71C(const void *a1, void *a2)
{
  initializeWithTake for AccessibilitySoundRecognition.Request(a2, a1);
  return a2;
}

uint64_t sub_1D435C758(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 208);
}

uint64_t sub_1D435C760()
{
  sub_1D42B8F98();
  swift_release();
  return swift_deallocObject();
}

void sub_1D435C788()
{
  sub_1D435C100();
}

uint64_t sub_1D435C794(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char);
  char v5;

  v2 = sub_1D42CBA5C(a1);
  v5 = *(_BYTE *)(v1 + 208);
  v3(v2, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 144),
    *(_QWORD *)(v1 + 152),
    *(_QWORD *)(v1 + 160),
    *(_QWORD *)(v1 + 168),
    *(_QWORD *)(v1 + 176),
    *(_QWORD *)(v1 + 184),
    *(_QWORD *)(v1 + 192),
    *(_QWORD *)(v1 + 200),
    v5);
  return v1;
}

uint64_t sub_1D435C804(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1D435C964()
{
  unint64_t result;

  result = qword_1EFE4CB30;
  if (!qword_1EFE4CB30)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453999C, &unk_1E9799B48);
    atomic_store(result, (unint64_t *)&qword_1EFE4CB30);
  }
  return result;
}

uint64_t sub_1D435C9A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1D435C174(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1D435C9BC()
{
  swift_bridgeObjectRelease();
  sub_1D42EA3A0();
  return swift_deallocObject();
}

uint64_t sub_1D435C9D8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1D44B82E4(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a3);
}

uint64_t sub_1D435C9F0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1D44B8384(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_1D435CA08(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_1D449F5E0(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_1D435CA20(uint64_t *a1@<X0>, const void *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE __dst[72];

  v5 = *a1;
  v6 = a1[1];
  memcpy(__dst, a2, sizeof(__dst));
  sub_1D434E388(v5, v6, __dst);
  if (!v3)
    *a3 = v7;
}

uint64_t sub_1D435CA7C@<X0>(uint64_t *a1@<X0>, void (*a2)(uint64_t *__return_ptr, _QWORD *)@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t result;

  result = sub_1D4471FD4(*a1, a2, a3, *a4, a4[1]);
  if (!v5)
    *a5 = result;
  return result;
}

void sub_1D435CAB0(uint64_t *a1@<X0>, const void *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _BYTE __dst[72];

  v5 = *a1;
  memcpy(__dst, a2, sizeof(__dst));
  sub_1D435291C(v5, __dst);
  if (!v3)
    *a3 = v6;
}

uint64_t sub_1D435CB08(uint64_t a1, const void *a2)
{
  _BYTE __dst[72];

  memcpy(__dst, a2, sizeof(__dst));
  return sub_1D4352998();
}

uint64_t sub_1D435CB60()
{
  return sub_1D449EF68();
}

uint64_t sub_1D435CB68(uint64_t *a1)
{
  uint64_t v1;

  return sub_1D449EF14(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1D435CB80(uint64_t a1)
{
  sub_1D449E99C(a1);
}

uint64_t sub_1D435CB98()
{
  return sub_1D42B6E34();
}

uint64_t sub_1D435CBA4()
{
  sub_1D42B8F98();
  sub_1D42EA3A0();
  return swift_deallocObject();
}

void sub_1D435CBBC()
{
  sub_1D44A0100();
}

uint64_t sub_1D435CBC4()
{
  sub_1D42EA528();
  sub_1D42B8F98();
  sub_1D42EA3A0();
  return swift_deallocObject();
}

void sub_1D435CBE0(uint64_t a1)
{
  uint64_t v1;

  sub_1D436FE08(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1D435CBF8(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_1D449FF8C(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1D435CC10(uint64_t a1)
{
  uint64_t v1;

  return sub_1D4496750(a1, *(void (**)(uint64_t *__return_ptr, _QWORD *))(v1 + 16));
}

void sub_1D435CC28(uint64_t *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v3;

  sub_1D449FFE4(a1, a2, a3, *(uint64_t (**)(_QWORD))(v3 + 16));
}

uint64_t sub_1D435CC40(uint64_t a1)
{
  return sub_1D44A001C(a1);
}

uint64_t sub_1D435CC58()
{
  sub_1D42B8F98();
  sub_1D42B8F2C();
  swift_release();
  return swift_deallocObject();
}

void sub_1D435CC84(uint64_t a1)
{
  sub_1D44A0048(a1);
}

uint64_t sub_1D435CCA4()
{
  sub_1D42EA528();
  sub_1D42B8F98();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1D435CCD0(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_1D42DCEFC(*(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1D435CCEC()
{
  sub_1D42EA528();
  sub_1D42B8F98();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D435ECC4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_1D435CDE4@<X0>(char *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1D435C1B8(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), (_QWORD *)(v2 + 32), v2 + 224, *(_QWORD **)(v2 + 264), a2);
}

uint64_t sub_1D435CE08(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1D435CF68(_QWORD *a1@<X8>)
{
  sub_1D4417EE4(a1);
}

uint64_t sub_1D435CF70@<X0>(uint64_t *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_1D44131EC(a1, a2);
}

uint64_t sub_1D435CF88()
{
  sub_1D42B8F98();
  return swift_deallocObject();
}

void sub_1D435CFA8(char *a1@<X0>, uint64_t *a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;

  sub_1D4417CA8(a1, a2, *(uint64_t (**)(char *))(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), a3);
}

uint64_t sub_1D435CFB4()
{
  return sub_1D42B6E34();
}

uint64_t sub_1D435CFC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D4472948(*(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), a1);
}

unint64_t sub_1D435CFCC()
{
  unint64_t result;

  result = qword_1EFE51160;
  if (!qword_1EFE51160)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4544F70, &type metadata for CombineUtils.Activation);
    atomic_store(result, (unint64_t *)&qword_1EFE51160);
  }
  return result;
}

unint64_t sub_1D435D008()
{
  unint64_t result;

  result = qword_1EFE4F820;
  if (!qword_1EFE4F820)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4535E54, &unk_1E9798D70);
    atomic_store(result, (unint64_t *)&qword_1EFE4F820);
  }
  return result;
}

uint64_t sub_1D435D044@<X0>(uint64_t a1@<X8>)
{
  return sub_1D435C144(a1);
}

uint64_t sub_1D435D05C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1D42B28FC((uint64_t *)&unk_1EFE4CF00);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  sub_1D42B8F98();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1D435D0D0()
{
  sub_1D42B28FC((uint64_t *)&unk_1EFE4CF00);
  sub_1D44A5C6C();
}

void sub_1D435D108(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  sub_1D42B6E24();
}

void sub_1D435D114(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_1D42B28FC(a3);
  sub_1D431B48C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_1D42B6E24();
}

unint64_t sub_1D435D14C()
{
  unint64_t result;

  result = qword_1EFE4CFE8;
  if (!qword_1EFE4CFE8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E690, &type metadata for RemoteRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4CFE8);
  }
  return result;
}

unint64_t sub_1D435D188()
{
  unint64_t result;

  result = qword_1EFE4CFF0;
  if (!qword_1EFE4CFF0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E640, &type metadata for RemoteRequest.AopClassificationDemoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4CFF0);
  }
  return result;
}

unint64_t sub_1D435D1C4()
{
  unint64_t result;

  result = qword_1EFE4D000;
  if (!qword_1EFE4D000)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E5F0, &type metadata for RemoteRequest.AccessibilitySoundActionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D000);
  }
  return result;
}

unint64_t sub_1D435D200()
{
  unint64_t result;

  result = qword_1EFE4D008;
  if (!qword_1EFE4D008)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for AccessibilitySoundActions.Request, &type metadata for AccessibilitySoundActions.Request);
    atomic_store(result, (unint64_t *)&qword_1EFE4D008);
  }
  return result;
}

unint64_t sub_1D435D23C()
{
  unint64_t result;

  result = qword_1EFE4D010;
  if (!qword_1EFE4D010)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E5A0, &type metadata for RemoteRequest.AccessibilitySoundRecognitionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D010);
  }
  return result;
}

unint64_t sub_1D435D278()
{
  unint64_t result;

  result = qword_1EFE4D018;
  if (!qword_1EFE4D018)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for AccessibilitySoundRecognition.Request, &type metadata for AccessibilitySoundRecognition.Request);
    atomic_store(result, (unint64_t *)&qword_1EFE4D018);
  }
  return result;
}

unint64_t sub_1D435D2B4()
{
  unint64_t result;

  result = qword_1EFE4D020;
  if (!qword_1EFE4D020)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E550, &type metadata for RemoteRequest.DirectionOfArrivalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D020);
  }
  return result;
}

unint64_t sub_1D435D2F0()
{
  unint64_t result;

  result = qword_1EFE4D028;
  if (!qword_1EFE4D028)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4532778, &unk_1E97A9D88);
    atomic_store(result, (unint64_t *)&qword_1EFE4D028);
  }
  return result;
}

unint64_t sub_1D435D32C()
{
  unint64_t result;

  result = qword_1EFE4D030;
  if (!qword_1EFE4D030)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E500, &type metadata for RemoteRequest.SoundDetectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D030);
  }
  return result;
}

unint64_t sub_1D435D368()
{
  unint64_t result;

  result = qword_1EFE4D038;
  if (!qword_1EFE4D038)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527470, &unk_1E979A9E8);
    atomic_store(result, (unint64_t *)&qword_1EFE4D038);
  }
  return result;
}

unint64_t sub_1D435D3A4()
{
  unint64_t result;

  result = qword_1EFE4D040;
  if (!qword_1EFE4D040)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E4B0, &type metadata for RemoteRequest.ShazamCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D040);
  }
  return result;
}

unint64_t sub_1D435D3E0()
{
  unint64_t result;

  result = qword_1EFE4D048;
  if (!qword_1EFE4D048)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453F320, &unk_1E97A99D8);
    atomic_store(result, (unint64_t *)&qword_1EFE4D048);
  }
  return result;
}

unint64_t sub_1D435D41C()
{
  unint64_t result;

  result = qword_1EFE4D050;
  if (!qword_1EFE4D050)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E460, &type metadata for RemoteRequest.AudioLevelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D050);
  }
  return result;
}

unint64_t sub_1D435D458()
{
  unint64_t result;

  result = qword_1EFE4D058;
  if (!qword_1EFE4D058)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454D560, &unk_1E979B648);
    atomic_store(result, (unint64_t *)&qword_1EFE4D058);
  }
  return result;
}

unint64_t sub_1D435D494()
{
  unint64_t result;

  result = qword_1EFE4D060;
  if (!qword_1EFE4D060)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E410, &type metadata for RemoteRequest.SpeechEmotionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D060);
  }
  return result;
}

unint64_t sub_1D435D4D0()
{
  unint64_t result;

  result = qword_1EFE4D068;
  if (!qword_1EFE4D068)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454F090, &unk_1E97A8260);
    atomic_store(result, (unint64_t *)&qword_1EFE4D068);
  }
  return result;
}

unint64_t sub_1D435D50C()
{
  unint64_t result;

  result = qword_1EFE4D070;
  if (!qword_1EFE4D070)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E3C0, &type metadata for RemoteRequest.SpeechUtteranceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D070);
  }
  return result;
}

unint64_t sub_1D435D548()
{
  unint64_t result;

  result = qword_1EFE4D078;
  if (!qword_1EFE4D078)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4528508, &unk_1E97A4D30);
    atomic_store(result, (unint64_t *)&qword_1EFE4D078);
  }
  return result;
}

unint64_t sub_1D435D584()
{
  unint64_t result;

  result = qword_1EFE4D080;
  if (!qword_1EFE4D080)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E370, &type metadata for RemoteRequest.SoundClassificationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D080);
  }
  return result;
}

unint64_t sub_1D435D5C0()
{
  unint64_t result;

  result = qword_1EFE4D088;
  if (!qword_1EFE4D088)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4539198, &unk_1E979A588);
    atomic_store(result, (unint64_t *)&qword_1EFE4D088);
  }
  return result;
}

unint64_t sub_1D435D5FC()
{
  unint64_t result;

  result = qword_1EFE4D090;
  if (!qword_1EFE4D090)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E320, &type metadata for RemoteRequest.ExampleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D090);
  }
  return result;
}

unint64_t sub_1D435D638()
{
  unint64_t result;

  result = qword_1EFE4D098;
  if (!qword_1EFE4D098)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for ExampleRemoteWorkload.Request, &type metadata for ExampleRemoteWorkload.Request);
    atomic_store(result, (unint64_t *)&qword_1EFE4D098);
  }
  return result;
}

void sub_1D435D674(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  sub_1D431B48C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_1D42B6E24();
}

unint64_t sub_1D435D6AC()
{
  unint64_t result;

  result = qword_1EFE4D110;
  if (!qword_1EFE4D110)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for AccessibilitySoundActions.Request, &type metadata for AccessibilitySoundActions.Request);
    atomic_store(result, (unint64_t *)&qword_1EFE4D110);
  }
  return result;
}

unint64_t sub_1D435D6E8()
{
  unint64_t result;

  result = qword_1EFE4D118;
  if (!qword_1EFE4D118)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for AccessibilitySoundRecognition.Request, &type metadata for AccessibilitySoundRecognition.Request);
    atomic_store(result, (unint64_t *)&qword_1EFE4D118);
  }
  return result;
}

unint64_t sub_1D435D724()
{
  unint64_t result;

  result = qword_1EFE4D120;
  if (!qword_1EFE4D120)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4532750, &unk_1E97A9D88);
    atomic_store(result, (unint64_t *)&qword_1EFE4D120);
  }
  return result;
}

unint64_t sub_1D435D760()
{
  unint64_t result;

  result = qword_1EFE4D128;
  if (!qword_1EFE4D128)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527448, &unk_1E979A9E8);
    atomic_store(result, (unint64_t *)&qword_1EFE4D128);
  }
  return result;
}

unint64_t sub_1D435D79C()
{
  unint64_t result;

  result = qword_1EFE4D130;
  if (!qword_1EFE4D130)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453F2F8, &unk_1E97A99D8);
    atomic_store(result, (unint64_t *)&qword_1EFE4D130);
  }
  return result;
}

unint64_t sub_1D435D7D8()
{
  unint64_t result;

  result = qword_1EFE4D138;
  if (!qword_1EFE4D138)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454D538, &unk_1E979B648);
    atomic_store(result, (unint64_t *)&qword_1EFE4D138);
  }
  return result;
}

unint64_t sub_1D435D814()
{
  unint64_t result;

  result = qword_1EFE4D140;
  if (!qword_1EFE4D140)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454F068, &unk_1E97A8260);
    atomic_store(result, (unint64_t *)&qword_1EFE4D140);
  }
  return result;
}

unint64_t sub_1D435D850()
{
  unint64_t result;

  result = qword_1EFE4D148;
  if (!qword_1EFE4D148)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45284E0, &unk_1E97A4D30);
    atomic_store(result, (unint64_t *)&qword_1EFE4D148);
  }
  return result;
}

unint64_t sub_1D435D88C()
{
  unint64_t result;

  result = qword_1EFE4D150;
  if (!qword_1EFE4D150)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4539170, &unk_1E979A588);
    atomic_store(result, (unint64_t *)&qword_1EFE4D150);
  }
  return result;
}

unint64_t sub_1D435D8C8()
{
  unint64_t result;

  result = qword_1EFE4D158;
  if (!qword_1EFE4D158)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for ExampleRemoteWorkload.Request, &type metadata for ExampleRemoteWorkload.Request);
    atomic_store(result, (unint64_t *)&qword_1EFE4D158);
  }
  return result;
}

uint64_t sub_1D435D908()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D435ECC4();
  return swift_deallocObject();
}

void sub_1D435D938(uint64_t a1@<X8>)
{
  sub_1D43F47F4(a1);
}

uint64_t sub_1D435D960()
{
  return sub_1D42B6E34();
}

uint64_t sub_1D435D970()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease();
  sub_1D435ECC4();
  swift_release();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 160);
  if ((~v1 & 0xF000000000000007) != 0)

  return swift_deallocObject();
}

void sub_1D435D9D0(void **a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_1D42EED54(a1, a2, a3, *(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 72), *(_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 88), *(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 96), *(_QWORD *)(v3 + 104), v3 + 112);
}

void sub_1D435DA14(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1D435CAB0(a1, (const void *)(v2 + 16), a2);
}

void sub_1D435DA2C()
{
  uint64_t *v0;
  uint64_t (*v1)(uint64_t *);
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  sub_1D435ED38();
  sub_1D4327140(v0, v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1D435DA44(uint64_t a1)
{
  uint64_t v1;

  sub_1D42CBA5C(a1);
  swift_retain();
  sub_1D42BE934();
  sub_1D42B8F24();
  sub_1D42BE984();
  sub_1D42BE9A0();
  sub_1D42EA340();
  swift_retain();
  return v1;
}

uint64_t sub_1D435DAA8(uint64_t a1)
{
  uint64_t v1;

  return sub_1D435CB08(a1, *(const void **)(v1 + 16));
}

uint64_t sub_1D435DAC0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D435DAE4()
{
  swift_bridgeObjectRelease();
  sub_1D42EA3A0();
  return swift_deallocObject();
}

uint64_t sub_1D435DB04()
{
  sub_1D42EA528();
  sub_1D42B8F2C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1D435DB50(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1D435CA20(a1, (const void *)(v2 + 16), a2);
}

uint64_t sub_1D435DB68()
{
  uint64_t *v0;
  void (*v1)(uint64_t *__return_ptr, _QWORD *);
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;

  sub_1D435ED38();
  return sub_1D435CA7C(v0, v1, v2, v3, v4);
}

uint64_t getEnumTagSinglePayload for RemoteRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF6)
  {
    if (a2 + 10 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 10) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 11;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v5 = v6 - 11;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1D435DC54 + 4 * byte_1D452D6BC[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1D435DC88 + 4 * byte_1D452D6B7[v4]))();
}

uint64_t sub_1D435DC88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D435DC90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D435DC98);
  return result;
}

uint64_t sub_1D435DCA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D435DCACLL);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1D435DCB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D435DCB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RemoteRequest.CodingKeys()
{
  return &type metadata for RemoteRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for RemoteRequest.ExampleCodingKeys()
{
  return &type metadata for RemoteRequest.ExampleCodingKeys;
}

ValueMetadata *type metadata accessor for RemoteRequest.SoundClassificationCodingKeys()
{
  return &type metadata for RemoteRequest.SoundClassificationCodingKeys;
}

ValueMetadata *type metadata accessor for RemoteRequest.SpeechUtteranceCodingKeys()
{
  return &type metadata for RemoteRequest.SpeechUtteranceCodingKeys;
}

ValueMetadata *type metadata accessor for RemoteRequest.SpeechEmotionCodingKeys()
{
  return &type metadata for RemoteRequest.SpeechEmotionCodingKeys;
}

ValueMetadata *type metadata accessor for RemoteRequest.AudioLevelCodingKeys()
{
  return &type metadata for RemoteRequest.AudioLevelCodingKeys;
}

ValueMetadata *type metadata accessor for RemoteRequest.ShazamCodingKeys()
{
  return &type metadata for RemoteRequest.ShazamCodingKeys;
}

ValueMetadata *type metadata accessor for RemoteRequest.SoundDetectionCodingKeys()
{
  return &type metadata for RemoteRequest.SoundDetectionCodingKeys;
}

ValueMetadata *type metadata accessor for RemoteRequest.DirectionOfArrivalCodingKeys()
{
  return &type metadata for RemoteRequest.DirectionOfArrivalCodingKeys;
}

ValueMetadata *type metadata accessor for RemoteRequest.AccessibilitySoundRecognitionCodingKeys()
{
  return &type metadata for RemoteRequest.AccessibilitySoundRecognitionCodingKeys;
}

ValueMetadata *type metadata accessor for RemoteRequest.AccessibilitySoundActionsCodingKeys()
{
  return &type metadata for RemoteRequest.AccessibilitySoundActionsCodingKeys;
}

uint64_t _s13SoundAnalysis13RemoteRequestO17ExampleCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D435DDB8 + 4 * byte_1D452D6C1[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D435DDD8 + 4 * byte_1D452D6C6[v4]))();
}

_BYTE *sub_1D435DDB8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D435DDD8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D435DDE0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D435DDE8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D435DDF0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D435DDF8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RemoteRequest.AopClassificationDemoCodingKeys()
{
  return &type metadata for RemoteRequest.AopClassificationDemoCodingKeys;
}

unint64_t sub_1D435DE18()
{
  unint64_t result;

  result = qword_1EFE4D168;
  if (!qword_1EFE4D168)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452DB10, &type metadata for RemoteRequest.AopClassificationDemoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D168);
  }
  return result;
}

unint64_t sub_1D435DE58()
{
  unint64_t result;

  result = qword_1EFE4D170;
  if (!qword_1EFE4D170)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452DBC8, &type metadata for RemoteRequest.AccessibilitySoundActionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D170);
  }
  return result;
}

unint64_t sub_1D435DE98()
{
  unint64_t result;

  result = qword_1EFE4D178;
  if (!qword_1EFE4D178)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452DC80, &type metadata for RemoteRequest.AccessibilitySoundRecognitionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D178);
  }
  return result;
}

unint64_t sub_1D435DED8()
{
  unint64_t result;

  result = qword_1EFE4D180;
  if (!qword_1EFE4D180)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452DD38, &type metadata for RemoteRequest.DirectionOfArrivalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D180);
  }
  return result;
}

unint64_t sub_1D435DF18()
{
  unint64_t result;

  result = qword_1EFE4D188;
  if (!qword_1EFE4D188)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452DDF0, &type metadata for RemoteRequest.SoundDetectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D188);
  }
  return result;
}

unint64_t sub_1D435DF58()
{
  unint64_t result;

  result = qword_1EFE4D190;
  if (!qword_1EFE4D190)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452DEA8, &type metadata for RemoteRequest.ShazamCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D190);
  }
  return result;
}

unint64_t sub_1D435DF98()
{
  unint64_t result;

  result = qword_1EFE4D198;
  if (!qword_1EFE4D198)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452DF60, &type metadata for RemoteRequest.AudioLevelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D198);
  }
  return result;
}

unint64_t sub_1D435DFD8()
{
  unint64_t result;

  result = qword_1EFE4D1A0;
  if (!qword_1EFE4D1A0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E018, &type metadata for RemoteRequest.SpeechEmotionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D1A0);
  }
  return result;
}

unint64_t sub_1D435E018()
{
  unint64_t result;

  result = qword_1EFE4D1A8;
  if (!qword_1EFE4D1A8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E0D0, &type metadata for RemoteRequest.SpeechUtteranceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D1A8);
  }
  return result;
}

unint64_t sub_1D435E058()
{
  unint64_t result;

  result = qword_1EFE4D1B0;
  if (!qword_1EFE4D1B0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E188, &type metadata for RemoteRequest.SoundClassificationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D1B0);
  }
  return result;
}

unint64_t sub_1D435E098()
{
  unint64_t result;

  result = qword_1EFE4D1B8;
  if (!qword_1EFE4D1B8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E240, &type metadata for RemoteRequest.ExampleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D1B8);
  }
  return result;
}

unint64_t sub_1D435E0D8()
{
  unint64_t result;

  result = qword_1EFE4D1C0;
  if (!qword_1EFE4D1C0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E2F8, &type metadata for RemoteRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D1C0);
  }
  return result;
}

unint64_t sub_1D435E118()
{
  unint64_t result;

  result = qword_1EFE4D1C8;
  if (!qword_1EFE4D1C8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E1B0, &type metadata for RemoteRequest.ExampleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D1C8);
  }
  return result;
}

unint64_t sub_1D435E158()
{
  unint64_t result;

  result = qword_1EFE4D1D0;
  if (!qword_1EFE4D1D0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E1D8, &type metadata for RemoteRequest.ExampleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D1D0);
  }
  return result;
}

unint64_t sub_1D435E198()
{
  unint64_t result;

  result = qword_1EFE4D1D8;
  if (!qword_1EFE4D1D8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E0F8, &type metadata for RemoteRequest.SoundClassificationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D1D8);
  }
  return result;
}

unint64_t sub_1D435E1D8()
{
  unint64_t result;

  result = qword_1EFE4D1E0;
  if (!qword_1EFE4D1E0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E120, &type metadata for RemoteRequest.SoundClassificationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D1E0);
  }
  return result;
}

unint64_t sub_1D435E218()
{
  unint64_t result;

  result = qword_1EFE4D1E8;
  if (!qword_1EFE4D1E8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E040, &type metadata for RemoteRequest.SpeechUtteranceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D1E8);
  }
  return result;
}

unint64_t sub_1D435E258()
{
  unint64_t result;

  result = qword_1EFE4D1F0;
  if (!qword_1EFE4D1F0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E068, &type metadata for RemoteRequest.SpeechUtteranceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D1F0);
  }
  return result;
}

unint64_t sub_1D435E298()
{
  unint64_t result;

  result = qword_1EFE4D1F8;
  if (!qword_1EFE4D1F8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452DF88, &type metadata for RemoteRequest.SpeechEmotionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D1F8);
  }
  return result;
}

unint64_t sub_1D435E2D8()
{
  unint64_t result;

  result = qword_1EFE4D200;
  if (!qword_1EFE4D200)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452DFB0, &type metadata for RemoteRequest.SpeechEmotionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D200);
  }
  return result;
}

unint64_t sub_1D435E318()
{
  unint64_t result;

  result = qword_1EFE4D208;
  if (!qword_1EFE4D208)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452DED0, &type metadata for RemoteRequest.AudioLevelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D208);
  }
  return result;
}

unint64_t sub_1D435E358()
{
  unint64_t result;

  result = qword_1EFE4D210;
  if (!qword_1EFE4D210)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452DEF8, &type metadata for RemoteRequest.AudioLevelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D210);
  }
  return result;
}

unint64_t sub_1D435E398()
{
  unint64_t result;

  result = qword_1EFE4D218;
  if (!qword_1EFE4D218)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452DE18, &type metadata for RemoteRequest.ShazamCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D218);
  }
  return result;
}

unint64_t sub_1D435E3D8()
{
  unint64_t result;

  result = qword_1EFE4D220;
  if (!qword_1EFE4D220)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452DE40, &type metadata for RemoteRequest.ShazamCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D220);
  }
  return result;
}

unint64_t sub_1D435E418()
{
  unint64_t result;

  result = qword_1EFE4D228;
  if (!qword_1EFE4D228)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452DD60, &type metadata for RemoteRequest.SoundDetectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D228);
  }
  return result;
}

unint64_t sub_1D435E458()
{
  unint64_t result;

  result = qword_1EFE4D230;
  if (!qword_1EFE4D230)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452DD88, &type metadata for RemoteRequest.SoundDetectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D230);
  }
  return result;
}

unint64_t sub_1D435E498()
{
  unint64_t result;

  result = qword_1EFE4D238;
  if (!qword_1EFE4D238)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452DCA8, &type metadata for RemoteRequest.DirectionOfArrivalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D238);
  }
  return result;
}

unint64_t sub_1D435E4D8()
{
  unint64_t result;

  result = qword_1EFE4D240;
  if (!qword_1EFE4D240)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452DCD0, &type metadata for RemoteRequest.DirectionOfArrivalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D240);
  }
  return result;
}

unint64_t sub_1D435E518()
{
  unint64_t result;

  result = qword_1EFE4D248;
  if (!qword_1EFE4D248)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452DBF0, &type metadata for RemoteRequest.AccessibilitySoundRecognitionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D248);
  }
  return result;
}

unint64_t sub_1D435E558()
{
  unint64_t result;

  result = qword_1EFE4D250;
  if (!qword_1EFE4D250)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452DC18, &type metadata for RemoteRequest.AccessibilitySoundRecognitionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D250);
  }
  return result;
}

unint64_t sub_1D435E598()
{
  unint64_t result;

  result = qword_1EFE4D258;
  if (!qword_1EFE4D258)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452DB38, &type metadata for RemoteRequest.AccessibilitySoundActionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D258);
  }
  return result;
}

unint64_t sub_1D435E5D8()
{
  unint64_t result;

  result = qword_1EFE4D260;
  if (!qword_1EFE4D260)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452DB60, &type metadata for RemoteRequest.AccessibilitySoundActionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D260);
  }
  return result;
}

unint64_t sub_1D435E618()
{
  unint64_t result;

  result = qword_1EFE4D268;
  if (!qword_1EFE4D268)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452DA80, &type metadata for RemoteRequest.AopClassificationDemoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D268);
  }
  return result;
}

unint64_t sub_1D435E658()
{
  unint64_t result;

  result = qword_1EFE4D270;
  if (!qword_1EFE4D270)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452DAA8, &type metadata for RemoteRequest.AopClassificationDemoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D270);
  }
  return result;
}

unint64_t sub_1D435E698()
{
  unint64_t result;

  result = qword_1EFE4D278;
  if (!qword_1EFE4D278)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E268, &type metadata for RemoteRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D278);
  }
  return result;
}

unint64_t sub_1D435E6D8()
{
  unint64_t result;

  result = qword_1EFE4D280;
  if (!qword_1EFE4D280)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E290, &type metadata for RemoteRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D280);
  }
  return result;
}

void sub_1D435E71C()
{
  sub_1D435C50C();
}

uint64_t sub_1D435E768@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D435C610(a1, a2);
}

uint64_t sub_1D435E77C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 - 344) + 8))(*(_QWORD *)(v1 - 320), v0);
}

uint64_t sub_1D435E798()
{
  return sub_1D451B610();
}

uint64_t sub_1D435E7B0()
{
  return sub_1D451B6F4();
}

uint64_t sub_1D435E7CC()
{
  return sub_1D451B688();
}

uint64_t sub_1D435E7E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 256) + 8))(v2, v1);
}

void sub_1D435E7F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  *(_QWORD *)(v0 + 512) = *(_QWORD *)(v0 + 288);
  *(_QWORD *)(v0 + 256) = v2;
  *(_QWORD *)(v0 + 520) = v2;
  *(_QWORD *)(v0 + 528) = *(_QWORD *)(v0 + 248);
  *(_QWORD *)(v0 + 536) = v3;
  *(_QWORD *)(v0 + 544) = *(_QWORD *)(v0 + 240);
  *(_QWORD *)(v0 + 288) = v1;
  *(_QWORD *)(v0 + 552) = v1;
  *(_BYTE *)(v0 + 560) = *(_DWORD *)(v0 + 232);
  *(_BYTE *)(v0 + 561) = *(_DWORD *)(v0 + 224);
  *(_BYTE *)(v0 + 562) = *(_DWORD *)(v0 + 216);
  *(_BYTE *)(v0 + 563) = *(_DWORD *)(v0 + 208);
  *(_BYTE *)(v0 + 564) = *(_DWORD *)(v0 + 200);
  *(_BYTE *)(v0 + 565) = v4;
  *(_QWORD *)(v0 + 568) = *(_QWORD *)(v0 + 192);
  *(_BYTE *)(v0 + 576) = *(_DWORD *)(v0 + 184);
}

uint64_t sub_1D435E864()
{
  return sub_1D451B760();
}

uint64_t sub_1D435E874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 264) + 8))(v2, v1);
}

void sub_1D435E888()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 288) = *(_QWORD *)v1;
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 240) = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 248) = v2;
  *(_DWORD *)(v0 + 232) = *(unsigned __int8 *)(v1 + 48);
  *(_DWORD *)(v0 + 224) = *(unsigned __int8 *)(v1 + 49);
  *(_DWORD *)(v0 + 216) = *(unsigned __int8 *)(v1 + 50);
  *(_DWORD *)(v0 + 208) = *(unsigned __int8 *)(v1 + 51);
  *(_DWORD *)(v0 + 200) = *(unsigned __int8 *)(v1 + 52);
  *(_QWORD *)(v0 + 192) = *(_QWORD *)(v1 + 56);
  *(_DWORD *)(v0 + 184) = *(unsigned __int8 *)(v1 + 64);
}

uint64_t sub_1D435E8DC()
{
  return sub_1D451B760();
}

uint64_t sub_1D435E8E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t sub_1D435E8F8()
{
  uint64_t v0;

  return v0;
}

void sub_1D435E908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  v2 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v0 + 80) = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 96) = v2;
  *(_DWORD *)(v0 + 72) = *(unsigned __int8 *)(v1 + 50);
  v3 = *(unsigned __int8 *)(v1 + 51);
  *(_DWORD *)(v0 + 60) = *(unsigned __int8 *)(v1 + 52);
  *(_DWORD *)(v0 + 64) = v3;
  *(_DWORD *)(v0 + 56) = *(unsigned __int8 *)(v1 + 53);
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 56);
  *(_DWORD *)(v0 + 40) = *(unsigned __int8 *)(v1 + 64);
}

uint64_t sub_1D435E954()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 402) = *(_DWORD *)(v0 + 72);
  *(_BYTE *)(v0 + 403) = *(_DWORD *)(v0 + 64);
  *(_BYTE *)(v0 + 404) = *(_DWORD *)(v0 + 60);
  *(_BYTE *)(v0 + 405) = *(_DWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 408) = *(_QWORD *)(v0 + 48);
  *(_BYTE *)(v0 + 416) = *(_DWORD *)(v0 + 40);
  return AudioConfiguration.hash(into:)();
}

uint64_t sub_1D435E990()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D435E998()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1D435E9A8()
{
  return sub_1D451B964();
}

__n128 sub_1D435E9B4()
{
  uint64_t v0;

  return *(__n128 *)(v0 - 304);
}

uint64_t sub_1D435E9F0(__n128 a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, unsigned __int8 a5, unsigned __int8 a6, unsigned __int8 a7, unsigned __int8 a8, unsigned __int8 a9)
{
  __n128 *v9;
  unint64_t v10;
  unsigned __int8 v11;

  v9[16] = a1;
  v9[17].n128_u8[0] = a4;
  v9[17].n128_u8[1] = a5;
  v9[17].n128_u8[2] = a6;
  v9[17].n128_u8[3] = a7;
  v9[17].n128_u8[4] = a8;
  v9[17].n128_u8[5] = a9;
  v9[17].n128_u64[1] = v10;
  v9[18].n128_u8[0] = v11;
  return static AudioConfiguration.== infix(_:_:)((uint64_t)&v9[28], (uint64_t)&v9[14]);
}

uint64_t sub_1D435EA20()
{
  return sub_1D451B688();
}

uint64_t sub_1D435EA28@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 416) = a1;
  return AudioConfiguration.hash(into:)();
}

void sub_1D435EA38(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 304) = a1;
}

uint64_t sub_1D435EA44()
{
  uint64_t v0;
  char v1;

  *(_BYTE *)(v0 + 736) = v1;
  return static AudioConfiguration.== infix(_:_:)(v0 + 896, v0 + 672);
}

uint64_t sub_1D435EA54()
{
  return swift_task_dealloc();
}

uint64_t sub_1D435EA60()
{
  return swift_getEnumCaseMultiPayload();
}

id sub_1D435EA6C()
{
  return sub_1D4457124();
}

uint64_t sub_1D435EAA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(a1 - 256) + 8))(v1, *(_QWORD *)(v2 - 360));
}

void sub_1D435EAC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, char a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;

  *(_QWORD *)(v8 + 688) = a3;
  *(_QWORD *)(v8 + 696) = v10;
  *(_QWORD *)(v8 + 704) = a4;
  *(_QWORD *)(v8 + 712) = v9;
  *(_BYTE *)(v8 + 720) = a5;
  *(_BYTE *)(v8 + 721) = a6;
  *(_BYTE *)(v8 + 722) = a7;
  *(_BYTE *)(v8 + 723) = a8;
  *(_BYTE *)(v8 + 724) = v11;
  *(_BYTE *)(v8 + 725) = v12;
}

uint64_t sub_1D435EAEC()
{
  uint64_t v0;

  return sub_1D42F0D34(v0 - 216);
}

uint64_t sub_1D435EAF4()
{
  return swift_task_alloc();
}

void *sub_1D435EB08(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xD1uLL);
}

uint64_t sub_1D435EB10()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 216);
}

uint64_t sub_1D435EB1C()
{
  return sub_1D451A308();
}

void *sub_1D435EB30(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x79uLL);
}

void sub_1D435EB44()
{
  JUMPOUT(0x1D825E53CLL);
}

uint64_t sub_1D435EB70(uint64_t a1, _BYTE *a2)
{
  char v2;

  *a2 = v2;
  return swift_willThrow();
}

uint64_t sub_1D435EB80()
{
  return swift_bridgeObjectRelease();
}

void sub_1D435EB88()
{
  char v0;
  void *v1;
  void *v2;

  sub_1D42B62C8(v2, v1, v0);
}

uint64_t sub_1D435EB98()
{
  return swift_bridgeObjectRelease();
}

void sub_1D435EBA0()
{
  uint64_t v0;
  void *v1;

  sub_1D42B62C8(v1, *(void **)(v0 + 176), *(_DWORD *)(v0 + 184));
}

uint64_t sub_1D435EBB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return sub_1D451A0B0();
}

void *sub_1D435EBC0(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB9uLL);
}

id sub_1D435EBD4(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_1D435EBDC(__n128 *a1, __n128 a2, __n128 a3)
{
  unint64_t v3;

  a1[1] = a3;
  a1[2] = a2;
  a1[3].n128_u64[0] = v3;
  return swift_retain();
}

uint64_t sub_1D435EBEC()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

void sub_1D435EBFC()
{
  void *v0;

}

void sub_1D435EC04()
{
  uint64_t v0;
  char v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v7 + 936) = v8;
  *(_BYTE *)(v7 + 944) = v6;
  *(_BYTE *)(v7 + 945) = v5;
  *(_BYTE *)(v7 + 946) = v4;
  *(_BYTE *)(v7 + 947) = v3;
  *(_BYTE *)(v7 + 948) = v2;
  *(_BYTE *)(v7 + 949) = v1;
  *(_QWORD *)(v7 + 952) = v0;
}

uint64_t sub_1D435EC28()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D435EC30()
{
  return swift_task_dealloc();
}

uint64_t sub_1D435EC3C()
{
  return sub_1D451B970();
}

uint64_t sub_1D435EC44(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

void sub_1D435EC58()
{
  uint64_t v0;

}

void sub_1D435EC60(uint64_t a1)
{
  sub_1D4306C60(a1);
}

void sub_1D435EC68(uint64_t a1)
{
  uint64_t *v1;

  sub_1D4328A1C(a1, v1);
}

uint64_t sub_1D435EC70()
{
  uint64_t v0;

  return sub_1D42B5400(v0);
}

uint64_t sub_1D435EC7C()
{
  uint64_t v0;

  return sub_1D435C2BC(v0 + 896);
}

uint64_t sub_1D435EC84()
{
  uint64_t v0;

  return sub_1D435C34C(v0 + 896);
}

uint64_t sub_1D435EC8C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1D435EC98@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 - 256);
}

uint64_t sub_1D435ECC4()
{
  return swift_bridgeObjectRelease();
}

id sub_1D435ECCC(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_1D435ECD4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

void sub_1D435ECE0()
{
  uint64_t v0;

  sub_1D42F0D80(v0);
}

__n128 *sub_1D435ECE8()
{
  uint64_t v0;

  return sub_1D435C470((__n128 *)(v0 - 112), (__n128 *)(v0 - 208));
}

uint64_t sub_1D435ED30(uint64_t a1)
{
  uint64_t v1;

  return sub_1D430BC2C(a1, v1);
}

void *sub_1D435ED44(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

uint64_t sub_1D435ED4C()
{
  return type metadata accessor for RemoteRequest();
}

double SNSpeechDistanceResult.timeRange.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = v1 + OBJC_IVAR___SNSpeechDistanceResult_impl;
  *(_QWORD *)v3 = *(_QWORD *)a1;
  *(_QWORD *)(v3 + 8) = *(_QWORD *)(a1 + 8);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a1 + 16);
  result = *(double *)(a1 + 32);
  *(double *)(v3 + 32) = result;
  *(_QWORD *)(v3 + 40) = v2;
  return result;
}

void sub_1D435ED8C(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR___SNSpeechDistanceResult_impl + 48) = a1;
}

void sub_1D435EDA0(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR___SNSpeechDistanceResult_impl + 56) = a1;
}

void sub_1D435EDB4(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR___SNSpeechDistanceResult_impl + 64) = a1;
}

uint64_t sub_1D435EDC8()
{
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B988();
  return sub_1D451B988();
}

BOOL sub_1D435EE8C(double *a1, double *a2)
{
  double v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  BOOL v11;
  _BOOL8 result;
  _QWORD v14[2];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];
  __int128 v19;
  uint64_t v20;
  uint64_t v21;

  v2 = *a1;
  v3 = *((_QWORD *)a1 + 5);
  v4 = a1[6];
  v5 = a1[7];
  v6 = a1[8];
  v7 = *a2;
  v8 = a2[6];
  v9 = a2[7];
  v10 = a2[8];
  v17 = *((_QWORD *)a2 + 5);
  *(double *)v18 = v2;
  *(double *)&v18[1] = a1[1];
  v19 = *((_OWORD *)a1 + 1);
  v20 = *((_QWORD *)a1 + 4);
  v21 = v3;
  *(double *)v14 = v7;
  *(double *)&v14[1] = a2[1];
  v15 = *((_OWORD *)a2 + 1);
  v16 = *((_QWORD *)a2 + 4);
  v11 = static TimeRange.== infix(_:_:)((uint64_t)v18, (uint64_t)v14);
  result = 0;
  if (v11 && v4 == v8 && v5 == v9)
    return v6 == v10;
  return result;
}

uint64_t sub_1D435EF44(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 0x676E6152656D6974 && a2 == 0xE900000000000065;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D4553820 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = a1 == 0x756C61566E61656DLL && a2 == 0xE900000000000065;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x80000001D4553850)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v7 = sub_1D451B820();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 3;
      else
        return 4;
    }
  }
}

uint64_t sub_1D435F0FC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D435F134 + 4 * byte_1D452E710[a1]))(0x676E6152656D6974, 0xE900000000000065);
}

unint64_t sub_1D435F134()
{
  return 0xD000000000000011;
}

uint64_t sub_1D435F170(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v4 = sub_1D42B28FC((uint64_t *)&unk_1EFE4D2B8);
  v13 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  v9 = v2[2];
  v8 = v2[3];
  v14 = v2[5];
  sub_1D42B5528(a1, a1[3]);
  sub_1D4360348();
  sub_1D451BA24();
  v17 = v7;
  v18 = v2[1];
  v19 = v9;
  v20 = v8;
  v21 = v2[4];
  v22 = v14;
  v16 = 0;
  sub_1D42CA408();
  v10 = v15;
  sub_1D451B760();
  if (v10)
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v6, v4);
  v12 = v13;
  LOBYTE(v17) = 1;
  sub_1D4360568();
  LOBYTE(v17) = 2;
  sub_1D4360568();
  LOBYTE(v17) = 3;
  sub_1D4360568();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v6, v4);
}

uint64_t sub_1D435F324()
{
  sub_1D451B958();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D4360598();
  sub_1D4360598();
  sub_1D4360598();
  return sub_1D451B994();
}

uint64_t sub_1D435F41C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = sub_1D42B28FC(&qword_1EFE4D2A0);
  MEMORY[0x1E0C80A78](v5);
  sub_1D42B5528(a1, a1[3]);
  sub_1D4360348();
  sub_1D451BA0C();
  if (!v2)
  {
    sub_1D42CA3CC();
    sub_1D451B688();
    sub_1D4360550(1);
    v7 = v6;
    sub_1D4360550(2);
    v10 = v9;
    sub_1D4360550(3);
    v12 = v11;
    sub_1D42CB3CC();
    *a2 = v13;
    a2[1] = v14;
    a2[2] = v15;
    a2[3] = v16;
    a2[4] = v17;
    a2[5] = v18;
    a2[6] = v7;
    a2[7] = v10;
    a2[8] = v12;
  }
  return sub_1D42B5400((uint64_t)a1);
}

uint64_t sub_1D435F5D4()
{
  unsigned __int8 *v0;

  return sub_1D435F0FC(*v0);
}

uint64_t sub_1D435F5DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D435EF44(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D435F600()
{
  sub_1D4360348();
  return sub_1D451BA3C();
}

uint64_t sub_1D435F628()
{
  sub_1D4360348();
  return sub_1D451BA48();
}

uint64_t sub_1D435F658()
{
  sub_1D451B958();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B988();
  return sub_1D451B994();
}

uint64_t sub_1D435F758@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1D435F41C(a1, a2);
}

uint64_t sub_1D435F76C(_QWORD *a1)
{
  return sub_1D435F170(a1);
}

double SNSpeechDistanceResult.timeRange.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = v1 + OBJC_IVAR___SNSpeechDistanceResult_impl;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR___SNSpeechDistanceResult_impl + 40);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SNSpeechDistanceResult_impl);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(v2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 + 16);
  result = *(double *)(v2 + 32);
  *(double *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v3;
  return result;
}

double (*SNSpeechDistanceResult.timeRange.modify(_QWORD *a1))(void **a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  SNSpeechDistanceResult.timeRange.getter((uint64_t)v3);
  return sub_1D435F8B4;
}

double sub_1D435F8B4(void **a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  double result;

  v1 = *a1;
  v2 = v1[5];
  v3 = v1[6] + OBJC_IVAR___SNSpeechDistanceResult_impl;
  v4 = v1[1];
  v5 = v1[4];
  v6 = *((_OWORD *)v1 + 1);
  *(_QWORD *)v3 = *v1;
  *(_QWORD *)(v3 + 8) = v4;
  *(_OWORD *)(v3 + 16) = v6;
  *(_QWORD *)(v3 + 32) = v5;
  *(_QWORD *)(v3 + 40) = v2;
  free(v1);
  return result;
}

double sub_1D435F910()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___SNSpeechDistanceResult_impl + 48);
}

double sub_1D435F964()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___SNSpeechDistanceResult_impl + 56);
}

double sub_1D435F9B8()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___SNSpeechDistanceResult_impl + 64);
}

id sub_1D435F9EC()
{
  char *v0;
  objc_class *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  objc_super v6;

  v1 = (objc_class *)sub_1D42B7104();
  v2 = MEMORY[0x1E0CA2E40];
  v3 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 40);
  v4 = &v0[OBJC_IVAR___SNSpeechDistanceResult_impl];
  *(_QWORD *)v4 = *MEMORY[0x1E0CA2E40];
  *((_QWORD *)v4 + 1) = *(_QWORD *)(v2 + 8);
  *((_OWORD *)v4 + 1) = *(_OWORD *)(v2 + 16);
  *((_QWORD *)v4 + 4) = *(_QWORD *)(v2 + 32);
  *((_QWORD *)v4 + 5) = v3;
  *((_QWORD *)v4 + 6) = 0;
  *((_QWORD *)v4 + 7) = 0;
  *((_QWORD *)v4 + 8) = 0;
  v6.receiver = v0;
  v6.super_class = v1;
  return objc_msgSendSuper2(&v6, sel_init);
}

id sub_1D435FA7C()
{
  uint64_t v0;
  objc_class *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_super v7;

  v2 = (char *)sub_1D42B7238();
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = &v2[OBJC_IVAR___SNSpeechDistanceResult_impl];
  *(_QWORD *)v5 = *(_QWORD *)v0;
  *((_QWORD *)v5 + 1) = *(_QWORD *)(v0 + 8);
  *((_OWORD *)v5 + 1) = *(_OWORD *)(v0 + 16);
  *((_QWORD *)v5 + 4) = *(_QWORD *)(v0 + 32);
  *((_QWORD *)v5 + 5) = v3;
  *((_OWORD *)v5 + 3) = *(_OWORD *)(v0 + 48);
  *((_QWORD *)v5 + 8) = v4;
  v7.receiver = v2;
  v7.super_class = v1;
  return objc_msgSendSuper2(&v7, sel_init);
}

void SNSpeechDistanceResult.copy(with:)(_QWORD *a1@<X8>)
{
  uint64_t v2;
  id v3;

  v2 = sub_1D42B7104();
  sub_1D4360510(OBJC_IVAR___SNSpeechDistanceResult_impl);
  v3 = sub_1D435FA7C();
  a1[3] = v2;
  *a1 = v3;
  sub_1D42CB708();
}

uint64_t SNSpeechDistanceResult.hash.getter()
{
  sub_1D4360510(OBJC_IVAR___SNSpeechDistanceResult_impl);
  return sub_1D435F324();
}

BOOL SNSpeechDistanceResult.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  double v11[2];
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  double v17[2];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _OWORD v23[2];
  __int128 v24;
  uint64_t v25;

  sub_1D42B7104();
  sub_1D42B28B4(a1, (uint64_t)&v24);
  if (v25)
  {
    sub_1D42B293C(&v24, v23);
    sub_1D42B294C((uint64_t)v23, (uint64_t)v17);
    if (swift_dynamicCast())
    {
      v3 = v11[0];
      v4 = *(_QWORD *)(v1 + OBJC_IVAR___SNSpeechDistanceResult_impl + 40);
      v5 = *(_QWORD *)(v1 + OBJC_IVAR___SNSpeechDistanceResult_impl + 64);
      v17[0] = *(double *)(v1 + OBJC_IVAR___SNSpeechDistanceResult_impl);
      v17[1] = *(double *)(v1 + OBJC_IVAR___SNSpeechDistanceResult_impl + 8);
      v18 = *(_OWORD *)(v1 + OBJC_IVAR___SNSpeechDistanceResult_impl + 16);
      v19 = *(_QWORD *)(v1 + OBJC_IVAR___SNSpeechDistanceResult_impl + 32);
      v20 = v4;
      v21 = *(_OWORD *)(v1 + OBJC_IVAR___SNSpeechDistanceResult_impl + 48);
      v22 = v5;
      v6 = *(_QWORD *)&v11[0] + OBJC_IVAR___SNSpeechDistanceResult_impl;
      v7 = *(_QWORD *)(*(_QWORD *)&v11[0] + OBJC_IVAR___SNSpeechDistanceResult_impl + 40);
      v8 = *(_QWORD *)(*(_QWORD *)&v11[0] + OBJC_IVAR___SNSpeechDistanceResult_impl + 64);
      v11[0] = *(double *)(*(_QWORD *)&v11[0] + OBJC_IVAR___SNSpeechDistanceResult_impl);
      v11[1] = *(double *)(v6 + 8);
      v12 = *(_OWORD *)(v6 + 16);
      v13 = *(_QWORD *)(v6 + 32);
      v14 = v7;
      v15 = *(_OWORD *)(v6 + 48);
      v16 = v8;
      v9 = sub_1D435EE8C(v17, v11);

    }
    else
    {
      v9 = 0;
    }
    sub_1D42B5400((uint64_t)v23);
  }
  else
  {
    return 0;
  }
  return v9;
}

id SNSpeechDistanceResult.__allocating_init(coder:)()
{
  void *v0;

  sub_1D42B7238();
  return SNSpeechDistanceResult.init(coder:)(v0);
}

id SNSpeechDistanceResult.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  id v4;

  v3 = v1;
  sub_1D42B1894();
  swift_getObjectType();

  v4 = sub_1D435FA7C();
  sub_1D43161E8();
  return v4;
}

Swift::Void __swiftcall SNSpeechDistanceResult.encode(with:)(NSCoder with)
{
  uint64_t v1;
  _BYTE __dst[72];

  memcpy(__dst, (const void *)(v1 + OBJC_IVAR___SNSpeechDistanceResult_impl), sizeof(__dst));
  sub_1D42AFB68(__dst, 1819307369, 0xE400000000000000, with.super.isa);
  sub_1D42CB708();
}

uint64_t static SNSpeechDistanceResult.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t SNSpeechDistanceResult.description.getter()
{
  void *v0;
  objc_class *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  _QWORD v11[6];
  objc_super v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = (objc_class *)sub_1D42B7104();
  v15 = 0;
  v16 = 0xE000000000000000;
  sub_1D451B400();
  v13 = 0;
  v14 = 0xE000000000000000;
  v12.receiver = v0;
  v12.super_class = v1;
  v2 = objc_msgSendSuper2(&v12, sel_description);
  sub_1D451A6EC();
  sub_1D42B722C();
  sub_1D42B7190();
  swift_bridgeObjectRelease();
  sub_1D451A794();
  sub_1D4360578();
  sub_1D4360588();
  sub_1D4360578();
  sub_1D4360588();
  sub_1D4360578();
  sub_1D451A794();
  SNSpeechDistanceResult.timeRange.getter((uint64_t)&v15);
  v3 = v15;
  v4 = v17;
  v5 = v18;
  v6 = v20;
  v7 = (void *)objc_opt_self();
  v11[0] = v3;
  v11[1] = v16;
  v11[2] = v4;
  v11[3] = v5;
  v11[4] = v19;
  v11[5] = v6;
  v8 = objc_msgSend(v7, sel_valueWithCMTimeRange_, v11);
  v9 = objc_msgSend(v8, sel_description);
  sub_1D451A6EC();
  sub_1D42B722C();
  sub_1D42B7190();

  swift_bridgeObjectRelease();
  return v13;
}

id SNSpeechDistanceResult.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1D42B7104();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double sub_1D4360230@<D0>(uint64_t a1@<X8>)
{
  return SNSpeechDistanceResult.timeRange.getter(a1);
}

double sub_1D4360250(uint64_t a1)
{
  return SNSpeechDistanceResult.timeRange.setter(a1);
}

uint64_t type metadata accessor for SNSpeechDistanceResult()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNSpeechDistanceResult()
{
  return swift_lookUpClassMethod();
}

uint64_t getEnumTagSinglePayload for SpeechDistanceResult(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 72))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SpeechDistanceResult(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 72) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SpeechDistanceResult()
{
  return &type metadata for SpeechDistanceResult;
}

unint64_t sub_1D436030C()
{
  unint64_t result;

  result = qword_1EFE4D298;
  if (!qword_1EFE4D298)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E778, &type metadata for SpeechDistanceResult);
    atomic_store(result, (unint64_t *)&qword_1EFE4D298);
  }
  return result;
}

unint64_t sub_1D4360348()
{
  unint64_t result;

  result = qword_1EFE4D2A8;
  if (!qword_1EFE4D2A8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E8F4, &type metadata for SpeechDistanceResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D2A8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SpeechDistanceResult.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D43603D0 + 4 * byte_1D452E719[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D4360404 + 4 * byte_1D452E714[v4]))();
}

uint64_t sub_1D4360404(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D436040C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4360414);
  return result;
}

uint64_t sub_1D4360420(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4360428);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D436042C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4360434(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SpeechDistanceResult.CodingKeys()
{
  return &type metadata for SpeechDistanceResult.CodingKeys;
}

unint64_t sub_1D4360454()
{
  unint64_t result;

  result = qword_1EFE4D2C8;
  if (!qword_1EFE4D2C8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E8CC, &type metadata for SpeechDistanceResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D2C8);
  }
  return result;
}

unint64_t sub_1D4360494()
{
  unint64_t result;

  result = qword_1EFE4D2D0;
  if (!qword_1EFE4D2D0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E83C, &type metadata for SpeechDistanceResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D2D0);
  }
  return result;
}

unint64_t sub_1D43604D4()
{
  unint64_t result;

  result = qword_1EFE4D2D8;
  if (!qword_1EFE4D2D8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E864, &type metadata for SpeechDistanceResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D2D8);
  }
  return result;
}

double sub_1D4360510@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(double *)(v1 + a1 + 64);
}

uint64_t sub_1D4360550@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 160) = a1;
  return sub_1D451B664();
}

uint64_t sub_1D4360568()
{
  return sub_1D451B73C();
}

uint64_t sub_1D4360578()
{
  return sub_1D451ABD8();
}

uint64_t sub_1D4360588()
{
  return sub_1D451A794();
}

uint64_t sub_1D4360598()
{
  return sub_1D451B988();
}

_QWORD *sub_1D43605A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *result;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t);
  void (*v42)(uint64_t *@<X8>);
  uint64_t v43;
  uint64_t v44;
  void (**v45)(uint64_t *@<X8>);
  void (**v46)(uint64_t);
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;

  v58 = a3;
  v6 = sub_1D42B28FC(&qword_1EFE4D368);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D42B28FC(&qword_1EFE4D370);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (_QWORD *)sub_1D4372F14(a1, a2);
  if (!v3)
  {
    v55 = a1;
    v56 = v12;
    v53 = v7;
    v54 = v9;
    sub_1D4362460(result, v14, v15, &v60);
    v57 = 0;
    v52 = a2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = v62;
    v65 = v62;
    v17 = *(_QWORD *)(v62 + 16);
    v18 = MEMORY[0x1E0DEE9D8];
    v51 = v10;
    if (v17)
    {
      v50 = v6;
      v59 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1D42C73E4();
      v18 = v59;
      v19 = (uint64_t *)(v16 + 56);
      do
      {
        v21 = *(v19 - 3);
        v20 = *(v19 - 2);
        v22 = *(v19 - 1);
        v23 = *v19;
        v59 = v18;
        v25 = *(_QWORD *)(v18 + 16);
        v24 = *(_QWORD *)(v18 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v25 >= v24 >> 1)
        {
          sub_1D42C73E4();
          v18 = v59;
        }
        v19 += 4;
        *(_QWORD *)(v18 + 16) = v25 + 1;
        v26 = (_QWORD *)(v18 + 32 * v25);
        v26[4] = v21;
        v26[5] = v20;
        v26[6] = v22;
        v26[7] = v23;
        --v17;
      }
      while (v17);
      sub_1D4362718((uint64_t)&v65);
      v27 = (uint64_t)v56;
      v28 = v50;
    }
    else
    {
      v27 = (uint64_t)v56;
      v28 = v6;
    }
    v29 = sub_1D4459FA4(v18);
    v63 = v61;
    v64 = v60;
    v30 = swift_allocObject();
    v31 = v61;
    *(_OWORD *)(v30 + 16) = v60;
    *(_OWORD *)(v30 + 32) = v31;
    *(_QWORD *)(v30 + 48) = v62;
    sub_1D42BE0D0((uint64_t)&v65);
    sub_1D42DD1B0((uint64_t)&v64);
    sub_1D42DD1B0((uint64_t)&v63);
    sub_1D42B28FC(&qword_1EFE4D348);
    sub_1D42B28FC(&qword_1EFE4C7B0);
    sub_1D42BE210(&qword_1EFE4D378, &qword_1EFE4D348, MEMORY[0x1E0C95950]);
    v32 = v54;
    sub_1D451A308();
    swift_release();
    v33 = swift_allocObject();
    v34 = v55;
    v35 = v52;
    *(_QWORD *)(v33 + 16) = v55;
    *(_QWORD *)(v33 + 24) = v35;
    v36 = v35;
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = v29;
    v38 = swift_allocObject();
    *(_QWORD *)(v38 + 16) = sub_1D435CBF8;
    *(_QWORD *)(v38 + 24) = v37;
    v39 = swift_allocObject();
    *(_QWORD *)(v39 + 16) = sub_1D435CC10;
    *(_QWORD *)(v39 + 24) = v38;
    v40 = swift_allocObject();
    *(_QWORD *)(v40 + 16) = sub_1D435CBE0;
    *(_QWORD *)(v40 + 24) = v33;
    v41 = (void (*)(uint64_t))swift_allocObject();
    *((_QWORD *)v41 + 2) = sub_1D449FFBC;
    *((_QWORD *)v41 + 3) = 0;
    *((_QWORD *)v41 + 4) = sub_1D435CC40;
    *((_QWORD *)v41 + 5) = v40;
    *((_QWORD *)v41 + 6) = sub_1D435CC28;
    *((_QWORD *)v41 + 7) = v39;
    v42 = (void (*)(uint64_t *@<X8>))swift_allocObject();
    *((_QWORD *)v42 + 2) = v34;
    *((_QWORD *)v42 + 3) = v36;
    *((_QWORD *)v42 + 4) = v29;
    v43 = v53;
    (*(void (**)(uint64_t, char *, uint64_t))(v53 + 16))(v27, v32, v28);
    v44 = v51;
    v45 = (void (**)(uint64_t *@<X8>))(v27 + *(int *)(v51 + 52));
    *v45 = sub_1D435CCD0;
    v45[1] = v42;
    v46 = (void (**)(uint64_t))(v27 + *(int *)(v44 + 56));
    *v46 = sub_1D435CC84;
    v46[1] = v41;
    v47 = *(void (**)(char *, uint64_t))(v43 + 8);
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain();
    v47(v32, v28);
    v48 = swift_allocObject();
    v49 = v61;
    *(_OWORD *)(v48 + 16) = v60;
    *(_OWORD *)(v48 + 32) = v49;
    *(_QWORD *)(v48 + 48) = v62;
    sub_1D42BE210(&qword_1EFE4D380, &qword_1EFE4D370, (uint64_t)&unk_1D4544100);
    sub_1D451A3A4();
    swift_release();
    return (_QWORD *)sub_1D42BDFDC(v27, &qword_1EFE4D370);
  }
  return result;
}

uint64_t sub_1D4360A7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v15 = a3;
  v16 = a2;
  v4 = sub_1D42B28FC(&qword_1EFE4D348);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D42B28FC(&qword_1EFE4D350);
  v14 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42B28FC(&qword_1EFE4D2F8);
  sub_1D42BE210(&qword_1EFE4D358, &qword_1EFE4D2F8, MEMORY[0x1E0C95950]);
  sub_1D451A308();
  v11 = v17;
  sub_1D43605A0(a1, v16, (uint64_t)v10);
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (!v11)
  {
    sub_1D42B28FC((uint64_t *)&unk_1EFE4A660);
    sub_1D42BE210(&qword_1EFE4D360, &qword_1EFE4D350, MEMORY[0x1E0C95B48]);
    sub_1D451A308();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v10, v8);
  }
  return result;
}

void sub_1D4360C2C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

void sub_1D4360C68()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D4360D88(v0, v1 & 0xFFFFFFFFFFFFLL, BYTE6(v1));
}

void sub_1D4360D48(uint64_t a1, uint64_t a2)
{
  if (a1)
    sub_1D44AD12C(a1, (a2 - a1) / 4);
}

void sub_1D4360D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __int16 v4;
  char v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = BYTE2(a2);
  v6 = BYTE3(a2);
  v7 = BYTE4(a2);
  v8 = BYTE5(a2);
  sub_1D44AD12C((uint64_t)&v3, a3 / 4);
}

uint64_t sub_1D4360E54(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
    return *(_QWORD *)(a1 + 8 * v1 + 24);
  else
    return 0;
}

uint64_t sub_1D4360E78(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;

  if (a4 >> 1 == a3)
    return 0;
  if ((uint64_t)(a4 >> 1) > a3)
    return *(_QWORD *)(a2 + 8 * (a4 >> 1) - 8);
  __break(1u);
  return result;
}

uint64_t sub_1D4360EA8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return 0;
  sub_1D451A770();
  return sub_1D451A800();
}

void sub_1D4360F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *(**v31)@<X0>(void *@<X8>);
  uint64_t (**v32)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t *@<X8>);
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;

  v42 = sub_1D42B28FC(&qword_1EFE4D2E8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42BE768();
  v43 = v5;
  v46 = (int *)sub_1D42B28FC(&qword_1EFE4D2F0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v6);
  sub_1D42BE768();
  v45 = v7;
  v8 = sub_1D42B28FC(&qword_1EFE4D2F8);
  v47 = *(_QWORD *)(v8 - 8);
  v48 = v8;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  sub_1D42BE768();
  v44 = v10;
  v52 = sub_1D42B28FC(&qword_1EFE4D300);
  v50 = *(_QWORD *)(v52 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v11);
  sub_1D42BE768();
  v49 = v12;
  v51 = sub_1D42B28FC(&qword_1EFE4D308);
  v13 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  sub_1D42CB210();
  v16 = v15 - v14;
  sub_1D42B28FC(&qword_1EFE4D310);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v17);
  sub_1D42CB210();
  v20 = v19 - v18;
  v21 = sub_1D42B28FC(&qword_1EFE4D318);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  sub_1D42CB210();
  v25 = v24 - v23;
  v26 = sub_1D43614BC(a1, a2);
  if (!v54)
  {
    v40 = v25;
    if (*(_QWORD *)(a3 + 16) == v27)
    {
      if (v26 >= 1)
      {
        v29 = v26;
        v39 = v27;
        v38 = v28;
        v30 = sub_1D42B28FC(&qword_1EFE4BC50);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v43, v41, v30);
        v31 = (void *(**)@<X0>(void *@<X8>))(v43 + *(int *)(v42 + 52));
        *v31 = sub_1D43E16C0;
        v31[1] = 0;
        v32 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t *@<X8>))(v43 + *(int *)(v42 + 56));
        *v32 = sub_1D4362648;
        v32[1] = 0;
        sub_1D4362680(v43, v45);
        v33 = sub_1D42B28FC((uint64_t *)&unk_1EFE557D0);
        *(_QWORD *)(v45 + v46[15]) = v29;
        *(_QWORD *)(v45 + v46[16]) = v29;
        *(_QWORD *)(v45 + v46[17]) = v33;
        sub_1D42BDFDC(v43, &qword_1EFE4D2E8);
        sub_1D42B28FC(&qword_1EFE4CB68);
        sub_1D42BE210(&qword_1EFE4D320, &qword_1EFE4D2F0, (uint64_t)&unk_1D4535888);
        sub_1D451A308();
        sub_1D42BDFDC(v45, &qword_1EFE4D2F0);
        sub_1D4360A7C(a1, a2, v49);
        (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v44, v48);
        v34 = (_QWORD *)swift_allocObject();
        v34[2] = v29;
        v34[3] = v39;
        v34[4] = v38;
        v34[5] = a3;
        sub_1D42BE210(&qword_1EFE4D328, &qword_1EFE4D300, MEMORY[0x1E0C95950]);
        swift_bridgeObjectRetain();
        sub_1D451A3A4();
        sub_1D42BE998();
        (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v52);
        v35 = swift_allocObject();
        *(_QWORD *)(v35 + 16) = sub_1D42BD264;
        *(_QWORD *)(v35 + 24) = 0;
        sub_1D42B28FC(&qword_1EFE496A8);
        sub_1D42BE210(&qword_1EFE4D330, &qword_1EFE4D308, MEMORY[0x1E0C95B48]);
        sub_1D42BE210(&qword_1EFE496B8, &qword_1EFE496A8, MEMORY[0x1E0C959F8]);
        sub_1D451A3C8();
        sub_1D42BE998();
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v16, v51);
        *(_QWORD *)(sub_1D43211DC() + 16) = a3;
        swift_bridgeObjectRetain();
        sub_1D42B28FC(&qword_1EFE4BE50);
        sub_1D42BE210(&qword_1EFE4D338, &qword_1EFE4D310, (uint64_t)&unk_1D453CE08);
        sub_1D451A308();
        sub_1D42BE998();
        sub_1D42BDFDC(v20, &qword_1EFE4D310);
        sub_1D42BE210(&qword_1EFE4D340, &qword_1EFE4D318, MEMORY[0x1E0C95950]);
        sub_1D451A2E4();
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v40, v21);
        goto LABEL_9;
      }
      v36 = 5;
    }
    else
    {
      v36 = 6;
    }
    sub_1D4362500();
    sub_1D42B6D0C();
    *v37 = v36;
    sub_1D4312028();
  }
LABEL_9:
  sub_1D42BE844();
}

uint64_t sub_1D43614BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  id v23;
  _BYTE *v24;
  char *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t *v68;
  uint64_t *v69;
  uint64_t v70[5];
  _QWORD v71[13];

  v5 = (_QWORD *)sub_1D4372F14(a1, a2);
  if (v2)
    return v3;
  sub_1D4362460(v5, v6, v7, v70);
  swift_bridgeObjectRelease();
  sub_1D42CB5C8();
  sub_1D42CB208();
  v8 = *(_QWORD *)(a2 + 16);
  sub_1D436C3E0(v70[0], v70[1], v8);
  v10 = v9;
  type metadata accessor for E5RTIOPort();
  *(_QWORD *)(swift_initStackObject() + 16) = v10;
  sub_1D436C5BC(v10);
  v3 = v11;
  sub_1D430C648();
  sub_1D436C608();
  sub_1D4362A48();
  type metadata accessor for E5RTTensorDescriptor();
  *(_QWORD *)(swift_initStackObject() + 16) = v3;
  sub_1D436C394(v70[2], v70[3], v8);
  v14 = v13;
  swift_bridgeObjectRelease();
  sub_1D42CB5C8();
  *(_QWORD *)(swift_initStackObject() + 16) = v14;
  v71[0] = v70[4];
  sub_1D4362718((uint64_t)v71);
  sub_1D436C5BC(v14);
  v16 = v15;
  sub_1D430C648();
  sub_1D436C608();
  sub_1D4362A48();
  *(_QWORD *)(swift_initStackObject() + 16) = v16;
  sub_1D436C7B4(v3);
  v18 = v17;
  type metadata accessor for E5RTTensorDescriptorDataType();
  *(_QWORD *)(swift_initStackObject() + 16) = v18;
  v19 = sub_1D4362A98();
  if (v19 != 1 || sub_1D436C9C8() != 4)
  {
    sub_1D4362500();
    sub_1D42B6D0C();
    *v24 = 0;
    sub_1D4312028();
LABEL_13:
    swift_setDeallocating();
    sub_1D436CA64();
    sub_1D4362A48();
    goto LABEL_14;
  }
  sub_1D436C7B4(v16);
  v21 = v20;
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v21;
  v71[12] = inited;
  if (sub_1D4362A98() != 1 || sub_1D436C9C8() != 4)
  {
    sub_1D4362500();
    sub_1D42B6D0C();
    v26 = 1;
LABEL_16:
    *v25 = v26;
    sub_1D4312028();
    sub_1D430C648();
    sub_1D436CA64();
    sub_1D4362A48();
    goto LABEL_13;
  }
  if (qword_1EFE48ED0 != -1)
    swift_once();
  if ((byte_1EFEA78A8 & 1) != 0)
  {
    v23 = (id)xmmword_1EFEA7880;
    sub_1D42B28FC(&qword_1EFE49BB0);
    swift_willThrowTypedImpl();
    swift_release();
    swift_release();
LABEL_14:
    swift_setDeallocating();
    sub_1D436C898();
    sub_1D4362A48();
    sub_1D4362A90();
    sub_1D4362A88();
    sub_1D4362A48();
    return v3;
  }
  v65 = sub_1D43EE97C(*(_QWORD *)(qword_1EFEA78A0 + 16), *(_QWORD *)(qword_1EFEA7890 + 16), *(_QWORD *)(qword_1EFEA7898 + 16));
  v27 = sub_1D436C704();
  sub_1D44AD0BC(v27, v28);
  v61 = sub_1D4360E54(v29);
  if ((v30 & 1) != 0
    || (v31 = sub_1D4362A80(1),
        v3 = sub_1D4360E78(v31, v32, v33, v34),
        v36 = v35,
        swift_retain(),
        swift_unknownObjectRelease(),
        (v36 & 1) != 0))
  {
    sub_1D42B8F48();
LABEL_30:
    sub_1D4362500();
    sub_1D42B6D0C();
    v26 = 2;
    goto LABEL_16;
  }
  result = sub_1D4362A80(2);
  v40 = (v39 >> 1) - v38;
  if (v39 >> 1 == v38)
  {
    v41 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    if ((uint64_t)(v39 >> 1) <= v38)
    {
      __break(1u);
      goto LABEL_55;
    }
    v68 = (uint64_t *)(v37 + 8 * v38);
    v41 = MEMORY[0x1E0DEE9D8];
    do
    {
      v58 = *v68++;
      v63 = v58;
      if (v58 != 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1D4362A54();
        v59 = *(_QWORD *)(v41 + 16);
        if (v59 >= *(_QWORD *)(v41 + 24) >> 1)
          sub_1D42C73B0();
        *(_QWORD *)(v41 + 16) = v59 + 1;
        *(_QWORD *)(v41 + 8 * v59 + 32) = v63;
      }
      --v40;
    }
    while (v40);
  }
  swift_unknownObjectRelease();
  v42 = *(_QWORD *)(v41 + 16);
  sub_1D42B8F48();
  if (v42)
    goto LABEL_30;
  if (v61 != v65)
  {
    sub_1D4362500();
    sub_1D42B6D0C();
    v26 = 4;
    goto LABEL_16;
  }
  v43 = sub_1D436C704();
  sub_1D44AD0BC(v43, v44);
  sub_1D4360E54(v45);
  if ((v46 & 1) != 0
    || (v47 = sub_1D4362A80(1),
        sub_1D4360E78(v47, v48, v49, v50),
        v67 = v51,
        swift_retain(),
        swift_unknownObjectRelease(),
        (v67 & 1) != 0))
  {
    sub_1D42B8F48();
LABEL_43:
    sub_1D4362500();
    sub_1D42B6D0C();
    v26 = 3;
    goto LABEL_16;
  }
  result = sub_1D4362A80(2);
  v55 = (v54 >> 1) - v53;
  if (v54 >> 1 == v53)
  {
    v56 = MEMORY[0x1E0DEE9D8];
    goto LABEL_27;
  }
  if ((uint64_t)(v54 >> 1) > v53)
  {
    v69 = (uint64_t *)(v52 + 8 * v53);
    v56 = MEMORY[0x1E0DEE9D8];
    do
    {
      v66 = *v69++;
      if (v66 != 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1D4362A54();
        v60 = *(_QWORD *)(v56 + 16);
        v62 = v60;
        v64 = v60 + 1;
        if (v60 >= *(_QWORD *)(v56 + 24) >> 1)
          sub_1D42C73B0();
        *(_QWORD *)(v56 + 16) = v64;
        *(_QWORD *)(v56 + 8 * v62 + 32) = v66;
      }
      --v55;
    }
    while (v55);
LABEL_27:
    swift_unknownObjectRelease();
    v57 = *(_QWORD *)(v56 + 16);
    sub_1D42B8F48();
    if (!v57)
    {
      sub_1D430C648();
      sub_1D436CA64();
      sub_1D4362A48();
      swift_setDeallocating();
      sub_1D436CA64();
      sub_1D4362A48();
      swift_setDeallocating();
      sub_1D436C898();
      sub_1D4362A48();
      sub_1D4362A90();
      sub_1D4362A88();
      sub_1D4362A48();
      return v3;
    }
    goto LABEL_43;
  }
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_1D4361C00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = sub_1D42B28FC((uint64_t *)&unk_1EFE557D0);
  v3 = MEMORY[0x1E0DEAF38];
  MEMORY[0x1D825E41C](MEMORY[0x1E0DEAF38], v2);
  sub_1D42BE210(&qword_1EFE516B0, (uint64_t *)&unk_1EFE4A660, v3);
  v4 = sub_1D4313348();
  result = sub_1D42B28FC((uint64_t *)&unk_1EFE4A660);
  a1[3] = result;
  a1[4] = (uint64_t)&off_1E97AD7E8;
  *a1 = v4;
  return result;
}

uint64_t sub_1D4361CB0@<X0>(uint64_t *a1@<X0>, int64_t a2@<X2>, int64_t a3@<X3>, uint64_t a4@<X4>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = sub_1D4313514(*a1, a2, a3);
  if (!v5)
  {
    sub_1D42BD400(result, *(_QWORD *)(a4 + 16));
    v10 = v9;
    result = swift_bridgeObjectRelease();
    *a5 = v10;
  }
  return result;
}

uint64_t sub_1D4361D1C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  float *v6;
  unint64_t v7;
  float v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1D42C7654();
    v5 = v11;
    v6 = (float *)(v3 + 32);
    v7 = *(_QWORD *)(v11 + 16);
    do
    {
      v8 = *v6;
      if (v7 >= *(_QWORD *)(v11 + 24) >> 1)
        sub_1D42C7654();
      *(_QWORD *)(v11 + 16) = v7 + 1;
      *(double *)(v11 + 8 * v7 + 32) = v8;
      ++v6;
      ++v7;
      --v4;
    }
    while (v4);
  }
  v9 = swift_bridgeObjectRetain();
  result = sub_1D4459FCC(v9, v5);
  *a2 = result;
  return result;
}

uint64_t sub_1D4361E0C(uint64_t result, uint64_t a2)
{
  unint64_t v3;
  char v4;
  unint64_t v5;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1D43625C8(v3, -result, 0);
  if ((v4 & 1) != 0)
    v5 = 0;
  else
    v5 = result;
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_9;
  if (v3 >= v5)
    return a2;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1D4361E78(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE __dst[72];
  uint64_t v39;

  v35 = a2;
  v36 = a3;
  v34 = a1;
  v6 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v29 = *(_QWORD *)(v6 - 8);
  v30 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_1D451A0B0();
  v9 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D42B28FC(&qword_1EFE4ACA0);
  v31 = *(_QWORD *)(v12 - 8);
  v32 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1D42B28FC(&qword_1EFE4BC50);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v33 = (char *)v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(__dst, a4, sizeof(__dst));
  sub_1D43994BC(1, 16000);
  if (v4)
  {
    sub_1D4328888((uint64_t)a4);
  }
  else
  {
    v26 = v16;
    v27 = v15;
    v28 = (uint64_t)a4;
    v25[1] = v18;
    v39 = sub_1D4398FE0();
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0C958B8], v37);
    v20 = v29;
    v19 = v30;
    (*(void (**)(char *, _QWORD, uint64_t))(v29 + 104))(v8, *MEMORY[0x1E0C958E8], v30);
    sub_1D42B28FC((uint64_t *)&unk_1EFE4ACD0);
    sub_1D42BE210(&qword_1EFE496A0, (uint64_t *)&unk_1EFE4ACD0, MEMORY[0x1E0C95D90]);
    sub_1D451A380();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v19);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v37);
    swift_release();
    sub_1D42B28FC(&qword_1EFE4C9D0);
    sub_1D42BE210(&qword_1EFE4ACE8, &qword_1EFE4ACA0, MEMORY[0x1E0C95AB8]);
    v22 = v32;
    v21 = v33;
    sub_1D451A308();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v22);
    sub_1D4360F20(v34, v35, v36);
    v16 = v24;
    swift_release();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v21, v27);
    sub_1D4328888(v28);
  }
  return v16;
}

void sub_1D4362194(const void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[2];

  v3 = sub_1D4519BC4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v16 - v8;
  sub_1D42BE38C((uint64_t)a1);
  sub_1D439CDF4(0x2Du, (uint64_t)v9);
  if (v1)
  {
    sub_1D4362A78();
    sub_1D4362A78();
  }
  else
  {
    sub_1D436BB64();
    v11 = v10;
    type metadata accessor for E5RTExecutionStream();
    v12 = sub_1D43211DC();
    *(_QWORD *)(v12 + 16) = v11;
    sub_1D4519AC8();
    sub_1D4519B88();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    v13 = sub_1D436BC04();
    type metadata accessor for E5RTExecutionStreamOperation();
    v14 = sub_1D43211DC();
    *(_QWORD *)(v14 + 16) = v13;
    sub_1D436D938(v14);
    sub_1D436BDB0(v14);
    if (qword_1EFE48E98 != -1)
      swift_once();
    v15 = qword_1EFE4F938;
    sub_1D42BE38C((uint64_t)a1);
    sub_1D4361E78(v12, v14, v15, a1);
    sub_1D4362A6C();
    swift_release();
    sub_1D42E3F48();
    sub_1D4362A78();
    sub_1D4362A78();
  }
  sub_1D42BE844();
}

uint64_t sub_1D43623C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t result;
  _BYTE *v12;

  v5 = *a1;
  if (*(_QWORD *)(*a1 + 16))
  {
    swift_bridgeObjectRetain();
    v8 = sub_1D4366B34(a2, a3);
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v8);
      result = sub_1D42CB208();
      *a4 = v10;
      return result;
    }
    sub_1D42CB208();
  }
  sub_1D4362500();
  sub_1D42B6D0C();
  *v12 = 7;
  return sub_1D4312028();
}

uint64_t sub_1D4362460@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  char *v9;

  if (a1[2] == 1)
  {
    if (a2[2] == 1)
    {
      v4 = a1[5];
      v5 = a2[4];
      v6 = a2[5];
      *a4 = a1[4];
      a4[1] = v4;
      a4[2] = v5;
      a4[3] = v6;
      a4[4] = a3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRetain();
    }
    v8 = 3;
  }
  else
  {
    v8 = 2;
  }
  sub_1D4362868();
  swift_allocError();
  *v9 = v8;
  return swift_willThrow();
}

unint64_t sub_1D4362500()
{
  unint64_t result;

  result = qword_1EFE4D2E0;
  if (!qword_1EFE4D2E0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452EA1C, &type metadata for MicroSoundPrintUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4D2E0);
  }
  return result;
}

void sub_1D436253C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = sub_1D4519A14();
  if (v4)
  {
    v5 = sub_1D4519A38();
    if (__OFSUB__(a1, v5))
    {
LABEL_13:
      __break(1u);
      return;
    }
    v4 += a1 - v5;
  }
  v6 = __OFSUB__(a2, a1);
  v7 = a2 - a1;
  if (v6)
  {
    __break(1u);
    goto LABEL_13;
  }
  v8 = sub_1D4519A2C();
  if (v8 >= v7)
    v9 = v7;
  else
    v9 = v8;
  v10 = v4 + v9;
  if (v4)
    v11 = v10;
  else
    v11 = 0;
  sub_1D4360D48(v4, v11);
}

uint64_t sub_1D43625C8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v5;

  v3 = a3 - result;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (a2 < 1)
  {
    if (v3 <= 0 && v3 > a2)
      return 0;
  }
  else if ((v3 & 0x8000000000000000) == 0 && v3 < (unint64_t)a2)
  {
    return 0;
  }
  v5 = __OFADD__(result, a2);
  result += a2;
  if (v5)
    goto LABEL_14;
  return result;
}

void sub_1D4362614()
{
  sub_1D44B080C();
}

void sub_1D436261C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  sub_1D4360C2C(*a1, a1[1]);
  *a2 = v3;
}

uint64_t sub_1D4362648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_1D4495EEC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_1D4362680(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D42B28FC(&qword_1EFE4D2E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D43626C8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D43626EC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  int64_t *v2;

  return sub_1D4361CB0(a1, v2[3], v2[4], v2[5], a2);
}

void sub_1D4362708()
{
  sub_1D4362614();
}

uint64_t sub_1D4362710@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1D4361D1C(a1, a2);
}

uint64_t sub_1D4362718(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D4362744@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1D42DCF80(a1, (__int128 *)(v2 + 16), a2);
}

uint64_t sub_1D436274C()
{
  swift_release();
  sub_1D42B8F98();
  return swift_deallocObject();
}

uint64_t sub_1D4362774()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D4362798()
{
  sub_1D42B8F98();
  return swift_deallocObject();
}

uint64_t sub_1D43627B8()
{
  sub_1D42B8F98();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D43627E8()
{
  swift_release();
  sub_1D42B8F98();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D436281C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1D4362850(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_1D42DD024(a1, v2 + 16, a2);
}

unint64_t sub_1D4362868()
{
  unint64_t result;

  result = qword_1EFE4D388;
  if (!qword_1EFE4D388)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45300C8, &type metadata for StreamingModelUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4D388);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MicroSoundPrintUtils.DomainError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 7) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v5 = v6 - 8;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MicroSoundPrintUtils.DomainError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1D4362978 + 4 * byte_1D452E955[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1D43629AC + 4 * byte_1D452E950[v4]))();
}

uint64_t sub_1D43629AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43629B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D43629BCLL);
  return result;
}

uint64_t sub_1D43629C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D43629D0);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1D43629D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43629DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MicroSoundPrintUtils.DomainError()
{
  return &type metadata for MicroSoundPrintUtils.DomainError;
}

unint64_t sub_1D43629FC()
{
  unint64_t result;

  result = qword_1EFE4D390;
  if (!qword_1EFE4D390)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E9F4, &type metadata for MicroSoundPrintUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4D390);
  }
  return result;
}

uint64_t sub_1D4362A48()
{
  return swift_deallocClassInstance();
}

void sub_1D4362A54()
{
  sub_1D42C73B0();
}

uint64_t sub_1D4362A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t sub_1D4362A78()
{
  uint64_t v0;

  return sub_1D4328888(v0);
}

uint64_t sub_1D4362A80(uint64_t a1)
{
  uint64_t v1;

  return sub_1D4361E0C(a1, v1);
}

void sub_1D4362A88()
{
  sub_1D436C898();
}

uint64_t sub_1D4362A90()
{
  return swift_setDeallocating();
}

uint64_t sub_1D4362A98()
{
  return sub_1D436A8F4();
}

uint64_t sub_1D4362AA4()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  _OWORD v4[4];

  sub_1D42CB7F8();
  sub_1D42D6090();
  sub_1D42CB0C4();
  swift_bridgeObjectRetain();
  sub_1D451A74C();
  swift_bridgeObjectRelease();
  v1 = *(_OWORD *)(v0 + 40);
  v4[0] = *(_OWORD *)(v0 + 24);
  v4[1] = v1;
  v2 = *(_OWORD *)(v0 + 72);
  v4[2] = *(_OWORD *)(v0 + 56);
  v4[3] = v2;
  sub_1D4364330((uint64_t)v4);
  sub_1D446F290();
  return sub_1D4364384((uint64_t)v4);
}

uint64_t sub_1D4362B40(uint64_t a1, uint64_t a2)
{
  char v4;
  BOOL v5;
  char v6;
  char v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _OWORD v13[4];
  _OWORD v14[4];

  sub_1D42FE00C(*(_QWORD **)a1, *(_QWORD **)a2);
  if ((v4 & 1) != 0)
  {
    v5 = *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16);
    if (v5 || (v6 = sub_1D451B820(), v7 = 0, (v6 & 1) != 0))
    {
      v8 = *(_OWORD *)(a1 + 40);
      v14[0] = *(_OWORD *)(a1 + 24);
      v14[1] = v8;
      v9 = *(_OWORD *)(a1 + 72);
      v14[2] = *(_OWORD *)(a1 + 56);
      v14[3] = v9;
      v10 = *(_OWORD *)(a2 + 40);
      v13[0] = *(_OWORD *)(a2 + 24);
      v13[1] = v10;
      v11 = *(_OWORD *)(a2 + 72);
      v13[2] = *(_OWORD *)(a2 + 56);
      v13[3] = v11;
      v7 = sub_1D446F2F8(v14, v13);
    }
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_1D4362BE8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x73656C6966 && a2 == 0xE500000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6142726576726573 && a2 == 0xEE00687461506573;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6E49726576726573 && a2 == 0xEA00000000006F66)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1D451B820();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1D4362D5C(char a1)
{
  if (!a1)
    return 0x73656C6966;
  if (a1 == 1)
    return 0x6142726576726573;
  return 0x6E49726576726573;
}

uint64_t sub_1D4362DC0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_1D42B28FC((uint64_t *)&unk_1EFE4D3E0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1D42CB210();
  v7 = v6 - v5;
  sub_1D42B5528(a1, a1[3]);
  sub_1D436421C();
  sub_1D451BA24();
  sub_1D42B28FC((uint64_t *)&unk_1EFE51A80);
  sub_1D4364294((unint64_t *)&unk_1EFE56410, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1D4338480();
  if (!v1)
  {
    sub_1D451B724();
    sub_1D43642F4();
    sub_1D4338480();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1D4362F48()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  _OWORD v4[4];

  sub_1D451B958();
  swift_bridgeObjectRetain();
  sub_1D42D6090();
  swift_bridgeObjectRelease();
  sub_1D42CB7F8();
  sub_1D451A74C();
  sub_1D42CB0C4();
  v1 = *(_OWORD *)(v0 + 40);
  v4[0] = *(_OWORD *)(v0 + 24);
  v4[1] = v1;
  v2 = *(_OWORD *)(v0 + 72);
  v4[2] = *(_OWORD *)(v0 + 56);
  v4[3] = v2;
  sub_1D4364330((uint64_t)v4);
  sub_1D446F290();
  sub_1D4364384((uint64_t)v4);
  return sub_1D451B994();
}

uint64_t sub_1D4362FF4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = sub_1D42B28FC(&qword_1EFE4D3B8);
  MEMORY[0x1E0C80A78](v5);
  sub_1D42CB210();
  sub_1D42B5528(a1, a1[3]);
  sub_1D436421C();
  sub_1D451BA0C();
  if (v2)
    return sub_1D42BE944();
  sub_1D42B28FC((uint64_t *)&unk_1EFE51A80);
  sub_1D4364294(&qword_1EFE4D3D0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  sub_1D451B688();
  v6 = v12;
  LOBYTE(v12) = 1;
  sub_1D42CB8FC();
  v7 = sub_1D451B64C();
  v9 = v8;
  v11 = v7;
  sub_1D4364258();
  swift_bridgeObjectRetain();
  sub_1D451B688();
  sub_1D4364710();
  sub_1D42CB8FC();
  sub_1D42CB6CC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D42CB8F4();
  sub_1D42BE944();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D42CB338();
  result = sub_1D42CB8F4();
  *a2 = v6;
  a2[1] = v11;
  a2[2] = v9;
  a2[3] = v12;
  a2[4] = v13;
  a2[5] = v14;
  a2[6] = v15;
  a2[7] = v16;
  a2[8] = v17;
  a2[9] = v18;
  a2[10] = v19;
  return result;
}

uint64_t sub_1D4363268()
{
  char *v0;

  return sub_1D4362D5C(*v0);
}

uint64_t sub_1D4363270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D4362BE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D4363294()
{
  sub_1D436421C();
  return sub_1D451BA3C();
}

uint64_t sub_1D43632BC()
{
  sub_1D436421C();
  return sub_1D451BA48();
}

void *sub_1D43632E4@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  void *result;
  _QWORD __src[11];

  result = (void *)sub_1D4362FF4(a1, __src);
  if (!v2)
    return memcpy(a2, __src, 0x58uLL);
  return result;
}

uint64_t sub_1D436332C(_QWORD *a1)
{
  return sub_1D4362DC0(a1);
}

uint64_t sub_1D4363348()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  _OWORD v4[4];

  v1 = *(_OWORD *)(v0 + 40);
  v4[0] = *(_OWORD *)(v0 + 24);
  v4[1] = v1;
  v2 = *(_OWORD *)(v0 + 72);
  v4[2] = *(_OWORD *)(v0 + 56);
  v4[3] = v2;
  sub_1D451B958();
  swift_bridgeObjectRetain();
  sub_1D42D6090();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1D451A74C();
  swift_bridgeObjectRelease();
  sub_1D4364330((uint64_t)v4);
  sub_1D446F290();
  sub_1D4364384((uint64_t)v4);
  return sub_1D451B994();
}

id sub_1D43633FC(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  char *v14;
  char *v15;
  id v16;
  objc_super v21;

  v5 = *(_QWORD *)&a4[OBJC_IVAR___SNFileServerInfo_impl];
  v6 = *(_QWORD *)&a4[OBJC_IVAR___SNFileServerInfo_impl + 8];
  v7 = *(_QWORD *)&a4[OBJC_IVAR___SNFileServerInfo_impl + 16];
  v8 = *(_QWORD *)&a4[OBJC_IVAR___SNFileServerInfo_impl + 24];
  v9 = *(_QWORD *)&a4[OBJC_IVAR___SNFileServerInfo_impl + 32];
  v10 = *(_QWORD *)&a4[OBJC_IVAR___SNFileServerInfo_impl + 40];
  v11 = *(_QWORD *)&a4[OBJC_IVAR___SNFileServerInfo_impl + 48];
  v12 = *(_QWORD *)&a4[OBJC_IVAR___SNFileServerInfo_impl + 56];
  v13 = (objc_class *)type metadata accessor for SNDeleteFilesRequest();
  v14 = (char *)objc_allocWithZone(v13);
  v15 = &v14[OBJC_IVAR___SNDeleteFilesRequest_impl];
  *(_QWORD *)v15 = a1;
  *((_QWORD *)v15 + 1) = a2;
  *((_QWORD *)v15 + 2) = a3;
  *((_QWORD *)v15 + 3) = v5;
  *((_QWORD *)v15 + 4) = v6;
  *((_QWORD *)v15 + 5) = v7;
  *((_QWORD *)v15 + 6) = v8;
  *((_QWORD *)v15 + 7) = v9;
  *((_QWORD *)v15 + 8) = v10;
  *((_QWORD *)v15 + 9) = v11;
  *((_QWORD *)v15 + 10) = v12;
  v21.receiver = v14;
  v21.super_class = v13;
  sub_1D42CB8FC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = objc_msgSendSuper2(&v21, sel_init);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v16;
}

uint64_t (*sub_1D4363578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  void *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;

  v9 = sub_1D42B28FC(&qword_1EFE4DC70);
  MEMORY[0x1E0C80A78](v9);
  sub_1D42CB210();
  v12 = v11 - v10;
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D83900]), sel_init);
  objc_msgSend(v13, sel_setDispatchQueue_, a1);
  v14 = sub_1D451AAC4();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v12, 1, 1, v14);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = v5;
  v15[5] = v13;
  v15[6] = a4;
  v15[7] = a5;
  v16 = v5;
  v17 = v13;
  swift_retain();
  v18 = sub_1D44C3524(v12, (uint64_t)&unk_1EFE4D408, (uint64_t)v15);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v17;
  *(_QWORD *)(v19 + 24) = v18;
  return sub_1D4364514;
}

uint64_t sub_1D436369C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[45] = a6;
  v7[46] = a7;
  v7[43] = a4;
  v7[44] = a5;
  return swift_task_switch();
}

uint64_t sub_1D43636B8()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;

  v1 = (_QWORD *)(v0[43] + OBJC_IVAR___SNDeleteFilesRequest_impl);
  v2 = (_QWORD *)*v1;
  v0[47] = *v1;
  v3 = v2[2];
  v0[48] = v3;
  if (v3)
  {
    v4 = v1[1];
    v0[49] = v4;
    v5 = v1[2];
    v0[50] = v5;
    v0[51] = type metadata accessor for SNFileSharingUtils();
    v0[52] = v1[3];
    v0[53] = v1[4];
    v0[55] = 0;
    v6 = v2[4];
    v0[56] = v6;
    v7 = v2[5];
    v0[57] = v7;
    swift_bridgeObjectRetain();
    sub_1D42B28FC(&qword_1EFE49AE8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D45295F0;
    *(_QWORD *)(inited + 32) = 0x6874615065736162;
    *(_QWORD *)(inited + 40) = 0xE800000000000000;
    *(_QWORD *)(inited + 48) = v4;
    *(_QWORD *)(inited + 56) = v5;
    *(_QWORD *)(inited + 64) = 0x68746150656C6966;
    *(_QWORD *)(inited + 72) = 0xE900000000000073;
    *(_QWORD *)(inited + 80) = v6;
    *(_QWORD *)(inited + 88) = v7;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1D4364770();
    sub_1D4364794();
    sub_1D436474C(v9);
    sub_1D42CB6CC();
    v10 = (_QWORD *)sub_1D42E3CAC();
    v0[59] = v10;
    sub_1D436475C(v10, (uint64_t)sub_1D43638F0);
    v11 = sub_1D43646F4();
    return sub_1D4329850(v11, v12, v13, v14, v15, v16);
  }
  else
  {
    v18 = sub_1D432ADB0((uint64_t)sub_1D4363890);
    v0[22] = MEMORY[0x1E0C809B0];
    v19 = v0 + 22;
    v19[1] = 0x40000000;
    v19[2] = sub_1D44C3644;
    v19[3] = &unk_1E97B3508;
    v19[4] = v18;
    sub_1D436477C(v18, sel_activateWithCompletion_);
    return swift_continuation_await();
  }
}

uint64_t sub_1D4363890()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 432) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1D43638F0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 480) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D42CB0C4();
  }
  return swift_task_switch();
}

uint64_t sub_1D4363984()
{
  objc_super *v0;
  Class super_class;
  id receiver;
  void (*v3)(Class *);
  objc_class *v4;
  char *v5;
  char *v6;
  objc_class *v7;
  objc_class *v8;
  uint64_t v9;
  uint64_t v10;
  objc_super *v11;
  __n128 *inited;
  uint64_t v14;
  objc_class *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  receiver = v0[28].receiver;
  super_class = v0[28].super_class;
  v3 = (void (*)(Class *))v0[22].super_class;
  v4 = (objc_class *)type metadata accessor for SNFileDeletionResult();
  v5 = (char *)objc_allocWithZone(v4);
  v6 = &v5[OBJC_IVAR___SNFileDeletionResult_impl];
  *(_QWORD *)v6 = receiver;
  *((_QWORD *)v6 + 1) = super_class;
  *((_QWORD *)v6 + 2) = 0;
  *((_QWORD *)v6 + 3) = 0;
  v0[20].receiver = v5;
  v0[20].super_class = v4;
  v7 = (objc_class *)objc_msgSendSuper2(v0 + 20, sel_init);
  v0[15].super_class = v7;
  v0[17].receiver = v4;
  v8 = v7;
  v3(&v0[15].super_class);

  sub_1D42B5400((uint64_t)&v0[15].super_class);
  v9 = (uint64_t)v0[27].super_class + 1;
  if ((id)v9 == v0[24].receiver)
  {
    sub_1D4364788();
    v10 = sub_1D432ADB0((uint64_t)sub_1D4363890);
    v0[11].receiver = (id)MEMORY[0x1E0C809B0];
    v11 = v0 + 11;
    v11->super_class = (Class)0x40000000;
    v11[1].receiver = sub_1D44C3644;
    v11[1].super_class = (Class)&unk_1E97B3508;
    v11[2].receiver = (id)v10;
    sub_1D436477C(v10, sel_activateWithCompletion_);
    return swift_continuation_await();
  }
  else
  {
    sub_1D4364720(v9);
    sub_1D42B28FC(&qword_1EFE49AE8);
    inited = (__n128 *)swift_initStackObject();
    sub_1D43646A8(inited, (__n128)xmmword_1D45295F0);
    sub_1D42CB7F8();
    sub_1D4364770();
    sub_1D4364794();
    sub_1D436474C(v14);
    sub_1D42CB6CC();
    v15 = (objc_class *)sub_1D42E3CAC();
    v0[29].super_class = v15;
    sub_1D436475C(v15, (uint64_t)sub_1D43638F0);
    v16 = sub_1D43646F4();
    return sub_1D4329850(v16, v17, v18, v19, v20, v21);
  }
}

uint64_t sub_1D4363B1C()
{
  objc_super *v0;
  id receiver;
  Class super_class;
  id v3;
  void (*v4)(Class *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_class *v8;
  char *v9;
  char *v10;
  objc_class *v11;
  objc_class *v12;
  uint64_t v13;
  uint64_t v14;
  objc_super *v15;
  __n128 *inited;
  uint64_t v18;
  objc_class *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  receiver = v0[30].receiver;
  super_class = v0[28].super_class;
  v3 = v0[28].receiver;
  v4 = (void (*)(Class *))v0[22].super_class;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_getErrorValue();
  v5 = sub_1D451B8E0();
  v7 = v6;
  v8 = (objc_class *)type metadata accessor for SNFileDeletionResult();
  v9 = (char *)objc_allocWithZone(v8);
  v10 = &v9[OBJC_IVAR___SNFileDeletionResult_impl];
  *(_QWORD *)v10 = v3;
  *((_QWORD *)v10 + 1) = super_class;
  *((_QWORD *)v10 + 2) = v5;
  *((_QWORD *)v10 + 3) = v7;
  v0[19].receiver = v9;
  v0[19].super_class = v8;
  v11 = (objc_class *)objc_msgSendSuper2(v0 + 19, sel_init);
  v0[13].super_class = v11;
  v0[15].receiver = v8;
  v12 = v11;
  v4(&v0[13].super_class);

  sub_1D42B5400((uint64_t)&v0[13].super_class);
  v13 = (uint64_t)v0[27].super_class + 1;
  if ((id)v13 == v0[24].receiver)
  {
    sub_1D4364788();
    v14 = sub_1D432ADB0((uint64_t)sub_1D4363890);
    v0[11].receiver = (id)MEMORY[0x1E0C809B0];
    v15 = v0 + 11;
    v15->super_class = (Class)0x40000000;
    v15[1].receiver = sub_1D44C3644;
    v15[1].super_class = (Class)&unk_1E97B3508;
    v15[2].receiver = (id)v14;
    sub_1D436477C(v14, sel_activateWithCompletion_);
    return swift_continuation_await();
  }
  else
  {
    sub_1D4364720(v13);
    sub_1D42B28FC(&qword_1EFE49AE8);
    inited = (__n128 *)swift_initStackObject();
    sub_1D43646A8(inited, (__n128)xmmword_1D45295F0);
    sub_1D42CB7F8();
    sub_1D4364770();
    sub_1D4364794();
    sub_1D436474C(v18);
    sub_1D42CB6CC();
    v19 = (objc_class *)sub_1D42E3CAC();
    v0[29].super_class = v19;
    sub_1D436475C(v19, (uint64_t)sub_1D43638F0);
    v20 = sub_1D43646F4();
    return sub_1D4329850(v20, v21, v22, v23, v24, v25);
  }
}

uint64_t sub_1D4363D1C()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D4363D58(void *a1)
{
  objc_msgSend(a1, sel_invalidate);
  sub_1D42B28FC(&qword_1EFE49BB0);
  return sub_1D451AB3C();
}

id SNDeleteFilesRequest.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SNDeleteFilesRequest.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SNDeleteFilesRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SNDeleteFilesRequest();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SNDeleteFilesRequest()
{
  return objc_opt_self();
}

uint64_t (*sub_1D4363EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  sub_1D4363578(a1, a2, a3, a4, a5);
  return sub_1D4364514;
}

uint64_t method lookup function for SNDeleteFilesRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t destroy for DeleteFilesRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for DeleteFilesRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DeleteFilesRequest(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for DeleteFilesRequest(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

_QWORD *assignWithTake for DeleteFilesRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[8];
  a1[7] = a2[7];
  a1[8] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[10];
  a1[9] = a2[9];
  a1[10] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeleteFilesRequest(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeleteFilesRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeleteFilesRequest()
{
  return &type metadata for DeleteFilesRequest;
}

unint64_t sub_1D43641E0()
{
  unint64_t result;

  result = qword_1EFE4D3B0;
  if (!qword_1EFE4D3B0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452EAC4, &type metadata for DeleteFilesRequest);
    atomic_store(result, (unint64_t *)&qword_1EFE4D3B0);
  }
  return result;
}

unint64_t sub_1D436421C()
{
  unint64_t result;

  result = qword_1EFE4D3C0;
  if (!qword_1EFE4D3C0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452EC40, &type metadata for DeleteFilesRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D3C0);
  }
  return result;
}

unint64_t sub_1D4364258()
{
  unint64_t result;

  result = qword_1EFE4D3D8;
  if (!qword_1EFE4D3D8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4544AC0, &type metadata for FileServerInfo);
    atomic_store(result, (unint64_t *)&qword_1EFE4D3D8);
  }
  return result;
}

uint64_t sub_1D4364294(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_1D42B8B10((uint64_t *)&unk_1EFE51A80);
    v8 = a2;
    result = MEMORY[0x1D825E41C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D43642F4()
{
  unint64_t result;

  result = qword_1EFE4D3F0;
  if (!qword_1EFE4D3F0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4544A98, &type metadata for FileServerInfo);
    atomic_store(result, (unint64_t *)&qword_1EFE4D3F0);
  }
  return result;
}

uint64_t sub_1D4364330(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D4364384(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D43643D8()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D4364414(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1D43644A0;
  return sub_1D436369C(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1D43644A0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1D43644E8()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D4364514()
{
  uint64_t v0;

  return sub_1D4363D58(*(void **)(v0 + 16));
}

uint64_t storeEnumTagSinglePayload for DeleteFilesRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D4364568 + 4 * byte_1D452EA65[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D436459C + 4 * byte_1D452EA60[v4]))();
}

uint64_t sub_1D436459C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43645A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D43645ACLL);
  return result;
}

uint64_t sub_1D43645B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D43645C0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D43645C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43645CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeleteFilesRequest.CodingKeys()
{
  return &type metadata for DeleteFilesRequest.CodingKeys;
}

unint64_t sub_1D43645EC()
{
  unint64_t result;

  result = qword_1EFE4D410;
  if (!qword_1EFE4D410)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452EC18, &type metadata for DeleteFilesRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D410);
  }
  return result;
}

unint64_t sub_1D436462C()
{
  unint64_t result;

  result = qword_1EFE4D418;
  if (!qword_1EFE4D418)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452EB88, &type metadata for DeleteFilesRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D418);
  }
  return result;
}

unint64_t sub_1D436466C()
{
  unint64_t result;

  result = qword_1EFE4D420;
  if (!qword_1EFE4D420)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452EBB0, &type metadata for DeleteFilesRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D420);
  }
  return result;
}

uint64_t sub_1D43646A8(__n128 *a1, __n128 a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  a1[1] = a2;
  a1[2].n128_u64[0] = 0x6874615065736162;
  a1[2].n128_u64[1] = 0xE800000000000000;
  a1[3].n128_u64[0] = v4;
  a1[3].n128_u64[1] = v2;
  a1[4].n128_u64[0] = 0x68746150656C6966;
  a1[4].n128_u64[1] = 0xE900000000000073;
  a1[5].n128_u64[0] = v5;
  a1[5].n128_u64[1] = v3;
  return swift_bridgeObjectRetain_n();
}

unint64_t sub_1D43646F4()
{
  return 0xD000000000000016;
}

uint64_t sub_1D4364710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

void sub_1D4364720(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v1[55] = a1;
  v2 = v1[47] + 16 * a1;
  v1[56] = *(_QWORD *)(v2 + 32);
  v1[57] = *(_QWORD *)(v2 + 40);
}

uint64_t sub_1D436474C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 464) = a1;
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1D436475C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *result = v2;
  result[1] = a2;
  return result;
}

uint64_t sub_1D4364770()
{
  return sub_1D451A5E4();
}

id sub_1D436477C(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_1D4364788()
{
  return swift_bridgeObjectRelease();
}

void sub_1D4364794()
{
  sub_1D436509C();
}

void sub_1D436479C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_QWORD *)(a3 + 16) && (v5 = sub_1D4367920(a1, a2), (v6 & 1) != 0))
  {
    v7 = sub_1D436798C(v5);
    sub_1D43678C4(v7, v8);
  }
  else
  {
    *a4 = 0u;
    a4[1] = 0u;
    sub_1D42B6E24();
  }
}

void sub_1D43647D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  if (*(_QWORD *)(a3 + 16) && (sub_1D4367920(a1, a2), (v3 & 1) != 0))
    swift_bridgeObjectRetain();
  else
    sub_1D4367A34();
  sub_1D42F1F54();
  sub_1D42B6E24();
}

void sub_1D436481C(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  if (*(_QWORD *)(a2 + 16) && (v4 = sub_1D4366BE8(a1), (v5 & 1) != 0))
  {
    v6 = sub_1D436798C(v4);
    sub_1D43678C4(v6, v7);
  }
  else
  {
    *a3 = 0u;
    a3[1] = 0u;
    sub_1D42B6E24();
  }
}

void sub_1D436485C(char a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16) && (sub_1D4366C68(a1 & 1), (v2 & 1) != 0))
    sub_1D436790C();
  else
    sub_1D4367A34();
  sub_1D42F1F54();
  sub_1D42B6E24();
}

void sub_1D4364898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  id v6;

  if (*(_QWORD *)(a3 + 16))
  {
    v4 = sub_1D4367920(a1, a2);
    if ((v5 & 1) != 0)
      v6 = *(id *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  }
  sub_1D42B6E24();
}

uint64_t sub_1D43648D4(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16) && (sub_1D4366C98(), (v2 & 1) != 0))
  {
    swift_retain();
    swift_retain();
    sub_1D42B8F24();
  }
  else
  {
    sub_1D4367A34();
  }
  return sub_1D42F1F54();
}

void sub_1D4364944(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1D4366C98();
    if ((v2 & 1) != 0)
      swift_bridgeObjectRetain();
  }
  sub_1D42B6E24();
}

uint64_t sub_1D4364980@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  int v12;

  if (*(_QWORD *)(a2 + 16) && (result = sub_1D4366CC4(result), (v5 & 1) != 0))
  {
    v6 = *(_QWORD *)(a2 + 56) + 48 * result;
    v8 = *(_QWORD *)v6;
    v7 = *(_QWORD *)(v6 + 8);
    v9 = *(_QWORD *)(v6 + 16);
    v10 = *(_QWORD *)(v6 + 24);
    v11 = *(void **)(v6 + 32);
    v12 = *(_DWORD *)(v6 + 40);
    result = (uint64_t)sub_1D4367748(*(id *)v6, v7, v9, v10, v11);
  }
  else
  {
    v7 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v8 = 1;
  }
  *(_QWORD *)a3 = v8;
  *(_QWORD *)(a3 + 8) = v7;
  *(_QWORD *)(a3 + 16) = v9;
  *(_QWORD *)(a3 + 24) = v10;
  *(_QWORD *)(a3 + 32) = v11;
  *(_DWORD *)(a3 + 40) = v12;
  return result;
}

uint64_t sub_1D4364A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  char v5;

  if (*(_QWORD *)(a3 + 16) && (v4 = sub_1D4367920(a1, a2), (v5 & 1) != 0))
    return *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  else
    return 0;
}

void sub_1D4364A70(uint64_t a1@<X1>, _OWORD *a2@<X8>)
{
  unint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_QWORD *)(a1 + 16) && (v3 = sub_1D4366D54(), (v4 & 1) != 0))
  {
    v5 = sub_1D436798C(v3);
    sub_1D43678C4(v5, v6);
  }
  else
  {
    *a2 = 0u;
    a2[1] = 0u;
    sub_1D42B6E24();
  }
}

void sub_1D4364AB0(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16) && (sub_1D4366CF4(), (v2 & 1) != 0))
    sub_1D436790C();
  else
    sub_1D4367A34();
  sub_1D42F1F54();
  sub_1D42B6E24();
}

void sub_1D4364AEC(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1D4366D80(a1);
    if ((v2 & 1) != 0)
      swift_retain();
  }
  sub_1D42B6E24();
}

uint64_t sub_1D4364B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  char v5;

  if (*(_QWORD *)(a3 + 16) && (v4 = sub_1D4367920(a1, a2), (v5 & 1) != 0))
    return *(_QWORD *)(*(_QWORD *)(v3 + 56) + 16 * v4);
  else
    return 0;
}

void sub_1D4364B70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  void *v24;
  id v25;
  _OWORD *v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;

  sub_1D4367938();
  if (v1)
  {
    sub_1D42B28FC(&qword_1EFE4D458);
    v3 = (_QWORD *)sub_1D4367884();
  }
  else
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v41 = v0 + 64;
  sub_1D4367894();
  v40 = v4;
  v5 = &v46;
  v6 = &v48;
  sub_1D42CB7B8();
  v42 = 0;
  v7 = (unint64_t *)&qword_1EFE4D470;
  v8 = 0x1E0C9E918uLL;
  while (1)
  {
    while (1)
    {
      if (v2)
      {
        sub_1D43678D8();
        v43 = v2;
        v10 = v9 | (v42 << 6);
      }
      else
      {
        if (__OFADD__(v42, 1))
          goto LABEL_34;
        if (v42 + 1 >= v40)
        {
LABEL_31:
          sub_1D4367684();
          return;
        }
        sub_1D4367A00();
        if (!v11)
        {
          sub_1D43679F4();
          if (v13 == v14)
            goto LABEL_31;
          if (!*(_QWORD *)(v41 + 8 * v12))
          {
            sub_1D43679F4();
            if (v13 == v14)
              goto LABEL_31;
            if (!*(_QWORD *)(v41 + 8 * v15))
            {
              sub_1D43679F4();
              if (v13 == v14)
                goto LABEL_31;
              if (!*(_QWORD *)(v41 + 8 * v16))
              {
                v18 = v17 + 4;
                if (v18 >= v40)
                  goto LABEL_31;
                if (!*(_QWORD *)(v41 + 8 * v18))
                {
                  while (!__OFADD__(v18, 1))
                  {
                    sub_1D43679F4();
                    if (v13 == v14)
                      goto LABEL_31;
                    sub_1D43679DC();
                    if (v19)
                      goto LABEL_25;
                  }
                  goto LABEL_35;
                }
              }
            }
          }
        }
LABEL_25:
        sub_1D43679C8();
        v42 = v20;
        v43 = v21;
        v10 = v22 + (v20 << 6);
      }
      v23 = (uint64_t *)(*(_QWORD *)(v0 + 48) + 16 * v10);
      v24 = *(void **)(*(_QWORD *)(v0 + 56) + 8 * v10);
      v44 = *v23;
      v45 = v23[1];
      sub_1D42CA5D0(0, v7);
      sub_1D42CB8FC();
      v25 = v24;
      sub_1D4367904();
      v26 = (_OWORD *)sub_1D4367964();
      sub_1D42B293C(v26, &v47);
      v27 = sub_1D4366B34(v44, v45);
      v28 = v27;
      if ((v29 & 1) == 0)
        break;
      v30 = v6;
      v31 = v5;
      v32 = v0;
      v33 = v8;
      v34 = v7;
      v35 = (uint64_t *)(v3[6] + 16 * v27);
      swift_bridgeObjectRelease();
      *v35 = v44;
      v35[1] = v45;
      v7 = v34;
      v8 = v33;
      v0 = v32;
      v5 = v31;
      v6 = v30;
      sub_1D42B5400(v3[7] + 32 * v28);
      sub_1D4367A2C(&v47);
      v2 = v43;
    }
    if (v3[2] >= v3[3])
      break;
    sub_1D43679B4((v27 >> 3) & 0x1FFFFFFFFFFFFFF8);
    v37 = (uint64_t *)(v36 + 16 * v28);
    *v37 = v44;
    v37[1] = v45;
    sub_1D42B293C(&v47, (_OWORD *)(v3[7] + 32 * v28));
    v38 = v3[2];
    v14 = __OFADD__(v38, 1);
    v39 = v38 + 1;
    if (v14)
      goto LABEL_33;
    v3[2] = v39;
    v2 = v43;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
}

void sub_1D4364E48()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;

  sub_1D4367938();
  if (v1)
  {
    sub_1D42B28FC(&qword_1EFE4BF18);
    v2 = (_QWORD *)sub_1D4367884();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v3 = -1 << *(_BYTE *)(v0 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v0 + 64);
  sub_1D42CB7B8();
  v6 = 0;
  while (1)
  {
    while (1)
    {
      if (v5)
      {
        v7 = __clz(__rbit64(v5));
        v5 &= v5 - 1;
        v8 = v7 | (v6 << 6);
      }
      else
      {
        if (__OFADD__(v6, 1))
          goto LABEL_39;
        sub_1D4367A0C();
        if (v9 == v10)
        {
LABEL_36:
          sub_1D4367684();
          return;
        }
        sub_1D4367A00();
        if (!v11)
        {
          sub_1D43678CC();
          if (v9 == v10)
            goto LABEL_36;
          sub_1D43678EC();
          if (!v12)
          {
            sub_1D43678CC();
            if (v9 == v10)
              goto LABEL_36;
            sub_1D43678EC();
            if (!v13)
            {
              sub_1D43678CC();
              if (v9 == v10)
                goto LABEL_36;
              sub_1D43678EC();
              if (!v14)
              {
                sub_1D4367A0C();
                if (v9 == v10)
                  goto LABEL_36;
                if (!*(_QWORD *)(v0 + 64 + 8 * v15))
                {
                  while (!__OFADD__(v15, 1))
                  {
                    sub_1D43678CC();
                    if (v9 == v10)
                      goto LABEL_36;
                    sub_1D43679DC();
                    if (v16)
                      goto LABEL_30;
                  }
                  goto LABEL_40;
                }
              }
            }
          }
        }
LABEL_30:
        sub_1D4367944();
        v5 = v18 & v17;
        v8 = v20 + (v19 << 6);
        v6 = v19;
      }
      v21 = (uint64_t *)(*(_QWORD *)(v0 + 48) + 16 * v8);
      v23 = *v21;
      v22 = v21[1];
      sub_1D42CB8FC();
      v24 = sub_1D451ABC0();
      v25 = sub_1D4366B34(v23, v22);
      v26 = v25;
      if ((v27 & 1) == 0)
        break;
      v28 = (uint64_t *)(v2[6] + 16 * v25);
      swift_bridgeObjectRelease();
      *v28 = v23;
      v28[1] = v22;
      v29 = v2[7];

      *(_QWORD *)(v29 + 8 * v26) = v24;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v25;
    v30 = (uint64_t *)(v2[6] + 16 * v25);
    *v30 = v23;
    v30[1] = v22;
    *(_QWORD *)(v2[7] + 8 * v25) = v24;
    v31 = v2[2];
    v10 = __OFADD__(v31, 1);
    v32 = v31 + 1;
    if (v10)
      goto LABEL_38;
    v2[2] = v32;
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
}

void sub_1D436509C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  _OWORD v39[2];

  sub_1D4367938();
  if (v1)
  {
    sub_1D42B28FC(&qword_1EFE4D448);
    v2 = sub_1D4367884();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v30 = v0 + 64;
  v3 = -1 << *(_BYTE *)(v0 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v0 + 64);
  v29 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  sub_1D42CB7B8();
  sub_1D42B8F24();
  v7 = 0;
  if (!v5)
    goto LABEL_9;
LABEL_8:
  v5 &= v5 - 1;
  while (1)
  {
    v20 = sub_1D4367928();
    *(_QWORD *)&v39[0] = v21;
    *((_QWORD *)&v39[0] + 1) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D4367904();
    sub_1D4367904();
    v35 = v31;
    v36 = v32;
    v37 = v33;
    sub_1D4367A2C(&v34);
    v31 = v35;
    v32 = v36;
    v33 = v37;
    sub_1D42B293C(&v38, v39);
    sub_1D42B293C(v39, &v35);
    v22 = sub_1D451B394() & ~(-1 << *(_BYTE *)(v2 + 32));
    if (((-1 << v22) & ~*(_QWORD *)(v6 + 8 * (v22 >> 6))) == 0)
    {
      sub_1D4367A40();
      while (++v25 != v26 || (v24 & 1) == 0)
      {
        v27 = v25 == v26;
        if (v25 == v26)
          v25 = 0;
        v24 |= v27;
        if (*(_QWORD *)(v6 + 8 * v25) != -1)
        {
          sub_1D4367A18();
          goto LABEL_37;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    sub_1D4367A54();
LABEL_37:
    *(_QWORD *)(v6 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = *(_QWORD *)(v2 + 48) + 40 * v23;
    *(_OWORD *)v28 = v31;
    *(_OWORD *)(v28 + 16) = v32;
    *(_QWORD *)(v28 + 32) = v33;
    sub_1D42B293C(&v35, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v23));
    ++*(_QWORD *)(v2 + 16);
    if (v5)
      goto LABEL_8;
LABEL_9:
    if (__OFADD__(v7, 1))
      goto LABEL_41;
    if (v7 + 1 >= v29)
      goto LABEL_39;
    sub_1D4367A00();
    if (!v8)
    {
      sub_1D43679E8();
      if (v10 == v11)
        goto LABEL_39;
      if (!*(_QWORD *)(v30 + 8 * v9))
      {
        sub_1D43679E8();
        if (v10 == v11)
          goto LABEL_39;
        if (!*(_QWORD *)(v30 + 8 * v12))
        {
          sub_1D43679E8();
          if (v10 == v11)
            goto LABEL_39;
          if (!*(_QWORD *)(v30 + 8 * v13))
          {
            v15 = v14 + 4;
            if (v15 >= v29)
            {
LABEL_39:
              sub_1D436799C();
              sub_1D4367684();
              return;
            }
            if (!*(_QWORD *)(v30 + 8 * v15))
              break;
          }
        }
      }
    }
LABEL_27:
    sub_1D4367944();
    v5 = v18 & v17;
    v7 = v19;
  }
  while (!__OFADD__(v15, 1))
  {
    sub_1D43679E8();
    if (v10 == v11)
      goto LABEL_39;
    sub_1D43679DC();
    if (v16)
      goto LABEL_27;
  }
LABEL_42:
  __break(1u);
}

uint64_t sub_1D43653D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[2];

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1D42B28FC(&qword_1EFE4D448);
    v2 = sub_1D451B5C8();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  if (!v5)
    goto LABEL_9;
LABEL_8:
  v9 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  v10 = v9 | (v8 << 6);
  while (1)
  {
    v15 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v16 = v15[1];
    v17 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v10);
    *(_QWORD *)&v37[0] = *v15;
    *((_QWORD *)&v37[0] + 1) = v16;
    swift_bridgeObjectRetain();
    v17;
    swift_dynamicCast();
    sub_1D42CA5D0(0, (unint64_t *)&qword_1EFE404B0);
    swift_dynamicCast();
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_1D42B293C(&v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_1D42B293C(v36, v37);
    sub_1D42B293C(v37, &v33);
    result = sub_1D451B394();
    v18 = -1 << *(_BYTE *)(v2 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v6 + 8 * (v19 >> 6))) == 0)
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        v24 = v20 == v23;
        if (v20 == v23)
          v20 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v6 + 8 * v20);
        if (v25 != -1)
        {
          v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v6 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(_QWORD *)(v6 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    v26 = *(_QWORD *)(v2 + 48) + 40 * v21;
    *(_OWORD *)v26 = v29;
    *(_OWORD *)(v26 + 16) = v30;
    *(_QWORD *)(v26 + 32) = v31;
    result = (uint64_t)sub_1D42B293C(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v21));
    ++*(_QWORD *)(v2 + 16);
    if (v5)
      goto LABEL_8;
LABEL_9:
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
      goto LABEL_38;
    if (v11 >= v27)
      goto LABEL_36;
    v12 = *(_QWORD *)(v28 + 8 * v11);
    v13 = v8 + 1;
    if (!v12)
    {
      v13 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_36;
      v12 = *(_QWORD *)(v28 + 8 * v13);
      if (!v12)
      {
        v13 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_36;
        v12 = *(_QWORD *)(v28 + 8 * v13);
        if (!v12)
        {
          v13 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_36;
          v12 = *(_QWORD *)(v28 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_24:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v8 = v13;
  }
  v14 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_36:
    swift_release();
    sub_1D4367684();
    return v2;
  }
  v12 = *(_QWORD *)(v28 + 8 * v14);
  if (v12)
  {
    v13 = v8 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v27)
      goto LABEL_36;
    v12 = *(_QWORD *)(v28 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_24;
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_1D4365794()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  sub_1D4367938();
  if (v1)
  {
    sub_1D42B28FC(&qword_1EFE4D468);
    v2 = sub_1D4367884();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v3 = v0 + 64;
  v4 = -1 << *(_BYTE *)(v0 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v0 + 64);
  v7 = (unint64_t)(63 - v4) >> 6;
  v8 = v2 + 64;
  sub_1D42CB7B8();
  sub_1D42B8F24();
  v9 = 0;
  if (!v6)
    goto LABEL_9;
LABEL_8:
  sub_1D43678D8();
  while (1)
  {
    sub_1D4367928();
    v18 = *(void **)(v17 + 8 * v16);
    swift_bridgeObjectRetain();
    v19 = v18;
    sub_1D4367904();
    v20 = sub_1D451B394() & ~(-1 << *(_BYTE *)(v2 + 32));
    if (((-1 << v20) & ~*(_QWORD *)(v8 + 8 * (v20 >> 6))) == 0)
    {
      sub_1D4367A40();
      while (++v23 != v24 || (v22 & 1) == 0)
      {
        v25 = v23 == v24;
        if (v23 == v24)
          v23 = 0;
        v22 |= v25;
        if (*(_QWORD *)(v8 + 8 * v23) != -1)
        {
          sub_1D4367A18();
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    sub_1D4367A54();
LABEL_33:
    *(_QWORD *)(v8 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    v26 = *(_QWORD *)(v2 + 48) + 40 * v21;
    *(_OWORD *)v26 = v27;
    *(_OWORD *)(v26 + 16) = v28;
    *(_QWORD *)(v26 + 32) = v29;
    *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v21) = v19;
    ++*(_QWORD *)(v2 + 16);
    if (v6)
      goto LABEL_8;
LABEL_9:
    v10 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_37;
    if (v10 >= v7)
      goto LABEL_35;
    if (!*(_QWORD *)(v3 + 8 * v10))
    {
      if (v9 + 2 >= v7)
        goto LABEL_35;
      if (!*(_QWORD *)(v3 + 8 * (v9 + 2)))
      {
        if (v9 + 3 >= v7)
          goto LABEL_35;
        if (!*(_QWORD *)(v3 + 8 * (v9 + 3)))
        {
          if (v9 + 4 >= v7)
            goto LABEL_35;
          if (!*(_QWORD *)(v3 + 8 * (v9 + 4)))
          {
            v11 = v9 + 5;
            if (v9 + 5 >= v7)
            {
LABEL_35:
              sub_1D436799C();
              sub_1D4367684();
              return;
            }
            if (!*(_QWORD *)(v3 + 8 * v11))
              break;
          }
        }
      }
    }
LABEL_23:
    sub_1D4367944();
    v6 = v14 & v13;
    v9 = v15;
  }
  while (1)
  {
    v12 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v12 >= v7)
      goto LABEL_35;
    ++v11;
    if (*(_QWORD *)(v3 + 8 * v12))
      goto LABEL_23;
  }
LABEL_38:
  __break(1u);
}

void sub_1D4365A34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;

  sub_1D4367938();
  if (v1)
  {
    sub_1D42B28FC(&qword_1EFE4D458);
    v3 = (_QWORD *)sub_1D4367884();
  }
  else
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v35 = v0 + 64;
  sub_1D4367894();
  v4 = &v40;
  v5 = &v42;
  sub_1D42CB7B8();
  v6 = 0;
  v7 = (uint64_t *)&unk_1EFE403D0;
  v8 = MEMORY[0x1E0DEE9B8] + 8;
  while (1)
  {
    while (1)
    {
      if (v2)
      {
        sub_1D43678D8();
        v37 = v2;
      }
      else
      {
        if (__OFADD__(v6, 1))
          goto LABEL_36;
        sub_1D4367A0C();
        if (v9 == v10)
        {
LABEL_33:
          sub_1D4367684();
          return;
        }
        sub_1D4367A00();
        if (!v11)
        {
          sub_1D43678CC();
          if (v9 == v10)
            goto LABEL_33;
          sub_1D43678EC();
          if (!v12)
          {
            sub_1D43678CC();
            if (v9 == v10)
              goto LABEL_33;
            sub_1D43678EC();
            if (!v13)
            {
              sub_1D43678CC();
              if (v9 == v10)
                goto LABEL_33;
              sub_1D43678EC();
              if (!v14)
              {
                sub_1D4367A0C();
                if (v9 == v10)
                  goto LABEL_33;
                if (!*(_QWORD *)(v35 + 8 * v15))
                {
                  while (!__OFADD__(v15, 1))
                  {
                    sub_1D43678CC();
                    if (v9 == v10)
                      goto LABEL_33;
                    sub_1D43679DC();
                    if (v16)
                      goto LABEL_27;
                  }
                  goto LABEL_37;
                }
              }
            }
          }
        }
LABEL_27:
        sub_1D43679C8();
        v37 = v17;
        v6 = v18;
      }
      v19 = sub_1D4367928();
      v38 = v20;
      v39 = v19;
      swift_bridgeObjectRetain();
      sub_1D42CB8FC();
      sub_1D42B28FC(v7);
      sub_1D4367904();
      v21 = (_OWORD *)sub_1D4367964();
      sub_1D42B293C(v21, &v41);
      v22 = sub_1D4366B34(v38, v39);
      v23 = v22;
      if ((v24 & 1) == 0)
        break;
      v36 = v6;
      v25 = v5;
      v26 = v4;
      v27 = v0;
      v28 = v8;
      v29 = v7;
      v30 = (uint64_t *)(v3[6] + 16 * v22);
      swift_bridgeObjectRelease();
      *v30 = v38;
      v30[1] = v39;
      v7 = v29;
      v8 = v28;
      v0 = v27;
      v4 = v26;
      v5 = v25;
      v6 = v36;
      sub_1D42B5400(v3[7] + 32 * v23);
      sub_1D4367A2C(&v41);
      v2 = v37;
    }
    if (v3[2] >= v3[3])
      break;
    sub_1D43679B4((v22 >> 3) & 0x1FFFFFFFFFFFFFF8);
    v32 = (uint64_t *)(v31 + 16 * v23);
    *v32 = v38;
    v32[1] = v39;
    sub_1D42B293C(&v41, (_OWORD *)(v3[7] + 32 * v23));
    v33 = v3[2];
    v10 = __OFADD__(v33, 1);
    v34 = v33 + 1;
    if (v10)
      goto LABEL_35;
    v3[2] = v34;
    v2 = v37;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

uint64_t sub_1D4365CDC()
{
  sub_1D451B958();
  sub_1D451B964();
  return sub_1D42CB230();
}

uint64_t sub_1D4365D1C()
{
  return sub_1D4365CDC();
}

id sub_1D4365D24()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DAFF28]), sel_init);
  qword_1EFEA77A0 = (uint64_t)result;
  return result;
}

uint64_t sub_1D4365D54(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t result;
  _BYTE *v11;
  _BYTE v12[16];
  _QWORD v13[2];

  if (qword_1EFE48E60 != -1)
    swift_once();
  v2 = (void *)qword_1EFEA77A0;
  v3 = (void *)sub_1D451A6C8();
  v4 = (void *)sub_1D451A6C8();
  v5 = (void *)sub_1D451A6C8();
  v6 = (void *)sub_1D451A6C8();
  v7 = (void *)sub_1D451A6C8();
  sub_1D436768C(a1 + 80, (uint64_t)v12);
  sub_1D436768C((uint64_t)v12, (uint64_t)v13);
  if (v13[1])
    v8 = (void *)sub_1D451A6C8();
  else
    v8 = 0;
  v9 = objc_msgSend(v2, sel_signatureWithDomain_type_subType_subtypeContext_detectedProcess_triggerThresholdValues_, v3, v4, v5, v6, v7, v8);

  if (v9)
  {
    v9;
    result = sub_1D451A5B4();
    __break(1u);
  }
  else
  {
    sub_1D43676D4();
    swift_allocError();
    *v11 = 0;
    swift_willThrow();
    return (uint64_t)v4;
  }
  return result;
}

uint64_t sub_1D4365F00(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  void *v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  if ((a3 & 1) != 0)
  {
    sub_1D42CA5D0(0, (unint64_t *)&qword_1EFE404B0);
    v3 = sub_1D451B0E8();
  }
  else
  {
    v3 = sub_1D451ABC0();
  }
  v4 = (void *)v3;
  sub_1D42B28FC(&qword_1EFE4D440);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D452EC90;
  *(_QWORD *)(inited + 32) = sub_1D451A6EC();
  *(_QWORD *)(inited + 40) = v6;
  *(_QWORD *)(inited + 48) = sub_1D451AA64();
  *(_QWORD *)(inited + 56) = sub_1D451A6EC();
  *(_QWORD *)(inited + 64) = v7;
  *(_QWORD *)(inited + 72) = sub_1D451AA64();
  *(_QWORD *)(inited + 80) = sub_1D451A6EC();
  *(_QWORD *)(inited + 88) = v8;
  *(_QWORD *)(inited + 96) = sub_1D451AA64();
  *(_QWORD *)(inited + 104) = sub_1D451A6EC();
  *(_QWORD *)(inited + 112) = v9;
  *(_QWORD *)(inited + 120) = sub_1D451AA64();
  *(_QWORD *)(inited + 128) = sub_1D451A6EC();
  *(_QWORD *)(inited + 136) = v10;
  *(_QWORD *)(inited + 144) = v4;
  sub_1D42CA5D0(0, (unint64_t *)&qword_1EFE404B0);
  v11 = v4;
  v12 = sub_1D451A5E4();
  v13 = sub_1D43653D8(v12);
  swift_bridgeObjectRelease();

  return v13;
}

void sub_1D4366094(uint64_t a1, int a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v7;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  unsigned __int8 v19;
  id v20;
  _QWORD aBlock[7];

  if (qword_1EFE472D0 != -1)
    swift_once();
  if (byte_1EFEA7718 == 1)
  {
    sub_1D4365D54(a1);
    if (!v7)
    {
      sub_1D4365F00(a2 & 0x1010101, a3, a4 & 1);
      if (qword_1EFE48E60 != -1)
        swift_once();
      v20 = (id)qword_1EFEA77A0;
      v15 = (void *)sub_1D4367954();
      swift_bridgeObjectRelease();
      v16 = (void *)sub_1D4367954();
      swift_bridgeObjectRelease();
      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = a5;
      *(_QWORD *)(v17 + 24) = a6;
      aBlock[4] = sub_1D4366AA4;
      aBlock[5] = v17;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1D4366744;
      aBlock[3] = &unk_1E97B3520;
      v18 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      v19 = objc_msgSend(v20, sel_snapshotWithSignature_delay_events_payload_actions_reply_, v15, 0, 0, v16, v18, a7);
      _Block_release(v18);

      if ((v19 & 1) == 0)
      {
        type metadata accessor for SNError();
        sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD000000000000025, 0x80000001D4552020);
        swift_willThrow();
      }
    }
  }
}

void sub_1D43662E4(uint64_t a1, void (*a2)(id))
{
  unint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  BOOL v25;
  __int128 v26;
  uint64_t v27;

  if (!a1)
    goto LABEL_10;
  v22 = (id)sub_1D451A6EC();
  v23 = v4;
  sub_1D451B3B8();
  sub_1D4364A70(a1, &v26);
  sub_1D42D6F98((uint64_t)&v24);
  if (!v27)
  {
    sub_1D42B5464((uint64_t)&v26);
    goto LABEL_10;
  }
  sub_1D42CA5D0(0, (unint64_t *)&qword_1EFE404B0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    a2(0);
    return;
  }
  a2(objc_msgSend(v22, sel_BOOLValue));
  if ((objc_msgSend(v22, sel_BOOLValue) & 1) == 0)
  {
    *(_QWORD *)&v26 = sub_1D451A6EC();
    *((_QWORD *)&v26 + 1) = v5;
    sub_1D451B3B8();
    sub_1D4364A70(a1, &v26);
    sub_1D42D6F98((uint64_t)&v24);
    if (v27)
    {
      if (swift_dynamicCast())
        v6 = v22;
      else
        v6 = 0;
    }
    else
    {
      sub_1D42B5464((uint64_t)&v26);
      v6 = 0;
    }
    *(_QWORD *)&v26 = sub_1D451A6EC();
    *((_QWORD *)&v26 + 1) = v7;
    sub_1D451B3B8();
    sub_1D4364A70(a1, &v26);
    sub_1D42D6F98((uint64_t)&v24);
    if (v27)
    {
      v8 = swift_dynamicCast();
      if (v8)
        v9 = (uint64_t)v22;
      else
        v9 = 0;
      if (v8)
        v10 = v23;
      else
        v10 = 0;
    }
    else
    {
      sub_1D42B5464((uint64_t)&v26);
      v9 = 0;
      v10 = 0;
    }
    if (qword_1EFE40338 != -1)
      swift_once();
    v11 = sub_1D451A014();
    sub_1D42CC880(v11, (uint64_t)qword_1EFEA7700);
    swift_bridgeObjectRetain();
    v12 = v6;
    v13 = sub_1D4519FFC();
    v14 = sub_1D451AF74();
    if (!os_log_type_enabled(v13, v14))
    {

      swift_bridgeObjectRelease_n();
      return;
    }
    v15 = swift_slowAlloc();
    v16 = swift_slowAlloc();
    *(_QWORD *)&v26 = v16;
    *(_DWORD *)v15 = 136315394;
    v21 = v16;
    if (v6)
      v17 = objc_msgSend(v12, sel_integerValue);
    else
      v17 = 0;
    v24 = (uint64_t)v17;
    v25 = v6 == 0;
    sub_1D42B28FC(&qword_1EFE4D438);
    v18 = sub_1D451A728();
    v24 = sub_1D43D72EC(v18, v19, (uint64_t *)&v26);
    sub_1D451B1A8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    if (v10)
    {
      v20 = v10;
    }
    else
    {
      v9 = 0x6E776F6E6B6E753CLL;
      v20 = 0xE90000000000003ELL;
    }
    swift_bridgeObjectRetain();
    v24 = sub_1D43D72EC(v9, v20, (uint64_t *)&v26);
    sub_1D451B1A8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D42A7000, v13, v14, "Snapshot rejected; reason: %s, %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D825E524](v21, -1, -1);
    MEMORY[0x1D825E524](v15, -1, -1);

  }
}

uint64_t sub_1D4366744(uint64_t a1, uint64_t a2)
{
  void (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
    v3 = sub_1D451A5CC();
  else
    v3 = 0;
  swift_retain();
  v2(v3);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43667BC(uint64_t a1, int a2, uint64_t a3, char a4, double a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 108) = a4;
  *(_QWORD *)(v5 + 96) = a3;
  *(_DWORD *)(v5 + 104) = a2;
  *(double *)(v5 + 88) = a5;
  *(_QWORD *)(v5 + 80) = a1;
  return swift_task_switch();
}

uint64_t sub_1D43667E4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  int v3;
  double v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_BYTE *)(v0 + 108);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_DWORD *)(v0 + 104);
  v4 = *(double *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1D436686C;
  v6 = swift_continuation_init();
  sub_1D43668C0(v6, v5, v3 & 0x1010101, v2, v1 & 1, v4);
  return swift_continuation_await();
}

uint64_t sub_1D436686C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (*(_QWORD *)(v1 + 48))
    swift_willThrow();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1D43668C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, char a5, double a6)
{
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;

  type metadata accessor for ManagedAtomicBool();
  v12 = swift_allocObject();
  v13 = sub_1D44FB120();
  *(_QWORD *)(v12 + 16) = v13;
  sub_1D44FB0B8(v13, 0);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v12;
  *(_QWORD *)(v14 + 24) = a1;
  swift_retain();
  sub_1D4366094(a2, a3 & 0x1010101, a4, a5 & 1, (uint64_t)sub_1D4366A78, v14, a6);
  swift_release();
  return swift_release();
}

uint64_t sub_1D4366A14()
{
  uint64_t result;

  result = sub_1D43B4BA4(0, 1);
  if ((result & 1) != 0)
    return swift_continuation_throwingResume();
  return result;
}

uint64_t sub_1D4366A54()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D4366A78()
{
  return sub_1D4366A14();
}

uint64_t sub_1D4366A80()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1D4366AA4(uint64_t a1)
{
  uint64_t v1;

  sub_1D43662E4(a1, *(void (**)(id))(v1 + 16));
}

uint64_t sub_1D4366AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D4366ABC()
{
  return swift_release();
}

uint64_t sub_1D4366AC8()
{
  uint64_t v0;

  sub_1D451A6EC();
  sub_1D451B958();
  sub_1D451A74C();
  v0 = sub_1D42CB230();
  swift_bridgeObjectRelease();
  return v0;
}

unint64_t sub_1D4366B34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D43678F8();
  sub_1D451A74C();
  v4 = sub_1D42CB230();
  return sub_1D4366DCC(a1, a2, v4);
}

unint64_t sub_1D4366B90(unsigned __int8 a1)
{
  uint64_t v2;

  sub_1D43678F8();
  sub_1D451B964();
  v2 = sub_1D42CB230();
  return sub_1D4366EAC(a1, v2);
}

unint64_t sub_1D4366BE8(uint64_t a1)
{
  uint64_t v2;

  sub_1D451A6EC();
  sub_1D451B958();
  sub_1D451A74C();
  v2 = sub_1D451B994();
  swift_bridgeObjectRelease();
  return sub_1D4366F4C(a1, v2);
}

unint64_t sub_1D4366C68(char a1)
{
  char v1;
  uint64_t v2;

  v1 = a1 & 1;
  sub_1D43487B4();
  return sub_1D43670C0(v1, v2);
}

unint64_t sub_1D4366C98()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D451B100();
  v0 = sub_1D43679A8();
  return sub_1D4367200(v0, v1);
}

unint64_t sub_1D4366CC4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D451B94C();
  return sub_1D4367318(a1, v2);
}

unint64_t sub_1D4366CF4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D4519D20();
  sub_1D4367710((unint64_t *)&qword_1EFE4A518);
  sub_1D451A608();
  v0 = sub_1D43679A8();
  return sub_1D43673B4(v0, v1);
}

unint64_t sub_1D4366D54()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D451B394();
  v0 = sub_1D43679A8();
  return sub_1D43674EC(v0, v1);
}

unint64_t sub_1D4366D80(uint64_t a1)
{
  uint64_t v2;

  sub_1D43678F8();
  sub_1D42D5BA8();
  v2 = sub_1D42CB230();
  return sub_1D43675B0(a1, v2);
}

unint64_t sub_1D4366DCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1D451B820() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1D451B820() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1D4366EAC(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1D4366F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1D451A6EC();
    v8 = v7;
    if (v6 == sub_1D451A6EC() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1D451B820();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1D451A6EC();
          v15 = v14;
          if (v13 == sub_1D451A6EC() && v15 == v16)
            break;
          v18 = sub_1D451B820();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1D43670C0(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v10;
  uint64_t v12;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v12 = ~v3;
    if ((a1 & 1) != 0)
      v5 = 0xD00000000000001BLL;
    else
      v5 = 0xD000000000000016;
    if ((a1 & 1) != 0)
      v6 = 0x80000001D4550100;
    else
      v6 = 0x80000001D45500E0;
    while (1)
    {
      v7 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0xD00000000000001BLL : 0xD000000000000016;
      v8 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0x80000001D4550100 : 0x80000001D45500E0;
      if (v7 == v5 && v8 == v6)
        break;
      v10 = sub_1D451B820();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
      {
        v4 = (v4 + 1) & v12;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_1D4367200(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_1D42CA5D0(0, (unint64_t *)&qword_1EFE47310);
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_1D451B10C();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_1D451B10C();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1D4367318(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1D43673B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_1D4519D20();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_1D4367710(&qword_1EFE4D460);
      v14 = sub_1D451A698();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_1D43674EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1D42D6F5C(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1D825CCDC](v9, a1);
      sub_1D42D6F98((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1D43675B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unsigned __int8 *v11;
  int v12;
  int v13;
  int v14;

  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = ~v4;
    v7 = *(_QWORD *)(a1 + 16);
    while (1)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * result);
      if (*(_QWORD *)(v8 + 16) == v7)
      {
        if (!v7 || v8 == a1)
          return result;
        if (*(unsigned __int8 *)(v8 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v7 == 1)
            return result;
          if (*(unsigned __int8 *)(v8 + 33) == *(unsigned __int8 *)(a1 + 33))
            break;
        }
      }
LABEL_12:
      result = (result + 1) & v6;
      if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) == 0)
        return result;
    }
    v9 = (unsigned __int8 *)(v8 + 34);
    v10 = v7 - 2;
    v11 = (unsigned __int8 *)(a1 + 34);
    while (v10)
    {
      v13 = *v9++;
      v12 = v13;
      v14 = *v11++;
      --v10;
      if (v12 != v14)
        goto LABEL_12;
    }
  }
  return result;
}

uint64_t sub_1D4367684()
{
  return swift_release();
}

uint64_t sub_1D436768C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D42B28FC(&qword_1EFE4A7A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D43676D4()
{
  unint64_t result;

  result = qword_1EFE4D450;
  if (!qword_1EFE4D450)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452ED3C, &type metadata for AutoBugCaptureUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4D450);
  }
  return result;
}

void sub_1D4367710(unint64_t *a1)
{
  uint64_t v2;

  if (!*a1)
  {
    sub_1D4519D20();
    v2 = sub_1D43679A8();
    atomic_store(MEMORY[0x1D825E41C](v2), a1);
  }
  sub_1D42B6E24();
}

id sub_1D4367748(id result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (result)
  {
    swift_retain();
    return a5;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AutoBugCaptureUtils.DomainError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D43677C4 + 4 * byte_1D452ECA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D43677F8 + 4 * byte_1D452ECA0[v4]))();
}

uint64_t sub_1D43677F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4367800(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4367808);
  return result;
}

uint64_t sub_1D4367814(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D436781CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D4367820(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4367828(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AutoBugCaptureUtils.DomainError()
{
  return &type metadata for AutoBugCaptureUtils.DomainError;
}

unint64_t sub_1D4367848()
{
  unint64_t result;

  result = qword_1EFE4D478;
  if (!qword_1EFE4D478)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452ED14, &type metadata for AutoBugCaptureUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4D478);
  }
  return result;
}

uint64_t sub_1D4367884()
{
  return sub_1D451B5C8();
}

uint64_t sub_1D43678C4(uint64_t a1, uint64_t a2)
{
  return sub_1D42B294C(a1, a2);
}

uint64_t sub_1D43678F8()
{
  return sub_1D451B958();
}

uint64_t sub_1D4367904()
{
  return swift_dynamicCast();
}

uint64_t sub_1D436790C()
{
  return swift_retain();
}

unint64_t sub_1D4367920(uint64_t a1, uint64_t a2)
{
  return sub_1D4366B34(a1, a2);
}

uint64_t sub_1D4367928()
{
  uint64_t v0;
  uint64_t v1;

  return *(_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * v0 + 8);
}

uint64_t sub_1D4367954()
{
  return sub_1D451A5A8();
}

uint64_t sub_1D4367964()
{
  _OWORD *v0;
  _OWORD *v1;
  uint64_t v2;

  sub_1D42B293C(v0, v1);
  sub_1D42B293C(v1, (_OWORD *)(v2 - 120));
  return v2 - 120;
}

uint64_t sub_1D436798C(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + 56) + 32 * a1;
}

uint64_t sub_1D436799C()
{
  return swift_release();
}

uint64_t sub_1D43679A8()
{
  uint64_t v0;

  return v0;
}

void sub_1D43679B4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + a1) |= v1;
}

_OWORD *sub_1D4367A2C(_OWORD *a1)
{
  _OWORD *v1;

  return sub_1D42B293C(a1, v1);
}

uint64_t sub_1D4367A68(int *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v4 = (uint64_t (*)(uint64_t))((char *)a1 + *a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 48) = v2;
  *v2 = v1;
  v2[1] = sub_1D4367AD0;
  return v4(v1 + 16);
}

uint64_t sub_1D4367AD0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1D42B8E20();
  *v2 = *v1;
  *(_QWORD *)(v3 + 56) = v0;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4367B20(int *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v4 = (uint64_t (*)(uint64_t))((char *)a1 + *a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1D42B85E4;
  return v4(v1 + 16);
}

uint64_t sub_1D4367B88()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  *(_QWORD *)(v1 + 24) = *v0;
  return sub_1D42E39F0();
}

uint64_t sub_1D4367BA0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _BYTE *v4;

  v1 = *(_QWORD **)(v0 + 16);
  if (v1[2])
  {
    *(_QWORD *)(v0 + 32) = v1[5];
    *(_QWORD *)(v0 + 40) = v1[3];
    swift_retain();
    sub_1D42E3CA4();
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v2;
    *v2 = v0;
    v2[1] = sub_1D4367C78;
    return sub_1D4367F6C();
  }
  else
  {
    sub_1D42B7F2C();
    swift_allocError();
    *v4 = 0;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1D4367C78(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 56) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 64) = a1;
  sub_1D42B8EC8();
  return swift_task_switch();
}

uint64_t sub_1D4367CE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 64);
  type metadata accessor for XPCProxyDecoder.UnkeyedContainer();
  v2 = sub_1D42B6F40();
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 0;
  swift_release();
  swift_release();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_1D4367D4C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4367D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  return swift_task_switch();
}

uint64_t sub_1D4367D9C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1D4368C18();
  v1 = (_QWORD *)sub_1D430C554();
  sub_1D4368C28(v1);
  sub_1D4368BF4();
  sub_1D42E3CA4();
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v2;
  v3 = sub_1D430C39C(v2, (uint64_t)sub_1D4367DFC);
  return sub_1D430C268(v3, v4);
}

uint64_t sub_1D4367DFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D4368BB8();
  if (!v1)
  {
    *(_QWORD *)(v3 + 120) = v0;
    *(_QWORD *)(v3 + 128) = v2;
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D4367E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  return sub_1D42E39F0();
}

uint64_t sub_1D4367E5C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1D4368C18();
  v1 = (_QWORD *)sub_1D430C554();
  sub_1D4368C28(v1);
  sub_1D4368BF4();
  sub_1D42E3CA4();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v2;
  v3 = sub_1D430C39C(v2, (uint64_t)sub_1D4367EB4);
  return sub_1D430C268(v3, v4);
}

uint64_t sub_1D4367EB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D4368BB8();
  if (!v1)
  {
    *(_QWORD *)(v3 + 120) = v0;
    *(_QWORD *)(v3 + 128) = v2;
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D4367F00()
{
  uint64_t v0;

  sub_1D430C648();
  sub_1D430C658();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 120));
}

uint64_t sub_1D4367F3C()
{
  uint64_t v0;

  sub_1D430C648();
  sub_1D430C658();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4367F6C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  v1 = (_QWORD *)sub_1D430C334();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_1D4367FE0;
  v2 = sub_1D4368BE0();
  return v4(v2);
}

uint64_t sub_1D4367FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v4 = *v3;
  *(_QWORD *)(v4 + 56) = a1;
  *(_QWORD *)(v4 + 64) = a2;
  swift_task_dealloc();
  if (v2)
    return sub_1D42B8DC0(*(uint64_t (**)(void))(v4 + 8));
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4368040()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t);

  swift_retain();
  v1 = (_QWORD *)sub_1D430C334();
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_1D43680A8;
  return v3(v0 + 16);
}

uint64_t sub_1D43680A8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;

  v2 = (_QWORD *)*v1;
  v4 = (_QWORD *)*v1;
  sub_1D430C44C(&v4);
  if (v0)
  {
    v2[11] = MEMORY[0x1E0DEE9D8];
    v2[12] = v0;
  }
  else
  {
    v2[10] = MEMORY[0x1E0DEE9D8];
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D436810C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 80);
  if (v1 == 1)
  {
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      v25 = MEMORY[0x1E0DEE9D8];
      sub_1D42C751C();
      v4 = v25;
      v5 = (uint64_t *)(v2 + 56);
      do
      {
        v6 = *(v5 - 3);
        v7 = *(v5 - 2);
        v8 = *(v5 - 1);
        v9 = *v5;
        sub_1D42B7FE4(v6);
        v10 = *(_QWORD *)(v25 + 16);
        if (v10 >= *(_QWORD *)(v25 + 24) >> 1)
          sub_1D42C751C();
        v5 += 4;
        *(_QWORD *)(v25 + 16) = v10 + 1;
        v11 = (_QWORD *)(v25 + 32 * v10);
        v11[4] = v6;
        v11[5] = v7;
        v11[6] = v8;
        v11[7] = v9;
        --v3;
      }
      while (v3);
      sub_1D4368C3C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D4368C3C();
      swift_bridgeObjectRelease();
      v4 = MEMORY[0x1E0DEE9D8];
    }
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 24);
    v13 = *(_QWORD *)(v0 + 32);
    v14 = *(_QWORD *)(v0 + 40);
    sub_1D430C254();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *(_QWORD *)(v0 + 80);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1D442FA80(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
      v16 = v22;
    }
    v18 = *(_QWORD *)(v16 + 16);
    v17 = *(_QWORD *)(v16 + 24);
    if (v18 >= v17 >> 1)
    {
      sub_1D442FA80(v17 > 1, v18 + 1, 1, v16);
      v16 = v23;
    }
    *(_QWORD *)(v0 + 104) = v16;
    *(_QWORD *)(v16 + 16) = v18 + 1;
    v19 = (_QWORD *)(v16 + 32 * v18);
    v19[4] = v1;
    v19[5] = v12;
    v19[6] = v13;
    v19[7] = v14;
    sub_1D43689C8(v1);
    v20 = (_QWORD *)sub_1D430C334();
    *(_QWORD *)(v0 + 112) = v20;
    *v20 = v0;
    v20[1] = sub_1D4368350;
    return v24(v0 + 16);
  }
}

uint64_t sub_1D436831C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1D4368C0C();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4368350()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v5;

  v5 = (_QWORD *)*v1;
  v2 = v5;
  sub_1D430C44C(&v5);
  v3 = v2[13];
  if (v0)
  {
    v2[11] = v3;
    v2[12] = v0;
  }
  else
  {
    v2[10] = v3;
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D43683B0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D43683CC()
{
  sub_1D43683B0();
  return swift_deallocClassInstance();
}

uint64_t sub_1D43683EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return sub_1D42E39F0();
}

void sub_1D43683FC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v2 < *(_QWORD *)(*(_QWORD *)(v1 + 16) + 16))
  {
    *(_QWORD *)(v1 + 24) = v2 + 1;
    v3 = sub_1D4368BE0();
    sub_1D42B7FE4(v3);
    v4 = sub_1D4368BE0();
    v5(v4);
    return;
  }
  __break(1u);
}

uint64_t sub_1D4368474()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D4368498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[10] = a4;
  v5[11] = v4;
  v5[8] = a1;
  v5[9] = a3;
  v5[12] = *(_QWORD *)(a3 - 8);
  v5[13] = swift_task_alloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43684E4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t (*v9)(_QWORD, _QWORD *);

  v1 = (_QWORD *)v0[11];
  v2 = v1[2];
  v3 = v1[3];
  v4 = v1[4];
  v5 = v1[5];
  type metadata accessor for XPCProxyDecoder();
  v6 = (_QWORD *)sub_1D430C554();
  v0[14] = v6;
  v6[2] = v2;
  v6[3] = v3;
  v6[4] = v4;
  v6[5] = v5;
  sub_1D430C254();
  v7 = (_QWORD *)sub_1D430C334();
  v0[15] = v7;
  *v7 = v0;
  v7[1] = sub_1D4368588;
  return v9(v0[13], v6);
}

uint64_t sub_1D4368588()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1D42B8E20();
  *v2 = *v1;
  *(_QWORD *)(v3 + 128) = v0;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43685D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  sub_1D430C648();
  sub_1D430C658();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v1, v3);
  swift_task_dealloc();
  return sub_1D42E39BC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4368634()
{
  uint64_t v0;

  sub_1D430C648();
  sub_1D430C658();
  swift_task_dealloc();
  return sub_1D42B8ED4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4368674()
{
  sub_1D430C658();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for XPCProxyDecoder()
{
  return objc_opt_self();
}

uint64_t sub_1D43686B4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for XPCProxyDecoder.KeyedContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for XPCProxyDecoder.KeyedContainer);
}

uint64_t type metadata accessor for XPCProxyDecoder.UnkeyedContainer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for XPCProxyDecoder.SingleValueContainer()
{
  return objc_opt_self();
}

uint64_t sub_1D4368744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1D42F92EC;
  return sub_1D4368498(a1, v8, a2, a3);
}

uint64_t sub_1D43687AC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1D43687C4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v1 = (_QWORD *)v0[2];
  v3 = v1[2];
  v2 = v1[3];
  v4 = v1[4];
  v5 = v1[5];
  type metadata accessor for XPCProxyDecoder.SingleValueContainer();
  v6 = (_QWORD *)sub_1D42B6F40();
  v0[3] = v6;
  v6[2] = v3;
  v6[3] = v2;
  v6[4] = v4;
  v6[5] = v5;
  sub_1D42B7FE4(v3);
  v9 = (uint64_t (*)(void))((char *)&dword_1EFE4D530 + dword_1EFE4D530);
  swift_retain();
  v7 = (_QWORD *)swift_task_alloc();
  v0[4] = v7;
  *v7 = v0;
  v7[1] = sub_1D4368868;
  return sub_1D42E39BC(v9);
}

uint64_t sub_1D4368868(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 40) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 48) = a2;
    *(_QWORD *)(v6 + 56) = a1;
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D43688D8()
{
  uint64_t v0;
  int8x16_t *v1;

  v1 = (int8x16_t *)sub_1D42B6F40();
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 48), *(int8x16_t *)(v0 + 48), 8uLL);
  sub_1D4368C0C();
  swift_release();
  return sub_1D430C534((uint64_t)&unk_1EFE4D540, (uint64_t)v1, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D436893C()
{
  uint64_t v0;

  swift_release();
  sub_1D4368C0C();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D436896C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_1EFE4E190 + dword_1EFE4E190);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1D4309A00;
  return v3();
}

uint64_t sub_1D43689C8(uint64_t result)
{
  if (result != 1)
    return sub_1D42B8CF0(result);
  return result;
}

uint64_t sub_1D43689D8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1D4368A20;
  return sub_1D436896C();
}

uint64_t sub_1D4368A20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1D42F9A68();
  return sub_1D430C534(a1, a2, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1D4368A58(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_1D4368AB0;
  return sub_1D4367A68(a2);
}

uint64_t sub_1D4368AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  v10 = *v5;
  v14 = *v5;
  v11 = *v5;
  sub_1D430C44C(&v14);
  if (!v4)
  {
    v12 = *(_QWORD **)(v10 + 16);
    *v12 = a1;
    v12[1] = a2;
    v12[2] = a3;
    v12[3] = a4;
  }
  return sub_1D42B8ED4(*(uint64_t (**)(void))(v11 + 8));
}

uint64_t sub_1D4368B1C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D4368B40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D42F92EC;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EFE4D538 + dword_1EFE4D538))(a1, v4);
}

uint64_t sub_1D4368BB8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 112) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1D4368BE0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4368BF4()
{
  return swift_retain();
}

uint64_t sub_1D4368C0C()
{
  return swift_release_n();
}

uint64_t sub_1D4368C18()
{
  return type metadata accessor for XPCProxyDecoder();
}

_QWORD *sub_1D4368C28(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 + 96) = result;
  result[2] = v5;
  result[3] = v2;
  result[4] = v4;
  result[5] = v1;
  return result;
}

uint64_t sub_1D4368C3C()
{
  return swift_release_n();
}

uint64_t sub_1D4368C48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;

  v2 = v1;
  v3 = a1;
  v4 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v32 = MEMORY[0x1E0DEE9D8];
    sub_1D451B49C();
    v6 = sub_1D4396B6C(v3);
    if (v6 < 0 || (v8 = v6, v6 >= 1 << *(_BYTE *)(v3 + 32)))
    {
LABEL_28:
      __break(1u);
    }
    else
    {
      v9 = v3 + 64;
      v27 = v3 + 64;
      v28 = v3;
      while ((*(_QWORD *)(v9 + 8 * (v8 >> 6)) & (1 << v8)) != 0)
      {
        if (*(_DWORD *)(v3 + 36) != v7)
          goto LABEL_30;
        v31 = v7;
        v29 = v4;
        v10 = (unint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v8);
        v11 = *v10;
        v12 = v10[1];
        swift_bridgeObjectRetain();
        sub_1D436933C(v11, v12);
        v14 = v13;
        v30 = v2;
        swift_bridgeObjectRetain();
        v15 = (_QWORD *)v14;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D442FC30(0, *(_QWORD *)(v14 + 16) + 1, 1, v14);
          v15 = v25;
        }
        v17 = v15[2];
        v16 = v15[3];
        if (v17 >= v16 >> 1)
        {
          sub_1D442FC30(v16 > 1, v17 + 1, 1, (uint64_t)v15);
          v15 = v26;
        }
        v15[2] = v17 + 1;
        v18 = (char *)(v15 + 4);
        *((_BYTE *)v15 + v17 + 32) = 0;
        swift_bridgeObjectRelease();
        v19 = v15[2];
        sub_1D42B28FC(&qword_1EFE4D580);
        swift_allocObject();
        v20 = sub_1D436FED4(v19);
        v21 = v20;
        if (v15[2])
        {
          v22 = *(char **)(v20 + 16);
          if (!v22)
            goto LABEL_35;
          if (*(_QWORD *)(v21 + 24) < v19)
            goto LABEL_34;
          if (v18 < &v22[v19] && &v18[v19] > v22)
            goto LABEL_36;
          memcpy(v22, v15 + 4, v19);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1D451B484();
        sub_1D451B4A8();
        sub_1D451B4B4();
        sub_1D451B490();
        v3 = v28;
        if ((uint64_t)v8 >= -(-1 << *(_BYTE *)(v28 + 32)))
          goto LABEL_31;
        v9 = v27;
        if ((*(_QWORD *)(v27 + 8 * (v8 >> 6)) & (1 << v8)) == 0)
          goto LABEL_32;
        if (*(_DWORD *)(v28 + 36) != v31)
          goto LABEL_33;
        v24 = sub_1D451B304();
        v4 = v29 - 1;
        if (v29 == 1)
          return v32;
        v8 = v24;
        v2 = v30;
        if ((v24 & 0x8000000000000000) == 0)
        {
          v7 = *(_DWORD *)(v28 + 36);
          if (v24 < 1 << *(_BYTE *)(v28 + 32))
            continue;
        }
        goto LABEL_28;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    result = sub_1D451B5D4();
    __break(1u);
  }
  return result;
}

uint64_t sub_1D4368F40(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v6;
  int v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v25;

  if (!*(_QWORD *)(a1 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9D8];
  }
  v25 = MEMORY[0x1E0DEE9D8];
  sub_1D42C7348();
  v6 = sub_1D4396C0C(a1);
  if (v6 < 0 || v6 >= 1 << *(_BYTE *)(a1 + 32))
  {
    __break(1u);
    goto LABEL_18;
  }
  if ((*(_QWORD *)(a1 + 64 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    __break(1u);
    __break(1u);
    __break(1u);
  }
  if (*(_DWORD *)(a1 + 36) != v7)
    goto LABEL_19;
  v8 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v6);
  v9 = *v8;
  v10 = v8[1];
  v11 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v6);
  v13 = *v11;
  v12 = v11[1];
  swift_bridgeObjectRetain();
  sub_1D42DD16C(v13, v12);
  swift_bridgeObjectRetain();
  sub_1D42DD16C(v13, v12);
  swift_bridgeObjectRelease();
  sub_1D42B5420(v13, v12);
  v14 = *(_QWORD *)(a2 + 16);
  sub_1D42DD16C(v13, v12);
  swift_bridgeObjectRetain();
  sub_1D42DD16C(v13, v12);
  if ((a3 & 1) != 0)
    v15 = MEMORY[0x1E0D1FBA8];
  else
    v15 = MEMORY[0x1E0D1FB98];
  v16 = sub_1D436C42C(v9, v10, v14, (uint64_t (*)(uint64_t, uint64_t, _QWORD *))v15);
  if (!v3)
  {
    v17 = v16;
    type metadata accessor for E5RTIOPort();
    *(_QWORD *)(swift_allocObject() + 16) = v17;
    v18 = e5rt_io_port_retain_tensor_desc();
    if (v18)
    {
      v20 = v18;
      sub_1D43705BC();
      swift_allocError();
      *(_DWORD *)v21 = v20;
      *(_BYTE *)(v21 + 4) = 0;
    }
    else
    {
      sub_1D43705F8();
      swift_allocError();
      *v22 = 0;
    }
    swift_willThrow();
    swift_release();
  }
  v19 = v25;
  sub_1D42B5420(v13, v12);
  sub_1D42B5420(v13, v12);
  swift_bridgeObjectRelease_n();
  sub_1D42B5420(v13, v12);
  swift_release();
  swift_release();
  return v19;
}

void sub_1D436933C(unint64_t a1, unint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v16[2];
  uint64_t v17;

  v3 = a1;
  v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_39;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = HIBYTE(a2) & 0xF;
  else
    v5 = a1 & 0xFFFFFFFFFFFFLL;
LABEL_5:
  if (v5)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1D42C77F4();
    if ((v5 & 0x8000000000000000) == 0)
    {
      v6 = (v3 >> 59) & 1;
      if ((a2 & 0x1000000000000000) == 0)
        LOBYTE(v6) = 1;
      v7 = 4 << v6;
      v8 = v3 & 0xFFFFFFFFFFFFLL;
      if ((a2 & 0x2000000000000000) != 0)
        v8 = v4;
      v14 = v3;
      v15 = v8;
      v9 = 15;
      while (1)
      {
        v10 = v9;
        if ((v9 & 0xC) == v7)
          v10 = sub_1D43D7838(v9, v3, a2);
        v11 = v10 >> 16;
        if (v10 >> 16 >= v15)
        {
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          v5 = sub_1D451A7AC();
          goto LABEL_5;
        }
        if ((a2 & 0x1000000000000000) != 0)
        {
          v3 = sub_1D451A7D0();
          if ((v3 & 0x80) != 0)
            goto LABEL_37;
        }
        else if ((a2 & 0x2000000000000000) != 0)
        {
          v16[0] = v3;
          v16[1] = a2 & 0xFFFFFFFFFFFFFFLL;
          v3 = *((unsigned __int8 *)v16 + v11);
          if ((v3 & 0x80) != 0)
            goto LABEL_37;
        }
        else
        {
          v12 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((v3 & 0x1000000000000000) == 0)
            v12 = sub_1D451B46C();
          v3 = *(unsigned __int8 *)(v12 + v11);
          if ((v3 & 0x80) != 0)
            goto LABEL_37;
        }
        v13 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D42C77F4();
          v13 = v17;
        }
        v4 = *(_QWORD *)(v13 + 16);
        if (v4 >= *(_QWORD *)(v13 + 24) >> 1)
        {
          sub_1D42C77F4();
          v13 = v17;
        }
        *(_QWORD *)(v13 + 16) = v4 + 1;
        *(_BYTE *)(v13 + v4 + 32) = v3;
        if ((v9 & 0xC) == v7)
        {
          v3 = v14;
          v9 = sub_1D43D7838(v9, v14, a2);
          if ((a2 & 0x1000000000000000) == 0)
          {
LABEL_30:
            v9 = (v9 & 0xFFFFFFFFFFFF0000) + 65540;
            goto LABEL_34;
          }
        }
        else
        {
          v3 = v14;
          if ((a2 & 0x1000000000000000) == 0)
            goto LABEL_30;
        }
        if (v15 <= v9 >> 16)
          goto LABEL_38;
        v9 = sub_1D451A7B8();
LABEL_34:
        if (!--v5)
          return;
      }
    }
    __break(1u);
  }
}

void sub_1D4369598(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = a1;
    v15 = MEMORY[0x1E0DEE9D8];
    sub_1D42C7828();
    v3 = sub_1D4396C0C(v2);
    if ((v3 & 0x8000000000000000) == 0)
    {
      v5 = v3;
      if (v3 < 1 << *(_BYTE *)(v2 + 32))
      {
        v6 = v4;
        v7 = v2 + 64;
        while ((*(_QWORD *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v6 != *(_DWORD *)(v2 + 36))
            goto LABEL_18;
          v14 = v1;
          v8 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v5);
          v9 = v2;
          v10 = *(_QWORD *)(v15 + 16);
          if (v10 >= *(_QWORD *)(v15 + 24) >> 1)
          {
            v13 = v7;
            sub_1D42C7828();
            v7 = v13;
          }
          *(_QWORD *)(v15 + 16) = v10 + 1;
          *(_QWORD *)(v15 + 8 * v10 + 32) = v8;
          if ((uint64_t)v5 >= -(-1 << *(_BYTE *)(v9 + 32)))
            goto LABEL_19;
          if ((*(_QWORD *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) == 0)
            goto LABEL_20;
          v2 = v9;
          if (v6 != *(_DWORD *)(v9 + 36))
            goto LABEL_21;
          v11 = v7;
          v12 = sub_1D451B304();
          v1 = v14 - 1;
          if (v14 == 1)
            return;
          v5 = v12;
          if ((v12 & 0x8000000000000000) == 0)
          {
            v7 = v11;
            v6 = *(_DWORD *)(v2 + 36);
            if (v12 < 1 << *(_BYTE *)(v2 + 32))
              continue;
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

uint64_t sub_1D436974C(uint64_t a1, void (*a2)(_QWORD *, uint64_t *, _QWORD *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  _QWORD v16[2];
  uint64_t v17;
  _QWORD v18[2];
  uint64_t v19;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 16);
  v19 = MEMORY[0x1E0DEE9D8];
  sub_1D42C72E0();
  v6 = v19;
  if (v5)
  {
    swift_bridgeObjectRetain();
    v7 = (uint64_t *)(a1 + 40);
    while (1)
    {
      v8 = *v7;
      v16[0] = *(v7 - 1);
      v16[1] = v8;
      swift_bridgeObjectRetain();
      a2(v18, &v17, v16);
      if (v3)
        break;
      swift_bridgeObjectRelease();
      v9 = v18[0];
      v10 = v18[1];
      v11 = v17;
      v19 = v6;
      v12 = *(_QWORD *)(v6 + 16);
      if (v12 >= *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_1D42C72E0();
        v6 = v19;
      }
      v7 += 2;
      *(_QWORD *)(v6 + 16) = v12 + 1;
      v13 = (_QWORD *)(v6 + 24 * v12);
      v13[4] = v9;
      v13[5] = v10;
      v13[6] = v11;
      --v5;
      v3 = 0;
      if (!v5)
        goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_9:
    swift_bridgeObjectRelease();
  }
  return v6;
}

void sub_1D43698A8(uint64_t a1, void (*a2)(uint64_t *, __int128 *, uint64_t *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  unint64_t v38;
  uint64_t v39;
  int64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  _QWORD v53[6];
  uint64_t v54;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 16);
  v54 = MEMORY[0x1E0DEE9D8];
  sub_1D42C7314();
  v6 = v54;
  sub_1D43F6E7C(v53, a1);
  v46 = v53[0];
  v7 = v53[3];
  v8 = v53[4];
  v43 = v53[1];
  v44 = (unint64_t)(v53[2] + 64) >> 6;
  if (v5)
  {
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      if (v8)
      {
        v10 = v6;
        v11 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v12 = v11 | (v7 << 6);
      }
      else
      {
        if (__OFADD__(v7++, 1))
        {
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
          goto LABEL_59;
        }
        if (v7 >= v44)
          goto LABEL_57;
        v14 = *(_QWORD *)(v43 + 8 * v7);
        if (!v14)
        {
          v15 = v7 + 1;
          if (v7 + 1 >= v44)
            goto LABEL_58;
          v14 = *(_QWORD *)(v43 + 8 * v15);
          if (!v14)
          {
            v15 = v7 + 2;
            if (v7 + 2 >= v44)
              goto LABEL_61;
            v14 = *(_QWORD *)(v43 + 8 * v15);
            if (!v14)
            {
              v15 = v7 + 3;
              if (v7 + 3 >= v44)
                goto LABEL_62;
              v14 = *(_QWORD *)(v43 + 8 * v15);
              if (!v14)
              {
                v15 = v7 + 4;
                if (v7 + 4 >= v44)
                  goto LABEL_63;
                v14 = *(_QWORD *)(v43 + 8 * v15);
                if (!v14)
                {
                  while (1)
                  {
                    v7 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      break;
                    if (v7 >= v44)
                      goto LABEL_60;
                    v14 = *(_QWORD *)(v43 + 8 * v7);
                    ++v15;
                    if (v14)
                      goto LABEL_17;
                  }
LABEL_59:
                  __break(1u);
LABEL_60:
                  __break(1u);
LABEL_61:
                  __break(1u);
LABEL_62:
                  __break(1u);
LABEL_63:
                  __break(1u);
                  return;
                }
              }
            }
          }
          v7 = v15;
        }
LABEL_17:
        v10 = v6;
        v8 = (v14 - 1) & v14;
        v12 = __clz(__rbit64(v14)) + (v7 << 6);
      }
      v16 = (uint64_t *)(*(_QWORD *)(v46 + 48) + 16 * v12);
      v17 = v16[1];
      v18 = *(_QWORD *)(*(_QWORD *)(v46 + 56) + 8 * v12);
      v47 = *v16;
      v48 = v17;
      v49 = v18;
      swift_bridgeObjectRetain();
      swift_retain();
      a2(&v50, &v52, &v47);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        goto LABEL_54;
      }
      v19 = v7;
      swift_release();
      swift_bridgeObjectRelease();
      v21 = v50;
      v20 = v51;
      v22 = v52;
      v6 = v10;
      v54 = v10;
      v23 = *(_QWORD *)(v10 + 16);
      if (v23 >= *(_QWORD *)(v6 + 24) >> 1)
      {
        v41 = v52;
        sub_1D42C7314();
        v22 = v41;
        v6 = v54;
      }
      ++v9;
      *(_QWORD *)(v6 + 16) = v23 + 1;
      v24 = v6 + 32 * v23;
      *(_QWORD *)(v24 + 32) = v21;
      *(_QWORD *)(v24 + 40) = v20;
      *(_OWORD *)(v24 + 48) = v22;
      v7 = v19;
      v3 = 0;
      if (v9 == v5)
        goto LABEL_28;
    }
  }
  swift_bridgeObjectRetain();
LABEL_28:
  if (!v8)
    goto LABEL_30;
LABEL_29:
  v25 = v6;
  v26 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  v27 = v26 | (v7 << 6);
  while (1)
  {
    v31 = (uint64_t *)(*(_QWORD *)(v46 + 48) + 16 * v27);
    v32 = v31[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v46 + 56) + 8 * v27);
    v47 = *v31;
    v48 = v32;
    v49 = v33;
    swift_bridgeObjectRetain();
    swift_retain();
    a2(&v50, &v52, &v47);
    if (v3)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_54;
    }
    v34 = v7;
    swift_release();
    swift_bridgeObjectRelease();
    v35 = v50;
    v36 = v51;
    v37 = v52;
    v6 = v25;
    v54 = v25;
    v38 = *(_QWORD *)(v25 + 16);
    if (v38 >= *(_QWORD *)(v6 + 24) >> 1)
    {
      v42 = v52;
      sub_1D42C7314();
      v37 = v42;
      v6 = v54;
    }
    *(_QWORD *)(v6 + 16) = v38 + 1;
    v39 = v6 + 32 * v38;
    *(_QWORD *)(v39 + 32) = v35;
    *(_QWORD *)(v39 + 40) = v36;
    *(_OWORD *)(v39 + 48) = v37;
    v7 = v34;
    v3 = 0;
    if (v8)
      goto LABEL_29;
LABEL_30:
    v28 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_56;
    }
    if (v28 >= v44)
      goto LABEL_54;
    v29 = *(_QWORD *)(v43 + 8 * v28);
    if (!v29)
    {
      v30 = v7 + 2;
      if (v7 + 2 >= v44)
        goto LABEL_54;
      v29 = *(_QWORD *)(v43 + 8 * v30);
      if (v29)
        goto LABEL_39;
      v30 = v7 + 3;
      if (v7 + 3 >= v44)
        goto LABEL_54;
      v29 = *(_QWORD *)(v43 + 8 * v30);
      if (v29)
        goto LABEL_39;
      v30 = v7 + 4;
      if (v7 + 4 >= v44)
        goto LABEL_54;
      v29 = *(_QWORD *)(v43 + 8 * v30);
      if (v29)
      {
LABEL_39:
        v28 = v30;
        goto LABEL_40;
      }
      v28 = v7 + 5;
      if (v7 + 5 >= v44)
        goto LABEL_54;
      v29 = *(_QWORD *)(v43 + 8 * v28);
      if (!v29)
        break;
    }
LABEL_40:
    v25 = v6;
    v8 = (v29 - 1) & v29;
    v27 = __clz(__rbit64(v29)) + (v28 << 6);
    v7 = v28;
  }
  v40 = v7 + 6;
  while (v40 < v44)
  {
    v29 = *(_QWORD *)(v43 + 8 * v40++);
    if (v29)
    {
      v28 = v40 - 1;
      goto LABEL_40;
    }
  }
LABEL_54:
  swift_release();
}

void sub_1D4369D88(uint64_t a1, void (*a2)(uint64_t *, __int128 *, uint64_t *))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  unint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  _QWORD v57[6];
  uint64_t v58;

  v4 = *(_QWORD *)(a1 + 16);
  v58 = MEMORY[0x1E0DEE9D8];
  sub_1D42C7314();
  v5 = v58;
  sub_1D43F6E7C(v57, a1);
  v47 = v57[0];
  v6 = v57[3];
  v7 = v57[4];
  v44 = v57[1];
  v45 = (unint64_t)(v57[2] + 64) >> 6;
  v43 = v4;
  if (!v4)
  {
    swift_bridgeObjectRetain();
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v6 << 6);
      goto LABEL_18;
    }
    if (__OFADD__(v6++, 1))
      goto LABEL_55;
    if (v6 >= v45)
    {
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    v12 = *(_QWORD *)(v44 + 8 * v6);
    if (!v12)
      break;
LABEL_17:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v6 << 6);
LABEL_18:
    v14 = (uint64_t *)(*(_QWORD *)(v47 + 48) + 16 * v10);
    v15 = v14[1];
    v16 = (uint64_t *)(*(_QWORD *)(v47 + 56) + 16 * v10);
    v17 = *v16;
    v18 = v16[1];
    v50 = *v14;
    v51 = v15;
    v52 = v17;
    v53 = v18;
    swift_bridgeObjectRetain();
    sub_1D42DD16C(v17, v18);
    a2(&v54, &v56, &v50);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      sub_1D42B5420(v17, v18);
      return;
    }
    v19 = v6;
    swift_bridgeObjectRelease();
    sub_1D42B5420(v17, v18);
    v20 = v54;
    v21 = v55;
    v22 = v56;
    v58 = v5;
    v23 = *(_QWORD *)(v5 + 16);
    if (v23 >= *(_QWORD *)(v5 + 24) >> 1)
    {
      v48 = v56;
      sub_1D42C7314();
      v22 = v48;
      v5 = v58;
    }
    ++v8;
    *(_QWORD *)(v5 + 16) = v23 + 1;
    v24 = v5 + 32 * v23;
    *(_QWORD *)(v24 + 32) = v20;
    *(_QWORD *)(v24 + 40) = v21;
    *(_OWORD *)(v24 + 48) = v22;
    v6 = v19;
    if (v8 == v43)
    {
      while (1)
      {
LABEL_28:
        if (v7)
        {
          v25 = __clz(__rbit64(v7));
          v7 &= v7 - 1;
          v26 = v25 | (v6 << 6);
        }
        else
        {
          v27 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
LABEL_55:
            __break(1u);
            goto LABEL_56;
          }
          if (v27 >= v45)
            goto LABEL_53;
          v28 = *(_QWORD *)(v44 + 8 * v27);
          if (!v28)
          {
            v29 = v6 + 2;
            if (v6 + 2 >= v45)
              goto LABEL_53;
            v28 = *(_QWORD *)(v44 + 8 * v29);
            if (v28)
              goto LABEL_39;
            v29 = v6 + 3;
            if (v6 + 3 >= v45)
              goto LABEL_53;
            v28 = *(_QWORD *)(v44 + 8 * v29);
            if (v28)
              goto LABEL_39;
            v29 = v6 + 4;
            if (v6 + 4 >= v45)
              goto LABEL_53;
            v28 = *(_QWORD *)(v44 + 8 * v29);
            if (v28)
            {
LABEL_39:
              v27 = v29;
            }
            else
            {
              v27 = v6 + 5;
              if (v6 + 5 >= v45)
                goto LABEL_53;
              v28 = *(_QWORD *)(v44 + 8 * v27);
              if (!v28)
              {
                v42 = v6 + 6;
                while (v42 < v45)
                {
                  v28 = *(_QWORD *)(v44 + 8 * v42++);
                  if (v28)
                  {
                    v27 = v42 - 1;
                    goto LABEL_40;
                  }
                }
LABEL_53:
                swift_release();
                return;
              }
            }
          }
LABEL_40:
          v7 = (v28 - 1) & v28;
          v26 = __clz(__rbit64(v28)) + (v27 << 6);
          v6 = v27;
        }
        v30 = (uint64_t *)(*(_QWORD *)(v47 + 48) + 16 * v26);
        v31 = *v30;
        v32 = v30[1];
        v33 = (uint64_t *)(*(_QWORD *)(v47 + 56) + 16 * v26);
        v35 = *v33;
        v34 = v33[1];
        v50 = v31;
        v51 = v32;
        v52 = v35;
        v53 = v34;
        swift_bridgeObjectRetain();
        sub_1D42DD16C(v35, v34);
        a2(&v54, &v56, &v50);
        if (v2)
        {
          swift_bridgeObjectRelease();
          sub_1D42B5420(v35, v34);
          swift_release();
          swift_release();
          return;
        }
        v36 = v6;
        swift_bridgeObjectRelease();
        sub_1D42B5420(v35, v34);
        v37 = v54;
        v38 = v55;
        v39 = v56;
        v58 = v5;
        v40 = *(_QWORD *)(v5 + 16);
        if (v40 >= *(_QWORD *)(v5 + 24) >> 1)
        {
          v49 = v56;
          sub_1D42C7314();
          v39 = v49;
          v5 = v58;
        }
        *(_QWORD *)(v5 + 16) = v40 + 1;
        v41 = v5 + 32 * v40;
        *(_QWORD *)(v41 + 32) = v37;
        *(_QWORD *)(v41 + 40) = v38;
        *(_OWORD *)(v41 + 48) = v39;
        v6 = v36;
      }
    }
  }
  v13 = v6 + 1;
  if (v6 + 1 >= v45)
    goto LABEL_57;
  v12 = *(_QWORD *)(v44 + 8 * v13);
  if (v12)
    goto LABEL_16;
  v13 = v6 + 2;
  if (v6 + 2 >= v45)
    goto LABEL_60;
  v12 = *(_QWORD *)(v44 + 8 * v13);
  if (v12)
    goto LABEL_16;
  v13 = v6 + 3;
  if (v6 + 3 >= v45)
    goto LABEL_61;
  v12 = *(_QWORD *)(v44 + 8 * v13);
  if (v12)
    goto LABEL_16;
  v13 = v6 + 4;
  if (v6 + 4 >= v45)
    goto LABEL_62;
  v12 = *(_QWORD *)(v44 + 8 * v13);
  if (v12)
  {
LABEL_16:
    v6 = v13;
    goto LABEL_17;
  }
  while (1)
  {
    v6 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v6 >= v45)
      goto LABEL_59;
    v12 = *(_QWORD *)(v44 + 8 * v6);
    ++v13;
    if (v12)
      goto LABEL_17;
  }
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
}

void sub_1D436A26C(uint64_t a1, void (*a2)(uint64_t *, uint64_t *, uint64_t *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[5];
  uint64_t v49;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 16);
  v49 = MEMORY[0x1E0DEE9D8];
  sub_1D42C7A30();
  v6 = v49;
  sub_1D43F6E7C(v48, a1);
  v41 = v48[0];
  v7 = v48[3];
  v8 = v48[4];
  v38 = v48[1];
  v39 = (unint64_t)(v48[2] + 64) >> 6;
  v37 = v5;
  if (!v5)
  {
    swift_bridgeObjectRetain();
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v7 << 6);
      goto LABEL_18;
    }
    if (__OFADD__(v7++, 1))
      goto LABEL_55;
    if (v7 >= v39)
    {
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    v13 = *(_QWORD *)(v38 + 8 * v7);
    if (!v13)
      break;
LABEL_17:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v7 << 6);
LABEL_18:
    v15 = (uint64_t *)(*(_QWORD *)(v41 + 48) + 16 * v11);
    v16 = v15[1];
    v17 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v11);
    v42 = *v15;
    v43 = v16;
    v44 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(&v46, &v45, &v42);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19 = v46;
    v18 = v47;
    v20 = v45;
    v49 = v6;
    v21 = *(_QWORD *)(v6 + 16);
    if (v21 >= *(_QWORD *)(v6 + 24) >> 1)
    {
      sub_1D42C7A30();
      v6 = v49;
    }
    ++v9;
    *(_QWORD *)(v6 + 16) = v21 + 1;
    v22 = (_QWORD *)(v6 + 24 * v21);
    v22[4] = v19;
    v22[5] = v18;
    v22[6] = v20;
    v3 = 0;
    if (v9 == v37)
    {
      while (1)
      {
LABEL_28:
        if (v8)
        {
          v23 = __clz(__rbit64(v8));
          v8 &= v8 - 1;
          v24 = v23 | (v7 << 6);
        }
        else
        {
          v25 = v7 + 1;
          if (__OFADD__(v7, 1))
          {
            __break(1u);
LABEL_55:
            __break(1u);
            goto LABEL_56;
          }
          if (v25 >= v39)
            goto LABEL_53;
          v26 = *(_QWORD *)(v38 + 8 * v25);
          if (!v26)
          {
            v27 = v7 + 2;
            if (v7 + 2 >= v39)
              goto LABEL_53;
            v26 = *(_QWORD *)(v38 + 8 * v27);
            if (v26)
              goto LABEL_39;
            v27 = v7 + 3;
            if (v7 + 3 >= v39)
              goto LABEL_53;
            v26 = *(_QWORD *)(v38 + 8 * v27);
            if (v26)
              goto LABEL_39;
            v27 = v7 + 4;
            if (v7 + 4 >= v39)
              goto LABEL_53;
            v26 = *(_QWORD *)(v38 + 8 * v27);
            if (v26)
            {
LABEL_39:
              v25 = v27;
            }
            else
            {
              v25 = v7 + 5;
              if (v7 + 5 >= v39)
                goto LABEL_53;
              v26 = *(_QWORD *)(v38 + 8 * v25);
              if (!v26)
              {
                v36 = v7 + 6;
                while (v36 < v39)
                {
                  v26 = *(_QWORD *)(v38 + 8 * v36++);
                  if (v26)
                  {
                    v25 = v36 - 1;
                    goto LABEL_40;
                  }
                }
LABEL_53:
                swift_release();
                return;
              }
            }
          }
LABEL_40:
          v8 = (v26 - 1) & v26;
          v24 = __clz(__rbit64(v26)) + (v25 << 6);
          v7 = v25;
        }
        v28 = (uint64_t *)(*(_QWORD *)(v41 + 48) + 16 * v24);
        v29 = v28[1];
        v30 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v24);
        v42 = *v28;
        v43 = v29;
        v44 = v30;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        a2(&v46, &v45, &v42);
        if (v3)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          return;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v31 = v46;
        v32 = v47;
        v33 = v45;
        v49 = v6;
        v34 = *(_QWORD *)(v6 + 16);
        if (v34 >= *(_QWORD *)(v6 + 24) >> 1)
        {
          sub_1D42C7A30();
          v6 = v49;
        }
        *(_QWORD *)(v6 + 16) = v34 + 1;
        v35 = (_QWORD *)(v6 + 24 * v34);
        v35[4] = v31;
        v35[5] = v32;
        v35[6] = v33;
        v3 = 0;
      }
    }
  }
  v14 = v7 + 1;
  if (v7 + 1 >= v39)
    goto LABEL_57;
  v13 = *(_QWORD *)(v38 + 8 * v14);
  if (v13)
    goto LABEL_16;
  v14 = v7 + 2;
  if (v7 + 2 >= v39)
    goto LABEL_60;
  v13 = *(_QWORD *)(v38 + 8 * v14);
  if (v13)
    goto LABEL_16;
  v14 = v7 + 3;
  if (v7 + 3 >= v39)
    goto LABEL_61;
  v13 = *(_QWORD *)(v38 + 8 * v14);
  if (v13)
    goto LABEL_16;
  v14 = v7 + 4;
  if (v7 + 4 >= v39)
    goto LABEL_62;
  v13 = *(_QWORD *)(v38 + 8 * v14);
  if (v13)
  {
LABEL_16:
    v7 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    v7 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v7 >= v39)
      goto LABEL_59;
    v13 = *(_QWORD *)(v38 + 8 * v7);
    ++v14;
    if (v13)
      goto LABEL_17;
  }
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
}

void sub_1D436A71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D436CCA0(*(_QWORD *)(a2 + 16), MEMORY[0x1E0D1FB30]);
  if (!v3)
  {
    v8 = sub_1D436C18C(v7);
    v9 = sub_1D436FCBC(a2, (uint64_t)v8);
    swift_bridgeObjectRelease();
    v10 = v9;
    sub_1D436F5E8(a1, a2, a3, &v10);
  }
}

uint64_t sub_1D436A7EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D436BB64();
  if (!v5)
  {
    v13 = v12;
    type metadata accessor for E5RTExecutionStream();
    v6 = sub_1D43211DC();
    *(_QWORD *)(v6 + 16) = v13;
    v14 = sub_1D436FE2C(1852399981, 0xE400000000000000, a1, a2, a4, a5);
    if (a3)
      sub_1D436C54C(a3);
    sub_1D436D938(v14);
    sub_1D436C6B0(v14, MEMORY[0x1E0D1FA98]);
  }
  return v6;
}

uint64_t sub_1D436A8F4()
{
  uint64_t v0;
  uint64_t v1;

  if (e5rt_tensor_desc_dtype_get_num_components())
  {
    sub_1D4371068();
    v0 = sub_1D42B6D0C();
    sub_1D4371024(v0, v1);
  }
  return 0;
}

uint64_t sub_1D436A988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_1D4519BC4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  sub_1D42D7108();
  sub_1D4519AC8();
  v3 = sub_1D4519B88();
  sub_1D4307058(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  return v3;
}

uint64_t sub_1D436AA18()
{
  return sub_1D436A988();
}

uint64_t sub_1D436AA2C()
{
  return sub_1D451B97C();
}

BOOL sub_1D436AA54(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1D436AA68(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x61725765756C6176 && a2 == 0xEC00000064657070)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1D451B820();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1D436AB04()
{
  return 0x61725765756C6176;
}

void sub_1D436AB24()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_1D42BE910();
  v2 = v1;
  v3 = sub_1D42B28FC(&qword_1EFE4D6D0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1D42F1ED4();
  sub_1D42B5528(v2, v2[3]);
  sub_1D4370E2C();
  sub_1D451BA24();
  sub_1D42B28FC(&qword_1EFE4D6C0);
  sub_1D4370E68(&qword_1EFE4D6D8, MEMORY[0x1E0DEE100], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
  sub_1D451B760();
  sub_1D4307058(v0, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_1D42BE844();
}

void sub_1D436AC14()
{
  sub_1D42BE9A8();
  sub_1D451B97C();
  sub_1D42CB230();
  sub_1D42BE978();
}

void sub_1D436AC44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _DWORD *v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D42BE910();
  v14 = v13;
  v16 = v15;
  v17 = sub_1D42B28FC(&qword_1EFE4D6B0);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  sub_1D42F1ED4();
  sub_1D42B5528(v14, v14[3]);
  sub_1D4370E2C();
  sub_1D451BA0C();
  if (!v11)
  {
    sub_1D42B28FC(&qword_1EFE4D6C0);
    sub_1D4370E68(&qword_1EFE4D6C8, MEMORY[0x1E0DEE128], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
    sub_1D451B688();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v12, v17);
    *v16 = a11;
  }
  sub_1D42B5400((uint64_t)v14);
  sub_1D42BE844();
}

uint64_t sub_1D436AD5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D436AA68(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D436AD84()
{
  sub_1D4370E2C();
  return sub_1D451BA3C();
}

uint64_t sub_1D436ADAC()
{
  sub_1D4370E2C();
  return sub_1D451BA48();
}

uint64_t sub_1D436ADDC()
{
  sub_1D451B958();
  sub_1D451B97C();
  return sub_1D451B994();
}

void sub_1D436AE1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  sub_1D436AC44(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SHIDWORD(vars8));
}

void sub_1D436AE30()
{
  sub_1D436AB24();
}

uint64_t sub_1D436AE48(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_1D436AF04();
  v3 = *(_QWORD *)(result + 16);
  if (!v3)
    goto LABEL_9;
  if (*(_DWORD *)(result + 32) == (_DWORD)a1)
  {
    a1 = *(unsigned __int8 *)(result + 36);
LABEL_11:
    swift_bridgeObjectRelease();
    return a1;
  }
  if (v3 == 1)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    sub_1D43705BC();
    sub_1D42B6D0C();
    *(_DWORD *)v7 = 5;
    *(_BYTE *)(v7 + 4) = 1;
    sub_1D4312028();
    return a1;
  }
  v4 = (unsigned __int8 *)(result + 44);
  v5 = 1;
  while (1)
  {
    v6 = v5 + 1;
    if (__OFADD__(v5, 1))
      break;
    if (*((_DWORD *)v4 - 1) == (_DWORD)a1)
    {
      a1 = *v4;
      goto LABEL_11;
    }
    v4 += 8;
    ++v5;
    if (v6 == v3)
      goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D436AF04()
{
  uint64_t v0;
  char *v1;
  uint64_t result;
  int v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = 5;
  v7 = MEMORY[0x1E0DEE9D8];
  sub_1D42C74B4();
  v1 = &byte_1E97AC158;
  result = v7;
  do
  {
    v4 = *v1++;
    v3 = v4;
    v8 = result;
    v5 = *(_QWORD *)(result + 16);
    if (v5 >= *(_QWORD *)(result + 24) >> 1)
    {
      sub_1D42C74B4();
      result = v8;
    }
    *(_QWORD *)(result + 16) = v5 + 1;
    v6 = result + 8 * v5;
    *(_DWORD *)(v6 + 32) = v3;
    *(_BYTE *)(v6 + 36) = v3;
    --v0;
  }
  while (v0);
  return result;
}

uint64_t sub_1D436AFC0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 1953393013 && a2 == 0xE400000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 7630441 && a2 == 0xE300000000000000;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6D726F6E75 && a2 == 0xE500000000000000;
      if (v7 || (sub_1D451B820() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6D726F6E73 && a2 == 0xE500000000000000;
        if (v8 || (sub_1D451B820() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x74616F6C66 && a2 == 0xE500000000000000)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v10 = sub_1D451B820();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_1D436B188(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D436B1B4 + 4 * byte_1D452EE40[a1]))(1953393013, 0xE400000000000000);
}

uint64_t sub_1D436B1B4()
{
  return 7630441;
}

uint64_t sub_1D436B1C4()
{
  return 0x6D726F6E75;
}

uint64_t sub_1D436B1DC()
{
  return 0x6D726F6E73;
}

uint64_t sub_1D436B1F0()
{
  return 0x74616F6C66;
}

void sub_1D436B204()
{
  char v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  sub_1D42BE910();
  v11 = v0;
  v2 = v1;
  sub_1D42B28FC(&qword_1EFE4D610);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v3);
  sub_1D4321160(v4, v10);
  sub_1D42B28FC(&qword_1EFE4D618);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE4D620);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v6);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE4D628);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42CB210();
  v8 = sub_1D42B28FC(&qword_1EFE4D630);
  MEMORY[0x1E0C80A78](v8);
  sub_1D42CB210();
  sub_1D42B28FC(&qword_1EFE4D638);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  sub_1D42D7108();
  sub_1D42B5528(v2, v2[3]);
  sub_1D437081C();
  sub_1D451BA24();
  __asm { BR              X10 }
}

void sub_1D436B394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 - 69) = 0;
  sub_1D4370948();
  sub_1D4371054();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v3);
  sub_1D4307058(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 88) + 8));
  sub_1D42BE844();
}

unint64_t sub_1D436B48C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;

  sub_1D42BE910();
  v2 = v1;
  sub_1D42B28FC(&qword_1EFE4D5B0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v3);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE4D5B8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE4D5C0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D4321160(v6, v25);
  sub_1D42B28FC(&qword_1EFE4D5C8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42BE768();
  v8 = sub_1D42B28FC(&qword_1EFE4D5D0);
  MEMORY[0x1E0C80A78](v8);
  sub_1D42CB210();
  v9 = sub_1D42B28FC(&qword_1EFE4D5D8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  sub_1D42CB210();
  v13 = v12 - v11;
  v14 = v2[4];
  sub_1D42B5528(v2, v2[3]);
  sub_1D437081C();
  sub_1D451BA0C();
  if (!v0)
  {
    v26 = v13;
    v15 = sub_1D451B6D0();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = *(unsigned __int8 *)(v15 + 32);
      sub_1D43B7948(1, v16, v15, v15 + 32, 0, (2 * v16) | 1);
      v19 = v18;
      v14 = v20;
      swift_bridgeObjectRelease();
      if (v19 == v14 >> 1)
        __asm { BR              X9 }
    }
    v21 = sub_1D451B460();
    sub_1D42B6D0C();
    v23 = v22;
    sub_1D42B28FC(&qword_1EFE49ED0);
    *v23 = &unk_1E97AC170;
    sub_1D451B61C();
    sub_1D4371034();
    sub_1D451B454();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x1E0DEC450], v21);
    swift_willThrow();
    sub_1D4371170();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v26, v9);
  }
  sub_1D42B5400((uint64_t)v2);
  return v14;
}

void sub_1D436B7D0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D4371178();
  v1 = sub_1D4371040();
  if (v0)
  {
    sub_1D4371170(v1);
    sub_1D43710C0();
    JUMPOUT(0x1D436B7A4);
  }
  JUMPOUT(0x1D436B8B4);
}

void sub_1D436B800()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D4371128();
  v1 = sub_1D4371040();
  if (!v0)
    JUMPOUT(0x1D436B82CLL);
  sub_1D4371170(v1);
  sub_1D43710C0();
  JUMPOUT(0x1D436B7A4);
}

void sub_1D436B838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1D437111C();
  v3 = sub_1D4371040();
  if (!v0)
  {
    v4 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 160) + 8))(v1, *(_QWORD *)(v2 - 152));
    sub_1D4371170(v4);
    sub_1D43710C0();
    sub_1D42B5400(*(_QWORD *)(v2 - 96));
    JUMPOUT(0x1D436B7A8);
  }
  sub_1D4371170(v3);
  sub_1D43710C0();
  JUMPOUT(0x1D436B7A4);
}

void sub_1D436B86C()
{
  uint64_t v0;

  sub_1D4371110();
  sub_1D4371040();
  if (v0)
    JUMPOUT(0x1D436B894);
  JUMPOUT(0x1D436B8B4);
}

uint64_t sub_1D436B8D4()
{
  unsigned __int8 *v0;

  return sub_1D436B188(*v0);
}

uint64_t sub_1D436B8DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D436AFC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D436B900()
{
  sub_1D437081C();
  return sub_1D451BA3C();
}

uint64_t sub_1D436B928()
{
  sub_1D437081C();
  return sub_1D451BA48();
}

uint64_t sub_1D436B950()
{
  sub_1D4370858();
  return sub_1D451BA3C();
}

uint64_t sub_1D436B978()
{
  sub_1D4370858();
  return sub_1D451BA48();
}

uint64_t sub_1D436B9A0()
{
  sub_1D437090C();
  return sub_1D451BA3C();
}

uint64_t sub_1D436B9C8()
{
  sub_1D437090C();
  return sub_1D451BA48();
}

uint64_t sub_1D436B9F0()
{
  sub_1D4370894();
  return sub_1D451BA3C();
}

uint64_t sub_1D436BA18()
{
  sub_1D4370894();
  return sub_1D451BA48();
}

uint64_t sub_1D436BA40()
{
  sub_1D4370948();
  return sub_1D451BA3C();
}

uint64_t sub_1D436BA68()
{
  sub_1D4370948();
  return sub_1D451BA48();
}

uint64_t sub_1D436BA90()
{
  sub_1D43708D0();
  return sub_1D451BA3C();
}

uint64_t sub_1D436BAB8()
{
  sub_1D43708D0();
  return sub_1D451BA48();
}

void sub_1D436BAE0()
{
  sub_1D451B958();
  sub_1D451B964();
  sub_1D42CB230();
  sub_1D42BE978();
}

unint64_t sub_1D436BB14@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = sub_1D436B48C();
  if (!v1)
    *a1 = result;
  return result;
}

void sub_1D436BB3C()
{
  sub_1D436B204();
}

void sub_1D436BB54(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E97AC138;
}

void sub_1D436BB64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;

  if (e5rt_execution_stream_create())
  {
    sub_1D4371068();
    v0 = sub_1D42B6D0C();
    sub_1D4371070(v0, v1);
  }
  else
  {
    sub_1D43705F8();
    v2 = sub_1D42B6D0C();
    sub_1D4371094(v2, v3);
  }
  sub_1D42B7124();
  sub_1D42CB964();
}

uint64_t sub_1D436BC04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _BYTE *v6;

  v2 = sub_1D436BDCC();
  if (!v0)
  {
    v1 = v2;
    if ((_DWORD)v2)
    {
      sub_1D43705BC();
      sub_1D42B6D0C();
      *(_DWORD *)v3 = v1;
      *(_BYTE *)(v3 + 4) = 0;
    }
    else
    {
      v1 = 0;
      sub_1D43705F8();
      v5 = sub_1D42B6D0C();
      sub_1D4371134(v5, v6);
    }
    sub_1D4312028();
  }
  sub_1D42CB5C8();
  sub_1D42B7204();
  sub_1D42BE8B4();
  return v1;
}

uint64_t sub_1D436BD18()
{
  unint64_t v0;

  sub_1D4371034();
  sub_1D4371080(MEMORY[0x1E0D1FBB8], 37, v0);
  sub_1D42EA3B0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for E5RTExecutionStream()
{
  return objc_opt_self();
}

uint64_t sub_1D436BD68()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = e5rt_execution_stream_execute_sync();
  if ((_DWORD)result)
  {
    sub_1D4371068();
    v1 = sub_1D42B6D0C();
    return sub_1D4371024(v1, v2);
  }
  return result;
}

uint64_t sub_1D436BDB0(uint64_t a1)
{
  return sub_1D436C6B0(a1, MEMORY[0x1E0D1FA98]);
}

uint64_t sub_1D436BDCC()
{
  uint64_t precompiled_compute_operation;

  sub_1D451A734();
  sub_1D451A734();
  sub_1D451A734();
  precompiled_compute_operation = e5rt_execution_stream_operation_create_precompiled_compute_operation();
  swift_release();
  swift_release();
  swift_release();
  return precompiled_compute_operation;
}

void sub_1D436BE9C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;

  v6 = swift_bridgeObjectRetain();
  sub_1D4369598(v6);
  swift_bridgeObjectRelease();
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1D451B5A4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v7)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1D42C7224();
    if (v7 < 0)
    {
      __break(1u);
      return;
    }
    v16 = a4;
    for (i = 0; i != v7; ++i)
    {
      if ((a2 & 0xC000000000000001) != 0)
        v9 = MEMORY[0x1D825CD78](i, a2);
      else
        v9 = swift_retain();
      v10 = *(_QWORD *)(v9 + 16);
      swift_release();
      v11 = *(_QWORD *)(v17 + 16);
      if (v11 >= *(_QWORD *)(v17 + 24) >> 1)
        sub_1D42C7224();
      *(_QWORD *)(v17 + 16) = v11 + 1;
      *(_QWORD *)(v17 + 8 * v11 + 32) = v10;
    }
    a4 = v16;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    sub_1D4383160();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    sub_1D43830B4();
  v12 = e5rt_execution_stream_operation_reshape_operation();
  if (v12)
  {
    v13 = v12;
    sub_1D43705BC();
    v14 = swift_allocError();
    *(_DWORD *)v15 = v13;
    *(_BYTE *)(v15 + 4) = 0;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *a4 = v14;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_1D436C0BC(uint64_t a1)
{
  sub_1D436CCA0(a1, MEMORY[0x1E0D1FB30]);
  sub_1D42B6F28();
}

_QWORD *sub_1D436C108(uint64_t a1)
{
  return sub_1D436C18C(a1);
}

void sub_1D436C124(uint64_t a1)
{
  sub_1D436CCA0(a1, MEMORY[0x1E0D1FB28]);
  sub_1D42B6F28();
}

_QWORD *sub_1D436C170(uint64_t a1)
{
  return sub_1D436C18C(a1);
}

_QWORD *sub_1D436C18C(uint64_t a1)
{
  _QWORD *v1;
  unsigned int (*v2)(uint64_t, _QWORD, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, _QWORD, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[11];

  if (a1 < 0)
  {
    __break(1u);
LABEL_23:
    sub_1D43830B4();
    v11 = v24;
    goto LABEL_10;
  }
  sub_1D42BE910();
  v25[9] = v5;
  v25[10] = v6;
  v2 = v7;
  v3 = v8;
  v10 = v9;
  v4 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v25[0] = MEMORY[0x1E0DEE9D8];
    v1 = v25;
    sub_1D42C7224();
    v11 = v25[0];
    v12 = *(_QWORD *)(v25[0] + 16);
    do
    {
      v25[0] = v11;
      if (v12 >= *(_QWORD *)(v11 + 24) >> 1)
      {
        v1 = v25;
        sub_1D42C7224();
        v11 = v25[0];
      }
      *(_QWORD *)(v11 + 16) = v12 + 1;
      *(_QWORD *)(v11 + 8 * v12++ + 32) = 0;
      --v10;
    }
    while (v10);
  }
  else
  {
    v11 = MEMORY[0x1E0DEE9D8];
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_23;
LABEL_10:
  if (v2(v3, *(_QWORD *)(v11 + 16), v11 + 32))
  {
    sub_1D4371068();
    v13 = sub_1D42B6D0C();
    sub_1D4371024(v13, v14);
    sub_1D42CB208();
  }
  else
  {
    v16 = *(_QWORD *)(v11 + 16);
    if (v16)
    {
      v25[0] = v4;
      sub_1D42C71F0();
      v17 = 0;
      v1 = (_QWORD *)v25[0];
      while (*(_QWORD *)(v11 + 8 * v17 + 32))
      {
        v18 = sub_1D451A7A0();
        v20 = v19;
        v25[0] = v1;
        v21 = v1[2];
        if (v21 >= v1[3] >> 1)
        {
          sub_1D42C71F0();
          v1 = (_QWORD *)v25[0];
        }
        ++v17;
        v1[2] = v21 + 1;
        v22 = &v1[2 * v21];
        v22[4] = v18;
        v22[5] = v20;
        if (v16 == v17)
        {
          sub_1D42CB208();
          return v1;
        }
      }
      sub_1D43705BC();
      sub_1D42B6D0C();
      *(_DWORD *)v23 = 3;
      *(_BYTE *)(v23 + 4) = 1;
      sub_1D4312028();
      v1 = (_QWORD *)v25[0];
      sub_1D42CB208();
      swift_release();
    }
    else
    {
      sub_1D42CB208();
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
  }
  return v1;
}

void sub_1D436C394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D436C42C(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD *))MEMORY[0x1E0D1FBA8]);
  sub_1D42B6F28();
}

void sub_1D436C3E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D436C42C(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD *))MEMORY[0x1E0D1FB98]);
  sub_1D42B6F28();
}

uint64_t sub_1D436C42C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, _QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  _BYTE *v11;
  _QWORD v12[2];

  v12[1] = *MEMORY[0x1E0C80C00];
  v12[0] = 0;
  v6 = sub_1D451A734();
  LODWORD(a4) = a4(a3, v6 + 32, v12);
  sub_1D42BE998();
  if ((_DWORD)a4)
  {
    sub_1D43705BC();
    v7 = sub_1D42B6D0C();
    sub_1D4371070(v7, v8);
    return sub_1D42B7124();
  }
  result = v12[0];
  if (!v12[0])
  {
    sub_1D43705F8();
    v10 = sub_1D42B6D0C();
    sub_1D4371094(v10, v11);
    return sub_1D42B7124();
  }
  return result;
}

uint64_t sub_1D436C4FC()
{
  unint64_t v0;

  sub_1D4371034();
  sub_1D4371080(MEMORY[0x1E0D1FB60], 46, v0);
  sub_1D42EA3B0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for E5RTExecutionStreamOperation()
{
  return objc_opt_self();
}

uint64_t sub_1D436C54C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = sub_1D436FF00(a1);
  v4 = sub_1D4368C48(v3);
  sub_1D436BE9C(v3, v4, v2, &v6);
  sub_1D42BE93C();
  return sub_1D42B7204();
}

void sub_1D436C5BC(uint64_t a1)
{
  sub_1D436C800(a1, (uint64_t (*)(uint64_t, uint64_t *))MEMORY[0x1E0D1FC68]);
  sub_1D42B6F28();
}

void sub_1D436C608()
{
  unint64_t v0;

  sub_1D4371088();
  sub_1D4371034();
  sub_1D437101C(MEMORY[0x1E0D1FC48], 0xD00000000000001CLL, v0);
}

uint64_t sub_1D436C660()
{
  unint64_t v0;

  sub_1D4371034();
  sub_1D4371080(MEMORY[0x1E0D1FC48], 28, v0);
  sub_1D42EA3B0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for E5RTIOPort()
{
  return objc_opt_self();
}

uint64_t sub_1D436C6B0(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD))
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = a2(*(_QWORD *)(v2 + 16), *(_QWORD *)(a1 + 16));
  if ((_DWORD)result)
  {
    sub_1D4371068();
    v4 = sub_1D42B6D0C();
    return sub_1D4371024(v4, v5);
  }
  return result;
}

uint64_t sub_1D436C704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  _BYTE *v4;

  if (e5rt_tensor_desc_get_shape())
  {
    sub_1D4371068();
    v0 = sub_1D42B6D0C();
    sub_1D4371070(v0, v1);
  }
  else
  {
    sub_1D43705F8();
    v3 = sub_1D42B6D0C();
    sub_1D4371094(v3, v4);
  }
  return sub_1D42B7124();
}

void sub_1D436C7B4(uint64_t a1)
{
  sub_1D436C800(a1, MEMORY[0x1E0D1FE80]);
  sub_1D42B6F28();
}

void sub_1D436C800(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (sub_1D43710D0(a1, a2, v6, v8))
  {
    sub_1D4371068();
    v2 = sub_1D42B6D0C();
    sub_1D4371070(v2, v3);
  }
  else
  {
    if (v7)
      goto LABEL_5;
    sub_1D43705F8();
    v4 = sub_1D42B6D0C();
    sub_1D4371094(v4, v5);
  }
  sub_1D42B7124();
LABEL_5:
  sub_1D42CB964();
}

void sub_1D436C898()
{
  unint64_t v0;

  sub_1D4371088();
  sub_1D4371034();
  sub_1D437101C(MEMORY[0x1E0D1FE70], 0xD000000000000026, v0);
}

uint64_t sub_1D436C8F0()
{
  unint64_t v0;

  sub_1D4371034();
  sub_1D4371080(MEMORY[0x1E0D1FE70], 38, v0);
  sub_1D42EA3B0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for E5RTTensorDescriptor()
{
  return objc_opt_self();
}

void sub_1D436C940()
{
  uint64_t v0;
  uint64_t v1;

  if (e5rt_tensor_desc_get_size())
  {
    sub_1D4371068();
    v0 = sub_1D42B6D0C();
    sub_1D4371024(v0, v1);
  }
  sub_1D43710A0();
}

uint64_t sub_1D436C9C8()
{
  uint64_t v0;
  uint64_t v1;

  if (!e5rt_tensor_desc_dtype_get_component_dtype())
    return sub_1D436AE48(4);
  sub_1D4371068();
  v0 = sub_1D42B6D0C();
  return sub_1D4371024(v0, v1);
}

void sub_1D436CA64()
{
  unint64_t v0;

  sub_1D4371088();
  sub_1D4371034();
  sub_1D437101C(MEMORY[0x1E0D1FE38], 0xD00000000000002ELL, v0);
}

uint64_t sub_1D436CABC()
{
  unint64_t v0;

  sub_1D4371034();
  sub_1D4371080(MEMORY[0x1E0D1FE38], 46, v0);
  sub_1D42EA3B0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for E5RTTensorDescriptorDataType()
{
  return objc_opt_self();
}

void sub_1D436CB0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;

  if (e5rt_operand_desc_retain_from_tensor_desc())
  {
    sub_1D4371068();
    v0 = sub_1D42B6D0C();
    sub_1D4371070(v0, v1);
  }
  else
  {
    sub_1D43705F8();
    v2 = sub_1D42B6D0C();
    sub_1D4371094(v2, v3);
  }
  sub_1D42B7124();
  sub_1D42CB964();
}

uint64_t sub_1D436CBB0()
{
  unint64_t v0;

  sub_1D4371034();
  sub_1D4371080(MEMORY[0x1E0D1FC78], 39, v0);
  sub_1D42EA3B0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for E5RTOperandDescriptor()
{
  return objc_opt_self();
}

void sub_1D436CC00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;

  if (e5rt_buffer_object_get_data_ptr())
  {
    sub_1D4371068();
    v0 = sub_1D42B6D0C();
    sub_1D4371070(v0, v1);
  }
  else
  {
    sub_1D43705F8();
    v2 = sub_1D42B6D0C();
    sub_1D4371094(v2, v3);
  }
  sub_1D42B7124();
  sub_1D42CB964();
}

void sub_1D436CCA0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t *))
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_1D43710D0(a1, a2, v5, v6);
  if (v2)
  {
    v3 = v2;
    sub_1D43705BC();
    sub_1D42B6D0C();
    *(_DWORD *)v4 = v3;
    *(_BYTE *)(v4 + 4) = 0;
    sub_1D4312028();
  }
  sub_1D43710A0();
}

void sub_1D436CD28(unsigned int (*a1)(_QWORD *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  _QWORD v6[2];

  v6[1] = *MEMORY[0x1E0C80C00];
  v6[0] = *(_QWORD *)(v3 + 16);
  if (a1(v6))
    sub_1D44734B4(a2, a3);
  sub_1D42CB758();
}

uint64_t sub_1D436CDA0()
{
  unint64_t v0;

  sub_1D4371034();
  sub_1D4371080(MEMORY[0x1E0D1F938], 34, v0);
  sub_1D42EA3B0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for E5RTBufferObject()
{
  return objc_opt_self();
}

uint64_t sub_1D436CDF4()
{
  swift_release();
  return swift_release();
}

_QWORD *sub_1D436CE1C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_1D436CE50(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1D436CEAC(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  return a1;
}

void type metadata accessor for E5RTModel()
{
  sub_1D42CB35C();
}

_QWORD *initializeWithTake for FeatureExtractorConfiguration(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void type metadata accessor for UnsafeE5RTBufferObject()
{
  sub_1D42CB35C();
}

void type metadata accessor for UnsafeE5RTOperandDescriptor()
{
  sub_1D42CB35C();
}

void type metadata accessor for UnsafeE5RTTensorDescriptorDataType()
{
  sub_1D42CB35C();
}

void type metadata accessor for UnsafeE5RTTensorDescriptor()
{
  sub_1D42CB35C();
}

void type metadata accessor for UnsafeE5RTIOPort()
{
  sub_1D42CB35C();
}

void type metadata accessor for UnsafeE5RTExecutionStreamOperation()
{
  sub_1D42CB35C();
}

uint64_t getEnumTagSinglePayload for UnsafeAudioBufferListPointer(uint64_t a1, int a2)
{
  int v2;

  if (a2)
  {
    if (a2 == 1 || !*(_BYTE *)(a1 + 8))
    {
      if (*(_QWORD *)a1)
        v2 = -1;
      else
        v2 = 0;
    }
    else
    {
      v2 = *(_DWORD *)a1 + 1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UnsafeAudioBufferListPointer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_QWORD *)result = a2 - 2;
    if (a3 >= 2)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = 0;
  }
  return result;
}

void type metadata accessor for UnsafeE5RTExecutionStream()
{
  sub_1D42CB35C();
}

void sub_1D436CFD4()
{
  int data_ptr;
  int v1;
  uint64_t v2;
  _BYTE *v3;

  data_ptr = e5rt_buffer_object_get_data_ptr();
  if (data_ptr)
  {
    v1 = data_ptr;
    sub_1D43705BC();
    swift_allocError();
    *(_DWORD *)v2 = v1;
    *(_BYTE *)(v2 + 4) = 0;
  }
  else
  {
    sub_1D43705F8();
    swift_allocError();
    *v3 = 0;
  }
  swift_willThrow();
}

void sub_1D436D164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;

  v6 = *(_QWORD *)(a1 + 16);
  sub_1D436CC00();
  if (!v3)
  {
    sub_1D436CCA0(v6, MEMORY[0x1E0D1F928]);
    if (a2)
    {
      if (v7 == a3 - a2)
      {
LABEL_4:
        sub_1D451B1A8();
        return;
      }
    }
    else if (!v7)
    {
      goto LABEL_4;
    }
    sub_1D4370694();
    swift_allocError();
    *v8 = 0;
    swift_willThrow();
  }
}

uint64_t sub_1D436D224()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 4) == 1)
    __asm { BR              X9 }
  sub_1D451B964();
  return sub_1D451B97C();
}

uint64_t sub_1D436D2C0(unsigned int *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *a1;
  if (*((_BYTE *)a1 + 4) == 1)
    return ((uint64_t (*)(void))((char *)&loc_1D436D2F0 + 4 * byte_1D452EE57[v2]))();
  if ((*(_BYTE *)(a2 + 4) & 1) != 0)
    return 0;
  return (_DWORD)v2 == *(_DWORD *)a2;
}

void sub_1D436D358()
{
  unsigned int *v0;
  uint64_t v1;
  int v2;

  v1 = *v0;
  v2 = *((unsigned __int8 *)v0 + 4);
  sub_1D42BE9A8();
  if (v2 == 1)
    __asm { BR              X9 }
  sub_1D451B964();
  sub_1D451B97C();
  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t sub_1D436D424()
{
  unsigned int *v0;
  uint64_t v1;
  int v2;

  v1 = *v0;
  v2 = *((unsigned __int8 *)v0 + 4);
  sub_1D451B958();
  if (v2 == 1)
    __asm { BR              X9 }
  sub_1D451B964();
  sub_1D451B97C();
  return sub_1D451B994();
}

void sub_1D436D4FC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  if ((a2 & 1) != 0)
  {
    sub_1D436CCA0(*(_QWORD *)(a1 + 16), MEMORY[0x1E0D1FB30]);
    if (v2)
      return;
  }
  else
  {
    sub_1D436CCA0(*(_QWORD *)(a1 + 16), MEMORY[0x1E0D1FB28]);
    if (v2)
      return;
  }
  sub_1D436C18C(v3);
}

uint64_t sub_1D436D564(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t result;
  uint64_t v7;

  if ((a4 & 1) != 0)
    v5 = MEMORY[0x1E0D1FBA8];
  else
    v5 = MEMORY[0x1E0D1FB98];
  result = sub_1D436C42C(a2, a3, *(_QWORD *)(a1 + 16), (uint64_t (*)(uint64_t, uint64_t, _QWORD *))v5);
  if (!v4)
  {
    v7 = result;
    type metadata accessor for E5RTIOPort();
    result = sub_1D43211DC();
    *(_QWORD *)(result + 16) = v7;
  }
  return result;
}

void sub_1D436D5C8(uint64_t a1, char a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;

  v3 = a2 & 1;
  sub_1D436D4FC(a1, a2 & 1);
  if (!v2)
  {
    if (*(_QWORD *)(v4 + 16))
    {
      sub_1D437114C();
      sub_1D43710E0();
      if (v3)
        v5 = e5rt_execution_stream_operation_retain_output_port();
      else
        v5 = e5rt_execution_stream_operation_retain_input_port();
      v6 = v5;
      sub_1D42BE998();
      if (v6)
      {
        sub_1D43705BC();
        sub_1D42B6D0C();
        *(_DWORD *)v8 = v6;
        *(_BYTE *)(v8 + 4) = 0;
      }
      else
      {
        if (v15)
        {
          sub_1D42BE8B4();
          type metadata accessor for E5RTIOPort();
          *(_QWORD *)(sub_1D43211DC() + 16) = v15;
          v7 = e5rt_io_port_retain_tensor_desc();
          if (v7)
          {
            v11 = v7;
            sub_1D43705BC();
            sub_1D42B6D0C();
            *(_DWORD *)v12 = v11;
            *(_BYTE *)(v12 + 4) = 0;
          }
          else
          {
            sub_1D43705F8();
            v13 = sub_1D42B6D0C();
            sub_1D4371134(v13, v14);
          }
          sub_1D42F1DA8();
          sub_1D42BE998();
          goto LABEL_15;
        }
        sub_1D43705F8();
        v9 = sub_1D42B6D0C();
        sub_1D4371134(v9, v10);
      }
      sub_1D42F1DA8();
      sub_1D42BE8B4();
    }
LABEL_15:
    swift_bridgeObjectRelease();
  }
}

void sub_1D436D938(uint64_t a1)
{
  uint64_t v1;
  char v3;
  uint64_t v4;

  v3 = 0;
  v4 = 0;
  do
  {
    sub_1D436D5C8(a1, *((_BYTE *)&unk_1E97AD150 + v4 + 32));
    if ((v3 & 1) != 0)
      break;
    v3 = 1;
    v4 = 1u;
  }
  while (!v1);
}

uint64_t sub_1D436D98C(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;

  v9 = *a3;
  v8 = a3[1];
  v10 = a5 & 1;
  *a1 = *a3;
  a1[1] = v8;
  swift_bridgeObjectRetain();
  v11 = sub_1D436D564(a4, v9, v8, v10);
  if (v5)
    return swift_bridgeObjectRelease();
  sub_1D436C800(*(_QWORD *)(v11 + 16), (uint64_t (*)(uint64_t, uint64_t *))MEMORY[0x1E0D1FC68]);
  v14 = v13;
  swift_release();
  type metadata accessor for E5RTTensorDescriptor();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v14;
  *a2 = result;
  return result;
}

uint64_t sub_1D436DA54(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;

  result = sub_1D436D564(a1, a2, a3, a4 & 1);
  if (!v6)
  {
    sub_1D436C800(*(_QWORD *)(result + 16), (uint64_t (*)(uint64_t, uint64_t *))MEMORY[0x1E0D1FC50]);
    v11 = v10;
    type metadata accessor for E5RTBufferObject();
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 16) = v11;
    sub_1D436D164(inited, a5, a6);
    sub_1D42BE998();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D436DB00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v11;
  int64_t v12;

  v11 = (_QWORD *)(a3 + 64);
  v3 = 1 << *(_BYTE *)(a3 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a3 + 64);
  v12 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  if (v5)
  {
    v6 = __clz(__rbit64(v5));
    goto LABEL_15;
  }
  v7 = 1;
  if (v12 > 1)
  {
    v8 = v11[1];
    if (v8)
    {
LABEL_14:
      v6 = __clz(__rbit64(v8)) + (v7 << 6);
LABEL_15:
      __asm { BR              X9 }
    }
    v9 = 2;
    if (v12 > 2)
    {
      v8 = v11[2];
      if (v8)
        goto LABEL_13;
      v9 = 3;
      if (v12 <= 3)
        return swift_release();
      v8 = v11[3];
      if (v8)
      {
LABEL_13:
        v7 = v9;
        goto LABEL_14;
      }
      v9 = 4;
      if (v12 > 4)
      {
        v8 = v11[4];
        if (v8)
          goto LABEL_13;
        while (1)
        {
          v7 = v9 + 1;
          if (__OFADD__(v9, 1))
            __break(1u);
          if (v7 >= v12)
            break;
          v8 = v11[v7];
          ++v9;
          if (v8)
            goto LABEL_14;
        }
      }
    }
  }
  return swift_release();
}

uint64_t sub_1D436E7A8(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  _BYTE *v14;
  _QWORD *v16;
  int64_t v17;

  v16 = (_QWORD *)(a3 + 64);
  v4 = 1 << *(_BYTE *)(a3 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a3 + 64);
  v17 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  if (v6)
  {
    v7 = __clz(__rbit64(v6));
    goto LABEL_15;
  }
  v8 = 1;
  if (v17 <= 1)
    return swift_release();
  v9 = v16[1];
  if (!v9)
  {
    v10 = 2;
    if (v17 > 2)
    {
      v9 = v16[2];
      if (v9)
        goto LABEL_13;
      v10 = 3;
      if (v17 <= 3)
        return swift_release();
      v9 = v16[3];
      if (v9)
      {
LABEL_13:
        v8 = v10;
        goto LABEL_14;
      }
      v10 = 4;
      if (v17 > 4)
      {
        v9 = v16[4];
        if (!v9)
        {
          while (1)
          {
            v8 = v10 + 1;
            if (__OFADD__(v10, 1))
              break;
            if (v8 >= v17)
              return swift_release();
            v9 = v16[v8];
            ++v10;
            if (v9)
              goto LABEL_14;
          }
LABEL_29:
          __break(1u);
        }
        goto LABEL_13;
      }
    }
    return swift_release();
  }
LABEL_14:
  v7 = __clz(__rbit64(v9)) + (v8 << 6);
LABEL_15:
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v7) + 16) >> 61)
  {
    __break(1u);
    __break(1u);
    goto LABEL_29;
  }
  sub_1D451A734();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((a2 & 1) != 0)
    v11 = e5rt_execution_stream_operation_retain_output_port();
  else
    v11 = e5rt_execution_stream_operation_retain_input_port();
  v12 = v11;
  swift_release();
  if (v12)
  {
    sub_1D43705BC();
    swift_allocError();
    *(_DWORD *)v13 = v12;
    *(_BYTE *)(v13 + 4) = 0;
  }
  else
  {
    sub_1D43705F8();
    swift_allocError();
    *v14 = 0;
  }
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D436EB78(uint64_t a1, char a2, uint64_t *a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, _QWORD *), uint64_t (*a6)(void))
{
  uint64_t v6;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  _QWORD v14[3];
  char v15;

  v14[2] = a1;
  v15 = a2 & 1;
  v11 = sub_1D42DCE84();
  a5(v11, a4, v14);
  if (v6)
    return sub_1D42CB5C8();
  v13 = a6();
  sub_1D42CB5C8();
  sub_1D42CB208();
  result = sub_1D42CB5C8();
  *a3 = v13;
  return result;
}

uint64_t sub_1D436EC24(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  unint64_t v10;
  uint64_t v12;
  unint64_t v13;

  v12 = a4;
  v13 = a5;
  swift_bridgeObjectRetain_n();
  swift_retain();
  sub_1D42DD16C(a4, a5);
  sub_1D43700A8((uint64_t)&v12);
  v10 = v13;
  if (v5)
  {
    sub_1D42B5420(v12, v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    *a1 = v12;
    a1[1] = v10;
  }
  return a2;
}

void sub_1D436ECE8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  unint64_t v13;
  uint64_t v14;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1D43830A4();
    a4 = v14;
  }
  v13 = *(_QWORD *)(a4 + 16);
  if (v13 >> 61)
  {
    __break(1u);
  }
  else
  {
    sub_1D436DA54(a5, a2, a3, a6 & 1, a4 + 32, a4 + 32 + 4 * v13);
    if (v6)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      *a1 = a4;
    }
  }
}

uint64_t sub_1D436EDBC(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  char v6;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  int size;
  uint64_t v11;
  uint64_t v12;

  v6 = a2 & 1;
  swift_retain();
  result = sub_1D4368F40(a3, a1, v6);
  if (!v3)
  {
    if (*(_QWORD *)(result + 16))
    {
      v12 = swift_bridgeObjectRetain();
      v8 = *(_QWORD *)(v12 + 48);
      v9 = *(_QWORD *)(v12 + 56);
      swift_bridgeObjectRetain();
      sub_1D42DD16C(v8, v9);
      swift_retain();
      size = e5rt_tensor_desc_get_size();
      if (!size)
        __asm { BR              X9 }
      sub_1D43705BC();
      swift_allocError();
      *(_DWORD *)v11 = size;
      *(_BYTE *)(v11 + 4) = size == 0;
      swift_willThrow();
      swift_bridgeObjectRelease();
      sub_1D42B5420(v8, v9);
      swift_bridgeObjectRelease_n();
      return swift_release();
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1D436F0D4(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t i;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;

  v4 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(a3 + 16))
  {
    sub_1D42C7A64();
    v6 = sub_1D4396C0C(a3);
    if (v6 < 0 || v6 >= 1 << *(_BYTE *)(a3 + 32))
    {
      __break(1u);
    }
    else if ((*(_QWORD *)(a3 + 64 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) != 0)
    {
      if (*(_DWORD *)(a3 + 36) == v7)
      {
        sub_1D451A734();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        if ((a2 & 1) != 0)
          v8 = e5rt_execution_stream_operation_retain_output_port();
        else
          v8 = e5rt_execution_stream_operation_retain_input_port();
        v9 = v8;
        swift_release();
        if (v9)
        {
          sub_1D43705BC();
          swift_allocError();
          *(_DWORD *)v10 = v9;
          *(_BYTE *)(v10 + 4) = 0;
        }
        else
        {
          sub_1D43705F8();
          swift_allocError();
          *v11 = 0;
        }
        swift_willThrow();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return swift_release();
      }
LABEL_26:
      __break(1u);
      __break(1u);
      __break(1u);
      __break(1u);
LABEL_27:
      __break(1u);
    }
    __break(1u);
    goto LABEL_26;
  }
  v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  if (!v12)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  for (i = v4 + 56; ; i += 32)
  {
    v14 = *(_QWORD *)(i - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1D436C940();
    if (v3)
      break;
    v16 = *(_QWORD *)(v14 + 16);
    if (v16 >> 61)
      goto LABEL_27;
    if (v15 != 4 * v16)
    {
      sub_1D43705BC();
      swift_allocError();
      *(_DWORD *)v18 = 0;
      *(_BYTE *)(v18 + 4) = 1;
      swift_willThrow();
      break;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v12)
      return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return swift_release();
}

uint64_t sub_1D436F5E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;

  swift_retain();
  v8 = swift_bridgeObjectRetain();
  v9 = sub_1D44C92C4(v8);
  v10 = *(_QWORD *)(a2 + 16);
  sub_1D436CCA0(v10, MEMORY[0x1E0D1FB28]);
  if (v4)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  v12 = sub_1D436C18C(v11);
  v14 = sub_1D44C9228((uint64_t)v12);
  sub_1D436FA54((uint64_t)v9, v14);
  v16 = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v16 & 1) != 0)
  {
    v17 = *a4;
    v18 = swift_bridgeObjectRetain();
    v19 = sub_1D44C92C4(v18);
    sub_1D436CCA0(v10, MEMORY[0x1E0D1FB30]);
    v21 = sub_1D436C18C(v20);
    v23 = sub_1D44C9228((uint64_t)v21);
    sub_1D436FA54((uint64_t)v19, v23);
    v25 = v24;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v25 & 1) != 0)
    {
      sub_1D436EDBC(a2, 0, a3);
      sub_1D436EDBC(a2, 1, v17);
      sub_1D436DB00(a2, 0, a3);
      sub_1D436BD68();
      sub_1D436EB78(a2, 1, a4, (uint64_t)sub_1D4370678, (void (*)(uint64_t, uint64_t, _QWORD *))sub_1D4369D88, (uint64_t (*)(void))sub_1D449573C);
      return swift_release();
    }
    sub_1D43705BC();
    swift_allocError();
    *(_DWORD *)v22 = 2;
  }
  else
  {
    sub_1D43705BC();
    swift_allocError();
    *(_DWORD *)v22 = 1;
  }
  *(_BYTE *)(v22 + 4) = 1;
  swift_willThrow();
  return swift_release();
}

void sub_1D436F858()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  sub_1D42BE910();
  v2 = v1;
  v4 = v3;
  swift_retain();
  v5 = swift_bridgeObjectRetain();
  v6 = sub_1D44C92C4(v5);
  sub_1D43710F0((uint64_t)v6, MEMORY[0x1E0D1FB28]);
  if (!v0)
  {
    v8 = sub_1D4371140(v7);
    v9 = sub_1D44C9228((uint64_t)v8);
    sub_1D436FA54((uint64_t)v6, v9);
    v11 = v10;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
    {
      v12 = *v2;
      v13 = swift_bridgeObjectRetain();
      v14 = sub_1D44C92C4(v13);
      sub_1D43710F0((uint64_t)v14, MEMORY[0x1E0D1FB30]);
      v16 = sub_1D4371140(v15);
      v18 = sub_1D44C9228((uint64_t)v16);
      sub_1D436FA54((uint64_t)v14, v18);
      v20 = v19;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v20 & 1) != 0)
      {
        v21 = sub_1D43710FC();
        sub_1D436F0D4(v21, v22, v23);
        sub_1D436F0D4(v4, 1, v12);
        v24 = sub_1D43710FC();
        sub_1D436E7A8(v24, v25, v26);
        sub_1D436BD68();
        sub_1D436EB78(v4, 1, v2, (uint64_t)sub_1D4370718, (void (*)(uint64_t, uint64_t, _QWORD *))sub_1D436A26C, (uint64_t (*)(void))sub_1D4495870);
        goto LABEL_8;
      }
      sub_1D43705BC();
      sub_1D42B6D0C();
      *(_DWORD *)v17 = 2;
    }
    else
    {
      sub_1D43705BC();
      sub_1D42B6D0C();
      *(_DWORD *)v17 = 1;
    }
    *(_BYTE *)(v17 + 4) = 1;
    sub_1D4312028();
LABEL_8:
    sub_1D42BE93C();
    goto LABEL_3;
  }
  sub_1D42BE93C();
  swift_bridgeObjectRelease();
LABEL_3:
  sub_1D42BE844();
}

void sub_1D436FA54(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  uint64_t v29;
  unint64_t j;
  uint64_t v31;
  _QWORD *v32;
  BOOL v33;
  uint64_t v34;
  int64_t v35;
  int64_t v36;

  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v3 = 0;
  v4 = *(_QWORD *)(a1 + 56);
  v34 = a1 + 56;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & v4;
  v35 = (unint64_t)(v5 + 63) >> 6;
  v8 = a2 + 56;
  if ((v6 & v4) == 0)
    goto LABEL_8;
LABEL_7:
  v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v36 = v3;
  for (i = v9 | (v3 << 6); ; i = __clz(__rbit64(v12)) + (v13 << 6))
  {
    v19 = a1;
    v20 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v22 = *v20;
    v21 = v20[1];
    sub_1D451B958();
    sub_1D42DCE84();
    sub_1D451A74C();
    v23 = sub_1D451B994();
    v24 = -1 << *(_BYTE *)(a2 + 32);
    v25 = v23 & ~v24;
    if (((*(_QWORD *)(v8 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
      goto LABEL_45;
    v26 = *(_QWORD *)(a2 + 48);
    v27 = (_QWORD *)(v26 + 16 * v25);
    v28 = *v27 == v22 && v27[1] == v21;
    if (!v28 && (sub_1D43710B0() & 1) == 0)
    {
      v29 = ~v24;
      for (j = v25 + 1; ; j = v31 + 1)
      {
        v31 = j & v29;
        if (((*(_QWORD *)(v8 + (((j & v29) >> 3) & 0xFFFFFFFFFFFFF8)) >> (j & v29)) & 1) == 0)
          break;
        v32 = (_QWORD *)(v26 + 16 * v31);
        v33 = *v32 == v22 && v32[1] == v21;
        if (v33 || (sub_1D43710B0() & 1) != 0)
          goto LABEL_34;
      }
LABEL_45:
      swift_bridgeObjectRelease();
      return;
    }
LABEL_34:
    swift_bridgeObjectRelease();
    a1 = v19;
    v3 = v36;
    if (v7)
      goto LABEL_7;
LABEL_8:
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_48;
    }
    if (v11 >= v35)
      return;
    v12 = *(_QWORD *)(v34 + 8 * v11);
    v13 = v3 + 1;
    if (!v12)
    {
      sub_1D4371164();
      if (v14 == v15)
        return;
      sub_1D4371158();
      if (!v12)
      {
        sub_1D4371164();
        if (v14 == v15)
          return;
        sub_1D4371158();
        if (!v12)
        {
          sub_1D4371164();
          if (v14 == v15)
            return;
          sub_1D4371158();
          if (!v12)
            break;
        }
      }
    }
LABEL_27:
    v7 = (v12 - 1) & v12;
    v36 = v13;
  }
  v17 = v16 + 4;
  if (v17 >= v35)
    return;
  v12 = *(_QWORD *)(v34 + 8 * v17);
  if (v12)
  {
    v13 = v17;
    goto LABEL_27;
  }
  while (!__OFADD__(v17, 1))
  {
    sub_1D4371164();
    if (v14 == v15)
      return;
    sub_1D4371158();
    v17 = v18 + 1;
    if (v12)
      goto LABEL_27;
  }
LABEL_48:
  __break(1u);
}

uint64_t sub_1D436FCBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_1D436974C(a2, (void (*)(_QWORD *, uint64_t *, _QWORD *))sub_1D436FD7C);
  if (!v2)
  {
    sub_1D4495718(v4);
    v6 = v5;
    sub_1D42CB208();
    sub_1D43698A8(v6, (void (*)(uint64_t *, __int128 *, uint64_t *))sub_1D436FDF4);
    sub_1D449573C();
    v3 = v7;
    sub_1D42B7204();
    sub_1D42CB5C8();
  }
  return v3;
}

uint64_t sub_1D436FD7C(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_1D436D98C(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_BYTE *)(v3 + 24));
}

uint64_t sub_1D436FD98(_QWORD *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v5 = a3[1];
  *a1 = *a3;
  a1[1] = v5;
  swift_bridgeObjectRetain();
  sub_1D436C940();
  if (v3)
    return swift_bridgeObjectRelease();
  result = MEMORY[0x1D825B59C]();
  *a2 = result;
  a2[1] = v7;
  return result;
}

uint64_t sub_1D436FDF4(_QWORD *a1, uint64_t *a2, _QWORD *a3)
{
  return sub_1D436FD98(a1, a2, a3);
}

void sub_1D436FE08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D436A71C(a2, a3, a1);
}

uint64_t sub_1D436FE2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a6 + 16))(a3, a5, a6);
  if (!v6)
  {
    sub_1D42DCE84();
    v8 = sub_1D436BC04();
    type metadata accessor for E5RTExecutionStreamOperation();
    result = sub_1D43211DC();
    *(_QWORD *)(result + 16) = v8;
  }
  return result;
}

uint64_t sub_1D436FED4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = swift_slowAlloc();
  *(_QWORD *)(v1 + 24) = a1;
  return v1;
}

uint64_t sub_1D436FF00(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  sub_1D42B28FC(&qword_1EFE4D588);
  result = sub_1D451B5B0();
  v3 = (_QWORD *)result;
  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = result + 64;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v17 = *v16;
    result = v16[1];
    v18 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i) + 16);
    *(_QWORD *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v19 = (_QWORD *)(v3[6] + 16 * i);
    *v19 = v17;
    v19[1] = result;
    *(_QWORD *)(v3[7] + 8 * i) = v18;
    v20 = v3[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v22;
    result = swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v13 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        return (uint64_t)v3;
      v14 = *(_QWORD *)(v5 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v9)
          return (uint64_t)v3;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v9)
    return (uint64_t)v3;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1D43700A8(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 8) >> 62;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  __asm { BR              X9 }
}

uint64_t sub_1D437012C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v9;
  unsigned int v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  unsigned __int8 v13;

  v9 = v5;
  LOWORD(v10) = v1;
  BYTE2(v10) = BYTE2(v1);
  HIBYTE(v10) = BYTE3(v1);
  v11 = BYTE4(v1);
  v12 = BYTE5(v1);
  v13 = BYTE6(v1);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  sub_1D437055C((uint64_t)&v9, BYTE6(v1), v2, v4, v0, v6);
  swift_release();
  v7 = v10 | ((unint64_t)v11 << 32) | ((unint64_t)v12 << 40) | ((unint64_t)v13 << 48);
  *v3 = v9;
  v3[1] = v7;
  swift_release_n();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1D4370490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  result = sub_1D4519A14();
  if (!result)
    goto LABEL_10;
  v14 = result;
  result = sub_1D4519A38();
  v15 = a1 - result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_9;
  }
  v16 = __OFSUB__(a2, a1);
  v17 = a2 - a1;
  if (v16)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  v18 = a7 & 1;
  v19 = sub_1D4519A2C();
  if (v19 >= v17)
    v20 = v17;
  else
    v20 = v19;
  sub_1D436DA54(a4, a5, a6, v18, v14 + v15, v14 + v15 + v20);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1D437055C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  sub_1D436DA54(a3, a4, a5, a6 & 1, a1, a1 + a2);
  swift_bridgeObjectRelease();
  return swift_release();
}

unint64_t sub_1D43705BC()
{
  unint64_t result;

  result = qword_1EFE510D0;
  if (!qword_1EFE510D0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452F254, &unk_1E97AD0D0);
    atomic_store(result, (unint64_t *)&qword_1EFE510D0);
  }
  return result;
}

unint64_t sub_1D43705F8()
{
  unint64_t result;

  result = qword_1EFE4D570;
  if (!qword_1EFE4D570)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45348D4, &type metadata for CInteropUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4D570);
  }
  return result;
}

uint64_t sub_1D4370634(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;

  result = sub_1D436EC24(a2, *(_QWORD *)a3, *(_QWORD *)(a3 + 8), *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
  if (!v3)
  {
    *a1 = result;
    a1[1] = v6;
  }
  return result;
}

uint64_t sub_1D4370678(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  return sub_1D4370634(a1, a2, a3);
}

unint64_t sub_1D4370694()
{
  unint64_t result;

  result = qword_1EFE4D578;
  if (!qword_1EFE4D578)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4544874, &type metadata for MemUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4D578);
  }
  return result;
}

void sub_1D43706D0(_QWORD *a1, _QWORD *a2, uint64_t *a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  sub_1D436ECE8(a2, *a3, a3[1], a3[2], a4, a5 & 1);
  if (!v5)
  {
    *a1 = v7;
    a1[1] = v8;
  }
}

void sub_1D4370718(_QWORD *a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  sub_1D43706D0(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_BYTE *)(v3 + 24));
}

void type metadata accessor for E5RTTensorDescriptorComponentDatatype()
{
  sub_1D42CB35C();
}

void type metadata accessor for E5RTUtils.DomainError()
{
  sub_1D42CB35C();
}

unint64_t sub_1D4370758()
{
  unint64_t result;

  result = qword_1EFE4D590;
  if (!qword_1EFE4D590)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452F0FC, &unk_1E97AD0D0);
    atomic_store(result, (unint64_t *)&qword_1EFE4D590);
  }
  return result;
}

unint64_t sub_1D4370798()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFE4D598;
  if (!qword_1EFE4D598)
  {
    v1 = sub_1D42B8B10(&qword_1EFE4D5A0);
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EFE4D598);
  }
  return result;
}

unint64_t sub_1D43707E0()
{
  unint64_t result;

  result = qword_1EFE4D5A8;
  if (!qword_1EFE4D5A8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452F22C, &unk_1E97AC170);
    atomic_store(result, (unint64_t *)&qword_1EFE4D5A8);
  }
  return result;
}

unint64_t sub_1D437081C()
{
  unint64_t result;

  result = qword_1EFE4D5E0;
  if (!qword_1EFE4D5E0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452F78C, &type metadata for E5RTTensorDescriptorComponentDatatype.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D5E0);
  }
  return result;
}

unint64_t sub_1D4370858()
{
  unint64_t result;

  result = qword_1EFE4D5E8;
  if (!qword_1EFE4D5E8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452F73C, &type metadata for E5RTTensorDescriptorComponentDatatype.FloatCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D5E8);
  }
  return result;
}

unint64_t sub_1D4370894()
{
  unint64_t result;

  result = qword_1EFE4D5F0;
  if (!qword_1EFE4D5F0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452F6EC, &type metadata for E5RTTensorDescriptorComponentDatatype.SnormCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D5F0);
  }
  return result;
}

unint64_t sub_1D43708D0()
{
  unint64_t result;

  result = qword_1EFE4D5F8;
  if (!qword_1EFE4D5F8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452F69C, &type metadata for E5RTTensorDescriptorComponentDatatype.UnormCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D5F8);
  }
  return result;
}

unint64_t sub_1D437090C()
{
  unint64_t result;

  result = qword_1EFE4D600;
  if (!qword_1EFE4D600)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452F64C, &type metadata for E5RTTensorDescriptorComponentDatatype.IntCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D600);
  }
  return result;
}

unint64_t sub_1D4370948()
{
  unint64_t result;

  result = qword_1EFE4D608;
  if (!qword_1EFE4D608)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452F5FC, &type metadata for E5RTTensorDescriptorComponentDatatype.UintCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D608);
  }
  return result;
}

uint64_t _s13SoundAnalysis37E5RTTensorDescriptorComponentDatatypeO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D43709D0 + 4 * byte_1D452EE74[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D4370A04 + 4 * byte_1D452EE6F[v4]))();
}

uint64_t sub_1D4370A04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4370A0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4370A14);
  return result;
}

uint64_t sub_1D4370A20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4370A28);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D4370A2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4370A34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for E5RTTensorDescriptorComponentDatatype.CodingKeys()
{
  return &type metadata for E5RTTensorDescriptorComponentDatatype.CodingKeys;
}

ValueMetadata *type metadata accessor for E5RTTensorDescriptorComponentDatatype.UintCodingKeys()
{
  return &type metadata for E5RTTensorDescriptorComponentDatatype.UintCodingKeys;
}

ValueMetadata *type metadata accessor for E5RTTensorDescriptorComponentDatatype.IntCodingKeys()
{
  return &type metadata for E5RTTensorDescriptorComponentDatatype.IntCodingKeys;
}

ValueMetadata *type metadata accessor for E5RTTensorDescriptorComponentDatatype.UnormCodingKeys()
{
  return &type metadata for E5RTTensorDescriptorComponentDatatype.UnormCodingKeys;
}

ValueMetadata *type metadata accessor for E5RTTensorDescriptorComponentDatatype.SnormCodingKeys()
{
  return &type metadata for E5RTTensorDescriptorComponentDatatype.SnormCodingKeys;
}

ValueMetadata *type metadata accessor for E5RTTensorDescriptorComponentDatatype.FloatCodingKeys()
{
  return &type metadata for E5RTTensorDescriptorComponentDatatype.FloatCodingKeys;
}

void type metadata accessor for E5RTErrorCode()
{
  sub_1D42CB35C();
}

unint64_t sub_1D4370AB0()
{
  unint64_t result;

  result = qword_1EFE4D640;
  if (!qword_1EFE4D640)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452F2FC, &unk_1E979E9A8);
    atomic_store(result, (unint64_t *)&qword_1EFE4D640);
  }
  return result;
}

unint64_t sub_1D4370AF0()
{
  unint64_t result;

  result = qword_1EFE4D648;
  if (!qword_1EFE4D648)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452F5D4, &type metadata for E5RTTensorDescriptorComponentDatatype.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D648);
  }
  return result;
}

unint64_t sub_1D4370B30()
{
  unint64_t result;

  result = qword_1EFE4D650;
  if (!qword_1EFE4D650)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452F4F4, &type metadata for E5RTTensorDescriptorComponentDatatype.UintCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D650);
  }
  return result;
}

unint64_t sub_1D4370B70()
{
  unint64_t result;

  result = qword_1EFE4D658;
  if (!qword_1EFE4D658)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452F51C, &type metadata for E5RTTensorDescriptorComponentDatatype.UintCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D658);
  }
  return result;
}

unint64_t sub_1D4370BB0()
{
  unint64_t result;

  result = qword_1EFE4D660;
  if (!qword_1EFE4D660)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452F4A4, &type metadata for E5RTTensorDescriptorComponentDatatype.IntCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D660);
  }
  return result;
}

unint64_t sub_1D4370BF0()
{
  unint64_t result;

  result = qword_1EFE4D668;
  if (!qword_1EFE4D668)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452F4CC, &type metadata for E5RTTensorDescriptorComponentDatatype.IntCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D668);
  }
  return result;
}

unint64_t sub_1D4370C30()
{
  unint64_t result;

  result = qword_1EFE4D670;
  if (!qword_1EFE4D670)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452F454, &type metadata for E5RTTensorDescriptorComponentDatatype.UnormCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D670);
  }
  return result;
}

unint64_t sub_1D4370C70()
{
  unint64_t result;

  result = qword_1EFE4D678;
  if (!qword_1EFE4D678)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452F47C, &type metadata for E5RTTensorDescriptorComponentDatatype.UnormCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D678);
  }
  return result;
}

unint64_t sub_1D4370CB0()
{
  unint64_t result;

  result = qword_1EFE4D680;
  if (!qword_1EFE4D680)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452F404, &type metadata for E5RTTensorDescriptorComponentDatatype.SnormCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D680);
  }
  return result;
}

unint64_t sub_1D4370CF0()
{
  unint64_t result;

  result = qword_1EFE4D688;
  if (!qword_1EFE4D688)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452F42C, &type metadata for E5RTTensorDescriptorComponentDatatype.SnormCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D688);
  }
  return result;
}

unint64_t sub_1D4370D30()
{
  unint64_t result;

  result = qword_1EFE4D690;
  if (!qword_1EFE4D690)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452F3B4, &type metadata for E5RTTensorDescriptorComponentDatatype.FloatCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D690);
  }
  return result;
}

unint64_t sub_1D4370D70()
{
  unint64_t result;

  result = qword_1EFE4D698;
  if (!qword_1EFE4D698)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452F3DC, &type metadata for E5RTTensorDescriptorComponentDatatype.FloatCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D698);
  }
  return result;
}

unint64_t sub_1D4370DB0()
{
  unint64_t result;

  result = qword_1EFE4D6A0;
  if (!qword_1EFE4D6A0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452F544, &type metadata for E5RTTensorDescriptorComponentDatatype.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D6A0);
  }
  return result;
}

unint64_t sub_1D4370DF0()
{
  unint64_t result;

  result = qword_1EFE4D6A8;
  if (!qword_1EFE4D6A8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452F56C, &type metadata for E5RTTensorDescriptorComponentDatatype.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D6A8);
  }
  return result;
}

unint64_t sub_1D4370E2C()
{
  unint64_t result;

  result = qword_1EFE4D6B8;
  if (!qword_1EFE4D6B8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452F894, &type metadata for E5RTErrorCode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D6B8);
  }
  return result;
}

void sub_1D4370E68(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (!*a1)
  {
    v6 = sub_1D42B8B10(&qword_1EFE4D6C0);
    v7 = a2;
    atomic_store(MEMORY[0x1D825E41C](a3, v6, &v7), a1);
  }
  sub_1D42CB758();
}

uint64_t storeEnumTagSinglePayload for E5RTErrorCode.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D4370EFC + 4 * byte_1D452EE79[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D4370F1C + 4 * byte_1D452EE7E[v4]))();
}

_BYTE *sub_1D4370EFC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D4370F1C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4370F24(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4370F2C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4370F34(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4370F3C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for E5RTErrorCode.CodingKeys()
{
  return &type metadata for E5RTErrorCode.CodingKeys;
}

unint64_t sub_1D4370F5C()
{
  unint64_t result;

  result = qword_1EFE4D6E0;
  if (!qword_1EFE4D6E0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452F86C, &type metadata for E5RTErrorCode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D6E0);
  }
  return result;
}

unint64_t sub_1D4370F9C()
{
  unint64_t result;

  result = qword_1EFE4D6E8;
  if (!qword_1EFE4D6E8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452F7DC, &type metadata for E5RTErrorCode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4D6E8);
  }
  return result;
}

unint64_t sub_1D4370FDC()
{
  unint64_t result;

  result = qword_1EFE4D6F0[0];
  if (!qword_1EFE4D6F0[0])
  {
    result = MEMORY[0x1D825E41C](&unk_1D452F804, &type metadata for E5RTErrorCode.CodingKeys);
    atomic_store(result, qword_1EFE4D6F0);
  }
  return result;
}

void sub_1D437101C(unsigned int (*a1)(_QWORD *), uint64_t a2, unint64_t a3)
{
  sub_1D436CD28(a1, a2, a3);
}

uint64_t sub_1D4371024(uint64_t a1, uint64_t a2)
{
  int v2;

  *(_DWORD *)a2 = v2;
  *(_BYTE *)(a2 + 4) = 0;
  return swift_willThrow();
}

uint64_t sub_1D4371040()
{
  return sub_1D451B610();
}

uint64_t sub_1D4371054()
{
  return sub_1D451B6F4();
}

unint64_t sub_1D4371068()
{
  return sub_1D43705BC();
}

void sub_1D4371070(uint64_t a1, uint64_t a2)
{
  int v2;

  *(_DWORD *)a2 = v2;
  *(_BYTE *)(a2 + 4) = 0;
}

void sub_1D4371080(unsigned int (*a1)(_QWORD *), uint64_t a2, unint64_t a3)
{
  sub_1D436CD28(a1, a2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a3);
}

void sub_1D4371094(uint64_t a1, _BYTE *a2)
{
  *a2 = 0;
}

uint64_t sub_1D43710B0()
{
  return sub_1D451B820();
}

uint64_t sub_1D43710C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t sub_1D43710D0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t *)@<X8>, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  a4 = v4;
  a3 = 0;
  return a2(a1, &a3);
}

uint64_t sub_1D43710E0()
{
  return swift_bridgeObjectRetain();
}

void sub_1D43710F0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t *))
{
  uint64_t v2;

  sub_1D436CCA0(v2, a2);
}

uint64_t sub_1D43710FC()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_1D4371110()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 4;
  return sub_1D4370858();
}

unint64_t sub_1D437111C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 3;
  return sub_1D4370894();
}

unint64_t sub_1D4371128()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 2;
  return sub_1D43708D0();
}

void sub_1D4371134(uint64_t a1, _BYTE *a2)
{
  *a2 = 0;
}

_QWORD *sub_1D4371140(uint64_t a1)
{
  return sub_1D436C18C(a1);
}

uint64_t sub_1D437114C()
{
  return sub_1D451A734();
}

uint64_t sub_1D4371170()
{
  return swift_unknownObjectRelease();
}

unint64_t sub_1D4371178()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 68) = 1;
  return sub_1D437090C();
}

uint64_t sub_1D4371184()
{
  return sub_1D4371544();
}

uint64_t sub_1D4371194()
{
  sub_1D4371598((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ObjectRecycler(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ObjectRecycler);
}

uint64_t sub_1D43711C8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1D437120C(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v5;

  v3 = (void *)MEMORY[0x1D825DB34]();
  sub_1D4371260(v1, a1, &v5);
  objc_autoreleasePoolPop(v3);
  return v5;
}

void sub_1D4371260(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;

  v5 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)(v7 + 16);
  type metadata accessor for WrapperNSHashableShallowCopying(0, v5, *(_QWORD *)(v11 + 96), v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, v5);
  v13 = v10;
  v14 = sub_1D433916C((uint64_t)v9);
  v15 = objc_msgSend(v13, sel_objectForKey_, v14);

  *a3 = v15;
}

uint64_t sub_1D4371348(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  void *v6;

  v5 = *v2;
  v6 = (void *)MEMORY[0x1D825DB34]();
  sub_1D43713C0(a1, (uint64_t)v2, a2);
  objc_autoreleasePoolPop(v6);
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v5 + 80) - 8) + 8))(a2);
}

void sub_1D43713C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;

  v5 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)(v9 + 16);
  type metadata accessor for WrapperNSHashableShallowCopying(0, v5, *(_QWORD *)(v11 + 96), v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a3, v5);
  if (a1)
  {
    swift_unknownObjectRetain_n();
    v13 = v10;
    v14 = sub_1D433916C((uint64_t)v8);
    objc_msgSend(v13, sel_setObject_forKey_, a1, v14);

    swift_unknownObjectRelease_n();
  }
  else
  {
    v15 = v10;
    v14 = sub_1D433916C((uint64_t)v8);
    objc_msgSend(v15, sel_removeObjectForKey_, v14);

  }
}

uint64_t sub_1D43714EC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4371508()
{
  sub_1D43714EC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StrongToWeakDictionary(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StrongToWeakDictionary);
}

uint64_t sub_1D4371534()
{
  return sub_1D4371544();
}

uint64_t sub_1D4371544()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1D4371598(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 32));
  swift_release();
  return v1;
}

uint64_t sub_1D43715D0()
{
  sub_1D4371598((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WeakObjectCache(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WeakObjectCache);
}

uint64_t sub_1D4371604@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1D437120C(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1D437162C(uint64_t *a1, uint64_t a2)
{
  return sub_1D4371348(*a1, a2);
}

id sub_1D4371670()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC13SoundAnalysis15SNMLCustomModel_modelDescription);
}

void sub_1D43716C8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC13SoundAnalysis15SNMLCustomModel_modelDescription);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC13SoundAnalysis15SNMLCustomModel_modelDescription) = a1;

}

id sub_1D43716DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = *(void **)(v2 + OBJC_IVAR____TtC13SoundAnalysis15SNMLCustomModel_customModel);
  v9[0] = 0;
  v5 = objc_msgSend(v4, sel_predictionFromFeatures_options_error_, a1, a2, v9);
  if (v5)
  {
    v6 = v9[0];
  }
  else
  {
    v7 = v9[0];
    sub_1D4519AA4();

    swift_willThrow();
  }
  return v5;
}

void sub_1D43717AC()
{
  sub_1D4371B3C();
  __break(1u);
}

uint64_t type metadata accessor for SNMLCustomModel()
{
  return objc_opt_self();
}

id sub_1D4371864()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  id v2;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC13SoundAnalysis15SNMLLockedModel_lock) + 16);
  swift_retain();
  os_unfair_lock_lock(v1);
  v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC13SoundAnalysis15SNMLLockedModel_model), sel_modelDescription));
  os_unfair_lock_unlock(v1);
  swift_release();
  return v2;
}

id sub_1D43718DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC13SoundAnalysis15SNMLLockedModel_lock) + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = *(void **)(v2 + OBJC_IVAR____TtC13SoundAnalysis15SNMLLockedModel_model);
  v11[0] = 0;
  v7 = objc_msgSend(v6, sel_predictionFromFeatures_options_error_, a1, a2, v11);
  if (v7)
  {
    v8 = v11[0];
  }
  else
  {
    v9 = v11[0];
    sub_1D4519AA4();

    swift_willThrow();
  }
  os_unfair_lock_unlock(v5);
  swift_release();
  return v7;
}

id sub_1D43719EC(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t (*a6)(uint64_t, id))
{
  id v10;
  id v11;
  void *v12;

  swift_unknownObjectRetain();
  v10 = a4;
  v11 = a1;
  v12 = (void *)a6(a3, v10);

  swift_unknownObjectRelease();
  return v12;
}

void sub_1D4371AB8()
{
  sub_1D4371B3C();
  __break(1u);
}

uint64_t type metadata accessor for SNMLLockedModel()
{
  return objc_opt_self();
}

uint64_t sub_1D4371B3C()
{
  return _swift_stdlib_reportUnimplementedInitializer();
}

uint64_t sub_1D4371B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x1D825E41C](&unk_1D452FAC8, a1, &v4);
}

void sub_1D4371B84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1D42C71F0();
    v5 = (unint64_t *)(a1 + 32);
    while (1)
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & 0x8000000000000000) != 0)
        break;
      if (v6 >= *(_QWORD *)(a2 + 16))
        goto LABEL_11;
      v8 = (uint64_t *)(a2 + 32 + 16 * v6);
      v10 = *v8;
      v9 = v8[1];
      v11 = *(_QWORD *)(v14 + 16);
      v12 = *(_QWORD *)(v14 + 24);
      swift_bridgeObjectRetain();
      if (v11 >= v12 >> 1)
        sub_1D42C71F0();
      *(_QWORD *)(v14 + 16) = v11 + 1;
      v13 = v14 + 16 * v11;
      *(_QWORD *)(v13 + 32) = v10;
      *(_QWORD *)(v13 + 40) = v9;
      if (!--v3)
        goto LABEL_8;
    }
    __break(1u);
LABEL_11:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
  }
}

void sub_1D4371CA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v23 = MEMORY[0x1E0DEE9D8];
    sub_1D42C737C();
    v19 = a3 + 32;
    v20 = a2 + 32;
    v7 = (unint64_t *)(a1 + 40);
    v21 = a2;
    v22 = a3;
    while (1)
    {
      v8 = *(v7 - 1);
      if ((v8 & 0x8000000000000000) != 0)
        break;
      if (v8 >= *(_QWORD *)(a2 + 16))
        goto LABEL_12;
      v9 = *v7;
      if ((*v7 & 0x8000000000000000) != 0)
        goto LABEL_13;
      if (v9 >= *(_QWORD *)(a3 + 16))
        goto LABEL_14;
      v10 = (uint64_t *)(v20 + 16 * v8);
      v11 = *v10;
      v12 = v10[1];
      v13 = (uint64_t *)(v19 + 16 * v9);
      v15 = *v13;
      v14 = v13[1];
      v16 = *(_QWORD *)(v23 + 16);
      v17 = *(_QWORD *)(v23 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v16 >= v17 >> 1)
        sub_1D42C737C();
      v7 += 2;
      *(_QWORD *)(v23 + 16) = v16 + 1;
      v18 = (_QWORD *)(v23 + 32 * v16);
      v18[4] = v11;
      v18[5] = v12;
      v18[6] = v15;
      v18[7] = v14;
      --v5;
      a2 = v21;
      a3 = v22;
      if (!v5)
        goto LABEL_10;
    }
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_1D4371E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v45;
  uint64_t v46;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char *v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v82 = sub_1D42B28FC(&qword_1EFE4D818);
  v62 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D42B28FC(&qword_1EFE4D820);
  v11 = MEMORY[0x1E0C80A78](v10);
  v71 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v53 - v13;
  v15 = sub_1D42B28FC(&qword_1EFE4D828);
  v59 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x1E0C80A78](v15);
  v64 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v58 = (char *)&v53 - v18;
  if (a1 == a2)
    goto LABEL_2;
  if (a2 < a1)
    goto LABEL_37;
  v61 = a3 + 32;
  v55 = MEMORY[0x1E0DEE9D8];
  v54 = (uint64_t *)(a4 + 40);
  v70 = 0x80000001D4553DF0;
  v19 = a1;
  v68 = a4;
  v57 = a3;
  v60 = a2;
  v56 = a1;
  v77 = v14;
LABEL_5:
  if ((uint64_t)v19 < a2)
  {
    if (a1 < 0)
      goto LABEL_35;
    if (v19 >= *(_QWORD *)(a3 + 16))
      goto LABEL_36;
    v63 = v19;
    v20 = (uint64_t *)(v61 + 16 * v19);
    v21 = v20[1];
    v78 = *v20;
    v79 = v21;
    swift_bridgeObjectRetain();
    v76 = sub_1D42B28FC(&qword_1EFE4D830);
    sub_1D4519D8C();
    v22 = sub_1D4374A40();
    v23 = sub_1D4374A7C();
    v24 = v82;
    v74 = v23;
    v75 = v22;
    sub_1D451A638();
    v25 = v24;
    v26 = (uint64_t)v77;
    v73 = *(void (**)(char *, uint64_t))(v62 + 8);
    v73(v9, v25);
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v26, 1, v15) == 1)
    {
      sub_1D4374AC0(v26);
      swift_bridgeObjectRelease();
      v27 = v63;
LABEL_23:
      a2 = v60;
      goto LABEL_24;
    }
    v28 = v59;
    v29 = v58;
    v67 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 32);
    v67(v58, v26, v15);
    swift_getKeyPath();
    sub_1D4519D98();
    v30 = v68;
    swift_release();
    v66 = MEMORY[0x1D825C07C](v78, v79, v80, v81);
    v32 = v31;
    swift_bridgeObjectRelease();
    v65 = *(void (**)(char *, uint64_t))(v28 + 8);
    v65(v29, v15);
    swift_bridgeObjectRelease();
    v72 = *(_QWORD *)(v30 + 16);
    if (!v72)
    {
      swift_bridgeObjectRelease();
      v27 = v63;
      a1 = v56;
      a3 = v57;
      goto LABEL_23;
    }
    v69 = v32;
    swift_bridgeObjectRetain();
    v33 = 0;
    v34 = v54;
    while (1)
    {
      if (v33 >= *(_QWORD *)(v30 + 16))
      {
        __break(1u);
        break;
      }
      v35 = *v34;
      v78 = *(v34 - 1);
      v79 = v35;
      swift_bridgeObjectRetain();
      sub_1D4519D8C();
      v36 = (uint64_t)v71;
      v37 = v82;
      sub_1D451A638();
      v38 = v37;
      v39 = v36;
      v73(v9, v38);
      if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v36, 1, v15) == 1)
      {
        sub_1D4374AC0(v36);
        swift_bridgeObjectRelease();
      }
      else
      {
        v40 = v64;
        v67(v64, v39, v15);
        swift_getKeyPath();
        sub_1D4519D98();
        swift_release();
        v41 = MEMORY[0x1D825C07C](v78, v79, v80, v81);
        v43 = v42;
        swift_bridgeObjectRelease();
        v65(v40, v15);
        swift_bridgeObjectRelease();
        if (v41 == v66 && v43 == v69)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_28;
        }
        v45 = sub_1D451B820();
        swift_bridgeObjectRelease();
        v30 = v68;
        if ((v45 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_28:
          v46 = v55;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v48 = v56;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1D442F7E8();
            v46 = v51;
          }
          v49 = *(_QWORD *)(v46 + 16);
          v27 = v63;
          if (v49 >= *(_QWORD *)(v46 + 24) >> 1)
          {
            sub_1D442F7E8();
            v27 = v63;
            v46 = v52;
          }
          *(_QWORD *)(v46 + 16) = v49 + 1;
          v55 = v46;
          v50 = v46 + 16 * v49;
          *(_QWORD *)(v50 + 32) = v33;
          *(_QWORD *)(v50 + 40) = v27;
          a3 = v57;
          a2 = v60;
          a1 = v48;
LABEL_24:
          v19 = v27 + 1;
          if (v19 == a2)
          {
LABEL_2:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return;
          }
          goto LABEL_5;
        }
      }
      ++v33;
      v34 += 2;
      if (v72 == v33)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a3 = v57;
        a2 = v60;
        a1 = v56;
        v27 = v63;
        goto LABEL_24;
      }
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_1D4372484()
{
  sub_1D42BE9A8();
  sub_1D4375D98();
  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t sub_1D43724AC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x656372756F73 && a2 == 0xE600000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74616E6974736564 && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D43725A8(char a1)
{
  if ((a1 & 1) != 0)
    return 0x74616E6974736564;
  else
    return 0x656372756F73;
}

uint64_t sub_1D43725E4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x737475706E69 && a2 == 0xE600000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7374757074756FLL && a2 == 0xE700000000000000;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6B63616264656566 && a2 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1D451B820();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1D4372728(char a1)
{
  if (!a1)
    return 0x737475706E69;
  if (a1 == 1)
    return 0x7374757074756FLL;
  return 0x6B63616264656566;
}

uint64_t sub_1D437277C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x7475706E69 && a2 == 0xE500000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x74757074756FLL && a2 == 0xE600000000000000;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6B63616264656566 && a2 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1D451B820();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1D43728B8(char a1)
{
  if (!a1)
    return 0x7475706E69;
  if (a1 == 1)
    return 0x74757074756FLL;
  return 0x6B63616264656566;
}

void sub_1D4372908()
{
  sub_1D4372484();
}

BOOL sub_1D4372910(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D42BA51C(*a1, *a2);
}

uint64_t sub_1D4372920()
{
  return sub_1D42BA644();
}

uint64_t sub_1D4372930()
{
  return sub_1D42BA52C();
}

uint64_t sub_1D4372940()
{
  sub_1D451B958();
  sub_1D42BA52C();
  return sub_1D451B994();
}

uint64_t sub_1D4372984()
{
  char *v0;

  return sub_1D43725A8(*v0);
}

uint64_t sub_1D4372994@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D43724AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D43729BC()
{
  return sub_1D42BA688();
}

uint64_t sub_1D43729E0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D42BA63C();
  *a1 = result;
  return result;
}

uint64_t sub_1D4372A08(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D45301A8, a1);
  return sub_1D451BA3C();
}

uint64_t sub_1D4372A3C(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D45301A8, a1);
  return sub_1D451BA48();
}

BOOL sub_1D4372A70(char *a1, char *a2)
{
  return sub_1D42C4318(*a1, *a2);
}

void sub_1D4372A80()
{
  sub_1D4372484();
}

uint64_t sub_1D4372A9C()
{
  return sub_1D42C4328();
}

void sub_1D4372AA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D4372BA4(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD))sub_1D42C4328);
}

uint64_t sub_1D4372AB4()
{
  char *v0;

  return sub_1D4372728(*v0);
}

uint64_t sub_1D4372AC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D43725E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D4372AE8()
{
  return sub_1D42BA688();
}

uint64_t sub_1D4372B08@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D42C44B8();
  *a1 = result;
  return result;
}

uint64_t sub_1D4372B30(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4530158, a1);
  return sub_1D451BA3C();
}

uint64_t sub_1D4372B64(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4530158, a1);
  return sub_1D451BA48();
}

void sub_1D4372B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D4372BA4(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD))sub_1D4375C58);
}

void sub_1D4372BA4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, _QWORD, _QWORD))
{
  unsigned __int8 *v4;
  _BYTE v7[72];

  sub_1D451B958();
  a4(v7, *v4, *(_QWORD *)(a2 + 16));
  sub_1D42CB230();
  sub_1D42CB708();
}

uint64_t sub_1D4372BE4()
{
  char *v0;

  return sub_1D43728B8(*v0);
}

uint64_t sub_1D4372BF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D437277C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D4372C18(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4530108, a1);
  return sub_1D451BA3C();
}

uint64_t sub_1D4372C4C(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4530108, a1);
  return sub_1D451BA48();
}

uint64_t sub_1D4372C80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36[2];

  swift_bridgeObjectRetain();
  sub_1D42CB7B8();
  v4 = sub_1D4340B50();
  sub_1D4371E24(v4, v5, a1, a2);
  v7 = v6;
  v8 = sub_1D4340B50();
  sub_1D44C92D0(v8, v9);
  v11 = v10;
  v12 = *(_QWORD *)(v7 + 16);
  v13 = MEMORY[0x1E0DEE9D8];
  v35 = v7;
  if (v12)
  {
    sub_1D4375CB0();
    v13 = v36[0];
    v14 = *(_QWORD *)(v36[0] + 16);
    v15 = (uint64_t *)(v7 + 40);
    v16 = v12;
    do
    {
      v18 = *v15;
      v15 += 2;
      v17 = v18;
      v36[0] = v13;
      if (v14 >= *(_QWORD *)(v13 + 24) >> 1)
      {
        sub_1D42C73B0();
        v13 = v36[0];
      }
      *(_QWORD *)(v13 + 16) = v14 + 1;
      *(_QWORD *)(v13 + 8 * v14++ + 32) = v17;
      --v16;
    }
    while (v16);
  }
  sub_1D44C051C(v13, v11);
  sub_1D4375D7C();
  sub_1D44ACE48();
  v20 = v19;
  swift_release();
  sub_1D44C92D0(0, *(_QWORD *)(a2 + 16));
  v22 = v21;
  v23 = MEMORY[0x1E0DEE9D8];
  if (v12)
  {
    sub_1D4375CB0();
    v23 = v36[0];
    v24 = (uint64_t *)(v7 + 32);
    v25 = *(_QWORD *)(v36[0] + 16);
    do
    {
      v27 = *v24;
      v24 += 2;
      v26 = v27;
      v36[0] = v23;
      if (v25 >= *(_QWORD *)(v23 + 24) >> 1)
      {
        sub_1D42C73B0();
        v23 = v36[0];
      }
      *(_QWORD *)(v23 + 16) = v25 + 1;
      *(_QWORD *)(v23 + 8 * v25++ + 32) = v26;
      --v12;
    }
    while (v12);
    v7 = v35;
  }
  sub_1D44C051C(v23, v22);
  sub_1D4375D7C();
  sub_1D44ACE48();
  v29 = v28;
  swift_release();
  v36[0] = v20;
  swift_bridgeObjectRetain();
  sub_1D4374220(v36);
  swift_release();
  v30 = v36[0];
  sub_1D42DCE84();
  sub_1D4371B84(v30, a1);
  v32 = v31;
  swift_release();
  v36[0] = v29;
  swift_bridgeObjectRetain();
  sub_1D4374220(v36);
  swift_release();
  v33 = v36[0];
  sub_1D42CB7B8();
  sub_1D4371B84(v33, a2);
  swift_release();
  sub_1D42DCE84();
  sub_1D42CB7B8();
  sub_1D4371CA8(v7, a2, a1);
  swift_bridgeObjectRelease();
  return v32;
}

uint64_t sub_1D4372F14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;

  v3 = *(_QWORD *)(a2 + 16);
  sub_1D436C124(v3);
  if (!v2)
  {
    v5 = sub_1D436C170(v4);
    sub_1D436C0BC(v3);
    v7 = sub_1D436C108(v6);
    v3 = sub_1D4372C80((uint64_t)v5, (uint64_t)v7);
    sub_1D42B7204();
    swift_bridgeObjectRelease();
  }
  return v3;
}

void sub_1D4372FD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D42BE910();
  type metadata accessor for StreamingModelUtils.Connection.CodingKeys(255, *(_QWORD *)(v0 + 16), v1, v2);
  sub_1D4375D54();
}

void sub_1D4373014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  v11 = sub_1D451B7A8();
  v12 = *(_QWORD *)(v11 - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&a9 - v14;
  sub_1D42B5528(v9, v9[3]);
  sub_1D451BA24();
  *(_BYTE *)(v10 - 65) = 0;
  sub_1D4375DE0();
  v16 = *(_QWORD *)(v10 - 88);
  sub_1D451B760();
  if (!v16)
  {
    *(_BYTE *)(v10 - 66) = 1;
    sub_1D4375DE0();
    sub_1D451B760();
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  sub_1D42BE844();
}

void sub_1D43730EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[12];

  sub_1D42BE910();
  v10[9] = v0;
  v10[2] = v1;
  v10[5] = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1D42BA15C();
  v10[4] = v4;
  MEMORY[0x1E0C80A78](v5);
  v10[8] = (char *)v10 - v6;
  type metadata accessor for StreamingModelUtils.Connection.CodingKeys(255, v7, v8, v9);
  sub_1D4375CA8();
}

void sub_1D4373178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D4340B50();
  v13 = sub_1D451B6E8();
  *(_QWORD *)(v12 - 120) = v13;
  *(_QWORD *)(v12 - 152) = *(_QWORD *)(v13 - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v14);
  sub_1D4340B04();
  *(_QWORD *)(v12 - 128) = v10;
  v17 = type metadata accessor for StreamingModelUtils.Connection(0, v10, v15, v16);
  v18 = *(_QWORD *)(v17 - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&a9 - v20;
  sub_1D42B5528(v9, v9[3]);
  *(_QWORD *)(v12 - 96) = v11;
  v22 = *(_QWORD *)(v12 - 88);
  sub_1D4375DA4();
  if (v22)
  {
    sub_1D42CB9B4();
  }
  else
  {
    v23 = *(_QWORD *)(v12 - 144);
    *(_QWORD *)(v12 - 168) = v18;
    *(_QWORD *)(v12 - 88) = v17;
    v24 = *(_QWORD *)(v12 - 136);
    v25 = *(_QWORD *)(v12 - 128);
    *(_BYTE *)(v12 - 65) = 0;
    sub_1D4375CC8();
    v26 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 32);
    *(_QWORD *)(v12 - 176) = v21;
    v27 = *(_QWORD *)(v12 - 112);
    *(_QWORD *)(v12 - 112) = v26;
    v26(v21, v27, v25);
    *(_BYTE *)(v12 - 66) = 1;
    sub_1D4375CC8();
    sub_1D4375C98();
    v28 = *(_QWORD *)(v12 - 88);
    v29 = *(_QWORD *)(v12 - 176);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 - 112))(v29 + *(int *)(v28 + 28), v23, v25);
    v30 = *(_QWORD *)(v12 - 168);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v30 + 16))(*(_QWORD *)(v12 - 160), v29, v28);
    sub_1D42CB9B4();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v28);
  }
  sub_1D42BE844();
}

uint64_t sub_1D4373308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_1D4375D2C();
  if ((v0 & 1) == 0)
    return 0;
  sub_1D4375DAC(v0, v1, v2, v3);
  return sub_1D4375CF8() & 1;
}

uint64_t sub_1D4373344()
{
  sub_1D451A614();
  return sub_1D451A614();
}

void sub_1D437339C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D42BE910();
  type metadata accessor for StreamingModelUtils.IODescription.CodingKeys(255, v2, v0, v1);
  sub_1D4375D54();
}

void sub_1D43733E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D451B7A8();
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v2);
  sub_1D42B5528(v0, v0[3]);
  sub_1D4375DB8();
  v3 = *(_QWORD *)(v1 - 128);
  sub_1D451BA24();
  *(_QWORD *)(v1 - 72) = *(_QWORD *)(v1 - 136);
  *(_BYTE *)(v1 - 81) = 0;
  sub_1D451AA1C();
  *(_QWORD *)(v1 - 96) = v3;
  sub_1D4375D54();
}

void sub_1D4373480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1D4375D10();
  v6 = *(_QWORD *)(v5 - 120);
  sub_1D451B760();
  if (!v6)
  {
    *(_QWORD *)(v5 - 120) = v3;
    *(_QWORD *)(v5 - 72) = *(_QWORD *)(v5 - 144);
    *(_BYTE *)(v5 - 81) = 1;
    sub_1D4375D10();
    sub_1D451B760();
    v7 = sub_1D4375D68(*(_QWORD *)(v5 - 152));
    sub_1D4375C6C(v7, v4, v8, v9);
    *(_QWORD *)(v5 - 104) = v0;
    sub_1D4375CA8();
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  sub_1D42BE844();
}

void sub_1D4373518(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = a1;
  sub_1D4375D88();
}

void sub_1D437352C()
{
  sub_1D451B760();
  JUMPOUT(0x1D43734D8);
}

void sub_1D4373568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D42BE910();
  type metadata accessor for StreamingModelUtils.IODescription.CodingKeys(255, v0, v1, v2);
  sub_1D4375CA8();
}

uint64_t sub_1D43735A8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  sub_1D4340B50();
  v4 = sub_1D451B6E8();
  *(_QWORD *)(v3 - 128) = v4;
  v5 = *(_QWORD *)(v4 - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v6);
  sub_1D4340B04();
  v8 = v2[3];
  v7 = v2[4];
  *(_QWORD *)(v3 - 120) = v2;
  sub_1D42B5528(v2, v8);
  sub_1D4375DA4();
  if (!v1)
  {
    *(_QWORD *)(v3 - 144) = v5;
    v9 = sub_1D451AA1C();
    *(_BYTE *)(v3 - 81) = 0;
    v10 = *(_QWORD *)(v3 - 136);
    *(_QWORD *)(v3 - 96) = v10;
    MEMORY[0x1D825E41C](MEMORY[0x1E0DEAF40], v9, v3 - 96);
    sub_1D4375CE0();
    *(_BYTE *)(v3 - 81) = 1;
    swift_bridgeObjectRetain();
    sub_1D4375CE0();
    sub_1D4375C6C(255, v0, v12, v13);
    *(_BYTE *)(v3 - 81) = 2;
    *(_QWORD *)(v3 - 104) = v10;
    swift_bridgeObjectRetain();
    sub_1D4375CA8();
  }
  sub_1D4375D90();
  return v7;
}

void sub_1D437379C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((sub_1D451AA34() & 1) != 0 && (sub_1D451AA34() & 1) != 0)
  {
    v12 = type metadata accessor for StreamingModelUtils.Connection(0, a7, v10, v11);
    v13 = a8;
    MEMORY[0x1D825E41C](&unk_1D452FC98, v12, &v13);
    sub_1D451AA34();
  }
  sub_1D42CB6D4();
}

void sub_1D4373848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_bridgeObjectRetain();
  sub_1D4375DF4();
  swift_bridgeObjectRelease();
  sub_1D42DCE84();
  sub_1D4375DF4();
  swift_bridgeObjectRelease();
  v10 = type metadata accessor for StreamingModelUtils.Connection(0, a5, v8, v9);
  v11 = a6;
  sub_1D42CB7B8();
  MEMORY[0x1D825E41C](&unk_1D452FC4C, v10, &v11);
  sub_1D451AA28();
  swift_bridgeObjectRelease();
  sub_1D42CB6D4();
}

uint64_t sub_1D43738FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _BYTE v11[72];

  sub_1D42BE9A8();
  sub_1D4373848((uint64_t)v11, a1, a2, a3, a4, a5);
  return sub_1D42CB230();
}

void sub_1D4373964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D42BE910();
  type metadata accessor for StreamingModelUtils.FlowIODescription.CodingKeys(255, *(_QWORD *)(v0 + 16), v1, v2);
  sub_1D4375D54();
}

void sub_1D43739A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v12 = sub_1D451B7A8();
  v13 = *(_QWORD *)(v12 - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&a9 - v15;
  sub_1D42B5528(v9, v9[3]);
  sub_1D4375DB8();
  v18 = *(_QWORD *)(v11 - 128);
  v17 = *(_QWORD *)(v11 - 120);
  sub_1D451BA24();
  *(_BYTE *)(v11 - 72) = 0;
  v19 = *(_QWORD *)(v11 - 112);
  sub_1D451B760();
  if (!v19)
  {
    v20 = *(_QWORD *)(v11 - 136);
    *(_BYTE *)(v11 - 72) = 1;
    sub_1D42CB068();
    v21 = sub_1D4375D68(*(_QWORD *)(v17 + *(int *)(v20 + 32)));
    sub_1D4375C6C(v21, v10, v22, v23);
    *(_QWORD *)(v11 - 96) = v18;
    sub_1D4375CA8();
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  sub_1D42BE844();
}

void sub_1D4373AF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[14];

  sub_1D42BE910();
  v10[8] = v0;
  v10[1] = v1;
  v10[5] = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1D42BA15C();
  v10[3] = v4;
  MEMORY[0x1E0C80A78](v5);
  v10[6] = (char *)v10 - v6;
  type metadata accessor for StreamingModelUtils.FlowIODescription.CodingKeys(255, v7, v8, v9);
  sub_1D4375CA8();
}

void sub_1D4373B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(_QWORD, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;

  sub_1D4340B50();
  v13 = sub_1D451B6E8();
  *(_QWORD *)(v12 - 120) = v13;
  *(_QWORD *)(v12 - 176) = *(_QWORD *)(v13 - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&a9 - v15;
  *(_QWORD *)(v12 - 160) = v9;
  v19 = type metadata accessor for StreamingModelUtils.FlowIODescription(0, v9, v17, v18);
  v20 = *(_QWORD *)(v19 - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v21);
  sub_1D4340B04();
  sub_1D42B5528(v10, v10[3]);
  *(_QWORD *)(v12 - 136) = v16;
  v22 = *(_QWORD *)(v12 - 112);
  sub_1D4375DA4();
  if (!v22)
  {
    *(_QWORD *)(v12 - 192) = v20;
    *(_QWORD *)(v12 - 112) = v11;
    v23 = *(_QWORD *)(v12 - 152);
    *(_BYTE *)(v12 - 72) = 0;
    v25 = *(_QWORD *)(v12 - 168);
    v24 = *(_QWORD *)(v12 - 160);
    sub_1D451B688();
    v26 = *(void (**)(_QWORD, uint64_t, uint64_t))(v23 + 32);
    v26(*(_QWORD *)(v12 - 112), *(_QWORD *)(v12 - 144), v24);
    *(_BYTE *)(v12 - 72) = 1;
    sub_1D451B688();
    v26(*(_QWORD *)(v12 - 112) + *(int *)(v19 + 28), v25, v24);
    sub_1D4375C6C(255, v24, v27, v28);
    *(_BYTE *)(v12 - 81) = 2;
    *(_QWORD *)(v12 - 96) = *(_QWORD *)(v12 - 128);
    sub_1D4375CA8();
  }
  sub_1D42B5400((uint64_t)v10);
  sub_1D42BE844();
}

void sub_1D4373DF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if ((sub_1D4375D2C() & 1) != 0)
  {
    v0 = sub_1D4340B50();
    type metadata accessor for StreamingModelUtils.FlowIODescription(v0, v1, v2, v3);
    v4 = sub_1D4375CF8();
    if ((v4 & 1) != 0)
    {
      sub_1D4375DAC(v4, v5, v6, v7);
      sub_1D4375D5C();
    }
  }
  sub_1D42CB6D4();
}

void sub_1D4373E78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a2 + 16);
  sub_1D451A614();
  sub_1D451A614();
  type metadata accessor for StreamingModelUtils.Connection(0, v2, v3, v4);
  sub_1D42CB7B8();
  sub_1D4375D5C();
}

void sub_1D4373EF0()
{
  sub_1D451AA28();
  swift_bridgeObjectRelease();
  sub_1D42CB6D4();
}

void sub_1D4373F14(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t, uint64_t))
{
  _BYTE v6[72];

  sub_1D42BE9A8();
  a3(v6, a1, a2);
  sub_1D42CB230();
  sub_1D42CB708();
}

void sub_1D4373F54()
{
  sub_1D4372FD0();
}

void sub_1D4373F6C()
{
  sub_1D43730EC();
}

uint64_t sub_1D4373F88()
{
  return sub_1D4373308();
}

void sub_1D4373F94(uint64_t a1, uint64_t a2)
{
  sub_1D4373F14(a1, *(_QWORD *)(a2 - 8), (void (*)(_BYTE *, uint64_t, uint64_t))sub_1D4373344);
}

uint64_t sub_1D4373FB4()
{
  return sub_1D4373344();
}

void sub_1D4373FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D4374148(a1, a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))sub_1D4373344);
}

void sub_1D4373FC8()
{
  sub_1D437339C();
}

void sub_1D4373FF0()
{
  sub_1D4373568();
}

uint64_t sub_1D437400C(uint64_t result, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  if (!v4)
  {
    *v3 = result;
    v3[1] = a2;
    v3[2] = a3;
  }
  return result;
}

void sub_1D4374024(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  sub_1D437379C(*a1, a1[1], a1[2], *a2, a2[1], a2[2], *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8));
}

uint64_t sub_1D437404C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1D43738FC(*v2, v2[1], v2[2], *(_QWORD *)(a1 + 16), *(_QWORD *)(a2 - 8));
}

void sub_1D4374064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  sub_1D4373848(a1, *v3, v3[1], v3[2], *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8));
}

uint64_t sub_1D437407C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  _BYTE v7[72];

  v5 = *(_QWORD *)(a3 - 8);
  sub_1D451B958();
  sub_1D4373848((uint64_t)v7, *v3, v3[1], v3[2], *(_QWORD *)(a2 + 16), v5);
  return sub_1D451B994();
}

void sub_1D43740D4()
{
  sub_1D4373964();
}

void sub_1D43740EC()
{
  sub_1D4373AF4();
}

void sub_1D4374108()
{
  sub_1D4373DF8();
}

void sub_1D4374114(uint64_t a1, uint64_t a2)
{
  sub_1D4373F14(a1, *(_QWORD *)(a2 - 8), (void (*)(_BYTE *, uint64_t, uint64_t))sub_1D4373E78);
}

void sub_1D4374134(uint64_t a1, uint64_t a2)
{
  sub_1D4373E78(a1, a2);
}

void sub_1D437413C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D4374148(a1, a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))sub_1D4373E78);
}

void sub_1D4374148(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, uint64_t, uint64_t))
{
  uint64_t v6;
  _BYTE v7[72];

  v6 = *(_QWORD *)(a3 - 8);
  sub_1D451B958();
  a4(v7, a2, v6);
  sub_1D42CB230();
  sub_1D42CB708();
}

uint64_t sub_1D437418C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x1D825E41C](&unk_1D452FBB0, a1, &v4);
}

uint64_t sub_1D43741C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x1D825E41C](&unk_1D452FC98, a1, &v4);
}

uint64_t type metadata accessor for StreamingModelUtils.Connection.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StreamingModelUtils.Connection.CodingKeys);
}

uint64_t type metadata accessor for StreamingModelUtils.Connection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StreamingModelUtils.Connection);
}

uint64_t type metadata accessor for StreamingModelUtils.IODescription.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StreamingModelUtils.IODescription.CodingKeys);
}

void sub_1D4374220(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1D42DC8A0();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_1D4374288(v5);
  *a1 = v2;
}

void sub_1D4374288(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  unint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  char v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;

  v3 = a1[1];
  v4 = sub_1D451B7B4();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_1D4374858(0, v3, 1, a1);
      return;
    }
    goto LABEL_124;
  }
  v5 = v4;
  sub_1D43E2B84(v3 / 2);
  v87 = a1;
  v88 = v6;
  v92 = v7;
  v90 = v3;
  if (v3 <= 0)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    v27 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_90:
    if (v27 < 2)
    {
LABEL_101:
      swift_bridgeObjectRelease();
      if (v90 >= -1)
      {
        *(_QWORD *)(v88 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_129;
    }
    v79 = *v87;
    while (1)
    {
      v80 = v27 - 2;
      if (v27 < 2)
        break;
      if (!v79)
        goto LABEL_133;
      v81 = *(_QWORD *)(v10 + 32 + 16 * v80);
      v82 = *(_QWORD *)(v10 + 32 + 16 * (v27 - 1) + 8);
      sub_1D43748B0((uint64_t *)(v79 + 8 * v81), (uint64_t *)(v79 + 8 * *(_QWORD *)(v10 + 32 + 16 * (v27 - 1))), v79 + 8 * v82, v92);
      if (v1)
        goto LABEL_86;
      if (v82 < v81)
        goto LABEL_119;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D4333298(v10);
        v10 = v85;
      }
      if (v80 >= *(_QWORD *)(v10 + 16))
        goto LABEL_120;
      v83 = (_QWORD *)(v10 + 32 + 16 * v80);
      *v83 = v81;
      v83[1] = v82;
      v84 = *(_QWORD *)(v10 + 16);
      if (v27 > v84)
        goto LABEL_121;
      memmove((void *)(v10 + 32 + 16 * (v27 - 1)), (const void *)(v10 + 32 + 16 * v27), 16 * (v84 - v27));
      *(_QWORD *)(v10 + 16) = v84 - 1;
      v27 = v84 - 1;
      if (v84 <= 2)
        goto LABEL_101;
    }
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    return;
  }
  v8 = 0;
  v9 = *a1;
  v86 = *a1 - 8;
  v10 = MEMORY[0x1E0DEE9D8];
  v89 = v5;
  v91 = *a1;
  while (1)
  {
    v11 = v8++;
    if (v8 < v3)
    {
      v12 = *(_QWORD *)(v9 + 8 * v8);
      v13 = *(_QWORD *)(v9 + 8 * v11);
      v8 = v11 + 2;
      if (v11 + 2 < v3)
      {
        v14 = v12;
        while (1)
        {
          v15 = *(_QWORD *)(v9 + 8 * v8);
          if (v12 < v13 == v15 >= v14)
            break;
          ++v8;
          v14 = v15;
          if (v8 >= v3)
          {
            v8 = v3;
            break;
          }
        }
      }
      if (v12 < v13)
      {
        if (v8 < v11)
          goto LABEL_126;
        if (v11 < v8)
        {
          v16 = v8 - 1;
          v17 = v11;
          do
          {
            if (v17 != v16)
            {
              if (!v9)
                goto LABEL_132;
              v18 = *(_QWORD *)(v9 + 8 * v17);
              *(_QWORD *)(v9 + 8 * v17) = *(_QWORD *)(v9 + 8 * v16);
              *(_QWORD *)(v9 + 8 * v16) = v18;
            }
            v58 = ++v17 < v16--;
          }
          while (v58);
        }
      }
    }
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v11))
        goto LABEL_123;
      if (v8 - v11 < v5)
      {
        v19 = v11 + v5;
        if (__OFADD__(v11, v5))
          goto LABEL_127;
        if (v19 >= v3)
          v19 = v3;
        if (v19 < v11)
          goto LABEL_128;
        if (v8 != v19)
        {
          v20 = (uint64_t *)(v86 + 8 * v8);
          do
          {
            v21 = *(_QWORD *)(v9 + 8 * v8);
            v22 = v11;
            v23 = v20;
            do
            {
              v24 = *v23;
              if (v21 >= *v23)
                break;
              if (!v9)
                goto LABEL_130;
              *v23 = v21;
              v23[1] = v24;
              --v23;
              ++v22;
            }
            while (v8 != v22);
            ++v8;
            ++v20;
          }
          while (v8 != v19);
          v8 = v19;
        }
      }
    }
    if (v8 < v11)
      goto LABEL_122;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1D43331B0(0, *(_QWORD *)(v10 + 16) + 1, 1, (char *)v10);
      v10 = v77;
    }
    v26 = *(_QWORD *)(v10 + 16);
    v25 = *(_QWORD *)(v10 + 24);
    v27 = v26 + 1;
    v9 = v91;
    if (v26 >= v25 >> 1)
    {
      sub_1D43331B0(v25 > 1, v26 + 1, 1, (char *)v10);
      v9 = v91;
      v10 = v78;
    }
    *(_QWORD *)(v10 + 16) = v27;
    v28 = v10 + 32;
    v29 = (uint64_t *)(v10 + 32 + 16 * v26);
    *v29 = v11;
    v29[1] = v8;
    if (v26)
      break;
    v27 = 1;
LABEL_81:
    v5 = v89;
    v3 = v90;
    if (v8 >= v90)
      goto LABEL_90;
  }
  while (1)
  {
    v30 = v27 - 1;
    if (v27 >= 4)
    {
      v35 = v28 + 16 * v27;
      v36 = *(_QWORD *)(v35 - 64);
      v37 = *(_QWORD *)(v35 - 56);
      v41 = __OFSUB__(v37, v36);
      v38 = v37 - v36;
      if (v41)
        goto LABEL_107;
      v40 = *(_QWORD *)(v35 - 48);
      v39 = *(_QWORD *)(v35 - 40);
      v41 = __OFSUB__(v39, v40);
      v33 = v39 - v40;
      v34 = v41;
      if (v41)
        goto LABEL_108;
      v42 = v27 - 2;
      v43 = (uint64_t *)(v28 + 16 * (v27 - 2));
      v45 = *v43;
      v44 = v43[1];
      v41 = __OFSUB__(v44, v45);
      v46 = v44 - v45;
      if (v41)
        goto LABEL_109;
      v41 = __OFADD__(v33, v46);
      v47 = v33 + v46;
      if (v41)
        goto LABEL_111;
      if (v47 >= v38)
      {
        v65 = (uint64_t *)(v28 + 16 * v30);
        v67 = *v65;
        v66 = v65[1];
        v41 = __OFSUB__(v66, v67);
        v68 = v66 - v67;
        if (v41)
          goto LABEL_117;
        v58 = v33 < v68;
        goto LABEL_70;
      }
    }
    else
    {
      if (v27 != 3)
      {
        v59 = *(_QWORD *)(v10 + 32);
        v60 = *(_QWORD *)(v10 + 40);
        v41 = __OFSUB__(v60, v59);
        v52 = v60 - v59;
        v53 = v41;
        goto LABEL_64;
      }
      v32 = *(_QWORD *)(v10 + 32);
      v31 = *(_QWORD *)(v10 + 40);
      v41 = __OFSUB__(v31, v32);
      v33 = v31 - v32;
      v34 = v41;
    }
    if ((v34 & 1) != 0)
      goto LABEL_110;
    v42 = v27 - 2;
    v48 = (uint64_t *)(v28 + 16 * (v27 - 2));
    v50 = *v48;
    v49 = v48[1];
    v51 = __OFSUB__(v49, v50);
    v52 = v49 - v50;
    v53 = v51;
    if (v51)
      goto LABEL_112;
    v54 = (uint64_t *)(v28 + 16 * v30);
    v56 = *v54;
    v55 = v54[1];
    v41 = __OFSUB__(v55, v56);
    v57 = v55 - v56;
    if (v41)
      goto LABEL_114;
    if (__OFADD__(v52, v57))
      goto LABEL_116;
    if (v52 + v57 >= v33)
    {
      v58 = v33 < v57;
LABEL_70:
      if (v58)
        v30 = v42;
      goto LABEL_72;
    }
LABEL_64:
    if ((v53 & 1) != 0)
      goto LABEL_113;
    v61 = (uint64_t *)(v28 + 16 * v30);
    v63 = *v61;
    v62 = v61[1];
    v41 = __OFSUB__(v62, v63);
    v64 = v62 - v63;
    if (v41)
      goto LABEL_115;
    if (v64 < v52)
      goto LABEL_81;
LABEL_72:
    v69 = v10;
    v70 = v30 - 1;
    if (v30 - 1 >= v27)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (!v9)
      goto LABEL_131;
    v71 = (uint64_t *)(v28 + 16 * v70);
    v72 = *v71;
    v73 = v28;
    v74 = (_QWORD *)(v28 + 16 * v30);
    v75 = v74[1];
    sub_1D43748B0((uint64_t *)(v9 + 8 * *v71), (uint64_t *)(v9 + 8 * *v74), v9 + 8 * v75, v92);
    if (v1)
      break;
    if (v75 < v72)
      goto LABEL_104;
    if (v30 > *(_QWORD *)(v69 + 16))
      goto LABEL_105;
    *v71 = v72;
    *(_QWORD *)(v73 + 16 * v70 + 8) = v75;
    v76 = *(_QWORD *)(v69 + 16);
    if (v30 >= v76)
      goto LABEL_106;
    v10 = v69;
    v27 = v76 - 1;
    memmove(v74, v74 + 2, 16 * (v76 - 1 - v30));
    v28 = v73;
    *(_QWORD *)(v69 + 16) = v76 - 1;
    v9 = v91;
    if (v76 <= 2)
      goto LABEL_81;
  }
LABEL_86:
  swift_bridgeObjectRelease();
  if (v90 < -1)
    goto LABEL_125;
  *(_QWORD *)(v88 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_1D4374858(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 8 * a3 - 8;
    while (2)
    {
      v6 = *(_QWORD *)(v4 + 8 * a3);
      v7 = result;
      v8 = (uint64_t *)v5;
      do
      {
        v9 = *v8;
        if (v6 >= *v8)
          break;
        if (!v4)
        {
          __break(1u);
          return result;
        }
        *v8 = v6;
        v8[1] = v9;
        --v8;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 8;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1D43748B0(uint64_t *a1, uint64_t *a2, unint64_t a3, uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v14;
  BOOL v15;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  BOOL v21;
  BOOL v22;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = (char *)a2 - (char *)a1;
  v9 = a2 - a1;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 8;
  if (v9 >= v11)
  {
    sub_1D42C6630(a2, (uint64_t)(a3 - (_QWORD)a2) / 8, a4);
    v12 = &v4[v11];
    if (v7 >= v6 || v10 < 8)
      goto LABEL_39;
    v18 = (uint64_t *)(a3 - 8);
    while (1)
    {
      v19 = v18 + 1;
      v20 = *(v6 - 1);
      if (*(v12 - 1) >= v20)
      {
        v22 = v19 != v12 || v18 >= v12;
        v20 = *--v12;
        if (!v22)
          goto LABEL_35;
      }
      else
      {
        v21 = v19 != v6 || v18 >= v6;
        --v6;
        if (!v21)
          goto LABEL_35;
      }
      *v18 = v20;
LABEL_35:
      --v18;
      if (v6 <= v7 || v12 <= v4)
        goto LABEL_39;
    }
  }
  sub_1D42C6630(a1, a2 - a1, a4);
  v12 = &v4[v9];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      v14 = *v6;
      if (*v6 < *v4)
        break;
      v14 = *v4;
      v15 = v7 == v4++;
      if (!v15)
        goto LABEL_11;
LABEL_12:
      ++v7;
      if (v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_17;
    }
    v15 = v7 == v6++;
    if (v15)
      goto LABEL_12;
LABEL_11:
    *v7 = v14;
    goto LABEL_12;
  }
LABEL_17:
  v6 = v7;
LABEL_39:
  sub_1D42C6630(v4, v12 - v4, v6);
  return 1;
}

uint64_t type metadata accessor for StreamingModelUtils.FlowIODescription.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StreamingModelUtils.FlowIODescription.CodingKeys);
}

uint64_t type metadata accessor for StreamingModelUtils.FlowIODescription(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StreamingModelUtils.FlowIODescription);
}

unint64_t sub_1D4374A40()
{
  unint64_t result;

  result = qword_1EFE4D838;
  if (!qword_1EFE4D838)
  {
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0DEA980], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EFE4D838);
  }
  return result;
}

unint64_t sub_1D4374A7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFE4D840[0];
  if (!qword_1EFE4D840[0])
  {
    v1 = sub_1D42B8B10(&qword_1EFE4D818);
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0DF1F60], v1);
    atomic_store(result, qword_1EFE4D840);
  }
  return result;
}

uint64_t sub_1D4374AC0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D42B28FC(&qword_1EFE4D820);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for StreamingModelUtils()
{
  return &type metadata for StreamingModelUtils;
}

uint64_t storeEnumTagSinglePayload for StreamingModelUtils.DomainError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D4374B5C + 4 * byte_1D452FA45[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D4374B90 + 4 * asc_1D452FA40[v4]))();
}

uint64_t sub_1D4374B90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4374B98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4374BA0);
  return result;
}

uint64_t sub_1D4374BAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4374BB4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D4374BB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4374BC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StreamingModelUtils.DomainError()
{
  return &type metadata for StreamingModelUtils.DomainError;
}

uint64_t sub_1D4374BE4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D4374C30 + 4 * byte_1D452FA4F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D4374C64 + 4 * byte_1D452FA4A[v4]))();
}

uint64_t sub_1D4374C64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4374C6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4374C74);
  return result;
}

uint64_t sub_1D4374C80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4374C88);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D4374C8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4374C94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4374CA0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D4374CEC + 4 * byte_1D452FA59[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D4374D20 + 4 * byte_1D452FA54[v4]))();
}

uint64_t sub_1D4374D20(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4374D28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4374D30);
  return result;
}

uint64_t sub_1D4374D3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4374D44);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D4374D48(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4374D50(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4374D5C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D4374DC8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v16;
  void (*v17)(uint64_t *, uint64_t *, uint64_t);

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = v8;
  v10 = ~(unint64_t)v8;
  v11 = v7 + v8;
  v12 = (v11 & v10) + v7;
  v13 = v8 & 0x100000;
  if (v9 > 7 || v13 != 0 || v12 > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v9 + 16) & v10));
    swift_retain();
  }
  else
  {
    v17 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v17(a1, a2, *(_QWORD *)(a3 + 16));
    v17((uint64_t *)(((unint64_t)v4 + v11) & v10), (uint64_t *)(((unint64_t)a2 + v11) & v10), v5);
  }
  return v4;
}

uint64_t sub_1D4374E7C(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v6)(unint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = *(uint64_t (**)(unint64_t, uint64_t))(v4 + 8);
  v6(a1, v3);
  return v6((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), v3);
}

unint64_t sub_1D4374EE4(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_1D4374F50(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_1D4374FBC(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_1D4375028(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

uint64_t sub_1D4375094(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1D4375154 + 4 * byte_1D452FA5E[(v8 - 1)]))();
}

void sub_1D43751A0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0u;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t sub_1D437535C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1D437538C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1D43753D8(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D437544C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for StreamingModelUtils.IODescription(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StreamingModelUtils.IODescription);
}

uint64_t sub_1D43754A4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D4375520(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t *, uint64_t *, uint64_t);
  unint64_t v19;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = v8;
  v10 = v7 + v8;
  v11 = v7 + 7;
  v12 = ((v7 + 7 + (v10 & ~(unint64_t)v8)) & 0xFFFFFFFFFFFFFFF8) + 8;
  v13 = v8 & 0x100000;
  if (v9 > 7 || v13 != 0 || v12 > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v9 & 0xF8 ^ 0x1F8) & (v9 + 16)));
    swift_retain();
  }
  else
  {
    v17 = ~v9;
    v18 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v18(a1, a2, *(_QWORD *)(a3 + 16));
    v19 = ((unint64_t)a2 + v10) & v17;
    v18((uint64_t *)(((unint64_t)v4 + v10) & v17), (uint64_t *)v19, v5);
    *(_QWORD *)((v11 + (((unint64_t)v4 + v10) & v17)) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v11 + v19) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1D4375614(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void (*v5)(unint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(void (**)(unint64_t, uint64_t))(v4 + 8);
  v5(a1, v3);
  v5((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4375684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v8 + v9 + a1) & ~v9;
  v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  *(_QWORD *)((v8 + 7 + v10) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v8 + 7 + v11) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D4375718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v8 + v9 + a1) & ~v9;
  v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  *(_QWORD *)((v8 + 7 + v10) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((v8 + 7 + v11) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D43757B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v8 + v9 + a1) & ~v9;
  v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  *(_QWORD *)((v8 + 7 + v10) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v8 + 7 + v11) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D4375848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v8 + v9 + a1) & ~v9;
  v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  *(_QWORD *)((v8 + 7 + v10) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((v8 + 7 + v11) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D43758E0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  unint64_t v16;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = *(unsigned __int8 *)(v5 + 80);
  v10 = v8 + v9;
  v11 = v8 + 7;
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v16 = *(_QWORD *)((v11 + ((v10 + a1) & ~v9)) & 0xFFFFFFFFFFFFF8);
      if (v16 >= 0xFFFFFFFF)
        LODWORD(v16) = -1;
      return (v16 + 1);
    }
    else
    {
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v6, v4);
    }
  }
  else
  {
    if (((((v11 + (v10 & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v12 = 2;
    else
      v12 = a2 - v7 + 1;
    if (v12 >= 0x10000)
      v13 = 4;
    else
      v13 = 2;
    if (v12 < 0x100)
      v13 = 1;
    if (v12 >= 2)
      v14 = v13;
    else
      v14 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1D437596C + 4 * byte_1D452FA6C[v14]))();
  }
}

void sub_1D43759F4(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(v5 + 80);
  if (v6 >= a3)
  {
    v11 = 0u;
  }
  else
  {
    if ((((_DWORD)v7 + 7 + (((_DWORD)v7 + (_DWORD)v8) & ~(_DWORD)v8)) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v9 = a3 - v6 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
  }
  if (a2 > v6)
  {
    if ((((_DWORD)v7 + 7 + (((_DWORD)v7 + (_DWORD)v8) & ~(_DWORD)v8)) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      v12 = ~v6 + a2;
      bzero(a1, ((v7 + 7 + ((v7 + v8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 8);
      *a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t sub_1D4375AF4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD *v9;
  uint64_t v10;

  *(_BYTE *)(v6 + v7) = 0;
  if ((_DWORD)a1)
  {
    if (a2 < 0x7FFFFFFF)
    {
      v9 = (_QWORD *)((v5 + ((v4 + v6) & a4)) & 0xFFFFFFFFFFFFFFF8);
      if ((a1 & 0x80000000) != 0)
        v10 = a1 ^ 0x80000000;
      else
        v10 = (a1 - 1);
      *v9 = v10;
    }
    else
    {
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v6, a1, a2, a3);
    }
  }
  return result;
}

void sub_1D4375B84()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D4375B94()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D4375BA4()
{
  JUMPOUT(0x1D825E41CLL);
}

unint64_t sub_1D4375BB8()
{
  unint64_t result;

  result = qword_1EFE4DB48;
  if (!qword_1EFE4DB48)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45300A0, &type metadata for StreamingModelUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4DB48);
  }
  return result;
}

void sub_1D4375BF4()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D4375C04()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D4375C14()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D4375C24()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D4375C34()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D4375C44()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D4375C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for StreamingModelUtils.Connection(a1, a2, a3, a4);
  return sub_1D451AA1C();
}

uint64_t sub_1D4375C88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t sub_1D4375C98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v1 + 8))(*(_QWORD *)(v2 - 96), v0);
}

void sub_1D4375CA8()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D4375CB0()
{
  sub_1D42C73B0();
}

uint64_t sub_1D4375CC8()
{
  return sub_1D451B688();
}

uint64_t sub_1D4375CE0()
{
  return sub_1D451B688();
}

uint64_t sub_1D4375CF8()
{
  return sub_1D451A698();
}

uint64_t sub_1D4375D10()
{
  uint64_t v0;

  return v0 - 72;
}

uint64_t sub_1D4375D2C()
{
  return sub_1D451A698();
}

uint64_t sub_1D4375D40()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 176) + 8))(v0, *(_QWORD *)(v1 - 120));
}

void sub_1D4375D54()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D4375D5C()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D4375D68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = a1;
  *(_BYTE *)(v1 - 81) = 2;
  return 255;
}

uint64_t sub_1D4375D7C()
{
  return swift_bridgeObjectRelease();
}

void sub_1D4375D88()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D4375D90()
{
  uint64_t v0;

  return sub_1D42B5400(*(_QWORD *)(v0 - 120));
}

uint64_t sub_1D4375D98()
{
  return sub_1D451B964();
}

uint64_t sub_1D4375DA4()
{
  return sub_1D451BA0C();
}

uint64_t sub_1D4375DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for StreamingModelUtils.Connection(0, v4, a3, a4);
}

uint64_t sub_1D4375DB8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4375DCC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4375DF4()
{
  return sub_1D451AA28();
}

uint64_t sub_1D4375E00()
{
  return sub_1D451B97C();
}

uint64_t sub_1D4375E24(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x746E65696C63 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1D451B820();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1D4375EA0()
{
  return 0x746E65696C63;
}

uint64_t sub_1D4375EB4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_1D42B28FC(&qword_1EFE4DB78);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42B5528(a1, a1[3]);
  sub_1D4376500();
  sub_1D451BA24();
  sub_1D451B790();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1D4375F94()
{
  sub_1D451B958();
  sub_1D451B97C();
  return sub_1D451B994();
}

uint64_t sub_1D4375FD8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v3 = sub_1D42B28FC(&qword_1EFE4DB68);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t)sub_1D42B5528(a1, a1[3]);
  sub_1D4376500();
  sub_1D451BA0C();
  if (!v1)
  {
    v7 = sub_1D451B6B8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_1D42B5400((uint64_t)a1);
  return v7;
}

uint64_t sub_1D43760E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D4375E24(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D4376108()
{
  sub_1D4376500();
  return sub_1D451BA3C();
}

uint64_t sub_1D4376130()
{
  sub_1D4376500();
  return sub_1D451BA48();
}

uint64_t sub_1D4376158@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1D4375FD8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1D4376180(_QWORD *a1)
{
  return sub_1D4375EB4(a1);
}

uint64_t sub_1D4376198()
{
  return sub_1D4375F94();
}

uint64_t sub_1D43761A0()
{
  return sub_1D4375E00();
}

uint64_t sub_1D43761A8()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1D43761CC()
{
  sub_1D43761A8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SharedAOPResultsStream.Instance()
{
  return objc_opt_self();
}

uint64_t sub_1D437620C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v9;
  __int16 v10;
  char v11;
  char v12;
  _QWORD v13[6];

  v1 = v0;
  v13[5] = *MEMORY[0x1E0C80C00];
  v2 = v0 + OBJC_IVAR____TtCV13SoundAnalysis22SharedAOPResultsStream15AOPSubscription_trackingID;
  sub_1D43C4750(v0 + OBJC_IVAR____TtCV13SoundAnalysis22SharedAOPResultsStream15AOPSubscription_trackingID);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtCV13SoundAnalysis22SharedAOPResultsStream15AOPSubscription_connect);
  v13[3] = type metadata accessor for IOConnect();
  v13[4] = &off_1E97AD280;
  v13[0] = v3;
  v9 = *(_DWORD *)(v1 + OBJC_IVAR____TtCV13SoundAnalysis22SharedAOPResultsStream15AOPSubscription_client);
  v10 = 1;
  v11 = 0;
  swift_retain();
  v4 = sub_1D43C3A7C((uint64_t)&v9, (uint64_t)&v12);
  v6 = v5;
  sub_1D43C6904((uint64_t)v13, 35, v4, v5);
  sub_1D42B5420(v4, v6);
  sub_1D42B5400((uint64_t)v13);
  v7 = sub_1D4519D20();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v2, v7);
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1D43763B4()
{
  sub_1D437620C();
  return swift_deallocClassInstance();
}

uint64_t sub_1D43763D8()
{
  return type metadata accessor for SharedAOPResultsStream.AOPSubscription();
}

uint64_t type metadata accessor for SharedAOPResultsStream.AOPSubscription()
{
  uint64_t result;

  result = qword_1EFE4DB50;
  if (!qword_1EFE4DB50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D4376418()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D4519D20();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedAOPResultsStream()
{
  return &type metadata for SharedAOPResultsStream;
}

ValueMetadata *type metadata accessor for SharedAOPResultsStream.Configuration()
{
  return &type metadata for SharedAOPResultsStream.Configuration;
}

unint64_t sub_1D43764C4()
{
  unint64_t result;

  result = qword_1EFE4DB60;
  if (!qword_1EFE4DB60)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45302B8, &type metadata for SharedAOPResultsStream.Configuration);
    atomic_store(result, (unint64_t *)&qword_1EFE4DB60);
  }
  return result;
}

unint64_t sub_1D4376500()
{
  unint64_t result;

  result = qword_1EFE4DB70;
  if (!qword_1EFE4DB70)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4530434, &type metadata for SharedAOPResultsStream.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DB70);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SharedAOPResultsStream.Configuration.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D437657C + 4 * byte_1D4530200[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D437659C + 4 * byte_1D4530205[v4]))();
}

_BYTE *sub_1D437657C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D437659C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D43765A4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D43765AC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D43765B4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D43765BC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SharedAOPResultsStream.Configuration.CodingKeys()
{
  return &type metadata for SharedAOPResultsStream.Configuration.CodingKeys;
}

unint64_t sub_1D43765DC()
{
  unint64_t result;

  result = qword_1EFE4DB80;
  if (!qword_1EFE4DB80)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453040C, &type metadata for SharedAOPResultsStream.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DB80);
  }
  return result;
}

unint64_t sub_1D437661C()
{
  unint64_t result;

  result = qword_1EFE4DB88;
  if (!qword_1EFE4DB88)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453037C, &type metadata for SharedAOPResultsStream.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DB88);
  }
  return result;
}

unint64_t sub_1D437665C()
{
  unint64_t result;

  result = qword_1EFE4DB90[0];
  if (!qword_1EFE4DB90[0])
  {
    result = MEMORY[0x1D825E41C](&unk_1D45303A4, &type metadata for SharedAOPResultsStream.Configuration.CodingKeys);
    atomic_store(result, qword_1EFE4DB90);
  }
  return result;
}

uint64_t sub_1D4376698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[14] = a4;
  v5[15] = a5;
  v5[12] = a1;
  v5[13] = a3;
  v5[16] = *(_QWORD *)(a4 - 8);
  v5[17] = sub_1D42F9B80();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43766D8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  sub_1D42E3C44();
  v1 = v0[13];
  sub_1D4377088(v1, (uint64_t)(v0 + 10), (uint64_t *)&unk_1EFE4E130);
  type metadata accessor for XPCDataDecoder();
  v2 = sub_1D42B8DB4();
  sub_1D4377088((uint64_t)(v0 + 10), v2 + 16, (uint64_t *)&unk_1EFE4E130);
  sub_1D43770E8(v1 + 16, (uint64_t)(v0 + 2));
  type metadata accessor for XPCProxyDecoder();
  v3 = sub_1D42B6F40();
  sub_1D43770E8((uint64_t)(v0 + 2), v3 + 16);
  type metadata accessor for XPCDecoder();
  inited = swift_initStackObject();
  v0[18] = inited;
  *(_QWORD *)(inited + 16) = v2;
  *(_QWORD *)(inited + 24) = v3;
  sub_1D437713C();
  sub_1D42E2EFC(v0 + 2);
  v5 = (_QWORD *)sub_1D4377104();
  v0[19] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_1D43767C0;
  sub_1D4377128();
  return sub_1D43770D0(v6, v7, v8, v9, v10);
}

uint64_t sub_1D43767C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4376818()
{
  uint64_t (*v0)(void);

  swift_setDeallocating();
  sub_1D43761A8();
  sub_1D4377118();
  sub_1D43770F0();
  sub_1D42E3E54();
  v0 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42E39BC(v0);
}

uint64_t sub_1D4376868()
{
  uint64_t v0;

  swift_setDeallocating();
  sub_1D43761A8();
  sub_1D4377118();
  sub_1D42E3E54();
  return sub_1D42B8ED4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43768A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return sub_1D42E39F0();
}

uint64_t sub_1D43768B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  sub_1D42E3C44();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  v5 = sub_1D42B8DB4();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = *(_QWORD **)(v1 + 24);
  sub_1D42E2EE8(v4, v3);
  v8 = v6[2];
  v7 = v6[3];
  v9 = v6[4];
  v10 = v6[5];
  type metadata accessor for XPCProxyDecoder.SingleValueContainer();
  v11 = (_QWORD *)sub_1D42B6F40();
  v11[2] = v8;
  v11[3] = v7;
  v11[4] = v9;
  v11[5] = v10;
  swift_retain();
  sub_1D42B7FE4(v8);
  swift_release();
  type metadata accessor for XPCDecoder.SingleValueContainer();
  v12 = sub_1D42B8DB4();
  *(_QWORD *)(v12 + 16) = v5;
  *(_QWORD *)(v12 + 24) = v11;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D4376978()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return sub_1D42E39F0();
}

uint64_t sub_1D4376988()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1D42BE934();
  v0[3] = sub_1D44382B4();
  sub_1D42B8F48();
  v0[4] = *(_QWORD *)(v0[2] + 24);
  sub_1D42BE934();
  v1 = (_QWORD *)swift_task_alloc();
  v0[5] = v1;
  *v1 = v0;
  v1[1] = sub_1D4376A24;
  return sub_1D4367B88();
}

uint64_t sub_1D4376A24(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 48) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    *(_QWORD *)(v4 + 56) = a1;
  }
  sub_1D42B8EC8();
  return swift_task_switch();
}

uint64_t sub_1D4376A9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 24);
  type metadata accessor for XPCDecoder.UnkeyedContainer();
  v3 = sub_1D42B8DB4();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D4376ADC()
{
  uint64_t v0;

  swift_release();
  sub_1D42B8F48();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D4376B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v4[19] = a3;
  v4[20] = a4;
  v4[18] = a1;
  v4[21] = *(_QWORD *)(a3 - 8);
  v4[22] = sub_1D42F9B80();
  v5 = (_QWORD *)swift_task_alloc();
  v4[23] = v5;
  *v5 = v4;
  v5[1] = sub_1D4376B7C;
  return sub_1D4376DAC((uint64_t)(v4 + 2));
}

uint64_t sub_1D4376B7C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    return sub_1D42B8ED4(*(uint64_t (**)(void))(v2 + 8));
  }
  else
  {
    sub_1D42B8EC8();
    return swift_task_switch();
  }
}

uint64_t sub_1D4376BE4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  sub_1D42E3C44();
  sub_1D43770E8((uint64_t)(v0 + 2), (uint64_t)(v0 + 16));
  type metadata accessor for XPCDataDecoder();
  v1 = sub_1D42B8DB4();
  sub_1D43770E8((uint64_t)(v0 + 16), v1 + 16);
  sub_1D43770E8((uint64_t)(v0 + 4), (uint64_t)(v0 + 8));
  type metadata accessor for XPCProxyDecoder();
  v2 = sub_1D42B6F40();
  sub_1D43770E8((uint64_t)(v0 + 8), v2 + 16);
  type metadata accessor for XPCDecoder();
  inited = swift_initStackObject();
  v0[24] = inited;
  *(_QWORD *)(inited + 16) = v1;
  *(_QWORD *)(inited + 24) = v2;
  sub_1D437713C();
  sub_1D42E2EFC(v0 + 8);
  v4 = (_QWORD *)sub_1D4377104();
  v0[25] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = sub_1D4376CC0;
  sub_1D4377128();
  return sub_1D43770D0(v5, v6, v7, v8, v9);
}

uint64_t sub_1D4376CC0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4376D18()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  swift_release();
  sub_1D42B8C84((uint64_t *)(v0 + 16));
  sub_1D43770F0();
  sub_1D42E3E54();
  v1 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42E39BC(v1);
}

uint64_t sub_1D4376D64()
{
  uint64_t v0;

  swift_release();
  sub_1D42B8C84((uint64_t *)(v0 + 16));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D4376DAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return sub_1D42E39F0();
}

uint64_t sub_1D4376DBC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v0[4] = sub_1D443836C();
  v0[5] = v1;
  v0[6] = *(_QWORD *)(v0[3] + 24);
  sub_1D42BE934();
  v2 = (_QWORD *)swift_task_alloc();
  v0[7] = v2;
  *v2 = v0;
  v2[1] = sub_1D4376E50;
  return sub_1D43683EC();
}

uint64_t sub_1D4376E50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t (*v15)(void);

  sub_1D42E3C44();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1D42B8EC8();
    return swift_task_switch();
  }
  else
  {
    v12 = v10[5];
    v13 = v10[4];
    v14 = (_QWORD *)v10[2];
    swift_release();
    *v14 = v13;
    v14[1] = v12;
    v14[2] = v9;
    v14[3] = v7;
    v14[4] = v5;
    v14[5] = v3;
    v15 = (uint64_t (*)(void))sub_1D42E3DD0();
    return v15();
  }
}

uint64_t sub_1D4376F00()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 32);
  swift_release();
  sub_1D42B8CDC(v2, v1);
  return sub_1D42B8ED4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4376F40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return sub_1D42E39F0();
}

uint64_t sub_1D4376F50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  v2 = *(uint64_t **)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD **)(v1 + 24);
  v5 = *(_QWORD *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  sub_1D42E2EE8(v5, v6);
  v7 = v4[2];
  v8 = v4[3];
  v9 = v4[4];
  v10 = v4[5];
  sub_1D42BE934();
  sub_1D42B7FE4(v7);
  sub_1D42B8F48();
  *v2 = v5;
  v2[1] = v6;
  v2[2] = v7;
  v2[3] = v8;
  v2[4] = v9;
  v2[5] = v10;
  v11 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42B8ED4(v11);
}

uint64_t type metadata accessor for XPCDecoder()
{
  return objc_opt_self();
}

uint64_t sub_1D4376FF8()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for XPCDecoder.KeyedContainer()
{
  JUMPOUT(0x1D825E3A4);
}

uint64_t type metadata accessor for XPCDecoder.UnkeyedContainer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for XPCDecoder.SingleValueContainer()
{
  return objc_opt_self();
}

uint64_t sub_1D4377088(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_1D42B28FC(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D43770D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_1D43770E8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1D4377088(a1, a2, v2);
}

uint64_t sub_1D43770F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v0, v1);
}

uint64_t sub_1D4377104()
{
  return swift_task_alloc();
}

uint64_t sub_1D4377118()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D437713C()
{
  uint64_t v0;

  return sub_1D42E2EBC(v0);
}

void sub_1D4377150()
{
  os_unfair_lock_t *v0;

  j__os_unfair_lock_lock(*v0);
}

void sub_1D4377158()
{
  os_unfair_lock_t *v0;

  j__os_unfair_lock_unlock(*v0);
}

uint64_t sub_1D4377160()
{
  uint64_t v0;

  sub_1D4377274();
  sub_1D42B5400(v0 + 16);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D4377188()
{
  sub_1D4377160();
  return swift_deallocClassInstance();
}

uint64_t _s12ProxySessionCMa()
{
  return objc_opt_self();
}

void sub_1D43771C8()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  char v3;
  _BYTE *v4;

  sub_1D42B5528((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  sub_1D44D56B8();
  if (!v1 && v2 <= 0xFBu && v2 >> 6 && v2 >> 6 == 1)
  {
    v3 = v2 & 0x3F;
    sub_1D43778D4();
    swift_allocError();
    *v4 = v3;
  }
}

uint64_t sub_1D4377274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v10;

  v1 = v0;
  v10 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  v2 = sub_1D451A728();
  v4 = v3;
  if (qword_1EFE40338 != -1)
    swift_once();
  v5 = sub_1D451A014();
  sub_1D42CC880(v5, (uint64_t)qword_1EFEA7700);
  swift_bridgeObjectRetain();
  v6 = sub_1D4519FFC();
  v7 = sub_1D451AF74();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    *(_DWORD *)v8 = 136315138;
    swift_bridgeObjectRetain();
    sub_1D43D72EC(v2, v4, &v10);
    sub_1D451B1A8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D42A7000, v6, v7, "accessibility sound recognition, cancelling Exclave proxy session %s", v8, 0xCu);
    swift_arrayDestroy();
    sub_1D42CC934();
  }

  swift_bridgeObjectRelease_n();
  sub_1D42B5528((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  return sub_1D44D5474();
}

uint64_t sub_1D437749C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char v16;
  _QWORD v17[7];

  v3 = a2[3];
  v4 = a2[4];
  sub_1D42B5528(a2, v3);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v4 + 8))(&v14, v3, v4);
  if ((v16 & 1) != 0)
  {
    v17[6] = v14;
    sub_1D42B28FC(&qword_1EFE49BB0);
    swift_willThrowTypedImpl();
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_1D42E33E0(&v14, (uint64_t)v17);
    v5 = *sub_1D42B5528(v17, v17[3]);
    sub_1D44D523C();
    if (v2)
    {
      sub_1D42B5400((uint64_t)v17);
    }
    else
    {
      v7 = v6;
      sub_1D42E2D8C((uint64_t)v17, (uint64_t)&v14);
      v8 = sub_1D42CAEF0((uint64_t)&v14, v15);
      MEMORY[0x1E0C80A78](v8);
      v10 = (uint64_t *)((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v11 + 16))(v10);
      v5 = sub_1D4377808(*v10, v7);
      sub_1D42B5400((uint64_t)&v14);
      sub_1D42B5400((uint64_t)v17);
    }
    return v5;
  }
  return result;
}

uint64_t sub_1D4377618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  _UNKNOWN **v18;

  v17 = type metadata accessor for SoundAnalysisService.Service();
  v18 = &off_1E979B228;
  v15 = a2;
  *(_QWORD *)&v16 = a1;
  swift_bridgeObjectRetain();
  v6 = sub_1D451A728();
  v8 = v7;
  if (qword_1EFE40338 != -1)
    swift_once();
  v9 = sub_1D451A014();
  sub_1D42CC880(v9, (uint64_t)qword_1EFEA7700);
  swift_bridgeObjectRetain();
  v10 = sub_1D4519FFC();
  v11 = sub_1D451AF74();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v15 = v13;
    *(_DWORD *)v12 = 136315138;
    swift_bridgeObjectRetain();
    sub_1D43D72EC(v6, v8, &v15);
    sub_1D451B1A8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D42A7000, v10, v11, "accessibility sound recognition, creating Exclave proxy session %s)", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D825E524](v13, -1, -1);
    MEMORY[0x1D825E524](v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1D42E33E0(&v16, a3 + 16);
  *(_QWORD *)(a3 + 56) = a2;
  return a3;
}

uint64_t sub_1D4377808(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v12[3];
  uint64_t v13;
  _UNKNOWN **v14;

  v13 = type metadata accessor for SoundAnalysisService.Service();
  v14 = &off_1E979B228;
  v12[0] = a1;
  _s12ProxySessionCMa();
  v4 = swift_allocObject();
  v5 = sub_1D42CAEF0((uint64_t)v12, v13);
  MEMORY[0x1E0C80A78](v5);
  v7 = (_QWORD *)((char *)&v12[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v8 + 16))(v7);
  v9 = sub_1D4377618(*v7, a2, v4);
  sub_1D42B5400((uint64_t)v12);
  return v9;
}

unint64_t sub_1D43778D4()
{
  unint64_t result;

  result = qword_1EFE4DC48;
  if (!qword_1EFE4DC48)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454FB24, &unk_1E97996E8);
    atomic_store(result, (unint64_t *)&qword_1EFE4DC48);
  }
  return result;
}

uint64_t sub_1D4377910(uint64_t a1, uint64_t a2)
{
  return sub_1D4377948(a1, a2);
}

uint64_t sub_1D4377948(uint64_t a1, uint64_t a2)
{
  void (**v2)(uint64_t, uint64_t);
  void (*v5)(uint64_t, uint64_t);

  v5 = *v2;
  swift_retain();
  swift_retain();
  swift_retain();
  v5(a1, a2);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1D43779D8(_OWORD *a1@<X8>)
{
  void *v1;
  void *v2;
  void *v4;
  id v5;

  v2 = v1;
  v4 = (void *)sub_1D451A6C8();
  v5 = objc_msgSend(v2, sel_valueForEntitlement_, v4);

  if (v5)
  {
    sub_1D451B208();
    swift_unknownObjectRelease();
  }
  else
  {
    *a1 = 0u;
    a1[1] = 0u;
  }
  sub_1D4377BF8();
}

void sub_1D4377A50(_OWORD *a1@<X8>)
{
  sub_1D43779D8(a1);
}

void sub_1D4377A70(uint64_t a1@<X8>)
{
  type metadata accessor for SNUtils();
  sub_1D44BC2A0(a1);
  sub_1D4377BF8();
}

void sub_1D4377ABC(uint64_t a1@<X8>)
{
  sub_1D4377A70(a1);
}

BOOL static PermissionsUtils.checkUserIsMobile()()
{
  return geteuid() == 501;
}

BOOL static PermissionsUtils.checkUserIsRoot()()
{
  return geteuid() == 0;
}

void type metadata accessor for PermissionsUtils()
{
  sub_1D42CB35C();
}

void type metadata accessor for ThisProcessEntitlementProvider()
{
  sub_1D42CB35C();
}

uint64_t sub_1D4377B20(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D4377B60 + 4 * asc_1D4530590[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D4377B80 + 4 * byte_1D4530595[v4]))();
}

_BYTE *sub_1D4377B60(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D4377B80(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4377B88(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4377B90(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4377B98(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4377BA0(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for PermissionsUtils.DomainError()
{
  sub_1D42CB35C();
}

unint64_t sub_1D4377BBC()
{
  unint64_t result;

  result = qword_1EFE4DC50;
  if (!qword_1EFE4DC50)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453067C, &unk_1E97A19B8);
    atomic_store(result, (unint64_t *)&qword_1EFE4DC50);
  }
  return result;
}

uint64_t sub_1D4377C04(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_1D42B28FC(&qword_1EFE4DC60);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42B5528(a1, a1[3]);
  sub_1D4378A74();
  sub_1D451BA24();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1D4377CC8()
{
  sub_1D4378A74();
  return sub_1D451BA3C();
}

uint64_t sub_1D4377CF0()
{
  sub_1D4378A74();
  return sub_1D451BA48();
}

uint64_t sub_1D4377D18(_QWORD *a1)
{
  return sub_1D4377C04(a1);
}

id sub_1D4377D2C()
{
  objc_class *v0;
  id v1;
  objc_super v3;

  v0 = (objc_class *)type metadata accessor for SNDiscoverFileServerRequest();
  v3.receiver = objc_allocWithZone(v0);
  v3.super_class = v0;
  v1 = objc_msgSendSuper2(&v3, sel_init);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v1;
}

uint64_t (*sub_1D4377DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  _QWORD *v39;

  v31 = a3;
  v32 = a2;
  v9 = sub_1D42B28FC(&qword_1EFE4DC70);
  MEMORY[0x1E0C80A78](v9);
  v33 = (uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D83900]), sel_init);
  sub_1D4378DD8(v11, sel_setDispatchQueue_);
  v12 = sub_1D42B6F40();
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = a3;
  v38 = sub_1D4378AD4;
  v39 = (_QWORD *)v12;
  v34 = MEMORY[0x1E0C809B0];
  v35 = 1107296256;
  v36 = sub_1D43B1CEC;
  v37 = &unk_1E97B3548;
  v13 = sub_1D4378D98();
  swift_retain();
  swift_release();
  sub_1D4378DD8(v11, sel_setInterruptionHandler_);
  _Block_release(v13);
  v38 = sub_1D43781EC;
  v39 = 0;
  sub_1D4378DCC();
  v36 = sub_1D43B1CEC;
  v37 = &unk_1E97B9828;
  v14 = sub_1D4378D98();
  sub_1D4378DD8(v11, sel_setInvalidationHandler_);
  _Block_release(v14);
  v15 = sub_1D42B6F40();
  swift_unknownObjectWeakInit();
  v16 = (_QWORD *)sub_1D42B6F40();
  v16[2] = v15;
  v16[3] = a4;
  v16[4] = a5;
  v17 = sub_1D42B6F40();
  *(_QWORD *)(v17 + 16) = a4;
  *(_QWORD *)(v17 + 24) = a5;
  v38 = sub_1D4378B44;
  v39 = v16;
  sub_1D4378DCC();
  v36 = sub_1D43E3FE8;
  v37 = &unk_1E97B98C8;
  v18 = sub_1D4378D98();
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_setLocalDeviceUpdatedHandler_, v18);
  _Block_release(v18);
  v38 = sub_1D4378B50;
  v39 = (_QWORD *)v17;
  sub_1D4378DCC();
  v36 = sub_1D43E3FE8;
  v37 = &unk_1E97B3860;
  sub_1D4378D98();
  swift_retain();
  v19 = swift_release();
  sub_1D4378DC0(v19, sel_setDeviceLostHandler_);
  sub_1D4378DE0();
  v38 = sub_1D4378B44;
  v39 = v16;
  sub_1D4378DCC();
  v36 = sub_1D43E3FE8;
  v37 = &unk_1E97B98F0;
  sub_1D4378D98();
  swift_retain();
  v20 = swift_release();
  sub_1D4378DC0(v20, sel_setDeviceFoundHandler_);
  sub_1D4378DE0();
  v38 = sub_1D4378594;
  v39 = 0;
  sub_1D4378DCC();
  v36 = sub_1D4378774;
  v37 = &unk_1E97B38D8;
  v21 = sub_1D4378D98();
  sub_1D4378DC0((uint64_t)v21, sel_setDeviceChangedHandler_);
  sub_1D4378DE0();
  v22 = sub_1D451AAC4();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v33, 1, 1, v22);
  v23 = (_QWORD *)sub_1D42B6F40();
  v23[2] = 0;
  v23[3] = 0;
  v24 = v32;
  v23[4] = v11;
  v23[5] = v24;
  v23[6] = v31;
  swift_retain();
  v25 = v11;
  sub_1D444D358();
  v27 = v26;
  swift_release();
  swift_release();
  v28 = sub_1D42B6F40();
  *(_QWORD *)(v28 + 16) = v25;
  *(_QWORD *)(v28 + 24) = v27;
  swift_release();
  return sub_1D4378C20;
}

void sub_1D4378160(void (*a1)(void))
{
  id v2;

  type metadata accessor for SNError();
  v2 = sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 2, 0, 0xD000000000000028, 0x80000001D4554150);
  a1();

}

void sub_1D43781EC()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  if (qword_1EFE40338 != -1)
    swift_once();
  v0 = sub_1D451A014();
  sub_1D42CC880(v0, (uint64_t)qword_1EFEA7700);
  oslog = sub_1D4519FFC();
  v1 = sub_1D451AF74();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_1D42A7000, oslog, v1, "companion service connection invalidated", v2, 2u);
    MEMORY[0x1D825E524](v2, -1, -1);
  }

}

uint64_t sub_1D43782B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;

  v8 = sub_1D42B28FC(&qword_1EFE4DC70);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1D825E608](a2 + 16);
  if (result)
  {
    v12 = result;
    v13 = sub_1D451AAC4();
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v10, 1, 1, v13);
    v14 = (_QWORD *)swift_allocObject();
    v14[2] = 0;
    v14[3] = 0;
    v14[4] = a1;
    v14[5] = v12;
    v14[6] = a3;
    v14[7] = a4;
    v15 = a1;
    swift_retain();
    sub_1D444D358();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D43783BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v10;

  v7[6] = a6;
  v7[7] = a7;
  type metadata accessor for SNFileSharingUtils();
  v10 = (_QWORD *)swift_task_alloc();
  v7[8] = v10;
  *v10 = v7;
  v10[1] = sub_1D4378430;
  return sub_1D432A2C4(a4, a5, 1.0);
}

uint64_t sub_1D4378430(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = a1;
  swift_task_dealloc();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4378484()
{
  uint64_t v0;
  void *v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  id v4;

  v1 = *(void **)(v0 + 72);
  if (v1)
  {
    v2 = *(void (**)(uint64_t))(v0 + 48);
    v3 = type metadata accessor for SNFileServerDiscoveryResult();
    *(_QWORD *)(v0 + 16) = v1;
    *(_QWORD *)(v0 + 40) = v3;
    v4 = v1;
    v2(v0 + 16);

    sub_1D42B5400(v0 + 16);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D43784F0(void *a1, void (*a2)(_QWORD *))
{
  id v4;
  id v5;
  _QWORD v7[5];

  type metadata accessor for SNFileSharingUtils();
  v4 = sub_1D4329D4C(1uLL, a1);
  v7[3] = type metadata accessor for SNFileServerDiscoveryResult();
  v7[0] = v4;
  v5 = v4;
  a2(v7);

  return sub_1D42B5400((uint64_t)v7);
}

void sub_1D4378594(void *a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  id v8;

  if (qword_1EFE40338 != -1)
    swift_once();
  v2 = sub_1D451A014();
  sub_1D42CC880(v2, (uint64_t)qword_1EFEA7700);
  v8 = a1;
  v3 = sub_1D4519FFC();
  v4 = sub_1D451AF74();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v6 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v5 = 138412546;
    v7 = v8;
    sub_1D451B1A8();
    *v6 = v8;

    *(_WORD *)(v5 + 12) = 1024;
    sub_1D451B1A8();
    _os_log_impl(&dword_1D42A7000, v3, v4, "device updated: %@ with changes: %u", (uint8_t *)v5, 0x12u);
    sub_1D42B28FC((uint64_t *)&unk_1EFE50850);
    swift_arrayDestroy();
    MEMORY[0x1D825E524](v6, -1, -1);
    MEMORY[0x1D825E524](v5, -1, -1);

  }
  else
  {

  }
}

void sub_1D4378774(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_1D43787D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[16] = a5;
  v6[17] = a6;
  v6[15] = a4;
  return swift_task_switch();
}

uint64_t sub_1D43787EC()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[15];
  v0[2] = v0;
  v0[3] = sub_1D4378878;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_1D44C3644;
  v3[3] = &unk_1E97B3928;
  v3[4] = v2;
  objc_msgSend(v1, sel_activateWithCompletion_, v3);
  return swift_continuation_await();
}

uint64_t sub_1D4378878()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 144) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return sub_1D42B8DA8();
}

uint64_t sub_1D43788D0()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(v0 + 128))(0);
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43788FC()
{
  uint64_t v0;
  void *v1;
  void (*v2)(void *);
  id v3;

  v1 = *(void **)(v0 + 144);
  v2 = *(void (**)(void *))(v0 + 128);
  swift_willThrow();
  v3 = v1;
  v2(v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D4378964(void *a1)
{
  objc_msgSend(a1, sel_invalidate);
  return sub_1D451AB3C();
}

id SNDiscoverFileServerRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SNDiscoverFileServerRequest();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SNDiscoverFileServerRequest()
{
  return objc_opt_self();
}

uint64_t (*sub_1D43789FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  sub_1D4377DB0(a1, a2, a3, a4, a5);
  return sub_1D4378C20;
}

uint64_t method lookup function for SNDiscoverFileServerRequest()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for DiscoverFileServerRequest()
{
  return &type metadata for DiscoverFileServerRequest;
}

unint64_t sub_1D4378A38()
{
  unint64_t result;

  result = qword_1EFE4DC58;
  if (!qword_1EFE4DC58)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453074C, &type metadata for DiscoverFileServerRequest);
    atomic_store(result, (unint64_t *)&qword_1EFE4DC58);
  }
  return result;
}

unint64_t sub_1D4378A74()
{
  unint64_t result;

  result = qword_1EFE4DC68;
  if (!qword_1EFE4DC68)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4530860, &type metadata for DiscoverFileServerRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DC68);
  }
  return result;
}

uint64_t sub_1D4378AB0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1D4378AD4()
{
  uint64_t v0;

  sub_1D4378160(*(void (**)(void))(v0 + 16));
}

uint64_t sub_1D4378ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D4378AEC()
{
  return swift_release();
}

uint64_t sub_1D4378AF4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D4378B18()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D4378B44(void *a1)
{
  uint64_t *v1;

  return sub_1D43782B8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1D4378B50(void *a1)
{
  uint64_t v1;

  return sub_1D43784F0(a1, *(void (**)(_QWORD *))(v1 + 16));
}

uint64_t sub_1D4378B58()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D4378B8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  v4 = sub_1D4378DA0(v3);
  return sub_1D43787D0(v4, v5, v6, v7, v8, v2);
}

uint64_t sub_1D4378BF4()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D4378C20()
{
  uint64_t v0;

  return sub_1D4378964(*(void **)(v0 + 16));
}

uint64_t sub_1D4378C28()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D4378C64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  v5 = sub_1D4378DA0(v4);
  return sub_1D43783BC(v5, v6, v7, v8, v9, v3, v2);
}

ValueMetadata *type metadata accessor for DiscoverFileServerRequest.CodingKeys()
{
  return &type metadata for DiscoverFileServerRequest.CodingKeys;
}

unint64_t sub_1D4378CEC()
{
  unint64_t result;

  result = qword_1EFE4DCA0;
  if (!qword_1EFE4DCA0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4530810, &type metadata for DiscoverFileServerRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DCA0);
  }
  return result;
}

unint64_t sub_1D4378D2C()
{
  unint64_t result;

  result = qword_1EFE4DCA8;
  if (!qword_1EFE4DCA8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4530838, &type metadata for DiscoverFileServerRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DCA8);
  }
  return result;
}

void *sub_1D4378D98()
{
  uint64_t v0;

  return _Block_copy((const void *)(v0 - 144));
}

uint64_t sub_1D4378DA0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

id sub_1D4378DC0(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

void sub_1D4378DCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 144) = v0;
  *(_QWORD *)(v1 - 136) = v2;
}

id sub_1D4378DD8(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

void sub_1D4378DE0()
{
  const void *v0;

  _Block_release(v0);
}

void sub_1D4378DE8()
{
  uint64_t v0;
  int v1;
  __int128 v2;
  __int128 v3;
  unsigned __int8 v4;
  __int128 v5;
  unsigned __int8 v6;
  uint64_t v7[2];

  swift_bridgeObjectRetain();
  sub_1D451A74C();
  swift_bridgeObjectRelease();
  sub_1D451B970();
  sub_1D437CD10((__int128 *)(v0 + 24), (uint64_t)&v2);
  sub_1D437CD10(&v2, (uint64_t)&v3);
  if (v4 == 254 || v4 == 255)
  {
    sub_1D451B964();
  }
  else
  {
    v5 = v3;
    v6 = v4;
    sub_1D42E4000();
    sub_1D451B964();
    sub_1D437D768((uint64_t *)&v5 + 1, (uint64_t)v7);
    sub_1D437EDB8(v7);
    if (v1)
    {
      if (v1 == 1)
      {
        sub_1D437ECC0();
        sub_1D437EC8C();
        sub_1D42D6190();
      }
      else
      {
        sub_1D42E4000();
        sub_1D437CD28((uint64_t)&v2);
      }
    }
    else
    {
      sub_1D437ECC8();
      sub_1D437EC8C();
      sub_1D42D6224();
    }
  }
}

uint64_t sub_1D4378EFC(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  int v8;
  char v9;
  int64x2_t *v10;
  int v11;
  char v12;
  int v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  unsigned __int8 v17;
  __int128 v18;
  unsigned __int8 v19;
  __int128 v20;
  unsigned __int8 v21;
  __int128 v22;
  unsigned __int8 v23;
  uint64_t v24[2];
  uint64_t v25[2];
  int64x2_t *v26;
  char v27;
  int64x2_t *v28;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v4 || (v5 = sub_1D451B820(), result = 0, (v5 & 1) != 0))
  {
    if (((*(unsigned __int8 *)(a1 + 16) ^ *(unsigned __int8 *)(a2 + 16)) & 1) != 0)
      return 0;
    sub_1D437CD10((__int128 *)(a1 + 24), (uint64_t)&v15);
    sub_1D437CD10((__int128 *)(a2 + 24), (uint64_t)&v14);
    sub_1D437CD10(&v15, (uint64_t)&v16);
    if (v17 == 254)
    {
      sub_1D437CD10(&v14, (uint64_t)&v22);
      if (v23 != 254)
        return 0;
    }
    else if (v17 == 255)
    {
      sub_1D437CD10(&v14, (uint64_t)&v22);
      if (v23 != 255)
        return 0;
    }
    else
    {
      v18 = v16;
      v19 = v17;
      sub_1D437CD10(&v14, (uint64_t)&v20);
      if (v21 > 0xFDu)
        return 0;
      v22 = v20;
      v23 = v21;
      if (v18 != v20)
        return 0;
      sub_1D437D768((uint64_t *)&v18 + 1, (uint64_t)v25);
      sub_1D437D768((uint64_t *)&v22 + 1, (uint64_t)v24);
      sub_1D437D768(v25, (uint64_t)&v26);
      if (v27)
      {
        if (v27 == 1)
        {
          v7 = (uint64_t)v26;
          sub_1D437EDB8(v24);
          if (v8 != 1)
            return 0;
          sub_1D42FE2DC(v7, (uint64_t)v28);
          if ((v9 & 1) == 0)
            return 0;
        }
        else
        {
          sub_1D437EDB8(v24);
          if (v13 != 2 || v28)
            return 0;
        }
      }
      else
      {
        v10 = v26;
        sub_1D437EDB8(v24);
        if (v11)
          return 0;
        sub_1D42FE260(v10, v28);
        if ((v12 & 1) == 0)
          return 0;
      }
    }
    return 1;
  }
  return result;
}

uint64_t sub_1D43790CC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6C616E6F6974706FLL && a2 == 0xE800000000000000;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x69617274736E6F63 && a2 == 0xEA0000000000746ELL)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1D451B820();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1D4379214(char a1)
{
  if (!a1)
    return 1701667182;
  if (a1 == 1)
    return 0x6C616E6F6974706FLL;
  return 0x69617274736E6F63;
}

uint64_t sub_1D4379268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6[24];
  __int128 v7;

  sub_1D42B28FC(&qword_1EFE4DCF8);
  sub_1D42F86A4();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB18C();
  sub_1D437EDE0();
  sub_1D437D6B4();
  sub_1D42F8684();
  v6[0] = 0;
  sub_1D451B724();
  if (!v1)
  {
    v6[0] = 1;
    sub_1D451B730();
    sub_1D437CD10((__int128 *)(v0 + 24), (uint64_t)&v7);
    sub_1D437CD10(&v7, (uint64_t)v6);
    sub_1D437D72C();
    sub_1D451B760();
  }
  return sub_1D42F1FA0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
}

void sub_1D4379398()
{
  sub_1D42BE9A8();
  sub_1D4378DE8();
  sub_1D42CB230();
  sub_1D42BE978();
}

void sub_1D43793C0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  char v12;

  sub_1D42BE910();
  v2 = v1;
  v4 = v3;
  v5 = sub_1D42B28FC(&qword_1EFE4DCE0);
  MEMORY[0x1E0C80A78](v5);
  sub_1D43479B4();
  sub_1D42B5528(v2, v2[3]);
  sub_1D437D6B4();
  sub_1D451BA0C();
  if (v0)
  {
    sub_1D42BE944();
  }
  else
  {
    sub_1D437EE0C();
    v6 = sub_1D451B64C();
    v8 = v7;
    LOBYTE(v9) = 1;
    swift_bridgeObjectRetain();
    sub_1D437EE0C();
    v12 = sub_1D451B658();
    sub_1D437D6F0();
    sub_1D451B688();
    sub_1D42CB220();
    sub_1D43477C8(v9, v10, v11);
    sub_1D42B5400((uint64_t)v2);
    sub_1D42D3258();
    sub_1D437CD58(v9, v10, v11);
    *(_QWORD *)v4 = v6;
    *(_QWORD *)(v4 + 8) = v8;
    *(_BYTE *)(v4 + 16) = v12 & 1;
    *(_QWORD *)(v4 + 24) = v9;
    *(_QWORD *)(v4 + 32) = v10;
    *(_BYTE *)(v4 + 40) = v11;
  }
  sub_1D42BE844();
}

void sub_1D4379554(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 254 && a4 != 255)
  {
    sub_1D42E4000();
    sub_1D451B964();
    if (!a4)
    {
      sub_1D437ECC8();
      sub_1D437EC8C();
      sub_1D437ECEC();
      return;
    }
    if (a4 == 1)
    {
      sub_1D437ECC0();
      sub_1D437EC8C();
      sub_1D437ECE0();
      return;
    }
  }
  sub_1D451B964();
  sub_1D42CB15C();
}

uint64_t sub_1D43795E4(uint64_t a1, int64x2_t *a2, uint64_t a3, uint64_t a4, int64x2_t *a5, unsigned __int8 a6)
{
  char v7;
  char v8;

  if (a3 == 254)
  {
    if (a6 == 254)
      return 1;
  }
  else if (a3 == 255)
  {
    if (a6 == 0xFF)
      return 1;
  }
  else if (a6 <= 0xFDu && a4 == a1)
  {
    if ((_BYTE)a3)
    {
      if (a3 == 1)
      {
        if (a6 == 1)
        {
          sub_1D437EEA0(a1, (uint64_t)a2, a3, a4, (uint64_t)a5);
          if ((v7 & 1) != 0)
            return 1;
        }
      }
      else if (a6 == 2 && !a5)
      {
        return 1;
      }
    }
    else if (!a6)
    {
      sub_1D437EE94(a1, a2, a3, a4, a5);
      if ((v8 & 1) != 0)
        return 1;
    }
  }
  return 0;
}

uint64_t sub_1D4379694(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x72724169746C756DLL && a2 == 0xEA00000000007961;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x616E6F6974636964 && a2 == 0xEA00000000007972;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x676E69727473 && a2 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1D451B820();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1D43797E8(char a1)
{
  if (!a1)
    return 0x72724169746C756DLL;
  if (a1 == 1)
    return 0x616E6F6974636964;
  return 0x676E69727473;
}

void sub_1D4379840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;

  sub_1D42BE910();
  v17 = v3;
  v5 = v4;
  v6 = sub_1D42B28FC(&qword_1EFE4DE38);
  v15 = *(_QWORD *)(v6 - 8);
  v16 = v6;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v7);
  sub_1D434799C();
  v8 = sub_1D42B28FC(&qword_1EFE4DE40);
  v12 = *(_QWORD *)(v8 - 8);
  v13 = v8;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  sub_1D42F1ED4();
  v14 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE4DE48) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v10);
  sub_1D43383FC();
  v18 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE4DE50) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v11);
  sub_1D42D7108();
  sub_1D42B5528(v5, v5[3]);
  sub_1D437DB88();
  sub_1D451BA24();
  if (v17 == 254)
  {
    sub_1D437EE38();
    sub_1D437EC08();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v2, v16);
  }
  else
  {
    if (v17 != 255)
    {
      sub_1D437DC3C();
      sub_1D437EC08();
      sub_1D437DCB4();
      sub_1D451B760();
      sub_1D437ED90(v0, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
      sub_1D4306FEC(v18);
      goto LABEL_7;
    }
    sub_1D437EE68();
    sub_1D437EC08();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v1, v13);
  }
  sub_1D4306FEC(v18);
LABEL_7:
  sub_1D42BE844();
}

void sub_1D4379A4C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  sub_1D42BE9A8();
  if (a3 == 254 || a3 == 255)
    goto LABEL_9;
  sub_1D42E4000();
  sub_1D4338458();
  if (a3)
  {
    if (a3 != 1)
    {
LABEL_9:
      sub_1D451B964();
      goto LABEL_10;
    }
    sub_1D437ECC0();
    sub_1D437ED40();
  }
  else
  {
    sub_1D437ECC8();
    sub_1D437ED34();
  }
LABEL_10:
  sub_1D42CB230();
  sub_1D42CB708();
}

uint64_t sub_1D4379AE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1D42BE910();
  v5 = v4;
  v29 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE4DDF0) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v6);
  sub_1D437ED74(v7, v25);
  v27 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE4DDF8) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v8);
  sub_1D437EC50(v9, v26);
  v28 = sub_1D42B28FC(&qword_1EFE4DE00);
  v10 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  sub_1D43383FC();
  v11 = sub_1D42B28FC(&qword_1EFE4DE08);
  sub_1D437EDFC();
  MEMORY[0x1E0C80A78](v12);
  sub_1D42F1ED4();
  sub_1D42B5528(v5, v5[3]);
  sub_1D437DB88();
  sub_1D451BA0C();
  if (v1)
    goto LABEL_13;
  v30 = (uint64_t)v5;
  v13 = sub_1D451B6D0();
  v14 = *(_QWORD *)(v13 + 16);
  v15 = v11;
  if (!v14)
  {
LABEL_10:
    v0 = sub_1D437EE80();
    sub_1D42B6D0C();
    v22 = v21;
    sub_1D42B28FC(&qword_1EFE49ED0);
    *v22 = &unk_1E979FEC8;
    sub_1D451B61C();
    v23 = sub_1D437ECB0();
    sub_1D437ED4C(v23, *MEMORY[0x1E0DEC450]);
    swift_willThrow();
    sub_1D4371170();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v15);
    v5 = (_QWORD *)v30;
LABEL_13:
    sub_1D42B5400((uint64_t)v5);
    return v0;
  }
  v16 = *(unsigned __int8 *)(v13 + 32);
  sub_1D43B7948(1, v14, v13, v13 + 32, 0, (2 * v14) | 1);
  v18 = v17;
  v20 = v19;
  sub_1D42CB5C8();
  if (v18 != v20 >> 1)
  {
    v15 = v11;
    goto LABEL_10;
  }
  if (v16)
  {
    if (v16 == 1)
    {
      sub_1D437EE68();
      sub_1D437EC18();
      sub_1D437EE20(v27);
    }
    else
    {
      sub_1D437EE38();
      sub_1D437EC18();
      sub_1D437EE20(v29);
    }
    sub_1D42E3CB4();
    sub_1D42F1FA0(v3, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    v0 = 0;
  }
  else
  {
    sub_1D437DC3C();
    sub_1D437EC18();
    sub_1D437DC78();
    sub_1D451B688();
    sub_1D4307058(v0, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    sub_1D42E3CB4();
    sub_1D42F1FA0(v3, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    v0 = 0;
  }
  sub_1D42B5400(v30);
  return v0;
}

void sub_1D4379EB4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1D451B964();
  if (a4)
  {
    if (a4 == 1)
    {
      sub_1D437ECC0();
      sub_1D437EC8C();
      sub_1D437ECE0();
    }
    else
    {
      sub_1D42E4000();
      sub_1D42CB15C();
    }
  }
  else
  {
    sub_1D437ECC8();
    sub_1D437EC8C();
    sub_1D437ECEC();
  }
}

uint64_t sub_1D4379F14(uint64_t a1, int64x2_t *a2, uint64_t a3, uint64_t a4, int64x2_t *a5, char a6)
{
  char v6;
  char v7;

  if (a1 != a4)
    return 0;
  if (!(_BYTE)a3)
  {
    if (a6)
      return 0;
    sub_1D437EE94(a1, a2, a3, a4, a5);
    return (v7 & 1) != 0;
  }
  if (a3 != 1)
    return a6 == 2 && !a5;
  if (a6 == 1)
  {
    sub_1D437EEA0(a1, (uint64_t)a2, a3, a4, (uint64_t)a5);
    if ((v6 & 1) != 0)
      return 1;
  }
  return 0;
}

uint64_t sub_1D4379F88(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6570795461746164 && a2 == 0xE800000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F436570616873 && a2 == 0xEF746E6961727473)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D437A098(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E6F436570616873;
  else
    return 0x6570795461746164;
}

void sub_1D437A0DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_1D42BE910();
  v4 = v3;
  sub_1D42B28FC(&qword_1EFE4DD28);
  sub_1D437EDFC();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42CB18C();
  sub_1D42B5528(v4, v4[3]);
  sub_1D437D780();
  sub_1D451BA24();
  sub_1D437D834();
  sub_1D437EDD0();
  if (!v0)
  {
    sub_1D437D870();
    sub_1D437EDD0();
  }
  sub_1D42F1FA0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_1D42BE844();
}

void sub_1D437A1E0(uint64_t a1, uint64_t a2, char a3)
{
  sub_1D42BE9A8();
  sub_1D4338458();
  if (a3)
  {
    if (a3 == 1)
    {
      sub_1D437ECC0();
      sub_1D437ED40();
    }
    else
    {
      sub_1D42E4000();
    }
  }
  else
  {
    sub_1D437ECC8();
    sub_1D437ED34();
  }
  sub_1D42CB230();
  sub_1D42CB708();
}

uint64_t sub_1D437A248(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 v4;

  sub_1D42B28FC(&qword_1EFE4DD08);
  sub_1D42F86A4();
  MEMORY[0x1E0C80A78](v2);
  sub_1D42F1ED4();
  sub_1D42B5528(a1, a1[3]);
  sub_1D437D780();
  sub_1D451BA0C();
  sub_1D437D7BC();
  sub_1D437ED60();
  sub_1D437D7F8();
  sub_1D437ED60();
  sub_1D42CFC04();
  sub_1D42BE944();
  return v4;
}

uint64_t sub_1D437A378(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x363174616F6C66 && a2 == 0xE700000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x323374616F6C66 && a2 == 0xE700000000000000;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x343674616F6C66 && a2 == 0xE700000000000000;
      if (v7 || (sub_1D451B820() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x3233746E69 && a2 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_1D451B820();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_1D437A520(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D437A554 + 4 * byte_1D45308B0[a1]))(0x363174616F6C66, 0xE700000000000000);
}

uint64_t sub_1D437A554()
{
  return 0x323374616F6C66;
}

uint64_t sub_1D437A568()
{
  return 0x343674616F6C66;
}

uint64_t sub_1D437A57C()
{
  return 0x3233746E69;
}

void sub_1D437A590()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  sub_1D42BE910();
  v8 = v0;
  sub_1D42B28FC(&qword_1EFE4DF90);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v1);
  sub_1D4321160(v2, v7);
  sub_1D42B28FC(&qword_1EFE4DF98);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v3);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE4DFA0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42D7108();
  v5 = sub_1D42B28FC(&qword_1EFE4DFA8);
  MEMORY[0x1E0C80A78](v5);
  sub_1D43479B4();
  sub_1D42B28FC(&qword_1EFE4DFB0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v6);
  sub_1D42F1ED4();
  sub_1D437EDE0();
  sub_1D437E690();
  sub_1D451BA24();
  __asm { BR              X10 }
}

void sub_1D437A6D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 - 68) = 0;
  sub_1D437E780();
  sub_1D437EC40();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  sub_1D4307058(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 104) + 8));
  sub_1D42BE844();
}

_QWORD *sub_1D437A7A8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;

  sub_1D42BE910();
  v3 = v2;
  sub_1D42B28FC(&qword_1EFE4DF40);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE4DF48);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D437ED74(v6, v21);
  sub_1D42B28FC(&qword_1EFE4DF50);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v7);
  sub_1D437EC50(v8, v22);
  v23 = sub_1D42B28FC(&qword_1EFE4DF58);
  MEMORY[0x1E0C80A78](v23);
  sub_1D42D7108();
  v9 = sub_1D42B28FC(&qword_1EFE4DF60);
  v10 = *(_QWORD **)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  sub_1D437EC98();
  sub_1D42B5528(v3, v3[3]);
  sub_1D437E690();
  sub_1D451BA0C();
  if (!v0)
  {
    v24 = v10;
    v11 = sub_1D451B6D0();
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      v13 = *(unsigned __int8 *)(v11 + 32);
      sub_1D43B7948(1, v12, v11, v11 + 32, 0, (2 * v12) | 1);
      v15 = v14;
      v17 = v16;
      swift_bridgeObjectRelease();
      if (v15 == v17 >> 1)
        __asm { BR              X9 }
    }
    sub_1D437EE80();
    sub_1D42B6D0C();
    v10 = v18;
    sub_1D42B28FC(&qword_1EFE49ED0);
    *v10 = &unk_1E97A0180;
    sub_1D451B61C();
    v19 = sub_1D437ECB0();
    sub_1D437ED4C(v19, *MEMORY[0x1E0DEC450]);
    swift_willThrow();
    sub_1D4371170();
    ((void (*)(uint64_t, uint64_t))v24[1])(v1, v9);
  }
  sub_1D42B5400((uint64_t)v3);
  return v10;
}

void sub_1D437AA90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D437EE74();
  v2 = *(_QWORD *)(v1 - 120);
  sub_1D437EC6C();
  if (!v0)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 160) + 8))(v2, *(_QWORD *)(v1 - 152));
    sub_1D4371170();
    sub_1D437EC30();
    JUMPOUT(0x1D437AB7CLL);
  }
  sub_1D4371170();
  sub_1D437EC30();
  JUMPOUT(0x1D437AA60);
}

void sub_1D437AAC8()
{
  uint64_t v0;

  sub_1D437EE44();
  sub_1D437EC6C();
  if (v0)
    JUMPOUT(0x1D437AAF0);
  JUMPOUT(0x1D437AB44);
}

void sub_1D437AB04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D437EE50();
  sub_1D437EC6C();
  *(_QWORD *)(v2 - 184) = v1;
  if (v1)
  {
    sub_1D4371170();
    sub_1D437EC30();
    JUMPOUT(0x1D437AA60);
  }
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 144) + 8))(v0, *(_QWORD *)(v2 - 128));
  sub_1D4371170();
  sub_1D437EC30();
  JUMPOUT(0x1D437AB7CLL);
}

void sub_1D437AB84(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    if (a3 == 1)
    {
      sub_1D437ECC0();
      sub_1D437EC8C();
      sub_1D42D6190();
    }
    else
    {
      sub_1D42E4000();
    }
  }
  else
  {
    sub_1D437ECC8();
    sub_1D437EC8C();
    sub_1D42D6224();
  }
}

void sub_1D437ABE0(int64x2_t *a1, char a2, int64x2_t *a3, char a4)
{
  if (a2)
  {
    if (a2 == 1 && a4 == 1)
      sub_1D42FE2DC((uint64_t)a1, (uint64_t)a3);
  }
  else if (!a4)
  {
    sub_1D42FE260(a1, a3);
  }
}

uint64_t sub_1D437AC34(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6669636570736E75 && a2 == 0xEB00000000646569;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x65676E6172 && a2 == 0xE500000000000000;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x746172656D756E65 && a2 == 0xEA00000000006465)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1D451B820();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1D437AD9C(char a1)
{
  if (!a1)
    return 0x6669636570736E75;
  if (a1 == 1)
    return 0x65676E6172;
  return 0x746172656D756E65;
}

void sub_1D437ADFC()
{
  sub_1D42BE9A8();
  sub_1D42E4000();
  sub_1D42CB230();
  sub_1D42BE978();
}

void sub_1D437AE24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  sub_1D42BE910();
  v16 = v3;
  v4 = sub_1D42B28FC(&qword_1EFE4DDB8);
  v14 = *(_QWORD *)(v4 - 8);
  v15 = v4;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42BE768();
  v13 = v6;
  v7 = sub_1D42B28FC(&qword_1EFE4DDC0);
  v11 = *(_QWORD *)(v7 - 8);
  v12 = v7;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v8);
  sub_1D437EC98();
  sub_1D42B28FC(&qword_1EFE4DDC8);
  sub_1D42F86A4();
  MEMORY[0x1E0C80A78](v9);
  sub_1D42F1ED4();
  v17 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE4DDD0) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v10);
  sub_1D42D7108();
  sub_1D437EDE0();
  sub_1D437D8AC();
  sub_1D42F8684();
  if (v16)
  {
    if (v16 != 1)
    {
      sub_1D437D9E4();
      sub_1D437EC08();
      sub_1D42F1FA0(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
      sub_1D4306FEC(v17);
      goto LABEL_7;
    }
    sub_1D437EE2C();
    sub_1D437EC08();
    sub_1D42B28FC(&qword_1EFE4DD70);
    sub_1D437DA20(&qword_1EFE4DDD8, (unint64_t *)&unk_1EFE512C0, MEMORY[0x1E0DEB420], MEMORY[0x1E0DEAF10]);
    sub_1D451B760();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  else
  {
    sub_1D437EE5C();
    sub_1D437EC08();
    sub_1D42B28FC(&qword_1EFE4DD90);
    sub_1D437DAA8();
    sub_1D451B760();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v2, v12);
  }
  sub_1D4306FEC(v17);
LABEL_7:
  sub_1D42BE844();
}

void sub_1D437B07C(uint64_t a1, char a2)
{
  sub_1D42BE9A8();
  if (a2)
  {
    if (a2 == 1)
    {
      sub_1D437ECC0();
      sub_1D437ED40();
    }
    else
    {
      sub_1D42E4000();
    }
  }
  else
  {
    sub_1D437ECC8();
    sub_1D437ED34();
  }
  sub_1D42CB230();
  sub_1D42BE978();
}

_QWORD *sub_1D437B0D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v30;
  void (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;

  sub_1D42BE910();
  v5 = v4;
  sub_1D42B28FC(&qword_1EFE4DD40);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v6);
  sub_1D4321160(v7, v32);
  v35 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE4DD48) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v8);
  sub_1D437EC50(v9, v33);
  v10 = sub_1D42B28FC(&qword_1EFE4DD50);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1D437EC98();
  v12 = sub_1D42B28FC(&qword_1EFE4DD58);
  sub_1D437EDFC();
  MEMORY[0x1E0C80A78](v13);
  sub_1D434799C();
  v37 = v5;
  v14 = (_QWORD *)sub_1D437EC8C();
  v16 = sub_1D42B5528(v14, v15);
  sub_1D437D8AC();
  sub_1D451BA0C();
  if (v0)
  {
    v17 = v37;
    goto LABEL_12;
  }
  v34 = v1;
  v38 = v2;
  v18 = sub_1D451B6D0();
  v19 = *(_QWORD *)(v18 + 16);
  v20 = v12;
  if (!v19)
  {
    v17 = v37;
LABEL_11:
    v16 = (_QWORD *)v38;
    v26 = sub_1D437EE80();
    sub_1D42B6D0C();
    v28 = v27;
    sub_1D42B28FC(&qword_1EFE49ED0);
    *v28 = &unk_1E979FCD8;
    sub_1D451B61C();
    sub_1D437ECB0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v28, *MEMORY[0x1E0DEC450], v26);
    swift_willThrow();
    sub_1D4371170();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v38, v20);
    goto LABEL_12;
  }
  v21 = *(unsigned __int8 *)(v18 + 32);
  sub_1D43B7948(1, v19, v18, v18 + 32, 0, (2 * v19) | 1);
  v23 = v22;
  v25 = v24;
  sub_1D42CB5C8();
  if (v23 != v25 >> 1)
  {
    v17 = v37;
    v20 = v12;
    goto LABEL_11;
  }
  if (v21)
  {
    if (v21 == 1)
    {
      sub_1D437EE5C();
      sub_1D437EC80();
      sub_1D42B28FC(&qword_1EFE4DD90);
      sub_1D437D960();
      sub_1D451B688();
      v17 = v37;
      sub_1D437ED90(v36, *(uint64_t (**)(uint64_t, uint64_t))(v35 + 8));
      sub_1D42E3CB4();
      sub_1D4307058(v38, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    }
    else
    {
      sub_1D437EE2C();
      sub_1D437EC80();
      sub_1D42B28FC(&qword_1EFE4DD70);
      sub_1D437DA20(&qword_1EFE4DD78, &qword_1EFE4DD80, MEMORY[0x1E0DEB448], MEMORY[0x1E0DEAF40]);
      sub_1D451B688();
      v17 = v37;
      sub_1D437ED20();
      sub_1D42E3CB4();
      v30 = sub_1D437ECF8();
      v31(v30);
    }
    v16 = v39;
  }
  else
  {
    sub_1D437D9E4();
    sub_1D451B610();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v3, v10);
    sub_1D42E3CB4();
    sub_1D42F1FA0(v38, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v16 = 0;
    v17 = v37;
  }
LABEL_12:
  sub_1D42B5400(v17);
  return v16;
}

void sub_1D437B5A8()
{
  sub_1D434864C();
}

uint64_t sub_1D437B5C0()
{
  char *v0;

  return sub_1D4379214(*v0);
}

uint64_t sub_1D437B5C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D43790CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D437B5EC()
{
  sub_1D437D6B4();
  return sub_1D451BA3C();
}

uint64_t sub_1D437B614()
{
  sub_1D437D6B4();
  return sub_1D451BA48();
}

double sub_1D437B63C@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  double result;
  __int128 v4;
  _BYTE v5[25];

  sub_1D43793C0();
  if (!v1)
  {
    *a1 = v4;
    a1[1] = *(_OWORD *)v5;
    result = *(double *)&v5[9];
    *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)&v5[9];
  }
  return result;
}

uint64_t sub_1D437B67C()
{
  return sub_1D4379268();
}

void sub_1D437B6B4()
{
  sub_1D4379398();
}

void sub_1D437B6EC()
{
  sub_1D4378DE8();
}

uint64_t sub_1D437B724()
{
  sub_1D451B958();
  sub_1D4378DE8();
  return sub_1D451B994();
}

uint64_t sub_1D437B770(__int128 *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  _OWORD v8[2];

  v2 = a1[1];
  v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 9) = *(__int128 *)((char *)a1 + 25);
  v3 = a2[1];
  v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 9) = *(__int128 *)((char *)a2 + 25);
  return sub_1D4378EFC((uint64_t)&v5, (uint64_t)&v7) & 1;
}

uint64_t sub_1D437B7B8()
{
  char *v0;

  return sub_1D43797E8(*v0);
}

uint64_t sub_1D437B7C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D4379694(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D437B7E4()
{
  sub_1D437DB88();
  return sub_1D451BA3C();
}

uint64_t sub_1D437B80C()
{
  sub_1D437DB88();
  return sub_1D451BA48();
}

uint64_t sub_1D437B834()
{
  sub_1D437DC00();
  return sub_1D451BA3C();
}

uint64_t sub_1D437B85C()
{
  sub_1D437DC00();
  return sub_1D451BA48();
}

void sub_1D437B884()
{
  sub_1D437ADFC();
}

uint64_t sub_1D437B89C()
{
  sub_1D437DC3C();
  return sub_1D451BA3C();
}

uint64_t sub_1D437B8C4()
{
  sub_1D437DC3C();
  return sub_1D451BA48();
}

uint64_t sub_1D437B8EC()
{
  sub_1D437DBC4();
  return sub_1D451BA3C();
}

uint64_t sub_1D437B914()
{
  sub_1D437DBC4();
  return sub_1D451BA48();
}

uint64_t sub_1D437B93C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  char v5;

  result = sub_1D4379AE4();
  if (!v1)
  {
    *(_QWORD *)a1 = result;
    *(_QWORD *)(a1 + 8) = v4;
    *(_BYTE *)(a1 + 16) = v5;
  }
  return result;
}

void sub_1D437B968()
{
  sub_1D4379840();
}

void sub_1D437B984()
{
  uint64_t v0;

  sub_1D4379A4C(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

void sub_1D437B990(uint64_t a1)
{
  uint64_t v1;

  sub_1D4379554(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
}

uint64_t sub_1D437B99C()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1D451B958();
  if (v1 == 254 || v1 == 255)
    goto LABEL_9;
  sub_1D451B964();
  sub_1D451B964();
  if (v1)
  {
    if (v1 != 1)
    {
LABEL_9:
      sub_1D451B964();
      return sub_1D451B994();
    }
    sub_1D451B964();
    sub_1D42D6190();
  }
  else
  {
    sub_1D451B964();
    sub_1D42D6224();
  }
  return sub_1D451B994();
}

uint64_t sub_1D437BA60(uint64_t a1, uint64_t a2)
{
  return sub_1D43795E4(*(_QWORD *)a1, *(int64x2_t **)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(_QWORD *)a2, *(int64x2_t **)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t sub_1D437BA7C()
{
  char *v0;

  return sub_1D437A098(*v0);
}

uint64_t sub_1D437BA84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D4379F88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D437BAA8()
{
  sub_1D437D780();
  return sub_1D451BA3C();
}

uint64_t sub_1D437BAD0()
{
  sub_1D437D780();
  return sub_1D451BA48();
}

uint64_t sub_1D437BAF8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  char v6;

  result = sub_1D437A248(a1);
  if (!v2)
  {
    *(_BYTE *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6;
  }
  return result;
}

void sub_1D437BB28()
{
  sub_1D437A0DC();
}

void sub_1D437BB48()
{
  unsigned __int8 *v0;

  sub_1D437A1E0(*v0, *((_QWORD *)v0 + 1), v0[16]);
}

void sub_1D437BB58(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1D4379EB4(a1, *v1, *((_QWORD *)v1 + 1), v1[16]);
}

uint64_t sub_1D437BB68()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1D451B958();
  sub_1D451B964();
  if (v1)
  {
    sub_1D451B964();
    if (v1 == 1)
      sub_1D42D6190();
  }
  else
  {
    sub_1D451B964();
    sub_1D42D6224();
  }
  return sub_1D451B994();
}

uint64_t sub_1D437BC00(int64x2_t **a1, int64x2_t **a2)
{
  return sub_1D4379F14(*(unsigned __int8 *)a1, a1[1], *((unsigned __int8 *)a1 + 16), *(unsigned __int8 *)a2, a2[1], *((_BYTE *)a2 + 16));
}

uint64_t sub_1D437BC20()
{
  unsigned __int8 *v0;

  return sub_1D437A520(*v0);
}

uint64_t sub_1D437BC28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D437A378(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D437BC4C()
{
  sub_1D437E690();
  return sub_1D451BA3C();
}

uint64_t sub_1D437BC74()
{
  sub_1D437E690();
  return sub_1D451BA48();
}

uint64_t sub_1D437BC9C()
{
  sub_1D437E780();
  return sub_1D451BA3C();
}

uint64_t sub_1D437BCC4()
{
  sub_1D437E780();
  return sub_1D451BA48();
}

uint64_t sub_1D437BCEC()
{
  sub_1D437E744();
  return sub_1D451BA3C();
}

uint64_t sub_1D437BD14()
{
  sub_1D437E744();
  return sub_1D451BA48();
}

uint64_t sub_1D437BD3C()
{
  sub_1D437E708();
  return sub_1D451BA3C();
}

uint64_t sub_1D437BD64()
{
  sub_1D437E708();
  return sub_1D451BA48();
}

uint64_t sub_1D437BD8C()
{
  sub_1D437E6CC();
  return sub_1D451BA3C();
}

uint64_t sub_1D437BDB4()
{
  sub_1D437E6CC();
  return sub_1D451BA48();
}

_QWORD *sub_1D437BDDC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _QWORD *result;

  result = sub_1D437A7A8();
  if (!v1)
    *a1 = (_BYTE)result;
  return result;
}

void sub_1D437BE04()
{
  sub_1D437A590();
}

void sub_1D437BE1C()
{
  sub_1D43486E8();
}

uint64_t sub_1D437BE34()
{
  char *v0;

  return sub_1D437AD9C(*v0);
}

uint64_t sub_1D437BE3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D437AC34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D437BE60()
{
  sub_1D437D8AC();
  return sub_1D451BA3C();
}

uint64_t sub_1D437BE88()
{
  sub_1D437D8AC();
  return sub_1D451BA48();
}

uint64_t sub_1D437BEB0()
{
  sub_1D437D8E8();
  return sub_1D451BA3C();
}

uint64_t sub_1D437BED8()
{
  sub_1D437D8E8();
  return sub_1D451BA48();
}

void sub_1D437BF00()
{
  sub_1D451B958();
  sub_1D42E4000();
  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t sub_1D437BF2C()
{
  sub_1D437D924();
  return sub_1D451BA3C();
}

uint64_t sub_1D437BF54()
{
  sub_1D437D924();
  return sub_1D451BA48();
}

uint64_t sub_1D437BF7C()
{
  sub_1D437D9E4();
  return sub_1D451BA3C();
}

uint64_t sub_1D437BFA4()
{
  sub_1D437D9E4();
  return sub_1D451BA48();
}

_QWORD *sub_1D437BFCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *result;
  char v4;

  result = sub_1D437B0D8();
  if (!v1)
  {
    *(_QWORD *)a1 = result;
    *(_BYTE *)(a1 + 8) = v4;
  }
  return result;
}

void sub_1D437BFF8()
{
  sub_1D437AE24();
}

void sub_1D437C014()
{
  uint64_t v0;

  sub_1D437B07C(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

void sub_1D437C020(uint64_t a1)
{
  uint64_t v1;

  sub_1D437AB84(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

uint64_t sub_1D437C02C()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_1D451B958();
  if (v1)
  {
    sub_1D451B964();
    if (v1 == 1)
      sub_1D42D6190();
  }
  else
  {
    sub_1D451B964();
    sub_1D42D6224();
  }
  return sub_1D451B994();
}

void sub_1D437C0B4(uint64_t a1, uint64_t a2)
{
  sub_1D437ABE0(*(int64x2_t **)a1, *(_BYTE *)(a1 + 8), *(int64x2_t **)a2, *(_BYTE *)(a2 + 8));
}

void sub_1D437C0CC(void *a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  _BYTE *v5;

  v2 = (void *)sub_1D451A6C8();
  v3 = objc_msgSend(a1, sel_featureValueForName_, v2);

  if (!v3)
  {
    sub_1D42B7F2C();
    v4 = sub_1D42B6D0C();
    sub_1D437ECD0(v4, v5);
  }
  sub_1D42BE888();
}

void sub_1D437C144(void *a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  _BYTE *v5;

  sub_1D437C0CC(a1);
  if (!v1)
  {
    v3 = v2;
    if (!objc_msgSend(v2, sel_multiArrayValue))
    {
      sub_1D42B7F2C();
      v4 = sub_1D42B6D0C();
      sub_1D437ECD0(v4, v5);
    }

  }
  sub_1D42BE888();
}

uint64_t sub_1D437C1B8(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;

  v2 = objc_msgSend(a1, sel_inputDescriptionsByName);
  sub_1D42E9D88(0, (unint64_t *)&qword_1EFE40360);
  v3 = sub_1D451A5CC();

  v4 = sub_1D437C2D0(v3);
  v5 = swift_bridgeObjectRelease();
  if (!v1)
  {
    v6 = sub_1D435EBD4(v5, sel_outputDescriptionsByName);
    v7 = sub_1D451A5CC();

    sub_1D437C2D0(v7);
    sub_1D42CB208();
  }
  return v4;
}

uint64_t sub_1D437C2D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  char v9;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  char v17;
  unint64_t v18;
  _OWORD *v19;
  __int128 v20;
  uint64_t v21;
  char v22;
  __int128 v23;
  _OWORD v24[2];
  _BYTE v25[24];
  __int128 v26;
  uint64_t v27;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v27 = MEMORY[0x1E0DEE9D8];
  sub_1D437ED98();
  sub_1D42C785C();
  v3 = v27;
  result = sub_1D4396C0C(a1);
  v6 = result;
  v8 = v7;
  v10 = v9 & 1;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    if (((*(_QWORD *)(a1 + 64 + (((unint64_t)v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v8)
      goto LABEL_24;
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v6);
    v13 = *v11;
    v12 = v11[1];
    v14 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v6);
    swift_bridgeObjectRetain_n();
    v15 = v14;
    sub_1D437C558();
    if (v1)
    {
      swift_release();
      sub_1D437EEAC();

      return v3;
    }
    v26 = v23;
    if (v13 == (_QWORD)v23 && v12 == *((_QWORD *)&v23 + 1))
    {

      sub_1D437EEAC();
    }
    else
    {
      sub_1D437EC8C();
      v17 = sub_1D451B820();
      sub_1D42BE8B4();
      if ((v17 & 1) == 0)
      {
        sub_1D42F1244((uint64_t)&v26);
        sub_1D437CD10((_OWORD *)((char *)v24 + 8), (uint64_t)v25);
        sub_1D437CD28((uint64_t)v25);
        type metadata accessor for SNError();
        sub_1D4342D78(0x80000001D4551120, 0xD00000000000001FLL, (uint64_t)"feature name does not match key");
        swift_willThrow();
        swift_release();
        sub_1D42BE8B4();

        return v3;
      }
      sub_1D42BE8B4();

    }
    v27 = v3;
    v18 = *(_QWORD *)(v3 + 16);
    if (v18 >= *(_QWORD *)(v3 + 24) >> 1)
    {
      sub_1D42C785C();
      v3 = v27;
    }
    *(_QWORD *)(v3 + 16) = v18 + 1;
    v19 = (_OWORD *)(v3 + 48 * v18);
    v20 = v24[0];
    *(_OWORD *)((char *)v19 + 57) = *(_OWORD *)((char *)v24 + 9);
    v19[2] = v23;
    v19[3] = v20;
    result = sub_1D437CC94(v6, v8, v10 & 1, a1);
    v6 = result;
    v8 = v21;
    v10 = v22 & 1;
    if (!--v2)
    {
      sub_1D430E804(result, v21, v22 & 1);
      return v3;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

void sub_1D437C558()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  _BYTE *v20;

  sub_1D42BE910();
  v2 = v1;
  v4 = v3;
  v5 = objc_msgSend(v1, sel_type);
  if (v5 == (id)3)
  {
    v14 = 0;
    v11 = 0;
    v13 = -2;
    goto LABEL_9;
  }
  if (v5 == (id)6)
  {
    v14 = 0;
    v11 = 0;
    v13 = -1;
    goto LABEL_9;
  }
  if (v5 != (id)5)
  {
    type metadata accessor for SNError();
    sub_1D4342D78(0x80000001D4551120, 0xD000000000000018, (uint64_t)"unsupported feature type");
LABEL_12:
    swift_willThrow();
    goto LABEL_13;
  }
  v6 = sub_1D435EBD4(5, sel_multiArrayConstraint);
  if (!v6)
  {
    sub_1D42B7F2C();
    sub_1D42B6D0C();
    *v20 = 0;
    goto LABEL_12;
  }
  v7 = v6;
  sub_1D437C6B4(v6);
  v9 = v8;
  v11 = v10;
  v13 = v12;

  if (!v0)
  {
    v14 = v9;
LABEL_9:
    v15 = sub_1D435EBD4((uint64_t)v5, sel_name);
    v16 = sub_1D451A6EC();
    v18 = v17;

    v19 = objc_msgSend(v2, sel_isOptional);
    *(_QWORD *)v4 = v16;
    *(_QWORD *)(v4 + 8) = v18;
    *(_BYTE *)(v4 + 16) = v19;
    *(_QWORD *)(v4 + 24) = v14;
    *(_QWORD *)(v4 + 32) = v11;
    *(_BYTE *)(v4 + 40) = v13;
  }
LABEL_13:
  sub_1D42BE844();
}

void sub_1D437C6B4(void *a1)
{
  uint64_t v1;
  id v3;

  v3 = objc_msgSend(a1, sel_shapeConstraint);
  sub_1D437C74C(v3);

  if (!v1)
    sub_1D437CBFC((uint64_t)objc_msgSend(a1, sel_dataType));
}

void sub_1D437C74C(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v3 = objc_msgSend(a1, sel_type);
  if (v3 == (id)1)
    return;
  if (v3 != (id)2)
  {
    if (v3 == (id)3)
    {
      v4 = objc_msgSend(a1, sel_sizeRangeForDimension);
      sub_1D42E9D88(0, (unint64_t *)&qword_1EFE47310);
      v1 = sub_1D42CB994();

      if ((unint64_t)v1 >> 62)
        goto LABEL_52;
      v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_6;
    }
    sub_1D437CD70();
    sub_1D42B6D0C();
    *v33 = 1;
    swift_willThrow();
    return;
  }
  v19 = objc_msgSend(a1, sel_enumeratedShapes);
  sub_1D42B28FC((uint64_t *)&unk_1EFE4AC90);
  v20 = sub_1D42CB994();

  v21 = *(_QWORD *)(v20 + 16);
  if (!v21)
  {
    sub_1D42BE8B4();
    return;
  }
  v48 = MEMORY[0x1E0DEE9D8];
  sub_1D437ED98();
  sub_1D42C7890();
  v22 = 0;
  v23 = v48;
  v41 = v21;
  v42 = v20 + 32;
  while (1)
  {
    v24 = *(_QWORD *)(v42 + 8 * v22);
    if (v24 >> 62)
      break;
    v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v25)
      goto LABEL_21;
LABEL_31:
    sub_1D42D3258();
    v1 = MEMORY[0x1E0DEE9D8];
LABEL_32:
    v32 = *(_QWORD *)(v23 + 16);
    v31 = *(_QWORD *)(v23 + 24);
    if (v32 >= v31 >> 1)
    {
      sub_1D437EDA8(v31);
      sub_1D42C7890();
    }
    ++v22;
    *(_QWORD *)(v23 + 16) = v32 + 1;
    *(_QWORD *)(v23 + 8 * v32 + 32) = v1;
    if (v22 == v21)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  swift_bridgeObjectRetain();
  v25 = sub_1D451B5A4();
  if (!v25)
    goto LABEL_31;
LABEL_21:
  v45 = v23;
  v46 = MEMORY[0x1E0DEE9D8];
  sub_1D42C73B0();
  if ((v25 & 0x8000000000000000) == 0)
  {
    v43 = v22;
    v26 = 0;
    v1 = v46;
    do
    {
      if ((v24 & 0xC000000000000001) != 0)
        v27 = (id)MEMORY[0x1D825CD78](v26, v24);
      else
        v27 = *(id *)(v24 + 8 * v26 + 32);
      v28 = v27;
      v29 = objc_msgSend(v27, sel_integerValue);

      v30 = *(_QWORD *)(v46 + 16);
      if (v30 >= *(_QWORD *)(v46 + 24) >> 1)
        sub_1D42C73B0();
      ++v26;
      *(_QWORD *)(v46 + 16) = v30 + 1;
      *(_QWORD *)(v46 + 8 * v30 + 32) = v29;
    }
    while (v25 != v26);
    sub_1D42D3258();
    v22 = v43;
    v23 = v45;
    v21 = v41;
    goto LABEL_32;
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  swift_bridgeObjectRetain();
  v5 = sub_1D451B5A4();
  sub_1D42CB208();
LABEL_6:
  v6 = MEMORY[0x1E0DEE9D8];
  if (!v5)
  {
    sub_1D42CB208();
    v8 = MEMORY[0x1E0DEE9D8];
    goto LABEL_38;
  }
  v47 = MEMORY[0x1E0DEE9D8];
  sub_1D42C78F8();
  if (v5 < 0)
  {
    __break(1u);
  }
  else
  {
    v7 = 0;
    v8 = v47;
    v44 = v1 & 0xC000000000000001;
    v9 = v1;
    v10 = v5;
    do
    {
      if (v44)
        v11 = (id)MEMORY[0x1D825CD78](v7, v1);
      else
        v11 = *(id *)(v1 + 8 * v7 + 32);
      v12 = v11;
      v13 = objc_msgSend(v11, sel_rangeValue);
      v15 = v14;

      v17 = *(_QWORD *)(v47 + 16);
      v16 = *(_QWORD *)(v47 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1D437EDA8(v16);
        sub_1D42C78F8();
      }
      ++v7;
      *(_QWORD *)(v47 + 16) = v17 + 1;
      v18 = v47 + 16 * v17;
      *(_QWORD *)(v18 + 32) = v13;
      *(_QWORD *)(v18 + 40) = v15;
      v1 = v9;
    }
    while (v10 != v7);
    sub_1D42CB208();
    v6 = MEMORY[0x1E0DEE9D8];
LABEL_38:
    v34 = *(_QWORD *)(v8 + 16);
    if (v34)
    {
      sub_1D437ED98();
      sub_1D42C78C4();
      v35 = v6;
      v36 = (_QWORD *)(v8 + 40);
      do
      {
        v1 = *(v36 - 1);
        v37 = v1 + *v36;
        if (__OFADD__(v1, *v36))
        {
          v37 = 0x7FFFFFFFFFFFFFFFLL;
        }
        else if (v37 < v1)
        {
          goto LABEL_51;
        }
        v39 = *(_QWORD *)(v35 + 16);
        v38 = *(_QWORD *)(v35 + 24);
        if (v39 >= v38 >> 1)
        {
          sub_1D437EDA8(v38);
          sub_1D42C78C4();
        }
        v36 += 2;
        *(_QWORD *)(v35 + 16) = v39 + 1;
        v40 = v35 + 16 * v39;
        *(_QWORD *)(v40 + 32) = v1;
        *(_QWORD *)(v40 + 40) = v37;
        --v34;
      }
      while (v34);
    }
    sub_1D42CB5C8();
  }
}

uint64_t sub_1D437CBFC(uint64_t a1)
{
  uint64_t v2;
  _BYTE *v3;

  switch(a1)
  {
    case 65552:
      return 0;
    case 131104:
      return 3;
    case 65600:
      return 2;
    case 65568:
      return 1;
  }
  sub_1D437CD70();
  v2 = sub_1D42B6D0C();
  return sub_1D437ECD0(v2, v3);
}

uint64_t sub_1D437CC94(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || -(-1 << *(_BYTE *)(a4 + 32)) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + 64 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return sub_1D451B304();
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1D437CD10(__int128 *a1, uint64_t a2)
{
  __int128 v2;

  v2 = *a1;
  *(_BYTE *)(a2 + 16) = *((_BYTE *)a1 + 16);
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_1D437CD28(uint64_t a1)
{
  sub_1D437CD58(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_1D437CD58(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 0xFDu)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_1D437CD70()
{
  unint64_t result;

  result = qword_1EFE4DCB0;
  if (!qword_1EFE4DCB0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4530CCC, &unk_1E979FA78);
    atomic_store(result, (unint64_t *)&qword_1EFE4DCB0);
  }
  return result;
}

void type metadata accessor for MLFeatureUtils()
{
  sub_1D42CB35C();
}

uint64_t sub_1D437CDB8(uint64_t a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 40) <= 0xFDu)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D437CDF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(unsigned __int8 *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (v5 <= 0xFD)
  {
    *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 40) = v5;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  }
  return a1;
}

uint64_t sub_1D437CE78(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  unsigned int v6;
  __int128 v7;
  char v8;
  char v9;
  char v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = (_OWORD *)(a1 + 24);
  v5 = (_OWORD *)(a2 + 24);
  v6 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
      v10 = *(_BYTE *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_BYTE *)(a1 + 40) = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D42F1244(a1 + 24);
      v8 = *(_BYTE *)(a2 + 40);
      *v4 = *v5;
      *(_BYTE *)(a1 + 40) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
    v9 = *(_BYTE *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 40) = v9;
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = *v5;
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    *v4 = v7;
  }
  return a1;
}

__n128 sub_1D437CF6C(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1D437CF80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  if (*(unsigned __int8 *)(a1 + 40) <= 0xFDu)
  {
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 <= 0xFD)
    {
      *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_BYTE *)(a1 + 40) = v5;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1D42F1244(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t sub_1D437D01C(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 41))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D437D05C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for MLFeatureUtils.FeatureDescription()
{
  sub_1D42CB35C();
}

_BYTE *sub_1D437D0B8(_BYTE *a1, uint64_t a2)
{
  *a1 = *(_BYTE *)a2;
  sub_1D437EE88(*(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
  return a1;
}

uint64_t sub_1D437D0EC(uint64_t a1, uint64_t a2)
{
  char v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D437D134(uint64_t a1, uint64_t a2)
{
  char v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for MLFeatureUtils.MultiArrayConstraint()
{
  sub_1D42CB35C();
}

void type metadata accessor for MLFeatureUtils.DomainError()
{
  sub_1D42CB35C();
}

uint64_t sub_1D437D190(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D437D1C4(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D437D204(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t sub_1D437D218(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D437D250(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D437D290(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1D437D2D4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1D437D2EC(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

void type metadata accessor for MLFeatureUtils.ShapeConstraint()
{
  sub_1D42CB35C();
}

uint64_t sub_1D437D314(uint64_t result)
{
  if (*(unsigned __int8 *)(result + 16) <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D437D32C(uint64_t a1, uint64_t a2)
{
  unsigned int v3;

  v3 = *(unsigned __int8 *)(a2 + 16);
  if (v3 > 2)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    sub_1D437EE88(*(_QWORD *)(a2 + 8), v3);
  }
  return a1;
}

uint64_t sub_1D437D37C(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  char v5;
  char v6;
  __int128 v7;

  v4 = *((unsigned __int8 *)a2 + 16);
  if (*(unsigned __int8 *)(a1 + 16) > 2u)
  {
    if (v4 <= 2)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v6 = *((_BYTE *)a2 + 16);
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      *(_BYTE *)(a1 + 16) = v6;
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    v7 = *a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_OWORD *)a1 = v7;
    return a1;
  }
  if (v4 > 2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(_BYTE *)a1 = *(_BYTE *)a2;
  v5 = *((_BYTE *)a2 + 16);
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  *(_BYTE *)(a1 + 16) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D437D424(uint64_t a1, uint64_t a2)
{
  unsigned int v4;

  if (*(unsigned __int8 *)(a1 + 16) > 2u)
    goto LABEL_5;
  v4 = *(unsigned __int8 *)(a2 + 16);
  if (v4 > 2)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    return a1;
  }
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D437D498(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  unsigned int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 > 2)
    v4 = (v3 ^ 0xFF) + 1;
  else
    v4 = 0;
  if (v4 >= 3)
    return v4 - 2;
  else
    return 0;
}

uint64_t sub_1D437D4E0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -2 - a2;
  }
  return result;
}

uint64_t sub_1D437D52C(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 16);
  if (v1 > 2)
    return (v1 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_1D437D540(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
  }
  else if (a2)
  {
    *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

void type metadata accessor for MLFeatureUtils.FeatureConstraint()
{
  sub_1D42CB35C();
}

unint64_t sub_1D437D578()
{
  unint64_t result;

  result = qword_1EFE4DCB8;
  if (!qword_1EFE4DCB8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4530984, &unk_1E979FEC8);
    atomic_store(result, (unint64_t *)&qword_1EFE4DCB8);
  }
  return result;
}

unint64_t sub_1D437D5B8()
{
  unint64_t result;

  result = qword_1EFE4DCC0;
  if (!qword_1EFE4DCC0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4530A3C, &unk_1E979FCD8);
    atomic_store(result, (unint64_t *)&qword_1EFE4DCC0);
  }
  return result;
}

unint64_t sub_1D437D5F8()
{
  unint64_t result;

  result = qword_1EFE4DCC8;
  if (!qword_1EFE4DCC8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4530B34, &unk_1E979FA78);
    atomic_store(result, (unint64_t *)&qword_1EFE4DCC8);
  }
  return result;
}

unint64_t sub_1D437D638()
{
  unint64_t result;

  result = qword_1EFE4DCD0;
  if (!qword_1EFE4DCD0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4530B5C, &unk_1E97A02A0);
    atomic_store(result, (unint64_t *)&qword_1EFE4DCD0);
  }
  return result;
}

unint64_t sub_1D437D678()
{
  unint64_t result;

  result = qword_1EFE4DCD8;
  if (!qword_1EFE4DCD8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4530C14, &unk_1E979FFE8);
    atomic_store(result, (unint64_t *)&qword_1EFE4DCD8);
  }
  return result;
}

unint64_t sub_1D437D6B4()
{
  unint64_t result;

  result = qword_1EFE4DCE8;
  if (!qword_1EFE4DCE8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531764, &type metadata for MLFeatureUtils.FeatureDescription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DCE8);
  }
  return result;
}

unint64_t sub_1D437D6F0()
{
  unint64_t result;

  result = qword_1EFE4DCF0;
  if (!qword_1EFE4DCF0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4530A14, &unk_1E979FEC8);
    atomic_store(result, (unint64_t *)&qword_1EFE4DCF0);
  }
  return result;
}

unint64_t sub_1D437D72C()
{
  unint64_t result;

  result = qword_1EFE4DD00;
  if (!qword_1EFE4DD00)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45309EC, &unk_1E979FEC8);
    atomic_store(result, (unint64_t *)&qword_1EFE4DD00);
  }
  return result;
}

uint64_t sub_1D437D768(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *a1;
  *(_BYTE *)(a2 + 8) = *((_BYTE *)a1 + 8);
  *(_QWORD *)a2 = v2;
  return a2;
}

unint64_t sub_1D437D780()
{
  unint64_t result;

  result = qword_1EFE4DD10;
  if (!qword_1EFE4DD10)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531714, &type metadata for MLFeatureUtils.MultiArrayConstraint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DD10);
  }
  return result;
}

unint64_t sub_1D437D7BC()
{
  unint64_t result;

  result = qword_1EFE4DD18;
  if (!qword_1EFE4DD18)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45316EC, &unk_1E97A0180);
    atomic_store(result, (unint64_t *)&qword_1EFE4DD18);
  }
  return result;
}

unint64_t sub_1D437D7F8()
{
  unint64_t result;

  result = qword_1EFE4DD20;
  if (!qword_1EFE4DD20)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4530ACC, &unk_1E979FCD8);
    atomic_store(result, (unint64_t *)&qword_1EFE4DD20);
  }
  return result;
}

unint64_t sub_1D437D834()
{
  unint64_t result;

  result = qword_1EFE4DD30;
  if (!qword_1EFE4DD30)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45316C4, &unk_1E97A0180);
    atomic_store(result, (unint64_t *)&qword_1EFE4DD30);
  }
  return result;
}

unint64_t sub_1D437D870()
{
  unint64_t result;

  result = qword_1EFE4DD38;
  if (!qword_1EFE4DD38)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4530AA4, &unk_1E979FCD8);
    atomic_store(result, (unint64_t *)&qword_1EFE4DD38);
  }
  return result;
}

unint64_t sub_1D437D8AC()
{
  unint64_t result;

  result = qword_1EFE4DD60;
  if (!qword_1EFE4DD60)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531674, &type metadata for MLFeatureUtils.ShapeConstraint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DD60);
  }
  return result;
}

unint64_t sub_1D437D8E8()
{
  unint64_t result;

  result = qword_1EFE4DD68;
  if (!qword_1EFE4DD68)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531624, &type metadata for MLFeatureUtils.ShapeConstraint.EnumeratedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DD68);
  }
  return result;
}

unint64_t sub_1D437D924()
{
  unint64_t result;

  result = qword_1EFE4DD88;
  if (!qword_1EFE4DD88)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45315D4, &type metadata for MLFeatureUtils.ShapeConstraint.RangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DD88);
  }
  return result;
}

unint64_t sub_1D437D960()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFE4DD98;
  if (!qword_1EFE4DD98)
  {
    v1 = sub_1D42B8B10(&qword_1EFE4DD90);
    v2 = sub_1D437DB2C(&qword_1EFE4DDA0, &qword_1EFE4DDA8, MEMORY[0x1E0DEB448], MEMORY[0x1E0DEB8B0]);
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFE4DD98);
  }
  return result;
}

unint64_t sub_1D437D9E4()
{
  unint64_t result;

  result = qword_1EFE4DDB0;
  if (!qword_1EFE4DDB0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531584, &type metadata for MLFeatureUtils.ShapeConstraint.UnspecifiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DDB0);
  }
  return result;
}

uint64_t sub_1D437DA20(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = sub_1D42B8B10(&qword_1EFE4DD70);
    v10 = sub_1D437DB2C(a2, &qword_1EFE510F0, a3, a4);
    result = MEMORY[0x1D825E41C](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D437DAA8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFE4DDE0;
  if (!qword_1EFE4DDE0)
  {
    v1 = sub_1D42B8B10(&qword_1EFE4DD90);
    v2 = sub_1D437DB2C(&qword_1EFE4DDE8, &qword_1EFE4DDA8, MEMORY[0x1E0DEB420], MEMORY[0x1E0DEB880]);
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFE4DDE0);
  }
  return result;
}

uint64_t sub_1D437DB2C(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = sub_1D42B8B10(a2);
    v9 = a3;
    result = MEMORY[0x1D825E41C](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D437DB88()
{
  unint64_t result;

  result = qword_1EFE4DE10;
  if (!qword_1EFE4DE10)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531534, &type metadata for MLFeatureUtils.FeatureConstraint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DE10);
  }
  return result;
}

unint64_t sub_1D437DBC4()
{
  unint64_t result;

  result = qword_1EFE4DE18;
  if (!qword_1EFE4DE18)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45314E4, &type metadata for MLFeatureUtils.FeatureConstraint.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DE18);
  }
  return result;
}

unint64_t sub_1D437DC00()
{
  unint64_t result;

  result = qword_1EFE4DE20;
  if (!qword_1EFE4DE20)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531494, &type metadata for MLFeatureUtils.FeatureConstraint.DictionaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DE20);
  }
  return result;
}

unint64_t sub_1D437DC3C()
{
  unint64_t result;

  result = qword_1EFE4DE28;
  if (!qword_1EFE4DE28)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531444, &type metadata for MLFeatureUtils.FeatureConstraint.MultiArrayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DE28);
  }
  return result;
}

unint64_t sub_1D437DC78()
{
  unint64_t result;

  result = qword_1EFE4DE30;
  if (!qword_1EFE4DE30)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4530BEC, &unk_1E97A02A0);
    atomic_store(result, (unint64_t *)&qword_1EFE4DE30);
  }
  return result;
}

unint64_t sub_1D437DCB4()
{
  unint64_t result;

  result = qword_1EFE4DE58;
  if (!qword_1EFE4DE58)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4530BC4, &unk_1E97A02A0);
    atomic_store(result, (unint64_t *)&qword_1EFE4DE58);
  }
  return result;
}

ValueMetadata *type metadata accessor for MLFeatureUtils.FeatureConstraint.CodingKeys()
{
  return &type metadata for MLFeatureUtils.FeatureConstraint.CodingKeys;
}

ValueMetadata *type metadata accessor for MLFeatureUtils.FeatureConstraint.MultiArrayCodingKeys()
{
  return &type metadata for MLFeatureUtils.FeatureConstraint.MultiArrayCodingKeys;
}

ValueMetadata *type metadata accessor for MLFeatureUtils.FeatureConstraint.DictionaryCodingKeys()
{
  return &type metadata for MLFeatureUtils.FeatureConstraint.DictionaryCodingKeys;
}

ValueMetadata *type metadata accessor for MLFeatureUtils.FeatureConstraint.StringCodingKeys()
{
  return &type metadata for MLFeatureUtils.FeatureConstraint.StringCodingKeys;
}

ValueMetadata *type metadata accessor for MLFeatureUtils.ShapeConstraint.CodingKeys()
{
  return &type metadata for MLFeatureUtils.ShapeConstraint.CodingKeys;
}

ValueMetadata *type metadata accessor for MLFeatureUtils.ShapeConstraint.UnspecifiedCodingKeys()
{
  return &type metadata for MLFeatureUtils.ShapeConstraint.UnspecifiedCodingKeys;
}

ValueMetadata *type metadata accessor for MLFeatureUtils.ShapeConstraint.RangeCodingKeys()
{
  return &type metadata for MLFeatureUtils.ShapeConstraint.RangeCodingKeys;
}

uint64_t _s13SoundAnalysis14MLFeatureUtilsV17FeatureConstraintO20MultiArrayCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D437DDA8 + 4 * byte_1D45308BC[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D437DDC8 + 4 * byte_1D45308C1[v4]))();
}

_BYTE *sub_1D437DDA8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D437DDC8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D437DDD0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D437DDD8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D437DDE0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D437DDE8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MLFeatureUtils.ShapeConstraint.EnumeratedCodingKeys()
{
  return &type metadata for MLFeatureUtils.ShapeConstraint.EnumeratedCodingKeys;
}

uint64_t _s13SoundAnalysis14MLFeatureUtilsV20MultiArrayConstraintV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D437DE50 + 4 * byte_1D45308CB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D437DE84 + 4 * byte_1D45308C6[v4]))();
}

uint64_t sub_1D437DE88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D437DE90);
  return result;
}

_BYTE *sub_1D437DE98(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D437DEA0);
  return sub_1D42CB888((_BYTE *)a1, a2 + 1);
}

ValueMetadata *type metadata accessor for MLFeatureUtils.MultiArrayConstraint.CodingKeys()
{
  return &type metadata for MLFeatureUtils.MultiArrayConstraint.CodingKeys;
}

uint64_t _s13SoundAnalysis14MLFeatureUtilsV17FeatureConstraintO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D437DF0C + 4 * byte_1D45308D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D437DF40 + 4 * byte_1D45308D0[v4]))();
}

uint64_t sub_1D437DF44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D437DF4CLL);
  return result;
}

_BYTE *sub_1D437DF54(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D437DF5CLL);
  return sub_1D42CB888((_BYTE *)a1, a2 + 2);
}

ValueMetadata *type metadata accessor for MLFeatureUtils.FeatureDescription.CodingKeys()
{
  return &type metadata for MLFeatureUtils.FeatureDescription.CodingKeys;
}

void type metadata accessor for MLFeatureUtils.MultiArrayDataType()
{
  sub_1D42CB35C();
}

unint64_t sub_1D437DF94()
{
  unint64_t result;

  result = qword_1EFE4DE60;
  if (!qword_1EFE4DE60)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4530E24, &unk_1E97A0180);
    atomic_store(result, (unint64_t *)&qword_1EFE4DE60);
  }
  return result;
}

unint64_t sub_1D437DFD4()
{
  unint64_t result;

  result = qword_1EFE4DE68;
  if (!qword_1EFE4DE68)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4530EDC, &type metadata for MLFeatureUtils.FeatureDescription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DE68);
  }
  return result;
}

unint64_t sub_1D437E014()
{
  unint64_t result;

  result = qword_1EFE4DE70;
  if (!qword_1EFE4DE70)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4530F94, &type metadata for MLFeatureUtils.MultiArrayConstraint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DE70);
  }
  return result;
}

unint64_t sub_1D437E054()
{
  unint64_t result;

  result = qword_1EFE4DE78;
  if (!qword_1EFE4DE78)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453104C, &type metadata for MLFeatureUtils.ShapeConstraint.EnumeratedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DE78);
  }
  return result;
}

unint64_t sub_1D437E094()
{
  unint64_t result;

  result = qword_1EFE4DE80;
  if (!qword_1EFE4DE80)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531104, &type metadata for MLFeatureUtils.ShapeConstraint.RangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DE80);
  }
  return result;
}

unint64_t sub_1D437E0D4()
{
  unint64_t result;

  result = qword_1EFE4DE88;
  if (!qword_1EFE4DE88)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453120C, &type metadata for MLFeatureUtils.ShapeConstraint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DE88);
  }
  return result;
}

unint64_t sub_1D437E114()
{
  unint64_t result;

  result = qword_1EFE4DE90;
  if (!qword_1EFE4DE90)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531364, &type metadata for MLFeatureUtils.FeatureConstraint.MultiArrayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DE90);
  }
  return result;
}

unint64_t sub_1D437E154()
{
  unint64_t result;

  result = qword_1EFE4DE98;
  if (!qword_1EFE4DE98)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453141C, &type metadata for MLFeatureUtils.FeatureConstraint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DE98);
  }
  return result;
}

unint64_t sub_1D437E194()
{
  unint64_t result;

  result = qword_1EFE4DEA0;
  if (!qword_1EFE4DEA0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45312D4, &type metadata for MLFeatureUtils.FeatureConstraint.MultiArrayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DEA0);
  }
  return result;
}

unint64_t sub_1D437E1D4()
{
  unint64_t result;

  result = qword_1EFE4DEA8;
  if (!qword_1EFE4DEA8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45312FC, &type metadata for MLFeatureUtils.FeatureConstraint.MultiArrayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DEA8);
  }
  return result;
}

unint64_t sub_1D437E214()
{
  unint64_t result;

  result = qword_1EFE4DEB0;
  if (!qword_1EFE4DEB0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531284, &type metadata for MLFeatureUtils.FeatureConstraint.DictionaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DEB0);
  }
  return result;
}

unint64_t sub_1D437E254()
{
  unint64_t result;

  result = qword_1EFE4DEB8;
  if (!qword_1EFE4DEB8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45312AC, &type metadata for MLFeatureUtils.FeatureConstraint.DictionaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DEB8);
  }
  return result;
}

unint64_t sub_1D437E294()
{
  unint64_t result;

  result = qword_1EFE4DEC0;
  if (!qword_1EFE4DEC0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531234, &type metadata for MLFeatureUtils.FeatureConstraint.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DEC0);
  }
  return result;
}

unint64_t sub_1D437E2D4()
{
  unint64_t result;

  result = qword_1EFE4DEC8;
  if (!qword_1EFE4DEC8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453125C, &type metadata for MLFeatureUtils.FeatureConstraint.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DEC8);
  }
  return result;
}

unint64_t sub_1D437E314()
{
  unint64_t result;

  result = qword_1EFE4DED0;
  if (!qword_1EFE4DED0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453138C, &type metadata for MLFeatureUtils.FeatureConstraint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DED0);
  }
  return result;
}

unint64_t sub_1D437E354()
{
  unint64_t result;

  result = qword_1EFE4DED8;
  if (!qword_1EFE4DED8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45313B4, &type metadata for MLFeatureUtils.FeatureConstraint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DED8);
  }
  return result;
}

unint64_t sub_1D437E394()
{
  unint64_t result;

  result = qword_1EFE4DEE0;
  if (!qword_1EFE4DEE0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453112C, &type metadata for MLFeatureUtils.ShapeConstraint.UnspecifiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DEE0);
  }
  return result;
}

unint64_t sub_1D437E3D4()
{
  unint64_t result;

  result = qword_1EFE4DEE8;
  if (!qword_1EFE4DEE8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531154, &type metadata for MLFeatureUtils.ShapeConstraint.UnspecifiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DEE8);
  }
  return result;
}

unint64_t sub_1D437E414()
{
  unint64_t result;

  result = qword_1EFE4DEF0;
  if (!qword_1EFE4DEF0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531074, &type metadata for MLFeatureUtils.ShapeConstraint.RangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DEF0);
  }
  return result;
}

unint64_t sub_1D437E454()
{
  unint64_t result;

  result = qword_1EFE4DEF8;
  if (!qword_1EFE4DEF8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453109C, &type metadata for MLFeatureUtils.ShapeConstraint.RangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DEF8);
  }
  return result;
}

unint64_t sub_1D437E494()
{
  unint64_t result;

  result = qword_1EFE4DF00;
  if (!qword_1EFE4DF00)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4530FBC, &type metadata for MLFeatureUtils.ShapeConstraint.EnumeratedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DF00);
  }
  return result;
}

unint64_t sub_1D437E4D4()
{
  unint64_t result;

  result = qword_1EFE4DF08;
  if (!qword_1EFE4DF08)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4530FE4, &type metadata for MLFeatureUtils.ShapeConstraint.EnumeratedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DF08);
  }
  return result;
}

unint64_t sub_1D437E514()
{
  unint64_t result;

  result = qword_1EFE4DF10;
  if (!qword_1EFE4DF10)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453117C, &type metadata for MLFeatureUtils.ShapeConstraint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DF10);
  }
  return result;
}

unint64_t sub_1D437E554()
{
  unint64_t result;

  result = qword_1EFE4DF18;
  if (!qword_1EFE4DF18)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45311A4, &type metadata for MLFeatureUtils.ShapeConstraint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DF18);
  }
  return result;
}

unint64_t sub_1D437E594()
{
  unint64_t result;

  result = qword_1EFE4DF20;
  if (!qword_1EFE4DF20)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4530F04, &type metadata for MLFeatureUtils.MultiArrayConstraint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DF20);
  }
  return result;
}

unint64_t sub_1D437E5D4()
{
  unint64_t result;

  result = qword_1EFE4DF28;
  if (!qword_1EFE4DF28)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4530F2C, &type metadata for MLFeatureUtils.MultiArrayConstraint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DF28);
  }
  return result;
}

unint64_t sub_1D437E614()
{
  unint64_t result;

  result = qword_1EFE4DF30;
  if (!qword_1EFE4DF30)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4530E4C, &type metadata for MLFeatureUtils.FeatureDescription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DF30);
  }
  return result;
}

unint64_t sub_1D437E654()
{
  unint64_t result;

  result = qword_1EFE4DF38;
  if (!qword_1EFE4DF38)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4530E74, &type metadata for MLFeatureUtils.FeatureDescription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DF38);
  }
  return result;
}

unint64_t sub_1D437E690()
{
  unint64_t result;

  result = qword_1EFE4DF68;
  if (!qword_1EFE4DF68)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531B5C, &type metadata for MLFeatureUtils.MultiArrayDataType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DF68);
  }
  return result;
}

unint64_t sub_1D437E6CC()
{
  unint64_t result;

  result = qword_1EFE4DF70;
  if (!qword_1EFE4DF70)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531B0C, &type metadata for MLFeatureUtils.MultiArrayDataType.Int32CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DF70);
  }
  return result;
}

unint64_t sub_1D437E708()
{
  unint64_t result;

  result = qword_1EFE4DF78;
  if (!qword_1EFE4DF78)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531ABC, &type metadata for MLFeatureUtils.MultiArrayDataType.Float64CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DF78);
  }
  return result;
}

unint64_t sub_1D437E744()
{
  unint64_t result;

  result = qword_1EFE4DF80;
  if (!qword_1EFE4DF80)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531A6C, &type metadata for MLFeatureUtils.MultiArrayDataType.Float32CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DF80);
  }
  return result;
}

unint64_t sub_1D437E780()
{
  unint64_t result;

  result = qword_1EFE4DF88;
  if (!qword_1EFE4DF88)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531A1C, &type metadata for MLFeatureUtils.MultiArrayDataType.Float16CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DF88);
  }
  return result;
}

uint64_t _s13SoundAnalysis14MLFeatureUtilsV18MultiArrayDataTypeO10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_1D42CB898(-1);
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_1D42CB898((*a1 | (v4 << 8)) - 4);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_1D42CB898((*a1 | (v4 << 8)) - 4);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_1D42CB898((*a1 | (v4 << 8)) - 4);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return sub_1D42CB898(v8);
}

uint64_t _s13SoundAnalysis14MLFeatureUtilsV18MultiArrayDataTypeO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D437E88C + 4 * byte_1D45308DF[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D437E8C0 + 4 * byte_1D45308DA[v4]))();
}

uint64_t sub_1D437E8C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D437E8CCLL);
  return result;
}

_BYTE *sub_1D437E8D4(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D437E8DCLL);
  return sub_1D42CB888((_BYTE *)a1, a2 + 3);
}

ValueMetadata *type metadata accessor for MLFeatureUtils.MultiArrayDataType.CodingKeys()
{
  return &type metadata for MLFeatureUtils.MultiArrayDataType.CodingKeys;
}

ValueMetadata *type metadata accessor for MLFeatureUtils.MultiArrayDataType.Float16CodingKeys()
{
  return &type metadata for MLFeatureUtils.MultiArrayDataType.Float16CodingKeys;
}

ValueMetadata *type metadata accessor for MLFeatureUtils.MultiArrayDataType.Float32CodingKeys()
{
  return &type metadata for MLFeatureUtils.MultiArrayDataType.Float32CodingKeys;
}

ValueMetadata *type metadata accessor for MLFeatureUtils.MultiArrayDataType.Float64CodingKeys()
{
  return &type metadata for MLFeatureUtils.MultiArrayDataType.Float64CodingKeys;
}

ValueMetadata *type metadata accessor for MLFeatureUtils.MultiArrayDataType.Int32CodingKeys()
{
  return &type metadata for MLFeatureUtils.MultiArrayDataType.Int32CodingKeys;
}

unint64_t sub_1D437E940()
{
  unint64_t result;

  result = qword_1EFE4DFB8;
  if (!qword_1EFE4DFB8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45319F4, &type metadata for MLFeatureUtils.MultiArrayDataType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DFB8);
  }
  return result;
}

unint64_t sub_1D437E980()
{
  unint64_t result;

  result = qword_1EFE4DFC0;
  if (!qword_1EFE4DFC0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531914, &type metadata for MLFeatureUtils.MultiArrayDataType.Float16CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DFC0);
  }
  return result;
}

unint64_t sub_1D437E9C0()
{
  unint64_t result;

  result = qword_1EFE4DFC8;
  if (!qword_1EFE4DFC8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453193C, &type metadata for MLFeatureUtils.MultiArrayDataType.Float16CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DFC8);
  }
  return result;
}

unint64_t sub_1D437EA00()
{
  unint64_t result;

  result = qword_1EFE4DFD0;
  if (!qword_1EFE4DFD0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45318C4, &type metadata for MLFeatureUtils.MultiArrayDataType.Float32CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DFD0);
  }
  return result;
}

unint64_t sub_1D437EA40()
{
  unint64_t result;

  result = qword_1EFE4DFD8;
  if (!qword_1EFE4DFD8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45318EC, &type metadata for MLFeatureUtils.MultiArrayDataType.Float32CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DFD8);
  }
  return result;
}

unint64_t sub_1D437EA80()
{
  unint64_t result;

  result = qword_1EFE4DFE0;
  if (!qword_1EFE4DFE0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531874, &type metadata for MLFeatureUtils.MultiArrayDataType.Float64CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DFE0);
  }
  return result;
}

unint64_t sub_1D437EAC0()
{
  unint64_t result;

  result = qword_1EFE4DFE8;
  if (!qword_1EFE4DFE8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453189C, &type metadata for MLFeatureUtils.MultiArrayDataType.Float64CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DFE8);
  }
  return result;
}

unint64_t sub_1D437EB00()
{
  unint64_t result;

  result = qword_1EFE4DFF0;
  if (!qword_1EFE4DFF0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531824, &type metadata for MLFeatureUtils.MultiArrayDataType.Int32CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DFF0);
  }
  return result;
}

unint64_t sub_1D437EB40()
{
  unint64_t result;

  result = qword_1EFE4DFF8;
  if (!qword_1EFE4DFF8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453184C, &type metadata for MLFeatureUtils.MultiArrayDataType.Int32CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4DFF8);
  }
  return result;
}

unint64_t sub_1D437EB80()
{
  unint64_t result;

  result = qword_1EFE4E000;
  if (!qword_1EFE4E000)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531964, &type metadata for MLFeatureUtils.MultiArrayDataType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4E000);
  }
  return result;
}

unint64_t sub_1D437EBC0()
{
  unint64_t result;

  result = qword_1EFE4E008;
  if (!qword_1EFE4E008)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453198C, &type metadata for MLFeatureUtils.MultiArrayDataType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4E008);
  }
  return result;
}

uint64_t sub_1D437EC08()
{
  return sub_1D451B6F4();
}

uint64_t sub_1D437EC18()
{
  return sub_1D451B610();
}

uint64_t sub_1D437EC30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_1D437EC40()
{
  return sub_1D451B6F4();
}

void sub_1D437EC50(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1D437EC6C()
{
  return sub_1D451B610();
}

uint64_t sub_1D437EC80()
{
  return sub_1D451B610();
}

uint64_t sub_1D437EC8C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D437ECB0()
{
  return sub_1D451B454();
}

uint64_t sub_1D437ECC0()
{
  return sub_1D451B964();
}

uint64_t sub_1D437ECC8()
{
  return sub_1D451B964();
}

uint64_t sub_1D437ECD0(uint64_t a1, _BYTE *a2)
{
  *a2 = 0;
  return swift_willThrow();
}

void sub_1D437ECE0()
{
  sub_1D42D6190();
}

void sub_1D437ECEC()
{
  sub_1D42D6224();
}

uint64_t sub_1D437ECF8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D437ED0C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D437ED20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 136) + 8))(v0, v1);
}

void sub_1D437ED34()
{
  sub_1D42D6224();
}

void sub_1D437ED40()
{
  sub_1D42D6190();
}

uint64_t sub_1D437ED4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, a2, v2);
}

uint64_t sub_1D437ED60()
{
  return sub_1D451B688();
}

void sub_1D437ED74(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1D437ED90@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_1D437ED98()
{
  return 0;
}

BOOL sub_1D437EDA8@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_1D437EDB8(uint64_t *a1)
{
  uint64_t v1;

  return sub_1D437D768(a1, v1 - 48);
}

uint64_t sub_1D437EDD0()
{
  return sub_1D451B760();
}

_QWORD *sub_1D437EDE0()
{
  _QWORD *v0;
  uint64_t v1;

  return sub_1D42B5528(v0, v1);
}

uint64_t sub_1D437EE0C()
{
  uint64_t v0;

  return v0 - 104;
}

uint64_t sub_1D437EE20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

unint64_t sub_1D437EE2C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 2;
  return sub_1D437D8E8();
}

unint64_t sub_1D437EE38()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 104) = 2;
  return sub_1D437DBC4();
}

unint64_t sub_1D437EE44()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 2;
  return sub_1D437E708();
}

unint64_t sub_1D437EE50()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 3;
  return sub_1D437E6CC();
}

unint64_t sub_1D437EE5C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 1;
  return sub_1D437D924();
}

unint64_t sub_1D437EE68()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 104) = 1;
  return sub_1D437DC00();
}

unint64_t sub_1D437EE74()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 1;
  return sub_1D437E744();
}

uint64_t sub_1D437EE80()
{
  return sub_1D451B460();
}

uint64_t sub_1D437EE88@<X0>(uint64_t a1@<X0>, char a2@<W8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 8) = a1;
  *(_BYTE *)(v2 + 16) = a2;
  return swift_bridgeObjectRetain();
}

int32x2_t sub_1D437EE94(uint64_t a1, int64x2_t *a2, uint64_t a3, uint64_t a4, int64x2_t *a5)
{
  return sub_1D42FE260(a2, a5);
}

void sub_1D437EEA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1D42FE2DC(a2, a5);
}

uint64_t sub_1D437EEAC()
{
  return swift_bridgeObjectRelease_n();
}

id sub_1D437EEB8(char a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  objc_class *v9;
  char *v10;
  id v11;
  objc_super v13;
  char v14;

  sub_1D42B28FC(qword_1EFE40540);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1D45295F0;
  v14 = a1;
  v5 = sub_1D451A728();
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v6;
  *(_QWORD *)(v4 + 88) = sub_1D42E9D88(0, &qword_1EFE40498);
  *(_QWORD *)(v4 + 64) = a2;
  sub_1D42E9D88(0, &qword_1EFE404A8);
  v7 = a2;
  v8 = MEMORY[0x1D825CA00](v4);
  v9 = (objc_class *)type metadata accessor for SNMLModelCacheKey();
  v10 = (char *)objc_allocWithZone(v9);
  *(_QWORD *)&v10[OBJC_IVAR____TtC13SoundAnalysis17SNMLModelCacheKey_keys] = v8;
  v13.receiver = v10;
  v13.super_class = v9;
  v11 = objc_msgSendSuper2(&v13, sel_init);

  return v11;
}

id sub_1D437EFBC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  objc_class *v4;
  char *v5;
  id v6;
  id result;
  objc_super v8;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC13SoundAnalysis17SNMLModelCacheKey_keys);
  v4 = (objc_class *)type metadata accessor for SNMLModelCacheKey();
  v5 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v5[OBJC_IVAR____TtC13SoundAnalysis17SNMLModelCacheKey_keys] = v3;
  v8.receiver = v5;
  v8.super_class = v4;
  v6 = v3;
  result = objc_msgSendSuper2(&v8, sel_init);
  a1[3] = v4;
  *a1 = result;
  return result;
}

id sub_1D437F0B8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC13SoundAnalysis17SNMLModelCacheKey_keys), sel_hash);
}

uint64_t sub_1D437F0D0(uint64_t a1)
{
  char *v1;
  void *v2;
  id v3;
  id v4;
  char *v6;
  _BYTE v7[24];
  uint64_t v8;

  sub_1D42B28B4(a1, (uint64_t)v7);
  if (!v8)
  {
    sub_1D42B5464((uint64_t)v7);
    return 0;
  }
  type metadata accessor for SNMLModelCacheKey();
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  if (v6 == v1)
  {

    return 1;
  }
  else
  {
    v2 = *(void **)&v1[OBJC_IVAR____TtC13SoundAnalysis17SNMLModelCacheKey_keys];
    v3 = *(id *)&v6[OBJC_IVAR____TtC13SoundAnalysis17SNMLModelCacheKey_keys];
    v4 = objc_msgSend(v2, sel_isEqual_, v3);

  }
  return (uint64_t)v4;
}

void sub_1D437F208()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1D437F240()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SNMLModelCacheKey();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SNMLModelCacheKey()
{
  return objc_opt_self();
}

uint64_t sub_1D437F2A0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6F72446C65646F6DLL && a2 == 0xEA00000000003470)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1D451B820();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1D437F330()
{
  return 0x6F72446C65646F6DLL;
}

void sub_1D437F34C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v2 = sub_1D42B28FC(&qword_1EFE4E048);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1D42D7108();
  v4 = sub_1D42B28FC(&qword_1EFE4E050);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42B5528(a1, a1[3]);
  sub_1D437FE4C();
  sub_1D451BA24();
  sub_1D437FE88();
  sub_1D451B6F4();
  sub_1D430DC90(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1D42BE844();
}

void sub_1D437F45C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = sub_1D42B28FC(&qword_1EFE4E028);
  v2 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D42B28FC(&qword_1EFE4E030);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1D42D7108();
  sub_1D42B5528(a1, a1[3]);
  sub_1D437FE4C();
  v7 = v22;
  v8 = a1;
  sub_1D451BA0C();
  if (v7)
    goto LABEL_6;
  v20 = v2;
  v22 = v6;
  v9 = sub_1D451B6D0();
  v10 = *(_QWORD *)(v9 + 16);
  if (!v10
    || (sub_1D43B7948(1, v10, v9, v9 + 32, 0, (2 * v10) | 1),
        v12 = v11,
        v14 = v13,
        swift_bridgeObjectRelease(),
        v12 != v14 >> 1))
  {
    v15 = sub_1D451B460();
    sub_1D42B6D0C();
    v17 = v16;
    sub_1D42B28FC(&qword_1EFE49ED0);
    *v17 = &type metadata for SNLanguageAlignedAVFuser.FuserVersion;
    sub_1D451B61C();
    sub_1D451B454();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x1E0DEC450], v15);
    swift_willThrow();
    v18 = v22;
    v8 = a1;
    swift_unknownObjectRelease();
    sub_1D430DC90(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
LABEL_6:
    v19 = (uint64_t)v8;
    goto LABEL_7;
  }
  sub_1D437FE88();
  sub_1D451B610();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v21);
  swift_unknownObjectRelease();
  sub_1D430DC90(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  v19 = (uint64_t)a1;
LABEL_7:
  sub_1D42B5400(v19);
  sub_1D42BE844();
}

void sub_1D437F6C8()
{
  sub_1D42C44C0();
}

uint64_t sub_1D437F6D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D437F2A0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D437F6FC()
{
  sub_1D437FE4C();
  return sub_1D451BA3C();
}

uint64_t sub_1D437F724()
{
  sub_1D437FE4C();
  return sub_1D451BA48();
}

uint64_t sub_1D437F74C()
{
  sub_1D437FE88();
  return sub_1D451BA3C();
}

uint64_t sub_1D437F774()
{
  sub_1D437FE88();
  return sub_1D451BA48();
}

void sub_1D437F79C(_QWORD *a1)
{
  sub_1D437F45C(a1);
}

void sub_1D437F7B0(_QWORD *a1)
{
  sub_1D437F34C(a1);
}

void sub_1D437F7C4()
{
  sub_1D451B55C();
  __break(1u);
}

id sub_1D437F828(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  objc_class *ObjectType;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType();
  if (a1 != 4 || a2 != 4)
  {
    sub_1D437FF00();
    sub_1D42B6D0C();
    sub_1D4306EF8(v8, 1);
    return (id)swift_deallocPartialClassInstance();
  }
  v9 = v2;
  sub_1D439C424(41, 0);
  if (v3)
  {

    return (id)swift_deallocPartialClassInstance();
  }
  *(_QWORD *)&v9[OBJC_IVAR___SNLanguageAlignedAVFuser_model] = v10;

  v12.receiver = v9;
  v12.super_class = ObjectType;
  return objc_msgSendSuper2(&v12, sel_init);
}

id sub_1D437F978(id a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  void *v8;
  id v9;
  unint64_t v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  _BYTE *v26;
  id v27;
  id v29[18];

  v4 = v2;
  v29[17] = *(id *)MEMORY[0x1E0C80C00];
  sub_1D42B28FC((uint64_t *)&unk_1EFE498B0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D45295F0;
  *(_QWORD *)(inited + 32) = 0x6D655F6F69647561;
  *(_QWORD *)(inited + 40) = 0xEF676E6964646562;
  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_featureValueWithMultiArray_, a2);
  v10 = sub_1D437FEC4();
  *(_QWORD *)(inited + 48) = v9;
  *(_QWORD *)(inited + 72) = v10;
  *(_QWORD *)(inited + 80) = 0xD000000000000010;
  *(_QWORD *)(inited + 88) = 0x80000001D4554270;
  v11 = objc_msgSend(v8, sel_featureValueWithMultiArray_, a1);
  *(_QWORD *)(inited + 120) = v10;
  *(_QWORD *)(inited + 96) = v11;
  sub_1D451A5E4();
  v12 = objc_allocWithZone(MEMORY[0x1E0C9E8F8]);
  v13 = sub_1D4392954();
  if (!v3)
  {
    v14 = v13;
    v15 = *(void **)(v4 + OBJC_IVAR___SNLanguageAlignedAVFuser_model);
    v16 = objc_allocWithZone(MEMORY[0x1E0C9E9B0]);
    v17 = v14;
    v18 = objc_msgSend(v16, sel_init);
    v29[0] = 0;
    v19 = objc_msgSend(v15, sel_predictionFromFeatures_options_error_, v17, v18, v29);

    a1 = v29[0];
    if (v19)
    {
      v20 = v29[0];
      v21 = objc_msgSend(v19, sel_featureNames);
      v22 = sub_1D451ABFC();

      sub_1D4396620(v22);
      a1 = v23;
      swift_bridgeObjectRelease();
      if (a1
        && (v24 = (void *)sub_1D451A6C8(),
            swift_bridgeObjectRelease(),
            v25 = objc_msgSend(v19, sel_featureValueForName_, v24),
            v24,
            v25)
        && (a1 = objc_msgSend(v25, sel_multiArrayValue), v25, a1))
      {
        swift_unknownObjectRelease();

      }
      else
      {
        sub_1D437FF00();
        sub_1D42B6D0C();
        sub_1D4306EF8(v26, 2);

        swift_unknownObjectRelease();
      }
    }
    else
    {
      v27 = v29[0];
      sub_1D4519AA4();

      swift_willThrow();
    }
  }
  return a1;
}

BOOL sub_1D437FD58(uint64_t a1, uint64_t a2)
{
  return a1 == 4 && a2 == 4;
}

id SNLanguageAlignedAVFuser.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SNLanguageAlignedAVFuser()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNLanguageAlignedAVFuser()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for SNLanguageAlignedAVFuser.FuserVersion()
{
  return &type metadata for SNLanguageAlignedAVFuser.FuserVersion;
}

unint64_t sub_1D437FE10()
{
  unint64_t result;

  result = qword_1EFE4E020;
  if (!qword_1EFE4E020)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531CD0, &type metadata for SNLanguageAlignedAVFuser.FuserVersion);
    atomic_store(result, (unint64_t *)&qword_1EFE4E020);
  }
  return result;
}

unint64_t sub_1D437FE4C()
{
  unint64_t result;

  result = qword_1EFE4E038;
  if (!qword_1EFE4E038)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531F28, &type metadata for SNLanguageAlignedAVFuser.FuserVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4E038);
  }
  return result;
}

unint64_t sub_1D437FE88()
{
  unint64_t result;

  result = qword_1EFE4E040;
  if (!qword_1EFE4E040)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531ED8, &type metadata for SNLanguageAlignedAVFuser.FuserVersion.ModelDrop4CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4E040);
  }
  return result;
}

unint64_t sub_1D437FEC4()
{
  unint64_t result;

  result = qword_1EFE4D470;
  if (!qword_1EFE4D470)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFE4D470);
  }
  return result;
}

unint64_t sub_1D437FF00()
{
  unint64_t result;

  result = qword_1EFE4E058;
  if (!qword_1EFE4E058)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531E98, &type metadata for SNLanguageAlignedAVFuser.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4E058);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SNLanguageAlignedAVFuser.DomainError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D437FF88 + 4 * byte_1D4531BD5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D437FFBC + 4 * asc_1D4531BD0[v4]))();
}

uint64_t sub_1D437FFBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D437FFC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D437FFCCLL);
  return result;
}

uint64_t sub_1D437FFD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D437FFE0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D437FFE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D437FFEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SNLanguageAlignedAVFuser.DomainError()
{
  return &type metadata for SNLanguageAlignedAVFuser.DomainError;
}

uint64_t _s13SoundAnalysis24SNLanguageAlignedAVFuserC12FuserVersionOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D4380048 + 4 * byte_1D4531BDA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D4380068 + 4 * byte_1D4531BDF[v4]))();
}

_BYTE *sub_1D4380048(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D4380068(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4380070(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4380078(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4380080(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4380088(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SNLanguageAlignedAVFuser.FuserVersion.CodingKeys()
{
  return &type metadata for SNLanguageAlignedAVFuser.FuserVersion.CodingKeys;
}

ValueMetadata *type metadata accessor for SNLanguageAlignedAVFuser.FuserVersion.ModelDrop4CodingKeys()
{
  return &type metadata for SNLanguageAlignedAVFuser.FuserVersion.ModelDrop4CodingKeys;
}

unint64_t sub_1D43800B8()
{
  unint64_t result;

  result = qword_1EFE4E060;
  if (!qword_1EFE4E060)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531E08, &type metadata for SNLanguageAlignedAVFuser.FuserVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4E060);
  }
  return result;
}

unint64_t sub_1D43800F8()
{
  unint64_t result;

  result = qword_1EFE4E068;
  if (!qword_1EFE4E068)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531E70, &type metadata for SNLanguageAlignedAVFuser.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4E068);
  }
  return result;
}

unint64_t sub_1D4380138()
{
  unint64_t result;

  result = qword_1EFE4E070;
  if (!qword_1EFE4E070)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531D28, &type metadata for SNLanguageAlignedAVFuser.FuserVersion.ModelDrop4CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4E070);
  }
  return result;
}

unint64_t sub_1D4380178()
{
  unint64_t result;

  result = qword_1EFE4E078;
  if (!qword_1EFE4E078)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531D50, &type metadata for SNLanguageAlignedAVFuser.FuserVersion.ModelDrop4CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4E078);
  }
  return result;
}

unint64_t sub_1D43801B8()
{
  unint64_t result;

  result = qword_1EFE4E080;
  if (!qword_1EFE4E080)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531D78, &type metadata for SNLanguageAlignedAVFuser.FuserVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4E080);
  }
  return result;
}

unint64_t sub_1D43801F8()
{
  unint64_t result;

  result = qword_1EFE4E088;
  if (!qword_1EFE4E088)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4531DA0, &type metadata for SNLanguageAlignedAVFuser.FuserVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4E088);
  }
  return result;
}

BOOL sub_1D4380234(uint64_t a1)
{
  uint64_t v2;
  _BOOL8 result;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;

  if (qword_1EFE48E68 != -1)
    goto LABEL_18;
  while (1)
  {
    v2 = *(_QWORD *)(qword_1EFEA77D8 + 16);
    if (!v2)
      break;
    if (*(_QWORD *)(qword_1EFEA77D8 + 32) == a1)
      return 1;
    if (v2 == 1)
      break;
    if (*(_QWORD *)(qword_1EFEA77D8 + 40) == a1)
      return 1;
    if (v2 == 2)
      break;
    for (i = 6; ; ++i)
    {
      v5 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v6 = *(_QWORD *)(qword_1EFEA77D8 + 8 * i);
      result = v6 == a1;
      if (v6 == a1 || v5 == v2)
        return result;
    }
    __break(1u);
LABEL_18:
    swift_once();
  }
  return 0;
}

uint64_t static SNPlatformUtils.deviceSupportsLowPowerSoundClassification()()
{
  return 2;
}

uint64_t static SNPlatformUtils.shouldEnableEmbeddedDaemon()()
{
  return 0;
}

void sub_1D43802FC()
{
  sub_1D451B958();
  sub_1D451B964();
  sub_1D451B994();
  sub_1D42BE978();
}

void sub_1D4380338()
{
  sub_1D43802FC();
}

void sub_1D4380340()
{
  sub_1D451B958();
  sub_1D451B964();
  sub_1D451B994();
  sub_1D42BE978();
}

void sub_1D4380378(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E979F560;
}

void sub_1D4380388(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D43803B8()
{
  uint64_t v0;
  BOOL v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v1 = qword_1EFE56AE8 == -1;
  if (qword_1EFE56AE8 == -1)
    v2 = 0;
  else
    v2 = qword_1EFE56AE8;
  result = sub_1D451A6EC();
  *(_QWORD *)v0 = v2;
  *(_BYTE *)(v0 + 8) = v1;
  *(_QWORD *)(v0 + 16) = result;
  *(_QWORD *)(v0 + 24) = v4;
  *(_QWORD *)(v0 + 32) = sub_1D4380528;
  *(_QWORD *)(v0 + 40) = 0;
  return result;
}

uint64_t sub_1D4380528@<X0>(uint64_t a1@<X8>)
{
  return sub_1D4380614((uint64_t)&unk_1E97A0FC8, a1);
}

uint64_t sub_1D4380534@<X0>(uint64_t a1@<X8>)
{
  return sub_1D4380614((uint64_t)&unk_1E97A0F00, a1);
}

uint64_t sub_1D4380540@<X0>(uint64_t a1@<X8>)
{
  return sub_1D4380614((uint64_t)&unk_1E97A0F28, a1);
}

uint64_t sub_1D438054C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D4380614((uint64_t)&unk_1E97A0F50, a1);
}

uint64_t sub_1D4380558@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;

  if (qword_1EFE48EF0 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EFEA7998;
  v3 = qword_1EFEA79A0;
  v4 = qword_1EFEA79A8;
  v5 = qword_1EFEA79B0;
  v6 = byte_1EFEA79C1;
  v7 = byte_1EFEA79C2;
  v8 = byte_1EFEA79C3;
  v9 = byte_1EFEA79C4;
  v10 = byte_1EFEA79C5;
  v11 = qword_1EFEA79C8;
  v12 = byte_1EFEA79D0;
  *(_QWORD *)a1 = qword_1EFEA7990;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = &unk_1E97A0F78;
  *(_BYTE *)(a1 + 48) = 1;
  *(_BYTE *)(a1 + 49) = v6;
  *(_BYTE *)(a1 + 50) = v7;
  *(_BYTE *)(a1 + 51) = v8;
  *(_BYTE *)(a1 + 52) = v9;
  *(_BYTE *)(a1 + 53) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D438060C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D4380614(0, a1);
}

uint64_t sub_1D4380614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;

  if (qword_1EFE48EF0 != -1)
    swift_once();
  v3 = qword_1EFEA79B0;
  v4 = byte_1EFEA79C1;
  v5 = byte_1EFEA79C2;
  v16 = byte_1EFEA79C4;
  v17 = byte_1EFEA79C3;
  v15 = byte_1EFEA79C5;
  v14 = qword_1EFEA79C8;
  v13 = byte_1EFEA79D0;
  v6 = sub_1D451A6EC();
  v8 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_1D451A6EC();
  v11 = v10;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v8;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v11;
  *(_QWORD *)(a2 + 32) = v3;
  *(_QWORD *)(a2 + 40) = a1;
  *(_BYTE *)(a2 + 48) = 1;
  *(_BYTE *)(a2 + 49) = v4;
  *(_BYTE *)(a2 + 50) = v5;
  *(_BYTE *)(a2 + 51) = v17;
  *(_BYTE *)(a2 + 52) = v16;
  *(_BYTE *)(a2 + 53) = v15;
  *(_QWORD *)(a2 + 56) = v14;
  *(_BYTE *)(a2 + 64) = v13;
  return result;
}

uint64_t sub_1D438075C()
{
  uint64_t v0;
  char *v1;
  char v2;
  char v3;
  __int128 v4;
  __int128 v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;

  v0 = 7;
  v10 = MEMORY[0x1E0DEE9D8];
  sub_1D42C716C(0, 7, 0);
  v1 = &byte_1E979F580;
  do
  {
    v3 = *v1++;
    v2 = v3;
    sub_1D4380388(v3);
    v4 = v13;
    v5 = v14;
    v7 = *(_QWORD *)(v10 + 16);
    v6 = *(_QWORD *)(v10 + 24);
    if (v7 >= v6 >> 1)
    {
      sub_1D42C716C((char *)(v6 > 1), v7 + 1, 1);
      v5 = v14;
      v4 = v13;
    }
    *(_QWORD *)(v10 + 16) = v7 + 1;
    v8 = v10 + 56 * v7;
    *(_BYTE *)(v8 + 32) = v2;
    *(_QWORD *)(v8 + 40) = v11;
    *(_BYTE *)(v8 + 48) = v12;
    *(_OWORD *)(v8 + 56) = v4;
    *(_OWORD *)(v8 + 72) = v5;
    --v0;
  }
  while (v0);
  swift_bridgeObjectRelease();
  return sub_1D4459F54(v10);
}

_QWORD *sub_1D4380880@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  int64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;

  v4 = sub_1D438075C();
  result = sub_1D43F6E7C(&v23, v4);
  v6 = v26;
  v7 = v27;
  v8 = (unint64_t)(v25 + 64) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v6 << 6);
      goto LABEL_22;
    }
    v11 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    if (v11 >= v8)
      goto LABEL_25;
    v12 = *(_QWORD *)(v24 + 8 * v11);
    v13 = v6 + 1;
    if (!v12)
    {
      v13 = v6 + 2;
      if (v6 + 2 >= v8)
        goto LABEL_25;
      v12 = *(_QWORD *)(v24 + 8 * v13);
      if (!v12)
      {
        v13 = v6 + 3;
        if (v6 + 3 >= v8)
          goto LABEL_25;
        v12 = *(_QWORD *)(v24 + 8 * v13);
        if (!v12)
        {
          v13 = v6 + 4;
          if (v6 + 4 >= v8)
            goto LABEL_25;
          v12 = *(_QWORD *)(v24 + 8 * v13);
          if (!v12)
          {
            v13 = v6 + 5;
            if (v6 + 5 >= v8)
              goto LABEL_25;
            v12 = *(_QWORD *)(v24 + 8 * v13);
            if (!v12)
            {
              v13 = v6 + 6;
              if (v6 + 6 >= v8)
                goto LABEL_25;
              v12 = *(_QWORD *)(v24 + 8 * v13);
              if (!v12)
              {
                v14 = v6 + 7;
                while (v14 < v8)
                {
                  v12 = *(_QWORD *)(v24 + 8 * v14++);
                  if (v12)
                  {
                    v13 = v14 - 1;
                    goto LABEL_21;
                  }
                }
LABEL_25:
                result = (_QWORD *)swift_release();
                v22 = 0;
                a1 = 0;
                v21 = 0;
                v20 = 0;
                v19 = 0;
                v18 = 0;
LABEL_26:
                *a2 = v22;
                a2[1] = a1;
                a2[2] = 0;
                a2[3] = v21;
                a2[4] = v20;
                a2[5] = v19;
                a2[6] = v18;
                return result;
              }
            }
          }
        }
      }
    }
LABEL_21:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v6 = v13;
LABEL_22:
    v15 = *(_QWORD *)(v23 + 56);
    v16 = v15 + 48 * v10;
    if ((*(_BYTE *)(v16 + 8) & 1) == 0 && *(_QWORD *)v16 == a1)
    {
      v17 = (_QWORD *)(v15 + 48 * v10);
      v19 = v17[4];
      v18 = v17[5];
      v21 = v17[2];
      v20 = v17[3];
      v22 = *(unsigned __int8 *)(*(_QWORD *)(v23 + 48) + v10);
      swift_bridgeObjectRetain();
      swift_retain();
      result = (_QWORD *)swift_release();
      goto LABEL_26;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1D4380A38(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v10;
  uint64_t v11;

  if (a1 != 7)
  {
    sub_1D4380388(a1);
    if (v11)
    {
      a2 = v10;
    }
    else
    {
      if (!a3)
      {
        swift_release();
        goto LABEL_10;
      }
      sub_1D4381764();
      a2 = 4475201;
    }
    swift_release();
    return a2;
  }
  if (a3)
  {
    sub_1D4381764();
    return 4475201;
  }
LABEL_10:
  if (qword_1EFE40338 != -1)
    swift_once();
  v5 = sub_1D451A014();
  sub_1D42CC880(v5, (uint64_t)qword_1EFEA7700);
  v6 = sub_1D4519FFC();
  v7 = sub_1D451AF5C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1D42A7000, v6, v7, "Unsupported product type", v8, 2u);
    sub_1D42CC934();
  }

  return a2;
}

uint64_t sub_1D4380B94()
{
  __CFString *v0;
  uint64_t v1;
  uint64_t v2;

  v0 = off_1EFE56AE0;
  v1 = MGCopyAnswer();

  if (!v1)
    return 0;
  swift_unknownObjectRetain();
  if (!swift_dynamicCast())
  {
    swift_unknownObjectRelease();
    return 0;
  }
  v2 = sub_1D451B7C0();
  swift_unknownObjectRelease();
  return v2;
}

uint64_t sub_1D4380C64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v7[7];
  char v8[40];
  uint64_t v9;

  v0 = sub_1D4380B94();
  v2 = v1;
  v3 = MGGetProductType();
  sub_1D4380880(v3, v7);
  sub_1D4381704((uint64_t)v7, (uint64_t)v8);
  if (v9)
  {
    v4 = v8[0];
    sub_1D42F11A4(v7);
  }
  else
  {
    v4 = 7;
  }
  v5 = sub_1D4380A38(v4, v0, v2);
  swift_bridgeObjectRelease();
  return v5;
}

unint64_t sub_1D4380CF4(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t result;

  if (sub_1D451A758())
  {
    swift_bridgeObjectRetain();
    sub_1D4396718(a1, a2);
    v5 = v4;
    result = swift_bridgeObjectRelease();
    if (v5)
    {
      sub_1D451A62C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1D4380EBC(1uLL, a1, a2);
      sub_1D438158C();
      swift_bridgeObjectRetain();
      sub_1D451A788();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D451B400();
      swift_bridgeObjectRelease();
      sub_1D451A794();
      swift_bridgeObjectRelease();
      sub_1D451A794();
      return 0xD000000000000017;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    type metadata accessor for SNError();
    sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD00000000000001ELL, 0x80000001D4554320);
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_1D4380EBC(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    result = sub_1D451A77C();
    if ((v6 & 1) != 0)
      result = v5;
    if (4 * v3 >= result >> 14)
    {
      v7 = sub_1D451A80C();
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  __break(1u);
  return result;
}

void static SNPlatformUtils.localhostIsVM()()
{
  void *v0;

  v0 = (void *)swift_slowAlloc();
  sub_1D438117C(0xD000000000000013, 0x80000001D45542E0, v0);
  sub_1D42CC934();
}

void sub_1D4380FFC()
{
  JUMPOUT(0x1D4381004);
}

uint64_t sub_1D4381018(const char *a1, void *a2)
{
  uint64_t v2;
  size_t v4[2];

  v4[1] = *MEMORY[0x1E0C80C00];
  v4[0] = 4;
  v2 = sysctlbyname(a1, a2, v4, 0, 0);
  return sub_1D4381088(v2);
}

uint64_t sub_1D4381088(uint64_t result)
{
  if ((_DWORD)result)
  {
    type metadata accessor for SNError();
    sub_1D451B400();
    swift_bridgeObjectRelease();
    sub_1D451B7C0();
    sub_1D451A794();
    swift_bridgeObjectRelease();
    sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD00000000000001FLL, 0x80000001D4554340);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1D438117C(uint64_t a1, uint64_t a2, void *a3)
{
  const char *v4;
  uint64_t v6;
  size_t v7;
  char v8[8];
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
    return sub_1D451B3F4();
  if ((a2 & 0x2000000000000000) != 0)
  {
    *(_QWORD *)v8 = a1;
    v9 = a2 & 0xFFFFFFFFFFFFFFLL;
    v7 = 4;
    v6 = sysctlbyname(v8, a3, &v7, 0, 0);
    return sub_1D4381088(v6);
  }
  else
  {
    if ((a1 & 0x1000000000000000) != 0)
      v4 = (const char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v4 = (const char *)sub_1D451B46C();
    return sub_1D4381018(v4, a3);
  }
}

uint64_t static SNPlatformUtils.daemonProcessName()()
{
  return 0x616E61646E756F73;
}

void type metadata accessor for SNPlatformUtils()
{
  sub_1D42CB35C();
}

uint64_t sub_1D43812E0()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1D4381308(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1D4381360(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = a2[5];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1D43813D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v4;
  swift_release();
  return a1;
}

void type metadata accessor for SNProductInfo()
{
  sub_1D42CB35C();
}

uint64_t sub_1D438143C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D4381488 + 4 * byte_1D4531F84[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D43814BC + 4 * byte_1D4531F7F[v4]))();
}

uint64_t sub_1D43814BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43814C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D43814CCLL);
  return result;
}

uint64_t sub_1D43814D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D43814E0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D43814E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43814EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SNProductType()
{
  sub_1D42CB35C();
}

unint64_t sub_1D4381508()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFE4E090;
  if (!qword_1EFE4E090)
  {
    v1 = sub_1D42B8B10(&qword_1EFE4E098);
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EFE4E090);
  }
  return result;
}

unint64_t sub_1D4381550()
{
  unint64_t result;

  result = qword_1EFE4E0A0;
  if (!qword_1EFE4E0A0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4532030, &unk_1E979F598);
    atomic_store(result, (unint64_t *)&qword_1EFE4E0A0);
  }
  return result;
}

unint64_t sub_1D438158C()
{
  unint64_t result;

  result = qword_1EFE4E0A8;
  if (!qword_1EFE4E0A8)
  {
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0DEBB10], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1EFE4E0A8);
  }
  return result;
}

void sub_1D43815C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[32];
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = qword_1EFE56B28;
  v8 = qword_1EFE56B30;
  v9 = qword_1EFE56B38;
  v10 = qword_1EFE56B40;
  v11 = qword_1EFE56B48;
  v12 = qword_1EFE56B50;
  v13 = qword_1EFE56B58;
  v14 = qword_1EFE56B60;
  v0 = 32;
  v1 = MEMORY[0x1E0DEE9D8];
  do
  {
    v2 = *(_QWORD *)&v6[v0];
    if (v2 != -1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D442F954();
        v1 = v4;
      }
      v3 = *(_QWORD *)(v1 + 16);
      if (v3 >= *(_QWORD *)(v1 + 24) >> 1)
      {
        sub_1D442F954();
        v1 = v5;
      }
      *(_QWORD *)(v1 + 16) = v3 + 1;
      *(_QWORD *)(v1 + 8 * v3 + 32) = v2;
    }
    v0 += 8;
  }
  while (v0 != 96);
  qword_1EFEA77D8 = v1;
}

uint64_t sub_1D4381704(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D42B28FC(&qword_1EFE506B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D438174C(const char *a1)
{
  uint64_t v1;

  return sub_1D4381018(a1, *(void **)(v1 + 16));
}

uint64_t sub_1D4381764()
{
  return sub_1D451A794();
}

void sub_1D4381770(uint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t isStackAllocationSafe;
  id v17;
  uint64_t v18;
  _DWORD *v19;
  void *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t *v24;
  void *v25;
  unint64_t v26;
  id v27;
  _DWORD *v28;
  void *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t *v33;
  void *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = v9 - v8;
  if (__OFSUB__(v9, v8))
  {
    __break(1u);
    goto LABEL_14;
  }
  v11 = __OFSUB__(v10, 1);
  v12 = v10 - 1;
  if (v11)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v12 & ~(v12 >> 63);
  if (v13 >> 59)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v14 = 16 * v13;
  v15 = v14 + 24;
  if (__OFADD__(v14, 24))
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  if (v15 < 0)
    goto LABEL_17;
  v39 = a5;
  v40 = a4;
  v41 = a3;
  isStackAllocationSafe = a2;
  v42 = (id)isStackAllocationSafe;
  if (v15 >= 1025)
  {
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if ((isStackAllocationSafe & 1) == 0)
    {
      v38 = (unint64_t *)(swift_slowAlloc() + v15);
      v27 = v42;
      sub_1D43831EC();
      sub_1D4383240();
      sub_1D4381B7C(v28, v29, v30, v31, v32, v33, v34, v35, v36, a6, v38, v39, v40);
      sub_1D42CC934();
    }
  }
  v37 = v6;
  v38 = &v36;
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  v17 = v42;
  sub_1D43831EC();
  sub_1D4383240();
  v18 = v37;
  sub_1D4381B7C(v19, v20, v21, v22, v23, v24, v25, v26, v36, v37, v38, v39, v40);
  if (v18)
  {
    swift_willThrow();

  }
  else
  {

  }
  sub_1D42BE844();
}

void sub_1D438194C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  sub_1D4383258(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  sub_1D42B6F28();
}

void sub_1D438198C(uint64_t isStackAllocationSafe@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _DWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v11 = *(_QWORD *)(isStackAllocationSafe + 24);
  v10 = *(_QWORD *)(isStackAllocationSafe + 32);
  v12 = v10 - v11;
  if (__OFSUB__(v10, v11))
  {
    __break(1u);
    goto LABEL_13;
  }
  v13 = __OFSUB__(v12, 1);
  v14 = v12 - 1;
  if (v13)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v15 = v14 & ~(v14 >> 63);
  if (v15 >> 59)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = 16 * v15 + 24;
  if (__OFADD__(16 * v15, 24))
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  if (v16 < 0)
    goto LABEL_16;
  v18 = a6;
  v19 = a5;
  v20 = a4;
  v21 = a2;
  v42 = a9;
  if (v16 >= 1025)
  {
    v40 = v10;
    v41 = v11;
    v39 = a6;
    v27 = (_QWORD *)isStackAllocationSafe;
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    v28 = v27;
    v29 = a7;
    v30 = a3;
    v21 = a2;
    v20 = a4;
    v19 = a5;
    v18 = v39;
    v10 = v40;
    v11 = v41;
    if ((isStackAllocationSafe & 1) == 0)
    {
      v38 = v30;
      v36 = v29;
      v37 = v28;
      v34 = (_DWORD *)swift_slowAlloc();
      sub_1D4381D8C(v34, (uint64_t)v34 + v16, v41, v40, v37, 4, v21, v38, v20, v19, v39, v36, a8);
      sub_1D42CC934();
    }
  }
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  sub_1D4381D8C((uint64_t *)((char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0)), (uint64_t)&v35 + v16 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v11, v10, v31, 4, v21, v33, v20, v19, v18, v32, a8);
  if (v9)
    swift_willThrow();
  sub_1D42BE844();
}

void sub_1D4381B7C(_DWORD *a1@<X0>, void *a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X6>, void *a7@<X7>, unint64_t a8@<X8>, unint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, uint64_t a13)
{
  _QWORD *v13;
  uint64_t *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD v29[3];
  void *v30;

  if (a1)
  {
    v19 = a3 - (_QWORD)a2;
    if (__OFSUB__(a3, a2))
    {
      __break(1u);
    }
    else
    {
      if ((v19 & 0x8000000000000000) != 0)
        goto LABEL_12;
      v28 = a8;
      v30 = a2;
      if (HIDWORD(v19))
        goto LABEL_12;
      v14 = a6;
      v17 = a5;
      v13 = a4;
      v16 = (uint64_t)a1;
      *a1 = v19;
      v20 = *a4;
      v15 = a7;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v13 = v20;
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        goto LABEL_6;
    }
    sub_1D43830A4();
    v20 = v27;
    *v13 = v27;
LABEL_6:
    v22 = *(_QWORD *)(v20 + 16);
    v29[0] = v20 + 32;
    v29[1] = v22;
    v23 = v13[3];
    v24 = v13[4];
    if (!__OFSUB__(v24, v23))
    {
      v25 = sub_1D4382FF8(v24 - v23, v13, v29);
      v26 = v15;
      sub_1D4381F38(v25, v30, a3, v16 + 8, v17, v16, v14, v28, v26, a9, a10, a11, a12, a13);
      swift_bridgeObjectRelease();
      *v13 = v20;

      return;
    }
    __break(1u);
  }
  __break(1u);
LABEL_12:

  sub_1D451B550();
  __break(1u);
}

uint64_t sub_1D4381D8C(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, uint64_t a13)
{
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t result;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t v30;

  if (!a1)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v20 = a4 - a3;
  if (__OFSUB__(a4, a3))
  {
    __break(1u);
LABEL_9:
    sub_1D43830A4();
    v21 = v28;
    *v13 = v28;
LABEL_6:
    v23 = *(_QWORD *)(v21 + 16);
    v29[0] = v21 + 32;
    v29[1] = v23;
    v24 = v13[3];
    v25 = v13[4];
    if (!__OFSUB__(v25, v24))
    {
      v26 = sub_1D4382FF8(v25 - v24, v13, v29);
      sub_1D43820B4(v26, v30, a4, v15 + 8, v17, v15, (v14 - v15) / 24, v16, v18, a9, a10, a11, a12, a13);
      result = swift_bridgeObjectRelease();
      *v13 = v21;
      return result;
    }
    __break(1u);
    goto LABEL_11;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    v30 = a3;
    if (HIDWORD(v20))
    {
      sub_1D42DCED4();
      sub_1D43831CC();
      goto LABEL_14;
    }
    v18 = a8;
    v16 = a7;
    v17 = a6;
    v13 = a5;
    v14 = a2;
    v15 = (uint64_t)a1;
    *a1 = v20;
    v21 = *a5;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v13 = v21;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_6;
    goto LABEL_9;
  }
LABEL_12:
  sub_1D42DCED4();
  sub_1D43831DC();
LABEL_14:
  result = sub_1D43074E8();
  __break(1u);
  return result;
}

void sub_1D4381F38(_QWORD *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X7>, unint64_t a8@<X8>, void *a9, unint64_t a10, uint64_t a11, unint64_t *a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;

  v14 = a3 - (_QWORD)a2;
  if (__OFSUB__(a3, a2))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v14 < 0)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v15 = (unint64_t)a2;
  a2 = a9;
  if (!v14)
    goto LABEL_15;
  v16 = a1[2];
  if (!v16)
    goto LABEL_21;
  v17 = a1[5];
  v18 = a5 * v17;
  if ((unsigned __int128)(a5 * (__int128)v17) >> 64 != (a5 * v17) >> 63)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v18 < 0)
  {
LABEL_24:

    goto LABEL_25;
  }
  if (!HIDWORD(v18))
  {
    v19 = (_QWORD *)(a4 + 8);
    v20 = ~v15 + a3;
    v21 = a1 + 7;
    while (1)
    {
      v22 = *(v21 - 3);
      *((_DWORD *)v19 - 2) = 1;
      *((_DWORD *)v19 - 1) = v18;
      *v19 = v22;
      if (!v20)
        break;
      if (!--v16)
      {
        __break(1u);
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
      v18 = a5 * *v21;
      if ((unsigned __int128)(a5 * (__int128)*v21) >> 64 != v18 >> 63)
        goto LABEL_18;
      if (v18 < 0)
        goto LABEL_24;
      v19 += 2;
      --v20;
      v21 += 2;
      if (HIDWORD(v18))
        goto LABEL_14;
    }
LABEL_15:
    if (a6)
    {
      sub_1D43821E4(a7, a9, a6, a10, a11, a12, a13, a14, a8);
      return;
    }
    goto LABEL_23;
  }
LABEL_14:

LABEL_25:
  sub_1D451B550();
  __break(1u);
}

void sub_1D43820B4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, unint64_t *a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v14 = a3 - a2;
  if (__OFSUB__(a3, a2))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v14 < 0)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (!v14)
    goto LABEL_15;
  v15 = a1[2];
  if (!v15)
    goto LABEL_21;
  v16 = a1[5];
  v17 = a5 * v16;
  if ((unsigned __int128)(a5 * (__int128)v16) >> 64 != (a5 * v16) >> 63)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if ((v17 & 0x8000000000000000) != 0)
  {
LABEL_24:
    sub_1D42DCED4();
    sub_1D43831DC();
    goto LABEL_25;
  }
  if (!HIDWORD(v17))
  {
    v18 = (_QWORD *)(a4 + 8);
    v19 = ~a2 + a3;
    v20 = a1 + 7;
    v21 = 1;
    while (1)
    {
      v22 = *(v20 - 3);
      *((_DWORD *)v18 - 2) = v21;
      *((_DWORD *)v18 - 1) = v17;
      *v18 = v22;
      if (!v19)
        break;
      if (v15 == 1)
      {
        __break(1u);
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
      v23 = a5 * *v20;
      if ((unsigned __int128)(a5 * (__int128)*v20) >> 64 != v23 >> 63)
        goto LABEL_18;
      if (v23 < 0)
        goto LABEL_24;
      sub_1D4383260();
      if (v24)
        goto LABEL_14;
    }
LABEL_15:
    if (a6)
    {
      sub_1D4382420(a8, a9, a6, a10, a11, a12, a13, a14);
      return;
    }
    goto LABEL_23;
  }
LABEL_14:
  sub_1D42DCED4();
  sub_1D43831CC();
LABEL_25:
  sub_1D43074E8();
  __break(1u);
}

void sub_1D43821E4(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unint64_t a9@<X8>)
{
  uint64_t v9;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t isStackAllocationSafe;
  _DWORD *v21;
  uint64_t v22;
  id v23;
  _DWORD *v24;
  unint64_t v25;
  unint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v11 = a1[1];
  if (__OFSUB__(v11, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
  v12 = (v11 - 1) & ~((uint64_t)(v11 - 1) >> 63);
  if (v12 >> 59)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = 16 * v12;
  v14 = v13 + 24;
  if (__OFADD__(v13, 24))
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  if (v14 < 0)
    goto LABEL_16;
  v27 = a8;
  v28 = a7;
  isStackAllocationSafe = a2;
  v29 = (id)isStackAllocationSafe;
  if (v14 < 1025 || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    v25 = a4;
    v26 = &v25;
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v21 = (_DWORD *)((char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    v22 = (uint64_t)v21 + v14;
    v23 = v29;
    sub_1D43825E0(v21, v22, v11, a1, 4, v23, a3, v25, a5, a6, v28, v27);
    if (v9)
    {
      swift_willThrow();

LABEL_11:
      return;
    }

  }
  else
  {
    v25 = a9;
    v24 = (_DWORD *)swift_slowAlloc();
    v26 = (unint64_t *)((char *)v24 + v14);
    v23 = v29;
    sub_1D43825E0(v24, (uint64_t)v26, v11, a1, 4, v23, a3, a4, a5, a6, v28, v27);
    MEMORY[0x1D825E524](v24, -1, -1);

    if (v9)
      goto LABEL_11;
  }

}

void sub_1D4382420(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  uint64_t v14;
  uint64_t v20;
  _DWORD *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  void **v26;
  uint64_t v27;
  unint64_t v28;
  _DWORD *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  void **v34;
  uint64_t v35;
  uint64_t v36;

  v9 = *(_QWORD *)(isStackAllocationSafe + 8);
  if (__OFSUB__(v9, 1))
  {
    __break(1u);
    goto LABEL_12;
  }
  v10 = (v9 - 1) & ~((v9 - 1) >> 63);
  if (v10 >> 59)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v11 = 16 * v10 + 24;
  if (__OFADD__(16 * v10, 24))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  if (v11 < 0)
    goto LABEL_14;
  v12 = a7;
  v13 = a6;
  v14 = a5;
  if (v11 >= 1025)
  {
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    v14 = a5;
    v13 = a6;
    v12 = a7;
    if ((isStackAllocationSafe & 1) == 0)
    {
      swift_slowAlloc();
      sub_1D4383228();
      sub_1D4382814(v29, v30, v31, v32, v33, v34, v35, a4, v14, v13, a7, a8);
      sub_1D42CC934();
    }
  }
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  v36 = v20;
  sub_1D4383228();
  sub_1D4382814(v21, v22, v23, v24, v25, v26, v27, v28, v14, v13, v12, v36);
  if (v8)
    swift_willThrow();
  sub_1D42BE844();
}

void sub_1D43825E0(_DWORD *a1, uint64_t a2, unint64_t a3, uint64_t *a4, uint64_t a5, void *a6, uint64_t a7, unint64_t a8, uint64_t a9, unint64_t *a10, uint64_t a11, uint64_t a12)
{
  uint64_t v19;
  id v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  if (a1)
  {
    if ((a3 & 0x8000000000000000) != 0 || HIDWORD(a3))
      goto LABEL_18;
    *a1 = a3;
    v33 = (uint64_t)(a1 + 2);
    v19 = *a4;
    v20 = a6;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a4 = v19;
    v34 = a3;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      goto LABEL_14;
    while (1)
    {
      v22 = a4[1];
      sub_1D43E2AA8(v22);
      v25 = a4[1];
      if (v25 < 0)
      {
        __break(1u);
        goto LABEL_16;
      }
      if (!v25)
        break;
      v26 = 0;
      v27 = (_QWORD *)(v24 + 8);
      while (1)
      {
        v28 = a4[2];
        v29 = v26 * v28;
        if ((unsigned __int128)(v26 * (__int128)v28) >> 64 != (v26 * v28) >> 63)
          break;
        ++v26;
        *(v27 - 1) = v19 + 32 + 4 * v29;
        *v27 = v28;
        v27 += 2;
        if (v25 == v26)
        {
          v25 = a4[1];
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_14:
      sub_1D43830A4();
      v19 = v32;
      *a4 = v32;
    }
LABEL_11:
    if (v22 >= v25)
    {
      v23[2] = v25;
      v30 = v23;
      v31 = v20;
      sub_1D43829E8(v30, v34, v33, a5, (uint64_t)a1, (a2 - (uint64_t)a1) / 24, v31, a7, a8, a9, a10, a11, a12);
      swift_bridgeObjectRelease();
      *a4 = v19;

      return;
    }
LABEL_16:
    __break(1u);
  }
  __break(1u);
LABEL_18:

  sub_1D451B550();
  __break(1u);
}

uint64_t sub_1D4382814(_DWORD *a1, uint64_t a2, unint64_t a3, uint64_t *a4, uint64_t a5, void **a6, uint64_t a7, unint64_t a8, uint64_t a9, unint64_t *a10, uint64_t a11, uint64_t a12)
{
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v33;

  if (!a1)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if (HIDWORD(a3))
    {
      sub_1D42DCED4();
      sub_1D43831CC();
      goto LABEL_20;
    }
    *a1 = a3;
    v18 = (uint64_t)(a1 + 2);
    v19 = *a4;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a4 = v19;
    v33 = a5;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      goto LABEL_14;
    while (1)
    {
      v21 = a4[1];
      sub_1D43E2AA8(v21);
      v24 = a4[1];
      if (v24 < 0)
      {
        __break(1u);
        goto LABEL_16;
      }
      if (!v24)
        break;
      v25 = 0;
      v26 = (_QWORD *)(v23 + 8);
      while (1)
      {
        v27 = a4[2];
        v28 = v25 * v27;
        if ((unsigned __int128)(v25 * (__int128)v27) >> 64 != (v25 * v27) >> 63)
          break;
        ++v25;
        *(v26 - 1) = v19 + 32 + 4 * v28;
        *v26 = v27;
        v26 += 2;
        if (v24 == v25)
        {
          v24 = a4[1];
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_14:
      sub_1D43830A4();
      v19 = v30;
      *a4 = v30;
    }
LABEL_11:
    if (v21 >= v24)
    {
      v22[2] = v24;
      sub_1D4382B68(v22, a3, v18, v33, (uint64_t)a1, (a2 - (uint64_t)a1) / 24, a6, a7, a8, a9, a10, a11, a12);
      result = swift_bridgeObjectRelease();
      *a4 = v19;
      return result;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
LABEL_18:
  sub_1D42DCED4();
  sub_1D43831DC();
LABEL_20:
  result = sub_1D43074E8();
  __break(1u);
  return result;
}

void sub_1D43829E8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, unint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, uint64_t a13)
{
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;

  if (a2 < 0)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v13 = a7;
  if (!a2)
    goto LABEL_14;
  v14 = a1[2];
  if (!v14)
    goto LABEL_19;
  v15 = a1[5];
  v16 = a4 * v15;
  if ((unsigned __int128)(a4 * (__int128)v15) >> 64 != (a4 * v15) >> 63)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v16 < 0)
  {
LABEL_22:

    goto LABEL_23;
  }
  if (!HIDWORD(v16))
  {
    v17 = (_QWORD *)(a3 + 8);
    v18 = a2 - 1;
    v19 = a1 + 7;
    while (1)
    {
      v20 = *(v19 - 3);
      *((_DWORD *)v17 - 2) = 1;
      *((_DWORD *)v17 - 1) = v16;
      *v17 = v20;
      if (!v18)
        break;
      if (!--v14)
      {
        __break(1u);
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      v16 = a4 * *v19;
      if ((unsigned __int128)(a4 * (__int128)*v19) >> 64 != v16 >> 63)
        goto LABEL_17;
      if (v16 < 0)
        goto LABEL_22;
      v17 += 2;
      --v18;
      v19 += 2;
      if (HIDWORD(v16))
        goto LABEL_13;
    }
LABEL_14:
    if (a5)
    {
      sub_1D447E658(a5, a7, a8, a9, a10, a11, a12, a13);

      return;
    }
    goto LABEL_21;
  }
LABEL_13:

LABEL_23:
  sub_1D451B550();
  __break(1u);
}

uint64_t sub_1D4382B68(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void **a7, uint64_t a8, unint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;

  if (a2 < 0)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!a2)
    goto LABEL_14;
  v13 = a1[2];
  if (!v13)
    goto LABEL_19;
  v14 = a1[5];
  v15 = a4 * v14;
  if ((unsigned __int128)(a4 * (__int128)v14) >> 64 != (a4 * v14) >> 63)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if ((v15 & 0x8000000000000000) != 0)
  {
LABEL_22:
    sub_1D42DCED4();
    sub_1D43831DC();
    goto LABEL_23;
  }
  if (!HIDWORD(v15))
  {
    v16 = (_QWORD *)(a3 + 8);
    v17 = a2 - 1;
    v18 = a1 + 7;
    v19 = 1;
    while (1)
    {
      v20 = *(v18 - 3);
      *((_DWORD *)v16 - 2) = v19;
      *((_DWORD *)v16 - 1) = v15;
      *v16 = v20;
      if (!v17)
        break;
      if (v13 == 1)
      {
        __break(1u);
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      v21 = a4 * *v18;
      if ((unsigned __int128)(a4 * (__int128)*v18) >> 64 != v21 >> 63)
        goto LABEL_17;
      if (v21 < 0)
        goto LABEL_22;
      sub_1D4383260();
      if (v22)
        goto LABEL_13;
    }
LABEL_14:
    if (a5)
      return sub_1D4382E80(a5, a7, a8, a9, a10, a11, a12, a13);
    goto LABEL_21;
  }
LABEL_13:
  sub_1D42DCED4();
  sub_1D43831CC();
LABEL_23:
  result = sub_1D43074E8();
  __break(1u);
  return result;
}

_QWORD *sub_1D4382C90(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D4487B6C(a1, a2, a4, a3);
}

uint64_t sub_1D4382CB0(uint64_t a1, uint64_t a2)
{
  return sub_1D4382CE4(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D448CA10);
}

uint64_t sub_1D4382CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D4382D18(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1D448C9A8);
}

uint64_t sub_1D4382CD8(uint64_t a1, uint64_t a2)
{
  return sub_1D4382CE4(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D4487C4C);
}

uint64_t sub_1D4382CE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v3;

  return a3(*v3, v3[1], v3[2], v3[3], *(_QWORD *)(a1 + 16));
}

uint64_t sub_1D4382CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D4382D18(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1D4487C50);
}

uint64_t sub_1D4382D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))
{
  _QWORD *v6;

  return a6(a1, a2, *v6, v6[1], v6[2], v6[3], *(_QWORD *)(a4 + 16), a3);
}

void sub_1D4382D44()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D4382D54()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D4382D64()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D4382D74()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D4382D84(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1D825E41C](&unk_1D45480CC);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D4382DB0(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1D825E41C](&unk_1D45482E0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1D4382DDC()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D4382DEC()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D4382DFC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1D825E41C](&unk_1D45482FC);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D4382E28(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1D825E41C](&unk_1D4548318);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D4382E54(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1D825E41C](&unk_1D45475D0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D4382E80(uint64_t a1, void **a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t *a6, uint64_t a7, uint64_t a8)
{
  unint64_t v8;
  uint64_t result;
  _BYTE *v10;

  if ((a4 & 0x8000000000000000) != 0)
    goto LABEL_8;
  if (HIDWORD(a4))
  {
LABEL_9:
    sub_1D42DCED4();
    sub_1D43831CC();
    goto LABEL_10;
  }
  v8 = *a6;
  if ((v8 & 0x8000000000000000) != 0)
  {
LABEL_8:
    sub_1D42DCED4();
    sub_1D43831DC();
LABEL_10:
    result = sub_1D43074E8();
    __break(1u);
    return result;
  }
  if (HIDWORD(v8))
    goto LABEL_9;
  result = (uint64_t)sub_1D44F7048(*a2, a3, a4, a5, a1, v8, a7, a8);
  if (!(_DWORD)result)
  {
    sub_1D4383190();
    swift_allocError();
    *v10 = 0;
    return swift_willThrow();
  }
  return result;
}

_QWORD *sub_1D4382F64(_QWORD *result, _QWORD *a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a3[3];
  v5 = a3[4];
  v6 = __OFSUB__(v5, v4);
  v7 = v5 - v4;
  v8 = v6;
  if (v6)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v7 < 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v7)
  {
    v9 = 0;
    v10 = a3[5];
    v11 = (_QWORD *)(*result + 8);
    do
    {
      v12 = a3[2];
      v13 = v9 * v12;
      if ((unsigned __int128)(v9 * (__int128)v12) >> 64 != (v9 * v12) >> 63)
      {
        __break(1u);
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      v6 = __OFADD__(v13, v10);
      v14 = v13 + v10;
      if (v6)
        goto LABEL_19;
      ++v9;
      v15 = *a4 + 4 * v14;
      if (!*a4)
        v15 = 0;
      *(v11 - 1) = v15;
      *v11 = v12;
      v11 += 2;
    }
    while (v7 != v9);
    v16 = a3[3];
    v17 = a3[4];
    v6 = __OFSUB__(v17, v16);
    v7 = v17 - v16;
    v8 = v6;
  }
  if ((v8 & 1) == 0)
  {
    *a2 = v7;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

_QWORD *sub_1D4382FF8(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *result;
  _QWORD v11[2];
  uint64_t v12;

  sub_1D43E2AA8(a1);
  v8 = v7;
  v12 = 0;
  v11[0] = v9;
  v11[1] = a1;
  result = sub_1D4382F64(v11, &v12, a2, a3);
  if (v3)
  {
    if (v12 <= a1)
    {
      *(_QWORD *)(v8 + 16) = v12;
      swift_bridgeObjectRelease();
      return (_QWORD *)v8;
    }
    __break(1u);
  }
  else if (v12 <= a1)
  {
    *(_QWORD *)(v8 + 16) = v12;
    return (_QWORD *)v8;
  }
  __break(1u);
  return result;
}

void sub_1D43830A4()
{
  sub_1D4383214();
  sub_1D442F36C();
}

void sub_1D43830B4()
{
  sub_1D4383214();
  sub_1D442F4D8();
}

void sub_1D43830C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_1D4383214();
  sub_1D442F98C(v0, v1, v2, v3);
}

void sub_1D43830D4()
{
  sub_1D4383214();
  sub_1D442FA9C();
}

void sub_1D43830E8(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1D451B5A4();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1D825CD84);
}

void sub_1D4383150()
{
  sub_1D4383214();
  sub_1D442FC14();
}

void sub_1D4383160()
{
  sub_1D4383214();
  sub_1D442FC44();
}

void sub_1D4383170()
{
  sub_1D4383214();
  sub_1D442FF10();
}

void sub_1D4383180()
{
  sub_1D4383214();
  sub_1D442FFAC();
}

unint64_t sub_1D4383190()
{
  unint64_t result;

  result = qword_1EFE4FB80;
  if (!qword_1EFE4FB80)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454617C, &type metadata for DSPGraphError);
    atomic_store(result, (unint64_t *)&qword_1EFE4FB80);
  }
  return result;
}

uint64_t sub_1D4383214()
{
  return 0;
}

void sub_1D4383258(uint64_t isStackAllocationSafe@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  sub_1D438198C(isStackAllocationSafe, a2, a3, a4, a5, a6, a7, a8, a9);
}

_QWORD *initializeBufferWithCopyOfBuffer for XPCError(_QWORD *a1, id *a2)
{
  id v3;
  id v4;

  v3 = *a2;
  v4 = *a2;
  *a1 = v3;
  return a1;
}

void destroy for XPCError(id *a1)
{

}

void **assignWithCopy for XPCError(void **a1, id *a2)
{
  id v3;
  id v4;
  void *v5;

  v3 = *a2;
  v4 = *a2;
  v5 = *a1;
  *a1 = v3;

  return a1;
}

void **assignWithTake for XPCError(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for XPCError(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 8))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 8) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCError()
{
  return &type metadata for XPCError;
}

void sub_1D43833A0()
{
  void *v0;

  v0 = (void *)sub_1D4519A98();
  sub_1D43A658C();

}

uint64_t sub_1D43833F0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1D4383438;
  return sub_1D43768A8();
}

uint64_t sub_1D4383438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _QWORD *v5;

  sub_1D430C4B8();
  v4 = *v3;
  *v5 = v4;
  *(_QWORD *)(v2 + 24) = v1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v4 + 8))();
  *(_QWORD *)(v2 + 32) = v0;
  return swift_task_switch();
}

uint64_t sub_1D43834AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 24);
  swift_retain();
  sub_1D43A835C();
  v3 = v2;
  swift_release();
  v4 = swift_release();
  if (!v1)
    v4 = v3;
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

void sub_1D4383524()
{
  sub_1D43833A0();
}

uint64_t sub_1D438353C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1D438358C;
  return sub_1D43833F0();
}

uint64_t sub_1D438358C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _QWORD *v5;

  sub_1D430C4B8();
  v4 = *v3;
  *v5 = v4;
  swift_task_dealloc();
  if (!v1)
    **(_QWORD **)(v2 + 16) = v0;
  return (*(uint64_t (**)(void))(v4 + 8))();
}

float sub_1D43835E0(const float *a1, const float *__B, vDSP_Length __N)
{
  float __C;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  __C = 0.0;
  vDSP_dotpr(a1, 1, __B, 1, &__C, __N);
  return __C;
}

void sub_1D4383644(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    sub_1D43836F4(a1, a2);
  }
  else
  {
    sub_1D43836B8();
    swift_allocError();
    swift_willThrow();
  }
}

unint64_t sub_1D43836B8()
{
  unint64_t result;

  result = qword_1EFE4E0C0;
  if (!qword_1EFE4E0C0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45322CC, &type metadata for DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4E0C0);
  }
  return result;
}

float sub_1D43836F4(uint64_t a1, uint64_t a2)
{
  const float *v2;
  vDSP_Length v3;
  const float *v4;
  float v5;
  float v6;
  float v7;
  float v8;

  v2 = (const float *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = (const float *)(a2 + 32);
  v5 = sub_1D43835E0((const float *)(a1 + 32), (const float *)(a2 + 32), v3);
  v6 = sub_1D43835E0(v2, v2, v3);
  v7 = sub_1D43835E0(v4, v4, v3);
  swift_bridgeObjectRelease();
  v8 = sqrt(v6 * v7);
  return v5 / v8;
}

uint64_t storeEnumTagSinglePayload for DomainError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D43837E0 + 4 * byte_1D453224C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D4383800 + 4 * byte_1D4532251[v4]))();
}

_BYTE *sub_1D43837E0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D4383800(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4383808(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4383810(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4383818(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4383820(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DomainError()
{
  return &type metadata for DomainError;
}

unint64_t sub_1D4383840()
{
  unint64_t result;

  result = qword_1EFE4E0C8;
  if (!qword_1EFE4E0C8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45322A4, &type metadata for DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4E0C8);
  }
  return result;
}

uint64_t sub_1D438387C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  int v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v3 = 0;
  result = sub_1D44F5514(v1, (float *)&v3, a1);
  if ((result & 1) == 0)
  {
    type metadata accessor for SNError();
    sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD000000000000025, 0x80000001D4552020);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1D4383948(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 176) = a1;
  return sub_1D42E39F0();
}

uint64_t sub_1D4383958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D42E3C44();
  sub_1D438BFBC();
  sub_1D438BF50();
  sub_1D438C088();
  v12 = sub_1D438C0A0();
  sub_1D438BF40(v12);
  sub_1D438BEB8(v11 + 16, v10);
  sub_1D438C040();
  v13 = sub_1D438C098();
  sub_1D438BEA8(v13);
  sub_1D438C090();
  v14 = sub_1D438C078();
  sub_1D438BF60(v14);
  sub_1D438C080();
  sub_1D438C518();
  sub_1D438C510();
  sub_1D42E3F50();
  sub_1D42E3DD0();
  sub_1D438C24C();
  return v15(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10);
}

uint64_t sub_1D43839EC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 176) = a1;
  return sub_1D42E39F0();
}

uint64_t sub_1D43839FC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  sub_1D42E3C44();
  sub_1D438BFBC();
  sub_1D438BF50();
  sub_1D438C088();
  v3 = sub_1D438C0A0();
  v1[23] = v3;
  sub_1D438BF40(v3);
  sub_1D438BEB8(v2 + 16, v0);
  sub_1D438C040();
  v4 = sub_1D438C098();
  v1[24] = v4;
  sub_1D438BEA8(v4);
  sub_1D438C090();
  v5 = sub_1D438C078();
  v1[25] = v5;
  sub_1D438BF60(v5);
  sub_1D438C080();
  v6 = (_QWORD *)swift_task_alloc();
  v1[26] = v6;
  sub_1D438BF90(v6, (uint64_t)sub_1D4383A9C);
  return sub_1D438BE90();
}

uint64_t sub_1D4383A9C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  _QWORD *v6;
  uint64_t (*v7)(void);
  uint64_t v8;
  _QWORD *v9;

  v9 = (_QWORD *)*v2;
  v4 = v9;
  sub_1D42E3E84(&v9);
  v4[27] = a1;
  swift_task_dealloc();
  if (v1)
  {
    v4[37] = v1;
    sub_1D42B8EC8();
    return sub_1D42F1DEC();
  }
  else
  {
    v6 = (_QWORD *)sub_1D42E3968();
    v4[28] = v6;
    v7 = (uint64_t (*)(void))sub_1D438C048(v6, (uint64_t)sub_1D4383B18, v8);
    return sub_1D430C35C(v7);
  }
}

uint64_t sub_1D4383B18(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v6;

  v6 = *v2;
  v4 = v6;
  sub_1D42E3E84(&v6);
  *(_QWORD *)(v4 + 232) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_BYTE *)(v4 + 304) = a1 & 1;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D4383B7C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  char *v7;

  if (*(_BYTE *)(v0 + 304) == 1)
  {
    *(_QWORD *)(v0 + 240) = *(_QWORD *)(*(_QWORD *)(v0 + 216) + 24);
    v7 = (char *)&dword_1EFE4E1A8 + dword_1EFE4E1A8;
    sub_1D42BE934();
    v1 = (_QWORD *)sub_1D42E3CAC();
    *(_QWORD *)(v0 + 248) = v1;
    v2 = (uint64_t (*)(void))sub_1D438C448(v1, (uint64_t)sub_1D4383C54, v6, (uint64_t)v7);
    return sub_1D430C35C(v2);
  }
  else
  {
    sub_1D438C440();
    v4 = sub_1D430C648();
    sub_1D4376FD4(v4);
    sub_1D42E3F50();
    sub_1D42B8EC8();
    return v5();
  }
}

uint64_t sub_1D4383C20()
{
  uint64_t v0;

  sub_1D438C440();
  *(_QWORD *)(v0 + 296) = *(_QWORD *)(v0 + 232);
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4383C54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  sub_1D438C1B0();
  sub_1D438C21C();
  sub_1D42E3E84(v6);
  v5[32] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    v5[33] = v3;
    v5[34] = v2;
    v5[35] = v0;
    v5[36] = v4;
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D4383CC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D42E39FC();
  sub_1D438C440();
  v2 = *(_QWORD *)(v0 + 280);
  v1 = *(_QWORD *)(v0 + 288);
  v4 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 272);
  v5 = sub_1D430C648();
  sub_1D4376FD4(v5);
  sub_1D42E3F50();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 8))(v1, v2, v3, v4);
}

uint64_t sub_1D4383D24()
{
  uint64_t v0;

  sub_1D438C440();
  sub_1D42B8F48();
  *(_QWORD *)(v0 + 296) = *(_QWORD *)(v0 + 256);
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4383D60()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1D430C648();
  sub_1D4376FD4(v1);
  sub_1D42E3F50();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4383D94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 176) = a1;
  *(_QWORD *)(v2 + 184) = a2;
  return swift_task_switch();
}

uint64_t sub_1D4383DAC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  sub_1D42E3C44();
  sub_1D438BFA0();
  sub_1D438BF50();
  sub_1D438C088();
  v3 = sub_1D438C0A0();
  v1[24] = v3;
  sub_1D438BF40(v3);
  sub_1D438BEB8(v2 + 16, v0);
  sub_1D438C040();
  v4 = sub_1D438C098();
  v1[25] = v4;
  sub_1D438BEA8(v4);
  sub_1D438C090();
  v5 = sub_1D438C078();
  v1[26] = v5;
  sub_1D438BF60(v5);
  sub_1D438C080();
  v6 = (_QWORD *)swift_task_alloc();
  v1[27] = v6;
  sub_1D438BF90(v6, (uint64_t)sub_1D4383E4C);
  return sub_1D438BE90();
}

uint64_t sub_1D4383E4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_1D438BEC0(a1);
  if (v2)
    *(_QWORD *)(v1 + 240) = v2;
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D4383E90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 232);
  sub_1D438C0E8();
  sub_1D43A82FC();
  if (v1)
  {
    sub_1D438C280();
    sub_1D42B8F48();
    *(_QWORD *)(v0 + 240) = v1;
    sub_1D42B8EC8();
    return swift_task_switch();
  }
  else
  {
    sub_1D438C0D8();
    v3 = sub_1D42B8F48();
    sub_1D438C634(v3, v4, v5, v6, v7, v8, v9, v10, v21, v22, v23, v24, v25, v26, v27, v28);
    sub_1D438C278();
    sub_1D438C264();
    v11 = sub_1D42E3F50();
    sub_1D438C4AC(v11, v12, v13, v14, v15, v16, v17, v18, v19);
    MEMORY[0x38] = v29;
    v20 = (uint64_t (*)(void))sub_1D42E3DD0();
    return v20();
  }
}

uint64_t sub_1D4383F50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 176) = a1;
  *(_QWORD *)(v2 + 184) = a2;
  return swift_task_switch();
}

uint64_t sub_1D4383F68()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  sub_1D42E3C44();
  sub_1D438BFA0();
  sub_1D438BF50();
  sub_1D438C088();
  v3 = sub_1D438C0A0();
  v1[24] = v3;
  sub_1D438BF40(v3);
  sub_1D438BEB8(v2 + 16, v0);
  sub_1D438C040();
  v4 = sub_1D438C098();
  v1[25] = v4;
  sub_1D438BEA8(v4);
  sub_1D438C090();
  v5 = sub_1D438C078();
  v1[26] = v5;
  sub_1D438BF60(v5);
  sub_1D438C080();
  v6 = (_QWORD *)swift_task_alloc();
  v1[27] = v6;
  sub_1D438BF90(v6, (uint64_t)sub_1D4384008);
  return sub_1D438BE90();
}

uint64_t sub_1D4384008(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_1D438BEC0(a1);
  if (v2)
    *(_QWORD *)(v1 + 240) = v2;
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D438404C()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 232);
  sub_1D438C0E8();
  sub_1D43A8298();
  if (!v1)
  {
    sub_1D438C0D8();
    sub_1D42B8F48();
    sub_1D438C278();
    sub_1D438C264();
    sub_1D42E3F50();
    sub_1D438C338();
    MEMORY[0x30] = v4;
    MEMORY[0x40] = v5;
    MEMORY[0x50] = v6;
    MEMORY[0x58] = v7;
    MEMORY[0x60] = v8;
    sub_1D42E3DD0();
    sub_1D438C5E8();
    __asm { BR              X0 }
  }
  sub_1D438C280();
  sub_1D42B8F48();
  *(_QWORD *)(v0 + 240) = v1;
  sub_1D42B8EC8();
  sub_1D438C5E8();
  return swift_task_switch();
}

uint64_t sub_1D4384124(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 176) = a1;
  return sub_1D42E39F0();
}

uint64_t sub_1D4384134()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  sub_1D42E3C44();
  sub_1D438BFBC();
  sub_1D438BF50();
  sub_1D438C088();
  v3 = sub_1D438C0A0();
  v1[23] = v3;
  sub_1D438BF40(v3);
  sub_1D438BEB8(v2 + 16, v0);
  sub_1D438C040();
  v4 = sub_1D438C098();
  v1[24] = v4;
  sub_1D438BEA8(v4);
  sub_1D438C090();
  v5 = sub_1D438C078();
  v1[25] = v5;
  sub_1D438BF60(v5);
  sub_1D438C080();
  v6 = (_QWORD *)swift_task_alloc();
  v1[26] = v6;
  sub_1D438BF90(v6, (uint64_t)sub_1D43841D4);
  return sub_1D438BE90();
}

uint64_t sub_1D43841D4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[27] = a1;
  v3[28] = v1;
  sub_1D42E3CC4();
  if (v1)
    v3[29] = v1;
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D4384238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 224);
  sub_1D438C0E8();
  sub_1D43A8414();
  if (v2)
  {
    sub_1D438C440();
    sub_1D42B8F48();
    *(_QWORD *)(v1 + 232) = v2;
    sub_1D42B8EC8();
    return sub_1D42F1DEC();
  }
  else
  {
    sub_1D438C5A4();
    sub_1D42B8F48();
    sub_1D438C518();
    sub_1D438C510();
    sub_1D42E3F50();
    return sub_1D42E3A3C(v0, *(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_1D43842A8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1D430C648();
  sub_1D4376FD4(v1);
  sub_1D42E3F50();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43842DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 176) = a1;
  *(_QWORD *)(v2 + 184) = a2;
  return swift_task_switch();
}

uint64_t sub_1D43842F4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  sub_1D42E3C44();
  sub_1D438BFA0();
  sub_1D438BF50();
  sub_1D438C088();
  v3 = sub_1D438C0A0();
  v1[24] = v3;
  sub_1D438BF40(v3);
  sub_1D438BEB8(v2 + 16, v0);
  sub_1D438C040();
  v4 = sub_1D438C098();
  v1[25] = v4;
  sub_1D438BEA8(v4);
  sub_1D438C090();
  v5 = sub_1D438C078();
  v1[26] = v5;
  sub_1D438BF60(v5);
  sub_1D438C080();
  v6 = (_QWORD *)swift_task_alloc();
  v1[27] = v6;
  sub_1D438BF90(v6, (uint64_t)sub_1D4384394);
  return sub_1D438BE90();
}

uint64_t sub_1D4384394(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_1D438BEC0(a1);
  if (v2)
    *(_QWORD *)(v1 + 240) = v2;
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D43843D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v19)(void);

  sub_1D438C754();
  v17 = *(_QWORD *)(v16 + 232);
  sub_1D438C0E8();
  sub_1D43A824C();
  if (v17)
  {
    sub_1D438C280();
    sub_1D42B8F48();
    *(_QWORD *)(v16 + 240) = v17;
    sub_1D42B8EC8();
    return sub_1D438C1D4();
  }
  else
  {
    sub_1D438C0D8();
    sub_1D42B8F48();
    sub_1D438C5D8();
    sub_1D438C278();
    sub_1D438C264();
    sub_1D42E3F50();
    sub_1D438C338();
    MEMORY[0x30] = a15;
    MEMORY[0x38] = a16;
    v19 = (uint64_t (*)(void))sub_1D42E3DD0();
    return sub_1D438C1F8(v19);
  }
}

uint64_t sub_1D4384464(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 176) = a1;
  return swift_task_switch();
}

uint64_t sub_1D438447C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  sub_1D42E3C44();
  sub_1D438BFBC();
  sub_1D438BF50();
  sub_1D438C088();
  v3 = sub_1D438C0A0();
  v1[23] = v3;
  sub_1D438BF40(v3);
  sub_1D438BEB8(v2 + 16, v0);
  sub_1D438C040();
  v4 = sub_1D438C098();
  v1[24] = v4;
  sub_1D438BEA8(v4);
  sub_1D438C090();
  v5 = sub_1D438C078();
  v1[25] = v5;
  sub_1D438BF60(v5);
  sub_1D438C080();
  v6 = (_QWORD *)swift_task_alloc();
  v1[26] = v6;
  sub_1D438BF90(v6, (uint64_t)sub_1D438451C);
  return sub_1D438BE90();
}

uint64_t sub_1D438451C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[27] = a1;
  v3[28] = v1;
  sub_1D42E3CC4();
  if (v1)
    v3[29] = v1;
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D4384580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 224);
  sub_1D438C0E8();
  sub_1D43A8478();
  if (v2)
  {
    sub_1D438C440();
    sub_1D42B8F48();
    *(_QWORD *)(v1 + 232) = v2;
    sub_1D42B8EC8();
    return sub_1D42F1DEC();
  }
  else
  {
    sub_1D438C5A4();
    sub_1D42B8F48();
    sub_1D438C518();
    sub_1D438C510();
    sub_1D42E3F50();
    return sub_1D42E3A3C(v0, *(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_1D43845F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 176) = a1;
  *(_QWORD *)(v2 + 184) = a2;
  return swift_task_switch();
}

uint64_t sub_1D4384608()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  sub_1D42E3C44();
  sub_1D438BFA0();
  sub_1D438BF50();
  sub_1D438C088();
  v3 = sub_1D438C0A0();
  v1[24] = v3;
  sub_1D438BF40(v3);
  sub_1D438BEB8(v2 + 16, v0);
  sub_1D438C040();
  v4 = sub_1D438C098();
  v1[25] = v4;
  sub_1D438BEA8(v4);
  sub_1D438C090();
  v5 = sub_1D438C078();
  v1[26] = v5;
  sub_1D438BF60(v5);
  sub_1D438C080();
  v6 = (_QWORD *)swift_task_alloc();
  v1[27] = v6;
  sub_1D438BF90(v6, (uint64_t)sub_1D43846A8);
  return sub_1D438BE90();
}

uint64_t sub_1D43846A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_1D438BEC0(a1);
  if (v2)
    *(_QWORD *)(v1 + 240) = v2;
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D43846EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v19)(void);

  sub_1D438C754();
  v17 = *(_QWORD *)(v16 + 232);
  sub_1D438C0E8();
  sub_1D43A81E4();
  if (v17)
  {
    sub_1D438C280();
    sub_1D42B8F48();
    *(_QWORD *)(v16 + 240) = v17;
    sub_1D42B8EC8();
    return sub_1D438C1D4();
  }
  else
  {
    sub_1D438C0D8();
    sub_1D42B8F48();
    sub_1D438C5D8();
    sub_1D438C278();
    sub_1D438C264();
    sub_1D42E3F50();
    sub_1D438C4C8();
    MEMORY[0x38] = a16;
    v19 = (uint64_t (*)(void))sub_1D42E3DD0();
    return sub_1D438C1F8(v19);
  }
}

uint64_t sub_1D4384774(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 176) = a1;
  *(_QWORD *)(v2 + 184) = a2;
  return swift_task_switch();
}

uint64_t sub_1D438478C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  sub_1D42E3C44();
  sub_1D438BFA0();
  sub_1D438BF50();
  sub_1D438C088();
  v3 = sub_1D438C0A0();
  v1[24] = v3;
  sub_1D438BF40(v3);
  sub_1D438BEB8(v2 + 16, v0);
  sub_1D438C040();
  v4 = sub_1D438C098();
  v1[25] = v4;
  sub_1D438BEA8(v4);
  sub_1D438C090();
  v5 = sub_1D438C078();
  v1[26] = v5;
  sub_1D438BF60(v5);
  sub_1D438C080();
  v6 = (_QWORD *)swift_task_alloc();
  v1[27] = v6;
  sub_1D438BF90(v6, (uint64_t)sub_1D438482C);
  return sub_1D438BE90();
}

uint64_t sub_1D438482C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_1D438BEC0(a1);
  if (v2)
    *(_QWORD *)(v1 + 240) = v2;
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D4384870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v3)(void);
  int v4;

  v1 = *(_QWORD *)(v0 + 232);
  sub_1D438C0E8();
  sub_1D43A8118();
  if (v1)
  {
    sub_1D438C280();
    sub_1D42B8F48();
    *(_QWORD *)(v0 + 240) = v1;
    sub_1D42B8EC8();
    return swift_task_switch();
  }
  else
  {
    sub_1D438C0D8();
    sub_1D42B8F48();
    sub_1D438C5D8();
    sub_1D438C278();
    sub_1D438C264();
    sub_1D42E3F50();
    sub_1D438C338();
    MEMORY[0x30] = v4;
    v3 = (uint64_t (*)(void))sub_1D42E3DD0();
    return v3();
  }
}

uint64_t sub_1D438493C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 176) = a1;
  *(_QWORD *)(v2 + 184) = a2;
  return swift_task_switch();
}

uint64_t sub_1D4384954()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  sub_1D42E3C44();
  sub_1D438BFA0();
  sub_1D438BF50();
  sub_1D438C088();
  v3 = sub_1D438C0A0();
  v1[24] = v3;
  sub_1D438BF40(v3);
  sub_1D438BEB8(v2 + 16, v0);
  sub_1D438C040();
  v4 = sub_1D438C098();
  v1[25] = v4;
  sub_1D438BEA8(v4);
  sub_1D438C090();
  v5 = sub_1D438C078();
  v1[26] = v5;
  sub_1D438BF60(v5);
  sub_1D438C080();
  v6 = (_QWORD *)swift_task_alloc();
  v1[27] = v6;
  sub_1D438BF90(v6, (uint64_t)sub_1D43849F4);
  return sub_1D438BE90();
}

uint64_t sub_1D43849F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_1D438BEC0(a1);
  if (v2)
    *(_QWORD *)(v1 + 240) = v2;
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D4384A38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 232);
  sub_1D438C0E8();
  sub_1D43A80B0();
  if (!v1)
  {
    sub_1D438C0D8();
    sub_1D42B8F48();
    sub_1D438C278();
    sub_1D438C264();
    sub_1D42E3F50();
    sub_1D438C4C8();
    MEMORY[0x38] = v4;
    MEMORY[0x40] = v5;
    MEMORY[0x48] = v6;
    MEMORY[0x50] = v7;
    MEMORY[0x58] = v8;
    sub_1D42E3DD0();
    sub_1D438C6E4();
    __asm { BR              X0 }
  }
  sub_1D438C280();
  sub_1D42B8F48();
  *(_QWORD *)(v0 + 240) = v1;
  sub_1D42B8EC8();
  sub_1D438C6E4();
  return swift_task_switch();
}

uint64_t sub_1D4384B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 176) = a1;
  *(_QWORD *)(v2 + 184) = a2;
  return swift_task_switch();
}

uint64_t sub_1D4384B34()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  sub_1D42E3C44();
  sub_1D438BFA0();
  sub_1D438BF50();
  sub_1D438C088();
  v3 = sub_1D438C0A0();
  v1[24] = v3;
  sub_1D438BF40(v3);
  sub_1D438BEB8(v2 + 16, v0);
  sub_1D438C040();
  v4 = sub_1D438C098();
  v1[25] = v4;
  sub_1D438BEA8(v4);
  sub_1D438C090();
  v5 = sub_1D438C078();
  v1[26] = v5;
  sub_1D438BF60(v5);
  sub_1D438C080();
  v6 = (_QWORD *)swift_task_alloc();
  v1[27] = v6;
  sub_1D438BF90(v6, (uint64_t)sub_1D4384BD4);
  return sub_1D438BE90();
}

uint64_t sub_1D4384BD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_1D438BEC0(a1);
  if (v2)
    *(_QWORD *)(v1 + 240) = v2;
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D4384C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 232);
  sub_1D438C0E8();
  sub_1D43A8044();
  if (v1)
  {
    sub_1D438C280();
    sub_1D42B8F48();
    *(_QWORD *)(v0 + 240) = v1;
    sub_1D42B8EC8();
    return swift_task_switch();
  }
  else
  {
    sub_1D438C0D8();
    v3 = sub_1D42B8F48();
    sub_1D438C634(v3, v4, v5, v6, v7, v8, v9, v10, v21, v22, v23, v24, v25, v26, v27, v28);
    sub_1D438C278();
    sub_1D438C264();
    v11 = sub_1D42E3F50();
    sub_1D438C4AC(v11, v12, v13, v14, v15, v16, v17, v18, v19);
    MEMORY[0x38] = v29;
    MEMORY[0x40] = v30;
    v20 = (uint64_t (*)(void))sub_1D42E3DD0();
    return v20();
  }
}

uint64_t sub_1D4384CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 176) = a1;
  *(_QWORD *)(v2 + 184) = a2;
  return swift_task_switch();
}

uint64_t sub_1D4384CFC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  sub_1D42E3C44();
  sub_1D438BFA0();
  sub_1D438BF50();
  sub_1D438C088();
  v3 = sub_1D438C0A0();
  v1[24] = v3;
  sub_1D438BF40(v3);
  sub_1D438BEB8(v2 + 16, v0);
  sub_1D438C040();
  v4 = sub_1D438C098();
  v1[25] = v4;
  sub_1D438BEA8(v4);
  sub_1D438C090();
  v5 = sub_1D438C078();
  v1[26] = v5;
  sub_1D438BF60(v5);
  sub_1D438C080();
  v6 = (_QWORD *)swift_task_alloc();
  v1[27] = v6;
  sub_1D438BF90(v6, (uint64_t)sub_1D4384D9C);
  return sub_1D438BE90();
}

uint64_t sub_1D4384D9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_1D438BEC0(a1);
  if (v2)
    *(_QWORD *)(v1 + 240) = v2;
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D4384DE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 232);
  sub_1D438C0E8();
  sub_1D43A7FB0();
  if (v1)
  {
    sub_1D438C280();
    sub_1D42B8F48();
    *(_QWORD *)(v0 + 240) = v1;
    sub_1D42B8EC8();
    return sub_1D438C47C();
  }
  else
  {
    sub_1D438C0D8();
    sub_1D42B8F48();
    sub_1D438C278();
    sub_1D438C264();
    sub_1D42E3F50();
    MEMORY[0] = v4;
    MEMORY[8] = v5;
    v3 = (uint64_t (*)(void))sub_1D42E3DD0();
    return sub_1D438C26C(v3);
  }
}

uint64_t sub_1D4384E68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 176) = a1;
  *(_QWORD *)(v2 + 184) = a2;
  return swift_task_switch();
}

uint64_t sub_1D4384E80()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  sub_1D42E3C44();
  sub_1D438BFA0();
  sub_1D438BF50();
  sub_1D438C088();
  v3 = sub_1D438C0A0();
  v1[24] = v3;
  sub_1D438BF40(v3);
  sub_1D438BEB8(v2 + 16, v0);
  sub_1D438C040();
  v4 = sub_1D438C098();
  v1[25] = v4;
  sub_1D438BEA8(v4);
  sub_1D438C090();
  v5 = sub_1D438C078();
  v1[26] = v5;
  sub_1D438BF60(v5);
  sub_1D438C080();
  v6 = (_QWORD *)swift_task_alloc();
  v1[27] = v6;
  sub_1D438BF90(v6, (uint64_t)sub_1D4384F20);
  return sub_1D438BE90();
}

uint64_t sub_1D4384F20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_1D438BEC0(a1);
  if (v2)
    *(_QWORD *)(v1 + 240) = v2;
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D4384F64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v3)(void);
  char v4;

  v1 = *(_QWORD *)(v0 + 232);
  sub_1D438C0E8();
  sub_1D43A7F64();
  if (v1)
  {
    sub_1D438C280();
    sub_1D42B8F48();
    *(_QWORD *)(v0 + 240) = v1;
    sub_1D42B8EC8();
    return sub_1D438C3C4();
  }
  else
  {
    sub_1D438C0D8();
    sub_1D42B8F48();
    sub_1D438C278();
    sub_1D438C264();
    sub_1D42E3F50();
    MEMORY[0] = v4;
    v3 = (uint64_t (*)(void))sub_1D42E3DD0();
    return sub_1D42B8E40(v3);
  }
}

uint64_t sub_1D4384FE4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1D430C648();
  sub_1D4376FD4(v1);
  sub_1D42E3F50();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4385018(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[22] = a1;
  v2[23] = a2;
  type metadata accessor for RemoteRequest();
  v2[24] = sub_1D42E3CEC();
  v2[25] = sub_1D42E3CEC();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D438506C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  sub_1D42E3C44();
  sub_1D438BFA0();
  sub_1D438BF50();
  sub_1D438C088();
  v3 = sub_1D438C0A0();
  v1[26] = v3;
  sub_1D438BF40(v3);
  sub_1D438BEB8(v2 + 16, v0);
  sub_1D438C040();
  v4 = sub_1D438C098();
  v1[27] = v4;
  sub_1D438BEA8(v4);
  sub_1D438C090();
  v5 = sub_1D438C078();
  v1[28] = v5;
  sub_1D438BF60(v5);
  sub_1D438C080();
  v6 = (_QWORD *)swift_task_alloc();
  v1[29] = v6;
  sub_1D438BF90(v6, (uint64_t)sub_1D438510C);
  return sub_1D438BE90();
}

uint64_t sub_1D438510C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[30] = a1;
  v3[31] = v1;
  sub_1D42E3CC4();
  if (v1)
    v3[32] = v1;
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D4385170()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  v1 = v0[31];
  v2 = v0[24];
  sub_1D438C0E8();
  sub_1D43A815C(v2);
  if (v1)
  {
    swift_release();
    sub_1D42B8F48();
    v0[32] = v1;
    sub_1D42B8EC8();
    return sub_1D438C47C();
  }
  else
  {
    v5 = v0[24];
    v4 = v0[25];
    v6 = v0[22];
    swift_release();
    sub_1D42B8F48();
    sub_1D438C488(v5, v4);
    sub_1D438C278();
    sub_1D438C264();
    sub_1D42E3F50();
    sub_1D438C488(v4, v6);
    sub_1D438C1C4();
    sub_1D438C438();
    v7 = (uint64_t (*)(void))sub_1D42E3DD0();
    return sub_1D438C26C(v7);
  }
}

uint64_t sub_1D438523C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1D430C648();
  sub_1D4376FD4(v1);
  sub_1D42E3F50();
  sub_1D42E3E54();
  sub_1D438C1C4();
  return sub_1D430C35C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4385284(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = sub_1D438C684(a1, a2);
  v2[14] = v3;
  v2[15] = *(_QWORD *)(v3 - 8);
  v2[16] = sub_1D42F9B80();
  v2[17] = type metadata accessor for AccessibilitySoundActions.Session();
  v2[18] = sub_1D42E3CEC();
  v2[19] = sub_1D42E3CEC();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43852F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  sub_1D438C1B0();
  sub_1D438C65C();
  sub_1D438C594();
  sub_1D438C088();
  v2 = sub_1D42B6F40();
  sub_1D438C4F0(v2);
  sub_1D438C714(v1 + 16);
  sub_1D438C040();
  v3 = sub_1D42B6F40();
  sub_1D438C534(v3);
  sub_1D438C090();
  v4 = sub_1D438C078();
  sub_1D438C520(v4);
  sub_1D438C080();
  sub_1D42B8F24();
  v5 = (_QWORD *)sub_1D42E3CEC();
  *(_QWORD *)(v0 + 168) = v5;
  sub_1D438BF90(v5, (uint64_t)sub_1D4385380);
  return sub_1D438C3B0();
}

uint64_t sub_1D4385380(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v5)(void);
  uint64_t v6;

  sub_1D438C2F4(a1);
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42F1DEC();
  }
  else
  {
    v4 = (_QWORD *)sub_1D42E3968();
    *(_QWORD *)(v2 + 192) = v4;
    v5 = (uint64_t (*)(void))sub_1D438C048(v4, (uint64_t)sub_1D43853DC, v6);
    return sub_1D430C35C(v5);
  }
}

uint64_t sub_1D43853DC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D438C2D0();
  if (v0)
  {
    sub_1D42B8EC8();
    return sub_1D42F1DEC();
  }
  else
  {
    sub_1D438C648();
    v3 = (_QWORD *)sub_1D42E3968();
    *(_QWORD *)(v1 + 208) = v3;
    v4 = sub_1D438C57C(v3);
    return sub_1D42E3A3C(v4, v5);
  }
}

uint64_t sub_1D438543C()
{
  sub_1D438C370();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4385478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1D438C318();
  sub_1D42B8F48();
  sub_1D438C498();
  sub_1D438C488(v1, v0);
  sub_1D438C518();
  sub_1D438C510();
  sub_1D42E3F50();
  sub_1D438C488(v0, v2);
  sub_1D438C438();
  sub_1D438C490();
  sub_1D42E3E54();
  v3 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42B8ED4(v3);
}

uint64_t sub_1D43854F8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 176) = a1;
  return sub_1D42E39F0();
}

uint64_t sub_1D4385508()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  sub_1D42E3C44();
  sub_1D438BFBC();
  sub_1D438BF50();
  sub_1D438C088();
  v3 = sub_1D438C0A0();
  v1[23] = v3;
  sub_1D438BF40(v3);
  sub_1D438BEB8(v2 + 16, v0);
  sub_1D438C040();
  v4 = sub_1D438C098();
  v1[24] = v4;
  sub_1D438BEA8(v4);
  sub_1D438C090();
  v5 = sub_1D438C078();
  v1[25] = v5;
  sub_1D438BF60(v5);
  sub_1D438C080();
  sub_1D42B8F24();
  v6 = (_QWORD *)sub_1D42E3CEC();
  v1[26] = v6;
  sub_1D438C23C(v6, (uint64_t)sub_1D43855B8);
  sub_1D438C24C();
  return sub_1D4389B10(v7);
}

uint64_t sub_1D43855B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D438BFD8();
  if (!v1)
    *(_QWORD *)(v2 + 224) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D43855FC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 176) = a1;
  return sub_1D42E39F0();
}

uint64_t sub_1D438560C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  sub_1D42E3C44();
  sub_1D438BFBC();
  sub_1D438BF50();
  sub_1D438C088();
  v3 = sub_1D438C0A0();
  v1[23] = v3;
  sub_1D438BF40(v3);
  sub_1D438BEB8(v2 + 16, v0);
  sub_1D438C040();
  v4 = sub_1D438C098();
  v1[24] = v4;
  sub_1D438BEA8(v4);
  sub_1D438C090();
  v5 = sub_1D438C078();
  v1[25] = v5;
  sub_1D438BF60(v5);
  sub_1D438C080();
  sub_1D42B8F24();
  v6 = (_QWORD *)sub_1D42E3CEC();
  v1[26] = v6;
  sub_1D438C23C(v6, (uint64_t)sub_1D43855B8);
  sub_1D438C24C();
  return sub_1D42EC4D4(v7);
}

uint64_t sub_1D43856BC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 176) = a1;
  return sub_1D42E39F0();
}

uint64_t sub_1D43856CC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  sub_1D42E3C44();
  sub_1D438BFBC();
  sub_1D438BF50();
  sub_1D438C088();
  v3 = sub_1D438C0A0();
  v1[23] = v3;
  sub_1D438BF40(v3);
  sub_1D438BEB8(v2 + 16, v0);
  sub_1D438C040();
  v4 = sub_1D438C098();
  v1[24] = v4;
  sub_1D438BEA8(v4);
  sub_1D438C090();
  v5 = sub_1D438C078();
  v1[25] = v5;
  sub_1D438BF60(v5);
  sub_1D438C080();
  sub_1D42B8F24();
  v6 = (_QWORD *)sub_1D42E3CEC();
  v1[26] = v6;
  sub_1D438C23C(v6, (uint64_t)sub_1D43855B8);
  sub_1D438C24C();
  return sub_1D4439E4C(v7);
}

uint64_t sub_1D438577C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 176) = a1;
  return sub_1D42E39F0();
}

uint64_t sub_1D438578C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  sub_1D42E3C44();
  sub_1D438BFBC();
  sub_1D438BF50();
  sub_1D438C088();
  v3 = sub_1D438C0A0();
  v1[23] = v3;
  sub_1D438BF40(v3);
  sub_1D438BEB8(v2 + 16, v0);
  sub_1D438C040();
  v4 = sub_1D438C098();
  v1[24] = v4;
  sub_1D438BEA8(v4);
  sub_1D438C090();
  v5 = sub_1D438C078();
  v1[25] = v5;
  sub_1D438BF60(v5);
  sub_1D438C080();
  sub_1D42B8F24();
  v6 = (_QWORD *)sub_1D42E3CEC();
  v1[26] = v6;
  sub_1D438C23C(v6, (uint64_t)sub_1D43855B8);
  sub_1D438C24C();
  return sub_1D44B9268(v7);
}

uint64_t sub_1D438583C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 176) = a1;
  return sub_1D42E39F0();
}

uint64_t sub_1D438584C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  sub_1D42E3C44();
  sub_1D438BFBC();
  sub_1D438BF50();
  sub_1D438C088();
  v3 = sub_1D438C0A0();
  v1[23] = v3;
  sub_1D438BF40(v3);
  sub_1D438BEB8(v2 + 16, v0);
  sub_1D438C040();
  v4 = sub_1D438C098();
  v1[24] = v4;
  sub_1D438BEA8(v4);
  sub_1D438C090();
  v5 = sub_1D438C078();
  v1[25] = v5;
  sub_1D438BF60(v5);
  sub_1D438C080();
  sub_1D42B8F24();
  v6 = (_QWORD *)sub_1D42E3CEC();
  v1[26] = v6;
  sub_1D438C23C(v6, (uint64_t)sub_1D43855B8);
  sub_1D438C24C();
  return sub_1D44D0330(v7);
}

uint64_t sub_1D43858FC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 176) = a1;
  return sub_1D42E39F0();
}

uint64_t sub_1D438590C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  sub_1D42E3C44();
  sub_1D438BFBC();
  sub_1D438BF50();
  sub_1D438C088();
  v3 = sub_1D438C0A0();
  v1[23] = v3;
  sub_1D438BF40(v3);
  sub_1D438BEB8(v2 + 16, v0);
  sub_1D438C040();
  v4 = sub_1D438C098();
  v1[24] = v4;
  sub_1D438BEA8(v4);
  sub_1D438C090();
  v5 = sub_1D438C078();
  v1[25] = v5;
  sub_1D438BF60(v5);
  sub_1D438C080();
  sub_1D42B8F24();
  v6 = (_QWORD *)sub_1D42E3CEC();
  v1[26] = v6;
  sub_1D438C23C(v6, (uint64_t)sub_1D43855B8);
  sub_1D438C24C();
  return sub_1D42F6020(v7);
}

uint64_t sub_1D43859BC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 176) = a1;
  return sub_1D42E39F0();
}

uint64_t sub_1D43859CC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  sub_1D42E3C44();
  sub_1D438BFBC();
  sub_1D438BF50();
  sub_1D438C088();
  v3 = sub_1D438C0A0();
  v1[23] = v3;
  sub_1D438BF40(v3);
  sub_1D438BEB8(v2 + 16, v0);
  sub_1D438C040();
  v4 = sub_1D438C098();
  v1[24] = v4;
  sub_1D438BEA8(v4);
  sub_1D438C090();
  v5 = sub_1D438C078();
  v1[25] = v5;
  sub_1D438BF60(v5);
  sub_1D438C080();
  sub_1D42B8F24();
  v6 = (_QWORD *)sub_1D42E3CEC();
  v1[26] = v6;
  sub_1D438C23C(v6, (uint64_t)sub_1D4385A7C);
  sub_1D438C24C();
  return sub_1D43F2290(v7);
}

uint64_t sub_1D4385A7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D438BFD8();
  if (!v1)
    *(_QWORD *)(v2 + 224) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D4385AC0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1D430C648();
  sub_1D4376FD4(v1);
  sub_1D42E3F50();
  return sub_1D438C464(*(_QWORD *)(v0 + 224), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4385AF8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1D430C648();
  sub_1D4376FD4(v1);
  sub_1D42E3F50();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4385B2C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = sub_1D438C684(a1, a2);
  v2[14] = v3;
  v2[15] = *(_QWORD *)(v3 - 8);
  v2[16] = sub_1D42F9B80();
  v2[17] = type metadata accessor for AccessibilitySoundRecognition.Session(0);
  v2[18] = sub_1D42E3CEC();
  v2[19] = sub_1D42E3CEC();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4385B98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  sub_1D438C1B0();
  sub_1D438C65C();
  sub_1D438C594();
  sub_1D438C088();
  v2 = sub_1D42B6F40();
  sub_1D438C4F0(v2);
  sub_1D438C714(v1 + 16);
  sub_1D438C040();
  v3 = sub_1D42B6F40();
  sub_1D438C534(v3);
  sub_1D438C090();
  v4 = sub_1D438C078();
  sub_1D438C520(v4);
  sub_1D438C080();
  sub_1D42B8F24();
  v5 = (_QWORD *)sub_1D42E3CEC();
  *(_QWORD *)(v0 + 168) = v5;
  sub_1D438BF90(v5, (uint64_t)sub_1D4385C28);
  return sub_1D438C3B0();
}

uint64_t sub_1D4385C28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v5)(void);
  uint64_t v6;

  sub_1D438C2F4(a1);
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42F1DEC();
  }
  else
  {
    v4 = (_QWORD *)sub_1D42E3968();
    *(_QWORD *)(v2 + 192) = v4;
    v5 = (uint64_t (*)(void))sub_1D438C048(v4, (uint64_t)sub_1D4385C84, v6);
    return sub_1D430C35C(v5);
  }
}

uint64_t sub_1D4385C84()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D438C2D0();
  if (v0)
  {
    sub_1D42B8EC8();
    return sub_1D42F1DEC();
  }
  else
  {
    sub_1D438C648();
    v3 = (_QWORD *)sub_1D42E3968();
    *(_QWORD *)(v1 + 208) = v3;
    v4 = sub_1D438C57C(v3);
    return sub_1D42E3A3C(v4, v5);
  }
}

uint64_t sub_1D4385CE4()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_1D42E39FC();
  swift_release();
  v0 = sub_1D430C648();
  sub_1D4376FD4(v0);
  sub_1D42E3F50();
  sub_1D438C1C4();
  sub_1D438C438();
  sub_1D438C490();
  v1 = (uint64_t (*)(void))sub_1D438C5C4();
  return sub_1D42B8E40(v1);
}

uint64_t sub_1D4385D40()
{
  sub_1D438C370();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4385D7C()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_1D42E39FC();
  swift_release();
  sub_1D42B8F48();
  v0 = sub_1D430C648();
  sub_1D4376FD4(v0);
  sub_1D42E3F50();
  sub_1D438C1C4();
  sub_1D438C438();
  sub_1D438C490();
  v1 = (uint64_t (*)(void))sub_1D438C5C4();
  return sub_1D42B8E40(v1);
}

uint64_t sub_1D4385DE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1D438C318();
  sub_1D42B8F48();
  sub_1D438C498();
  sub_1D438C488(v1, v0);
  sub_1D438C518();
  sub_1D438C510();
  sub_1D42E3F50();
  sub_1D438C488(v0, v2);
  sub_1D438C438();
  sub_1D438C490();
  sub_1D42E3E54();
  v3 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42B8ED4(v3);
}

uint64_t sub_1D4385E60()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_1D42E39FC();
  swift_release();
  sub_1D42B8F48();
  swift_release();
  v0 = sub_1D430C648();
  sub_1D4376FD4(v0);
  sub_1D42E3F50();
  sub_1D438C1C4();
  sub_1D438C438();
  sub_1D438C490();
  v1 = (uint64_t (*)(void))sub_1D438C5C4();
  return sub_1D42B8E40(v1);
}

uint64_t sub_1D4385ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 176) = a1;
  *(_QWORD *)(v2 + 184) = a2;
  return sub_1D42E39F0();
}

uint64_t sub_1D4385EE4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  sub_1D42E3C44();
  sub_1D438BFA0();
  sub_1D438BF50();
  sub_1D438C088();
  v3 = sub_1D438C0A0();
  v1[24] = v3;
  sub_1D438BF40(v3);
  sub_1D438BEB8(v2 + 16, v0);
  sub_1D438C040();
  v4 = sub_1D438C098();
  v1[25] = v4;
  sub_1D438BEA8(v4);
  sub_1D438C090();
  v5 = sub_1D438C078();
  v1[26] = v5;
  sub_1D438BF60(v5);
  sub_1D438C080();
  sub_1D42B8F24();
  v6 = (_QWORD *)sub_1D42E3CEC();
  v1[27] = v6;
  sub_1D438BF90(v6, (uint64_t)sub_1D4385F88);
  return sub_1D438BE90();
}

uint64_t sub_1D4385F88()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t (*v6)(void);
  uint64_t v7;

  sub_1D430C4B8();
  sub_1D42E3E84(v3);
  v2[28] = v0;
  v2[29] = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42F1DEC();
  }
  else
  {
    v5 = (_QWORD *)sub_1D42E3968();
    v2[30] = v5;
    v6 = (uint64_t (*)(void))sub_1D438C048(v5, (uint64_t)sub_1D4385FF4, v7);
    return sub_1D430C35C(v6);
  }
}

uint64_t sub_1D4385FF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_1D430C4B8();
  sub_1D42E3E84(v3);
  *(_QWORD *)(v2 + 248) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 256) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D4386048()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_1D42B8F48();
  v0 = sub_1D430C648();
  sub_1D4376FD4(v0);
  sub_1D42E3F50();
  v1 = (uint64_t (*)(void))sub_1D438C5C4();
  return sub_1D42B8ED4(v1);
}

uint64_t sub_1D4386084()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v3)(void);

  v1 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD **)(v0 + 176);
  swift_release();
  sub_1D42B8F48();
  sub_1D438C278();
  sub_1D438C264();
  sub_1D42E3F50();
  *v2 = v1;
  v3 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42B8ED4(v3);
}

uint64_t sub_1D43860DC()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_1D438C280();
  sub_1D42B8F48();
  v0 = sub_1D430C648();
  sub_1D4376FD4(v0);
  sub_1D42E3F50();
  v1 = (uint64_t (*)(void))sub_1D438C5C4();
  return sub_1D42B8ED4(v1);
}

uint64_t sub_1D438611C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v1;
  v2 = sub_1D42B8EF0(v1);
  return sub_1D438C034(v2);
}

uint64_t sub_1D438615C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = *v1;
  sub_1D430C44C(&v4);
  if (v0)
    return sub_1D42B8DC0(*(uint64_t (**)(void))(v2 + 8));
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43861B0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  sub_1D438C1B0();
  v3 = sub_1D438C548();
  sub_1D438BEB8(v3, v0);
  sub_1D438C088();
  v4 = sub_1D438C0A0();
  v2[29] = v4;
  sub_1D438BEB8(v0, v4 + 16);
  sub_1D438BEB8((uint64_t)(v2 + 4), v1);
  sub_1D438C040();
  v5 = sub_1D438C098();
  v2[30] = v5;
  sub_1D438BEA8(v5);
  sub_1D438C090();
  v6 = sub_1D438C078();
  v2[31] = v6;
  sub_1D438BF60(v6);
  sub_1D438C080();
  v7 = (_QWORD *)swift_task_alloc();
  v2[32] = v7;
  sub_1D438BF90(v7, (uint64_t)sub_1D438625C);
  return sub_1D438BF10();
}

uint64_t sub_1D438625C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D438C418();
  *(_QWORD *)(v0 + 264) = v2;
  sub_1D42E3CC4();
  if (v1)
    *(_QWORD *)(v0 + 312) = v1;
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D43862A8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  char *v5;

  v0[34] = *(_QWORD *)(v0[33] + 24);
  v5 = (char *)&dword_1EFE4E180 + dword_1EFE4E180;
  sub_1D42BE934();
  v1 = (_QWORD *)sub_1D42E3CAC();
  v0[35] = v1;
  v2 = (uint64_t (*)(void))sub_1D438C448(v1, (uint64_t)sub_1D4386304, v4, (uint64_t)v5);
  return sub_1D430C35C(v2);
}

uint64_t sub_1D4386304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1D42E3EE0();
  sub_1D42E3E84(v4);
  v3[36] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    v3[37] = v0;
    v3[38] = v2;
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D4386368()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  v1 = sub_1D430C648();
  sub_1D4376FD4(v1);
  sub_1D42E3F50();
  sub_1D438C1CC();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 296));
}

uint64_t sub_1D43863B8()
{
  uint64_t v0;

  swift_release();
  sub_1D42B8F48();
  *(_QWORD *)(v0 + 312) = *(_QWORD *)(v0 + 288);
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43863F4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1D430C648();
  sub_1D4376FD4(v1);
  sub_1D42E3F50();
  sub_1D438C1CC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D4386438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = sub_1D42B28FC(&qword_1EFE4E2B8);
  *(_QWORD *)(v0 + 264) = sub_1D438C0C0(v1);
  v2 = swift_task_alloc();
  v3 = (_QWORD *)sub_1D438C3E8(v2);
  v4 = sub_1D42B8EF0(v3);
  return sub_1D438C034(v4);
}

uint64_t sub_1D4386488()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D438BFFC();
  if (v0)
  {
    sub_1D438C3E0();
    return sub_1D42E39E4(*(uint64_t (**)(void))(v1 + 8));
  }
  else
  {
    sub_1D42B8EC8();
    return sub_1D42E3818();
  }
}

uint64_t sub_1D43864CC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  sub_1D438C1B0();
  v3 = sub_1D438C05C();
  sub_1D438BEB8(v3, v0);
  sub_1D438C088();
  v4 = sub_1D438C0A0();
  v2[35] = v4;
  sub_1D438BEB8(v0, v4 + 16);
  sub_1D438BEB8((uint64_t)(v2 + 4), v1);
  sub_1D438C040();
  v5 = sub_1D438C098();
  v2[36] = v5;
  sub_1D438BEA8(v5);
  sub_1D438C090();
  v6 = sub_1D438C078();
  v2[37] = v6;
  sub_1D438BF60(v6);
  sub_1D438C080();
  sub_1D42B8F24();
  v7 = (_QWORD *)sub_1D42E3CEC();
  v2[38] = v7;
  sub_1D438BF90(v7, (uint64_t)sub_1D438657C);
  return sub_1D438BF10();
}

uint64_t sub_1D438657C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v5)(void);
  uint64_t v6;

  sub_1D438BF6C(a1);
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42F1DEC();
  }
  else
  {
    v4 = (_QWORD *)sub_1D42E3968();
    *(_QWORD *)(v2 + 328) = v4;
    v5 = (uint64_t (*)(void))sub_1D438C048(v4, (uint64_t)sub_1D43865D8, v6);
    return sub_1D430C35C(v5);
  }
}

uint64_t sub_1D43865D8(uint64_t a1, uint64_t a2)
{
  sub_1D438BEE8(a1, a2);
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

void sub_1D4386614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1D438C15C();
  sub_1D438C190();
  if (v0)
  {
    sub_1D438C018();
    sub_1D438C0A8();
    sub_1D42B6F8C();
    sub_1D42E3F48();
    sub_1D438C3D8(&qword_1EFE4E2C0, v1, (uint64_t)&unk_1D4532BA0);
    sub_1D438C118();
    sub_1D438C178();
    sub_1D42EA1BC();
    sub_1D438C184();
    sub_1D438C288();
    sub_1D438C290();
    sub_1D42E3F50();
    sub_1D438C1CC();
    sub_1D438C1C4();
    v2 = sub_1D438C1A0();
    sub_1D438BF24(v2, v3);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D43866A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = sub_1D42B28FC(&qword_1EFE4E248);
  *(_QWORD *)(v0 + 264) = sub_1D438C0C0(v1);
  v2 = swift_task_alloc();
  v3 = (_QWORD *)sub_1D438C3E8(v2);
  v4 = sub_1D42B8EF0(v3);
  return sub_1D438C034(v4);
}

uint64_t sub_1D43866F4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D438BFFC();
  if (v0)
  {
    sub_1D438C3E0();
    return sub_1D42E39E4(*(uint64_t (**)(void))(v1 + 8));
  }
  else
  {
    sub_1D42B8EC8();
    return sub_1D42E3818();
  }
}

uint64_t sub_1D4386738()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  sub_1D438C1B0();
  v3 = sub_1D438C05C();
  sub_1D438BEB8(v3, v0);
  sub_1D438C088();
  v4 = sub_1D438C0A0();
  v2[35] = v4;
  sub_1D438BEB8(v0, v4 + 16);
  sub_1D438BEB8((uint64_t)(v2 + 4), v1);
  sub_1D438C040();
  v5 = sub_1D438C098();
  v2[36] = v5;
  sub_1D438BEA8(v5);
  sub_1D438C090();
  v6 = sub_1D438C078();
  v2[37] = v6;
  sub_1D438BF60(v6);
  sub_1D438C080();
  sub_1D42B8F24();
  v7 = (_QWORD *)sub_1D42E3CEC();
  v2[38] = v7;
  sub_1D438BF90(v7, (uint64_t)sub_1D43867E8);
  return sub_1D438BF10();
}

uint64_t sub_1D43867E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v5)(void);
  uint64_t v6;

  sub_1D438BF6C(a1);
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42F1DEC();
  }
  else
  {
    v4 = (_QWORD *)sub_1D42E3968();
    *(_QWORD *)(v2 + 328) = v4;
    v5 = (uint64_t (*)(void))sub_1D438C048(v4, (uint64_t)sub_1D4386844, v6);
    return sub_1D430C35C(v5);
  }
}

uint64_t sub_1D4386844(uint64_t a1, uint64_t a2)
{
  sub_1D438BEE8(a1, a2);
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

void sub_1D4386880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1D438C15C();
  sub_1D438C190();
  if (v0)
  {
    sub_1D438C018();
    sub_1D438C0A8();
    sub_1D42B6F8C();
    sub_1D42E3F48();
    sub_1D438C3D8(&qword_1EFE4E250, v1, (uint64_t)&unk_1D4532BA0);
    sub_1D438C118();
    sub_1D438C178();
    sub_1D42EA1BC();
    sub_1D438C184();
    sub_1D438C288();
    sub_1D438C290();
    sub_1D42E3F50();
    sub_1D438C1CC();
    sub_1D438C1C4();
    v2 = sub_1D438C1A0();
    sub_1D438BF24(v2, v3);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D4386910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = sub_1D42B28FC(&qword_1EFE4E210);
  *(_QWORD *)(v0 + 264) = sub_1D438C0C0(v1);
  v2 = swift_task_alloc();
  v3 = (_QWORD *)sub_1D438C3E8(v2);
  v4 = sub_1D42B8EF0(v3);
  return sub_1D438C034(v4);
}

uint64_t sub_1D4386960()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D438BFFC();
  if (v0)
  {
    sub_1D438C3E0();
    return sub_1D42E39E4(*(uint64_t (**)(void))(v1 + 8));
  }
  else
  {
    sub_1D42B8EC8();
    return sub_1D42E3818();
  }
}

uint64_t sub_1D43869A4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  sub_1D438C1B0();
  v3 = sub_1D438C05C();
  sub_1D438BEB8(v3, v0);
  sub_1D438C088();
  v4 = sub_1D438C0A0();
  v2[35] = v4;
  sub_1D438BEB8(v0, v4 + 16);
  sub_1D438BEB8((uint64_t)(v2 + 4), v1);
  sub_1D438C040();
  v5 = sub_1D438C098();
  v2[36] = v5;
  sub_1D438BEA8(v5);
  sub_1D438C090();
  v6 = sub_1D438C078();
  v2[37] = v6;
  sub_1D438BF60(v6);
  sub_1D438C080();
  sub_1D42B8F24();
  v7 = (_QWORD *)sub_1D42E3CEC();
  v2[38] = v7;
  sub_1D438BF90(v7, (uint64_t)sub_1D4386A54);
  return sub_1D438BF10();
}

uint64_t sub_1D4386A54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v5)(void);
  uint64_t v6;

  sub_1D438BF6C(a1);
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42F1DEC();
  }
  else
  {
    v4 = (_QWORD *)sub_1D42E3968();
    *(_QWORD *)(v2 + 328) = v4;
    v5 = (uint64_t (*)(void))sub_1D438C048(v4, (uint64_t)sub_1D4386AB0, v6);
    return sub_1D430C35C(v5);
  }
}

uint64_t sub_1D4386AB0(uint64_t a1, uint64_t a2)
{
  sub_1D438BEE8(a1, a2);
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

void sub_1D4386AEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1D438C15C();
  sub_1D438C190();
  if (v0)
  {
    sub_1D438C018();
    sub_1D438C0A8();
    sub_1D42B6F8C();
    sub_1D42E3F48();
    sub_1D438C3D8(&qword_1EFE4E218, v1, (uint64_t)&unk_1D4532BA0);
    sub_1D438C118();
    sub_1D438C178();
    sub_1D42EA1BC();
    sub_1D438C184();
    sub_1D438C288();
    sub_1D438C290();
    sub_1D42E3F50();
    sub_1D438C1CC();
    sub_1D438C1C4();
    v2 = sub_1D438C1A0();
    sub_1D438BF24(v2, v3);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D4386B7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = sub_1D42B28FC(&qword_1EFE4E3C8);
  *(_QWORD *)(v0 + 264) = sub_1D438C0C0(v1);
  v2 = swift_task_alloc();
  v3 = (_QWORD *)sub_1D438C3E8(v2);
  v4 = sub_1D42B8EF0(v3);
  return sub_1D438C034(v4);
}

uint64_t sub_1D4386BCC()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D438BFFC();
  if (v0)
  {
    sub_1D438C3E0();
    return sub_1D42E39E4(*(uint64_t (**)(void))(v1 + 8));
  }
  else
  {
    sub_1D42B8EC8();
    return sub_1D42E3818();
  }
}

uint64_t sub_1D4386C10()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  sub_1D438C1B0();
  v3 = sub_1D438C05C();
  sub_1D438BEB8(v3, v0);
  sub_1D438C088();
  v4 = sub_1D438C0A0();
  v2[35] = v4;
  sub_1D438BEB8(v0, v4 + 16);
  sub_1D438BEB8((uint64_t)(v2 + 4), v1);
  sub_1D438C040();
  v5 = sub_1D438C098();
  v2[36] = v5;
  sub_1D438BEA8(v5);
  sub_1D438C090();
  v6 = sub_1D438C078();
  v2[37] = v6;
  sub_1D438BF60(v6);
  sub_1D438C080();
  sub_1D42B8F24();
  v7 = (_QWORD *)sub_1D42E3CEC();
  v2[38] = v7;
  sub_1D438BF90(v7, (uint64_t)sub_1D4386CC0);
  return sub_1D438BF10();
}

uint64_t sub_1D4386CC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v5)(void);
  uint64_t v6;

  sub_1D438BF6C(a1);
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42F1DEC();
  }
  else
  {
    v4 = (_QWORD *)sub_1D42E3968();
    *(_QWORD *)(v2 + 328) = v4;
    v5 = (uint64_t (*)(void))sub_1D438C048(v4, (uint64_t)sub_1D4386D1C, v6);
    return sub_1D430C35C(v5);
  }
}

uint64_t sub_1D4386D1C(uint64_t a1, uint64_t a2)
{
  sub_1D438BEE8(a1, a2);
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

void sub_1D4386D58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  sub_1D438C15C();
  sub_1D438C190();
  if (v4)
  {
    sub_1D438C018();
    sub_1D4388220(v3, v2, v0, v1);
    sub_1D42B6F8C();
    sub_1D42E3F48();
    sub_1D438C3D8(&qword_1EFE4E3D0, v5, (uint64_t)&unk_1D4532BA0);
    sub_1D438C118();
    sub_1D438C178();
    sub_1D42EA1BC();
    sub_1D438C184();
    sub_1D438C288();
    sub_1D438C290();
    sub_1D42E3F50();
    sub_1D438C1CC();
    sub_1D438C1C4();
    v6 = sub_1D438C1A0();
    sub_1D438BF24(v6, v7);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D4386DEC()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[32] = sub_1D42B28FC(&qword_1EFE4E128);
  v0[33] = swift_task_alloc();
  v1 = (_QWORD *)swift_task_alloc();
  v0[34] = v1;
  *v1 = v0;
  v1[1] = sub_1D4386E64;
  return sub_1D4376F40((uint64_t)(v0 + 2));
}

uint64_t sub_1D4386E64()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D438BFFC();
  if (v0)
  {
    sub_1D438C3E0();
    return sub_1D42E39E4(*(uint64_t (**)(void))(v1 + 8));
  }
  else
  {
    sub_1D42B8EC8();
    return sub_1D42E3818();
  }
}

uint64_t sub_1D4386EA8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  sub_1D438C1B0();
  v3 = sub_1D438C05C();
  sub_1D438BEB8(v3, v0);
  sub_1D438C088();
  v4 = sub_1D438C0A0();
  v2[35] = v4;
  sub_1D438BEB8(v0, v4 + 16);
  sub_1D438BEB8((uint64_t)(v2 + 4), v1);
  sub_1D438C040();
  v5 = sub_1D438C098();
  v2[36] = v5;
  sub_1D438BEA8(v5);
  sub_1D438C090();
  v6 = sub_1D438C078();
  v2[37] = v6;
  sub_1D438BF60(v6);
  sub_1D438C080();
  sub_1D42B8F24();
  v7 = (_QWORD *)sub_1D42E3CEC();
  v2[38] = v7;
  sub_1D438BF90(v7, (uint64_t)sub_1D4386F58);
  return sub_1D438BF10();
}

uint64_t sub_1D4386F58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v5)(void);
  uint64_t v6;

  sub_1D438BF6C(a1);
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42F1DEC();
  }
  else
  {
    v4 = (_QWORD *)sub_1D42E3968();
    *(_QWORD *)(v2 + 328) = v4;
    v5 = (uint64_t (*)(void))sub_1D438C048(v4, (uint64_t)sub_1D4386FB4, v6);
    return sub_1D430C35C(v5);
  }
}

uint64_t sub_1D4386FB4(uint64_t a1, uint64_t a2)
{
  sub_1D438BEE8(a1, a2);
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

void sub_1D4386FF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1D438C15C();
  sub_1D438C190();
  if (v0)
  {
    sub_1D438C018();
    sub_1D438C0A8();
    sub_1D42B6F8C();
    sub_1D42E3F48();
    sub_1D438C3D8(&qword_1EFE4E148, v1, (uint64_t)&unk_1D4532BA0);
    sub_1D438C118();
    sub_1D438C178();
    sub_1D42EA1BC();
    sub_1D438C184();
    sub_1D438C288();
    sub_1D438C290();
    sub_1D42E3F50();
    sub_1D438C1CC();
    sub_1D438C1C4();
    v2 = sub_1D438C1A0();
    sub_1D438BF24(v2, v3);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D4387080()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = sub_1D42B28FC(&qword_1EFE4E280);
  *(_QWORD *)(v0 + 264) = sub_1D438C0C0(v1);
  v2 = swift_task_alloc();
  v3 = (_QWORD *)sub_1D438C3E8(v2);
  v4 = sub_1D42B8EF0(v3);
  return sub_1D438C034(v4);
}

uint64_t sub_1D43870D0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D438BFFC();
  if (v0)
  {
    sub_1D438C3E0();
    return sub_1D42E39E4(*(uint64_t (**)(void))(v1 + 8));
  }
  else
  {
    sub_1D42B8EC8();
    return sub_1D42E3818();
  }
}

uint64_t sub_1D4387114()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  sub_1D438C1B0();
  v3 = sub_1D438C05C();
  sub_1D438BEB8(v3, v0);
  sub_1D438C088();
  v4 = sub_1D438C0A0();
  v2[35] = v4;
  sub_1D438BEB8(v0, v4 + 16);
  sub_1D438BEB8((uint64_t)(v2 + 4), v1);
  sub_1D438C040();
  v5 = sub_1D438C098();
  v2[36] = v5;
  sub_1D438BEA8(v5);
  sub_1D438C090();
  v6 = sub_1D438C078();
  v2[37] = v6;
  sub_1D438BF60(v6);
  sub_1D438C080();
  sub_1D42B8F24();
  v7 = (_QWORD *)sub_1D42E3CEC();
  v2[38] = v7;
  sub_1D438BF90(v7, (uint64_t)sub_1D43871C4);
  return sub_1D438BF10();
}

uint64_t sub_1D43871C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v5)(void);
  uint64_t v6;

  sub_1D438BF6C(a1);
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42F1DEC();
  }
  else
  {
    v4 = (_QWORD *)sub_1D42E3968();
    *(_QWORD *)(v2 + 328) = v4;
    v5 = (uint64_t (*)(void))sub_1D438C048(v4, (uint64_t)sub_1D4387220, v6);
    return sub_1D430C35C(v5);
  }
}

uint64_t sub_1D4387220(uint64_t a1, uint64_t a2)
{
  sub_1D438BEE8(a1, a2);
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

void sub_1D438725C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1D438C15C();
  sub_1D438C190();
  if (v0)
  {
    sub_1D438C018();
    sub_1D438C0A8();
    sub_1D42B6F8C();
    sub_1D42E3F48();
    sub_1D438C3D8(&qword_1EFE4E288, v1, (uint64_t)&unk_1D4532BA0);
    sub_1D438C118();
    sub_1D438C178();
    sub_1D42EA1BC();
    sub_1D438C184();
    sub_1D438C288();
    sub_1D438C290();
    sub_1D42E3F50();
    sub_1D438C1CC();
    sub_1D438C1C4();
    v2 = sub_1D438C1A0();
    sub_1D438BF24(v2, v3);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D43872EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = sub_1D42B28FC(&qword_1EFE4E2F0);
  *(_QWORD *)(v0 + 264) = sub_1D438C0C0(v1);
  v2 = swift_task_alloc();
  v3 = (_QWORD *)sub_1D438C3E8(v2);
  v4 = sub_1D42B8EF0(v3);
  return sub_1D438C034(v4);
}

uint64_t sub_1D438733C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D438BFFC();
  if (v0)
  {
    sub_1D438C3E0();
    return sub_1D42E39E4(*(uint64_t (**)(void))(v1 + 8));
  }
  else
  {
    sub_1D42B8EC8();
    return sub_1D42E3818();
  }
}

uint64_t sub_1D4387380()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  sub_1D438C1B0();
  v3 = sub_1D438C05C();
  sub_1D438BEB8(v3, v0);
  sub_1D438C088();
  v4 = sub_1D438C0A0();
  v2[35] = v4;
  sub_1D438BEB8(v0, v4 + 16);
  sub_1D438BEB8((uint64_t)(v2 + 4), v1);
  sub_1D438C040();
  v5 = sub_1D438C098();
  v2[36] = v5;
  sub_1D438BEA8(v5);
  sub_1D438C090();
  v6 = sub_1D438C078();
  v2[37] = v6;
  sub_1D438BF60(v6);
  sub_1D438C080();
  sub_1D42B8F24();
  v7 = (_QWORD *)sub_1D42E3CEC();
  v2[38] = v7;
  sub_1D438BF90(v7, (uint64_t)sub_1D4387430);
  return sub_1D438BF10();
}

uint64_t sub_1D4387430(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v5)(void);
  uint64_t v6;

  sub_1D438BF6C(a1);
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42F1DEC();
  }
  else
  {
    v4 = (_QWORD *)sub_1D42E3968();
    *(_QWORD *)(v2 + 328) = v4;
    v5 = (uint64_t (*)(void))sub_1D438C048(v4, (uint64_t)sub_1D438748C, v6);
    return sub_1D430C35C(v5);
  }
}

uint64_t sub_1D438748C(uint64_t a1, uint64_t a2)
{
  sub_1D438BEE8(a1, a2);
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

void sub_1D43874C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1D438C15C();
  sub_1D438C190();
  if (v0)
  {
    sub_1D438C018();
    sub_1D438C0A8();
    sub_1D42B6F8C();
    sub_1D42E3F48();
    sub_1D438C3D8(&qword_1EFE4E2F8, v1, (uint64_t)&unk_1D4532BA0);
    sub_1D438C118();
    sub_1D438C178();
    sub_1D42EA1BC();
    sub_1D438C184();
    sub_1D438C288();
    sub_1D438C290();
    sub_1D42E3F50();
    sub_1D438C1CC();
    sub_1D438C1C4();
    v2 = sub_1D438C1A0();
    sub_1D438BF24(v2, v3);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D4387558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = sub_1D42B28FC(&qword_1EFE4E1D8);
  *(_QWORD *)(v0 + 264) = sub_1D438C0C0(v1);
  v2 = swift_task_alloc();
  v3 = (_QWORD *)sub_1D438C3E8(v2);
  v4 = sub_1D42B8EF0(v3);
  return sub_1D438C034(v4);
}

uint64_t sub_1D43875A8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D438BFFC();
  if (v0)
  {
    sub_1D438C3E0();
    return sub_1D42E39E4(*(uint64_t (**)(void))(v1 + 8));
  }
  else
  {
    sub_1D42B8EC8();
    return sub_1D42E3818();
  }
}

uint64_t sub_1D43875EC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  sub_1D438C1B0();
  v3 = sub_1D438C05C();
  sub_1D438BEB8(v3, v0);
  sub_1D438C088();
  v4 = sub_1D438C0A0();
  v2[35] = v4;
  sub_1D438BEB8(v0, v4 + 16);
  sub_1D438BEB8((uint64_t)(v2 + 4), v1);
  sub_1D438C040();
  v5 = sub_1D438C098();
  v2[36] = v5;
  sub_1D438BEA8(v5);
  sub_1D438C090();
  v6 = sub_1D438C078();
  v2[37] = v6;
  sub_1D438BF60(v6);
  sub_1D438C080();
  sub_1D42B8F24();
  v7 = (_QWORD *)sub_1D42E3CEC();
  v2[38] = v7;
  sub_1D438BF90(v7, (uint64_t)sub_1D438769C);
  return sub_1D438BF10();
}

uint64_t sub_1D438769C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v5)(void);
  uint64_t v6;

  sub_1D438BF6C(a1);
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42F1DEC();
  }
  else
  {
    v4 = (_QWORD *)sub_1D42E3968();
    *(_QWORD *)(v2 + 328) = v4;
    v5 = (uint64_t (*)(void))sub_1D438C048(v4, (uint64_t)sub_1D43876F8, v6);
    return sub_1D430C35C(v5);
  }
}

uint64_t sub_1D43876F8(uint64_t a1, uint64_t a2)
{
  sub_1D438BEE8(a1, a2);
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4387734()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D42B8F48();
  v1 = sub_1D430C648();
  sub_1D4376FD4(v1);
  sub_1D42E3F50();
  sub_1D438C1CC();
  swift_task_dealloc();
  return sub_1D42E3A2C(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1D4387784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1D438C15C();
  sub_1D438C190();
  if (v0)
  {
    sub_1D438C018();
    sub_1D438C0A8();
    sub_1D42B6F8C();
    sub_1D42E3F48();
    sub_1D438C3D8(&qword_1EFE4E1E0, v1, (uint64_t)&unk_1D4532BA0);
    sub_1D438C118();
    sub_1D438C178();
    sub_1D42EA1BC();
    sub_1D438C184();
    sub_1D438C288();
    sub_1D438C290();
    sub_1D42E3F50();
    sub_1D438C1CC();
    sub_1D438C1C4();
    v2 = sub_1D438C1A0();
    sub_1D438BF24(v2, v3);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D4387814()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  sub_1D42B8F48();
  v1 = sub_1D430C648();
  sub_1D4376FD4(v1);
  sub_1D42E3F50();
  sub_1D438C1CC();
  swift_task_dealloc();
  return sub_1D42E3A2C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D438786C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v1;
  v2 = sub_1D42B8EF0(v1);
  return sub_1D438C034(v2);
}

uint64_t sub_1D43878AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = *v1;
  sub_1D430C44C(&v4);
  if (v0)
    return (*(uint64_t (**)(_QWORD))(v2 + 8))(0);
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D438790C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  sub_1D438C1B0();
  v3 = sub_1D438C548();
  sub_1D438BEB8(v3, v0);
  sub_1D438C088();
  v4 = sub_1D438C0A0();
  v2[29] = v4;
  sub_1D438BEB8(v0, v4 + 16);
  sub_1D438BEB8((uint64_t)(v2 + 4), v1);
  sub_1D438C040();
  v5 = sub_1D438C098();
  v2[30] = v5;
  sub_1D438BEA8(v5);
  sub_1D438C090();
  v6 = sub_1D438C078();
  v2[31] = v6;
  sub_1D438BF60(v6);
  sub_1D438C080();
  v7 = (_QWORD *)swift_task_alloc();
  v2[32] = v7;
  sub_1D438BF90(v7, (uint64_t)sub_1D43879B8);
  return sub_1D438BF10();
}

uint64_t sub_1D43879B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D438C418();
  v0[33] = v2;
  v0[34] = v1;
  sub_1D42E3CC4();
  if (v1)
    v0[35] = v1;
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D4387A04()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v4;

  v1 = *(_QWORD *)(v0 + 272);
  sub_1D438C0E8();
  v2 = sub_1D43A83CC();
  if (v1)
  {
    swift_release();
    sub_1D42B8F48();
    *(_QWORD *)(v0 + 280) = v1;
    sub_1D42B8EC8();
    return sub_1D438C3C4();
  }
  else
  {
    v4 = v2;
    swift_release();
    sub_1D42B8F48();
    sub_1D438C288();
    sub_1D438C290();
    sub_1D42E3F50();
    sub_1D42B8C84((uint64_t *)(v0 + 16));
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(v4 & 1);
  }
}

uint64_t sub_1D4387AA4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1D430C648();
  sub_1D4376FD4(v1);
  sub_1D42E3F50();
  sub_1D438C1CC();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1D4387AEC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  sub_1D42E3D3C(v1, (uint64_t)sub_1D4387B28);
  return sub_1D438C128();
}

uint64_t sub_1D4387B28(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 24) = a1;
  sub_1D42E3CC4();
  if (v1)
    return sub_1D42B8DC0(*(uint64_t (**)(void))(v3 + 8));
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4387B84()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  char *v5;

  v0[4] = *(_QWORD *)(v0[3] + 24);
  v5 = (char *)&dword_1EFE4E180 + dword_1EFE4E180;
  sub_1D42BE934();
  v1 = (_QWORD *)sub_1D42E3CAC();
  v0[5] = v1;
  v2 = (uint64_t (*)(void))sub_1D438C448(v1, (uint64_t)sub_1D4387BE0, v4, (uint64_t)v5);
  return sub_1D430C35C(v2);
}

uint64_t sub_1D4387BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1D42E3EE0();
  sub_1D42E3E84(v4);
  v3[6] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    v3[7] = v0;
    v3[8] = v2;
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D4387C44()
{
  uint64_t v0;

  swift_release();
  return sub_1D438C470(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 56), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4387C74()
{
  uint64_t v0;

  swift_release();
  sub_1D42B8F48();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4387CA4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  sub_1D42E3D3C(v1, (uint64_t)sub_1D4387CE0);
  return sub_1D438C128();
}

uint64_t sub_1D4387CE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 24) = a1;
  sub_1D42E3CC4();
  if (v1)
    return sub_1D42B8DC0(*(uint64_t (**)(void))(v3 + 8));
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4387D3C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  char *v5;

  v0[4] = *(_QWORD *)(v0[3] + 24);
  v5 = (char *)&dword_1EFE4E1A8 + dword_1EFE4E1A8;
  sub_1D42BE934();
  v1 = (_QWORD *)sub_1D42E3CAC();
  v0[5] = v1;
  v2 = (uint64_t (*)(void))sub_1D438C448(v1, (uint64_t)sub_1D4387D98, v4, (uint64_t)v5);
  return sub_1D430C35C(v2);
}

uint64_t sub_1D4387D98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  sub_1D438C1B0();
  sub_1D438C21C();
  sub_1D42E3E84(v6);
  v5[6] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    v5[7] = v3;
    v5[8] = v2;
    v5[9] = v0;
    v5[10] = v4;
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D4387E04()
{
  uint64_t v0;

  swift_release();
  return sub_1D438C458(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 56), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4387E38(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 64) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 72) = v2;
  sub_1D42E3D3C(v2, (uint64_t)sub_1D4387E78);
  return sub_1D438C128();
}

uint64_t sub_1D4387E78(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 80) = a1;
  sub_1D42E3CC4();
  if (v1)
    return sub_1D42B8DC0(*(uint64_t (**)(void))(v3 + 8));
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4387ED4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1D438C670();
  sub_1D438C400();
  v1 = (_QWORD *)sub_1D438C5D0();
  *(_QWORD *)(v0 + 96) = v1;
  v2 = sub_1D438C564(v1);
  return sub_1D42E3A3C(v2, v3);
}

uint64_t sub_1D4387F1C()
{
  uint64_t v0;

  sub_1D438C390();
  if (!v0)
    swift_release();
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D4387F64()
{
  uint64_t v0;
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  uint64_t (*v4)(void);

  v1 = *(_OWORD **)(v0 + 64);
  swift_release();
  v2 = *(_OWORD *)(v0 + 16);
  v3 = *(_OWORD *)(v0 + 48);
  v1[1] = *(_OWORD *)(v0 + 32);
  v1[2] = v3;
  *v1 = v2;
  v4 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42B8DC0(v4);
}

uint64_t sub_1D4387FA0()
{
  uint64_t v0;

  swift_release();
  sub_1D42B8F48();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4387FD0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 64) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 72) = v2;
  sub_1D42E3D3C(v2, (uint64_t)sub_1D4388010);
  return sub_1D438C128();
}

uint64_t sub_1D4388010(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 80) = a1;
  sub_1D42E3CC4();
  if (v1)
    return sub_1D42B8DC0(*(uint64_t (**)(void))(v3 + 8));
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D438806C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1D438C670();
  sub_1D438C400();
  v1 = (_QWORD *)sub_1D438C5D0();
  *(_QWORD *)(v0 + 96) = v1;
  v2 = sub_1D438C564(v1);
  return sub_1D42E3A3C(v2, v3);
}

uint64_t sub_1D43880B4()
{
  uint64_t v0;

  sub_1D438C390();
  if (!v0)
    swift_release();
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D43880FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v8 = sub_1D42B28FC((uint64_t *)&unk_1EFE4E150);
  MEMORY[0x1E0C80A78](v8);
  sub_1D434799C();
  v9 = type metadata accessor for CombinePublisherFromXPCAdapter();
  sub_1D42B6F40();
  sub_1D42E3CA4();
  swift_retain();
  sub_1D4309FA4(a3, a4, a1, a2);
  v10 = sub_1D438B13C();
  MEMORY[0x1D825BCEC](v9, v10);
  swift_release();
  sub_1D42F1168((unint64_t *)&qword_1EFE4B0E8, (uint64_t *)&unk_1EFE4E150, MEMORY[0x1E0C96010]);
  return sub_1D451B7F0();
}

uint64_t sub_1D4388220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v8 = sub_1D42B28FC((uint64_t *)&unk_1EFE4E150);
  MEMORY[0x1E0C80A78](v8);
  v9 = type metadata accessor for CombinePublisherFromXPCAdapter();
  swift_allocObject();
  swift_retain();
  swift_retain();
  sub_1D4309FA4(a3, a4, a1, a2);
  v10 = sub_1D438B13C();
  MEMORY[0x1D825BCEC](v9, v10);
  swift_release();
  sub_1D438B75C();
  sub_1D42F1168((unint64_t *)&qword_1EFE4B0E8, (uint64_t *)&unk_1EFE4E150, MEMORY[0x1E0C96010]);
  return sub_1D451B7F0();
}

uint64_t sub_1D4388368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D43880FC(a1, a2, a3, a4);
}

uint64_t sub_1D438837C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D43880FC(a1, a2, a3, a4);
}

uint64_t sub_1D4388390(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EFE4E2D8 + dword_1EFE4E2D8);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D438BE64;
  return v7(a1, a2);
}

uint64_t sub_1D4388400(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EFE4E268 + dword_1EFE4E268);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D438BE64;
  return v7(a1, a2);
}

uint64_t sub_1D4388470(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EFE4E230 + dword_1EFE4E230);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D438BE64;
  return v7(a1, a2);
}

uint64_t sub_1D43884E0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EFE4E3F0 + dword_1EFE4E3F0);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D4388540;
  return v5(a1);
}

uint64_t sub_1D4388540(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v7 = *v2;
  v4 = *v2;
  v5 = sub_1D430C44C(&v7);
  if (!v1)
    v5 = a1;
  return sub_1D438C3F4(v5, *(uint64_t (**)(void))(v4 + 8));
}

uint64_t sub_1D4388588(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EFE4E178 + dword_1EFE4E178);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D438BE64;
  return v7(a1, a2);
}

uint64_t sub_1D43885F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EFE4E2A0 + dword_1EFE4E2A0);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D438BE64;
  return v7(a1, a2);
}

uint64_t sub_1D4388668(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EFE4E310 + dword_1EFE4E310);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D438BE64;
  return v7(a1, a2);
}

uint64_t sub_1D43886D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EFE4E1F8 + dword_1EFE4E1F8);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D438BE64;
  return v7(a1, a2);
}

uint64_t sub_1D4388748(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EFE4E388 + dword_1EFE4E388);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D438BE64;
  return v7(a1, a2);
}

uint64_t sub_1D43887B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EFE4E370 + dword_1EFE4E370);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D4388828;
  return v7(a1, a2);
}

uint64_t sub_1D4388828()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v3 = *v0;
  v1 = *v0;
  sub_1D430C44C(&v3);
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1D4388864()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = v0;
  return sub_1D42E39F0();
}

uint64_t sub_1D4388874()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1D42E39FC();
  sub_1D438C040();
  v1 = (_QWORD *)sub_1D430C554();
  sub_1D438C0F4(v1);
  v2 = (_QWORD *)sub_1D42E3968();
  *(_QWORD *)(v0 + 80) = v2;
  v3 = sub_1D430C39C(v2, (uint64_t)sub_1D43888CC);
  return sub_1D430C268(v3, v4);
}

uint64_t sub_1D43888CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D438C134();
  if (!v1)
  {
    *(_QWORD *)(v3 + 96) = v0;
    *(_QWORD *)(v3 + 104) = v2;
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D4388918()
{
  uint64_t v0;

  sub_1D430C648();
  sub_1D430C658();
  return sub_1D438C470(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 96), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D438894C()
{
  uint64_t v0;

  sub_1D430C648();
  sub_1D430C658();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D438897C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = v0;
  return swift_task_switch();
}

uint64_t sub_1D4388994()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1D42E39FC();
  sub_1D438C040();
  v1 = (_QWORD *)sub_1D430C554();
  sub_1D438C0F4(v1);
  sub_1D42BE934();
  v2 = (_QWORD *)sub_1D42E3CAC();
  *(_QWORD *)(v0 + 80) = v2;
  v3 = sub_1D438C5B4(v2, (uint64_t)sub_1D4388A00);
  return sub_1D4309A3C(v3);
}

uint64_t sub_1D4388A00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D438C134();
  if (!v1)
  {
    *(_QWORD *)(v3 + 96) = v0;
    *(_QWORD *)(v3 + 104) = v2;
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D4388A4C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = v0;
  return sub_1D42E39F0();
}

uint64_t sub_1D4388A5C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1D42E39FC();
  sub_1D438C040();
  v1 = (_QWORD *)sub_1D430C554();
  sub_1D438C0F4(v1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v2;
  v3 = sub_1D438C5B4(v2, (uint64_t)sub_1D4388AC4);
  return sub_1D4485D60(v3);
}

uint64_t sub_1D4388AC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  sub_1D438C1B0();
  sub_1D438C21C();
  sub_1D42E3E84(v6);
  v5[11] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v5[12] = v3;
    v5[13] = v2;
    v5[14] = v0;
    v5[15] = v4;
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D4388B28()
{
  uint64_t v0;

  sub_1D430C648();
  sub_1D430C658();
  return sub_1D438C458(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 96), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4388B60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = v1;
  return swift_task_switch();
}

uint64_t sub_1D4388B78()
{
  uint64_t v0;
  _QWORD *inited;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_1D438C1B0();
  sub_1D438C040();
  inited = (_QWORD *)swift_initStackObject();
  sub_1D438C2AC(inited);
  sub_1D42E3CA4();
  v2 = (_QWORD *)sub_1D438C5D0();
  *(_QWORD *)(v0 + 136) = v2;
  v3 = sub_1D438C620(v2);
  return sub_1D44545B8(v3, v4);
}

uint64_t sub_1D4388BF0()
{
  sub_1D438C350();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4388C2C()
{
  uint64_t v0;
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  uint64_t (*v4)(void);

  v1 = *(_OWORD **)(v0 + 112);
  sub_1D430C648();
  sub_1D430C658();
  v2 = *(_OWORD *)(v0 + 16);
  v3 = *(_OWORD *)(v0 + 48);
  v1[1] = *(_OWORD *)(v0 + 32);
  v1[2] = v3;
  *v1 = v2;
  v4 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42B8ED4(v4);
}

uint64_t sub_1D4388C70()
{
  uint64_t v0;

  sub_1D430C648();
  sub_1D430C658();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4388CA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = v1;
  return swift_task_switch();
}

uint64_t sub_1D4388CB8()
{
  uint64_t v0;
  _QWORD *inited;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_1D438C1B0();
  sub_1D438C040();
  inited = (_QWORD *)swift_initStackObject();
  sub_1D438C2AC(inited);
  sub_1D42E3CA4();
  v2 = (_QWORD *)sub_1D438C5D0();
  *(_QWORD *)(v0 + 136) = v2;
  v3 = sub_1D438C620(v2);
  return sub_1D43FF71C(v3, v4);
}

uint64_t sub_1D4388D30()
{
  sub_1D438C350();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4388D6C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = v0;
  return sub_1D42E39F0();
}

uint64_t sub_1D4388D7C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1D42E39FC();
  sub_1D438C040();
  v1 = (_QWORD *)sub_1D430C554();
  sub_1D438C0F4(v1);
  v2 = (_QWORD *)sub_1D42E3968();
  *(_QWORD *)(v0 + 80) = v2;
  v3 = sub_1D430C39C(v2, (uint64_t)sub_1D4388A00);
  return sub_1D430C268(v3, v4);
}

uint64_t sub_1D4388DD4()
{
  swift_bridgeObjectRetain();
  sub_1D438C720();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4388E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return _s13SoundAnalysis17_SNClassificationC20supportsSecureCodingSbvgZ_0();
  else
    return sub_1D451B820();
}

uint64_t sub_1D4388E2C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x656372756F736572 && a2 == 0xEC00000068746150)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1D451B820();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1D4388EC8()
{
  return 0x656372756F736572;
}

void sub_1D4388EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_1D42BE910();
  v4 = v3;
  sub_1D42B28FC((uint64_t *)&unk_1EFE4E350);
  sub_1D438C72C();
  MEMORY[0x1E0C80A78](v5);
  sub_1D434799C();
  sub_1D42B5528(v4, v4[3]);
  sub_1D438B570();
  sub_1D451BA24();
  sub_1D451B724();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  sub_1D42BE844();
}

void sub_1D4388FA0()
{
  sub_1D42BE9A8();
  swift_bridgeObjectRetain();
  sub_1D438C720();
  swift_bridgeObjectRelease();
  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t sub_1D4388FE0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = sub_1D42B28FC(&qword_1EFE4E340);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1D42CB210();
  v7 = v6 - v5;
  v8 = (uint64_t)sub_1D42B5528(a1, a1[3]);
  sub_1D438B570();
  sub_1D451BA0C();
  if (!v1)
  {
    v8 = sub_1D451B64C();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  sub_1D42BE944();
  return v8;
}

uint64_t sub_1D43890DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  v12 = *(_OWORD *)(v0 + 32);
  LODWORD(v11) = *(unsigned __int8 *)(v0 + 69);
  HIDWORD(v11) = *(unsigned __int8 *)(v0 + 68);
  v10 = *(_QWORD *)(v0 + 72);
  sub_1D42DCE84();
  sub_1D451A74C();
  v1 = sub_1D42CB208();
  sub_1D438C6A4(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11, v12);
  sub_1D438C690();
  return AudioConfiguration.hash(into:)();
}

uint64_t sub_1D43891A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  BOOL v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  char v39;
  char v40;
  char v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  char v55;
  __int128 v56;
  _QWORD v57[4];
  __int128 v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  uint64_t v65;
  char v66;
  _QWORD v67[4];
  __int128 v68;
  char v69;
  char v70;
  char v71;
  char v72;
  char v73;
  char v74;
  uint64_t v75;
  char v76;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_OWORD *)(a1 + 48);
  v7 = *(_BYTE *)(a1 + 64);
  v8 = *(_BYTE *)(a1 + 65);
  v9 = *(_BYTE *)(a1 + 66);
  v10 = *(_BYTE *)(a1 + 67);
  v11 = *(_BYTE *)(a1 + 68);
  v12 = *(_BYTE *)(a1 + 69);
  v13 = *(_QWORD *)(a1 + 72);
  v14 = *(_BYTE *)(a1 + 80);
  v15 = *(_QWORD *)(a2 + 16);
  v16 = *(_QWORD *)(a2 + 24);
  v17 = *(_QWORD *)(a2 + 32);
  v18 = *(_QWORD *)(a2 + 40);
  v19 = *(_OWORD *)(a2 + 48);
  v20 = *(_BYTE *)(a2 + 64);
  v21 = *(_BYTE *)(a2 + 65);
  v22 = *(_BYTE *)(a2 + 66);
  v23 = *(_BYTE *)(a2 + 67);
  v24 = *(_BYTE *)(a2 + 68);
  v25 = *(_BYTE *)(a2 + 69);
  v26 = *(_QWORD *)(a2 + 72);
  v27 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  v28 = *(_BYTE *)(a2 + 80);
  if (v27)
    goto LABEL_6;
  v55 = *(_BYTE *)(a1 + 68);
  v56 = *(_OWORD *)(a1 + 48);
  v50 = *(_QWORD *)(a2 + 32);
  v51 = *(_QWORD *)(a2 + 24);
  v29 = *(_QWORD *)(a1 + 16);
  v54 = *(_QWORD *)(a1 + 24);
  v47 = *(_BYTE *)(a2 + 65);
  v48 = *(_BYTE *)(a2 + 64);
  v30 = *(_QWORD *)(a1 + 32);
  v52 = *(_QWORD *)(a1 + 40);
  v46 = *(_BYTE *)(a2 + 66);
  v31 = *(_BYTE *)(a1 + 64);
  v42 = *(_BYTE *)(a1 + 65);
  v44 = *(_BYTE *)(a2 + 69);
  v45 = *(_BYTE *)(a2 + 68);
  v32 = *(_BYTE *)(a1 + 66);
  v33 = *(_BYTE *)(a1 + 67);
  v34 = *(_BYTE *)(a1 + 69);
  v43 = *(_QWORD *)(a2 + 72);
  v35 = *(_QWORD *)(a1 + 72);
  v49 = *(_QWORD *)(a2 + 40);
  v36 = *(_BYTE *)(a1 + 80);
  v53 = *(_OWORD *)(a2 + 48);
  v37 = *(_QWORD *)(a2 + 16);
  v38 = sub_1D451B820();
  v15 = v37;
  v19 = v53;
  v14 = v36;
  v13 = v35;
  v26 = v43;
  v12 = v34;
  v16 = v51;
  v5 = v52;
  v11 = v55;
  v10 = v33;
  v9 = v32;
  v25 = v44;
  v24 = v45;
  v8 = v42;
  v7 = v31;
  v22 = v46;
  v21 = v47;
  v4 = v30;
  v20 = v48;
  v3 = v54;
  v2 = v29;
  v18 = v49;
  v17 = v50;
  v6 = v56;
  v39 = v38;
  v40 = 0;
  if ((v39 & 1) != 0)
  {
LABEL_6:
    v67[0] = v2;
    v67[1] = v3;
    v67[2] = v4;
    v67[3] = v5;
    v68 = v6;
    v69 = v7;
    v70 = v8;
    v71 = v9;
    v72 = v10;
    v73 = v11;
    v74 = v12;
    v75 = v13;
    v76 = v14;
    v57[0] = v15;
    v57[1] = v16;
    v57[2] = v17;
    v57[3] = v18;
    v58 = v19;
    v59 = v20;
    v60 = v21;
    v61 = v22;
    v62 = v23;
    v63 = v24;
    v64 = v25;
    v65 = v26;
    v66 = v28;
    v40 = static AudioConfiguration.== infix(_:_:)((uint64_t)v67, (uint64_t)v57);
  }
  return v40 & 1;
}

void sub_1D438938C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1D42BE910();
  v2 = v1;
  v3 = sub_1D42B28FC(&qword_1EFE4E440);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1D42CB210();
  v7 = v6 - v5;
  sub_1D42B5528(v2, v2[3]);
  sub_1D438BC84();
  sub_1D451BA24();
  sub_1D42B5E70();
  sub_1D438C60C();
  sub_1D451B760();
  if (!v0)
  {
    sub_1D42B5ACC();
    sub_1D438C60C();
    sub_1D451B760();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  sub_1D42BE844();
}

uint64_t sub_1D4389550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  v12 = *(_OWORD *)(v0 + 32);
  HIDWORD(v11) = *(unsigned __int8 *)(v0 + 69);
  v10 = *(_QWORD *)(v0 + 72);
  sub_1D451B958();
  swift_bridgeObjectRetain();
  sub_1D438C740();
  v1 = swift_bridgeObjectRelease();
  sub_1D438C6A4(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11, v12);
  sub_1D438C690();
  AudioConfiguration.hash(into:)();
  return sub_1D451B994();
}

void sub_1D4389628()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  char v20;

  sub_1D42BE910();
  v2 = v1;
  v4 = v3;
  sub_1D42B28FC((uint64_t *)&unk_1EFE4E450);
  sub_1D438C72C();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42CB210();
  sub_1D42B5528(v2, v2[3]);
  sub_1D438BC84();
  sub_1D451BA0C();
  if (v0)
  {
    sub_1D42BE944();
  }
  else
  {
    sub_1D42B5EAC();
    sub_1D438C6D0();
    sub_1D438C6C4();
    v6 = sub_1D42B5B80();
    sub_1D438C74C();
    sub_1D438C6D0();
    sub_1D438C6C4();
    sub_1D42CB220();
    if (v6)
    {
      sub_1D42D3258();
      sub_1D42BE944();
    }
    else
    {
      *(_QWORD *)v4 = v7;
      *(_QWORD *)(v4 + 8) = v8;
      *(_QWORD *)(v4 + 16) = v7;
      *(_QWORD *)(v4 + 24) = v8;
      *(_QWORD *)(v4 + 32) = v9;
      *(_QWORD *)(v4 + 40) = v10;
      *(_QWORD *)(v4 + 48) = v11;
      *(_QWORD *)(v4 + 56) = v12;
      *(_BYTE *)(v4 + 64) = v13;
      *(_BYTE *)(v4 + 65) = v14;
      *(_BYTE *)(v4 + 66) = v15;
      *(_BYTE *)(v4 + 67) = v16;
      *(_BYTE *)(v4 + 68) = v17;
      *(_BYTE *)(v4 + 69) = v18;
      *(_QWORD *)(v4 + 72) = v19;
      *(_BYTE *)(v4 + 80) = v20;
      sub_1D42CB6CC();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D42BE944();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1D42D3258();
  }
  sub_1D42BE844();
}

uint64_t sub_1D43897D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D4388E2C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D43897F8()
{
  sub_1D438B570();
  return sub_1D451BA3C();
}

uint64_t sub_1D4389820()
{
  sub_1D438B570();
  return sub_1D451BA48();
}

void sub_1D4389848()
{
  sub_1D4388FA0();
}

uint64_t sub_1D4389850()
{
  return sub_1D4388DD4();
}

uint64_t sub_1D4389858()
{
  sub_1D451B958();
  swift_bridgeObjectRetain();
  sub_1D451A74C();
  swift_bridgeObjectRelease();
  return sub_1D451B994();
}

uint64_t sub_1D43898AC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_1D4388FE0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

void sub_1D43898D4()
{
  sub_1D4388EE8();
}

uint64_t sub_1D43898EC(uint64_t *a1, uint64_t *a2)
{
  return sub_1D4388E14(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_1D4389900()
{
  sub_1D438BC84();
  return sub_1D451BA3C();
}

uint64_t sub_1D4389928()
{
  sub_1D438BC84();
  return sub_1D451BA48();
}

uint64_t sub_1D4389958()
{
  sub_1D451B958();
  swift_bridgeObjectRetain();
  sub_1D451A74C();
  swift_bridgeObjectRelease();
  AudioConfiguration.hash(into:)();
  return sub_1D451B994();
}

void sub_1D4389A4C()
{
  sub_1D4389628();
}

void sub_1D4389A60()
{
  sub_1D438938C();
}

id sub_1D4389A78@<X0>(_QWORD *a1@<X8>)
{
  id result;

  type metadata accessor for SNDirectionOfArrivalResult();
  sub_1D42CB6CC();
  result = sub_1D432B570();
  *a1 = result;
  return result;
}

uint64_t sub_1D4389B10(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  sub_1D42E3D3C(v2, (uint64_t)sub_1D4389B50);
  return sub_1D438C128();
}

uint64_t sub_1D4389B50(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  _QWORD *v6;
  uint64_t (*v7)(void);
  uint64_t v8;
  _QWORD *v9;

  v9 = (_QWORD *)*v2;
  v4 = v9;
  sub_1D42E3E84(&v9);
  v4[4] = a1;
  v4[5] = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42F1DEC();
  }
  else
  {
    v6 = (_QWORD *)sub_1D42E3968();
    v4[6] = v6;
    v7 = (uint64_t (*)(void))sub_1D438C048(v6, (uint64_t)sub_1D4389BC8, v8);
    return sub_1D430C35C(v7);
  }
}

uint64_t sub_1D4389BC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_1D430C4B8();
  sub_1D42E3E84(v3);
  *(_QWORD *)(v2 + 56) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 64) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D4389C1C()
{
  uint64_t v0;

  sub_1D42F1FB4();
  sub_1D42B8F48();
  return sub_1D438C464(*(_QWORD *)(v0 + 64), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4389C50(uint64_t a1, uint64_t a2)
{
  _QWORD v4[5];

  sub_1D447DAC4();
  v4[3] = sub_1D42B28FC(&qword_1EFE4E100);
  v4[4] = sub_1D438B0D8();
  v4[0] = a2;
  swift_retain();
  sub_1D447DAE0(v4);
  swift_release();
  return sub_1D42B5400((uint64_t)v4);
}

uint64_t sub_1D4389CD4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  swift_retain();
  v1 = (_QWORD *)sub_1D42E3CAC();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D438C5B4(v1, (uint64_t)sub_1D4388540);
  return sub_1D4389B10(v2);
}

uint64_t sub_1D4389D1C(uint64_t a1)
{
  uint64_t *v1;

  return sub_1D4389C50(a1, *v1);
}

uint64_t sub_1D4389D34(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1D4389D84;
  return sub_1D4389CD4();
}

uint64_t sub_1D4389D84(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v6;

  v4 = *v2;
  v6 = *v2;
  sub_1D42B8F34(&v6);
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return sub_1D430C35C((uint64_t (*)(void))v2[1]);
}

_QWORD *sub_1D4389E10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl);
  v1 = *(_QWORD *)(v0 + OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl + 8);
  type metadata accessor for SNDirectionOfArrivalEstimator();
  v3 = (_QWORD *)sub_1D438C4E4();
  v3[2] = 0;
  v3[3] = v2;
  v3[4] = v1;
  sub_1D42CB6CC();
  return v3;
}

uint64_t sub_1D4389E70()
{
  void *v0;
  uint64_t v1;
  objc_class *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  void *v14;
  id v15;
  char *v16;
  uint64_t *v17;
  id v18;
  uint64_t v19;
  objc_super v20;

  v2 = (objc_class *)sub_1D42B7104();
  v3 = sub_1D42B28FC(qword_1EFE47450);
  MEMORY[0x1E0C80A78](v3);
  sub_1D434799C();
  v4 = v0;
  MGGetProductType();
  if (qword_1EFE56B70 == -1)
  {

    sub_1D4380C64();
    v14 = (void *)sub_1D451A6C8();
    swift_bridgeObjectRelease();
    v15 = objc_msgSend(v4, sel_initWithTuningPrefix_, v14);

    return (uint64_t)v15;
  }
  else
  {
    type metadata accessor for SNFileUtils();
    sub_1D438C504();
    sub_1D44D2CD0(v1);
    v5 = sub_1D4519BC4();
    result = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v1, 1, v5);
    if ((_DWORD)result == 1)
    {
      __break(1u);
    }
    else
    {
      v7 = sub_1D4519B94();
      v9 = v8;
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v1, v5);
      if (qword_1EFE40338 != -1)
        swift_once();
      v10 = sub_1D451A014();
      sub_1D42CC880(v10, (uint64_t)qword_1EFEA7700);
      swift_bridgeObjectRetain_n();
      v11 = sub_1D4519FFC();
      v12 = sub_1D451AF74();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc();
        v19 = swift_slowAlloc();
        *(_DWORD *)v13 = 136315138;
        swift_bridgeObjectRetain();
        sub_1D43D72EC(v7, v9, &v19);
        sub_1D451B1A8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1D42A7000, v11, v12, "Attempting to load Direction of Arrival tunings from %s", v13, 0xCu);
        swift_arrayDestroy();
        sub_1D42CC934();
      }

      swift_bridgeObjectRelease_n();
      v16 = (char *)objc_allocWithZone(v2);
      v17 = (uint64_t *)&v16[OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl];
      *v17 = v7;
      v17[1] = v9;
      v20.receiver = v16;
      v20.super_class = v2;
      v18 = objc_msgSendSuper2(&v20, sel_init);
      swift_deallocPartialClassInstance();
      return (uint64_t)v18;
    }
  }
  return result;
}

void sub_1D438A180(uint64_t a1, unint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  objc_class *v8;
  id v9;
  char *v10;
  char *v11;
  objc_super v12;

  v5 = v2;
  v8 = (objc_class *)sub_1D42B7104();
  v9 = v5;
  sub_1D4380CF4(a1, a2);
  sub_1D438C708();
  sub_1D42CB208();
  v10 = (char *)objc_allocWithZone(v8);
  v11 = &v10[OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl];
  *(_QWORD *)v11 = v3;
  *((_QWORD *)v11 + 1) = v4;
  v12.receiver = v10;
  v12.super_class = v8;
  objc_msgSendSuper2(&v12, sel_init);
  sub_1D438C504();
  sub_1D438C298();
  sub_1D42CB6B8();
}

id SNEstimateDirectionOfArrivalRequest.copy(with:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  id result;
  objc_super v9;

  v3 = (objc_class *)sub_1D42B7104();
  v5 = *(_QWORD *)(v1 + OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl + 8);
  v6 = (char *)objc_allocWithZone(v3);
  v7 = &v6[OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl];
  *(_QWORD *)v7 = v5;
  *((_QWORD *)v7 + 1) = v4;
  v9.receiver = v6;
  v9.super_class = v3;
  sub_1D42CB6CC();
  result = objc_msgSendSuper2(&v9, sel_init);
  a1[3] = v3;
  *a1 = result;
  return result;
}

uint64_t SNEstimateDirectionOfArrivalRequest.hash.getter()
{
  uint64_t v0;

  sub_1D42BE9A8();
  swift_bridgeObjectRetain();
  sub_1D438C740();
  v0 = sub_1D42CB230();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SNEstimateDirectionOfArrivalRequest.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  char v4;
  char *v6;
  _BYTE v7[32];
  _OWORD v8[2];
  __int128 v9;
  uint64_t v10;

  sub_1D42B7104();
  sub_1D42B28B4(a1, (uint64_t)&v9);
  if (v10)
  {
    sub_1D42B293C(&v9, v8);
    sub_1D42B294C((uint64_t)v8, (uint64_t)v7);
    if (swift_dynamicCast())
    {
      if (*(_QWORD *)(v1 + OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl) == *(_QWORD *)&v6[OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl]
        && *(_QWORD *)(v1 + OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl + 8) == *(_QWORD *)&v6[OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl + 8])
      {

        v4 = 1;
      }
      else
      {
        v4 = sub_1D451B820();

      }
    }
    else
    {
      v4 = 0;
    }
    sub_1D42B5400((uint64_t)v8);
  }
  else
  {
    v4 = 0;
  }
  return v4 & 1;
}

void SNEstimateDirectionOfArrivalRequest.__allocating_init(coder:)()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  SNEstimateDirectionOfArrivalRequest.init(coder:)();
  sub_1D42B6E24();
}

void SNEstimateDirectionOfArrivalRequest.init(coder:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  objc_class *v3;
  id v4;
  char *v5;
  char *v6;
  objc_super v7;

  v3 = (objc_class *)sub_1D438C504();
  v4 = v0;
  sub_1D42B1974();
  sub_1D438C708();
  v5 = (char *)objc_allocWithZone(v3);
  v6 = &v5[OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl];
  *(_QWORD *)v6 = v1;
  *((_QWORD *)v6 + 1) = v2;
  v7.receiver = v5;
  v7.super_class = v3;
  objc_msgSendSuper2(&v7, sel_init);

  swift_getObjectType();
  sub_1D438C298();
  sub_1D42CB6B8();
}

Swift::Void __swiftcall SNEstimateDirectionOfArrivalRequest.encode(with:)(NSCoder with)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl;
  v5 = *(_QWORD *)(v1 + OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl);
  v4 = *(_QWORD *)(v3 + 8);
  swift_bridgeObjectRetain();
  sub_1D42AFCA4(v5, v4, 1819307369, 0xE400000000000000, with.super.isa);
  swift_bridgeObjectRelease();
}

uint64_t sub_1D438A718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  const void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void (*v11)(_QWORD *__return_ptr, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  char v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v33[12];
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  const void *v43;
  uint64_t v44;
  _QWORD v45[9];
  uint64_t v46;
  _QWORD v47[4];
  char v48[40];
  uint64_t v49;
  _BYTE v50[16];
  _QWORD v51[6];
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  sub_1D42BE910();
  v61 = v2;
  v62 = v3;
  v60 = v1;
  v43 = v4;
  v5 = sub_1D42B28FC((uint64_t *)&unk_1EFE4E3A0);
  v41 = *(_QWORD *)(v5 - 8);
  v42 = v5;
  MEMORY[0x1E0C80A78](v5);
  sub_1D42CB210();
  v40 = v7 - v6;
  v8 = *(_QWORD *)(v0 + OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl + 8);
  v44 = *(_QWORD *)(v0 + OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl);
  sub_1D438C74C();
  v9 = MGGetProductType();
  sub_1D4380880(v9, &v46);
  sub_1D438B730((uint64_t)&v46, (uint64_t)v48, &qword_1EFE506B0);
  if (v49)
  {
    v10 = v48[0];
    sub_1D42F11A4(&v46);
    sub_1D4380388(v10);
    v11 = (void (*)(_QWORD *__return_ptr, uint64_t))v47[2];
    sub_1D438B730((uint64_t)v47, (uint64_t)v50, &qword_1EFE4A7A0);
    v12 = sub_1D42F1244((uint64_t)v50);
    v11(v45, v12);
    swift_release();
    v13 = v45[0];
    v14 = v45[1];
    v15 = v45[2];
    v16 = v45[3];
    v17 = v45[4];
    v18 = v45[5];
    v19 = v45[6];
    v20 = BYTE1(v45[6]);
    v21 = BYTE2(v45[6]);
    v22 = BYTE3(v45[6]);
    v23 = BYTE4(v45[6]);
    v24 = BYTE5(v45[6]);
    v25 = v45[7];
    v26 = v45[8];
  }
  else
  {
    if (qword_1EFE48EF0 != -1)
      swift_once();
    v14 = *(_QWORD *)algn_1EFEA7998;
    v16 = qword_1EFEA79A8;
    v38 = qword_1EFEA79A0;
    v39 = qword_1EFEA7990;
    v18 = qword_1EFEA79B8;
    v37 = qword_1EFEA79B0;
    v35 = byte_1EFEA79C1;
    v36 = byte_1EFEA79C0;
    v34 = byte_1EFEA79C2;
    v22 = byte_1EFEA79C3;
    v23 = byte_1EFEA79C4;
    v24 = byte_1EFEA79C5;
    v25 = qword_1EFEA79C8;
    v26 = byte_1EFEA79D0;
    swift_bridgeObjectRetain();
    sub_1D42CB6CC();
    swift_bridgeObjectRetain();
    v21 = v34;
    v20 = v35;
    v19 = v36;
    v17 = v37;
    v15 = v38;
    v13 = v39;
  }
  v51[0] = v13;
  v51[1] = v14;
  v51[2] = v15;
  v51[3] = v16;
  v51[4] = v17;
  v51[5] = v18;
  v52 = v19;
  v53 = v20;
  v54 = v21;
  v55 = v22;
  v56 = v23;
  v57 = v24;
  v58 = v25;
  v59 = v26;
  v27 = memcpy(v45, v43, sizeof(v45));
  MEMORY[0x1E0C80A78](v27);
  *(_QWORD *)&v33[-16] = v45;
  *(_QWORD *)&v33[-8] = v51;
  sub_1D438C74C();
  v28 = v60;
  v29 = sub_1D42FB018((void (*)(_QWORD, uint64_t))sub_1D438B718, (uint64_t)&v33[-32], v44, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D42D3258();
  swift_bridgeObjectRelease();
  if (!v28)
  {
    v45[0] = v29;
    swift_retain();
    sub_1D42B28FC(&qword_1EFE4E100);
    sub_1D42B28FC(&qword_1EFE4C690);
    sub_1D42F1168((unint64_t *)&unk_1EFE4FD30, &qword_1EFE4E100, MEMORY[0x1E0C95D90]);
    v30 = v40;
    sub_1D451A308();
    swift_release();
    sub_1D42F1168((unint64_t *)&unk_1EFE4E3B0, (uint64_t *)&unk_1EFE4E3A0, MEMORY[0x1E0C95950]);
    v31 = v42;
    v14 = sub_1D451A2E4();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v30, v31);
  }
  return v14;
}

uint64_t sub_1D438AA68()
{
  type metadata accessor for SNDirectionOfArrivalEstimator();
  return sub_1D438AAA8();
}

uint64_t sub_1D438AAA8()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;

  sub_1D42B28FC((uint64_t *)&unk_1EFE403F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D4526260;
  *(_QWORD *)(inited + 32) = sub_1D42F3A34();
  *(_QWORD *)(inited + 40) = sub_1D42F3A34();
  *(_QWORD *)(inited + 48) = sub_1D42F3A34();
  sub_1D448D2D0(inited);
  v2 = v1;
  swift_setDeallocating();
  sub_1D43476B8();
  v3 = objc_allocWithZone((Class)type metadata accessor for SNDSPConfiguration());
  sub_1D42DCE84();
  v4 = sub_1D43A1230(v2);
  v5 = type metadata accessor for SNDSPGraphLoader();
  sub_1D439F93C((uint64_t)v4);
  if (v6)
  {
    v5 = v6;
    sub_1D44F3DE8(v6);
    sub_1D44F44A0(v5);
  }
  else
  {
    sub_1D42B7F2C();
    sub_1D42B6D0C();
    *v7 = 0;
    swift_willThrow();
  }

  return v5;
}

id SNEstimateDirectionOfArrivalRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1D42B7104();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D438AC38()
{
  return sub_1D438A718();
}

_QWORD *sub_1D438AC4C()
{
  uint64_t v0;
  _QWORD *result;

  result = sub_1D4389E10();
  if (v0)
    return &off_1E97AB238;
  return result;
}

id sub_1D438AC74()
{
  uint64_t v0;
  id result;
  void *v2;
  void *v3;
  id v4;

  result = sub_1D438AE58();
  if (!v0)
  {
    v2 = result;
    v3 = (void *)sub_1D451A6C8();
    v4 = sub_1D44F590C(v2, v3);

    return v4;
  }
  return result;
}

void sub_1D438ACDC(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[8];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  sub_1D42FA868(a1, a2, (uint64_t)&v12);
  if (!v2)
  {
    v3 = v12;
    v4 = v13;
    v5 = v14;
    v6 = v15;
    v7 = v16;
    type metadata accessor for SNDirectionOfArrivalResult();
    v12 = v3;
    v13 = v4;
    v14 = v5;
    v15 = v6;
    v16 = v7;
    v8 = (char *)sub_1D432B570();
    SNDirectionOfArrivalResult.timeRange.getter((uint64_t)v17);
    sub_1D438C6B8();
    sub_1D451AEE4();
    sub_1D438C6B8();
    sub_1D451AEF0();
    v9 = v20;
    v10 = &v8[OBJC_IVAR___SNDirectionOfArrivalResult_impl];
    *(_QWORD *)v10 = v17[6];
    *((_QWORD *)v10 + 1) = v17[7];
    *((_OWORD *)v10 + 1) = v18;
    *((_QWORD *)v10 + 4) = v19;
    *((_QWORD *)v10 + 5) = v9;
    sub_1D42B28FC(&qword_1EFE40410);
    v11 = sub_1D438C4E4();
    *(_OWORD *)(v11 + 16) = xmmword_1D4525300;
    *(_QWORD *)(v11 + 32) = v8;
    v12 = v11;
    sub_1D451A950();
  }
}

id sub_1D438AE58()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  if (v1)
    return v1;
  sub_1D438B3BC();
  sub_1D42B6D0C();
  return (id)swift_willThrow();
}

void sub_1D438AEA8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;

  v2 = *v0;
  v4 = v0[3];
  v3 = v0[4];
  v5 = (_QWORD *)sub_1D438C4E4();
  v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  sub_1D42DCE84();
  v6 = sub_1D42CEEA4();
  swift_release();
  if (!v1)
  {
    v7 = (void *)v0[2];
    v0[2] = v6;

  }
}

uint64_t sub_1D438AF30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1D438AAA8();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_1D438AF58()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D438AF7C()
{
  sub_1D438AF58();
  return swift_deallocClassInstance();
}

void sub_1D438AF9C(void *a1, uint64_t a2)
{
  sub_1D438ACDC(a1, a2);
}

id sub_1D438AFB0()
{
  return sub_1D438AC74();
}

void sub_1D438AFC4()
{
  sub_1D438AEA8();
}

id sub_1D438AFD8()
{
  return sub_1D438AE58();
}

uint64_t type metadata accessor for SNEstimateDirectionOfArrivalRequest()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNEstimateDirectionOfArrivalRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for SNDirectionOfArrivalEstimator()
{
  return objc_opt_self();
}

void type metadata accessor for AnalyzerDirectionOfArrival()
{
  sub_1D42CB35C();
}

void type metadata accessor for AnalyzerDirectionOfArrival.AudioSourceAgnosticRequest()
{
  sub_1D42CB35C();
}

unint64_t sub_1D438B054()
{
  unint64_t result;

  result = qword_1EFE4E0E0;
  if (!qword_1EFE4E0E0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453240C, &unk_1E97A9C78);
    atomic_store(result, (unint64_t *)&qword_1EFE4E0E0);
  }
  return result;
}

unint64_t sub_1D438B090(uint64_t a1)
{
  unint64_t result;

  result = sub_1D42B6064();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1D438B0B4(uint64_t a1)
{
  unint64_t result;

  result = sub_1D42B5FE4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1D438B0D8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFE4E108;
  if (!qword_1EFE4E108)
  {
    v1 = sub_1D42B8B10(&qword_1EFE4E100);
    v2[0] = &off_1E97A2B30;
    v2[1] = &off_1E97A2B40;
    result = MEMORY[0x1D825E41C](&unk_1D45293A0, v1, v2);
    atomic_store(result, &qword_1EFE4E108);
  }
  return result;
}

unint64_t sub_1D438B13C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFE4B0F0;
  if (!qword_1EFE4B0F0)
  {
    v1 = type metadata accessor for CombinePublisherFromXPCAdapter();
    result = MEMORY[0x1D825E41C](&unk_1D452950C, v1);
    atomic_store(result, &qword_1EFE4B0F0);
  }
  return result;
}

uint64_t sub_1D438B17C(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  __int128 v4;
  _QWORD *v5;

  v4 = a2[1];
  *(_OWORD *)(v2 + 16) = *a2;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = a2[2];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 64) = v5;
  *v5 = v2;
  v5[1] = sub_1D438BE78;
  return sub_1D4388390(a1, v2 + 16);
}

uint64_t sub_1D438B1E4(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  __int128 v4;
  _QWORD *v5;

  v4 = a2[1];
  *(_OWORD *)(v2 + 16) = *a2;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = a2[2];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 64) = v5;
  *v5 = v2;
  v5[1] = sub_1D438BE78;
  return sub_1D4388400(a1, v2 + 16);
}

uint64_t sub_1D438B24C(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  __int128 v4;
  _QWORD *v5;

  v4 = a2[1];
  *(_OWORD *)(v2 + 16) = *a2;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = a2[2];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 64) = v5;
  *v5 = v2;
  v5[1] = sub_1D438BE78;
  return sub_1D4388470(a1, v2 + 16);
}

uint64_t sub_1D438B2B4(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;

  *(_QWORD *)(v2 + 64) = a1;
  v3 = a2[1];
  *(_OWORD *)(v2 + 16) = *a2;
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = a2[2];
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 72) = v4;
  *v4 = v2;
  v4[1] = sub_1D438B314;
  return sub_1D43884E0(v2 + 16);
}

uint64_t sub_1D438B314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  sub_1D430C4B8();
  sub_1D42B8F34(v4);
  if (!v1)
    **(_QWORD **)(v2 + 64) = v0;
  return sub_1D430C35C(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_1D438B354(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  __int128 v4;
  _QWORD *v5;

  v4 = a2[1];
  *(_OWORD *)(v2 + 16) = *a2;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = a2[2];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 64) = v5;
  *v5 = v2;
  v5[1] = sub_1D438BE78;
  return sub_1D4388588(a1, v2 + 16);
}

unint64_t sub_1D438B3BC()
{
  unint64_t result;

  result = qword_1EFE4E1B8;
  if (!qword_1EFE4E1B8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45327F0, &unk_1E97AB098);
    atomic_store(result, (unint64_t *)&qword_1EFE4E1B8);
  }
  return result;
}

uint64_t sub_1D438B3F8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D438B41C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D438AF30(a1);
}

uint64_t sub_1D438B438(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  __int128 v4;
  _QWORD *v5;

  v4 = a2[1];
  *(_OWORD *)(v2 + 16) = *a2;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = a2[2];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 64) = v5;
  *v5 = v2;
  v5[1] = sub_1D438BE78;
  return sub_1D43885F8(a1, v2 + 16);
}

uint64_t sub_1D438B4A0(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  __int128 v4;
  _QWORD *v5;

  v4 = a2[1];
  *(_OWORD *)(v2 + 16) = *a2;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = a2[2];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 64) = v5;
  *v5 = v2;
  v5[1] = sub_1D438BE78;
  return sub_1D4388668(a1, v2 + 16);
}

uint64_t sub_1D438B508(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  __int128 v4;
  _QWORD *v5;

  v4 = a2[1];
  *(_OWORD *)(v2 + 16) = *a2;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = a2[2];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 64) = v5;
  *v5 = v2;
  v5[1] = sub_1D438BE78;
  return sub_1D43886D8(a1, v2 + 16);
}

unint64_t sub_1D438B570()
{
  unint64_t result;

  result = qword_1EFE4E348;
  if (!qword_1EFE4E348)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45327A0, &type metadata for AnalyzerDirectionOfArrival.AudioSourceAgnosticRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4E348);
  }
  return result;
}

uint64_t sub_1D438B5AC(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  __int128 v4;
  _QWORD *v5;

  v4 = a2[1];
  *(_OWORD *)(v2 + 16) = *a2;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = a2[2];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 64) = v5;
  *v5 = v2;
  v5[1] = sub_1D438BE78;
  return sub_1D4388748(a1, v2 + 16);
}

uint64_t sub_1D438B614(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  __int128 v4;
  _QWORD *v5;

  v4 = a2[1];
  *(_OWORD *)(v2 + 16) = *a2;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = a2[2];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 64) = v5;
  *v5 = v2;
  v5[1] = sub_1D438B67C;
  return sub_1D43887B8(a1, v2 + 16);
}

uint64_t sub_1D438B67C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v3 = *v0;
  v1 = *v0;
  sub_1D430C44C(&v3);
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1D438B6B8(uint64_t a1, uint64_t a2, void *__src)
{
  _BYTE __dst[72];

  memcpy(__dst, __src, sizeof(__dst));
  return sub_1D435287C(a1, a2, __dst);
}

uint64_t sub_1D438B718(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D438B6B8(a1, a2, *(void **)(v2 + 16));
}

void sub_1D438B730(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_1D42B28FC(a3);
  sub_1D42E3E0C(v3);
  sub_1D42B6E24();
}

unint64_t sub_1D438B75C()
{
  unint64_t result;

  result = qword_1EFE4E3E0;
  if (!qword_1EFE4E3E0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_1EFE4E3E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for AnalyzerDirectionOfArrival.AudioSourceAgnosticRequest.CodingKeys()
{
  return &type metadata for AnalyzerDirectionOfArrival.AudioSourceAgnosticRequest.CodingKeys;
}

uint64_t _s13SoundAnalysis26AnalyzerDirectionOfArrivalV26AudioSourceAgnosticRequestV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D438B7EC + 4 * byte_1D4532310[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D438B80C + 4 * byte_1D4532315[v4]))();
}

_BYTE *sub_1D438B7EC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D438B80C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D438B814(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D438B81C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D438B824(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D438B82C(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for SNDirectionOfArrivalEstimator.DomainError()
{
  sub_1D42CB35C();
}

uint64_t destroy for FileServerInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D438B87C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 68) = *(_BYTE *)(a2 + 68);
  *(_BYTE *)(a1 + 69) = *(_BYTE *)(a2 + 69);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D438B908(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_BYTE *)(a1 + 66) = *(_BYTE *)(a2 + 66);
  *(_BYTE *)(a1 + 67) = *(_BYTE *)(a2 + 67);
  *(_BYTE *)(a1 + 68) = *(_BYTE *)(a2 + 68);
  *(_BYTE *)(a1 + 69) = *(_BYTE *)(a2 + 69);
  v4 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v4;
  return a1;
}

void *sub_1D438B9F4(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x51uLL);
}

uint64_t sub_1D438B9FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_BYTE *)(a1 + 66) = *(_BYTE *)(a2 + 66);
  *(_BYTE *)(a1 + 67) = *(_BYTE *)(a2 + 67);
  *(_BYTE *)(a1 + 68) = *(_BYTE *)(a2 + 68);
  *(_BYTE *)(a1 + 69) = *(_BYTE *)(a2 + 69);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t sub_1D438BAA0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 81))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D438BAE0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 81) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AnalyzerDirectionOfArrival.Request()
{
  sub_1D42CB35C();
}

unint64_t sub_1D438BB48()
{
  unint64_t result;

  result = qword_1EFE4E418;
  if (!qword_1EFE4E418)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45325C8, &unk_1E97A9D88);
    atomic_store(result, (unint64_t *)&qword_1EFE4E418);
  }
  return result;
}

unint64_t sub_1D438BB88()
{
  unint64_t result;

  result = qword_1EFE4E420;
  if (!qword_1EFE4E420)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4532670, &unk_1E97AB098);
    atomic_store(result, (unint64_t *)&qword_1EFE4E420);
  }
  return result;
}

unint64_t sub_1D438BBC8()
{
  unint64_t result;

  result = qword_1EFE4E428;
  if (!qword_1EFE4E428)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4532728, &type metadata for AnalyzerDirectionOfArrival.AudioSourceAgnosticRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4E428);
  }
  return result;
}

unint64_t sub_1D438BC08()
{
  unint64_t result;

  result = qword_1EFE4E430;
  if (!qword_1EFE4E430)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4532698, &type metadata for AnalyzerDirectionOfArrival.AudioSourceAgnosticRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4E430);
  }
  return result;
}

unint64_t sub_1D438BC48()
{
  unint64_t result;

  result = qword_1EFE4E438;
  if (!qword_1EFE4E438)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45326C0, &type metadata for AnalyzerDirectionOfArrival.AudioSourceAgnosticRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4E438);
  }
  return result;
}

unint64_t sub_1D438BC84()
{
  unint64_t result;

  result = qword_1EFE4E448;
  if (!qword_1EFE4E448)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45328E8, &type metadata for AnalyzerDirectionOfArrival.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4E448);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AnalyzerDirectionOfArrival.Request.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D438BD0C + 4 * byte_1D453231F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D438BD40 + 4 * byte_1D453231A[v4]))();
}

uint64_t sub_1D438BD40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D438BD48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D438BD50);
  return result;
}

uint64_t sub_1D438BD5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D438BD64);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D438BD68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D438BD70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AnalyzerDirectionOfArrival.Request.CodingKeys()
{
  return &type metadata for AnalyzerDirectionOfArrival.Request.CodingKeys;
}

unint64_t sub_1D438BD90()
{
  unint64_t result;

  result = qword_1EFE4E470;
  if (!qword_1EFE4E470)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45328C0, &type metadata for AnalyzerDirectionOfArrival.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4E470);
  }
  return result;
}

unint64_t sub_1D438BDD0()
{
  unint64_t result;

  result = qword_1EFE4E478;
  if (!qword_1EFE4E478)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4532830, &type metadata for AnalyzerDirectionOfArrival.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4E478);
  }
  return result;
}

unint64_t sub_1D438BE10()
{
  unint64_t result;

  result = qword_1EFE4E480[0];
  if (!qword_1EFE4E480[0])
  {
    result = MEMORY[0x1D825E41C](&unk_1D4532858, &type metadata for AnalyzerDirectionOfArrival.Request.CodingKeys);
    atomic_store(result, qword_1EFE4E480);
  }
  return result;
}

uint64_t sub_1D438BE90()
{
  return sub_1D43768A8();
}

void sub_1D438BEA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;

  sub_1D438B730(v1, a1 + 16, v2);
}

void sub_1D438BEB8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1D438B730(a1, a2, v2);
}

uint64_t sub_1D438BEC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v3 - 8) = *v2;
  *(_QWORD *)(v3 - 8) = *v2;
  *(_QWORD *)(v4 + 224) = a1;
  *(_QWORD *)(v4 + 232) = v1;
  return swift_task_dealloc();
}

uint64_t sub_1D438BEE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v5 = (_QWORD *)*v3;
  v6 = (_QWORD *)(v4 - 8);
  *v6 = *v3;
  v5[26] = v3;
  v5[27] = a1;
  v5[28] = a2;
  v5[29] = v2;
  *v6 = *v3;
  v5[42] = v2;
  return swift_task_dealloc();
}

uint64_t sub_1D438BF10()
{
  return sub_1D43768A8();
}

uint64_t sub_1D438BF24(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_1D438BF40(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;

  sub_1D438B730(v1, a1 + 16, v2);
}

void sub_1D438BF50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  sub_1D438B730(v1, v0, v2);
}

uint64_t sub_1D438BF60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v2;
  return sub_1D42E2EBC(v1);
}

uint64_t sub_1D438BF6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;

  v4 = *v2;
  v5 = (uint64_t *)(v3 - 8);
  *v5 = *v2;
  *v5 = *v2;
  *(_QWORD *)(v4 + 312) = a1;
  *(_QWORD *)(v4 + 320) = v1;
  return swift_task_dealloc();
}

_QWORD *sub_1D438BF90@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *result = v2;
  result[1] = a2;
  return result;
}

uint64_t sub_1D438BFD8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 216) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1D438BFFC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 - 8);
  *v2 = *v0;
  *v2 = *v0;
  return swift_task_dealloc();
}

uint64_t sub_1D438C018()
{
  return swift_retain();
}

uint64_t sub_1D438C034(uint64_t a1)
{
  return sub_1D4376F40(a1);
}

uint64_t sub_1D438C040()
{
  return type metadata accessor for XPCProxyDecoder();
}

uint64_t sub_1D438C048@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return a3;
}

uint64_t sub_1D438C05C()
{
  uint64_t v0;

  return v0 + 16;
}

uint64_t sub_1D438C078()
{
  return swift_initStackObject();
}

uint64_t *sub_1D438C080()
{
  uint64_t *v0;

  return sub_1D42E2EFC(v0);
}

uint64_t sub_1D438C088()
{
  return type metadata accessor for XPCDataDecoder();
}

uint64_t sub_1D438C090()
{
  return type metadata accessor for XPCDecoder();
}

uint64_t sub_1D438C098()
{
  return swift_initStackObject();
}

uint64_t sub_1D438C0A0()
{
  return swift_initStackObject();
}

uint64_t sub_1D438C0A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_1D43880FC(v3, v2, v0, v1);
}

uint64_t sub_1D438C0C0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 256) = a1;
  return swift_task_alloc();
}

uint64_t sub_1D438C0D8()
{
  return swift_release();
}

uint64_t sub_1D438C0E8()
{
  return swift_retain();
}

uint64_t sub_1D438C0F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 + 72) = a1;
  a1[2] = v1;
  a1[3] = v2;
  a1[4] = v4;
  a1[5] = v5;
  return sub_1D42B7FE4(v1);
}

uint64_t sub_1D438C118()
{
  return sub_1D451A2E4();
}

uint64_t sub_1D438C128()
{
  return sub_1D43768A8();
}

uint64_t sub_1D438C134()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 88) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1D438C178()
{
  return swift_release();
}

void sub_1D438C184()
{
  uint64_t v0;
  uint64_t *v1;

  sub_1D42D7018(v0, v1);
}

uint64_t sub_1D438C1A0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D438C1C4()
{
  return swift_task_dealloc();
}

uint64_t *sub_1D438C1CC()
{
  uint64_t *v0;

  return sub_1D42B8C84(v0);
}

uint64_t sub_1D438C1D4()
{
  return swift_task_switch();
}

uint64_t sub_1D438C1F8(uint64_t (*a1)(void))
{
  return a1();
}

void sub_1D438C21C()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_1D438C23C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_1D438C264()
{
  return sub_1D4376FD4();
}

uint64_t sub_1D438C26C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D438C278()
{
  return swift_setDeallocating();
}

uint64_t sub_1D438C280()
{
  return swift_release();
}

uint64_t sub_1D438C288()
{
  return swift_setDeallocating();
}

uint64_t sub_1D438C290()
{
  return sub_1D4376FD4();
}

uint64_t sub_1D438C298()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1D438C2AC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 128) = a1;
  a1[2] = v1;
  a1[3] = v3;
  a1[4] = v4;
  a1[5] = v5;
  return sub_1D42B7FE4(v1);
}

uint64_t sub_1D438C2D0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 200) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1D438C2F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;

  v4 = *v2;
  v5 = (uint64_t *)(v3 - 8);
  *v5 = *v2;
  *v5 = *v2;
  *(_QWORD *)(v4 + 176) = a1;
  *(_QWORD *)(v4 + 184) = v1;
  return swift_task_dealloc();
}

uint64_t sub_1D438C318()
{
  return swift_release();
}

void sub_1D438C338()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *v0 = v1;
  v0[1] = v5;
  v0[2] = v2;
  v0[3] = v3;
  v0[4] = v6;
  v0[5] = v4;
}

uint64_t sub_1D438C350()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 144) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1D438C370()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 216) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1D438C390()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 104) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1D438C3B0()
{
  return sub_1D4376978();
}

uint64_t sub_1D438C3C4()
{
  return swift_task_switch();
}

void sub_1D438C3D8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  sub_1D42F1168(a1, v3, a3);
}

uint64_t sub_1D438C3E0()
{
  return swift_task_dealloc();
}

uint64_t sub_1D438C3E8(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 272) = result;
  return result;
}

uint64_t sub_1D438C3F4(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1D438C400()
{
  return swift_retain();
}

void sub_1D438C418()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_1D438C438()
{
  return swift_task_dealloc();
}

uint64_t sub_1D438C440()
{
  return swift_release();
}

uint64_t sub_1D438C448@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *a1 = v4;
  a1[1] = a2;
  return a4;
}

uint64_t sub_1D438C458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_1D438C464(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1D438C470(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_1D438C47C()
{
  return swift_task_switch();
}

void sub_1D438C488(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1D42E2E8C(a1, a2, v2);
}

uint64_t sub_1D438C490()
{
  return swift_task_dealloc();
}

uint64_t sub_1D438C498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v0, v2);
}

__n128 sub_1D438C4AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 result;

  *(_QWORD *)v9 = v10;
  *(_QWORD *)(v9 + 8) = v13;
  *(_QWORD *)(v9 + 16) = v11;
  *(_QWORD *)(v9 + 24) = v12;
  *(_QWORD *)(v9 + 32) = v14;
  result = a9;
  *(__n128 *)(v9 + 40) = a9;
  return result;
}

void sub_1D438C4C8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *v0 = v1;
  v0[1] = v6;
  v0[2] = v2;
  v0[3] = v3;
  v0[4] = v7;
  v0[5] = v4;
  v0[6] = v5;
}

uint64_t sub_1D438C4E4()
{
  return swift_allocObject();
}

void sub_1D438C4F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;

  sub_1D438B730(v1, a1 + 16, v2);
}

uint64_t sub_1D438C504()
{
  return swift_getObjectType();
}

uint64_t sub_1D438C510()
{
  return sub_1D4376FD4();
}

uint64_t sub_1D438C518()
{
  return swift_setDeallocating();
}

uint64_t sub_1D438C520(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 + 160) = a1;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v3;
  return sub_1D42E2EBC(v1);
}

void sub_1D438C534(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;

  sub_1D438B730(v1, a1 + 16, v2);
}

uint64_t sub_1D438C548()
{
  uint64_t v0;

  return v0 + 16;
}

uint64_t sub_1D438C564(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_1D438C57C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 128);
}

void sub_1D438C594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  sub_1D438B730(v1, v0, v2);
}

uint64_t sub_1D438C5A4()
{
  return swift_release();
}

uint64_t sub_1D438C5B4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_1D438C5C4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_1D438C5D0()
{
  return swift_task_alloc();
}

uint64_t sub_1D438C60C()
{
  uint64_t v0;

  return v0 - 160;
}

uint64_t sub_1D438C620(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

__n128 sub_1D438C634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, __int128 a16)
{
  return (__n128)a16;
}

void sub_1D438C648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 144);
  v3 = *(int *)(*(_QWORD *)(v1 + 136) + 20);
  *(_DWORD *)(v1 + 224) = v3;
  *(_QWORD *)(v2 + v3) = v0;
}

void sub_1D438C670()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 80) + 24);
}

uint64_t sub_1D438C684(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  return sub_1D4519D20();
}

__n128 sub_1D438C6A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int128 a11)
{
  return (__n128)a11;
}

uint64_t sub_1D438C6B8()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_1D438C6C4()
{
  return sub_1D451B688();
}

void sub_1D438C708()
{
  void *v0;

}

void sub_1D438C714(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;

  sub_1D438B730(a1, v1, v2);
}

uint64_t sub_1D438C720()
{
  return sub_1D451A74C();
}

uint64_t sub_1D438C740()
{
  return sub_1D451A74C();
}

uint64_t sub_1D438C74C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D438C778()
{
  return swift_initClassMetadata2();
}

void sub_1D438C7BC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  sub_1D42CB210();
  v6 = v5 - v4;
  sub_1D43409C8(v5 - v4, v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  sub_1D43409C8(a2, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
  sub_1D42CB15C();
}

uint64_t sub_1D438C824()
{
  sub_1D451B958();
  sub_1D42C4328();
  return sub_1D451B994();
}

void sub_1D438C860(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  sub_1D438C8A4(a1, a2);
  sub_1D42CB15C();
}

uint64_t *sub_1D438C8A4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *v2;
  swift_defaultActor_initialize();
  v2[16] = 0;
  v2[14] = sub_1D451A1AC();
  *((_BYTE *)v2 + 120) = 0;
  sub_1D438E914();
  v6 = (uint64_t)v2 + *(_QWORD *)(*v2 + 144);
  v7 = sub_1D43408E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, a2, v7);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v5 + 88) - 8) + 32))((uint64_t)v2 + *(_QWORD *)(*v2 + 152), a1);
  return v2;
}

void sub_1D438C958(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_1D42B8E84();
  v3 = *(_QWORD *)(v1 + 112);
  sub_1D451A1B8();
  if ((sub_1D438E8F0() & 1) != 0)
    goto LABEL_10;
  sub_1D451A1B8();
  v4 = sub_1D438E8F0();
  v5 = sub_1D451A1B8();
  if ((v4 & 1) != 0)
  {
LABEL_9:
    *(_QWORD *)(v1 + 112) = v5;
LABEL_10:
    swift_endAccess();
    sub_1D438CA78();
    return;
  }
  if ((sub_1D451A1A0() & 1) != 0)
    goto LABEL_7;
  if ((v3 | a1) < 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  v5 = v3 + a1;
  if (__OFADD__(v3, a1))
  {
LABEL_7:
    v5 = sub_1D451A1B8();
    goto LABEL_9;
  }
  if ((v5 & 0x8000000000000000) == 0)
    goto LABEL_9;
LABEL_12:
  __break(1u);
}

void sub_1D438CA0C()
{
  uint64_t v0;

  if (!*(_BYTE *)(v0 + 120))
  {
    if (*(_QWORD *)(v0 + 128))
    {
      swift_retain();
      sub_1D451AB3C();
      swift_release();
    }
    *(_BYTE *)(v0 + 120) = 1;
    sub_1D438CA78();
  }
}

void sub_1D438CA78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D42B28FC(&qword_1EFE4DC70);
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v1);
  sub_1D42CB210();
  if (!*(_QWORD *)(v0 + 128))
  {
    v2 = sub_1D451AAC4();
    sub_1D438E848(v2);
    type metadata accessor for AsyncSequencePublisher.Subscription.Impl();
  }
  sub_1D42CB15C();
}

uint64_t sub_1D438CB4C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1D431B308;
  return sub_1D438CB94();
}

uint64_t sub_1D438CB94()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1[22] = v0;
  v2 = (_QWORD *)*v0;
  v1[23] = *v0;
  sub_1D42B28FC(&qword_1EFE4DC70);
  v1[24] = sub_1D42F9B80();
  v3 = v2[11];
  v1[25] = v3;
  v1[26] = *(_QWORD *)(v3 - 8);
  v1[27] = sub_1D42F9B80();
  v1[28] = v2[12];
  v1[29] = v2[10];
  v4 = sub_1D438E824();
  v1[30] = v4;
  v1[31] = *(_QWORD *)(v4 - 8);
  v1[32] = sub_1D42F9B80();
  v5 = sub_1D451B160();
  v1[33] = v5;
  v1[34] = *(_QWORD *)(v5 - 8);
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  v6 = sub_1D438E824();
  v1[37] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[38] = v7;
  v1[39] = *(_QWORD *)(v7 + 64);
  v1[40] = sub_1D42E3CAC();
  v1[41] = sub_1D42E3CAC();
  v1[42] = sub_1D42E3CAC();
  return swift_task_switch();
}

uint64_t sub_1D438CCCC()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  void (*v8)(uint64_t, _BYTE *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_BYTE **)(v0 + 176);
  if (v1[120])
  {
    if (v1[120] == 1)
    {
      v2 = *(_QWORD *)(v0 + 320);
      v3 = *(_BYTE **)(v0 + 328);
      v4 = *(_QWORD *)(v0 + 304);
      v5 = *(_QWORD *)(v0 + 296);
      v24 = *(_QWORD *)(v0 + 232);
      v25 = *(_QWORD *)(v0 + 224);
      v6 = *(_QWORD *)(v0 + 200);
      v23 = *(_QWORD *)(v0 + 184);
      v7 = &v1[*(_QWORD *)(*(_QWORD *)v1 + 144)];
      sub_1D42B8E84();
      v8 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v4 + 16);
      v8((uint64_t)v3, v7, v5);
      sub_1D42B28FC(&qword_1EFE4E6C8);
      sub_1D42B6F40();
      v9 = sub_1D4319678();
      *(_QWORD *)(v0 + 368) = v9;
      v10 = sub_1D451AAC4();
      sub_1D438E848(v10);
      v8(v2, v3, v5);
      v11 = (*(unsigned __int8 *)(v4 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v12 = (_QWORD *)swift_allocObject();
      v12[2] = 0;
      v12[3] = 0;
      v12[4] = v24;
      v12[5] = v6;
      v12[6] = v25;
      v12[7] = *(_QWORD *)(v23 + 104);
      v12[8] = v9;
      sub_1D438E938((uint64_t)v12 + v11, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
      swift_retain();
      sub_1D444D358();
      *(_QWORD *)(v0 + 376) = v13;
      sub_1D451AB3C();
      v14 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 384) = v14;
      *v14 = v0;
      v14[1] = sub_1D438D2EC;
      return sub_1D451AB48();
    }
    goto LABEL_5;
  }
  sub_1D42B8E84();
  sub_1D451A1AC();
  v16 = sub_1D451A1A0();
  *(_BYTE *)(v0 + 392) = v16 & 1;
  if ((v16 & 1) != 0)
  {
LABEL_5:
    sub_1D438E914();
    sub_1D438E788();
    sub_1D42E3E5C();
    sub_1D42E3E54();
    sub_1D438C1C4();
    sub_1D438C438();
    sub_1D438C490();
    sub_1D438E880();
    sub_1D438E878();
    return sub_1D438E7A4(*(uint64_t (**)(void))(v0 + 8));
  }
  v17 = *(_QWORD *)(v0 + 336);
  v18 = *(_QWORD *)(v0 + 304);
  v19 = *(_QWORD *)(v0 + 176);
  v20 = *(_QWORD *)(*(_QWORD *)v19 + 144);
  *(_QWORD *)(v0 + 344) = v20;
  v21 = v19 + v20;
  sub_1D42B8E84();
  sub_1D43409C8(v17, v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16));
  swift_getAssociatedConformanceWitness();
  v22 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 352) = v22;
  *v22 = v0;
  v22[1] = sub_1D438CF9C;
  return sub_1D451AAA0();
}

uint64_t sub_1D438CF9C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 360) = v0;
  swift_task_dealloc();
  return sub_1D431B32C();
}

uint64_t sub_1D438CFF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *(_QWORD *)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 304);
  v4 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 288);
  v5 = *(_QWORD *)(v0 + 264);
  v6 = *(_QWORD *)(v0 + 272);
  v37 = *(_QWORD *)(v0 + 240);
  v7 = *(_QWORD *)(v0 + 176) + *(_QWORD *)(v0 + 344);
  sub_1D42B8E84();
  sub_1D4340870(v7, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 24));
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v3, v5);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v4, 1, v37) != 1)
  {
    v16 = *(_QWORD *)(v0 + 176);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 32))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 240));
    sub_1D42B8E84();
    v17 = *(_QWORD *)(v16 + 112);
    sub_1D451A1B8();
    if ((sub_1D438E8D8() & 1) != 0)
    {
LABEL_10:
      v21 = *(_QWORD *)(v0 + 208);
      v20 = *(_QWORD *)(v0 + 216);
      v22 = *(_QWORD *)(v0 + 200);
      v23 = *(char **)(v0 + 176);
      swift_endAccess();
      (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v20, &v23[*(_QWORD *)(*(_QWORD *)v23 + 152)], v22);
      v24 = sub_1D451A170();
      sub_1D438E8FC(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
      sub_1D42B8E84();
      v25 = *((_QWORD *)v23 + 14);
      sub_1D451A1B8();
      if ((sub_1D438E8E4() & 1) != 0)
      {
LABEL_19:
        v28 = *(_QWORD *)(v0 + 336);
        v29 = *(_QWORD *)(v0 + 296);
        v30 = *(_QWORD *)(v0 + 304);
        v31 = *(_QWORD *)(v0 + 272);
        v32 = *(_QWORD *)(v0 + 248);
        v33 = *(_QWORD *)(v0 + 256);
        v34 = *(_QWORD *)(v0 + 240);
        swift_endAccess();
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v33, v34);
        sub_1D438E8FC(*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8));
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
        goto LABEL_20;
      }
      sub_1D451A1B8();
      v26 = sub_1D438E8E4();
      v27 = sub_1D451A1B8();
      if ((v26 & 1) != 0)
      {
LABEL_18:
        *(_QWORD *)(*(_QWORD *)(v0 + 176) + 112) = v27;
        goto LABEL_19;
      }
      result = sub_1D451A1A0();
      if ((result & 1) != 0)
      {
LABEL_16:
        v27 = sub_1D451A1B8();
        goto LABEL_18;
      }
      if (((v25 | v24) & 0x8000000000000000) == 0)
      {
        v27 = v25 + v24;
        if (!__OFADD__(v25, v24))
        {
          if ((v27 & 0x8000000000000000) == 0)
            goto LABEL_18;
LABEL_26:
          __break(1u);
          return result;
        }
        goto LABEL_16;
      }
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    sub_1D451A1B8();
    result = sub_1D438E8D8();
    if ((result & 1) != 0)
    {
      v19 = sub_1D451A1B8();
LABEL_9:
      *(_QWORD *)(*(_QWORD *)(v0 + 176) + 112) = v19;
      goto LABEL_10;
    }
    if (v17 < 0)
    {
      __break(1u);
    }
    else if (v17)
    {
      v19 = v17 - 1;
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_25;
  }
  v8 = *(_QWORD *)(v0 + 304);
  v36 = *(_QWORD *)(v0 + 296);
  v38 = *(_QWORD *)(v0 + 336);
  v9 = *(_QWORD *)(v0 + 288);
  v10 = *(_QWORD *)(v0 + 264);
  v12 = *(_QWORD *)(v0 + 208);
  v11 = *(_QWORD *)(v0 + 216);
  v13 = *(_QWORD *)(v0 + 200);
  v14 = *(_BYTE **)(v0 + 176);
  v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 272) + 8);
  v15(*(_QWORD *)(v0 + 280), v10);
  v14[120] = 2;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v12 + 16))(v11, &v14[*(_QWORD *)(*(_QWORD *)v14 + 152)], v13);
  *(_QWORD *)(v0 + 160) = 0;
  sub_1D451A158();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  v15(v9, v10);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v38, v36);
LABEL_20:
  v35 = *(_BYTE *)(v0 + 392);
  sub_1D438E7D8();
  if ((v35 & 1) == 0)
    sub_1D438CA78();
  sub_1D438E788();
  sub_1D42E3E5C();
  sub_1D42E3E54();
  sub_1D438C1C4();
  sub_1D438C438();
  sub_1D438C490();
  sub_1D438E880();
  sub_1D438E878();
  return sub_1D438E7A4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D438D2EC()
{
  sub_1D430C324();
  return sub_1D42B8DA8();
}

uint64_t sub_1D438D330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 328);
  v2 = *(_QWORD *)(v0 + 304);
  v3 = *(_QWORD *)(v0 + 176);
  swift_release();
  swift_release();
  sub_1D4340970(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  *(_BYTE *)(v3 + 120) = 2;
  sub_1D438E7D8();
  sub_1D438E788();
  sub_1D42E3E5C();
  sub_1D42E3E54();
  sub_1D438C1C4();
  sub_1D438C438();
  sub_1D438C490();
  sub_1D438E880();
  sub_1D438E878();
  return sub_1D438E7C0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D438D3B0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;

  v1 = *(void **)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 216);
  v4 = *(_BYTE **)(v0 + 176);
  sub_1D438E8D0(*(_QWORD *)(v0 + 304));
  v4[120] = 2;
  sub_1D4340870(v2, (uint64_t)&v4[*(_QWORD *)(*(_QWORD *)v4 + 152)], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  *(_QWORD *)(v0 + 168) = v1;
  sub_1D451A158();

  sub_1D4340970(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  LOBYTE(v2) = *(_BYTE *)(v0 + 392);
  sub_1D438E7D8();
  if ((v2 & 1) == 0)
    sub_1D438CA78();
  sub_1D438E788();
  sub_1D42E3E5C();
  sub_1D42E3E54();
  sub_1D438C1C4();
  sub_1D438C438();
  sub_1D438C490();
  sub_1D438E880();
  sub_1D438E878();
  return sub_1D438E7C0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D438D478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  _QWORD *v11;
  uint64_t (*v13)(void);

  v8[3] = a6;
  v8[4] = a8;
  v8[2] = a5;
  v8[5] = swift_getAssociatedTypeWitness();
  v9 = sub_1D451B160();
  v8[6] = v9;
  v8[7] = *(_QWORD *)(v9 - 8);
  v8[8] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[9] = AssociatedTypeWitness;
  v8[10] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8[11] = swift_task_alloc();
  v13 = (uint64_t (*)(void))((char *)&dword_1EFE4B778 + dword_1EFE4B778);
  v11 = (_QWORD *)swift_task_alloc();
  v8[12] = v11;
  *v11 = v8;
  v11[1] = sub_1D438D580;
  return v13();
}

uint64_t sub_1D438D580()
{
  sub_1D430C324();
  return sub_1D42B8DA8();
}

uint64_t sub_1D438D5C0()
{
  _QWORD *v0;
  _QWORD *v1;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[10] + 16))(v0[11], v0[2], v0[9]);
  swift_getAssociatedConformanceWitness();
  v1 = (_QWORD *)swift_task_alloc();
  v0[13] = v1;
  *v1 = v0;
  v1[1] = sub_1D438D660;
  return sub_1D451AAA0();
}

uint64_t sub_1D438D660()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)

  else
    sub_1D438E8D0(*(_QWORD *)(v2 + 56));
  return sub_1D431B32C();
}

uint64_t sub_1D438D6CC()
{
  uint64_t v0;

  sub_1D431B42C(*(_QWORD *)(v0 + 80));
  sub_1D42E3E5C();
  sub_1D42E3E54();
  return sub_1D42E39E4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D438D700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 40);
  sub_1D438E8D0(*(_QWORD *)(v0 + 80));
  v2 = sub_1D438E898();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v2, v3, v4, v1);
  sub_1D431B42C(*(_QWORD *)(v0 + 56));
  sub_1D42E3E54();
  sub_1D42E3E5C();
  return sub_1D42E39E4(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1D438D754()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  swift_release();
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 144);
  v3 = sub_1D43408E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  sub_1D438E8D0(*(_QWORD *)(*(_QWORD *)(v1 + 88) - 8));
  swift_defaultActor_destroy();
  sub_1D42CB15C();
}

uint64_t sub_1D438D7D8()
{
  sub_1D438D754();
  return swift_defaultActor_deallocate();
}

void sub_1D438D7F0()
{
  sub_1D42B6F40();
  sub_1D438D830();
}

void sub_1D438D824()
{
  sub_1D42CB15C();
}

void sub_1D438D830()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  MEMORY[0x1E0C80A78](v1);
  sub_1D438E8B8();
  type metadata accessor for AsyncSequencePublisher.Subscription.Impl();
}

uint64_t sub_1D438D8E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = *(_QWORD *)(v7 - 128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v6, v8, v5);
  v9 = *(_QWORD *)(v7 - 120);
  sub_1D438E938(v4, v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  sub_1D438C860(v6, v4);
  v11 = v10;
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v9, v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v8, v5);
  *(_QWORD *)(v0 + 16) = v11;
  return v0;
}

void sub_1D438D970(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  sub_1D42B28FC(&qword_1EFE4DC70);
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1D438E7E8();
  v5 = sub_1D438E898();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v5, v6, v7, v4);
  v8 = (_QWORD *)sub_1D42B6F40();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v1;
  v8[5] = a1;
  LODWORD(a1) = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v1, 1, v4);
  swift_retain();
  if ((_DWORD)a1 == 1)
  {
    sub_1D438E444(v1);
  }
  else
  {
    sub_1D451AAB8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v1, v4);
    if (v8[2])
    {
      sub_1D438E92C();
      sub_1D438E920();
      sub_1D438E8A8();
      sub_1D438E888();
    }
  }
  v9 = sub_1D42B6F40();
  *(_QWORD *)(v9 + 16) = &unk_1EFE4E6A0;
  *(_QWORD *)(v9 + 24) = v8;
  sub_1D438E908();
  swift_release();
  sub_1D42CB084();
}

uint64_t sub_1D438DAC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_1D438DAE0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
  return sub_1D438E840();
}

uint64_t sub_1D438DAF8()
{
  uint64_t v0;

  sub_1D438C958(*(_QWORD *)(v0 + 24));
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1D438DB20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  uint64_t v8;

  sub_1D42B28FC(&qword_1EFE4DC70);
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1D438E7E8();
  v3 = sub_1D438E898();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v3, v4, v5, v2);
  v6 = (_QWORD *)sub_1D42B6F40();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  v7 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v0, 1, v2);
  swift_retain();
  if (v7 == 1)
  {
    sub_1D438E444(v0);
  }
  else
  {
    sub_1D451AAB8();
    sub_1D4340970(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8));
    if (v6[2])
    {
      sub_1D438E92C();
      sub_1D438E920();
      sub_1D438E8A8();
      sub_1D438E888();
    }
  }
  v8 = sub_1D42B6F40();
  *(_QWORD *)(v8 + 16) = &unk_1EFE4E6B8;
  *(_QWORD *)(v8 + 24) = v6;
  sub_1D438E908();
  swift_release();
  sub_1D42CB084();
}

uint64_t sub_1D438DC6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_1D438DC84()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
  return sub_1D438E840();
}

uint64_t sub_1D438DC9C()
{
  uint64_t v0;

  sub_1D438CA0C();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D438DCC4()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t sub_1D438DCE0()
{
  sub_1D438DCC4();
  return swift_deallocClassInstance();
}

void type metadata accessor for AsyncSequencePublisher.Subscription()
{
  JUMPOUT(0x1D825E3A4);
}

uint64_t sub_1D438DD0C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

void type metadata accessor for AsyncSequencePublisher.Subscription.Impl()
{
  JUMPOUT(0x1D825E3A4);
}

uint64_t sub_1D438DDE8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D438DE34 + 4 * byte_1D4532945[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D438DE68 + 4 * byte_1D4532940[v4]))();
}

uint64_t sub_1D438DE68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D438DE70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D438DE78);
  return result;
}

uint64_t sub_1D438DE84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D438DE8CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D438DE90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D438DE98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AsyncSequencePublisher.Subscription.Impl.TerminationState()
{
  JUMPOUT(0x1D825E3A4);
}

uint64_t sub_1D438DEB0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D438DF1C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1D438DFCC + 4 * byte_1D453294A[(v8 - 1)]))();
}

void sub_1D438E018(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0u;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t type metadata accessor for AsyncSequencePublisher(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncSequencePublisher);
}

void sub_1D438E1CC()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D438E1DC(uint64_t a1)
{
  sub_1D438D970(a1);
}

void sub_1D438E1FC()
{
  sub_1D438DB20();
}

void sub_1D438E21C()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D438E22C()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D438E23C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v2;

  MEMORY[0x1E0C80A78](a1);
  sub_1D42CB210();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  MEMORY[0x1E0C80A78](v2);
  sub_1D438E8B8();
  type metadata accessor for AsyncSequencePublisher.Subscription();
}

void sub_1D438E30C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1D4340870(v3, *(_QWORD *)(v4 - 136), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16));
  sub_1D438E938(v2, *(_QWORD *)(v4 - 128), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  sub_1D451AB6C();
  sub_1D438D7F0();
}

uint64_t sub_1D438E358(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = v1;
  *(_QWORD *)(v2 - 88) = MEMORY[0x1D825E41C](&unk_1D4532B68, v1);
  *(_QWORD *)(v2 - 120) = a1;
  sub_1D451A164();
  return sub_1D42B5400(v2 - 120);
}

void sub_1D438E3B4(uint64_t a1)
{
  sub_1D438E23C(a1);
}

uint64_t sub_1D438E3C8()
{
  return sub_1D438E6F4();
}

uint64_t sub_1D438E3D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = swift_task_alloc();
  v9 = (_QWORD *)sub_1D42B8F00(v8);
  *v9 = v2;
  v9[1] = sub_1D431B308;
  return sub_1D438DAC8(a1, v4, v5, v7, v6);
}

uint64_t sub_1D438E444(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D42B28FC(&qword_1EFE4DC70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D438E484()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D438E804(v1);
  return sub_1D430C3D0(v2, v3, v4, v5);
}

uint64_t sub_1D438E4D0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D438E85C(v1);
  return sub_1D438DC6C(v2, v3, v4, v5);
}

uint64_t sub_1D438E524()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D438E548()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D438E804(v1);
  return sub_1D430C3D0(v2, v3, v4, v5);
}

uint64_t sub_1D438E590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1D43408E4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1D438E620(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = *(unsigned __int8 *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 80);
  v8 = v1[2];
  v9 = v1[3];
  v10 = v1[8];
  v11 = (uint64_t)v1 + ((v7 + 72) & ~v7);
  v12 = swift_task_alloc();
  v13 = (_QWORD *)sub_1D42B8F00(v12);
  *v13 = v2;
  v13[1] = sub_1D431B308;
  return sub_1D438D478(a1, v8, v9, v10, v11, v4, v5, v6);
}

uint64_t sub_1D438E6F4()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D438E72C()
{
  uint64_t v0;
  _QWORD *v1;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  sub_1D438E85C(v1);
  return sub_1D438CB4C();
}

uint64_t sub_1D438E788()
{
  return swift_task_dealloc();
}

uint64_t sub_1D438E7A4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D438E7C0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D438E7D8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 176) + 128) = 0;
  return swift_release();
}

uint64_t sub_1D438E7E8()
{
  return sub_1D451AAC4();
}

uint64_t sub_1D438E804(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_1D438E824()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1D438E838()
{
  return sub_1D438E6F4();
}

uint64_t sub_1D438E840()
{
  return swift_task_switch();
}

uint64_t sub_1D438E848(uint64_t a1)
{
  uint64_t v1;

  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v1, 1, 1, a1);
}

uint64_t sub_1D438E85C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_1D438E878()
{
  return swift_task_dealloc();
}

uint64_t sub_1D438E880()
{
  return swift_task_dealloc();
}

uint64_t sub_1D438E888()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1D438E898()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D438E8A8()
{
  return sub_1D451AA70();
}

uint64_t sub_1D438E8D0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8))();
}

uint64_t sub_1D438E8D8()
{
  return sub_1D451A1A0();
}

uint64_t sub_1D438E8E4()
{
  return sub_1D451A1A0();
}

uint64_t sub_1D438E8F0()
{
  return sub_1D451A1A0();
}

uint64_t sub_1D438E8FC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_1D438E908()
{
  return swift_task_create();
}

uint64_t sub_1D438E914()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 128) = 0;
  return swift_release();
}

uint64_t sub_1D438E920()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1D438E92C()
{
  return swift_getObjectType();
}

uint64_t sub_1D438E938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_1D438E940()
{
  uint64_t v0;

  swift_beginAccess();
  nullsub_1(v0 + 16);
  swift_endAccess();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnsafeInputNode()
{
  return objc_opt_self();
}

double TimeRange.asCMTimeRange.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
  result = *(double *)(v1 + 32);
  *(double *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v2;
  return result;
}

uint64_t Time.asCMTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t Time.hash(into:)()
{
  sub_1D451B988();
  sub_1D42D8408();
  sub_1D42CB47C();
  return sub_1D42D83F4();
}

BOOL static Time.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)a1 == *(_QWORD *)a2
      && *(_DWORD *)(a1 + 8) == *(_DWORD *)(a2 + 8)
      && *(_DWORD *)(a1 + 12) == *(_DWORD *)(a2 + 12)
      && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16);
}

uint64_t sub_1D438EA78(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6C616373656D6974 && a2 == 0xE900000000000065;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x7367616C66 && a2 == 0xE500000000000000;
      if (v7 || (sub_1D451B820() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x68636F7065 && a2 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_1D451B820();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_1D438EC20(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D438EC50 + 4 * byte_1D4532C10[a1]))(0x65756C6176, 0xE500000000000000);
}

uint64_t sub_1D438EC50()
{
  return 0x6C616373656D6974;
}

uint64_t sub_1D438EC6C()
{
  return 0x7367616C66;
}

uint64_t sub_1D438EC7C()
{
  return 0x68636F7065;
}

uint64_t sub_1D438EC8C()
{
  unsigned __int8 *v0;

  return sub_1D438EC20(*v0);
}

uint64_t sub_1D438EC94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D438EA78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D438ECB8()
{
  sub_1D438EE50();
  return sub_1D451BA3C();
}

uint64_t sub_1D438ECE0()
{
  sub_1D438EE50();
  return sub_1D451BA48();
}

void Time.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1D42B28FC(&qword_1EFE4E6F0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1D42CB18C();
  sub_1D42B5528(a1, a1[3]);
  sub_1D438EE50();
  sub_1D451BA24();
  sub_1D438FAB0();
  if (!v1)
  {
    sub_1D451B76C();
    sub_1D451B790();
    sub_1D438FAB0();
  }
  sub_1D42BE98C(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_1D42BE844();
}

unint64_t sub_1D438EE50()
{
  unint64_t result;

  result = qword_1EFE4E6F8;
  if (!qword_1EFE4E6F8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4532F78, &type metadata for Time.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4E6F8);
  }
  return result;
}

uint64_t Time.hashValue.getter()
{
  sub_1D42BE9A8();
  sub_1D42CB950();
  sub_1D42D8408();
  sub_1D42CB47C();
  sub_1D42D83F4();
  return sub_1D451B994();
}

void Time.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;

  sub_1D42B28FC(&qword_1EFE4E700);
  sub_1D438FAD8();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42B5528(a1, a1[3]);
  sub_1D438EE50();
  sub_1D438FA88();
  if (!v2)
  {
    v6 = sub_1D438FAA0();
    v7 = sub_1D451B694();
    v9 = sub_1D451B6B8();
    v8 = sub_1D438FAA0();
    sub_1D42CB3CC();
    *(_QWORD *)a2 = v6;
    *(_DWORD *)(a2 + 8) = v7;
    *(_DWORD *)(a2 + 12) = v9;
    *(_QWORD *)(a2 + 16) = v8;
  }
  sub_1D42B5400((uint64_t)a1);
  sub_1D42BE844();
}

void sub_1D438F030(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  Time.init(from:)(a1, a2);
}

void sub_1D438F044(_QWORD *a1)
{
  Time.encode(to:)(a1);
}

uint64_t sub_1D438F060()
{
  sub_1D451B958();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  return sub_1D451B994();
}

uint64_t TimeRange.hash(into:)()
{
  sub_1D42D8410();
  sub_1D451B988();
  sub_1D42D8408();
  sub_1D42CB47C();
  sub_1D42D83F4();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  return sub_1D451B988();
}

BOOL static TimeRange.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)a1 != *(_QWORD *)a2
    || *(_DWORD *)(a1 + 8) != *(_DWORD *)(a2 + 8)
    || *(_DWORD *)(a1 + 12) != *(_DWORD *)(a2 + 12)
    || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
  {
    return 0;
  }
  return *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      && *(_DWORD *)(a1 + 32) == *(_DWORD *)(a2 + 32)
      && *(_DWORD *)(a1 + 36) == *(_DWORD *)(a2 + 36)
      && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40);
}

uint64_t sub_1D438F1BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x7472617473 && a2 == 0xE500000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D438F2A0(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E6F697461727564;
  else
    return 0x7472617473;
}

uint64_t sub_1D438F2D4()
{
  char *v0;

  return sub_1D438F2A0(*v0);
}

uint64_t sub_1D438F2DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D438F1BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D438F300()
{
  sub_1D438F47C();
  return sub_1D451BA3C();
}

uint64_t sub_1D438F328()
{
  sub_1D438F47C();
  return sub_1D451BA48();
}

void TimeRange.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_1D42B28FC(&qword_1EFE4E708);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1D42CB18C();
  sub_1D42B5528(a1, a1[3]);
  sub_1D438F47C();
  sub_1D451BA24();
  sub_1D42CA054();
  sub_1D438FAC0();
  sub_1D451B760();
  if (!v4)
  {
    sub_1D438FAC0();
    sub_1D451B760();
  }
  sub_1D42BE98C(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_1D42CB3F8();
}

unint64_t sub_1D438F47C()
{
  unint64_t result;

  result = qword_1EFE4E710;
  if (!qword_1EFE4E710)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4532F28, &type metadata for TimeRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4E710);
  }
  return result;
}

uint64_t TimeRange.hashValue.getter()
{
  sub_1D42D8410();
  sub_1D42BE9A8();
  sub_1D42CB950();
  sub_1D42D8408();
  sub_1D42CB47C();
  sub_1D42D83F4();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  return sub_1D451B994();
}

void TimeRange.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1D42B28FC(&qword_1EFE4E718);
  sub_1D438FAD8();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42B5528(a1, a1[3]);
  sub_1D438F47C();
  sub_1D438FA88();
  if (!v2)
  {
    sub_1D42C9FC0();
    sub_1D438FA68();
    sub_1D438FA68();
    sub_1D42CB3CC();
    *a2 = v6;
    a2[1] = v7;
    a2[2] = v8;
    a2[3] = v6;
    a2[4] = v7;
    a2[5] = v8;
  }
  sub_1D42B5400((uint64_t)a1);
  sub_1D42CB3F8();
}

void sub_1D438F67C(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  TimeRange.init(from:)(a1, a2);
}

void sub_1D438F690(_QWORD *a1)
{
  TimeRange.encode(to:)(a1);
}

unint64_t sub_1D438F6B0()
{
  unint64_t result;

  result = qword_1EFE4E720;
  if (!qword_1EFE4E720)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for Time, &type metadata for Time);
    atomic_store(result, (unint64_t *)&qword_1EFE4E720);
  }
  return result;
}

unint64_t sub_1D438F6F0()
{
  unint64_t result;

  result = qword_1EFE4E728;
  if (!qword_1EFE4E728)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for TimeRange, &type metadata for TimeRange);
    atomic_store(result, (unint64_t *)&qword_1EFE4E728);
  }
  return result;
}

ValueMetadata *type metadata accessor for Time()
{
  return &type metadata for Time;
}

ValueMetadata *type metadata accessor for TimeRange()
{
  return &type metadata for TimeRange;
}

uint64_t storeEnumTagSinglePayload for TimeRange.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D438F79C + 4 * byte_1D4532C19[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D438F7D0 + 4 * byte_1D4532C14[v4]))();
}

uint64_t sub_1D438F7D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D438F7D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D438F7E0);
  return result;
}

uint64_t sub_1D438F7EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D438F7F4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D438F7F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D438F800(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TimeRange.CodingKeys()
{
  return &type metadata for TimeRange.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for Time.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D438F868 + 4 * byte_1D4532C23[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D438F89C + 4 * byte_1D4532C1E[v4]))();
}

uint64_t sub_1D438F89C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D438F8A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D438F8ACLL);
  return result;
}

uint64_t sub_1D438F8B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D438F8C0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D438F8C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D438F8CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Time.CodingKeys()
{
  return &type metadata for Time.CodingKeys;
}

unint64_t sub_1D438F8EC()
{
  unint64_t result;

  result = qword_1EFE4E730;
  if (!qword_1EFE4E730)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4532E48, &type metadata for Time.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4E730);
  }
  return result;
}

unint64_t sub_1D438F92C()
{
  unint64_t result;

  result = qword_1EFE4E738;
  if (!qword_1EFE4E738)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4532F00, &type metadata for TimeRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4E738);
  }
  return result;
}

unint64_t sub_1D438F96C()
{
  unint64_t result;

  result = qword_1EFE4E740;
  if (!qword_1EFE4E740)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4532E70, &type metadata for TimeRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4E740);
  }
  return result;
}

unint64_t sub_1D438F9AC()
{
  unint64_t result;

  result = qword_1EFE4E748;
  if (!qword_1EFE4E748)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4532E98, &type metadata for TimeRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4E748);
  }
  return result;
}

unint64_t sub_1D438F9EC()
{
  unint64_t result;

  result = qword_1EFE4E750;
  if (!qword_1EFE4E750)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4532DB8, &type metadata for Time.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4E750);
  }
  return result;
}

unint64_t sub_1D438FA2C()
{
  unint64_t result;

  result = qword_1EFE4E758;
  if (!qword_1EFE4E758)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4532DE0, &type metadata for Time.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4E758);
  }
  return result;
}

uint64_t sub_1D438FA68()
{
  return sub_1D451B688();
}

uint64_t sub_1D438FA88()
{
  return sub_1D451BA0C();
}

uint64_t sub_1D438FAA0()
{
  return sub_1D451B6A0();
}

uint64_t sub_1D438FAB0()
{
  return sub_1D451B778();
}

uint64_t sub_1D438FAC0()
{
  uint64_t v0;

  return v0 - 104;
}

void sub_1D438FAEC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  sub_1D4393158(objc_msgSend(a1, sel_modelDescription));
  sub_1D4393110();
  if (!v1)
  {
    v5 = sub_1D42B6F40();
    *(_QWORD *)(v5 + 16) = v2;
    *(_QWORD *)(v5 + 24) = v3;
    v6 = sub_1D42B6F40();
    *(_QWORD *)(v6 + 16) = a1;
    v7 = (_QWORD *)sub_1D42B6F40();
    v7[2] = sub_1D4392FB8;
    v7[3] = v6;
    v7[4] = sub_1D4393018;
    v7[5] = v5;
    v8 = sub_1D42B6F40();
    sub_1D439314C(v8, (uint64_t)sub_1D4392FF0);
    swift_retain();
    sub_1D42B28FC(&qword_1EFE4C8F8);
    sub_1D42B28FC(&qword_1EFE4E798);
    sub_1D42BE210(&qword_1EFE4E7A0, &qword_1EFE4C8F8, MEMORY[0x1E0C95950]);
    sub_1D43930DC();
    sub_1D42EA1BC();
    sub_1D42E3F48();
  }
  sub_1D43930B4();
}

void sub_1D438FC18(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  sub_1D4393158(objc_msgSend(a1, sel_modelDescription));
  sub_1D4393110();
  if (!v1)
  {
    v5 = sub_1D42B6F40();
    *(_QWORD *)(v5 + 16) = v2;
    *(_QWORD *)(v5 + 24) = v3;
    v6 = sub_1D42B6F40();
    *(_QWORD *)(v6 + 16) = a1;
    v7 = (_QWORD *)sub_1D42B6F40();
    v7[2] = sub_1D4392FB8;
    v7[3] = v6;
    v7[4] = sub_1D4393018;
    v7[5] = v5;
    v8 = sub_1D42B6F40();
    sub_1D439314C(v8, (uint64_t)sub_1D4392FF0);
    swift_retain();
    sub_1D42B28FC(&qword_1EFE4CA30);
    sub_1D42B28FC(&qword_1EFE4E798);
    sub_1D42BE210(&qword_1EFE4E7A8, &qword_1EFE4CA30, MEMORY[0x1E0C95950]);
    sub_1D43930DC();
    sub_1D42EA1BC();
    sub_1D42E3F48();
  }
  sub_1D43930B4();
}

void sub_1D438FD44(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = objc_msgSend(a1, sel_modelDescription);
  v4 = sub_1D4393158(v3);
  v6 = v5;

  if (!v1)
  {
    v7 = sub_1D42B6F40();
    *(_QWORD *)(v7 + 16) = v4;
    *(_QWORD *)(v7 + 24) = v6;
    v8 = sub_1D42B6F40();
    *(_QWORD *)(v8 + 16) = a1;
    v9 = (_QWORD *)sub_1D42B6F40();
    v9[2] = sub_1D4392FB8;
    v9[3] = v8;
    v9[4] = sub_1D4393018;
    v9[5] = v7;
    v10 = sub_1D42B6F40();
    *(_QWORD *)(v10 + 16) = sub_1D4392FF0;
    *(_QWORD *)(v10 + 24) = v9;
    swift_unknownObjectRetain();
    sub_1D42BE9A0();
    sub_1D42B28FC(&qword_1EFE4E7B0);
    sub_1D42B28FC(&qword_1EFE4E798);
    sub_1D42BE210(&qword_1EFE4E7B8, &qword_1EFE4E7B0, MEMORY[0x1E0C95D90]);
    sub_1D451A3A4();
    sub_1D42BE998();
    sub_1D42EA1BC();
  }
}

void sub_1D438FEA8(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = objc_msgSend(a1, sel_modelDescription);
  v4 = sub_1D43967BC(v3);
  v6 = v5;

  if (!v1)
  {
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v4;
    *(_QWORD *)(v7 + 24) = v6;
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = a1;
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = sub_1D4320E5C;
    v9[3] = v8;
    v9[4] = sub_1D4320E20;
    v9[5] = v7;
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = sub_1D4392B3C;
    *(_QWORD *)(v10 + 24) = v9;
    swift_unknownObjectRetain();
    swift_retain();
    sub_1D42B28FC(&qword_1EFE4B950);
    sub_1D42B28FC(&qword_1EFE4E798);
    sub_1D42BE210(&qword_1EFE4B970, &qword_1EFE4B950, MEMORY[0x1E0C95950]);
    sub_1D451A3A4();
    swift_release();
    swift_release();
  }
}

void sub_1D4390024(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  void *v8;
  uint64_t v9;
  char v10;

  sub_1D439302C(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  sub_1D42BE7F0();
  sub_1D4390090(v8);
}

void sub_1D4390040()
{
  sub_1D4393138();
}

void sub_1D4390048(void *a1)
{
  sub_1D42BE934();
  sub_1D4390310(a1);
}

uint64_t sub_1D439006C(uint64_t a1)
{
  sub_1D42B8F48();
  return a1;
}

void sub_1D4390090(void *a1)
{
  sub_1D42BE984();
  sub_1D42BE9A0();
  sub_1D42BE934();
  sub_1D4390310(a1);
}

uint64_t sub_1D43900C4(uint64_t a1)
{
  sub_1D42B8F48();
  sub_1D42BE998();
  sub_1D42FC448();
  return a1;
}

void sub_1D43900F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;

  sub_1D42BE910();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v9);
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v5, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 40))(v7, AssociatedTypeWitness, v1);
  sub_1D43930F0();
  sub_1D42BE844();
}

void sub_1D43901B4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  _QWORD v9[11];

  sub_1D439302C(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9[0]);
  sub_1D43901E4(v9);
  sub_1D43341E8();
}

uint64_t sub_1D43901E4(_QWORD *a1)
{
  _QWORD v2[3];
  uint64_t v3;

  v2[2] = &v3;
  return sub_1D43915D4(a1, (uint64_t (*)(_QWORD *))sub_1D42BDEF4, (uint64_t)v2);
}

void sub_1D4390218()
{
  swift_getAssociatedTypeWitness();
  sub_1D43210F4();
  sub_1D43210F4();
  sub_1D43210F4();
  sub_1D4391D6C();
}

void sub_1D43902C8()
{
  sub_1D43341E8();
}

void sub_1D43902E0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char __src[88];

  sub_1D439302C(a1, a2, a3, a4, a5, a6, a7, a8, v8, __src[0]);
  sub_1D4390310(__src);
}

void sub_1D4390304()
{
  sub_1D43341E8();
}

void sub_1D4390310(void *__src)
{
  _BYTE __dst[88];

  memcpy(__dst, __src, sizeof(__dst));
  sub_1D42BE934();
  sub_1D42BE984();
  sub_1D42B5B38((uint64_t)__src);
  sub_1D4471364();
}

uint64_t sub_1D4390384(uint64_t a1)
{
  uint64_t v1;

  sub_1D42BDEAC(v1);
  sub_1D42B8F48();
  sub_1D42FC448();
  return a1;
}

void sub_1D43903BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[6];

  sub_1D42BE910();
  v2 = v1;
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v7);
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v9, v8);
  sub_1D4393144((uint64_t)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v4;
  *(_QWORD *)(v11 + 24) = v2;
  sub_1D4393144(v11 + v10, (uint64_t)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = sub_1D42BE7A0();
  v14 = sub_1D42BE7A0();
  v15 = sub_1D42BE7A0();
  v16[2] = AssociatedTypeWitness;
  v16[3] = v13;
  v16[4] = v14;
  v16[5] = v15;
  sub_1D4393160();
}

void sub_1D43904D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for SharedSoundPrintK.Instance();
  v7 = MEMORY[0x1D825E41C](&unk_1D45330D8, a1);
  sub_1D44782C4(v1, v3, (uint64_t)sub_1D42BE178, v2, a1, v6, v7, v4 - 72);
  sub_1D42E3F48();
  sub_1D42BE998();
  sub_1D42BE844();
}

void sub_1D4390544(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  void *v8;
  uint64_t v9;
  char v10;

  sub_1D439302C(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  sub_1D42BE7F0();
  sub_1D4390048(v8);
}

void sub_1D4390560()
{
  sub_1D4393138();
}

void sub_1D4390568()
{
  sub_1D42BE810();
  MEMORY[0x1D825E41C](&unk_1D452B918);
  _s14descr1E97B8181C21ServerEnvironmentImplVMa();
}

void sub_1D43905A4(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D452B7AC, a1);
  sub_1D4393084();
  sub_1D42BE8C8();
}

void sub_1D43905C0()
{
  sub_1D42BE964();
  MEMORY[0x1D825E41C](&unk_1D452B838);
  sub_1D439309C();
}

void sub_1D43905E4()
{
  sub_1D42BE958();
}

void sub_1D43905EC()
{
  sub_1D42BE810();
  MEMORY[0x1D825E41C](&unk_1D452B7C8);
  sub_1D43930C8();
}

void sub_1D4390610()
{
  sub_1D42BE94C();
}

uint64_t sub_1D4390618()
{
  if ((sub_1D451A698() & 1) != 0)
    type metadata accessor for SharedSoundPrintK.Configuration();
  return 0;
}

void sub_1D43906B0()
{
  sub_1D42BE910();
  sub_1D4393168();
}

void sub_1D43906E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  MEMORY[0x1D825E41C](&unk_1D45333B0, a1);
  v11 = sub_1D451B7A8();
  v12 = *(_QWORD *)(v11 - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&a9 - v14;
  sub_1D42B5528(v9, v9[3]);
  sub_1D451BA24();
  *(_BYTE *)(v10 - 112) = 0;
  v16 = *(_QWORD *)(v10 - 72);
  sub_1D451B760();
  if (!v16)
  {
    sub_1D4321118(1);
    sub_1D4321118(2);
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  sub_1D42BE844();
}

void sub_1D43907F0()
{
  sub_1D42BE9A8();
  sub_1D431E318();
  sub_1D451B994();
  sub_1D42BE978();
}

void sub_1D4390824(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for SharedSoundPrintK.Configuration();
}

uint64_t sub_1D4390888(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + *(int *)(result + 52)) = v2;
  *(_QWORD *)(v3 + *(int *)(result + 56)) = v1;
  return result;
}

void sub_1D43908B4()
{
  uint64_t v0;

  sub_1D42BE910();
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v0);
  sub_1D42BE768();
  sub_1D4393168();
}

void sub_1D4390918(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  MEMORY[0x1D825E41C](&unk_1D45333B0, a1);
  v6 = sub_1D451B6E8();
  *(_QWORD *)(v5 - 136) = v6;
  *(_QWORD *)(v5 - 168) = *(_QWORD *)(v6 - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v7);
  *(_QWORD *)(v5 - 152) = v4;
  *(_QWORD *)(v5 - 144) = v1;
  *(_QWORD *)(v5 - 112) = v1;
  *(_QWORD *)(v5 - 104) = v4;
  *(_QWORD *)(v5 - 96) = v2;
  *(_QWORD *)(v5 - 88) = v3;
  sub_1D4393160();
}

void sub_1D4390980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v13 = *(_QWORD *)(a1 - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&a9 - v15;
  sub_1D42B5528(v9, v9[3]);
  *(_QWORD *)(v11 - 120) = v10;
  v17 = *(_QWORD *)(v11 - 72);
  sub_1D42F1FF8();
  if (v17)
  {
    sub_1D42B5400((uint64_t)v9);
  }
  else
  {
    *(_QWORD *)(v11 - 72) = v13;
    v18 = v16;
    v19 = *(_QWORD *)(v11 - 160);
    *(_BYTE *)(v11 - 112) = 0;
    v20 = *(_QWORD *)(v11 - 144);
    sub_1D451B688();
    (*(void (**)(char *, _QWORD, uint64_t))(v19 + 32))(v18, *(_QWORD *)(v11 - 128), v20);
    *(_QWORD *)&v18[*(int *)(a1 + 52)] = sub_1D4321130(1);
    v21 = sub_1D4321130(2);
    sub_1D4321108(*(_QWORD *)(v11 - 168));
    *(_QWORD *)&v18[*(int *)(a1 + 56)] = v21;
    v22 = *(_QWORD *)(v11 - 72);
    (*(void (**)(_QWORD, char *, uint64_t))(v22 + 16))(*(_QWORD *)(v11 - 176), v18, a1);
    sub_1D42B5400((uint64_t)v9);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v18, a1);
  }
  sub_1D42BE844();
}

void sub_1D4390AE8()
{
  sub_1D42D6264();
  sub_1D437EC8C();
  sub_1D42D6264();
}

uint64_t sub_1D4390B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if ((sub_1D42FE41C(a1, a3) & 1) == 0)
    return 0;
  v3 = sub_1D437EC8C();
  return sub_1D42FE41C(v3, v4);
}

uint64_t sub_1D4390B50(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001D45544C0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D4554500)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1D4390C38(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000017;
  else
    return 0xD000000000000014;
}

void sub_1D4390C74()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1D42BE910();
  v2 = v1;
  v3 = sub_1D42B28FC(&qword_1EFE4E7E0);
  MEMORY[0x1E0C80A78](v3);
  sub_1D42B5528(v2, v2[3]);
  sub_1D4392C98();
  sub_1D451BA24();
  sub_1D42B28FC((uint64_t *)&unk_1EFE4A660);
  sub_1D4392CD4(qword_1EFE4E7E8, MEMORY[0x1E0DEB198], MEMORY[0x1E0DEAF10]);
  sub_1D4393064();
  if (!v0)
    sub_1D4393064();
  sub_1D43930F0();
  sub_1D42BE844();
}

void sub_1D4390D7C()
{
  sub_1D42BE9A8();
  sub_1D42D6264();
  sub_1D42D6264();
  sub_1D451B994();
  sub_1D42BE978();
}

uint64_t sub_1D4390DC0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  sub_1D42BE910();
  v2 = v1;
  v3 = sub_1D42B28FC(&qword_1EFE4E7D0);
  MEMORY[0x1E0C80A78](v3);
  v4 = v2[3];
  sub_1D42B5528(v2, v4);
  sub_1D4392C98();
  sub_1D42F1FF8();
  if (v0)
  {
    sub_1D42BE944();
  }
  else
  {
    sub_1D42B28FC((uint64_t *)&unk_1EFE4A660);
    sub_1D4392CD4(&qword_1EFE512F0, MEMORY[0x1E0DEB1C0], MEMORY[0x1E0DEAF40]);
    sub_1D4393040();
    v4 = v6;
    swift_bridgeObjectRetain();
    sub_1D4393040();
    sub_1D42CB3BC();
    sub_1D42CB6CC();
    sub_1D42BE944();
    swift_bridgeObjectRelease();
    sub_1D42D3258();
  }
  return v4;
}

uint64_t sub_1D4390F1C(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D45333B0, a1);
  return sub_1D451BA3C();
}

uint64_t sub_1D4390F50(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D45333B0, a1);
  return sub_1D451BA48();
}

void sub_1D4390F84()
{
  sub_1D43908B4();
}

void sub_1D4390FA4()
{
  sub_1D43906B0();
}

uint64_t sub_1D4390FBC()
{
  return sub_1D4390618();
}

unint64_t sub_1D4390FCC()
{
  char *v0;

  return sub_1D4390C38(*v0);
}

uint64_t sub_1D4390FD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D4390B50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D4390FF8()
{
  sub_1D4392C98();
  return sub_1D451BA3C();
}

uint64_t sub_1D4391020()
{
  sub_1D4392C98();
  return sub_1D451BA48();
}

uint64_t sub_1D4391048@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1D4390DC0();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

void sub_1D4391070()
{
  sub_1D4390C74();
}

void sub_1D4391088()
{
  sub_1D4390D7C();
}

void sub_1D4391090()
{
  sub_1D4390AE8();
}

uint64_t sub_1D4391098()
{
  sub_1D451B958();
  sub_1D42D6264();
  sub_1D42D6264();
  return sub_1D451B994();
}

uint64_t sub_1D43910E4(uint64_t *a1, uint64_t *a2)
{
  return sub_1D4390B10(*a1, a1[1], *a2);
}

uint64_t sub_1D43910F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);

  v1 = sub_1D42B28FC(&qword_1EFE4E7C0);
  MEMORY[0x1E0C80A78](v1);
  sub_1D42BE8F8();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_allocObject();
  v3[2] = sub_1D42BE1BC;
  v3[3] = v0;
  v3[4] = v2;
  sub_1D42BE9A0();
  sub_1D42BE984();
  sub_1D42B28FC((uint64_t *)&unk_1EFE4CE90);
  sub_1D42BE210((unint64_t *)&unk_1EFE510A0, (uint64_t *)&unk_1EFE4CE90, MEMORY[0x1E0C95D90]);
  sub_1D451A2C0();
  sub_1D42BE210(&qword_1EFE4E7C8, &qword_1EFE4E7C0, MEMORY[0x1E0C96148]);
  v4 = sub_1D451A2E4();
  v5 = sub_1D437EC8C();
  v6(v5);
  return v4;
}

uint64_t type metadata accessor for SharedSoundPrintK.Instance()
{
  return objc_opt_self();
}

uint64_t destroy for SharedSoundPrintK.Output()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s13SoundAnalysis17SharedSoundPrintKV6OutputVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  sub_1D42CB6CC();
  return a1;
}

_QWORD *assignWithCopy for SharedSoundPrintK.Output(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for SharedSoundPrintK.Output(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SharedSoundPrintK.Output()
{
  return &type metadata for SharedSoundPrintK.Output;
}

ValueMetadata *type metadata accessor for SharedSoundPrintK()
{
  return &type metadata for SharedSoundPrintK;
}

uint64_t sub_1D4391348(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 >= a2)
  {
    if ((_DWORD)v6)
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v6, v4);
    return 0;
  }
  if (((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
    v7 = 2;
  else
    v7 = a2 - v6 + 1;
  if (v7 >= 0x10000)
    v8 = 4;
  else
    v8 = 2;
  if (v7 < 0x100)
    v8 = 1;
  if (v7 >= 2)
    v9 = v8;
  else
    v9 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1D43913C0 + 4 * byte_1D4532FD0[v9]))();
}

void sub_1D4391414(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 >= a3)
  {
    v12 = 0u;
  }
  else
  {
    v9 = a3 - v7;
    if (((((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
  }
  if (a2 > v7)
  {
    if ((_DWORD)v8)
    {
      v13 = ~v7 + a2;
      bzero(a1, v8);
      *a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t sub_1D43914FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  *(_BYTE *)(v4 + v5) = 0;
  if ((_DWORD)a2)
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v4, a2, a3, a4);
  return result;
}

void sub_1D4391538(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_WORD *)(v2 + v3) = 0;
  if (!a2)
    JUMPOUT(0x1D4391540);
  JUMPOUT(0x1D4391520);
}

void type metadata accessor for SharedSoundPrintK.Configuration()
{
  JUMPOUT(0x1D825E3A4);
}

void sub_1D4391564()
{
  JUMPOUT(0x1D825E41CLL);
}

unint64_t sub_1D4391578()
{
  unint64_t result;

  result = qword_1EFE4E760;
  if (!qword_1EFE4E760)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4533168, &type metadata for SharedSoundPrintK.Output);
    atomic_store(result, (unint64_t *)&qword_1EFE4E760);
  }
  return result;
}

uint64_t sub_1D43915B4(_QWORD *a1)
{
  return sub_1D43901E4(a1);
}

uint64_t sub_1D43915D4(_QWORD *a1, uint64_t (*a2)(_QWORD *), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  double v20;
  id v21;
  char *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  id v42;
  uint64_t v43;
  void *v44;
  void *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t (*v77)(_QWORD *);
  _QWORD __dst[11];
  char *v79;

  v76 = a3;
  v77 = a2;
  v4 = sub_1D42B28FC(&qword_1EFE49680);
  v71 = *(_QWORD *)(v4 - 8);
  v72 = v4;
  MEMORY[0x1E0C80A78](v4);
  v75 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_1D42B28FC(&qword_1EFE49678);
  MEMORY[0x1E0C80A78](v74);
  v73 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D42B28FC(&qword_1EFE4B950);
  v69 = *(_QWORD *)(v7 - 8);
  v70 = v7;
  MEMORY[0x1E0C80A78](v7);
  v68 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_1D42B28FC(&qword_1EFE4E768);
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v67 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_1D42B28FC(&qword_1EFE55790);
  v66 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v65 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D42B28FC(&qword_1EFE4E770);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1D4519D20();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  sub_1D42B5B38((uint64_t)a1);
  LODWORD(v20) = 1182400512;
  v21 = objc_msgSend(v19, sel_initWithFloat_, v20);
  v22 = v79;
  sub_1D4443168();
  if (v22)
  {
    sub_1D42BDEAC((uint64_t)a1);

    return v11;
  }
  v57 = v14;
  v58 = v12;
  v59 = v11;
  v79 = v18;
  v61 = v16;
  v60 = v15;
  memcpy(__dst, a1, 0x41uLL);
  v23 = objc_msgSend(v21, sel_integerValue);

  __dst[9] = 1;
  __dst[10] = v23;
  v24 = v77(__dst);
  sub_1D42BDEAC((uint64_t)a1);
  sub_1D4519D14();
  __dst[0] = sub_1D4398FE0();
  sub_1D42B28FC((uint64_t *)&unk_1EFE4ACD0);
  v25 = sub_1D42B28FC(&qword_1EFE4C9D0);
  sub_1D42BE210(&qword_1EFE496A0, (uint64_t *)&unk_1EFE4ACD0, MEMORY[0x1E0C95D90]);
  sub_1D451A308();
  result = swift_release();
  v27 = a1[9];
  v28 = __OFSUB__(v27, 1);
  v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
    goto LABEL_10;
  }
  v30 = (unsigned __int128)(v29 * (__int128)160) >> 64;
  v31 = 160 * v29;
  v32 = (uint64_t)v73;
  v33 = (int *)v74;
  v34 = v71;
  v35 = v72;
  if (v30 != v31 >> 63)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v77 = (uint64_t (*)(_QWORD *))v24;
  v36 = v31 + 512;
  if (__OFADD__(v31, 512))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v37 = a1[10];
  v38 = 160 * v37;
  if ((unsigned __int128)(v37 * (__int128)160) >> 64 == (160 * v37) >> 63)
  {
    v39 = v25;
    v40 = v75;
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v73, v75, v72);
    *(_QWORD *)(v32 + v33[15]) = v36;
    *(_QWORD *)(v32 + v33[16]) = v38;
    *(_QWORD *)(v32 + v33[17]) = v39;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v40, v35);
    sub_1D42B28FC(&qword_1EFE4C970);
    sub_1D42BE210(&qword_1EFE4B968, &qword_1EFE49678, (uint64_t)&unk_1D4535888);
    v41 = v68;
    sub_1D451A308();
    sub_1D4392AD4(v32);
    v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E958]), sel_init);
    sub_1D439C424(35, v42);
    v43 = v59;
    v45 = v44;

    v46 = v67;
    v47 = v41;
    sub_1D438FEA8(v45);
    v48 = v60;
    v49 = v79;
    v76 = 0;
    (*(void (**)(char *, uint64_t))(v69 + 8))(v47, v70);
    swift_unknownObjectRelease();
    sub_1D42BE210(&qword_1EFE4E778, &qword_1EFE4E768, MEMORY[0x1E0C95B48]);
    v50 = v65;
    v51 = v64;
    sub_1D451A308();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v46, v51);
    __dst[0] = 0;
    __dst[1] = 0xE000000000000000;
    sub_1D451B400();
    swift_bridgeObjectRelease();
    __dst[0] = 0xD000000000000019;
    __dst[1] = 0x80000001D45544A0;
    sub_1D42BDF9C();
    sub_1D451B7C0();
    sub_1D451A794();
    swift_bridgeObjectRelease();
    sub_1D451A794();
    v52 = v57;
    sub_1D44A480C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v50, v62);
    sub_1D42BE210(&qword_1EFE4E780, &qword_1EFE4E770, MEMORY[0x1E0C957C0]);
    v53 = sub_1D451A374();
    sub_1D42B28FC(&qword_1EFE4E788);
    swift_allocObject();
    v54 = sub_1D43AEFD8(v53);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v52, v43);
    __dst[0] = v54;
    sub_1D42BE210(&qword_1EFE4E790, &qword_1EFE4E788, (uint64_t)&unk_1D4537AC0);
    v55 = sub_1D451A2E4();
    swift_release();
    swift_release();
    type metadata accessor for SharedSoundPrintK.Instance();
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v55;
    (*(void (**)(char *, uint64_t))(v61 + 8))(v49, v48);
    return v11;
  }
LABEL_12:
  __break(1u);
  return result;
}

void sub_1D4391D6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1D42BE910();
  sub_1D42B28FC(&qword_1EFE49680);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v0);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE49678);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v1);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE4B950);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v2);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE4E768);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v3);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE55790);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE4E770);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42BE768();
  v7 = sub_1D4519D20();
  MEMORY[0x1E0C80A78](v7);
  sub_1D434799C();
  MEMORY[0x1E0C80A78](v6);
  sub_1D42BE8F8();
  type metadata accessor for SharedReformattedAudioSource.Configuration();
}

void sub_1D4391F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  id v21;
  double v22;
  id v23;
  uint64_t v24;

  v15 = *(_QWORD *)(a1 - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&a9 - v17;
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  v20 = *(_QWORD *)(v13 - 72);
  *(_QWORD *)(v13 - 128) = v10;
  v19(v9, v20, v10);
  v21 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  LODWORD(v22) = 1182400512;
  v23 = objc_msgSend(v21, sel_initWithFloat_, v22);
  v24 = *(_QWORD *)(v13 - 136);
  sub_1D4443168();
  if (!v24)
  {
    *(_QWORD *)(v13 - 328) = a1;
    *(_QWORD *)(v13 - 136) = v15;
    *(_QWORD *)(v13 - 336) = v11;
    objc_msgSend(v23, sel_integerValue);

    sub_1D4398F50(v9, *(_QWORD *)(v13 - 128), (uint64_t)v18);
  }
  (*(void (**)(uint64_t, _QWORD))(v12 + 8))(v9, *(_QWORD *)(v13 - 128));

  sub_1D42BE844();
}

void sub_1D43924E8(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;

  v4 = sub_1D42B28FC(&qword_1EFE4B9A0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  v10 = *a1;
  v11 = (void *)sub_1D451A6C8();
  v12 = objc_msgSend(v10, sel_featureValueForName_, v11);

  if (!v12)
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_1D451AF80();

  v13 = sub_1D42B28FC(&qword_1EFE4C970);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v9, 1, v13) == 1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1D42BE210(&qword_1EFE4B998, &qword_1EFE4C970, MEMORY[0x1E0C9E6C8]);
  v14 = sub_1D451A068();
  v15 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
  v15(v9, v13);
  v16 = (void *)sub_1D451A6C8();
  v17 = objc_msgSend(v10, sel_featureValueForName_, v16);

  if (!v17)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1D451AF80();

  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v7, 1, v13) != 1)
  {
    v18 = sub_1D451A068();
    v15(v7, v13);
    *a2 = v14;
    a2[1] = v18;
    return;
  }
LABEL_9:
  __break(1u);
}

id sub_1D4392710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  unint64_t v10;
  uint64_t v11;
  id v12;

  v7 = sub_1D42B28FC(&qword_1EFE4C970);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1D434799C();
  sub_1D42B28FC((uint64_t *)&unk_1EFE498B0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D45261D0;
  *(_QWORD *)(inited + 32) = a2;
  *(_QWORD *)(inited + 40) = a3;
  v10 = sub_1D437FEC4();
  sub_1D4393144(v3, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  sub_1D42CB6CC();
  v11 = sub_1D451AF8C();
  *(_QWORD *)(inited + 72) = v10;
  *(_QWORD *)(inited + 48) = v11;
  sub_1D451A5E4();
  v12 = objc_allocWithZone(MEMORY[0x1E0C9E8F8]);
  return sub_1D4392954();
}

uint64_t sub_1D4392838(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v5;

  a4();
  if (!v5)
  {
    a5 = a2();
    swift_unknownObjectRelease();
  }
  return a5;
}

void sub_1D43928A4()
{
  sub_1D42BE964();
  MEMORY[0x1D825E41C](&unk_1D4545864);
  sub_1D439309C();
}

void sub_1D43928C8()
{
  sub_1D42BE958();
}

void sub_1D43928D0()
{
  sub_1D42BE810();
  MEMORY[0x1D825E41C](&unk_1D45457BC);
  sub_1D43930C8();
}

void sub_1D43928F4()
{
  sub_1D42BE94C();
}

void sub_1D43928FC()
{
  sub_1D42BE810();
  MEMORY[0x1D825E41C](&unk_1D4545650);
  type metadata accessor for AudioStreamAnalyzerEnvironmentImpl();
}

void sub_1D4392938(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D45457A0, a1);
  sub_1D4393084();
  sub_1D42BE8C8();
}

id sub_1D4392954()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = (void *)sub_1D451A5A8();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_initWithDictionary_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_1D4519AA4();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1D4392A38@<X0>(void *__src@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  _QWORD __dst[11];

  memcpy(__dst, __src, sizeof(__dst));
  result = sub_1D43915B4(__dst);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1D4392A94@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1D4392A38(a1, a2);
}

void sub_1D4392AB8(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1D435C08C(*(void **)(v1 + 32), a1);
}

uint64_t sub_1D4392AD4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D42B28FC(&qword_1EFE49678);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D4392B14()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D4392B3C(uint64_t a1)
{
  uint64_t v1;

  return sub_1D4392838(a1, *(uint64_t (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(void))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1D4392B58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1D4396AC4(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1D4392B70()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  sub_1D437EC8C();
  return swift_deallocObject();
}

uint64_t sub_1D4392BC4()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D4392BEC()
{
  sub_1D42B8F98();
  return swift_deallocObject();
}

uint64_t sub_1D4392C14()
{
  sub_1D42B8F98();
  swift_release();
  return swift_deallocObject();
}

void sub_1D4392C3C()
{
  sub_1D44A5978();
}

uint64_t sub_1D4392C54(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t sub_1D4392C64()
{
  sub_1D42B8F98();
  swift_release();
  return swift_deallocObject();
}

void sub_1D4392C8C()
{
  sub_1D4392C3C();
}

unint64_t sub_1D4392C98()
{
  unint64_t result;

  result = qword_1EFE4E7D8;
  if (!qword_1EFE4E7D8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4533400, &type metadata for SharedSoundPrintK.Output.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4E7D8);
  }
  return result;
}

uint64_t sub_1D4392CD4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_1D42B8B10((uint64_t *)&unk_1EFE4A660);
    v8 = a2;
    result = MEMORY[0x1D825E41C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

void type metadata accessor for SharedSoundPrintK.Configuration.CodingKeys()
{
  JUMPOUT(0x1D825E3A4);
}

uint64_t sub_1D4392D40(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D4392D8C + 4 * byte_1D4532FE4[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D4392DC0 + 4 * byte_1D4532FDF[v4]))();
}

uint64_t sub_1D4392DC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4392DC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4392DD0);
  return result;
}

uint64_t sub_1D4392DDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4392DE4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D4392DE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4392DF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for SharedSoundPrintK.Output.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D4392E48 + 4 * byte_1D4532FEE[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D4392E7C + 4 * byte_1D4532FE9[v4]))();
}

uint64_t sub_1D4392E7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4392E84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4392E8CLL);
  return result;
}

uint64_t sub_1D4392E98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4392EA0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D4392EA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4392EAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SharedSoundPrintK.Output.CodingKeys()
{
  return &type metadata for SharedSoundPrintK.Output.CodingKeys;
}

unint64_t sub_1D4392ECC()
{
  unint64_t result;

  result = qword_1EFE4E870;
  if (!qword_1EFE4E870)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45332D0, &type metadata for SharedSoundPrintK.Output.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4E870);
  }
  return result;
}

void sub_1D4392F08()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D4392F18()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D4392F28()
{
  JUMPOUT(0x1D825E41CLL);
}

unint64_t sub_1D4392F3C()
{
  unint64_t result;

  result = qword_1EFE4E878;
  if (!qword_1EFE4E878)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4533240, &type metadata for SharedSoundPrintK.Output.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4E878);
  }
  return result;
}

unint64_t sub_1D4392F7C()
{
  unint64_t result;

  result = qword_1EFE4E880;
  if (!qword_1EFE4E880)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4533268, &type metadata for SharedSoundPrintK.Output.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4E880);
  }
  return result;
}

id sub_1D4392FB8(uint64_t a1)
{
  return sub_1D4320E5C(a1);
}

uint64_t sub_1D4392FF0(uint64_t a1)
{
  return sub_1D4392B3C(a1);
}

uint64_t sub_1D4393004@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D4392B58(a1);
}

id sub_1D4393018(uint64_t a1)
{
  return sub_1D4320E20(a1);
}

void *sub_1D439302C(void *__src, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char __dst)
{
  return memcpy(&__dst, __src, 0x58uLL);
}

uint64_t sub_1D4393040()
{
  return sub_1D451B688();
}

uint64_t sub_1D4393064()
{
  return sub_1D451B760();
}

void sub_1D4393084()
{
  sub_1D43900F4();
}

void sub_1D439309C()
{
  sub_1D4390218();
}

void sub_1D43930C8()
{
  sub_1D43903BC();
}

uint64_t sub_1D43930DC()
{
  return sub_1D451A3A4();
}

uint64_t sub_1D43930F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1D4393100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void sub_1D4393110()
{
  void *v0;

}

uint64_t sub_1D4393120()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4393144@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_1D439314C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 16) = a2;
  *(_QWORD *)(a1 + 24) = v2;
  return swift_unknownObjectRetain();
}

uint64_t sub_1D4393158(void *a1)
{
  return sub_1D43967BC(a1);
}

void sub_1D4393160()
{
  type metadata accessor for SharedSoundPrintK.Configuration();
}

void sub_1D4393168()
{
  type metadata accessor for SharedSoundPrintK.Configuration.CodingKeys();
}

void sub_1D4393174(uint64_t a1@<X0>, NSString *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  NSString *v7;
  void *v9;
  void *v10;
  int v11;
  void *v12;
  void *v13;
  uint64_t v14;
  objc_class *ObjCClassFromMetadata;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  int v19;
  _BYTE *v20;
  uint64_t v21;
  _UNKNOWN **v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void *, NSString *);
  id v33;
  uint64_t v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  __int128 v67;
  __int128 v68;
  _UNKNOWN **v69;

  v5 = v4;
  v7 = a2;
  v9 = *(void **)a1;
  v10 = *(void **)(a1 + 8);
  v11 = *(unsigned __int8 *)(a1 + 16);
  v12 = v10;
  if (*(_BYTE *)(a1 + 16) && (v12 = *(void **)a1, v11 == 1))
  {
    swift_bridgeObjectRetain();
    v13 = (void *)sub_1D451A6C8();
    sub_1D42B62C8(v9, v10, 1);
    v12 = (void *)sub_1D43941B4();
    v5 = v4;

    if (v4)
      return;
    v59 = (uint64_t)v7;
    swift_bridgeObjectRetain();
    v57 = (uint64_t)v9;
    v14 = (uint64_t)v10;
  }
  else
  {
    v59 = (uint64_t)a2;
    swift_getObjectType();
    ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
    sub_1D42B633C(v9, v10, v11);
    v7 = NSStringFromClass(ObjCClassFromMetadata);
    v57 = sub_1D451A6EC();
    v14 = v16;

  }
  v61 = (uint64_t)v9;
  v62 = (uint64_t)v10;
  LOBYTE(v63) = v11;
  v17 = sub_1D4393BCC((uint64_t)&v61, a3);
  if (!v5)
  {
    v18 = (void *)v17;
    if ((~v17 & 0xF000000000000007) != 0)
    {
      if ((v17 & 0x8000000000000000) != 0)
      {
        v23 = (void *)(v17 & 0x7FFFFFFFFFFFFFFFLL);
        v21 = type metadata accessor for SNSoundPrintFeatureExtractorConfiguration();
        v22 = &off_1E97AC280;
      }
      else
      {
        v21 = type metadata accessor for SNLogMelBasedFeatureExtractorConfiguration();
        v22 = &off_1E97AC2A8;
        v23 = v18;
      }
      *((_QWORD *)&v68 + 1) = v21;
      v69 = v22;
      *(_QWORD *)&v67 = v23;
      v24 = sub_1D42E33E0(&v67, (uint64_t)&v61);
      sub_1D4394174(v24, v25, v26, v27, v28, v29, v30, v31, v50, v52, v54, v14, v57, v59, v61, v62, v63, v64);
      v32 = (uint64_t (*)(void *, NSString *))v7[1];
      v33 = v23;
      v34 = v32(v9, v7);
      v36 = v35;
      sub_1D4394174(v34, v37, v38, v39, v40, v41, v42, v43, v51, v53, v55, v56, v58, v60, v61, v62, v63, v64);
      v19 = ((uint64_t (*)(void *, NSString *))v7[2])(v9, v7);
      v44 = v64;
      v45 = v65;
      sub_1D42B5528(&v61, v64);
      LODWORD(v45) = (*(uint64_t (**)(uint64_t, unint64_t))(v45 + 24))(v44, v45);
      sub_1D42B5400((uint64_t)&v61);
    }
    else
    {
      v69 = 0;
      v67 = 0u;
      v68 = 0u;
      sub_1D4393D30((uint64_t)&v67);
      sub_1D4394184();
      sub_1D43941AC(v12);
      if ((v64 & 1) != 0)
      {
LABEL_16:
        sub_1D42B7F2C();
        sub_1D42B6D0C();
        *v20 = 0;
        sub_1D4312028();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
      v19 = v63;
      if ((v63 & 0x8000000000000000) != 0 || HIDWORD(v63))
        goto LABEL_25;
      if ((v62 & 1) != 0 || (v66 & 1) != 0)
        goto LABEL_16;
      v49 = v61;
      v45 = v65;
      swift_bridgeObjectRelease();
      if ((v45 & 0x8000000000000000) != 0 || HIDWORD(v45))
      {
LABEL_25:
        sub_1D42DCED4();
        sub_1D43074E8();
        __break(1u);
        return;
      }
      v36 = (double)v49;
    }
    v46 = sub_1D451A6C8();
    swift_bridgeObjectRelease();
    v47 = sub_1D451A6EC();
    *(_QWORD *)a4 = v12;
    *(_QWORD *)(a4 + 8) = v46;
    *(_QWORD *)(a4 + 16) = v47;
    *(_QWORD *)(a4 + 24) = v48;
    *(double *)(a4 + 32) = v36;
    *(_DWORD *)(a4 + 40) = v19;
    *(_DWORD *)(a4 + 44) = v45;
    *(_QWORD *)(a4 + 48) = v18;
    return;
  }
  swift_unknownObjectRelease();
LABEL_8:
  swift_bridgeObjectRelease();
}

uint64_t sub_1D43934D4(uint64_t result, unsigned int a2, unsigned int a3, double a4)
{
  char v5;
  char *v6;
  double v7;
  unsigned int v8;
  BOOL v9;
  unsigned int v10;

  if (a4 < 0.0 || a4 >= 1.0)
  {
    v5 = 0;
LABEL_11:
    sub_1D4393FF0();
    sub_1D42B6D0C();
    *v6 = v5;
    return sub_1D4312028();
  }
  if (a2 - 1 >= result)
  {
    v5 = 1;
    goto LABEL_11;
  }
  if (!a3 || a2 % a3)
  {
    v5 = 2;
    goto LABEL_11;
  }
  v7 = (double)result * a4;
  if ((~*(_QWORD *)&v7 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v7 <= -1.0)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v7 >= 4294967300.0)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = result - v7;
  if (result < v7)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  v9 = v8 >= v8 % a3;
  v10 = v8 - v8 % a3;
  if (!v9)
    goto LABEL_25;
  if (v10 <= a2)
    return a2;
  else
    return v10;
}

uint64_t sub_1D43935C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  id v6;
  uint64_t v7;

  v2 = sub_1D451A6EC();
  v4 = sub_1D439CEF0(v2, v3);
  if (v1)
  {
    sub_1D42CB208();
  }
  else
  {
    v5 = v4;
    sub_1D42CB208();
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E958]), sel_init);
    sub_1D439C424(v5, v6);
    v0 = v7;

  }
  return v0;
}

uint64_t sub_1D4393650(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t result;
  void *v7;

  if (*(_BYTE *)(a2 + 24))
    v3 = 15360;
  else
    v3 = *(_QWORD *)(a2 + 16);
  if ((v3 & 0x8000000000000000) != 0 || HIDWORD(v3))
    goto LABEL_14;
  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(unsigned __int8 *)(a2 + 40);
  result = sub_1D43934D4(v3, 1u, 1u, 0.5);
  if (v2)
    return result;
  if (v5)
    v4 = result;
  if ((v4 & 0x8000000000000000) != 0 || HIDWORD(v4))
  {
LABEL_14:
    sub_1D42DCED4();
    result = sub_1D43074E8();
    __break(1u);
    return result;
  }
  objc_allocWithZone((Class)type metadata accessor for SNSoundPrintFeatureExtractorConfiguration());
  v7 = (void *)swift_unknownObjectRetain();
  result = (uint64_t)sub_1D44BBA14(v7, v3, v4);
  if (!result)
  {
    __break(1u);
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_1D439377C()
{
  uint64_t v0;

  sub_1D42B28FC((uint64_t *)&unk_1EFE40328);
  sub_1D4393F8C();
  v0 = sub_1D451A5E4();
  swift_isUniquelyReferenced_nonNull_native();
  sub_1D42E826C((uint64_t)sub_1D4393FC8, 0, 0);
  sub_1D439418C();
  swift_isUniquelyReferenced_nonNull_native();
  sub_1D42E826C((uint64_t)sub_1D4393FDC, 0, 1);
  sub_1D439418C();
  return v0;
}

uint64_t sub_1D4393828@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  unint64_t v4;
  int v5;
  uint64_t result;
  void *v7;

  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(unsigned __int8 *)(a1 + 40);
  result = sub_1D43934D4(15360, 0x140u, 0xA0u, 0.5);
  if (!v2)
  {
    if (v5)
      v4 = result;
    if ((v4 & 0x8000000000000000) == 0 && !HIDWORD(v4))
    {
      objc_allocWithZone((Class)type metadata accessor for SNLogMelBasedFeatureExtractorConfiguration());
      v7 = (void *)swift_unknownObjectRetain();
      result = (uint64_t)sub_1D4342A54(v7, v4);
      if (result)
      {
        *a2 = result;
        return result;
      }
      __break(1u);
    }
    result = sub_1D451B550();
    __break(1u);
  }
  return result;
}

uint64_t sub_1D4393954@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t result;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  __int128 v20;

  v5 = *a1;
  v6 = *((_BYTE *)a2 + 8);
  v7 = *((_BYTE *)a2 + 9);
  v8 = a2[2];
  v9 = *((_BYTE *)a2 + 24);
  v10 = a2[4];
  v11 = *((_BYTE *)a2 + 40);
  v13 = *a2;
  v14 = v6;
  v15 = v7;
  v16 = v8;
  v17 = v9;
  v18 = v10;
  v19 = v11;
  v20 = *((_OWORD *)a2 + 3);
  result = sub_1D4393650(v5, (uint64_t)&v13);
  if (!v3)
    *a3 = result | 0x8000000000000000;
  return result;
}

uint64_t sub_1D43939D0(char a1, uint64_t *a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  int v6;
  char v7;
  char v8;
  uint64_t v9;
  void (*v10)(uint64_t *__return_ptr, uint64_t *, uint64_t *);
  void (*v11)(uint64_t *__return_ptr, uint64_t *, uint64_t *);
  char v12;
  uint64_t v13;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v5 = *a2;
  v6 = a1 & 1;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *((_BYTE *)a2 + 9);
  v25 = a2[2];
  v24 = *((_BYTE *)a2 + 24);
  v23 = a2[4];
  v22 = *((_BYTE *)a2 + 40);
  v20 = a2[7];
  v21 = a2[6];
  v9 = sub_1D439377C();
  sub_1D436485C(v6, v9);
  v11 = v10;
  swift_bridgeObjectRelease();
  if (v11)
  {
    if (v6)
      v12 = 34;
    else
      v12 = 21;
    sub_1D439C424(v12, a3);
    if (v3)
    {
      return sub_1D43941C0();
    }
    else
    {
      v27 = v5;
      v28 = v7;
      v29 = v8;
      v30 = v25;
      v31 = v24;
      v32 = v23;
      v33 = v22;
      v34 = v21;
      v35 = v20;
      v36 = v13;
      v11(&v26, &v36, &v27);
      sub_1D43941C0();
      swift_unknownObjectRelease();
      return v26;
    }
  }
  else
  {
    type metadata accessor for SNError();
    v27 = 0;
    sub_1D451B400();
    sub_1D451A794();
    LOBYTE(v36) = v6;
    sub_1D451B514();
    v15 = sub_1D4394198();
    sub_1D43EC59C(v15, v16, v17, v18, v19, 0xE000000000000000);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
}

unint64_t sub_1D4393BCC(uint64_t a1, void *a2)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  int v6;
  void *v7;
  void *v8;
  char v9;
  char v10;
  void *v11;
  void *v12;
  _QWORD v14[2];
  char v15;
  uint64_t v16;

  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    if (v6 == 1)
    {
      swift_bridgeObjectRetain();
      v7 = (void *)sub_1D451A6C8();
      sub_1D43941CC(v4);
      v8 = sub_1D439C864(v7);
      v10 = v9;
      v12 = v11;

      if (v2)
        return (unint64_t)a2;

    }
    else
    {
      v10 = *(_BYTE *)(a1 + 16);
    }
  }
  else
  {
    v10 = v4 & 1;
  }
  v14[0] = v4;
  v14[1] = v5;
  v15 = v6;
  sub_1D4393D70((uint64_t)v14, (uint64_t)&v16);
  if (!v2)
  {
    if (v10 == 2)
    {
      sub_1D42CB208();
      return 0xF000000000000007;
    }
    else
    {
      a2 = (void *)sub_1D43939D0(v10 & 1, &v16, a2);
      sub_1D42CB208();
    }
  }
  return (unint64_t)a2;
}

uint64_t sub_1D4393D30(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D42B28FC(&qword_1EFE4E888);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1D4393D70(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  __int128 v14;

  if (*(_BYTE *)(a1 + 16))
  {
    v4 = *(void **)a1;
    if (*(_BYTE *)(a1 + 16) == 1)
    {
      swift_bridgeObjectRetain();
      v5 = (void *)sub_1D451A6C8();
      sub_1D43941CC(v4);
      v6 = (id)sub_1D43941B4();

      if (v2)
        return;
      goto LABEL_7;
    }
  }
  else
  {
    v4 = *(void **)(a1 + 8);
  }
  v6 = v4;
LABEL_7:
  sub_1D4394184();
  sub_1D43941AC(v6);
  swift_unknownObjectRelease();
  if (!v2)
  {
    *(_QWORD *)a2 = v7;
    *(_BYTE *)(a2 + 8) = v8;
    *(_BYTE *)(a2 + 9) = v9;
    *(_QWORD *)(a2 + 16) = v10;
    *(_BYTE *)(a2 + 24) = v11;
    *(_QWORD *)(a2 + 32) = v12;
    *(_BYTE *)(a2 + 40) = v13;
    *(_OWORD *)(a2 + 48) = v14;
  }
}

uint64_t sub_1D4393E6C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v12;

  v3 = sub_1D4394184();
  sub_1D43941AC(a1);
  if (!v1)
  {
    swift_bridgeObjectRelease();
    if (v12 == 2)
    {
      v3 = type metadata accessor for SNError();
      v4 = sub_1D4394198();
      sub_1D43EC59C(v4, v5, v6, v7, v8, v9);
      sub_1D4312028();
    }
    else
    {
      v3 = v12 & 1;
      v10 = swift_dynamicCastObjCProtocolUnconditional();
      swift_getObjectType();
      sub_1D439402C();
      sub_1D42F1134(v10);
      swift_unknownObjectRetain();
    }
  }
  return v3;
}

unint64_t sub_1D4393F8C()
{
  unint64_t result;

  result = qword_1EFE40450;
  if (!qword_1EFE40450)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4533FE8, &type metadata for SNFeatureExtractorIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EFE40450);
  }
  return result;
}

uint64_t sub_1D4393FC8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_1D4393828(a1, a2);
}

uint64_t sub_1D4393FDC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, unint64_t *a3@<X8>)
{
  return sub_1D4393954(a1, a2, a3);
}

unint64_t sub_1D4393FF0()
{
  unint64_t result;

  result = qword_1EFE4E890;
  if (!qword_1EFE4E890)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4533500, &type metadata for SNSoundDetectionUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4E890);
  }
  return result;
}

unint64_t sub_1D439402C()
{
  unint64_t result;

  result = qword_1EFE404C0;
  if (!qword_1EFE404C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFE404C0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SNSoundDetectionUtils.DomainError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D43940B4 + 4 * byte_1D4533455[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D43940E8 + 4 * byte_1D4533450[v4]))();
}

uint64_t sub_1D43940E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43940F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D43940F8);
  return result;
}

uint64_t sub_1D4394104(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D439410CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D4394110(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4394118(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SNSoundDetectionUtils.DomainError()
{
  return &type metadata for SNSoundDetectionUtils.DomainError;
}

unint64_t sub_1D4394138()
{
  unint64_t result;

  result = qword_1EFE4E898;
  if (!qword_1EFE4E898)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45334D8, &type metadata for SNSoundDetectionUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4E898);
  }
  return result;
}

_QWORD *sub_1D4394174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return sub_1D42B5528(&a15, a18);
}

uint64_t sub_1D4394184()
{
  return type metadata accessor for SNModelMetadataUtils();
}

uint64_t sub_1D439418C()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_1D4394198()
{
  return 0xD000000000000017;
}

void sub_1D43941AC(void *a1)
{
  sub_1D44C91CC(a1);
}

uint64_t sub_1D43941B4()
{
  return sub_1D43935C0();
}

uint64_t sub_1D43941C0()
{
  uint64_t v0;

  return sub_1D42B7F68(v0);
}

void sub_1D43941CC(void *a1)
{
  void *v1;

  sub_1D42B62C8(a1, v1, 1);
}

uint64_t sub_1D43941D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t);
  int v12;
  uint64_t v14;
  os_log_type_t v15;
  NSObject *v16;
  uint8_t *v17;
  uint64_t v18;

  v2 = v1;
  sub_1D42B28FC(&qword_1EFE4E8D0);
  sub_1D42BE838();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t)&v7[*(int *)(v5 + 48)];
  v9 = sub_1D4519EAC();
  v10 = *(_QWORD *)(v9 - 8);
  sub_1D4396520((uint64_t)v7, v2);
  sub_1D4396520(v8, a1);
  v11 = *(uint64_t (**)(char *, uint64_t))(v10 + 88);
  v12 = v11(v7, v9);
  if (v12 == *MEMORY[0x1E0D46498]
    || v12 == *MEMORY[0x1E0D46410]
    || v12 == *MEMORY[0x1E0D46390]
    || v12 == *MEMORY[0x1E0D46388]
    || v12 == *MEMORY[0x1E0D463A8]
    || v12 == *MEMORY[0x1E0D46438]
    || v12 == *MEMORY[0x1E0D46480]
    || v12 == *MEMORY[0x1E0D464B0]
    || v12 == *MEMORY[0x1E0D46488]
    || v12 == *MEMORY[0x1E0D463D0]
    || v12 == *MEMORY[0x1E0D46460]
    || v12 == *MEMORY[0x1E0D46468]
    || v12 == *MEMORY[0x1E0D463B0]
    || v12 == *MEMORY[0x1E0D46400]
    || v12 == *MEMORY[0x1E0D464C8]
    || v12 == *MEMORY[0x1E0D46440]
    || v12 == *MEMORY[0x1E0D46458]
    || v12 == *MEMORY[0x1E0D464A0]
    || v12 == *MEMORY[0x1E0D463C0]
    || v12 == *MEMORY[0x1E0D46470]
    || v12 == *MEMORY[0x1E0D464B8]
    || v12 == *MEMORY[0x1E0D463D8]
    || v12 == *MEMORY[0x1E0D46430]
    || v12 == *MEMORY[0x1E0D463A0]
    || v12 == *MEMORY[0x1E0D46378]
    || v12 == *MEMORY[0x1E0D46448]
    || v12 == *MEMORY[0x1E0D46418]
    || v12 == *MEMORY[0x1E0D46420]
    || v12 == *MEMORY[0x1E0D46398]
    || v12 == *MEMORY[0x1E0D46428]
    || v12 == *MEMORY[0x1E0D46408]
    || v12 == *MEMORY[0x1E0D464A8]
    || v12 == *MEMORY[0x1E0D463C8]
    || v12 == *MEMORY[0x1E0D463F0]
    || v12 == *MEMORY[0x1E0D463E8]
    || v12 == *MEMORY[0x1E0D463E0]
    || v12 == *MEMORY[0x1E0D46380]
    || v12 == *MEMORY[0x1E0D463B8]
    || v12 == *MEMORY[0x1E0D46478]
    || v12 == *MEMORY[0x1E0D464C0]
    || v12 == *MEMORY[0x1E0D463F8]
    || v12 == *MEMORY[0x1E0D46450])
  {
    if (v11((char *)v8, v9) == v12)
    {
      sub_1D4396518(v8);
      sub_1D4396518((uint64_t)v7);
      return 1;
    }
    sub_1D4396518((uint64_t)v7);
    sub_1D4396518(v8);
  }
  else
  {
    if (qword_1EFE40338 != -1)
      swift_once();
    v14 = sub_1D451A014();
    sub_1D42CC880(v14, (uint64_t)qword_1EFEA7700);
    v15 = sub_1D451AF5C();
    v16 = sub_1D4519FFC();
    if (os_log_type_enabled(v16, v15))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_1D42A7000, v16, v15, "Unexpected neural network layer kind", v17, 2u);
      MEMORY[0x1D825E524](v17, -1, -1);
    }

    sub_1D42BDFDC((uint64_t)v7, &qword_1EFE4E8D0);
  }
  return 0;
}

uint64_t sub_1D43946E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D42BE910();
  v16 = v2;
  v17 = v3;
  v5 = v4;
  v7 = v6;
  v8 = sub_1D4519BC4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1D43479B4();
  v10 = sub_1D4519F60();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v1, v5, v8);
  sub_1D4519F30();
  if (v0)
    return sub_1D43964E8();
  sub_1D43964E8();
  return sub_1D438E938(v7, (uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32));
}

void sub_1D43947CC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  uint64_t v21;
  BOOL v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, unint64_t, uint64_t);

  v8 = sub_1D4519DBC();
  v9 = *(_QWORD *)(v8 - 8);
  v40 = v8;
  v41 = v9;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v10);
  sub_1D42F1ED4();
  sub_1D42B28FC(&qword_1EFE4E8E8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v11);
  sub_1D43964BC();
  v12 = sub_1D4519F0C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1D4519F54();
  v17 = *(_QWORD *)(v16 + 16);
  if (!v17)
  {
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  v38 = a3;
  v18 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v37[1] = v16;
  v19 = v16 + v18;
  v39 = *MEMORY[0x1E0D462B8];
  v42 = *(_QWORD *)(v13 + 72);
  v43 = a1;
  v20 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
  v44 = v13;
  v45 = v20;
  do
  {
    v45(v15, v19, v12);
    v22 = sub_1D4519EF4() == a1 && v21 == a2;
    if (v22)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v23 = sub_1D451B820();
      swift_bridgeObjectRelease();
      if ((v23 & 1) == 0)
      {
        sub_1D43965AC(*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8));
        a1 = v43;
        goto LABEL_16;
      }
    }
    sub_1D4519F00();
    v24 = v40;
    v25 = v41;
    v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 88))(v3, v40);
    if (v26 == v39)
    {
      sub_1D4340B5C(v3, *(uint64_t (**)(uint64_t, uint64_t))(v25 + 96));
      v27 = sub_1D4396548();
      sub_1D43965D8(v4, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32));
      sub_1D43965CC(v4, 0);
    }
    else
    {
      v28 = v15;
      v29 = v12;
      v30 = a2;
      v31 = v24;
      v27 = sub_1D4396548();
      sub_1D43965CC(v4, 1);
      v32 = v31;
      a2 = v30;
      v12 = v29;
      v15 = v28;
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v3, v32);
    }
    a1 = v43;
    sub_1D43965AC(*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8));
    sub_1D4396548();
    sub_1D4340834(v4, 1, v27);
    if (!v22)
    {
      swift_bridgeObjectRelease();
      v33 = v38;
      sub_1D43965D8(v38, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32));
      v34 = v33;
      v35 = 0;
      v36 = v27;
      goto LABEL_20;
    }
    sub_1D42BDFDC(v4, &qword_1EFE4E8E8);
LABEL_16:
    v19 += v42;
    --v17;
  }
  while (v17);
  swift_bridgeObjectRelease();
  a3 = v38;
LABEL_19:
  v36 = sub_1D4396548();
  v34 = a3;
  v35 = 1;
LABEL_20:
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v34, v35, 1, v36);
  sub_1D42CB520();
}

void sub_1D4394A74(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t, uint64_t);
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  void (*v51)(void (*)(uint64_t, uint64_t), unint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t);
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v89 = a3;
  v90 = a4;
  v88 = a2;
  v79 = a5;
  v8 = sub_1D4519F60();
  v87 = *(_QWORD *)(v8 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  sub_1D43479B4();
  v10 = sub_1D42B28FC(&qword_1EFE4E8B8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v11);
  sub_1D42BE768();
  v83 = v12;
  sub_1D42B28FC(&qword_1EFE4E8C0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v13);
  sub_1D432D380();
  v16 = (unint64_t *)(v14 - v15);
  MEMORY[0x1E0C80A78](v17);
  v19 = (uint64_t *)((char *)&v69 - v18);
  sub_1D42B28FC((uint64_t *)&unk_1EFE51200);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v20);
  sub_1D42BA15C();
  v84 = v21;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v22);
  v74 = (char *)&v69 - v23;
  sub_1D43965F4();
  v91 = sub_1D4519ED0();
  v85 = *(_QWORD *)(v91 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v24);
  v72 = (char *)&v69 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v26);
  v73 = (char *)&v69 - v27;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v28);
  v30 = (void (*)(uint64_t, uint64_t))((char *)&v69 - v29);
  v75 = sub_1D4519F24();
  v81 = *(_QWORD *)(v75 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v31);
  sub_1D42BE768();
  v80 = v32;
  sub_1D43965F4();
  v82 = sub_1D4519F6C();
  sub_1D4396480();
  MEMORY[0x1E0C80A78](v33);
  sub_1D432D380();
  v36 = v34 - v35;
  MEMORY[0x1E0C80A78](v37);
  v39 = (char *)&v69 - v38;
  v76 = a1;
  sub_1D4519F48();
  v40 = v82;
  v41 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v78 = v39;
  sub_1D43965D8(v36, (uint64_t)v39, v41);
  v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(v36, v40);
  v43 = *MEMORY[0x1E0D46570];
  v86 = v8;
  v77 = v5;
  if (v42 == v43)
  {
    sub_1D4340B5C(v36, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 96));
    v44 = v75;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 32))(v80, v36, v75);
    v45 = sub_1D4519F18();
    v46 = *(_QWORD *)(v45 + 16);
    v47 = v87;
    if (v46)
    {
      v69 = v16;
      v70 = v6;
      v48 = (*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
      v71 = v45;
      v49 = v45 + v48;
      v50 = *(_QWORD *)(v85 + 72);
      v51 = *(void (**)(void (*)(uint64_t, uint64_t), unint64_t, uint64_t))(v85 + 16);
      v52 = (uint64_t)v74;
      v53 = v91;
      while (1)
      {
        v51(v30, v49, v53);
        sub_1D43955BC(v30, v88, v89, v90, v52);
        (*(void (**)(_QWORD, uint64_t))(v85 + 8))(v30, v53);
        sub_1D4340834(v52, 1, v53);
        if (!v54)
          break;
        sub_1D42BDFDC(v52, (uint64_t *)&unk_1EFE51200);
        v49 += v50;
        if (!--v46)
        {
          swift_bridgeObjectRelease();
          v6 = v70;
          v16 = v69;
          v5 = v77;
          v44 = v75;
          goto LABEL_10;
        }
      }
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v80, v75);
      sub_1D4396470();
      v64 = *(void (**)(char *, uint64_t, uint64_t))(v85 + 32);
      v65 = v73;
      v66 = v73;
      v67 = v52;
LABEL_26:
      v68 = v91;
      v64(v66, v67, v91);
      v63 = v79;
      v64((char *)v79, (uint64_t)v65, v68);
      v62 = 0;
LABEL_27:
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v63, v62, 1, v91);
      sub_1D42CB520();
      return;
    }
    swift_bridgeObjectRelease();
    v5 = v77;
LABEL_10:
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v80, v44);
  }
  else
  {
    sub_1D4340B5C(v36, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    v47 = v87;
  }
  v87 = sub_1D4519F3C();
  v55 = *(_QWORD *)(v87 + 16);
  if (v55 == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v78, v82);
    sub_1D43965C4();
LABEL_25:
    v62 = 1;
    v63 = v79;
    goto LABEL_27;
  }
  v56 = 0;
  v57 = v84;
  while (1)
  {
    if (v56 == v55)
    {
      v58 = 1;
      v56 = v55;
      goto LABEL_18;
    }
    if (v56 >= *(_QWORD *)(v87 + 16))
      break;
    v59 = v83 + *(int *)(v10 + 48);
    sub_1D4340BD4(v59, v87+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(_QWORD *)(v47 + 72) * v56, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 16));
    v60 = (uint64_t)v16 + *(int *)(v10 + 48);
    *v16 = v56;
    sub_1D4340BD4(v60, v59, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 32));
    v58 = 0;
    ++v56;
    v57 = v84;
LABEL_18:
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v16, v58, 1, v10);
    sub_1D4377088((uint64_t)v16, (uint64_t)v19, &qword_1EFE4E8C0);
    sub_1D4340834((uint64_t)v19, 1, v10);
    if (v54)
    {
      sub_1D43965C4();
      sub_1D4396470();
      goto LABEL_25;
    }
    v61 = *v19;
    sub_1D4340BD4(v6, (uint64_t)v19 + *(int *)(v10 + 48), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 32));
    if (v61)
    {
      sub_1D4394A74(v6, v88, v89, v90);
      sub_1D43964D8();
      sub_1D4340834(v57, 1, v91);
      if (!v54)
      {
        sub_1D43965C4();
        sub_1D4396470();
        v64 = *(void (**)(char *, uint64_t, uint64_t))(v85 + 32);
        v65 = v72;
        v66 = v72;
        v67 = v57;
        goto LABEL_26;
      }
      sub_1D42BDFDC(v57, (uint64_t *)&unk_1EFE51200);
    }
    else
    {
      sub_1D43964D8();
    }
  }
  __break(1u);
}

void sub_1D4394FEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1D42BE910();
  sub_1D42B28FC(&qword_1EFE4E8A0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v2);
  sub_1D43963EC(v3, v8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D4396454();
  sub_1D4396560();
  MEMORY[0x1E0C80A78](v5);
  sub_1D43408A0();
  MEMORY[0x1E0C80A78](v6);
  sub_1D43963C4();
  sub_1D4519E58();
  sub_1D4396480();
  MEMORY[0x1E0C80A78](v7);
  sub_1D439639C();
  if (sub_1D4396550() == *MEMORY[0x1E0D46398])
  {
    sub_1D4396538();
    sub_1D4396428(*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v0 + 32));
    sub_1D4519E28();
    sub_1D4519E40();
    sub_1D4519DC8();
    sub_1D439640C();
    sub_1D4519E34();
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v9, 1, v1) == 1)
    {
      sub_1D43963B8(*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8));
      sub_1D42BDFDC(v9, &qword_1EFE4E8A0);
    }
    else
    {
      sub_1D4519DC8();
      sub_1D43963B8(*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8));
      sub_1D43965A0();
    }
  }
  else
  {
    sub_1D43964F8();
    sub_1D4519E4C();
    sub_1D4396490();
    sub_1D43964A4();
    sub_1D43963D8();
    sub_1D42B28FC(&qword_1EFE4E8B0);
    sub_1D4396438();
    sub_1D43965EC();
    swift_willThrow();
    sub_1D43965E0();
  }
  sub_1D4396588();
  sub_1D42BE844();
}

void sub_1D4395188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1D42BE910();
  sub_1D42B28FC(&qword_1EFE4E8A0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v2);
  sub_1D43963EC(v3, v8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D4396454();
  sub_1D4396560();
  MEMORY[0x1E0C80A78](v5);
  sub_1D43408A0();
  MEMORY[0x1E0C80A78](v6);
  sub_1D43963C4();
  sub_1D4519E94();
  sub_1D4396480();
  MEMORY[0x1E0C80A78](v7);
  sub_1D439639C();
  if (sub_1D4396550() == *MEMORY[0x1E0D463A0])
  {
    sub_1D4396538();
    sub_1D4396428(*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v0 + 32));
    sub_1D4519E64();
    sub_1D4519E7C();
    sub_1D4519DC8();
    sub_1D439640C();
    sub_1D4519E70();
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v9, 1, v1) == 1)
    {
      sub_1D43963B8(*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8));
      sub_1D42BDFDC(v9, &qword_1EFE4E8A0);
    }
    else
    {
      sub_1D4519DC8();
      sub_1D43963B8(*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8));
      sub_1D43965A0();
    }
  }
  else
  {
    sub_1D43964F8();
    sub_1D4519E88();
    sub_1D4396490();
    sub_1D43964A4();
    sub_1D43963D8();
    sub_1D42B28FC(&qword_1EFE4E8B0);
    sub_1D4396438();
    sub_1D43965EC();
    swift_willThrow();
    sub_1D43965E0();
  }
  sub_1D4396588();
  sub_1D42BE844();
}

uint64_t type metadata accessor for ModelFeatureExtractorError(uint64_t a1)
{
  return sub_1D42BFA18(a1, (uint64_t *)&unk_1EFE4E8F0);
}

unint64_t sub_1D4395338()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFE4E8A8;
  if (!qword_1EFE4E8A8)
  {
    v1 = type metadata accessor for ModelFeatureExtractorError(255);
    result = MEMORY[0x1D825E41C](&unk_1D4533578, v1);
    atomic_store(result, (unint64_t *)&qword_1EFE4E8A8);
  }
  return result;
}

uint64_t sub_1D4395378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  sub_1D42BE910();
  sub_1D42B28FC(&qword_1EFE4E8A0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42F1ED4();
  v20 = sub_1D4519DD4();
  sub_1D4396480();
  MEMORY[0x1E0C80A78](v6);
  sub_1D43964BC();
  v7 = sub_1D4519EAC();
  sub_1D4396560();
  MEMORY[0x1E0C80A78](v8);
  sub_1D432D380();
  v11 = v9 - v10;
  MEMORY[0x1E0C80A78](v12);
  sub_1D43963C4();
  v21 = *(_QWORD *)(sub_1D4519E1C() - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v13);
  sub_1D439639C();
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v0, v7) == *MEMORY[0x1E0D46498])
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 96))(v0, v7);
    sub_1D4396428(*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v21 + 32));
    sub_1D4519E10();
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v2, 1, v20) == 1)
    {
      v14 = sub_1D42BDFDC(v2, &qword_1EFE4E8A0);
      v15 = MEMORY[0x1D825B740](v14);
    }
    else
    {
      v18 = sub_1D438E938(v3, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
      v15 = MEMORY[0x1D825B740](v18);
      sub_1D4519DC8();
      (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v3, v20);
    }
    sub_1D43963B8(*(uint64_t (**)(uint64_t, _QWORD))(v21 + 8));
  }
  else
  {
    v16 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v16(v0, v7);
    sub_1D4519EA0();
    sub_1D43964A4();
    sub_1D43963D8();
    v15 = v17;
    sub_1D42B28FC(&qword_1EFE4E8B0);
    sub_1D438E938(v15, v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
    sub_1D43965EC();
    swift_willThrow();
    v16(v11, v7);
  }
  return v15;
}

void sub_1D43955BC(void (*a1)(uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  BOOL v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  void (*v65)(char *, uint64_t, uint64_t);
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t, uint64_t);

  v86 = a4;
  v82 = (char *)a5;
  sub_1D42B28FC(&qword_1EFE4E8C8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  sub_1D42BE768();
  v72 = v10;
  sub_1D43965F4();
  v11 = sub_1D4519EE8();
  v12 = *(_QWORD *)(v11 - 8);
  v75 = v11;
  v76 = v12;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v13);
  sub_1D42BA15C();
  v69 = v14;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v15);
  v73 = (char *)&v67 - v16;
  sub_1D42B28FC((uint64_t *)&unk_1EFE51200);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v17);
  sub_1D42BA15C();
  v70 = v18;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v19);
  sub_1D43963C4();
  v20 = sub_1D4519DF8();
  v21 = *(_QWORD *)(v20 - 8);
  v79 = v20;
  v80 = v21;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v22);
  sub_1D42BE768();
  v83 = v23;
  sub_1D43965F4();
  v24 = sub_1D4519EAC();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  sub_1D42BA15C();
  v81 = v26;
  sub_1D432D374();
  v28 = MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&v67 - v29;
  MEMORY[0x1E0C80A78](v28);
  v32 = (char *)&v67 - v31;
  v33 = sub_1D4519ED0();
  v34 = *(_QWORD *)(v33 - 8);
  v84 = v33;
  v85 = v34;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v35);
  v68 = (char *)&v67 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v37);
  v71 = (char *)&v67 - v38;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)&v67 - v40;
  v87 = a1;
  v43 = sub_1D4519EC4() == a2 && v42 == a3;
  v77 = a2;
  v78 = a3;
  v74 = v5;
  if (v43)
    v44 = 1;
  else
    v44 = sub_1D451B820();
  swift_bridgeObjectRelease();
  v45 = v84;
  sub_1D4396520((uint64_t)v41, (uint64_t)v87);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v32, v86, v24);
  if ((v44 & 1) == 0)
  {
    sub_1D4396570((uint64_t)v32);
    sub_1D4396578();
    v47 = v83;
LABEL_12:
    v50 = v81;
    sub_1D4519EB8();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v25 + 88))(v50, v24) == *MEMORY[0x1E0D46450])
    {
      (*(void (**)(uint64_t, uint64_t))(v25 + 96))(v50, v24);
      v51 = v50;
      v52 = v79;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 32))(v47, v51, v79);
      v53 = v73;
      sub_1D4519DE0();
      v54 = v74;
      v55 = v45;
      sub_1D43965B8(v74);
      v56 = *(void (**)(char *, uint64_t))(v76 + 8);
      v57 = v53;
      v58 = v75;
      v56(v57, v75);
      sub_1D4340834(v54, 1, v45);
      if (!v43)
      {
        (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v47, v52);
        v60 = *(void (**)(char *, uint64_t, uint64_t))(v85 + 32);
        v61 = v71;
        v60(v71, v54, v55);
        v48 = (uint64_t)v82;
        v60(v82, (uint64_t)v61, v55);
        v49 = 0;
        v45 = v55;
        goto LABEL_20;
      }
      v87 = (void (*)(uint64_t, uint64_t))v56;
      sub_1D42BDFDC(v54, (uint64_t *)&unk_1EFE51200);
      v59 = v72;
      sub_1D4519DEC();
      sub_1D4340834(v59, 1, v58);
      if (v43)
      {
        sub_1D4396528();
        sub_1D42BDFDC(v59, &qword_1EFE4E8C8);
        v49 = 1;
        v48 = (uint64_t)v82;
        v45 = v84;
        goto LABEL_20;
      }
      v62 = v69;
      sub_1D4340BD4(v69, v59, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v76 + 32));
      v63 = v70;
      sub_1D43965B8(v70);
      v87(v62, v58);
      sub_1D4396528();
      v45 = v84;
      sub_1D4340834(v63, 1, v84);
      if (!v64)
      {
        v65 = *(void (**)(char *, uint64_t, uint64_t))(v85 + 32);
        v66 = v68;
        v65(v68, v63, v45);
        v48 = (uint64_t)v82;
        v65(v82, (uint64_t)v66, v45);
        goto LABEL_10;
      }
      sub_1D42BDFDC(v63, (uint64_t *)&unk_1EFE51200);
    }
    else
    {
      sub_1D4396570(v50);
    }
    v49 = 1;
    v48 = (uint64_t)v82;
    goto LABEL_20;
  }
  sub_1D4519EB8();
  v46 = sub_1D43941D8((uint64_t)v32);
  sub_1D4396570((uint64_t)v30);
  sub_1D4396570((uint64_t)v32);
  sub_1D4396578();
  v47 = v83;
  if ((v46 & 1) == 0)
    goto LABEL_12;
  v48 = (uint64_t)v82;
  sub_1D4396520((uint64_t)v82, (uint64_t)v87);
LABEL_10:
  v49 = 0;
LABEL_20:
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v48, v49, 1, v45);
  sub_1D42CB520();
}

uint64_t sub_1D4395A8C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v32 = a2;
  v33 = a3;
  v31 = a1;
  v28 = a4;
  v4 = sub_1D42B28FC((uint64_t *)&unk_1EFE51200);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D4519ED0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D42B28FC(&qword_1EFE4E8D8);
  MEMORY[0x1E0C80A78](v11);
  v30 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D42B28FC(&qword_1EFE4E8E0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (unint64_t *)((char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v28 - v17;
  result = sub_1D4519EDC();
  v20 = 0;
  v21 = *(_QWORD *)(result + 16);
  v34 = result;
  v35 = v7;
  v29 = v10;
  while (1)
  {
    if (v20 == v21)
    {
      v22 = 1;
      v20 = v21;
      goto LABEL_6;
    }
    if (v20 >= *(_QWORD *)(result + 16))
      break;
    v23 = &v30[*(int *)(v11 + 48)];
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v23, result+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v20, v7);
    v24 = (char *)v16 + *(int *)(v11 + 48);
    *v16 = v20;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v24, v23, v7);
    v22 = 0;
    ++v20;
    v10 = v29;
LABEL_6:
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v16, v22, 1, v11);
    sub_1D4377088((uint64_t)v16, (uint64_t)v18, &qword_1EFE4E8E0);
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v18, 1, v11) == 1)
    {
      swift_bridgeObjectRelease();
      v26 = 1;
      v27 = v28;
      v7 = v35;
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v27, v26, 1, v7);
    }
    v25 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v7 = v35;
    v25(v10, &v18[*(int *)(v11 + 48)], v35);
    sub_1D43955BC(v10, v31, v32, v33);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v6, 1, v7) != 1)
    {
      swift_bridgeObjectRelease();
      v27 = v28;
      v25((char *)v28, v6, v7);
      v26 = 0;
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v27, v26, 1, v7);
    }
    sub_1D42BDFDC((uint64_t)v6, (uint64_t *)&unk_1EFE51200);
    result = v34;
  }
  __break(1u);
  return result;
}

uint64_t *sub_1D4395D7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  void (*v7)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_1D4519EAC();
    v7 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
    v7(a1, a2, v6);
    v8 = sub_1D42B28FC(&qword_1EFE4E8B0);
    v7((uint64_t *)((char *)a1 + *(int *)(v8 + 48)), (uint64_t *)((char *)a2 + *(int *)(v8 + 48)), v6);
  }
  return a1;
}

uint64_t sub_1D4395E18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void (*v5)(uint64_t, uint64_t);

  v2 = sub_1D4519EAC();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v5(a1, v2);
  v3 = a1 + *(int *)(sub_1D42B28FC(&qword_1EFE4E8B0) + 48);
  return ((uint64_t (*)(uint64_t, uint64_t))v5)(v3, v2);
}

uint64_t sub_1D4395E80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;

  v4 = sub_1D4519EAC();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16);
  v5(a1, a2, v4);
  v6 = sub_1D42B28FC(&qword_1EFE4E8B0);
  v5(a1 + *(int *)(v6 + 48), a2 + *(int *)(v6 + 48), v4);
  return a1;
}

uint64_t sub_1D4395EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;

  v4 = sub_1D4519EAC();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24);
  v5(a1, a2, v4);
  v6 = sub_1D42B28FC(&qword_1EFE4E8B0);
  v5(a1 + *(int *)(v6 + 48), a2 + *(int *)(v6 + 48), v4);
  return a1;
}

uint64_t sub_1D4395F60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;

  v4 = sub_1D4519EAC();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32);
  v5(a1, a2, v4);
  v6 = sub_1D42B28FC(&qword_1EFE4E8B0);
  v5(a1 + *(int *)(v6 + 48), a2 + *(int *)(v6 + 48), v4);
  return a1;
}

uint64_t sub_1D4395FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;

  v4 = sub_1D4519EAC();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40);
  v5(a1, a2, v4);
  v6 = sub_1D42B28FC(&qword_1EFE4E8B0);
  v5(a1 + *(int *)(v6 + 48), a2 + *(int *)(v6 + 48), v4);
  return a1;
}

uint64_t sub_1D4396040(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D42B28FC(&qword_1EFE4E8B0);
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, a2, v4);
}

uint64_t sub_1D4396078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1D42B28FC(&qword_1EFE4E8B0);
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a1, a2, a3, v6);
}

uint64_t sub_1D43960C0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  int v4;

  result = sub_1D4519EAC();
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = v4;
  }
  return result;
}

uint64_t sub_1D4396134(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D4519F60();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1D4396170(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D4519F60();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1D43961A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D4519F60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D43961E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D4519F60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D439622C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D4519F60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D4396270(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D4519F60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D43962B4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D43962C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1D4396508();
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v1, v0, v2);
}

uint64_t sub_1D43962E8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D43962F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1D4396508();
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v1, v0, v0, v2);
}

uint64_t type metadata accessor for ModelFeatureExtractor(uint64_t a1)
{
  return sub_1D42BFA18(a1, (uint64_t *)&unk_1EFE4E900);
}

uint64_t sub_1D4396334()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D4519F60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D439639C()
{
  return sub_1D4519EB8();
}

uint64_t sub_1D43963B8@<X0>(uint64_t (*a1)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, *(_QWORD *)(v2 - 72));
}

uint64_t sub_1D43963C4()
{
  return 0;
}

uint64_t sub_1D43963D8()
{
  return swift_allocError();
}

uint64_t sub_1D43963EC@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return sub_1D4519DD4();
}

uint64_t sub_1D439640C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 112) + 8))(v0, *(_QWORD *)(v1 - 104));
}

uint64_t sub_1D4396428@<X0>(uint64_t (*a1)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v2, v1, *(_QWORD *)(v3 - 72));
}

uint64_t sub_1D4396438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v2, v1);
}

uint64_t sub_1D4396454()
{
  return sub_1D4519EAC();
}

uint64_t sub_1D4396470()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 208) + 8))(*(_QWORD *)(v0 - 200), *(_QWORD *)(v0 - 168));
}

uint64_t sub_1D4396490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104))(v2, v0, v1);
}

unint64_t sub_1D43964A4()
{
  type metadata accessor for ModelFeatureExtractorError(0);
  return sub_1D4395338();
}

uint64_t sub_1D43964BC()
{
  return 0;
}

uint64_t sub_1D43964D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_1D43964E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_1D43964F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_1D4396508()
{
  return sub_1D4519F60();
}

uint64_t sub_1D4396518(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_1D4396520(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_1D4396528()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 152) + 8))(v0, *(_QWORD *)(v1 - 160));
}

uint64_t sub_1D4396538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96))(v0, v1);
}

uint64_t sub_1D4396548()
{
  return sub_1D4519DB0();
}

uint64_t sub_1D4396550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v0, v1);
}

uint64_t sub_1D4396570(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_1D4396578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_1D4396588()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D43965A0()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t sub_1D43965AC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_1D43965B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D4395A8C(*(_QWORD *)(v1 - 176), *(_QWORD *)(v1 - 168), *(_QWORD *)(v1 - 104), a1);
}

uint64_t sub_1D43965C4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43965CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a1, a2, 1, v2);
}

uint64_t sub_1D43965D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_1D43965E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t sub_1D43965EC()
{
  return sub_1D4519EB8();
}

uint64_t sub_1D43965F4()
{
  return 0;
}

uint64_t sub_1D4396600(uint64_t a1)
{
  return sub_1D4396764(a1, (uint64_t (*)(void))sub_1D4396C10);
}

uint64_t sub_1D439660C(uint64_t a1)
{
  return sub_1D4396634(a1, (uint64_t (*)(void))sub_1D4396B70, (uint64_t (*)(void))sub_1D4396AF0);
}

uint64_t sub_1D4396620(uint64_t a1)
{
  return sub_1D4396634(a1, (uint64_t (*)(void))sub_1D4397034, (uint64_t (*)(void))sub_1D4396FB4);
}

uint64_t sub_1D4396634(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t result;
  int v6;
  char v7;
  char v8;

  result = a2();
  if ((v7 & 1) != 0)
    goto LABEL_7;
  if (*(_DWORD *)(a1 + 36) != v6)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  sub_1D4397208();
  if (v8)
    return 0;
  else
    return a3();
}

_QWORD *sub_1D4396690(uint64_t a1)
{
  _QWORD *result;
  int v3;
  char v4;
  uint64_t v5;

  result = (_QWORD *)sub_1D4396CB8(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == (_QWORD *)(1 << *(_BYTE *)(a1 + 32)))
    return 0;
  else
    return sub_1D4396D2C(&v5, (uint64_t)result, v3, 0, a1);
}

uint64_t sub_1D4396718(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
    return sub_1D451A800();
  else
    return 0;
}

uint64_t sub_1D4396758(uint64_t a1)
{
  return sub_1D4396764(a1, (uint64_t (*)(void))sub_1D4396C64);
}

uint64_t sub_1D4396764(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t result;
  int v5;
  char v6;
  char v7;

  result = sub_1D4396CB8(a1);
  if ((v6 & 1) != 0)
    goto LABEL_7;
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  sub_1D4397208();
  if (v7)
    return 0;
  else
    return a2();
}

uint64_t sub_1D43967BC(void *a1)
{
  return sub_1D43967F4(a1, (SEL *)&selRef_inputDescriptionsByName);
}

uint64_t sub_1D43967D8(void *a1)
{
  return sub_1D43967F4(a1, (SEL *)&selRef_outputDescriptionsByName);
}

uint64_t sub_1D43967F4(void *a1, SEL *a2)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t result;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;

  v2 = (uint64_t)a1;
  v3 = objc_msgSend(a1, *a2);
  sub_1D42F40FC();
  v4 = sub_1D4397200();

  v5 = *(_QWORD *)(v4 + 16);
  swift_bridgeObjectRelease();
  if (v5 != 1)
  {
    sub_1D4320F00();
    sub_1D42B6D0C();
    *v14 = 0;
    swift_willThrow();
    return v2;
  }
  v6 = sub_1D43971E8();
  v7 = sub_1D4397200();

  v8 = (void *)sub_1D4396764(v7, (uint64_t (*)(void))sub_1D4396C10);
  result = swift_bridgeObjectRelease();
  if (v8)
  {
    if (objc_msgSend(v8, sel_type) != (id)5)
    {
      sub_1D4320F00();
      sub_1D42B6D0C();
      *v15 = 1;
      swift_willThrow();

      return v2;
    }
    v10 = sub_1D43971E8();
    v11 = sub_1D4397200();

    v2 = sub_1D4396634(v11, (uint64_t (*)(void))sub_1D4396B70, (uint64_t (*)(void))sub_1D4396AF0);
    v13 = v12;
    result = swift_bridgeObjectRelease();
    if (v13)
    {

      return v2;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1D43969A8(uint64_t a1, void *a2)
{
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = (void *)MEMORY[0x1D825DB34]();
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E9B0]), sel_init);
  v10[0] = 0;
  v6 = objc_msgSend(a2, sel_predictionFromFeatures_options_error_, a1, v5, v10);

  if (v6)
  {
    v7 = v10[0];
  }
  else
  {
    v8 = v10[0];
    sub_1D4519AA4();

    swift_willThrow();
  }
  objc_autoreleasePoolPop(v4);
  return v6;
}

uint64_t sub_1D4396AA4(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1D4396AC4@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = a1();
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1D4396AF0(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
  {
    v4 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * result);
    swift_bridgeObjectRetain();
    return v4;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1D4396B70(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
LABEL_3:
    v3 = __clz(__rbit64(v1)) + v2;
    return sub_1D43971B4(v3);
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return sub_1D43971B4(v3);
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    goto LABEL_3;
  }
  if (v6 < 8)
    return sub_1D43971B4(v3);
  v1 = *(_QWORD *)(a1 + 80);
  if (v1)
  {
    v2 = 128;
    goto LABEL_3;
  }
  v1 = *(_QWORD *)(a1 + 88);
  if (v1)
  {
    v2 = 192;
    goto LABEL_3;
  }
  v2 = 192;
  v7 = 12;
  while (v7 - 8 < (unint64_t)(v3 + 63) >> 6)
  {
    v1 = *(_QWORD *)(a1 + 8 * v7);
    v2 += 64;
    ++v7;
    if (v1)
      goto LABEL_3;
  }
  return sub_1D43971B4(v3);
}

uint64_t sub_1D4396C10(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return (uint64_t)*(id *)(*(_QWORD *)(a4 + 56) + 8 * result);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1D4396C64(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return swift_bridgeObjectRetain();
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1D4396CB8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
LABEL_3:
    v3 = __clz(__rbit64(v1)) + v2;
    return sub_1D43971B4(v3);
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return sub_1D43971B4(v3);
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    goto LABEL_3;
  }
  v2 = 64;
  v7 = 10;
  while (v7 - 8 < (unint64_t)(v3 + 63) >> 6)
  {
    v1 = *(_QWORD *)(a1 + 8 * v7);
    v2 += 64;
    ++v7;
    if (v1)
      goto LABEL_3;
  }
  return sub_1D43971B4(v3);
}

_QWORD *sub_1D4396D2C(_QWORD *result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  void *v6;
  id v7;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(a5 + 48) + 16 * a2);
    v6 = *(void **)(*(_QWORD *)(a5 + 56) + 8 * a2);
    *result = v6;
    swift_bridgeObjectRetain();
    v7 = v6;
    return (_QWORD *)v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

void sub_1D4396DBC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  id v16;
  void *v17;

  v7 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_1D451B340() == *(_DWORD *)(a4 + 36))
      {
        sub_1D451B34C();
        sub_1D439721C();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v4 = v17;
        swift_unknownObjectRelease();
        v9 = sub_1D451B100();
        v10 = -1 << *(_BYTE *)(a4 + 32);
        v7 = v9 & ~v10;
        sub_1D43971D4();
        if ((v11 & 1) != 0)
        {
          sub_1D43971F4();
          v12 = sub_1D43971C4();

          if ((v12 & 1) == 0)
          {
            v13 = ~v10;
            do
            {
              v7 = (v7 + 1) & v13;
              sub_1D43971D4();
              if ((v14 & 1) == 0)
                goto LABEL_24;
              sub_1D43971F4();
              v15 = sub_1D43971C4();

            }
            while ((v15 & 1) == 0);
          }

LABEL_20:
          v16 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v8 = a4;
  else
    v8 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x1D825CCAC](a1, a2, v8);
  sub_1D439721C();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
}

uint64_t sub_1D4396FB4(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
  {
    v4 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * result);
    swift_bridgeObjectRetain();
    return v4;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1D4397034(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
LABEL_3:
    v3 = __clz(__rbit64(v1)) + v2;
    return sub_1D43971B4(v3);
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return sub_1D43971B4(v3);
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    goto LABEL_3;
  }
  v2 = 64;
  v7 = 9;
  while (v7 - 7 < (unint64_t)(v3 + 63) >> 6)
  {
    v1 = *(_QWORD *)(a1 + 8 * v7);
    v2 += 64;
    ++v7;
    if (v1)
      goto LABEL_3;
  }
  return sub_1D43971B4(v3);
}

uint64_t storeEnumTagSinglePayload for SNCoreMLError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D43970F4 + 4 * byte_1D45335E5[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D4397128 + 4 * asc_1D45335E0[v4]))();
}

uint64_t sub_1D4397128(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4397130(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4397138);
  return result;
}

uint64_t sub_1D4397144(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D439714CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D4397150(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4397158(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SNCoreMLError()
{
  return &type metadata for SNCoreMLError;
}

unint64_t sub_1D4397178()
{
  unint64_t result;

  result = qword_1EFE4E910[0];
  if (!qword_1EFE4E910[0])
  {
    result = MEMORY[0x1D825E41C](&unk_1D453363C, &type metadata for SNCoreMLError);
    atomic_store(result, qword_1EFE4E910);
  }
  return result;
}

uint64_t sub_1D43971B4@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_1D43971C4()
{
  return sub_1D451B10C();
}

id sub_1D43971E8()
{
  void *v0;
  SEL *v1;

  return objc_msgSend(v0, *v1);
}

id sub_1D43971F4()
{
  uint64_t v0;
  uint64_t v1;

  return *(id *)(*(_QWORD *)(v0 + 48) + 8 * v1);
}

uint64_t sub_1D4397200()
{
  return sub_1D451A5CC();
}

uint64_t sub_1D439721C()
{
  return type metadata accessor for SNModelFeatureConnection();
}

void sub_1D4397228()
{
  sub_1D42BE9A8();
  sub_1D451B964();
  sub_1D451B994();
  sub_1D42BE978();
}

void sub_1D439725C()
{
  sub_1D451A614();
  sub_1D451B964();
  sub_1D42CB15C();
}

uint64_t sub_1D4397298()
{
  if ((sub_1D451A698() & 1) != 0)
    type metadata accessor for SharedVGGish.Configuration();
  return 0;
}

uint64_t sub_1D439731C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000018 && a2 == 0x80000001D45507C0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D45527F0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1D4397408(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000013;
  else
    return 0xD000000000000018;
}

void sub_1D4397444()
{
  sub_1D439869C();
}

void sub_1D4397484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  MEMORY[0x1D825E41C](&unk_1D453397C, a1);
  v11 = sub_1D451B7A8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&a9 - v13;
  sub_1D42B5528(v9, v9[3]);
  sub_1D451BA24();
  *(_BYTE *)(v10 - 112) = 0;
  v15 = *(_QWORD *)(v10 - 72);
  sub_1D451B760();
  if (!v15)
  {
    *(_BYTE *)(v10 - 112) = 1;
    sub_1D451B754();
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_1D42BE844();
}

void sub_1D4397588()
{
  sub_1D42BE9A8();
  sub_1D439725C();
  sub_1D451B994();
  sub_1D42BE978();
}

void sub_1D43975BC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[12];

  v8[0] = a3;
  v8[2] = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8[6] = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[8] = v4;
  v8[9] = v5;
  v8[10] = v6;
  v8[11] = v7;
  sub_1D439869C();
}

void sub_1D4397638(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x1D825E41C](&unk_1D453397C, a1);
  v6 = sub_1D451B6E8();
  *(_QWORD *)(v5 - 136) = v6;
  *(_QWORD *)(v5 - 168) = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)(v5 - 120) = v1;
  *(_QWORD *)(v5 - 112) = v1;
  *(_QWORD *)(v5 - 144) = v3;
  *(_QWORD *)(v5 - 104) = v3;
  *(_QWORD *)(v5 - 96) = v2;
  *(_QWORD *)(v5 - 88) = v4;
  type metadata accessor for SharedVGGish.Configuration();
}

void sub_1D43976AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v13 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v15 = (char *)&a9 - v14;
  sub_1D42B5528(v10, v10[3]);
  *(_QWORD *)(v11 - 152) = v9;
  v16 = *(_QWORD *)(v11 - 72);
  sub_1D451BA0C();
  if (v16)
  {
    sub_1D4398694();
  }
  else
  {
    *(_QWORD *)(v11 - 72) = v13;
    v17 = *(_QWORD *)(v11 - 160);
    *(_BYTE *)(v11 - 112) = 0;
    sub_1D451B688();
    (*(void (**)(char *, _QWORD, _QWORD))(v17 + 32))(v15, *(_QWORD *)(v11 - 128), *(_QWORD *)(v11 - 120));
    *(_BYTE *)(v11 - 112) = 1;
    v18 = sub_1D451B67C();
    sub_1D4398674();
    *(_QWORD *)&v15[*(int *)(a1 + 52)] = v18;
    v19 = *(_QWORD *)(v11 - 72);
    (*(void (**)(_QWORD, char *, uint64_t))(v19 + 16))(*(_QWORD *)(v11 - 176), v15, a1);
    sub_1D4398694();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, a1);
  }
  sub_1D42BE844();
}

void sub_1D43977F0()
{
  sub_1D4397228();
}

unint64_t sub_1D43977F8()
{
  char *v0;

  return sub_1D4397408(*v0);
}

uint64_t sub_1D439780C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D439731C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D439783C(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D453397C, a1);
  return sub_1D451BA3C();
}

uint64_t sub_1D4397870(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D453397C, a1);
  return sub_1D451BA48();
}

void sub_1D43978A4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1D43975BC(a1, *(_QWORD *)(a2 + 16), a3);
}

void sub_1D43978C4()
{
  sub_1D4397444();
}

uint64_t sub_1D43978E0()
{
  sub_1D451B958();
  sub_1D439725C();
  return sub_1D451B994();
}

uint64_t sub_1D4397920()
{
  return sub_1D4397298();
}

uint64_t sub_1D4397930()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = sub_1D4398684();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = sub_1D42BE1BC;
  v7[3] = v1;
  v7[4] = v6;
  swift_retain();
  swift_retain();
  sub_1D42B28FC((uint64_t *)&unk_1EFE4C9F0);
  sub_1D42BE210((unint64_t *)&unk_1EFE4F850, (uint64_t *)&unk_1EFE4C9F0, MEMORY[0x1E0C95D90]);
  sub_1D451A2C0();
  sub_1D439868C(qword_1EFE496F8, v8, MEMORY[0x1E0C96148]);
  v9 = sub_1D451A2E4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v9;
}

uint64_t type metadata accessor for SharedVGGish.Instance()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for SharedVGGish()
{
  return &type metadata for SharedVGGish;
}

uint64_t sub_1D4397A90()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D4397B08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_1D4397BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D4397C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D4397C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D4397CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D4397D28(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 >= a2)
  {
    if ((_DWORD)v6)
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v6, v4);
    return 0;
  }
  if (((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
    v7 = 2;
  else
    v7 = a2 - v6 + 1;
  if (v7 >= 0x10000)
    v8 = 4;
  else
    v8 = 2;
  if (v7 < 0x100)
    v8 = 1;
  if (v7 >= 2)
    v9 = v8;
  else
    v9 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1D4397D98 + 4 * byte_1D45336B0[v9]))();
}

void sub_1D4397DEC(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 >= a3)
  {
    v12 = 0u;
  }
  else
  {
    v9 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
  }
  if (a2 > v7)
  {
    if ((_DWORD)v8)
    {
      v13 = ~v7 + a2;
      bzero(a1, v8);
      *a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t sub_1D4397ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  *(_BYTE *)(v4 + v5) = 0;
  if ((_DWORD)a2)
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v4, a2, a3, a4);
  return result;
}

void sub_1D4397F08(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_WORD *)(v2 + v3) = 0;
  if (!a2)
    JUMPOUT(0x1D4397F10);
  JUMPOUT(0x1D4397EF0);
}

void type metadata accessor for SharedVGGish.Configuration()
{
  JUMPOUT(0x1D825E3A4);
}

void sub_1D4397F34()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D4397F44@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v3 = *(_QWORD *)result;
  v4 = *(_QWORD *)(*(_QWORD *)result + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = 0;
    v6 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v7 = *(_QWORD *)(v3 + 8 * v5 + 32);
      v8 = *(_QWORD *)(v7 + 16);
      v9 = *(_QWORD *)(v6 + 16);
      if (__OFADD__(v9, v8))
        break;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!swift_isUniquelyReferenced_nonNull_native() || v9 + v8 > *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_1D442F36C();
        v6 = v10;
      }
      if (*(_QWORD *)(v7 + 16))
      {
        v11 = *(_QWORD *)(v6 + 16);
        if ((*(_QWORD *)(v6 + 24) >> 1) - v11 < v8)
          goto LABEL_24;
        v12 = (void *)(v6 + 4 * v11 + 32);
        if (v7 + 32 < (unint64_t)v12 + 4 * v8 && (unint64_t)v12 < v7 + 32 + 4 * v8)
          goto LABEL_26;
        memcpy(v12, (const void *)(v7 + 32), 4 * v8);
        if (v8)
        {
          v14 = *(_QWORD *)(v6 + 16);
          v15 = __OFADD__(v14, v8);
          v16 = v14 + v8;
          if (v15)
            goto LABEL_25;
          *(_QWORD *)(v6 + 16) = v16;
        }
      }
      else if (v8)
      {
        goto LABEL_23;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v4 == ++v5)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    result = sub_1D451B5D4();
    __break(1u);
  }
  else
  {
    v6 = MEMORY[0x1E0DEE9D8];
LABEL_21:
    *a2 = v6;
  }
  return result;
}

uint64_t sub_1D43980F0()
{
  uint64_t v0;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D4398684();
  sub_1D439868C(&qword_1EFE516B0, v0, MEMORY[0x1E0DEAF38]);
  return sub_1D451A038();
}

uint64_t sub_1D4398180@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _QWORD v17[2];

  v4 = sub_1D42B28FC(&qword_1EFE4B9A0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v17 - v8;
  v10 = *a1;
  v11 = (void *)sub_1D451A6C8();
  v12 = objc_msgSend(v10, sel_featureValueForName_, v11);

  if (v12)
  {
    sub_1D451AF80();

  }
  else
  {
    v13 = sub_1D42B28FC(&qword_1EFE4C970);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v9, 1, 1, v13);
  }
  sub_1D43983E8((uint64_t)v9, (uint64_t)v7);
  v14 = sub_1D42B28FC(&qword_1EFE4C970);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v7, 1, v14) == 1)
  {
    sub_1D4398430((uint64_t)v7);
    sub_1D435C5CC();
    swift_allocError();
    *v15 = 0;
    swift_willThrow();
    return sub_1D4398430((uint64_t)v9);
  }
  else
  {
    sub_1D4398430((uint64_t)v9);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a2, v7, v14);
  }
}

void sub_1D4398334(uint64_t *a1@<X8>)
{
  uint64_t v2;

  sub_1D4398684();
  sub_1D439868C(&qword_1EFE4B998, v2, MEMORY[0x1E0C9E6C8]);
  *a1 = sub_1D451A068();
  sub_1D42CB15C();
}

void sub_1D4398388()
{
  sub_1D44A5588();
}

uint64_t sub_1D43983A0(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t sub_1D43983B0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1D43983DC()
{
  sub_1D4398388();
}

uint64_t sub_1D43983E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D42B28FC(&qword_1EFE4B9A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D4398430(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D42B28FC(&qword_1EFE4B9A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void type metadata accessor for SharedVGGish.Configuration.CodingKeys()
{
  JUMPOUT(0x1D825E3A4);
}

uint64_t sub_1D439847C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D43984C8 + 4 * byte_1D45336C4[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D43984FC + 4 * byte_1D45336BF[v4]))();
}

uint64_t sub_1D43984FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4398504(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D439850CLL);
  return result;
}

uint64_t sub_1D4398518(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4398520);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D4398524(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D439852C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for SharedVGGish.DomainError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D4398584 + 4 * byte_1D45336CE[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D43985B8 + 4 * byte_1D45336C9[v4]))();
}

uint64_t sub_1D43985B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43985C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D43985C8);
  return result;
}

uint64_t sub_1D43985D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D43985DCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D43985E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43985E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SharedVGGish.DomainError()
{
  return &type metadata for SharedVGGish.DomainError;
}

unint64_t sub_1D4398608()
{
  unint64_t result;

  result = qword_1EFE4E998;
  if (!qword_1EFE4E998)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453389C, &type metadata for SharedVGGish.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4E998);
  }
  return result;
}

void sub_1D4398644()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D4398654()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D4398664()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D4398674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t sub_1D4398684()
{
  uint64_t *v0;

  return sub_1D42B28FC(v0);
}

uint64_t sub_1D439868C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1D42BE210(a1, v3, a3);
}

uint64_t sub_1D4398694()
{
  uint64_t v0;

  return sub_1D42B5400(v0);
}

void sub_1D439869C()
{
  type metadata accessor for SharedVGGish.Configuration.CodingKeys();
}

uint64_t sub_1D43986A8@<X0>(id a1@<X1>, _QWORD *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t *v8;

  v3 = a1;
  sub_1D42B28FC(&qword_1EFE49BB0);
  v4 = sub_1D451A728();
  v6 = v5;
  sub_1D4398724();
  result = swift_allocError();
  *v8 = v4;
  v8[1] = v6;
  *a2 = result;
  return result;
}

unint64_t sub_1D4398724()
{
  unint64_t result;

  result = qword_1EFE4E9A0;
  if (!qword_1EFE4E9A0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4533A9C, &type metadata for KeepAliveWhileSubscribedDomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4E9A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for KeepAliveWhileSubscribedDomainError()
{
  return &type metadata for KeepAliveWhileSubscribedDomainError;
}

unint64_t sub_1D4398774()
{
  unint64_t result;

  result = qword_1EFE4E9A8;
  if (!qword_1EFE4E9A8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4533A34, &type metadata for KeepAliveWhileSubscribedDomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4E9A8);
  }
  return result;
}

uint64_t sub_1D43987B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  sub_1D42B7714();
  v10 = v9;
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a4;
  v11[3] = a5;
  v11[4] = a2;
  v11[5] = a3;
  swift_retain();
  swift_retain();
  sub_1D42F94F8((void (*)(_QWORD *))sub_1D4398E10, v10, (uint64_t)&unk_1EFE4E9C0, (uint64_t)v11, a4, a5);
  swift_release_n();
  return swift_release();
}

uint64_t sub_1D4398874(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1D42F92EC;
  return v6(a1);
}

uint64_t sub_1D43988D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1D43987B0(a1, *v3, v3[1], *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8));
}

uint64_t sub_1D43988FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1D4398918()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v1 = v0[3];
  v2 = v0[4];
  v3 = (_QWORD *)v0[2];
  v4 = v3[2];
  v5 = v3[3];
  v6 = v3[4];
  v7 = v3[5];
  type metadata accessor for XPCProxyDecoder.SingleValueContainer();
  v8 = (_QWORD *)swift_allocObject();
  v0[5] = v8;
  v8[2] = v4;
  v8[3] = v5;
  v8[4] = v6;
  v8[5] = v7;
  sub_1D42B7FE4(v4);
  v9 = sub_1D4398AE0((uint64_t)v8, v1, v2);
  v11 = v10;
  v0[6] = v10;
  v12 = (_QWORD *)swift_task_alloc();
  v0[7] = v12;
  *v12 = v0;
  v12[1] = sub_1D43989E4;
  return sub_1D42F97D0((uint64_t)v9, v11, v0[3]);
}

uint64_t sub_1D43989E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;

  sub_1D42E3EE0();
  *v5 = *v3;
  v4[8] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    v4[9] = v0;
    v4[10] = v2;
  }
  return swift_task_switch();
}

uint64_t sub_1D4398A54()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 72));
}

uint64_t sub_1D4398A98()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void *sub_1D4398AE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;

  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = a1;
  swift_retain();
  return &unk_1EFE4E9E0;
}

uint64_t sub_1D4398B44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = (_QWORD *)swift_task_alloc();
  v3[6] = v6;
  v8 = type metadata accessor for XPCFunction(0, (uint64_t)&type metadata for XPCVoid, a2, v7);
  v3[4] = &off_1E97ACAE0;
  v3[5] = a3;
  v9 = MEMORY[0x1D825E41C](&unk_1D452875C, v8, v3 + 4);
  *v6 = v3;
  v6[1] = sub_1D4398BF8;
  return sub_1D4368744((uint64_t)(v3 + 2), v8, v9);
}

uint64_t sub_1D4398BF8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D4398C5C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1D4398C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  swift_retain();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1D4309A00;
  return sub_1D43988FC(a1, a2, a3);
}

uint64_t sub_1D4398CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  *(_QWORD *)(v4 + 16) = a1;
  v7 = *(_QWORD *)(a4 - 8);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v8;
  v9 = *(_QWORD *)(a3 + 16);
  *v8 = v4;
  v8[1] = sub_1D4398D40;
  return sub_1D4398C6C(a2, v9, v7);
}

uint64_t sub_1D4398D40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  sub_1D42E3EE0();
  v5 = *v3;
  *v6 = v5;
  swift_task_dealloc();
  if (!v1)
  {
    v7 = *(_QWORD **)(v4 + 16);
    *v7 = v2;
    v7[1] = v0;
  }
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_1D4398D90(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  v5 = *a3;
  result = MEMORY[0x1D825E41C](&unk_1D4533B08, a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D4398DD0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  v5 = *a3;
  result = MEMORY[0x1D825E41C](&unk_1D4533B58, a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1D4398E10()
{
  sub_1D42B7B80();
}

uint64_t sub_1D4398E24()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D4398E48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D42F92EC;
  return sub_1D4398874(a1, v4);
}

uint64_t sub_1D4398EC0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D4398EE4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1D4368A20;
  return sub_1D4398B44(v4, v2, v3);
}

uint64_t type metadata accessor for AnyInfiniteAsyncIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyInfiniteAsyncIterator);
}

void sub_1D4398F50(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for SharedReformattedAudioSource.Configuration();
}

uint64_t sub_1D4398FB4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + *(int *)(result + 52)) = v2;
  *(_QWORD *)(v3 + *(int *)(result + 56)) = v1;
  return result;
}

uint64_t sub_1D4398FE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v1 = v0;
  v2 = sub_1D42B28FC(qword_1EFE4EAA8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1D42CB210();
  v6 = v5 - v4;
  v7 = *(_QWORD *)(v1 + 16);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = sub_1D42BE1BC;
  v8[3] = v1;
  v8[4] = v7;
  swift_retain();
  sub_1D42BE984();
  sub_1D42B28FC((uint64_t *)&unk_1EFE4ACD0);
  sub_1D42BE210(&qword_1EFE496A0, (uint64_t *)&unk_1EFE4ACD0, MEMORY[0x1E0C95D90]);
  sub_1D451A2C0();
  sub_1D42BE210((unint64_t *)&unk_1EFE559D0, qword_1EFE4EAA8, MEMORY[0x1E0C96148]);
  v9 = sub_1D451A2E4();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  return v9;
}

void sub_1D439910C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  void *v8;
  uint64_t v9;
  char v10;

  sub_1D439302C(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  sub_1D42BE7F0();
  sub_1D4399178(v8);
}

void sub_1D4399128()
{
  sub_1D4393138();
}

void sub_1D4399130(void *a1)
{
  sub_1D42BE934();
  sub_1D439940C(a1);
}

uint64_t sub_1D4399154(uint64_t a1)
{
  sub_1D42B8F48();
  return a1;
}

void sub_1D4399178(void *a1)
{
  sub_1D42BE984();
  swift_retain();
  sub_1D42BE934();
  sub_1D439940C(a1);
}

uint64_t sub_1D43991B0(uint64_t a1)
{
  sub_1D42B8F48();
  sub_1D42BE998();
  swift_release();
  return a1;
}

void sub_1D43991E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t AssociatedTypeWitness;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;

  sub_1D42BE910();
  a19 = v20;
  a20 = v21;
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v31 = *(_QWORD *)(AssociatedTypeWitness - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&a9 - v33;
  (*(void (**)(uint64_t, uint64_t))(v25 + 16))(v27, v25);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 40))(v29, AssociatedTypeWitness, v23);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v34, AssociatedTypeWitness);
  sub_1D42BE844();
}

void sub_1D43992B0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  _QWORD v9[11];

  sub_1D439302C(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9[0]);
  sub_1D43992E0(v9);
  sub_1D43341E8();
}

uint64_t sub_1D43992E0(_QWORD *a1)
{
  _QWORD v2[3];
  uint64_t v3;

  v2[2] = &v3;
  return sub_1D439A31C(a1, (void (*)(_QWORD *__return_ptr, _QWORD *))sub_1D439BEC4, (uint64_t)v2);
}

void sub_1D4399314()
{
  swift_getAssociatedTypeWitness();
  sub_1D43210F4();
  sub_1D43210F4();
  sub_1D43210F4();
  sub_1D439AF28();
  sub_1D43341E8();
}

void sub_1D43993DC(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char __src[88];

  sub_1D439302C(a1, a2, a3, a4, a5, a6, a7, a8, v8, __src[0]);
  sub_1D439940C(__src);
}

void sub_1D4399400()
{
  sub_1D43341E8();
}

void sub_1D439940C(void *__src)
{
  _BYTE __dst[88];

  memcpy(__dst, __src, sizeof(__dst));
  sub_1D42BE934();
  sub_1D42BE984();
  sub_1D42B5B38((uint64_t)__src);
  sub_1D4471230();
}

uint64_t sub_1D4399480(uint64_t a1)
{
  uint64_t v1;

  sub_1D42BDEAC(v1);
  sub_1D42B8F48();
  swift_release();
  return a1;
}

void sub_1D43994BC(uint64_t a1, uint64_t a2)
{
  const void *v2;
  uint64_t v5;
  _QWORD v6[6];
  _QWORD v7[2];

  v5 = sub_1D42B6F40();
  memcpy((void *)(v5 + 16), v2, 0x48uLL);
  v7[0] = a1;
  v7[1] = a2;
  v6[2] = sub_1D439C1EC;
  v6[3] = v5;
  v6[4] = v7;
  swift_retain();
  sub_1D42BE38C((uint64_t)v2);
  sub_1D44712AC(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1D439C204, (uint64_t)v6);
  swift_release();
  swift_release();
  sub_1D43341E8();
}

void sub_1D4399584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[6];

  sub_1D42BE910();
  v1 = v0;
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v8, v7);
  sub_1D42BA260();
  v9();
  v10 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v3;
  *(_QWORD *)(v11 + 24) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v11 + v10, (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  sub_1D42BA260();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = sub_1D42BE7A0();
  v14 = sub_1D42BE7A0();
  v15 = sub_1D42BE7A0();
  v16[2] = AssociatedTypeWitness;
  v16[3] = v13;
  v16[4] = v14;
  v16[5] = v15;
  sub_1D439C418();
}

void sub_1D4399698(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for SharedReformattedAudioSource.Instance();
  v7 = MEMORY[0x1D825E41C](&unk_1D4533D08, a1);
  sub_1D44782C4(v1, v3, (uint64_t)sub_1D42BE178, v2, a1, v6, v7, v4 - 72);
  swift_release();
  sub_1D42BE998();
  sub_1D42BE844();
}

void sub_1D439970C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  void *v8;
  uint64_t v9;
  char v10;

  sub_1D439302C(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  sub_1D42BE7F0();
  sub_1D4399130(v8);
}

void sub_1D4399728()
{
  sub_1D4393138();
}

uint64_t sub_1D4399730()
{
  return swift_retain();
}

void sub_1D4399754()
{
  sub_1D42BE810();
  MEMORY[0x1D825E41C](&unk_1D452B918);
  _s14descr1E97B8181C21ServerEnvironmentImplVMa();
}

#error "1D43997A0: call analysis failed (funcsize=6)"

void sub_1D43997AC()
{
  sub_1D42BE964();
  MEMORY[0x1D825E41C](&unk_1D452B6C8);
  sub_1D439C3A8();
  sub_1D42BE958();
}

void sub_1D43997D8()
{
  sub_1D42BE810();
  MEMORY[0x1D825E41C](&unk_1D452B870);
  sub_1D439C3D8();
}

void sub_1D43997FC()
{
  sub_1D42BE94C();
}

uint64_t sub_1D4399804()
{
  if ((sub_1D451A698() & 1) != 0)
    type metadata accessor for SharedReformattedAudioSource.Configuration();
  return 0;
}

uint64_t sub_1D439989C(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  char v7;

  if (a1 == 0xD000000000000018 && a2 == 0x80000001D45507C0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x436C656E6E616863 && a2 == 0xEC000000746E756FLL;
    if (v5 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6152656C706D6173 && a2 == 0xEA00000000006574)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = sub_1D451B820();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1D4399A08(char a1)
{
  if (!a1)
    return 0xD000000000000018;
  if (a1 == 1)
    return 0x436C656E6E616863;
  return 0x6152656C706D6173;
}

void sub_1D4399A70()
{
  sub_1D42BE910();
  sub_1D439C40C();
}

void sub_1D4399AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  MEMORY[0x1D825E41C](&unk_1D4533E70, a1);
  v11 = sub_1D451B7A8();
  v12 = *(_QWORD *)(v11 - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&a9 - v14;
  sub_1D42B5528(v9, v9[3]);
  sub_1D451BA24();
  *(_BYTE *)(v10 - 112) = 0;
  v16 = *(_QWORD *)(v10 - 72);
  sub_1D451B760();
  if (!v16)
  {
    sub_1D4321118(1);
    sub_1D4321118(2);
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  sub_1D42BE844();
}

void sub_1D4399BB0()
{
  uint64_t v0;

  sub_1D42BE910();
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v0);
  sub_1D42BE768();
  sub_1D439C40C();
}

void sub_1D4399C14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  MEMORY[0x1D825E41C](&unk_1D4533E70, a1);
  sub_1D42BA260();
  v6 = sub_1D451B6E8();
  *(_QWORD *)(v5 - 136) = v6;
  *(_QWORD *)(v5 - 168) = *(_QWORD *)(v6 - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v7);
  *(_QWORD *)(v5 - 152) = v4;
  *(_QWORD *)(v5 - 144) = v1;
  *(_QWORD *)(v5 - 112) = v1;
  *(_QWORD *)(v5 - 104) = v4;
  *(_QWORD *)(v5 - 96) = v2;
  *(_QWORD *)(v5 - 88) = v3;
  sub_1D439C418();
}

void sub_1D4399C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v13 = *(_QWORD *)(a1 - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&a9 - v15;
  sub_1D42B5528(v9, v9[3]);
  *(_QWORD *)(v11 - 120) = v10;
  sub_1D42BA260();
  v17 = *(_QWORD *)(v11 - 72);
  sub_1D451BA0C();
  if (v17)
  {
    sub_1D42B5400((uint64_t)v9);
  }
  else
  {
    *(_QWORD *)(v11 - 72) = v13;
    v18 = v16;
    v19 = *(_QWORD *)(v11 - 160);
    *(_BYTE *)(v11 - 112) = 0;
    v20 = *(_QWORD *)(v11 - 144);
    sub_1D451B688();
    (*(void (**)(char *, _QWORD, uint64_t))(v19 + 32))(v18, *(_QWORD *)(v11 - 128), v20);
    *(_QWORD *)&v18[*(int *)(a1 + 52)] = sub_1D4321130(1);
    v21 = sub_1D4321130(2);
    sub_1D4321108(*(_QWORD *)(v11 - 168));
    *(_QWORD *)&v18[*(int *)(a1 + 56)] = v21;
    v22 = *(_QWORD *)(v11 - 72);
    (*(void (**)(_QWORD, char *, uint64_t))(v22 + 16))(*(_QWORD *)(v11 - 176), v18, a1);
    sub_1D42B5400((uint64_t)v9);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v18, a1);
  }
  sub_1D42BE844();
}

uint64_t sub_1D4399DE0()
{
  char *v0;

  return sub_1D4399A08(*v0);
}

uint64_t sub_1D4399DF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D439989C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D4399E20(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4533E70, a1);
  return sub_1D451BA3C();
}

uint64_t sub_1D4399E54(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4533E70, a1);
  return sub_1D451BA48();
}

void sub_1D4399E88()
{
  sub_1D4399BB0();
}

void sub_1D4399EA8()
{
  sub_1D4399A70();
}

uint64_t sub_1D4399EBC()
{
  return sub_1D4399804();
}

uint64_t type metadata accessor for SharedReformattedAudioSource.Instance()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for SharedReformattedAudioSource()
{
  return &type metadata for SharedReformattedAudioSource;
}

uint64_t sub_1D4399EFC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 >= a2)
  {
    if ((_DWORD)v6)
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v6, v4);
    return 0;
  }
  if (((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
    v7 = 2;
  else
    v7 = a2 - v6 + 1;
  if (v7 >= 0x10000)
    v8 = 4;
  else
    v8 = 2;
  if (v7 < 0x100)
    v8 = 1;
  if (v7 >= 2)
    v9 = v8;
  else
    v9 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1D4399F74 + 4 * byte_1D4533BE0[v9]))();
}

void sub_1D4399FC8(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 >= a3)
  {
    v12 = 0u;
  }
  else
  {
    v9 = a3 - v7;
    if (((((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
  }
  if (a2 > v7)
  {
    if ((_DWORD)v8)
    {
      v13 = ~v7 + a2;
      bzero(a1, v8);
      *a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t sub_1D439A0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  *(_BYTE *)(v4 + v5) = 0;
  if ((_DWORD)a2)
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v4, a2, a3, a4);
  return result;
}

void sub_1D439A0EC(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_WORD *)(v2 + v3) = 0;
  if (!a2)
    JUMPOUT(0x1D439A0F4);
  JUMPOUT(0x1D439A0D4);
}

void type metadata accessor for SharedReformattedAudioSource.Configuration()
{
  JUMPOUT(0x1D825E3A4);
}

void sub_1D439A118()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D439A128(_QWORD *a1)
{
  return sub_1D43992E0(a1);
}

uint64_t sub_1D439A148(uint64_t a1, uint64_t a2, void *__src)
{
  _BYTE __dst[72];

  memcpy(__dst, __src, sizeof(__dst));
  return sub_1D439A964(a1, a2, (void (*)(_QWORD *__return_ptr, uint64_t))sub_1D439C264);
}

void sub_1D439A1B0(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 + 24) = type metadata accessor for SharedBuiltInMicrophone.Instance();
  *(_QWORD *)(a2 + 32) = &off_1E97A7E80;
  sub_1D432E81C(a1);
}

uint64_t sub_1D439A1F0(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;

  if (v2)
    return sub_1D4306718((uint64_t)v1);
  *v1 = result;
  return result;
}

uint64_t sub_1D439A21C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(a2 + 24) = &type metadata for StaticAudioSourceInstance;
  *(_QWORD *)(a2 + 32) = &off_1E97A9AB0;
  v2 = *a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 1);
  *(_QWORD *)a2 = v2;
  return swift_retain();
}

uint64_t sub_1D439A258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t result;

  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 56);
  a4[3] = swift_getAssociatedTypeWitness();
  a4[4] = swift_getAssociatedConformanceWitness();
  sub_1D430BBF0(a4);
  result = v9(a1, a2, a3);
  if (v4)
    return sub_1D4306718((uint64_t)a4);
  return result;
}

uint64_t sub_1D439A31C(_QWORD *a1, void (*a2)(_QWORD *__return_ptr, _QWORD *), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_QWORD *__return_ptr, _QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (**v41)@<X0>(uint64_t *@<X8>);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  _QWORD *v65;
  void (*v66)(_QWORD *__return_ptr, _QWORD *);
  uint64_t v67;
  unint64_t v68;
  _QWORD v69[3];
  uint64_t v70;
  uint64_t v71;
  _QWORD __dst[12];
  uint64_t v73;

  v66 = a2;
  v63 = sub_1D42B28FC(&qword_1EFE4EA68);
  v62 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v61 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_1D42B28FC(&qword_1EFE4EA70);
  MEMORY[0x1E0C80A78](v60);
  v64 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D42B28FC(&qword_1EFE4EA78);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D42B28FC(&qword_1EFE4EA80);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1D4519D20();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = a1;
  memcpy(__dst, a1, 0x58uLL);
  v18 = v73;
  v66(v69, __dst);
  if (!v18)
  {
    v58 = v9;
    v55 = v13;
    v56 = v11;
    v57 = v10;
    v59 = v15;
    v73 = 0;
    v66 = (void (*)(_QWORD *__return_ptr, _QWORD *))v14;
    v19 = v65;
    v20 = v65[10];
    sub_1D4519D14();
    v21 = v70;
    v22 = v71;
    sub_1D42B5528(v69, v70);
    v23 = v17;
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v22 + 24))(v21, v22) == v20)
    {
      v24 = v19[9];
      v25 = v70;
      v26 = v71;
      sub_1D42B5528(v69, v70);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26) == v24)
      {
        v27 = v70;
        v28 = v71;
        sub_1D42B5528(v69, v70);
        v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v27, v28);
        v30 = (void (*)(_QWORD *__return_ptr, _QWORD))v66;
LABEL_9:
        v53 = v59;
        type metadata accessor for SharedReformattedAudioSource.Instance();
        a3 = swift_allocObject();
        *(_QWORD *)(a3 + 16) = v29;
        (*(void (**)(char *, _QWORD))(v53 + 8))(v23, v30);
        sub_1D42B5400((uint64_t)v69);
        return a3;
      }
    }
    v31 = v70;
    v32 = v71;
    sub_1D42B5528(v69, v70);
    v67 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v31, v32);
    v33 = swift_allocObject();
    *(_QWORD *)(v33 + 16) = sub_1D42FB61C;
    *(_QWORD *)(v33 + 24) = 0;
    sub_1D42B28FC((uint64_t *)&unk_1EFE4ACD0);
    sub_1D42B28FC((uint64_t *)&unk_1EFE4FB10);
    sub_1D42BE210(&qword_1EFE496A0, (uint64_t *)&unk_1EFE4ACD0, MEMORY[0x1E0C95D90]);
    v34 = v61;
    sub_1D451A308();
    swift_release();
    swift_release();
    v35 = swift_allocObject();
    *(_QWORD *)(v35 + 16) = 0x4000;
    v36 = v62;
    v37 = (uint64_t)v64;
    v38 = v63;
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v64, v34, v63);
    v39 = v60;
    v40 = v37 + *(int *)(v60 + 84);
    *(_QWORD *)v40 = 0;
    *(_QWORD *)(v40 + 8) = 0;
    *(_BYTE *)(v40 + 16) = 2;
    v41 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v37 + *(int *)(v39 + 88));
    *v41 = sub_1D439BFA0;
    v41[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v35;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v38);
    v42 = v70;
    v43 = v71;
    sub_1D42B5528(v69, v70);
    (*(void (**)(uint64_t, uint64_t))(v43 + 24))(v42, v43);
    v44 = v70;
    v45 = v71;
    sub_1D42B5528(v69, v70);
    (*(void (**)(uint64_t, uint64_t))(v45 + 16))(v44, v45);
    v46 = (uint64_t)v58;
    a3 = v37;
    v47 = v73;
    sub_1D439B4A0((uint64_t)v58);
    if (!v47)
    {
      v73 = 0;
      sub_1D42BDFDC(v37, &qword_1EFE4EA70);
      v67 = 0;
      v68 = 0xE000000000000000;
      sub_1D451B400();
      swift_bridgeObjectRelease();
      v67 = 0xD000000000000026;
      v68 = 0x80000001D4554610;
      sub_1D42BDF9C();
      v30 = (void (*)(_QWORD *__return_ptr, _QWORD))v66;
      sub_1D451B7C0();
      sub_1D451A794();
      swift_bridgeObjectRelease();
      sub_1D451A794();
      v49 = v55;
      sub_1D44A462C();
      swift_bridgeObjectRelease();
      sub_1D42BDFDC(v46, &qword_1EFE4EA78);
      sub_1D42BE210(&qword_1EFE4EA88, &qword_1EFE4EA80, MEMORY[0x1E0C957C0]);
      v50 = v57;
      v51 = sub_1D451A374();
      sub_1D42B28FC(&qword_1EFE4EA90);
      swift_allocObject();
      v52 = sub_1D43AEFD8(v51);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v49, v50);
      v67 = v52;
      sub_1D42BE210(&qword_1EFE4EA98, &qword_1EFE4EA90, (uint64_t)&unk_1D4537AC0);
      v29 = sub_1D451A2E4();
      swift_release();
      goto LABEL_9;
    }
    sub_1D42BDFDC(v37, &qword_1EFE4EA70);
    (*(void (**)(char *, _QWORD))(v59 + 8))(v23, v66);
    sub_1D42B5400((uint64_t)v69);
  }
  return a3;
}

uint64_t sub_1D439A964(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *__return_ptr, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_QWORD *__return_ptr, _QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (**v41)@<X0>(uint64_t *@<X8>);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(_QWORD *__return_ptr, uint64_t);
  uint64_t v67;
  unint64_t v68;
  _QWORD v69[3];
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v65 = a2;
  v66 = a3;
  v64 = a1;
  v3 = sub_1D42B28FC(&qword_1EFE4EA68);
  v62 = *(_QWORD *)(v3 - 8);
  v63 = v3;
  MEMORY[0x1E0C80A78](v3);
  v61 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_1D42B28FC(&qword_1EFE4EA70);
  MEMORY[0x1E0C80A78](v60);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D42B28FC(&qword_1EFE4EA78);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D42B28FC(&qword_1EFE4EA80);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1D4519D20();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v72;
  v66(v69, v16);
  v72 = v19;
  if (!v19)
  {
    v57 = v6;
    v58 = v9;
    v53 = v13;
    v54 = v11;
    v55 = v10;
    v59 = v15;
    v66 = (void (*)(_QWORD *__return_ptr, uint64_t))v14;
    sub_1D4519D14();
    v21 = v70;
    v20 = v71;
    sub_1D42B5528(v69, v70);
    v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 24))(v21, v20);
    v23 = v18;
    v24 = v64;
    if (v22 == v65)
    {
      v25 = v70;
      v26 = v71;
      sub_1D42B5528(v69, v70);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26) == v24)
      {
        v27 = v70;
        v28 = v71;
        sub_1D42B5528(v69, v70);
        v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v27, v28);
        v30 = v66;
LABEL_9:
        v52 = v59;
        type metadata accessor for SharedReformattedAudioSource.Instance();
        v11 = swift_allocObject();
        *(_QWORD *)(v11 + 16) = v29;
        (*(void (**)(char *, _QWORD))(v52 + 8))(v23, v30);
        sub_1D42B5400((uint64_t)v69);
        return v11;
      }
    }
    v56 = v23;
    v31 = v70;
    v32 = v71;
    sub_1D42B5528(v69, v70);
    v67 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v31, v32);
    v33 = swift_allocObject();
    *(_QWORD *)(v33 + 16) = sub_1D42FB61C;
    *(_QWORD *)(v33 + 24) = 0;
    sub_1D42B28FC((uint64_t *)&unk_1EFE4ACD0);
    sub_1D42B28FC((uint64_t *)&unk_1EFE4FB10);
    sub_1D42BE210(&qword_1EFE496A0, (uint64_t *)&unk_1EFE4ACD0, MEMORY[0x1E0C95D90]);
    v34 = v61;
    sub_1D451A308();
    swift_release();
    swift_release();
    v35 = swift_allocObject();
    *(_QWORD *)(v35 + 16) = 0x4000;
    v37 = v62;
    v36 = v63;
    v38 = (uint64_t)v57;
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v57, v34, v63);
    v39 = v60;
    v40 = v38 + *(int *)(v60 + 84);
    *(_QWORD *)v40 = 0;
    *(_QWORD *)(v40 + 8) = 0;
    *(_BYTE *)(v40 + 16) = 2;
    v41 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v38 + *(int *)(v39 + 88));
    *v41 = sub_1D439C36C;
    v41[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v35;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v34, v36);
    v42 = v70;
    v43 = v71;
    sub_1D42B5528(v69, v70);
    (*(void (**)(uint64_t, uint64_t))(v43 + 24))(v42, v43);
    v11 = v70;
    v44 = v71;
    sub_1D42B5528(v69, v70);
    (*(void (**)(uint64_t, uint64_t))(v44 + 16))(v11, v44);
    v45 = (uint64_t)v58;
    v46 = v72;
    sub_1D439B4A0((uint64_t)v58);
    v72 = v46;
    if (!v46)
    {
      sub_1D42BDFDC(v38, &qword_1EFE4EA70);
      v67 = 0;
      v68 = 0xE000000000000000;
      sub_1D451B400();
      swift_bridgeObjectRelease();
      v67 = 0xD000000000000026;
      v68 = 0x80000001D4554610;
      sub_1D42BDF9C();
      v23 = v56;
      v30 = v66;
      sub_1D451B7C0();
      sub_1D451A794();
      swift_bridgeObjectRelease();
      sub_1D451A794();
      v48 = v53;
      sub_1D44A462C();
      swift_bridgeObjectRelease();
      sub_1D42BDFDC(v45, &qword_1EFE4EA78);
      sub_1D42BE210(&qword_1EFE4EA88, &qword_1EFE4EA80, MEMORY[0x1E0C957C0]);
      v49 = v55;
      v50 = sub_1D451A374();
      sub_1D42B28FC(&qword_1EFE4EA90);
      swift_allocObject();
      v51 = sub_1D43AEFD8(v50);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v48, v49);
      v67 = v51;
      sub_1D42BE210(&qword_1EFE4EA98, &qword_1EFE4EA90, (uint64_t)&unk_1D4537AC0);
      v29 = sub_1D451A2E4();
      swift_release();
      goto LABEL_9;
    }
    sub_1D42BDFDC(v38, &qword_1EFE4EA70);
    (*(void (**)(char *, _QWORD))(v59 + 8))(v56, v66);
    sub_1D42B5400((uint64_t)v69);
  }
  return v11;
}

void sub_1D439AF28()
{
  uint64_t v0;
  void (*v1)(_QWORD *__return_ptr, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_QWORD *__return_ptr, uint64_t);
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  sub_1D42BE910();
  v11 = v1;
  v3 = v2;
  sub_1D42B28FC(&qword_1EFE4EA68);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE4EA70);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE4EA78);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v6);
  sub_1D42CB210();
  v7 = sub_1D42B28FC(&qword_1EFE4EA80);
  MEMORY[0x1E0C80A78](v7);
  sub_1D42CB210();
  v8 = sub_1D4519D20();
  MEMORY[0x1E0C80A78](v8);
  sub_1D42CB210();
  v11(v12, v3);
  if (!v0)
  {
    sub_1D4519D14();
    v9 = v13;
    v10 = v14;
    sub_1D42B5528(v12, v13);
    (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
    type metadata accessor for SharedReformattedAudioSource.Configuration();
  }
  sub_1D42BE844();
}

void sub_1D439B4A0(uint64_t a1@<X8>)
{
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  _QWORD *v11;

  sub_1D451B400();
  sub_1D451A794();
  sub_1D451A794();
  sub_1D451A794();
  sub_1D451A794();
  sub_1D451A794();
  sub_1D451A794();
  sub_1D451A794();
  sub_1D451A794();
  sub_1D451A794();
  sub_1D451A794();
  sub_1D451A794();
  sub_1D451A794();
  sub_1D451A794();
  sub_1D451A794();
  sub_1D451A794();
  sub_1D451A794();
  sub_1D451A794();
  sub_1D451A794();
  sub_1D451A794();
  sub_1D451A794();
  sub_1D451A794();
  sub_1D42B28FC(&qword_1EFE49AE8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D4533EC0;
  *(_QWORD *)(inited + 32) = 0x7461527475706E69;
  *(_QWORD *)(inited + 40) = 0xE900000000000065;
  *(_QWORD *)(inited + 48) = sub_1D451B7C0();
  *(_QWORD *)(inited + 56) = v2;
  *(_QWORD *)(inited + 64) = 0xD000000000000011;
  *(_QWORD *)(inited + 72) = 0x80000001D4551ED0;
  *(_QWORD *)(inited + 80) = sub_1D451B7C0();
  *(_QWORD *)(inited + 88) = v3;
  *(_QWORD *)(inited + 96) = 0x615274757074756FLL;
  *(_QWORD *)(inited + 104) = 0xEA00000000006574;
  *(_QWORD *)(inited + 112) = sub_1D451B7C0();
  *(_QWORD *)(inited + 120) = v4;
  *(_QWORD *)(inited + 128) = 0xD000000000000012;
  *(_QWORD *)(inited + 136) = 0x80000001D4554640;
  *(_QWORD *)(inited + 144) = sub_1D451B7C0();
  *(_QWORD *)(inited + 152) = v5;
  sub_1D451A5E4();
  v6 = objc_opt_self();
  v7 = (void *)sub_1D451A6C8();
  swift_bridgeObjectRelease();
  v8 = (void *)sub_1D451A5A8();
  swift_bridgeObjectRelease();
  v9 = (void *)sub_1D451A908();
  v10 = sub_1D4503D40(v6, v7, v8, v9);

  if (v10)
  {
    sub_1D44F3DE8((uint64_t)v10);
    sub_1D44F44A0((uint64_t)v10);
    sub_1D439BA78(v10, a1);

  }
  else
  {
    sub_1D439BFA8();
    swift_allocError();
    *v11 = 0xD000000000000020;
    v11[1] = 0x80000001D4554700;
    swift_willThrow();
  }
}

double sub_1D439B940@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(uint64_t *__return_ptr, _QWORD *)@<X4>, uint64_t a6@<X8>)
{
  double result;
  _QWORD v10[3];
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v10[0] = a1;
  v10[1] = a2;
  v10[2] = a3;
  swift_bridgeObjectRetain();
  a5(&v11, v10);
  swift_bridgeObjectRelease();
  *(_QWORD *)a6 = v11;
  *(_OWORD *)(a6 + 8) = v12;
  *(_OWORD *)(a6 + 24) = v13;
  result = *(double *)&v14;
  *(_OWORD *)(a6 + 40) = v14;
  *(_QWORD *)(a6 + 56) = a4;
  return result;
}

void sub_1D439B9C8()
{
  sub_1D42BE964();
  MEMORY[0x1D825E41C](&unk_1D45458B8);
  sub_1D439C3A8();
  sub_1D42BE958();
}

void sub_1D439B9F4()
{
  sub_1D42BE810();
  MEMORY[0x1D825E41C](&unk_1D454589C);
  sub_1D439C3D8();
}

void sub_1D439BA18()
{
  sub_1D42BE94C();
}

void sub_1D439BA20()
{
  sub_1D42BE810();
  MEMORY[0x1D825E41C](&unk_1D4545650);
  type metadata accessor for AudioStreamAnalyzerEnvironmentImpl();
}

#error "1D439BA6C: call analysis failed (funcsize=6)"

id sub_1D439BA78@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _BYTE *v11;

  if (sub_1D44F5EF4((uint64_t)a1) == 1 && sub_1D44F6274((uint64_t)a1) == 1 && sub_1D44F42B8((_BOOL8)a1))
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = a1;
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = a1;
    sub_1D439C038(v2, a2);
    v7 = sub_1D42B28FC(&qword_1EFE4EA78);
    v8 = (_QWORD *)(a2 + *(int *)(v7 + 52));
    *v8 = sub_1D439C020;
    v8[1] = v6;
    v9 = (_QWORD *)(a2 + *(int *)(v7 + 56));
    *v9 = sub_1D439C008;
    v9[1] = v5;
    return a1;
  }
  else
  {
    sub_1D4383190();
    swift_allocError();
    *v11 = 1;
    return (id)swift_willThrow();
  }
}

uint64_t sub_1D439BB8C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t result;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _OWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v4 = *(_OWORD *)(a1 + 16);
  v22[0] = *(_OWORD *)a1;
  v22[1] = v4;
  v5 = *(_QWORD *)(a1 + 40);
  v23 = *(_QWORD *)(a1 + 32);
  v24 = v5;
  v6 = *(_QWORD *)(a1 + 48);
  v25 = v6;
  v21 = 0;
  if (v6 < v5)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (__OFSUB__(v6, v5))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  sub_1D42BE0D0(a1);
  sub_1D44F6E94((uint64_t)a3);
  v9 = *(_QWORD *)(a2 + 8);
  v10 = v21;
  v11 = v9 * v21;
  if ((unsigned __int128)(v9 * (__int128)(uint64_t)v21) >> 64 != (uint64_t)(v9 * v21) >> 63)
    goto LABEL_14;
  if (v11 < 0
    || (!v11 ? (v12 = MEMORY[0x1E0DEE9D8]) : (v12 = sub_1D451A9BC(), *(_QWORD *)(v12 + 16) = v11),
        *(_QWORD *)(v12 + 16) = v11,
        v18 = v12,
        v19 = v9,
        v20 = v10,
        v17 = 0,
        HIDWORD(v10)))
  {
    result = sub_1D451B550();
    __break(1u);
  }
  else
  {
    v16 = v10;
    v13 = a3;
    sub_1D4381770((uint64_t)v22, v13, (uint64_t)&v21, (uint64_t)&v16, (uint64_t)&v17, v14);
    swift_bridgeObjectRelease();
    if (v3)
      return swift_bridgeObjectRelease();
    else
      return v18;
  }
  return result;
}

