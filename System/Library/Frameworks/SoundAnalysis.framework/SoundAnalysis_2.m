void sub_1D439BDC4()
{
  sub_1D44A548C();
}

uint64_t sub_1D439BDDC(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t sub_1D439BDEC@<X0>(void *__src@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  _QWORD __dst[11];

  memcpy(__dst, __src, sizeof(__dst));
  result = sub_1D439A128(__dst);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1D439BE48@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1D439BDEC(a1, a2);
}

void sub_1D439BE6C(void *__src@<X0>, uint64_t a2@<X8>)
{
  _BYTE __dst[72];

  memcpy(__dst, __src, 0x41uLL);
  sub_1D439A1B0(__dst, a2);
}

void sub_1D439BEC4(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1D439BE6C(a1, a2);
}

uint64_t sub_1D439BEDC@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v12[4];

  v6 = a1[1];
  v12[0] = *a1;
  v12[1] = v6;
  v7 = a1[3];
  v12[2] = a1[2];
  v12[3] = v7;
  result = sub_1D439BB8C((uint64_t)v12, a2, a3);
  if (!v4)
  {
    *a4 = result;
    a4[1] = v9;
    a4[2] = v10;
    a4[3] = v11;
  }
  return result;
}

uint64_t sub_1D439BF24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1D4399730();
  *a1 = result;
  a1[1] = v3;
  return result;
}

double sub_1D439BF48@<D0>(uint64_t *a1@<X0>, void (*a2)(uint64_t *__return_ptr, _QWORD *)@<X1>, uint64_t a3@<X8>)
{
  return sub_1D439B940(*a1, a1[1], a1[2], a1[3], a2, a3);
}

uint64_t sub_1D439BF70()
{
  swift_release();
  return swift_deallocObject();
}

double sub_1D439BF94@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1D439BF48(a1, *(void (**)(uint64_t *__return_ptr, _QWORD *))(v2 + 16), a2);
}

uint64_t sub_1D439BFA0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D439BF24(a1);
}

unint64_t sub_1D439BFA8()
{
  unint64_t result;

  result = qword_1EFE4EAA0;
  if (!qword_1EFE4EAA0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4546F34, &type metadata for AudioConverterError);
    atomic_store(result, (unint64_t *)&qword_1EFE4EAA0);
  }
  return result;
}

uint64_t sub_1D439BFE4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1D439C008@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1D439BEDC(a1, a2, *(void **)(v3 + 16), a3);
}

_QWORD *sub_1D439C020@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1D447E754(*(void **)(v1 + 16), a1);
}

uint64_t sub_1D439C038(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D42B28FC(&qword_1EFE4EA70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D439C084@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1D439A258(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_1D439C0A0()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1D439C0F8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1D439C124()
{
  sub_1D439BDC4();
}

void type metadata accessor for SharedReformattedAudioSource.Configuration.CodingKeys()
{
  JUMPOUT(0x1D825E3A4);
}

uint64_t sub_1D439C13C@<X0>(uint64_t *a1@<X0>, const void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _BYTE __dst[72];

  v5 = *a1;
  v6 = a1[1];
  memcpy(__dst, a2, sizeof(__dst));
  result = sub_1D439A148(v5, v6, __dst);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_1D439C198()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D439C1EC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1D439C13C(a1, (const void *)(v2 + 16), a2);
}

uint64_t sub_1D439C204@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1D435CA7C(a1, *(void (**)(uint64_t *__return_ptr, _QWORD *))(v2 + 16), *(_QWORD *)(v2 + 24), *(uint64_t **)(v2 + 32), a2);
}

uint64_t sub_1D439C220@<X0>(const void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t __dst[9];

  memcpy(__dst, a1, sizeof(__dst));
  return sub_1D439A21C(__dst, a2);
}

uint64_t sub_1D439C264@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D439C220(*(const void **)(v1 + 16), a1);
}

uint64_t sub_1D439C280(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D439C2CC + 4 * byte_1D4533BF4[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D439C300 + 4 * byte_1D4533BEF[v4]))();
}

uint64_t sub_1D439C300(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D439C308(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D439C310);
  return result;
}

uint64_t sub_1D439C31C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D439C324);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D439C328(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D439C330(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1D439C33C()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D439C34C()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D439C35C()
{
  JUMPOUT(0x1D825E41CLL);
}

_QWORD *sub_1D439C384()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1D42B5528((_QWORD *)(v1 - 128), v0);
}

uint64_t sub_1D439C390()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 264) + 8))(*(_QWORD *)(v0 - 72), *(_QWORD *)(v0 - 256));
}

void sub_1D439C3A8()
{
  sub_1D4399314();
}

void sub_1D439C3C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D43991E4(v21, v20, v22, a4, a1, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

void sub_1D439C3D8()
{
  sub_1D4399584();
}

uint64_t sub_1D439C3EC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_1D439C3FC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

void sub_1D439C40C()
{
  type metadata accessor for SharedReformattedAudioSource.Configuration.CodingKeys();
}

void sub_1D439C418()
{
  type metadata accessor for SharedReformattedAudioSource.Configuration();
}

void sub_1D439C424(char a1, void *a2)
{
  uint64_t v2;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  void *v13;
  void *v14;
  char *v15;
  id v16;
  id v17;

  if (a2)
    v5 = a2;
  else
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E958]), sel_init);
  type metadata accessor for SNMLModelCacheKey();
  v6 = v5;
  v7 = a2;
  v8 = sub_1D437EEB8(a1, v6);
  v9 = (void *)MEMORY[0x1D825DB34]();
  if (qword_1EFE40440 != -1)
    swift_once();
  v10 = (void *)qword_1EFEA76F0;
  v11 = *(_QWORD *)algn_1EFEA76F8;
  v12 = *(os_unfair_lock_s **)(*(_QWORD *)algn_1EFEA76F8 + 16);
  os_unfair_lock_lock(v12);
  if (!objc_msgSend(v10, sel_objectForKey_, v8))
  {
    sub_1D439CBCC(a1, v6);
    if (v2)
    {
      os_unfair_lock_unlock(v12);
      objc_autoreleasePoolPop(v9);

      goto LABEL_10;
    }
    v14 = v13;
    v15 = (char *)objc_allocWithZone((Class)type metadata accessor for SNMLLockedModel());
    v16 = v14;
    v17 = sub_1D439DD74((uint64_t)v16, v15);
    objc_msgSend(v10, sel_setObject_forKey_, v17, v8);

  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  objc_autoreleasePoolPop(v9);

LABEL_10:
  sub_1D42BE844();
}

__CFString *sub_1D439C5B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v10;
  uint64_t v12;
  uint64_t v14;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  __CFString **v22;
  unint64_t v23;

  sub_1D451A6EC();
  if (v1 == sub_1D439E0B8() && v0 == v2)
  {
    sub_1D439E0C8();
    goto LABEL_38;
  }
  sub_1D439E074();
  sub_1D439E0D0();
  sub_1D42CB5C8();
  if ((v1 & 1) != 0)
  {
LABEL_38:
    v22 = SNDetectorIdentifierVGGishApplause;
    return *v22;
  }
  sub_1D451A6EC();
  if (v1 == sub_1D439E0B8() && v0 == v4)
  {
    sub_1D439E0C8();
    goto LABEL_41;
  }
  sub_1D439E074();
  sub_1D439E0D0();
  sub_1D42CB5C8();
  if ((v1 & 1) != 0)
  {
LABEL_41:
    v22 = SNDetectorIdentifierVGGishBabble;
    return *v22;
  }
  sub_1D451A6EC();
  if (v1 == sub_1D439E0B8() && v0 == v6)
  {
    sub_1D439E0C8();
    goto LABEL_43;
  }
  sub_1D439E074();
  sub_1D439E0D0();
  sub_1D42CB5C8();
  if ((v1 & 1) != 0)
  {
LABEL_43:
    v22 = SNDetectorIdentifierVGGishCheering;
    return *v22;
  }
  sub_1D451A6EC();
  if (v1 == sub_1D439E0B8() && v0 == v8)
  {
    sub_1D439E0C8();
    goto LABEL_45;
  }
  sub_1D439E074();
  sub_1D439E0D0();
  sub_1D42CB5C8();
  if ((v1 & 1) != 0)
  {
LABEL_45:
    v22 = SNDetectorIdentifierVGGishLaughter;
    return *v22;
  }
  sub_1D451A6EC();
  if (v1 == sub_1D439E0B8() && v0 == v10)
  {
    sub_1D439E0C8();
    goto LABEL_47;
  }
  sub_1D439E074();
  sub_1D439E0D0();
  sub_1D42CB5C8();
  if ((v1 & 1) != 0)
  {
LABEL_47:
    v22 = SNDetectorIdentifierVGGishMusic;
    return *v22;
  }
  sub_1D451A6EC();
  if (v1 == sub_1D439E0B8() && v0 == v12)
  {
    sub_1D439E0C8();
    goto LABEL_49;
  }
  sub_1D439E074();
  sub_1D439E0D0();
  sub_1D42CB5C8();
  if ((v1 & 1) != 0)
  {
LABEL_49:
    v22 = SNDetectorIdentifierVGGishSpeech;
    return *v22;
  }
  sub_1D451A6EC();
  if (v1 == sub_1D439E0B8() && v0 == v14)
  {
    sub_1D439E0C8();
  }
  else
  {
    sub_1D439E074();
    sub_1D439E0D0();
    sub_1D42CB5C8();
    if ((v1 & 1) == 0)
    {
      sub_1D42DCEE8();
      sub_1D439E0FC();
      sub_1D451B400();
      sub_1D439E150();
      sub_1D42F1E08();
      type metadata accessor for SNSoundIdentifier(0);
      sub_1D439E10C();
      v16 = sub_1D4394198();
      sub_1D43EC59C(v16, v17, v18, v19, v20, v23);
      swift_bridgeObjectRelease();
      return (__CFString *)swift_willThrow();
    }
  }
  v22 = SNDetectorIdentifierSoundPrintASmokeAlarm;
  return *v22;
}

void *sub_1D439C864(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v10;
  uint64_t v12;
  uint64_t v14;
  uint64_t v16;
  uint64_t v18;
  uint64_t v20;
  uint64_t v22;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  __CFString **v30;
  __CFString *v31;
  id v32;
  __CFString *v33;
  __CFString **v35;
  __CFString *v36;
  id v37;
  __CFString *v38;
  id v39;
  __CFString *v40;
  void *v41;

  sub_1D451A6EC();
  if (v2 == sub_1D439E090() && v1 == v4)
  {
    sub_1D439E0A0();
    goto LABEL_53;
  }
  sub_1D439E058();
  sub_1D439E0AC();
  sub_1D42CB5C8();
  if ((v2 & 1) != 0)
  {
LABEL_53:
    v30 = SNSoundIdentifierApplause;
LABEL_54:
    v31 = *v30;
    v32 = a1;
    v33 = v31;
    return a1;
  }
  sub_1D451A6EC();
  if (v2 == sub_1D439E090() && v1 == v6)
  {
    sub_1D439E0A0();
    goto LABEL_57;
  }
  sub_1D439E058();
  sub_1D439E0AC();
  sub_1D42CB5C8();
  if ((v2 & 1) != 0)
  {
LABEL_57:
    v30 = SNSoundIdentifierBabble;
    goto LABEL_54;
  }
  sub_1D451A6EC();
  if (v2 == sub_1D439E090() && v1 == v8)
  {
    sub_1D439E0A0();
    goto LABEL_59;
  }
  sub_1D439E058();
  sub_1D439E0AC();
  sub_1D42CB5C8();
  if ((v2 & 1) != 0)
  {
LABEL_59:
    v30 = SNSoundIdentifierCheering;
    goto LABEL_54;
  }
  sub_1D451A6EC();
  if (v2 == sub_1D439E090() && v1 == v10)
  {
    sub_1D439E0A0();
    goto LABEL_61;
  }
  sub_1D439E058();
  sub_1D439E0AC();
  sub_1D42CB5C8();
  if ((v2 & 1) != 0)
  {
LABEL_61:
    v30 = SNSoundIdentifierLaughter;
    goto LABEL_54;
  }
  sub_1D451A6EC();
  if (v2 == sub_1D439E090() && v1 == v12)
  {
    sub_1D439E0A0();
    goto LABEL_63;
  }
  sub_1D439E058();
  sub_1D439E0AC();
  sub_1D42CB5C8();
  if ((v2 & 1) != 0)
  {
LABEL_63:
    v30 = SNSoundIdentifierMusic;
    goto LABEL_54;
  }
  sub_1D451A6EC();
  if (v2 == sub_1D439E090() && v1 == v14)
  {
    sub_1D439E0A0();
    goto LABEL_65;
  }
  sub_1D439E058();
  sub_1D439E0AC();
  sub_1D42CB5C8();
  if ((v2 & 1) != 0)
  {
LABEL_65:
    v30 = SNSoundIdentifierSpeech;
    goto LABEL_54;
  }
  sub_1D451A6EC();
  if (v2 == sub_1D439E090() && v1 == v16)
  {
    sub_1D439E0A0();
    goto LABEL_67;
  }
  sub_1D439E058();
  sub_1D439E0AC();
  sub_1D42CB5C8();
  if ((v2 & 1) != 0)
  {
LABEL_67:
    v35 = SNSoundIdentifierLaughter;
LABEL_68:
    v36 = *v35;
    v37 = a1;
    v38 = v36;
    return a1;
  }
  sub_1D451A6EC();
  if (v2 == sub_1D439E090() && v1 == v18)
  {
    sub_1D439E0A0();
    goto LABEL_71;
  }
  sub_1D439E058();
  sub_1D439E0AC();
  sub_1D42CB5C8();
  if ((v2 & 1) != 0)
  {
LABEL_71:
    v39 = a1;
    v40 = sub_1D44FB1A0();
    return a1;
  }
  sub_1D451A6EC();
  if (v2 == sub_1D439E090() && v1 == v20)
  {
    sub_1D439E0A0();
    goto LABEL_73;
  }
  sub_1D439E058();
  sub_1D439E0AC();
  sub_1D42CB5C8();
  if ((v2 & 1) != 0)
  {
LABEL_73:
    v35 = SNSoundIdentifierSpeech;
    goto LABEL_68;
  }
  sub_1D451A6EC();
  if (v2 == sub_1D439E090() && v1 == v22)
  {
    sub_1D439E0A0();
    goto LABEL_75;
  }
  sub_1D439E058();
  sub_1D439E0AC();
  sub_1D42CB5C8();
  if ((v2 & 1) != 0)
  {
LABEL_75:
    v35 = SNSoundIdentifierSmokeAlarm;
    goto LABEL_68;
  }
  sub_1D42DCEE8();
  sub_1D439E0FC();
  sub_1D451B400();
  sub_1D439E150();
  sub_1D42F1E08();
  type metadata accessor for SNDetectorIdentifier(0);
  sub_1D439E10C();
  a1 = v41;
  v24 = sub_1D439E0DC();
  sub_1D43EC59C(v24, v25, v26, v27, v28, v29);
  sub_1D439E15C();
  swift_willThrow();
  return a1;
}

void sub_1D439CBCC(unsigned __int8 a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  sub_1D4519BC4();
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42CB210();
  v8 = v7 - v6;
  if (a2)
    v9 = a2;
  else
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E958]), sel_init);
  v10 = a2;
  sub_1D439CDF4(a1, v8);
  if (v2)
  {

  }
  else
  {
    sub_1D439DE1C();
    v11 = v9;
    sub_1D439D228(v8, v11);
    if (qword_1EFE40338 != -1)
      swift_once();
    v12 = sub_1D451A014();
    sub_1D42CC880(v12, (uint64_t)qword_1EFEA7700);
    v13 = sub_1D4519FFC();
    v14 = sub_1D451AF44();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      *(_DWORD *)v15 = 136315138;
      v16 = sub_1D451A728();
      sub_1D43D72EC(v16, v17, &v18);
      sub_1D451B1A8();
      sub_1D42CB5C8();
      _os_log_impl(&dword_1D42A7000, v13, v14, "Created model from asset %s", v15, 0xCu);
      swift_arrayDestroy();
      sub_1D42CC934();
    }

  }
  sub_1D42BE844();
}

uint64_t sub_1D439CDF4@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unsigned __int8 *v11;

  sub_1D42B28FC(qword_1EFE47450);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42CB210();
  v8 = v7 - v6;
  result = sub_1D445A398(a1, v7 - v6);
  if (!v2)
  {
    v10 = sub_1D4519BC4();
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v8, 1, v10) == 1)
    {
      sub_1D439DE94(v8, qword_1EFE47450);
      sub_1D439DE58();
      swift_allocError();
      *v11 = a1;
      return swift_willThrow();
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a2, v8, v10);
    }
  }
  return result;
}

uint64_t sub_1D439CEF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  BOOL v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;

  sub_1D439D660();
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v7 = (_QWORD *)(v5 + 48);
    while (1)
    {
      v2 = *((unsigned __int8 *)v7 - 16);
      v8 = *(v7 - 1) == a1 && *v7 == a2;
      if (v8 || (sub_1D451B820() & 1) != 0)
        break;
      v7 += 3;
      if (!--v6)
        goto LABEL_9;
    }
    sub_1D42CB5C8();
  }
  else
  {
LABEL_9:
    sub_1D42CB5C8();
    sub_1D42DCEE8();
    sub_1D439E0FC();
    sub_1D451B400();
    swift_bridgeObjectRelease();
    sub_1D439E150();
    sub_1D451A794();
    v9 = sub_1D439E0DC();
    sub_1D43EC59C(v9, v10, v11, v12, v13, v14);
    sub_1D439E15C();
    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1D439CFF8()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_1D451B604();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

unint64_t sub_1D439D048(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD00000000000001BLL;
  else
    return 0xD000000000000016;
}

void sub_1D439D084(char *a1, char *a2)
{
  sub_1D43342C0(*a1, *a2);
}

uint64_t sub_1D439D090@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D439CFF8();
  *a1 = result;
  return result;
}

unint64_t sub_1D439D0BC@<X0>(unint64_t *a1@<X8>)
{
  char *v1;
  unint64_t result;
  unint64_t v4;

  result = sub_1D439D048(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1D439D0E4(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E97AAB98;
}

uint64_t sub_1D439D0F4()
{
  sub_1D439E01C();
  return sub_1D451A8E4();
}

uint64_t sub_1D439D150()
{
  sub_1D439E01C();
  return sub_1D451A8CC();
}

void sub_1D439D19C()
{
  sub_1D4348714();
}

uint64_t sub_1D439D1A4()
{
  return sub_1D4348740();
}

void sub_1D439D1AC()
{
  sub_1D43487B4();
}

_DWORD *sub_1D439D1B4()
{
  id v0;
  uint64_t v1;
  _DWORD *result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_strongToWeakObjectsMapTable);
  type metadata accessor for SafeLock();
  v1 = swift_allocObject();
  result = (_DWORD *)swift_slowAlloc();
  *result = 0;
  *(_QWORD *)(v1 + 16) = result;
  qword_1EFEA76F0 = (uint64_t)v0;
  *(_QWORD *)algn_1EFEA76F8 = v1;
  return result;
}

id sub_1D439D228(uint64_t a1, void *a2)
{
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = (void *)sub_1D4519B28();
  v10[0] = 0;
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_modelWithContentsOfURL_configuration_error_, v4, a2, v10);

  if (v5)
  {
    v6 = v10[0];
  }
  else
  {
    v7 = v10[0];
    sub_1D4519AA4();

    swift_willThrow();
  }

  v8 = sub_1D4519BC4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
  return v5;
}

void sub_1D439D328()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int64_t v5;
  unint64_t v6;
  int64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  int64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  char v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  int64_t v33;
  uint64_t v34;
  _QWORD v35[5];

  v30 = *(_QWORD *)(sub_1D42CB348() - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v0);
  sub_1D42CB210();
  v1 = sub_1D445A294();
  v34 = MEMORY[0x1E0DEE9D8];
  sub_1D43F6E7C(v35, v1);
  v31 = v35[0];
  v33 = v35[3];
  v28 = v35[1];
  v29 = (unint64_t)(v35[2] + 64) >> 6;
  v2 = v35[4];
  while (1)
  {
LABEL_2:
    if (v2)
    {
      v3 = __clz(__rbit64(v2));
      v2 &= v2 - 1;
      v4 = v3 | (v33 << 6);
      goto LABEL_26;
    }
    v5 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v5 >= v29)
      goto LABEL_50;
    v6 = *(_QWORD *)(v28 + 8 * v5);
    v7 = v33 + 1;
    if (!v6)
    {
      sub_1D439E130();
      if (v8 == v9)
        goto LABEL_50;
      sub_1D439E118();
      if (!v6)
      {
        sub_1D439E130();
        if (v8 == v9)
          goto LABEL_50;
        sub_1D439E118();
        if (!v6)
        {
          sub_1D439E130();
          if (v8 == v9)
            goto LABEL_50;
          sub_1D439E118();
          if (!v6)
          {
            sub_1D439E130();
            if (v8 == v9)
              goto LABEL_50;
            sub_1D439E118();
            if (!v6)
            {
              v7 = v10 + 5;
              if (v10 + 5 >= v29)
                goto LABEL_50;
              v6 = *(_QWORD *)(v28 + 8 * v7);
              if (!v6)
              {
                v11 = v33 + 7;
                while (v11 < v29)
                {
                  v6 = *(_QWORD *)(v28 + 8 * v11++);
                  if (v6)
                  {
                    v7 = v11 - 1;
                    goto LABEL_25;
                  }
                }
LABEL_50:
                swift_release();
                sub_1D448D1B4(v34);
                swift_release();
                sub_1D42CB520();
                return;
              }
            }
          }
        }
      }
    }
LABEL_25:
    v2 = (v6 - 1) & v6;
    v4 = __clz(__rbit64(v6)) + (v7 << 6);
    v33 = v7;
LABEL_26:
    v32 = *(_BYTE *)(*(_QWORD *)(v31 + 48) + v4);
    v12 = (uint64_t *)(*(_QWORD *)(v31 + 56) + 16 * v4);
    v14 = *v12;
    v13 = v12[1];
    swift_bridgeObjectRetain();
    sub_1D4519B10();
    v15 = sub_1D4519AE0();
    v17 = v16;
    sub_1D439E168(v30);
    v18 = 0;
    while (1)
    {
      v19 = byte_1E97A1A58[v18 + 32];
      if (byte_1E97A1A58[v18 + 32])
      {
        v20 = v19 == 1 ? 0x636C65646F6D6C6DLL : 0x656C646E7562;
        v21 = v19 == 1 ? 0xE800000000000000 : 0xE600000000000000;
      }
      else
      {
        v21 = 0xE700000000000000;
        v20 = 0x6C65646F6D6C6DLL;
      }
      if (v20 == v15 && v21 == v17)
        break;
      v23 = sub_1D451B820();
      swift_bridgeObjectRelease();
      if ((v23 & 1) != 0)
        goto LABEL_43;
      if (++v18 == 3)
      {
        swift_bridgeObjectRelease();
        sub_1D42B7204();
        goto LABEL_2;
      }
    }
    sub_1D42B7204();
LABEL_43:
    sub_1D42B7204();
    if (v19 == 1)
    {
      v24 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D42C744C();
        v24 = v34;
      }
      v26 = *(_QWORD *)(v24 + 16);
      v25 = *(_QWORD *)(v24 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_1D42DCE78(v25);
        sub_1D42C744C();
        v24 = v34;
      }
      *(_QWORD *)(v24 + 16) = v26 + 1;
      v27 = v24 + 24 * v26;
      *(_BYTE *)(v27 + 32) = v32;
      *(_QWORD *)(v27 + 40) = v14;
      *(_QWORD *)(v27 + 48) = v13;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  __break(1u);
}

void sub_1D439D660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v0 = sub_1D42CB348();
  v22 = *(_QWORD *)(v0 - 8);
  v23 = v0;
  sub_1D42BE838();
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v21 - v5;
  sub_1D439D328();
  v8 = v7;
  v9 = *(_QWORD *)(v7 + 16);
  if (v9)
  {
    v24 = MEMORY[0x1E0DEE9D8];
    sub_1D42C7480();
    v21 = v8;
    v10 = v8 + 48;
    do
    {
      v11 = *(_BYTE *)(v10 - 16);
      swift_bridgeObjectRetain();
      sub_1D4519B10();
      sub_1D4519B34();
      v12 = sub_1D4519B1C();
      v14 = v13;
      v15 = v23;
      v16 = *(void (**)(char *, uint64_t))(v22 + 8);
      v16(v4, v23);
      v16(v6, v15);
      swift_bridgeObjectRelease();
      v17 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D42C7480();
        v17 = v24;
      }
      v19 = *(_QWORD *)(v17 + 16);
      v18 = *(_QWORD *)(v17 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1D42DCE78(v18);
        sub_1D42C7480();
        v17 = v24;
      }
      *(_QWORD *)(v17 + 16) = v19 + 1;
      v20 = v17 + 24 * v19;
      *(_BYTE *)(v20 + 32) = v11;
      v10 += 24;
      *(_QWORD *)(v20 + 40) = v12;
      *(_QWORD *)(v20 + 48) = v14;
      --v9;
    }
    while (v9);
  }
  swift_bridgeObjectRelease();
  sub_1D42CB520();
}

void sub_1D439D810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t inited;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  sub_1D42B28FC(qword_1EFE47450);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v0);
  sub_1D42CB210();
  v3 = v2 - v1;
  v4 = sub_1D42CB348();
  v65 = *(_QWORD *)(v4 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42BA15C();
  v62 = v6;
  MEMORY[0x1E0C80A78](v7);
  v59 = (char *)&v57 - v8;
  sub_1D42B28FC(&qword_1EFE4EB38);
  sub_1D42BE838();
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v57 - v13;
  v15 = sub_1D42B28FC((uint64_t *)&unk_1EFE51980);
  v60 = *(_QWORD *)(v15 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v16);
  sub_1D42BA15C();
  v64 = v17;
  MEMORY[0x1E0C80A78](v18);
  v58 = (uint64_t)&v57 - v19;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  v23 = MEMORY[0x1E0DEE9D8];
  do
  {
    v24 = v20;
    v25 = *((_BYTE *)&unk_1E97A1A80 + v21 + 32);
    if (v25)
      v26 = 34;
    else
      v26 = 21;
    sub_1D445A398(v26, v3);
    if (v22)
    {
      swift_unexpectedError();
      __break(1u);
      return;
    }
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v3, 1, v4) == 1)
    {
      sub_1D439DE94(v3, qword_1EFE47450);
      v27 = 1;
    }
    else
    {
      v63 = 0;
      v28 = v23;
      v29 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 32);
      v30 = v14;
      v31 = v3;
      v32 = v59;
      v29(v59, v31, v4);
      v33 = &v12[*(int *)(v15 + 48)];
      *v12 = v25;
      v34 = v32;
      v3 = v31;
      v14 = v30;
      v29(v33, (uint64_t)v34, v4);
      v23 = v28;
      v22 = v63;
      v27 = 0;
    }
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v12, v27, 1, v15);
    sub_1D4377088((uint64_t)v12, (uint64_t)v14, &qword_1EFE4EB38);
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v14, 1, v15) == 1)
    {
      sub_1D439DE94((uint64_t)v14, &qword_1EFE4EB38);
    }
    else
    {
      v35 = v58;
      sub_1D4377088((uint64_t)v14, v58, (uint64_t *)&unk_1EFE51980);
      sub_1D4377088(v35, v64, (uint64_t *)&unk_1EFE51980);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v23 = sub_1D439E124();
      v37 = *(_QWORD *)(v23 + 16);
      v36 = *(_QWORD *)(v23 + 24);
      if (v37 >= v36 >> 1)
      {
        sub_1D42DCE78(v36);
        v23 = sub_1D439E124();
      }
      *(_QWORD *)(v23 + 16) = v37 + 1;
      sub_1D439E13C();
      sub_1D4377088(v64, v23 + v38 + *(_QWORD *)(v39 + 72) * v37, (uint64_t *)&unk_1EFE51980);
    }
    v20 = 1;
    v21 = 1u;
  }
  while ((v24 & 1) == 0);
  v40 = *(_QWORD *)(v23 + 16);
  if (v40)
  {
    v66 = MEMORY[0x1E0DEE9D8];
    sub_1D42C792C();
    v41 = v66;
    sub_1D439E13C();
    v63 = v23;
    v43 = (char *)(v23 + v42);
    v64 = *(_QWORD *)(v44 + 72);
    v61 = v15;
    do
    {
      v45 = *v43;
      v46 = v62;
      sub_1D4519B34();
      v47 = sub_1D4519B1C();
      v49 = v48;
      v50 = v46;
      v51 = v4;
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v50, v4);
      v66 = v41;
      v53 = *(_QWORD *)(v41 + 16);
      v52 = *(_QWORD *)(v41 + 24);
      if (v53 >= v52 >> 1)
      {
        sub_1D42DCE78(v52);
        sub_1D42C792C();
        v41 = v66;
      }
      *(_QWORD *)(v41 + 16) = v53 + 1;
      v54 = v41 + 24 * v53;
      *(_BYTE *)(v54 + 32) = v45;
      *(_QWORD *)(v54 + 40) = v47;
      *(_QWORD *)(v54 + 48) = v49;
      v43 += v64;
      --v40;
      v4 = v51;
    }
    while (v40);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v41 = MEMORY[0x1E0DEE9D8];
  }
  sub_1D42B28FC((uint64_t *)&unk_1EFE498A0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D45261D0;
  *(_BYTE *)(inited + 32) = 1;
  *(_QWORD *)(inited + 40) = sub_1D451A6EC();
  *(_QWORD *)(inited + 48) = v56;
  v66 = v41;
  sub_1D44B5284();
  sub_1D42CB520();
}

uint64_t sub_1D439DC90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  BOOL v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;

  sub_1D439D810();
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v7 = (_QWORD *)(v5 + 48);
    while (1)
    {
      v2 = *((unsigned __int8 *)v7 - 16);
      v8 = *(v7 - 1) == a1 && *v7 == a2;
      if (v8 || (sub_1D451B820() & 1) != 0)
        break;
      v7 += 3;
      if (!--v6)
        goto LABEL_9;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
    sub_1D42DCEE8();
    sub_1D439E150();
    v9 = sub_1D4394198();
    sub_1D43EC59C(v9, v10, v11, v12, v13, v14);
    swift_willThrow();
  }
  return v2;
}

id sub_1D439DD74(uint64_t a1, char *a2)
{
  objc_class *ObjectType;
  uint64_t v5;
  char *v6;
  _DWORD *v7;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&a2[OBJC_IVAR____TtC13SoundAnalysis15SNMLLockedModel_model] = a1;
  type metadata accessor for SafeLock();
  v5 = swift_allocObject();
  v6 = a2;
  v7 = (_DWORD *)swift_slowAlloc();
  *v7 = 0;
  *(_QWORD *)(v5 + 16) = v7;
  *(_QWORD *)&v6[OBJC_IVAR____TtC13SoundAnalysis15SNMLLockedModel_lock] = v5;

  v9.receiver = v6;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, sel_init);
}

unint64_t sub_1D439DE1C()
{
  unint64_t result;

  result = qword_1EFE404A0;
  if (!qword_1EFE404A0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFE404A0);
  }
  return result;
}

unint64_t sub_1D439DE58()
{
  unint64_t result;

  result = qword_1EFE4EB30;
  if (!qword_1EFE4EB30)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541324, &unk_1E979B278);
    atomic_store(result, (unint64_t *)&qword_1EFE4EB30);
  }
  return result;
}

uint64_t sub_1D439DE94(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1D42B28FC(a2);
  sub_1D439E168(*(_QWORD *)(v3 - 8));
  return a1;
}

uint64_t storeEnumTagSinglePayload for SNFeatureExtractorIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D439DF14 + 4 * byte_1D4533ED5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D439DF48 + 4 * byte_1D4533ED0[v4]))();
}

uint64_t sub_1D439DF48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D439DF50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D439DF58);
  return result;
}

uint64_t sub_1D439DF64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D439DF6CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D439DF70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D439DF78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SNFeatureExtractorIdentifier()
{
  return &type metadata for SNFeatureExtractorIdentifier;
}

unint64_t sub_1D439DF98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFE4EB40;
  if (!qword_1EFE4EB40)
  {
    v1 = sub_1D42B8B10(&qword_1EFE4EB48);
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EFE4EB40);
  }
  return result;
}

unint64_t sub_1D439DFE0()
{
  unint64_t result;

  result = qword_1EFE40458;
  if (!qword_1EFE40458)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4533FC0, &type metadata for SNFeatureExtractorIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EFE40458);
  }
  return result;
}

unint64_t sub_1D439E01C()
{
  unint64_t result;

  result = qword_1EFE4EB50[0];
  if (!qword_1EFE4EB50[0])
  {
    result = MEMORY[0x1D825E41C](&unk_1D4533F88, &type metadata for SNFeatureExtractorIdentifier);
    atomic_store(result, qword_1EFE4EB50);
  }
  return result;
}

uint64_t sub_1D439E058()
{
  return sub_1D451B820();
}

uint64_t sub_1D439E074()
{
  return sub_1D451B820();
}

uint64_t sub_1D439E090()
{
  return sub_1D451A6EC();
}

uint64_t sub_1D439E0A0()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1D439E0AC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D439E0B8()
{
  return sub_1D451A6EC();
}

uint64_t sub_1D439E0C8()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1D439E0D0()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_1D439E0DC()
{
  return 0xD000000000000017;
}

uint64_t sub_1D439E10C()
{
  return sub_1D451B514();
}

uint64_t sub_1D439E124()
{
  return sub_1D442FC7C();
}

uint64_t sub_1D439E15C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D439E168@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_1D439E174(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v11;

  v5 = sub_1D42B8DB4();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = sub_1D42B8DB4();
  *(_QWORD *)(v6 + 16) = sub_1D439E9B8;
  *(_QWORD *)(v6 + 24) = v5;
  sub_1D42B8E84();
  v7 = *(_QWORD *)(v2 + 16);
  if (v7)
  {
    v8 = *(_QWORD *)(v2 + 24);
    sub_1D42B7F2C();
    sub_1D42B6D0C();
    *v9 = 1;
    sub_1D439EB5C();
    swift_willThrow();
    *(_QWORD *)(v2 + 16) = v7;
    *(_QWORD *)(v2 + 24) = v8;
    sub_1D42B8E7C();
    return swift_release();
  }
  else
  {
    v11 = sub_1D42B8DB4();
    *(_QWORD *)(v11 + 16) = sub_1D439E9C0;
    *(_QWORD *)(v11 + 24) = v6;
    *(_QWORD *)(v2 + 16) = sub_1D439EB48;
    *(_QWORD *)(v2 + 24) = v11;
    sub_1D42B8E7C();
    return sub_1D439EB5C();
  }
}

uint64_t sub_1D439E26C()
{
  return sub_1D439E6A0();
}

uint64_t sub_1D439E280@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

_QWORD *sub_1D439E2AC(_QWORD *(*a1)(uint64_t *__return_ptr))
{
  uint64_t v1;
  _QWORD *result;
  uint64_t v3;

  result = a1(&v3);
  if (!v1)
    return (_QWORD *)v3;
  return result;
}

void sub_1D439E2E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;

  type metadata accessor for XPCDataEncoder.UnkeyedContainer();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = MEMORY[0x1E0DEE9D8];
  v4 = sub_1D42B8DB4();
  *(_QWORD *)(v4 + 16) = sub_1D439EB34;
  *(_QWORD *)(v4 + 24) = v3;
  v5 = sub_1D42B8DB4();
  *(_QWORD *)(v5 + 16) = sub_1D42FBFC4;
  *(_QWORD *)(v5 + 24) = v4;
  sub_1D42B8E8C();
  if (*(_QWORD *)(v0 + 16))
  {
    sub_1D42B8F70();
    v9 = sub_1D42B6D0C();
    sub_1D42B8EA0(v9, v10);
    swift_willThrow();
    *(_QWORD *)(v0 + 16) = v2;
    *(_QWORD *)(v0 + 24) = v1;
    sub_1D42B8E7C();
    swift_release();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v6 = sub_1D42B8DB4();
    *(_QWORD *)(v6 + 16) = sub_1D439E960;
    *(_QWORD *)(v6 + 24) = v5;
    *(_QWORD *)(v0 + 16) = sub_1D439EB48;
    *(_QWORD *)(v0 + 24) = v6;
    sub_1D42B8E7C();
    v7 = sub_1D42B8DB4();
    *(_QWORD *)(v7 + 16) = sub_1D439EA24;
    *(_QWORD *)(v7 + 24) = v3;
    v8 = *(_QWORD *)(v0 + 16);
    *(_QWORD *)(v0 + 16) = sub_1D42FBEF4;
    *(_QWORD *)(v0 + 24) = v7;
    swift_retain_n();
    sub_1D42B7F68(v8);
    sub_1D42B8E64();
  }
}

uint64_t sub_1D439E428()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  void (*v7)(__int128 *__return_ptr, uint64_t);
  uint64_t v8;
  __int128 v9;
  unint64_t v10;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D42B8E84();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v2 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1D42C7960();
    v4 = v16;
    v5 = (uint64_t *)(v2 + 40);
    while (1)
    {
      v7 = (void (*)(__int128 *__return_ptr, uint64_t))*(v5 - 1);
      v6 = *v5;
      v8 = swift_retain();
      v7(&v13, v8);
      if (v1)
        break;
      swift_release();
      v9 = v13;
      v16 = v4;
      v10 = *(_QWORD *)(v4 + 16);
      if (v10 >= *(_QWORD *)(v4 + 24) >> 1)
      {
        v12 = v13;
        sub_1D42C7960();
        v9 = v12;
        v4 = v16;
      }
      *(_QWORD *)(v4 + 16) = v10 + 1;
      *(_OWORD *)(v4 + 16 * v10 + 32) = v9;
      v5 += 2;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  else
  {
LABEL_9:
    v14 = sub_1D42B28FC(&qword_1EFE4EBD8);
    v15 = sub_1D439EA5C(&qword_1EFE4EBE0, &qword_1EFE4EBD8, sub_1D439EA38, MEMORY[0x1E0DEAF10]);
    *(_QWORD *)&v13 = v4;
    v6 = sub_1D44C3224(&v13);
    sub_1D42B5400((uint64_t)&v13);
  }
  return v6;
}

void sub_1D439E5C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;

  type metadata accessor for XPCDataEncoder.SingleValueContainer();
  v3 = sub_1D42B8DB4();
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  v4 = sub_1D42B8DB4();
  *(_QWORD *)(v4 + 16) = sub_1D439EB20;
  *(_QWORD *)(v4 + 24) = v3;
  sub_1D42B8E8C();
  if (*(_QWORD *)(v0 + 16))
  {
    sub_1D42B8F70();
    v6 = sub_1D42B6D0C();
    sub_1D42B8EA0(v6, v7);
    swift_willThrow();
    *(_QWORD *)(v0 + 16) = v2;
    *(_QWORD *)(v0 + 24) = v1;
    sub_1D42B8E7C();
    swift_release();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v5 = sub_1D42B8DB4();
    *(_QWORD *)(v5 + 16) = sub_1D439E960;
    *(_QWORD *)(v5 + 24) = v4;
    *(_QWORD *)(v0 + 16) = sub_1D439E974;
    *(_QWORD *)(v0 + 24) = v5;
    sub_1D42B8E7C();
    swift_retain();
    sub_1D42B8E64();
  }
}

uint64_t sub_1D439E6A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1D42B8E84();
  v2 = *(uint64_t (**)(uint64_t))(v0 + 16);
  if (!v2)
    return 0;
  v3 = *(_QWORD *)(v0 + 24);
  v4 = swift_retain();
  v5 = v3;
  v6 = v2(v4);
  if (!v1)
    v5 = v6;
  sub_1D439EB68();
  return v5;
}

uint64_t sub_1D439E738()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D439E75C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v13;

  v3 = v1;
  type metadata accessor for XPCDataEncoder();
  v5 = sub_1D42B8DB4();
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0;
  v6 = a1[3];
  v7 = a1[4];
  sub_1D42B5528(a1, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v6, v7);
  if (v2)
    return swift_release();
  v8 = sub_1D42B8DB4();
  *(_QWORD *)(v8 + 16) = sub_1D439E26C;
  *(_QWORD *)(v8 + 24) = v5;
  sub_1D42B8E84();
  v9 = *(_QWORD *)(v3 + 16);
  if (v9)
  {
    v10 = *(_QWORD *)(v3 + 24);
    sub_1D42B7F2C();
    sub_1D42B6D0C();
    *v11 = 1;
    swift_retain();
    swift_willThrow();
    *(_QWORD *)(v3 + 16) = v9;
    *(_QWORD *)(v3 + 24) = v10;
    sub_1D42B8E7C();
    swift_release();
    return swift_release();
  }
  v13 = sub_1D42B8DB4();
  *(_QWORD *)(v13 + 16) = sub_1D439E960;
  *(_QWORD *)(v13 + 24) = v8;
  *(_QWORD *)(v3 + 16) = sub_1D439EB48;
  *(_QWORD *)(v3 + 24) = v13;
  return sub_1D42B8E7C();
}

uint64_t sub_1D439E88C(uint64_t a1, unint64_t a2)
{
  sub_1D42E2EE8(a1, a2);
  return a1;
}

uint64_t sub_1D439E8BC()
{
  uint64_t v0;

  sub_1D42B7F68(*(_QWORD *)(v0 + 16));
  sub_1D42EA3A0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for XPCDataEncoder()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for XPCDataEncoder.KeyedContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for XPCDataEncoder.KeyedContainer);
}

uint64_t type metadata accessor for XPCDataEncoder.UnkeyedContainer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for XPCDataEncoder.SingleValueContainer()
{
  return objc_opt_self();
}

uint64_t sub_1D439E944()
{
  swift_release();
  sub_1D42EA3A0();
  return swift_deallocObject();
}

uint64_t sub_1D439E960@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D439E9F8(a1);
}

_QWORD *sub_1D439E974()
{
  uint64_t v0;

  return sub_1D439E2AC(*(_QWORD *(**)(uint64_t *__return_ptr))(v0 + 16));
}

uint64_t sub_1D439E98C()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 >> 60 != 15)
    sub_1D42B5420(*(_QWORD *)(v0 + 16), v1);
  sub_1D42EA3A0();
  return swift_deallocObject();
}

uint64_t sub_1D439E9B8()
{
  uint64_t v0;

  return sub_1D439E88C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1D439E9C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1D439E9F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
  {
    *a1 = result;
    a1[1] = v5;
  }
  return result;
}

uint64_t sub_1D439EA24()
{
  return sub_1D439E428();
}

uint64_t sub_1D439EA38()
{
  return sub_1D439EA5C(&qword_1EFE4EBE8, (uint64_t *)&unk_1EFE4E130, (uint64_t (*)(void))sub_1D439EAC0, MEMORY[0x1E0DEE988]);
}

uint64_t sub_1D439EA5C(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = sub_1D42B8B10(a2);
    v9 = a3();
    result = MEMORY[0x1D825E41C](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D439EAC0()
{
  unint64_t result;

  result = qword_1EFE4EBF0;
  if (!qword_1EFE4EBF0)
  {
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0CB0350], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EFE4EBF0);
  }
  return result;
}

uint64_t sub_1D439EB20()
{
  return sub_1D439E26C();
}

uint64_t sub_1D439EB34()
{
  return sub_1D439EA24();
}

_QWORD *sub_1D439EB48()
{
  return sub_1D439E974();
}

uint64_t sub_1D439EB5C()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1D42E2EE8(v1, v0);
}

uint64_t sub_1D439EB68()
{
  uint64_t v0;

  return sub_1D42B7F68(v0);
}

id sub_1D439EB74()
{
  uint64_t v0;
  objc_class *v1;
  char *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char *v6;
  objc_super v8;

  v2 = (char *)sub_1D42B7238();
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_BYTE *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = &v2[OBJC_IVAR___SNSpeechUtteranceResult_impl];
  *(_QWORD *)v6 = *(_QWORD *)v0;
  *((_QWORD *)v6 + 1) = *(_QWORD *)(v0 + 8);
  *((_OWORD *)v6 + 1) = *(_OWORD *)(v0 + 16);
  *((_QWORD *)v6 + 4) = *(_QWORD *)(v0 + 32);
  *((_QWORD *)v6 + 5) = v3;
  v6[48] = v4;
  *((_QWORD *)v6 + 7) = v5;
  v8.receiver = v2;
  v8.super_class = v1;
  return objc_msgSendSuper2(&v8, sel_init);
}

double SNSpeechUtteranceResult.timeRange.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl;
  *(_QWORD *)v3 = *(_QWORD *)a1;
  *(_QWORD *)(v3 + 8) = *(_QWORD *)(a1 + 8);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a1 + 16);
  result = *(double *)(a1 + 32);
  *(double *)(v3 + 32) = result;
  *(_QWORD *)(v3 + 40) = v2;
  return result;
}

void SNSpeechUtteranceResult.confidence.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl + 56) = a1;
}

uint64_t SNSpeechUtteranceResult.detected.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl + 48) = result;
  return result;
}

double SNSpeechUtteranceResult.timeRange.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl + 40);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(v2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 + 16);
  result = *(double *)(v2 + 32);
  *(double *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v3;
  return result;
}

double (*SNSpeechUtteranceResult.timeRange.modify(_QWORD *a1))(void **a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  SNSpeechUtteranceResult.timeRange.getter((uint64_t)v3);
  return sub_1D439ED80;
}

double sub_1D439ED80(void **a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  double result;

  v1 = *a1;
  v2 = v1[5];
  v3 = v1[6] + OBJC_IVAR___SNSpeechUtteranceResult_impl;
  v4 = v1[1];
  v5 = v1[4];
  v6 = *((_OWORD *)v1 + 1);
  *(_QWORD *)v3 = *v1;
  *(_QWORD *)(v3 + 8) = v4;
  *(_OWORD *)(v3 + 16) = v6;
  *(_QWORD *)(v3 + 32) = v5;
  *(_QWORD *)(v3 + 40) = v2;
  free(v1);
  return result;
}

uint64_t SNSpeechUtteranceResult.detected.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___SNSpeechUtteranceResult_impl + 48);
}

uint64_t (*SNSpeechUtteranceResult.detected.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR___SNSpeechUtteranceResult_impl;
  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(v1 + v2 + 48);
  return sub_1D439EE40;
}

uint64_t sub_1D439EE40(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)result + *(_QWORD *)(result + 8) + 48) = *(_BYTE *)(result + 16);
  return result;
}

double SNSpeechUtteranceResult.confidence.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___SNSpeechUtteranceResult_impl + 56);
}

double (*SNSpeechUtteranceResult.confidence.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR___SNSpeechUtteranceResult_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(_QWORD *)(v1 + v2 + 56);
  return sub_1D439EED0;
}

double sub_1D439EED0(uint64_t a1)
{
  double result;

  result = *(double *)a1;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + *(_QWORD *)(a1 + 16) + 56) = *(_QWORD *)a1;
  return result;
}

id sub_1D439EEE4()
{
  char *v0;
  objc_class *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  objc_super v6;

  v1 = (objc_class *)sub_1D42B7104();
  v2 = MEMORY[0x1E0CA2E40];
  v3 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 40);
  v4 = &v0[OBJC_IVAR___SNSpeechUtteranceResult_impl];
  *(_QWORD *)v4 = *MEMORY[0x1E0CA2E40];
  *((_QWORD *)v4 + 1) = *(_QWORD *)(v2 + 8);
  *((_OWORD *)v4 + 1) = *(_OWORD *)(v2 + 16);
  *((_QWORD *)v4 + 4) = *(_QWORD *)(v2 + 32);
  *((_QWORD *)v4 + 5) = v3;
  v4[48] = 0;
  *((_QWORD *)v4 + 7) = 0;
  v6.receiver = v0;
  v6.super_class = v1;
  return objc_msgSendSuper2(&v6, sel_init);
}

id SNSpeechUtteranceResult.copy(with:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  id result;

  v2 = sub_1D42B7104();
  sub_1D439F7E8(OBJC_IVAR___SNSpeechUtteranceResult_impl);
  result = sub_1D439EB74();
  a1[3] = v2;
  *a1 = result;
  return result;
}

uint64_t SNSpeechUtteranceResult.hash.getter()
{
  sub_1D439F7E8(OBJC_IVAR___SNSpeechUtteranceResult_impl);
  return sub_1D42F59C4();
}

BOOL SNSpeechUtteranceResult.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  int v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  double v11;
  BOOL v12;
  _BOOL8 v13;
  _QWORD v15[2];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[2];
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD v23[2];
  __int128 v24;
  uint64_t v25;

  sub_1D42B7104();
  sub_1D42B28B4(a1, (uint64_t)&v24);
  if (!v25)
    return 0;
  sub_1D42B293C(&v24, v23);
  sub_1D42B294C((uint64_t)v23, (uint64_t)v19);
  if (swift_dynamicCast())
  {
    v3 = (void *)v15[0];
    v4 = *(_QWORD *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl + 40);
    v5 = *(unsigned __int8 *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl + 48);
    v6 = *(double *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl + 56);
    v7 = v15[0] + OBJC_IVAR___SNSpeechUtteranceResult_impl;
    v8 = *(_QWORD *)(v15[0] + OBJC_IVAR___SNSpeechUtteranceResult_impl);
    v9 = *(_QWORD *)(v15[0] + OBJC_IVAR___SNSpeechUtteranceResult_impl + 40);
    v10 = *(unsigned __int8 *)(v15[0] + OBJC_IVAR___SNSpeechUtteranceResult_impl + 48);
    v11 = *(double *)(v15[0] + OBJC_IVAR___SNSpeechUtteranceResult_impl + 56);
    v19[0] = *(_QWORD *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl);
    v19[1] = *(_QWORD *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl + 8);
    v20 = *(_OWORD *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl + 16);
    v21 = *(_QWORD *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl + 32);
    v22 = v4;
    v15[0] = v8;
    v15[1] = *(_QWORD *)(v7 + 8);
    v16 = *(_OWORD *)(v7 + 16);
    v17 = *(_QWORD *)(v7 + 32);
    v18 = v9;
    v12 = static TimeRange.== infix(_:_:)((uint64_t)v19, (uint64_t)v15);

    v13 = 0;
    if (v12 && ((v5 ^ v10) & 1) == 0)
      v13 = v6 == v11;
  }
  else
  {
    v13 = 0;
  }
  sub_1D42B5400((uint64_t)v23);
  return v13;
}

id SNSpeechUtteranceResult.__allocating_init(coder:)()
{
  void *v0;

  sub_1D42B7238();
  return SNSpeechUtteranceResult.init(coder:)(v0);
}

id SNSpeechUtteranceResult.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  id v4;

  v3 = v1;
  sub_1D42B1A68();
  swift_getObjectType();

  v4 = sub_1D439EB74();
  sub_1D432BF64();
  return v4;
}

Swift::Void __swiftcall SNSpeechUtteranceResult.encode(with:)(NSCoder with)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  _OWORD v4[4];

  v2 = *(_OWORD *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl + 16);
  v4[0] = *(_OWORD *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl);
  v4[1] = v2;
  v3 = *(_OWORD *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl + 48);
  v4[2] = *(_OWORD *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl + 32);
  v4[3] = v3;
  sub_1D42AFE30((uint64_t)v4, 1819307369, 0xE400000000000000, (uint64_t)with.super.isa);
}

uint64_t static SNSpeechUtteranceResult.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t SNSpeechUtteranceResult.description.getter()
{
  void *v0;
  objc_class *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  _QWORD v11[6];
  objc_super v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = (objc_class *)sub_1D42B7104();
  v15 = 0;
  v16 = 0xE000000000000000;
  sub_1D451B400();
  v13 = 0;
  v14 = 0xE000000000000000;
  v12.receiver = v0;
  v12.super_class = v1;
  v2 = objc_msgSendSuper2(&v12, sel_description);
  sub_1D451A6EC();
  sub_1D42B722C();
  sub_1D42B7190();
  swift_bridgeObjectRelease();
  sub_1D451A794();
  sub_1D451A794();
  swift_bridgeObjectRelease();
  sub_1D451A794();
  sub_1D451ABD8();
  sub_1D451A794();
  SNSpeechUtteranceResult.timeRange.getter((uint64_t)&v15);
  v3 = v15;
  v4 = v17;
  v5 = v18;
  v6 = v20;
  v7 = (void *)objc_opt_self();
  v11[0] = v3;
  v11[1] = v16;
  v11[2] = v4;
  v11[3] = v5;
  v11[4] = v19;
  v11[5] = v6;
  v8 = objc_msgSend(v7, sel_valueWithCMTimeRange_, v11);
  v9 = objc_msgSend(v8, sel_description);
  sub_1D451A6EC();
  sub_1D42B722C();
  sub_1D42B7190();

  swift_bridgeObjectRelease();
  return v13;
}

id SNSpeechUtteranceResult.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1D42B7104();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D439F6F8(uint64_t a1@<X8>)
{
  SNSpeechUtteranceResult.timeRange.getter(a1);
  sub_1D42B6E24();
}

void sub_1D439F714(uint64_t a1)
{
  SNSpeechUtteranceResult.timeRange.setter(a1);
  sub_1D42B6E24();
}

void sub_1D439F730(_BYTE *a1@<X8>)
{
  *a1 = SNSpeechUtteranceResult.detected.getter() & 1;
  sub_1D42B6E24();
}

void sub_1D439F758(unsigned __int8 *a1)
{
  SNSpeechUtteranceResult.detected.setter(*a1);
  sub_1D42B6E24();
}

void sub_1D439F778(double *a1@<X8>)
{
  *a1 = SNSpeechUtteranceResult.confidence.getter();
  sub_1D42B6E24();
}

void sub_1D439F79C(double *a1)
{
  SNSpeechUtteranceResult.confidence.setter(*a1);
  sub_1D42B6E24();
}

uint64_t type metadata accessor for SNSpeechUtteranceResult()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNSpeechUtteranceResult()
{
  return swift_lookUpClassMethod();
}

double sub_1D439F7E8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(double *)(v1 + a1 + 56);
}

uint64_t sub_1D439F828(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = MEMORY[0x1E0DEE9D8];
  v9 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    type metadata accessor for SNDSPItemInfo();
    swift_bridgeObjectRetain();
    for (i = 0; i != v2; ++i)
    {
      v4 = swift_bridgeObjectRetain();
      sub_1D43A0008(v4);
      v6 = v5;
      v7 = swift_bridgeObjectRelease();
      if (v6)
      {
        MEMORY[0x1D825C238](v7);
        if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1D451A98C();
        sub_1D451A9E0();
        sub_1D451A950();
      }
    }
    swift_bridgeObjectRelease();
    v1 = v9;
  }
  swift_bridgeObjectRelease();
  return v1;
}

void sub_1D439F93C(uint64_t a1)
{
  char *v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC13SoundAnalysis18SNDSPConfiguration_dspItems);
  if (v2 >> 62)
  {
    sub_1D42CB7B8();
    v3 = sub_1D451B5A4();
    if (v3)
      goto LABEL_3;
LABEL_35:
    swift_bridgeObjectRelease();
    sub_1D43A1908();
    return;
  }
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_1D42CB7B8();
  if (!v3)
    goto LABEL_35;
LABEL_3:
  if (v3 >= 1)
  {
    v4 = 0;
    v5 = 0;
    while (1)
    {
      v6 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1D825CD78](v5, v2) : *(id *)(v2 + 8 * v5 + 32);
      v7 = v6;
      type metadata accessor for SNDSPGraphInfo();
      if (!sub_1D43A1964())
        break;
      v8 = sub_1D43A1A40();
      v1 = (char *)sub_1D439FDA0((uint64_t)v1);

      v4 = v1;
LABEL_22:
      if (v3 == ++v5)
        goto LABEL_35;
    }
    if (v4)
    {
      type metadata accessor for SNAUStripInfo();
      if (sub_1D43A1964())
      {
        v7 = sub_1D43A1A40();
        v9 = v4;
        if ((sub_1D43A1330((uint64_t)v1, (uint64_t)v9) & 1) == 0)
        {
          if (qword_1EFE40338 != -1)
            swift_once();
          v10 = sub_1D430710C();
          v11 = sub_1D42CC880(v10, (uint64_t)qword_1EFEA7700);
          v12 = v7;
          v13 = v9;
          v14 = v12;
          v15 = v13;
          sub_1D4519FFC();
          v16 = sub_1D43A1A0C();
          if (sub_1D43A19FC(v16))
          {
            v17 = sub_1D42CC940();
            sub_1D42CC940();
            *(_DWORD *)v17 = 136315394;
            if (!*(_QWORD *)&v1[OBJC_IVAR____TtC13SoundAnalysis13SNAUStripInfo_path + 8])
              sub_1D43A1970();
            v23 = swift_bridgeObjectRetain();
            *(_QWORD *)(v17 + 4) = sub_1D43A19DC(v23, v24, v25, v26, v27, v28, v29);

            swift_bridgeObjectRelease();
            v30 = sub_1D43A19AC();
            sub_1D451A6EC();
            sub_1D43A1AB8();
            *(_QWORD *)(v17 + 14) = sub_1D43A19CC(v31, v32, v33, v34, v35, v36, v37);

            sub_1D42CB8F4();
            sub_1D43A1AA4(&dword_1D42A7000, v11, (os_log_type_t)v12, "Applying AUStrip %s to graph %s failed");
            sub_1D43A1A28();
            sub_1D42CC934();
          }
LABEL_29:

          v4 = 0;
          goto LABEL_22;
        }
LABEL_20:

        goto LABEL_21;
      }
      type metadata accessor for SNPropertyStripInfo();
      if (sub_1D43A1964())
      {
        v7 = sub_1D43A1A40();
        v9 = v4;
        if ((sub_1D43A14F4((uint64_t)v1, (uint64_t)v9) & 1) == 0)
        {
          if (qword_1EFE40338 != -1)
            swift_once();
          v18 = sub_1D430710C();
          v11 = sub_1D42CC880(v18, (uint64_t)qword_1EFEA7700);
          v19 = v7;
          v20 = v9;
          v14 = v19;
          v15 = v20;
          sub_1D4519FFC();
          v21 = sub_1D43A1A0C();
          if (sub_1D43A19FC(v21))
          {
            v22 = sub_1D42CC940();
            sub_1D42CC940();
            *(_DWORD *)v22 = 136315394;
            if (!*(_QWORD *)&v1[OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_path + 8])
              sub_1D43A1970();
            v38 = swift_bridgeObjectRetain();
            *(_QWORD *)(v22 + 4) = sub_1D43A19DC(v38, v39, v40, v41, v42, v43, v44);

            swift_bridgeObjectRelease();
            v45 = sub_1D43A19AC();
            sub_1D451A6EC();
            sub_1D43A1AB8();
            *(_QWORD *)(v22 + 14) = sub_1D43A19CC(v46, v47, v48, v49, v50, v51, v52);

            sub_1D42CB8F4();
            sub_1D43A1AA4(&dword_1D42A7000, v11, (os_log_type_t)v19, "Applying PropertyStrip %s to graph %s failed");
            sub_1D43A1A28();
            sub_1D42CC934();
          }
          goto LABEL_29;
        }
        goto LABEL_20;
      }
    }
LABEL_21:

    goto LABEL_22;
  }
  __break(1u);
}

id sub_1D439FDA0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;

  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC13SoundAnalysis14SNDSPGraphInfo_text + 8))
  {
    v2 = (void *)sub_1D451A6C8();
    if (!*(_QWORD *)(a1 + OBJC_IVAR____TtC13SoundAnalysis14SNDSPGraphInfo_substitutions))
    {
      sub_1D451A5E4();
      sub_1D43A1A70();
    }
    swift_bridgeObjectRetain();
    v3 = (void *)sub_1D43A19BC();
    sub_1D42CB0C4();
    objc_opt_self();
    sub_1D42CB7B8();
    v4 = (void *)sub_1D43A1A34();
    sub_1D42CB0C4();
    v5 = sub_1D43A1A48();
    v9 = sub_1D4503D40(v5, v6, v7, v8);
LABEL_16:
    v13 = v9;

    return v13;
  }
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC13SoundAnalysis14SNDSPGraphInfo_path + 8))
  {
    v2 = (void *)sub_1D451A6C8();
    if (!*(_QWORD *)(a1 + OBJC_IVAR____TtC13SoundAnalysis14SNDSPGraphInfo_substitutions))
    {
      sub_1D451A5E4();
      sub_1D43A1A70();
    }
    swift_bridgeObjectRetain();
    v3 = (void *)sub_1D43A19BC();
    sub_1D42CB0C4();
    objc_opt_self();
    sub_1D42CB7B8();
    v4 = (void *)sub_1D43A1A34();
    sub_1D42CB0C4();
    v14 = sub_1D43A1A48();
    v9 = sub_1D4502E98(v14, v15, v16, v17);
    goto LABEL_16;
  }
  if (qword_1EFE40338 != -1)
    swift_once();
  v10 = sub_1D430710C();
  sub_1D42CC880(v10, (uint64_t)qword_1EFEA7700);
  v11 = sub_1D43A1AB0();
  v12 = sub_1D451AF5C();
  if (os_log_type_enabled(v11, v12))
  {
    *(_WORD *)sub_1D42CC940() = 0;
    sub_1D43A19A0(&dword_1D42A7000, v11, v12, "DSPGraphInfo doesn't specify either text or path");
    sub_1D42CC934();
  }

  return 0;
}

void sub_1D43A0008(uint64_t a1)
{
  unint64_t v2;
  char v3;
  BOOL v4;
  id v5;
  BOOL v6;
  id v7;
  char v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[32];

  if (*(_QWORD *)(a1 + 16))
  {
    v2 = sub_1D4366B34(1701869908, 0xE400000000000000);
    if ((v3 & 1) != 0)
    {
      sub_1D42B294C(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)v13);
      if ((sub_1D42B6E2C() & 1) != 0)
      {
        v4 = v11 == 0x6870617247505344 && v12 == 0xE800000000000000;
        if (v4 || (sub_1D42F1F04() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v5 = objc_allocWithZone((Class)type metadata accessor for SNDSPGraphInfo());
          sub_1D43A18EC();
          sub_1D42CB7B8();
          sub_1D43A1944();
          sub_1D43A026C();
          return;
        }
        v6 = v11 == 0x70697274535541 && v12 == 0xE700000000000000;
        if (v6 || (sub_1D42F1F04() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v7 = objc_allocWithZone((Class)type metadata accessor for SNAUStripInfo());
          sub_1D43A18EC();
          sub_1D42CB7B8();
          sub_1D43A1944();
          sub_1D43A0878();
          return;
        }
        if (v11 == 0x79747265706F7250 && v12 == 0xED00007069727453)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v9 = sub_1D42F1F04();
          swift_bridgeObjectRelease();
          if ((v9 & 1) == 0)
            return;
        }
        v10 = objc_allocWithZone((Class)type metadata accessor for SNPropertyStripInfo());
        sub_1D43A18EC();
        sub_1D42CB7B8();
        sub_1D43A1944();
        sub_1D43A0D20();
      }
    }
  }
}

id sub_1D43A0240()
{
  return sub_1D43A17BC(type metadata accessor for SNDSPItemInfo);
}

uint64_t type metadata accessor for SNDSPItemInfo()
{
  return objc_opt_self();
}

id sub_1D43A026C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  char *v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  objc_super v44;
  __int128 v45;
  uint64_t v46;

  v0 = (char *)sub_1D43A18F8();
  sub_1D43A18C8(&v45);
  v7 = (void *)MEMORY[0x1E0DEE9B8];
  if (v46)
  {
    v8 = sub_1D43A18A0();
    if (v8)
      v9 = v42;
    else
      v9 = 0;
    if (v8)
      v10 = v43;
    else
      v10 = 0;
  }
  else
  {
    sub_1D42B71A0(v1, v2, v3, v4, v5, v6);
    v9 = 0;
    v10 = 0;
  }
  sub_1D43A18DC(1954047316, 0xE400000000000000, &v45);
  if (v46)
  {
    v17 = sub_1D43A18A0();
    v18 = v42;
    if (!v17)
      v18 = 0;
    v41 = v18;
    if (v17)
      v19 = v43;
    else
      v19 = 0;
  }
  else
  {
    sub_1D42B71A0(v11, v12, v13, v14, v15, v16);
    v41 = 0;
    v19 = 0;
  }
  sub_1D43A18DC(0x506564756C636E49, 0xEC00000073687461, &v45);
  if (v46)
  {
    sub_1D42B28FC((uint64_t *)&unk_1EFE51A80);
    if (sub_1D43A18A0())
      v26 = v42;
    else
      v26 = 0;
  }
  else
  {
    sub_1D42B71A0(v20, v21, v22, v23, v24, v25);
    v26 = 0;
  }
  sub_1D43A18DC(0x7574697473627553, 0xED0000736E6F6974, &v45);
  v27 = sub_1D42CB8F4();
  if (v46)
  {
    sub_1D42B28FC((uint64_t *)&unk_1EFE472F0);
    if (sub_1D43A18A0())
      v33 = v42;
    else
      v33 = 0;
    if (v10)
      goto LABEL_26;
LABEL_28:
    sub_1D42D3258();
    v37 = 0;
    goto LABEL_29;
  }
  sub_1D42B71A0(v27, v28, v29, v30, v31, v32);
  v33 = 0;
  if (!v10)
    goto LABEL_28;
LABEL_26:
  sub_1D42DCE84();
  sub_1D43A1958();
  v34 = (void *)sub_1D43A1924();
  v35 = sub_1D42DCE60((uint64_t)v34, sel_stringByAppendingPathComponent_);

  v9 = sub_1D451A6EC();
  v37 = v36;
  sub_1D42D3258();
  sub_1D439E0A0();

LABEL_29:
  v38 = (uint64_t *)&v0[OBJC_IVAR____TtC13SoundAnalysis14SNDSPGraphInfo_path];
  *v38 = v9;
  v38[1] = v37;
  v39 = &v0[OBJC_IVAR____TtC13SoundAnalysis14SNDSPGraphInfo_text];
  *(_QWORD *)v39 = v41;
  *((_QWORD *)v39 + 1) = v19;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13SoundAnalysis14SNDSPGraphInfo_includePaths] = v26;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13SoundAnalysis14SNDSPGraphInfo_substitutions] = v33;

  v44.receiver = v0;
  v44.super_class = (Class)type metadata accessor for SNDSPGraphInfo();
  return objc_msgSendSuper2(&v44, sel_init);
}

uint64_t sub_1D43A04B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  _QWORD *v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char *v26;
  uint64_t v27;

  v4 = sub_1D43A1A5C(a1, a2, a3);
  if (!v27)
  {
    sub_1D42B6E54(v4, v5);
    goto LABEL_34;
  }
  type metadata accessor for SNDSPGraphInfo();
  if ((sub_1D42B6E2C() & 1) == 0)
  {
LABEL_34:
    v12 = 0;
    return v12 & 1;
  }
  if (v26 == v3)
  {

  }
  else
  {
    sub_1D43A1A7C();
    if (v8)
    {
      if (!v6)
        goto LABEL_33;
      sub_1D43A1934(v7);
      v11 = v11 && v9 == v10;
      if (!v11 && (sub_1D42F1F04() & 1) == 0)
        goto LABEL_33;
    }
    else if (v6)
    {
      goto LABEL_33;
    }
    sub_1D43A1A7C();
    if (v15)
    {
      if (!v13)
        goto LABEL_33;
      sub_1D43A1934(v14);
      v18 = v11 && v16 == v17;
      if (!v18 && (sub_1D42F1F04() & 1) == 0)
        goto LABEL_33;
    }
    else if (v13)
    {
      goto LABEL_33;
    }
    v19 = *(_QWORD **)&v3[OBJC_IVAR____TtC13SoundAnalysis14SNDSPGraphInfo_includePaths];
    v20 = *(_QWORD **)&v26[OBJC_IVAR____TtC13SoundAnalysis14SNDSPGraphInfo_includePaths];
    if (v19)
    {
      if (!v20)
        goto LABEL_33;
      sub_1D42FE00C(v19, v20);
      if ((v21 & 1) == 0)
        goto LABEL_33;
    }
    else if (v20)
    {
      goto LABEL_33;
    }
    v22 = *(_QWORD *)&v3[OBJC_IVAR____TtC13SoundAnalysis14SNDSPGraphInfo_substitutions];
    v23 = *(_QWORD *)&v26[OBJC_IVAR____TtC13SoundAnalysis14SNDSPGraphInfo_substitutions];
    if (v22)
    {
      if (v23)
      {
        swift_bridgeObjectRetain_n();
        sub_1D42CB6CC();
        sub_1D432F2E8(v22, v23);
        v12 = v24;
        swift_bridgeObjectRelease_n();
        sub_1D42B7204();

        return v12 & 1;
      }
LABEL_33:

      goto LABEL_34;
    }
    sub_1D42CB6CC();

    if (v23)
    {
      sub_1D42B7204();
      goto LABEL_34;
    }
  }
  v12 = 1;
  return v12 & 1;
}

void sub_1D43A065C()
{
  sub_1D42B28FC(&qword_1EFE4A7A0);
  sub_1D451B16C();
  sub_1D451B16C();
  sub_1D42B28FC(&qword_1EFE4EC58);
  sub_1D43A1848(&qword_1EFE4EC60, (uint64_t *)&unk_1EFE51A80, MEMORY[0x1E0DEAF18]);
  sub_1D451B16C();
  sub_1D42B28FC(&qword_1EFE4EC68);
  sub_1D43A1848(&qword_1EFE4EC70, (uint64_t *)&unk_1EFE472F0, MEMORY[0x1E0DEA0C0]);
  sub_1D451B16C();
  sub_1D42CB6D4();
}

void sub_1D43A077C()
{
  sub_1D43070D0();
  __break(1u);
}

uint64_t sub_1D43A07AC()
{
  sub_1D43A18E4();
  sub_1D43A18E4();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_1D43A07F8()
{
  return sub_1D43A17BC(type metadata accessor for SNDSPGraphInfo);
}

uint64_t type metadata accessor for SNDSPGraphInfo()
{
  return objc_opt_self();
}

id sub_1D43A0878()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v20;
  uint64_t v21;
  objc_super v22;
  __int128 v23;
  uint64_t v24;

  v0 = (char *)sub_1D43A18F8();
  sub_1D43A18C8(&v23);
  v5 = (void *)MEMORY[0x1E0DEE9B8];
  if (v24)
  {
    v6 = sub_1D43A18B4();
    if (v6)
      v7 = v20;
    else
      v7 = 0;
    if (v6)
      v8 = v21;
    else
      v8 = 0;
  }
  else
  {
    sub_1D42B6DC4(v1, v2, v3, v4);
    v7 = 0;
    v8 = 0;
  }
  sub_1D43A18DC(0x65756C6156, 0xE500000000000000, &v23);
  v9 = sub_1D42CB8F4();
  if (v24)
  {
    sub_1D42B28FC(&qword_1EFE4A590);
    if (sub_1D43A18B4())
      v13 = v20;
    else
      v13 = 0;
    if (v8)
      goto LABEL_14;
LABEL_16:
    sub_1D42D3258();
    v17 = 0;
    goto LABEL_17;
  }
  sub_1D42B6DC4(v9, v10, v11, v12);
  v13 = 0;
  if (!v8)
    goto LABEL_16;
LABEL_14:
  sub_1D42DCE84();
  sub_1D43A1958();
  v14 = (void *)sub_1D43A1924();
  v15 = sub_1D42DCE60((uint64_t)v14, sel_stringByAppendingPathComponent_);

  v7 = sub_1D451A6EC();
  v17 = v16;
  sub_1D42D3258();
  sub_1D439E0A0();

LABEL_17:
  v18 = (uint64_t *)&v0[OBJC_IVAR____TtC13SoundAnalysis13SNAUStripInfo_path];
  *v18 = v7;
  v18[1] = v17;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13SoundAnalysis13SNAUStripInfo_value] = v13;

  v22.receiver = v0;
  v22.super_class = (Class)type metadata accessor for SNAUStripInfo();
  return objc_msgSendSuper2(&v22, sel_init);
}

void sub_1D43A09E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  char *v16;
  uint64_t v17;

  v4 = sub_1D43A1A5C(a1, a2, a3);
  if (v17)
  {
    type metadata accessor for SNAUStripInfo();
    if ((sub_1D42B6E2C() & 1) != 0)
    {
      if (v16 == v3)
      {

        goto LABEL_20;
      }
      sub_1D43A1A90();
      if (v8)
      {
        if (!v6)
          goto LABEL_19;
        sub_1D43A1934(v7);
        v11 = v11 && v9 == v10;
        if (!v11 && (sub_1D42F1F04() & 1) == 0)
          goto LABEL_19;
      }
      else if (v6)
      {
LABEL_19:

        goto LABEL_20;
      }
      if (*(_QWORD *)&v3[OBJC_IVAR____TtC13SoundAnalysis13SNAUStripInfo_value])
      {
        v12 = (void *)sub_1D451A5A8();
        if (!*(_QWORD *)&v16[OBJC_IVAR____TtC13SoundAnalysis13SNAUStripInfo_value])
        {
          if (!v12)
            goto LABEL_19;
LABEL_26:

          goto LABEL_20;
        }
      }
      else
      {
        if (!*(_QWORD *)&v16[OBJC_IVAR____TtC13SoundAnalysis13SNAUStripInfo_value])
          goto LABEL_19;
        v12 = 0;
      }
      v13 = sub_1D451A5A8();
      v14 = (void *)v13;
      if (v12)
      {
        if (v13)
        {
          sub_1D43A1A14();
          v15 = v12;
          sub_1D43A1A1C();
          sub_1D42CFC98();

          goto LABEL_20;
        }
        goto LABEL_26;
      }

      if (v14)
    }
  }
  else
  {
    sub_1D42B6E54(v4, v5);
  }
LABEL_20:
  sub_1D43A198C();
}

unint64_t sub_1D43A0B7C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unint64_t v3;
  __int128 v5;

  v5 = *(_OWORD *)(v0 + OBJC_IVAR____TtC13SoundAnalysis13SNAUStripInfo_path);
  sub_1D42B28FC(&qword_1EFE4A7A0);
  v1 = sub_1D451B16C();
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC13SoundAnalysis13SNAUStripInfo_value))
    sub_1D451A5E4();
  swift_bridgeObjectRetain();
  v2 = (void *)sub_1D451A5A8();
  sub_1D42B7204();
  v3 = (unint64_t)objc_msgSend(v2, sel_hash, v5);

  return v3 ^ v1;
}

void sub_1D43A0C64()
{
  sub_1D43070D0();
  __break(1u);
}

uint64_t sub_1D43A0C94()
{
  sub_1D43A18E4();
  return swift_bridgeObjectRelease();
}

id sub_1D43A0CC0()
{
  return sub_1D43A17BC(type metadata accessor for SNAUStripInfo);
}

uint64_t type metadata accessor for SNAUStripInfo()
{
  return objc_opt_self();
}

void sub_1D43A0D20()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  objc_super v24;
  __int128 v25;
  uint64_t v26;

  v2 = (char *)sub_1D43A18F8();
  sub_1D43A18C8(&v25);
  v7 = (void *)MEMORY[0x1E0DEE9B8];
  if (v26)
  {
    v8 = sub_1D43A18B4();
    if (v8)
      v9 = v22;
    else
      v9 = 0;
    if (v8)
      v10 = v23;
    else
      v10 = 0;
  }
  else
  {
    sub_1D42B6DC4(v3, v4, v5, v6);
    v9 = 0;
    v10 = 0;
  }
  sub_1D43A18DC(0x65756C6156, 0xE500000000000000, &v25);
  v11 = sub_1D42CB8F4();
  if (v26)
  {
    sub_1D42B28FC(&qword_1EFE4A590);
    if (sub_1D43A18B4())
      v15 = v22;
    else
      v15 = 0;
    if (v10)
      goto LABEL_14;
LABEL_16:
    v19 = 0;
    goto LABEL_17;
  }
  sub_1D42B6DC4(v11, v12, v13, v14);
  v15 = 0;
  if (!v10)
    goto LABEL_16;
LABEL_14:
  sub_1D42DCE84();
  sub_1D43A1958();
  v16 = (void *)sub_1D43A1924();
  v17 = objc_msgSend(v7, sel_stringByAppendingPathComponent_, v16);

  v9 = sub_1D451A6EC();
  v19 = v18;
  sub_1D439E0A0();

LABEL_17:
  v20 = (uint64_t *)&v2[OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_path];
  *v20 = v9;
  v20[1] = v19;
  *(_QWORD *)&v2[OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_value] = v15;
  v21 = &v2[OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_resourcePath];
  *(_QWORD *)v21 = v0;
  *((_QWORD *)v21 + 1) = v1;

  v24.receiver = v2;
  v24.super_class = (Class)type metadata accessor for SNPropertyStripInfo();
  objc_msgSendSuper2(&v24, sel_init);
  sub_1D43A1908();
}

void sub_1D43A0E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  BOOL v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  char *v17;
  uint64_t v18;

  v4 = sub_1D43A1A5C(a1, a2, a3);
  if (v18)
  {
    type metadata accessor for SNPropertyStripInfo();
    if ((sub_1D42B6E2C() & 1) != 0)
    {
      if (v17 == v3)
      {

        goto LABEL_25;
      }
      sub_1D43A1A90();
      if (v8)
      {
        if (!v6)
          goto LABEL_24;
        sub_1D43A1934(v7);
        v11 = v11 && v9 == v10;
        if (!v11 && (sub_1D42F1F04() & 1) == 0)
          goto LABEL_24;
      }
      else if (v6)
      {
LABEL_24:

        goto LABEL_25;
      }
      v12 = *(_QWORD *)&v3[OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_resourcePath] == *(_QWORD *)&v17[OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_resourcePath]
         && *(_QWORD *)&v3[OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_resourcePath + 8] == *(_QWORD *)&v17[OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_resourcePath + 8];
      if (!v12 && (sub_1D42F1F04() & 1) == 0)
        goto LABEL_24;
      if (*(_QWORD *)&v3[OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_value])
      {
        v13 = (void *)sub_1D451A5A8();
        if (!*(_QWORD *)&v17[OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_value])
        {
          if (!v13)
            goto LABEL_24;
LABEL_31:

          goto LABEL_25;
        }
      }
      else
      {
        if (!*(_QWORD *)&v17[OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_value])
          goto LABEL_24;
        v13 = 0;
      }
      v14 = sub_1D451A5A8();
      v15 = (void *)v14;
      if (v13)
      {
        if (v14)
        {
          sub_1D43A1A14();
          v16 = v13;
          sub_1D43A1A1C();
          sub_1D42CFC98();

          goto LABEL_25;
        }
        goto LABEL_31;
      }

      if (v15)
    }
  }
  else
  {
    sub_1D42B6E54(v4, v5);
  }
LABEL_25:
  sub_1D43A198C();
}

void sub_1D43A1054()
{
  uint64_t v0;
  void *v1;
  __int128 v2;

  v2 = *(_OWORD *)(v0 + OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_path);
  sub_1D42B28FC(&qword_1EFE4A7A0);
  sub_1D451B16C();
  sub_1D451A7F4();
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_value))
  {
    sub_1D451A5E4();
    sub_1D43A1A70();
  }
  swift_bridgeObjectRetain();
  v1 = (void *)sub_1D451A5A8();
  sub_1D42CB0C4();
  objc_msgSend(v1, sel_hash, v2);

  sub_1D42CB6D4();
}

void sub_1D43A114C()
{
  sub_1D43070D0();
  __break(1u);
}

uint64_t sub_1D43A117C()
{
  sub_1D43A18E4();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_1D43A11BC()
{
  return sub_1D43A17BC(type metadata accessor for SNPropertyStripInfo);
}

uint64_t type metadata accessor for SNPropertyStripInfo()
{
  return objc_opt_self();
}

id sub_1D43A1230(uint64_t a1)
{
  void *v1;
  char *v3;
  uint64_t v4;
  objc_super v6;

  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_1D439F828(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v3[OBJC_IVAR____TtC13SoundAnalysis18SNDSPConfiguration_dspItems] = v4;

  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for SNDSPConfiguration();
  return objc_msgSendSuper2(&v6, sel_init);
}

void sub_1D43A12C4()
{
  sub_1D43070D0();
  __break(1u);
}

id sub_1D43A12F4()
{
  return sub_1D43A17BC(type metadata accessor for SNDSPConfiguration);
}

uint64_t type metadata accessor for SNDSPConfiguration()
{
  return objc_opt_self();
}

uint64_t sub_1D43A1330(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v8;
  os_log_type_t v9;

  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC13SoundAnalysis13SNAUStripInfo_value))
  {
    v3 = (void *)sub_1D451A5A8();
LABEL_7:
    v6 = sub_1D44F4C6C(a2, v3);
    goto LABEL_8;
  }
  v3 = *(void **)(a1 + OBJC_IVAR____TtC13SoundAnalysis13SNAUStripInfo_path + 8);
  if (v3)
  {
    sub_1D43A1A14();
    sub_1D43A18EC();
    v4 = sub_1D43A16E4();
    if (v4)
    {
      v5 = v4;
      sub_1D43A1A64();

    }
    sub_1D451A5E4();
    sub_1D43A1A70();
    swift_bridgeObjectRelease();
    v3 = (void *)sub_1D451A5A8();
    sub_1D42CB0C4();
    goto LABEL_7;
  }
  if (qword_1EFE40338 != -1)
    swift_once();
  v8 = sub_1D430710C();
  sub_1D42CC880(v8, (uint64_t)qword_1EFEA7700);
  sub_1D43A1AB0();
  v9 = sub_1D43A1A0C();
  if (sub_1D43A19EC(v9))
  {
    *(_WORD *)sub_1D42CC940() = 0;
    sub_1D43A19A0(&dword_1D42A7000, 0, (os_log_type_t)a2, "AUStripInfo doesn't specify either value or path");
    sub_1D42CC934();
  }
  v6 = 0;
LABEL_8:

  return v6;
}

uint64_t sub_1D43A14F4(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v8;
  os_log_type_t v9;

  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_value))
  {
    v3 = (void *)sub_1D451A5A8();
LABEL_7:
    v4 = (void *)sub_1D451A6C8();
    sub_1D44F50B0(a2, v3, v4);
    sub_1D42CFC98();
    goto LABEL_8;
  }
  v4 = *(void **)(a1 + OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_path + 8);
  if (v4)
  {
    sub_1D43A1A14();
    sub_1D42CB6CC();
    v5 = sub_1D43A16E4();
    if (v5)
    {
      v6 = v5;
      sub_1D43A1A64();

    }
    sub_1D451A5E4();
    swift_bridgeObjectRelease();
    v3 = (void *)sub_1D451A5A8();
    sub_1D42B7204();
    goto LABEL_7;
  }
  if (qword_1EFE40338 != -1)
    swift_once();
  v8 = sub_1D430710C();
  sub_1D42CC880(v8, (uint64_t)qword_1EFEA7700);
  sub_1D43A1AB0();
  v9 = sub_1D43A1A0C();
  if (sub_1D43A19EC(v9))
  {
    *(_WORD *)sub_1D42CC940() = 0;
    sub_1D43A19A0(&dword_1D42A7000, 0, (os_log_type_t)a2, "PropertyStripInfo doesn't specify either value or path");
    sub_1D42CC934();
  }
  a2 = 0;
LABEL_8:

  return a2;
}

id sub_1D43A16E4()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_1D451A6C8();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithContentsOfFile_, v1);

  return v2;
}

id sub_1D43A1754(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_init);
}

id sub_1D43A17B0()
{
  return sub_1D43A17BC(type metadata accessor for SNDSPGraphLoader);
}

id sub_1D43A17BC(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for SNDSPGraphLoader()
{
  return objc_opt_self();
}

unint64_t sub_1D43A180C()
{
  unint64_t result;

  result = qword_1EFE403E0;
  if (!qword_1EFE403E0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFE403E0);
  }
  return result;
}

uint64_t sub_1D43A1848(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = sub_1D42B8B10(a2);
    v7 = MEMORY[0x1E0DEA978];
    result = MEMORY[0x1D825E41C](a3, v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D43A18A0()
{
  return swift_dynamicCast();
}

uint64_t sub_1D43A18B4()
{
  return swift_dynamicCast();
}

void sub_1D43A18C8(_OWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1D436479C(1752457552, 0xE400000000000000, v1, a1);
}

void sub_1D43A18DC(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;

  sub_1D436479C(a1, a2, v3, a3);
}

uint64_t sub_1D43A18E4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43A18EC()
{
  return swift_bridgeObjectRetain();
}

id sub_1D43A18F8()
{
  void *v0;

  return v0;
}

uint64_t sub_1D43A1924()
{
  return sub_1D451A6C8();
}

uint64_t sub_1D43A1934@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)a1;
}

uint64_t sub_1D43A1944()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D43A1958()
{
  return sub_1D451A6C8();
}

uint64_t sub_1D43A1964()
{
  return swift_dynamicCastClass();
}

void sub_1D43A19A0(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 2u);
}

id sub_1D43A19AC()
{
  void *v0;
  uint64_t v1;

  *(_WORD *)(v1 + 12) = 2080;
  return sub_1D44F5CD8(v0);
}

uint64_t sub_1D43A19BC()
{
  return sub_1D451A5A8();
}

uint64_t sub_1D43A19CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  unint64_t v7;
  uint64_t v8;
  va_list va;

  va_start(va, a7);
  return sub_1D43D72EC(v8, v7, (uint64_t *)va);
}

uint64_t sub_1D43A19DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  unint64_t v7;
  uint64_t v8;
  va_list va;

  va_start(va, a7);
  return sub_1D43D72EC(v8, v7, (uint64_t *)va);
}

BOOL sub_1D43A19EC(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

BOOL sub_1D43A19FC(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1D43A1A0C()
{
  return sub_1D451AF5C();
}

unint64_t sub_1D43A1A14()
{
  return sub_1D43A180C();
}

uint64_t sub_1D43A1A1C()
{
  return sub_1D451B10C();
}

uint64_t sub_1D43A1A28()
{
  return swift_arrayDestroy();
}

uint64_t sub_1D43A1A34()
{
  return sub_1D451A908();
}

id sub_1D43A1A40()
{
  void *v0;

  return v0;
}

uint64_t sub_1D43A1A48()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D43A1A5C(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return sub_1D42B28B4(a1, (uint64_t)va);
}

uint64_t sub_1D43A1A64()
{
  return sub_1D451A5C0();
}

uint64_t sub_1D43A1A70()
{
  return 0;
}

void sub_1D43A1AA4(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0x16u);
}

uint64_t sub_1D43A1AB0()
{
  return sub_1D4519FFC();
}

void sub_1D43A1AB8()
{
  void *v0;

}

id sub_1D43A1B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  void *v5;

  sub_1D43A1B50();
  sub_1D42B28FC(a4);
  v5 = (void *)sub_1D451A908();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1D43A1B50()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

void sub_1D43A1BA8(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, _QWORD *a5)
{
  uint64_t v7;
  id v8;

  sub_1D42B28FC(a4);
  v7 = sub_1D451A92C();
  v8 = a1;
  sub_1D43A1C14(v7, a5);

}

void sub_1D43A1C14(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)(v2 + *a2);
  swift_beginAccess();
  *v4 = a1;
  swift_bridgeObjectRelease();
  sub_1D43A2630();
}

uint64_t sub_1D43A1C78()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___SNResultsCollector_completeCount);
}

uint64_t sub_1D43A1CAC(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR___SNResultsCollector_completeCount) = result;
  return result;
}

id sub_1D43A1CBC()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  objc_super v4;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR___SNResultsCollector_results] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR___SNResultsCollector_errors] = v2;
  *(_QWORD *)&v0[OBJC_IVAR___SNResultsCollector_completeCount] = 0;
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_init);
}

id static SNResultsCollector.automaticallyNotifiesObservers(forKey:)(uint64_t a1, uint64_t a2)
{
  id v5;
  void *ObjCClassFromMetadata;
  void *v9;
  objc_super v11;

  if (a1 == 0x73746C75736572 && a2 == 0xE700000000000000)
    return 0;
  v5 = 0;
  if ((sub_1D43A25F0() & 1) != 0)
    return v5;
  if (a1 == 0x73726F727265 && a2 == 0xE600000000000000)
    return 0;
  v5 = 0;
  if ((sub_1D43A25F0() & 1) != 0)
    return v5;
  if (a1 == 0x6574656C706D6F63 && a2 == 0xED0000746E756F43)
    return 0;
  v5 = 0;
  if ((sub_1D43A25F0() & 1) == 0)
  {
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    v9 = (void *)sub_1D451A6C8();
    v11.receiver = ObjCClassFromMetadata;
    v11.super_class = (Class)&OBJC_METACLASS___SNResultsCollector;
    v5 = objc_msgSendSuper2(&v11, sel_automaticallyNotifiesObserversForKey_, v9);

  }
  return v5;
}

void SNResultsCollector.request(_:didProduce:)()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;

  v0 = (_QWORD *)sub_1D43A25B8();
  sub_1D43A25E4((uint64_t)v0, sel_willChangeValueForKey_);

  sub_1D43A2618();
  v1 = swift_unknownObjectRetain();
  MEMORY[0x1D825C238](v1);
  sub_1D43A24F0(*(_QWORD *)((*v0 & 0xFFFFFFFFFFFFF8) + 0x10));
  sub_1D451A9E0();
  sub_1D451A950();
  swift_endAccess();
  v2 = (void *)sub_1D43A25B8();
  sub_1D43A25E4((uint64_t)v2, sel_didChangeValueForKey_);

}

void SNResultsCollector.request(_:didFailWithError:)(uint64_t a1, void *a2)
{
  uint64_t *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v3 = (uint64_t *)sub_1D43A25D0();
  sub_1D43A25E4((uint64_t)v3, sel_willChangeValueForKey_);

  sub_1D43A2618();
  v4 = a2;
  sub_1D43A245C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D442FE14);
  v5 = *(_QWORD *)(*v3 + 16);
  sub_1D43A2554(v5, (uint64_t (*)(BOOL))sub_1D442FE14);
  v6 = *v3;
  *(_QWORD *)(v6 + 16) = v5 + 1;
  *(_QWORD *)(v6 + 8 * v5 + 32) = a2;
  swift_endAccess();
  v7 = (void *)sub_1D43A25D0();
  sub_1D43A25E4((uint64_t)v7, sel_didChangeValueForKey_);

}

void SNResultsCollector.requestDidComplete(_:)()
{
  char *v0;
  void *v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  void *v5;

  v1 = (void *)sub_1D43A2594();
  sub_1D42DCE54((uint64_t)v1, sel_willChangeValueForKey_);

  v2 = *(_QWORD *)&v0[OBJC_IVAR___SNResultsCollector_completeCount];
  v3 = __OFADD__(v2, 1);
  v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)&v0[OBJC_IVAR___SNResultsCollector_completeCount] = v4;
    v5 = (void *)sub_1D43A2594();
    objc_msgSend(v0, sel_didChangeValueForKey_, v5);
    sub_1D42CB120(v5);
  }
}

void sub_1D43A21D4()
{
  _QWORD *v0;
  void *v1;

  v0 = (_QWORD *)sub_1D43A25B8();
  sub_1D42DCE54((uint64_t)v0, sel_willChangeValueForKey_);

  sub_1D43A2600();
  *v0 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  v1 = (void *)sub_1D43A25B8();
  sub_1D42DCE54((uint64_t)v1, sel_didChangeValueForKey_);

  sub_1D43A2630();
}

void sub_1D43A2270()
{
  _QWORD *v0;
  void *v1;

  v0 = (_QWORD *)sub_1D43A25D0();
  sub_1D42DCE54((uint64_t)v0, sel_willChangeValueForKey_);

  sub_1D43A2600();
  *v0 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  v1 = (void *)sub_1D43A25D0();
  sub_1D42DCE54((uint64_t)v1, sel_didChangeValueForKey_);

  sub_1D43A2630();
}

void sub_1D43A230C()
{
  char *v0;
  void *v1;
  void *v2;

  v1 = (void *)sub_1D43A2594();
  sub_1D42DCE54((uint64_t)v1, sel_willChangeValueForKey_);

  *(_QWORD *)&v0[OBJC_IVAR___SNResultsCollector_completeCount] = 0;
  v2 = (void *)sub_1D43A2594();
  objc_msgSend(v0, sel_didChangeValueForKey_, v2);
  sub_1D42CB120(v2);
}

id SNResultsCollector.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D43A2408()
{
  return sub_1D43A245C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D442F33C);
}

uint64_t sub_1D43A2414()
{
  return sub_1D43A245C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D442F420);
}

uint64_t sub_1D43A2420()
{
  return sub_1D43A245C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D442F8B8);
}

uint64_t sub_1D43A242C()
{
  return sub_1D43A245C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D442FAD4);
}

uint64_t sub_1D43A2438()
{
  return sub_1D43A245C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D442FBDC);
}

uint64_t sub_1D43A2444()
{
  return sub_1D43A245C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D442FFC8);
}

uint64_t sub_1D43A2450()
{
  return sub_1D43A245C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D44300EC);
}

uint64_t sub_1D43A245C(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!(_DWORD)result)
  {
    result = a1(result, *(_QWORD *)(v3 + 16) + 1, 1, v3);
    *v1 = result;
  }
  return result;
}

uint64_t sub_1D43A24B0(uint64_t a1)
{
  return sub_1D43A2554(a1, (uint64_t (*)(BOOL))sub_1D442F33C);
}

uint64_t sub_1D43A24BC(uint64_t a1)
{
  return sub_1D43A2554(a1, (uint64_t (*)(BOOL))sub_1D442F420);
}

uint64_t sub_1D43A24C8(uint64_t a1)
{
  return sub_1D43A2554(a1, (uint64_t (*)(BOOL))sub_1D442F8B8);
}

uint64_t sub_1D43A24D8(uint64_t a1)
{
  return sub_1D43A2554(a1, (uint64_t (*)(BOOL))sub_1D442FAD4);
}

uint64_t sub_1D43A24E4(uint64_t a1)
{
  return sub_1D43A2554(a1, (uint64_t (*)(BOOL))sub_1D442FBDC);
}

uint64_t sub_1D43A24F0(uint64_t result)
{
  _QWORD *v1;

  if (result + 1 > *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
    return sub_1D451A98C();
  return result;
}

uint64_t type metadata accessor for SNResultsCollector()
{
  return objc_opt_self();
}

uint64_t sub_1D43A253C(uint64_t a1)
{
  return sub_1D43A2554(a1, (uint64_t (*)(BOOL))sub_1D442FFC8);
}

uint64_t sub_1D43A2548(uint64_t a1)
{
  return sub_1D43A2554(a1, (uint64_t (*)(BOOL))sub_1D44300EC);
}

uint64_t sub_1D43A2554(uint64_t result, uint64_t (*a2)(BOOL))
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    result = a2(v3 > 1);
    *(_QWORD *)v2 = result;
  }
  return result;
}

uint64_t sub_1D43A2594()
{
  return sub_1D451A6C8();
}

uint64_t sub_1D43A25B8()
{
  return sub_1D451A6C8();
}

uint64_t sub_1D43A25D0()
{
  return sub_1D451A6C8();
}

id sub_1D43A25E4(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_1D43A25F0()
{
  return sub_1D451B820();
}

uint64_t sub_1D43A2600()
{
  return swift_beginAccess();
}

uint64_t sub_1D43A2618()
{
  return swift_beginAccess();
}

uint64_t sub_1D43A263C(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _BYTE *v7;

  v4 = sub_1D42E9D88(0, a3);
  sub_1D42EA3E0(v4, (unint64_t *)&unk_1EFE4BEF0);
  result = sub_1D43AB13C();
  if (!v3 && !result)
  {
    sub_1D42B7F2C();
    v6 = sub_1D42B6D0C();
    return sub_1D42F2074(v6, v7);
  }
  return result;
}

void sub_1D43A26DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  sub_1D42EA3E0(a1, (unint64_t *)&unk_1EFE4BEF0);
  v5 = sub_1D43AB13C();
  if (!v3)
  {
    v6 = (void *)v5;
    v7 = v5;
    sub_1D42F4C8C((uint64_t)&v7, a3, (uint64_t)&v8);

  }
  sub_1D4334190();
}

uint64_t sub_1D43A2780()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x1E0C80C00];
  v5[0] = 0;
  v1 = objc_msgSend((id)objc_opt_self(), sel_archivedDataWithRootObject_requiringSecureCoding_error_, v0, 1, v5);
  v2 = v5[0];
  if (v1)
  {
    sub_1D4519C54();

  }
  else
  {
    v3 = v2;
    sub_1D4519AA4();

    swift_willThrow();
  }
  return sub_1D42CB9EC();
}

void sub_1D43A2850(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1D43A3EB4(a1, a2, (uint64_t)&off_1E97AEE40, a3);
}

uint64_t sub_1D43A286C@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t inited;
  _BYTE *v7;
  uint64_t result;
  __int128 v9;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v4;
  *(_QWORD *)(inited + 24) = v5;
  if (v5 >> 60 == 15)
  {
    sub_1D42B7F2C();
    swift_allocError();
    *v7 = 0;
    swift_willThrow();
    return swift_release();
  }
  sub_1D451999C();
  swift_allocObject();
  sub_1D42DD16C(v4, v5);
  sub_1D42DD16C(v4, v5);
  sub_1D4519990();
  sub_1D43AA60C();
  sub_1D4519984();
  swift_release();
  sub_1D42B8CDC(v4, v5);
  if (v2)
    return swift_release();
  result = sub_1D42B8CDC(v4, v5);
  *a2 = v9;
  return result;
}

uint64_t sub_1D43A29A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t inited;
  _BYTE *v12;
  _BYTE v14[32];
  uint64_t v15;

  v5 = sub_1D4519D20();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v9;
  *(_QWORD *)(inited + 24) = v10;
  if (v10 >> 60 == 15)
  {
    sub_1D42B7F2C();
    swift_allocError();
    *v12 = 0;
    swift_willThrow();
    return swift_release();
  }
  v15 = a2;
  sub_1D451999C();
  swift_allocObject();
  sub_1D42E2EE8(v9, v10);
  sub_1D42E2EE8(v9, v10);
  sub_1D4519990();
  sub_1D430DBE8(&qword_1EFE50C60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
  sub_1D4519984();
  swift_release();
  sub_1D42B8CDC(v9, v10);
  if (v2)
    return swift_release();
  sub_1D42B8CDC(v9, v10);
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v6 + 32))(v15, v8, v5);
}

void *sub_1D43A2B4C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t inited;
  _BYTE *v7;
  _BYTE v9[192];

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v4;
  *(_QWORD *)(inited + 24) = v5;
  if (v5 >> 60 == 15)
  {
    sub_1D42B7F2C();
    swift_allocError();
    *v7 = 0;
    swift_willThrow();
    return (void *)swift_release();
  }
  sub_1D451999C();
  swift_allocObject();
  sub_1D42DD16C(v4, v5);
  sub_1D42DD16C(v4, v5);
  sub_1D4519990();
  sub_1D43AA8A4();
  sub_1D4519984();
  swift_release();
  sub_1D42B8CDC(v4, v5);
  if (v2)
    return (void *)swift_release();
  sub_1D42B8CDC(v4, v5);
  return memcpy(a2, v9, 0xC0uLL);
}

uint64_t sub_1D43A2C90@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t inited;
  _BYTE *v7;
  uint64_t result;
  char v9;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v4;
  *(_QWORD *)(inited + 24) = v5;
  if (v5 >> 60 == 15)
  {
    sub_1D42B7F2C();
    swift_allocError();
    *v7 = 0;
    swift_willThrow();
    return swift_release();
  }
  sub_1D451999C();
  swift_allocObject();
  sub_1D42DD16C(v4, v5);
  sub_1D42DD16C(v4, v5);
  sub_1D4519990();
  sub_1D43AA9F8();
  sub_1D4519984();
  swift_release();
  sub_1D42B8CDC(v4, v5);
  if (v2)
    return swift_release();
  result = sub_1D42B8CDC(v4, v5);
  *a2 = v9;
  return result;
}

uint64_t sub_1D43A2DCC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t inited;
  _BYTE *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v4;
  *(_QWORD *)(inited + 24) = v5;
  if (v5 >> 60 == 15)
  {
    sub_1D42B7F2C();
    swift_allocError();
    *v7 = 0;
    swift_willThrow();
    return swift_release();
  }
  sub_1D451999C();
  swift_allocObject();
  sub_1D42DD16C(v4, v5);
  sub_1D42DD16C(v4, v5);
  sub_1D4519990();
  sub_1D43AAA70();
  sub_1D4519984();
  swift_release();
  sub_1D42B8CDC(v4, v5);
  if (v2)
    return swift_release();
  result = sub_1D42B8CDC(v4, v5);
  *a2 = v9;
  a2[1] = v10;
  return result;
}

uint64_t sub_1D43A2F08(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t inited;
  _BYTE *v5;
  char v6;

  v3 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v3;
  *(_QWORD *)(inited + 24) = v2;
  if (v2 >> 60 == 15)
  {
    sub_1D42B7F2C();
    swift_allocError();
    *v5 = 0;
    swift_willThrow();
  }
  else
  {
    sub_1D42DD16C(v3, v2);
    sub_1D42DD16C(v3, v2);
    v6 = sub_1D43A8790();
    if (!v1)
    {
      inited = v6 & 1;
      sub_1D42B8CDC(v3, v2);
      sub_1D42B8CDC(v3, v2);
      return inited;
    }
    sub_1D42B8CDC(v3, v2);
  }
  swift_release();
  return inited;
}

uint64_t sub_1D43A2FF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t inited;
  _BYTE *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v4;
  *(_QWORD *)(inited + 24) = v5;
  if (v5 >> 60 == 15)
  {
    sub_1D42B7F2C();
    swift_allocError();
    *v7 = 0;
    swift_willThrow();
    return swift_release();
  }
  sub_1D451999C();
  swift_allocObject();
  sub_1D42DD16C(v4, v5);
  sub_1D42DD16C(v4, v5);
  sub_1D4519990();
  sub_1D43A9BC4();
  sub_1D4519984();
  swift_release();
  sub_1D42B8CDC(v4, v5);
  if (v2)
    return swift_release();
  result = sub_1D42B8CDC(v4, v5);
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  *(_OWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 32) = v12;
  *(_QWORD *)(a2 + 40) = v13;
  *(_QWORD *)(a2 + 48) = v14;
  *(_OWORD *)(a2 + 56) = v15;
  return result;
}

uint64_t sub_1D43A315C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t inited;
  _BYTE *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  __int128 v18;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v4;
  *(_QWORD *)(inited + 24) = v5;
  if (v5 >> 60 == 15)
  {
    sub_1D42B7F2C();
    swift_allocError();
    *v7 = 0;
    swift_willThrow();
    return swift_release();
  }
  sub_1D451999C();
  swift_allocObject();
  sub_1D42DD16C(v4, v5);
  sub_1D42DD16C(v4, v5);
  sub_1D4519990();
  sub_1D42F0B78();
  sub_1D4519984();
  swift_release();
  sub_1D42B8CDC(v4, v5);
  if (v2)
    return swift_release();
  result = sub_1D42B8CDC(v4, v5);
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  *(_OWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 32) = v12;
  *(_QWORD *)(a2 + 40) = v13;
  *(_QWORD *)(a2 + 48) = v14;
  *(_QWORD *)(a2 + 56) = v15;
  *(_QWORD *)(a2 + 64) = v16;
  *(_BYTE *)(a2 + 72) = v17;
  *(_OWORD *)(a2 + 80) = v18;
  return result;
}

uint64_t sub_1D43A32D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t inited;
  _BYTE *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  int v14;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v4;
  *(_QWORD *)(inited + 24) = v5;
  if (v5 >> 60 == 15)
  {
    sub_1D42B7F2C();
    swift_allocError();
    *v7 = 0;
    swift_willThrow();
    return swift_release();
  }
  sub_1D451999C();
  swift_allocObject();
  sub_1D42DD16C(v4, v5);
  sub_1D42DD16C(v4, v5);
  sub_1D4519990();
  sub_1D42B6670();
  sub_1D4519984();
  swift_release();
  sub_1D42B8CDC(v4, v5);
  if (v2)
    return swift_release();
  result = sub_1D42B8CDC(v4, v5);
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  *(_OWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 32) = v12;
  *(_QWORD *)(a2 + 40) = v13;
  *(_DWORD *)(a2 + 48) = v14;
  return result;
}

uint64_t sub_1D43A343C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t inited;
  _BYTE *v11;
  _BYTE v13[32];

  v5 = type metadata accessor for RemoteRequest();
  MEMORY[0x1E0C80A78](v5);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v8;
  *(_QWORD *)(inited + 24) = v9;
  if (v9 >> 60 == 15)
  {
    sub_1D42B7F2C();
    swift_allocError();
    *v11 = 0;
    swift_willThrow();
    return swift_release();
  }
  sub_1D451999C();
  swift_allocObject();
  sub_1D42E2EE8(v8, v9);
  sub_1D42E2EE8(v8, v9);
  sub_1D4519990();
  sub_1D430DBE8(&qword_1EFE4C8B0, (uint64_t (*)(uint64_t))type metadata accessor for RemoteRequest, (uint64_t)&unk_1D452D7E0);
  sub_1D4519984();
  swift_release();
  sub_1D42B8CDC(v8, v9);
  if (v2)
    return swift_release();
  sub_1D42B8CDC(v8, v9);
  return sub_1D43AA9B4((uint64_t)v7, a2);
}

uint64_t sub_1D43A35D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t inited;
  _BYTE *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v4;
  *(_QWORD *)(inited + 24) = v5;
  if (v5 >> 60 == 15)
  {
    sub_1D42B7F2C();
    swift_allocError();
    *v7 = 0;
    swift_willThrow();
    return swift_release();
  }
  sub_1D451999C();
  swift_allocObject();
  sub_1D42DD16C(v4, v5);
  sub_1D42DD16C(v4, v5);
  sub_1D4519990();
  sub_1D42B6064();
  sub_1D4519984();
  swift_release();
  sub_1D42B8CDC(v4, v5);
  if (v2)
    return swift_release();
  result = sub_1D42B8CDC(v4, v5);
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  *(_OWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 32) = v12;
  *(_QWORD *)(a2 + 40) = v13;
  *(_QWORD *)(a2 + 48) = v14;
  *(_QWORD *)(a2 + 56) = v15;
  return result;
}

uint64_t sub_1D43A3740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t inited;
  _BYTE *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v4;
  *(_QWORD *)(inited + 24) = v5;
  if (v5 >> 60 == 15)
  {
    sub_1D42B7F2C();
    swift_allocError();
    *v7 = 0;
    swift_willThrow();
    return swift_release();
  }
  sub_1D451999C();
  swift_allocObject();
  sub_1D42DD16C(v4, v5);
  sub_1D42DD16C(v4, v5);
  sub_1D4519990();
  sub_1D42B5E34();
  sub_1D4519984();
  swift_release();
  sub_1D42B8CDC(v4, v5);
  if (v2)
    return swift_release();
  result = sub_1D42B8CDC(v4, v5);
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  *(_OWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 32) = v12;
  *(_QWORD *)(a2 + 40) = v13;
  *(_BYTE *)(a2 + 48) = v14;
  *(_QWORD *)(a2 + 56) = v15;
  return result;
}

uint64_t sub_1D43A38AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t inited;
  _BYTE *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v4;
  *(_QWORD *)(inited + 24) = v5;
  if (v5 >> 60 == 15)
  {
    sub_1D42B7F2C();
    swift_allocError();
    *v7 = 0;
    swift_willThrow();
    return swift_release();
  }
  sub_1D451999C();
  swift_allocObject();
  sub_1D42DD16C(v4, v5);
  sub_1D42DD16C(v4, v5);
  sub_1D4519990();
  sub_1D43AA4D4();
  sub_1D4519984();
  swift_release();
  sub_1D42B8CDC(v4, v5);
  if (v2)
    return swift_release();
  result = sub_1D42B8CDC(v4, v5);
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  *(_OWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 32) = v12;
  *(_QWORD *)(a2 + 40) = v13;
  *(_OWORD *)(a2 + 48) = v14;
  *(_OWORD *)(a2 + 64) = v15;
  *(_QWORD *)(a2 + 80) = v16;
  *(_QWORD *)(a2 + 88) = v17;
  *(_QWORD *)(a2 + 96) = v18;
  return result;
}

uint64_t sub_1D43A3A24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t inited;
  _BYTE *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v4;
  *(_QWORD *)(inited + 24) = v5;
  if (v5 >> 60 == 15)
  {
    sub_1D42B7F2C();
    swift_allocError();
    *v7 = 0;
    swift_willThrow();
    return swift_release();
  }
  sub_1D451999C();
  swift_allocObject();
  sub_1D42DD16C(v4, v5);
  sub_1D42DD16C(v4, v5);
  sub_1D4519990();
  sub_1D42B5DBC();
  sub_1D4519984();
  swift_release();
  sub_1D42B8CDC(v4, v5);
  if (v2)
    return swift_release();
  result = sub_1D42B8CDC(v4, v5);
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  *(_OWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 32) = v12;
  *(_OWORD *)(a2 + 40) = v13;
  *(_QWORD *)(a2 + 56) = v14;
  return result;
}

uint64_t sub_1D43A3B88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t inited;
  _BYTE *v6;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v3;
  *(_QWORD *)(inited + 24) = v4;
  if (v4 >> 60 == 15)
  {
    sub_1D42B7F2C();
    swift_allocError();
    *v6 = 0;
    swift_willThrow();
  }
  else
  {
    sub_1D42DD16C(v3, v4);
    sub_1D42DD16C(v3, v4);
    v2 = sub_1D43A8E14();
    sub_1D42B8CDC(v3, v4);
    if (!v1)
    {
      sub_1D42B8CDC(v3, v4);
      return v2;
    }
  }
  swift_release();
  return v2;
}

uint64_t sub_1D43A3C7C(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t inited;
  _BYTE *v6;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v3;
  *(_QWORD *)(inited + 24) = v4;
  if (v4 >> 60 == 15)
  {
    sub_1D42B7F2C();
    swift_allocError();
    *v6 = 0;
    swift_willThrow();
  }
  else
  {
    sub_1D42DD16C(v3, v4);
    sub_1D42DD16C(v3, v4);
    v2 = sub_1D43A8EAC();
    sub_1D42B8CDC(v3, v4);
    if (!v1)
    {
      sub_1D42B8CDC(v3, v4);
      return v2 & 1;
    }
  }
  swift_release();
  return v2 & 1;
}

void sub_1D43A3D68(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;

  sub_1D43AB084();
  v4 = sub_1D43AAEF4();
  sub_1D43AB114(v4);
  if (!v6 & v5)
  {
    sub_1D42B7F2C();
    v7 = sub_1D42B6D0C();
    sub_1D42F2074(v7, v8);
  }
  else
  {
    sub_1D43AADE0();
    sub_1D43AADE0();
    v9 = sub_1D42CB9EC();
    a2(v9);
    sub_1D43AADD4();
    if (!v2)
    {
      sub_1D43AADD4();
      goto LABEL_7;
    }
  }
  swift_release();
LABEL_7:
  sub_1D43AAEE0();
}

unint64_t *sub_1D43A3E00(uint64_t a1, unint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D43AB084();
  v4 = sub_1D43AAEF4();
  sub_1D43AB114(v4);
  if (!v6 & v5)
  {
    sub_1D42B7F2C();
    v7 = sub_1D42B6D0C();
    sub_1D42F2074(v7, v8);
  }
  else
  {
    sub_1D43AADE0();
    sub_1D43AADE0();
    v9 = sub_1D42CB9EC();
    a2 = (unint64_t *)sub_1D43A263C(v9, v10, a2);
    sub_1D43AADD4();
    if (!v2)
    {
      sub_1D43AADD4();
      return a2;
    }
  }
  swift_release();
  return a2;
}

void sub_1D43A3EB4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t inited;
  uint64_t v14;
  _BYTE *v15;
  void (*v16)(uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v17;

  v9 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  sub_1D42D7108();
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v10 + 24);
  sub_1D43AB084();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v11;
  *(_QWORD *)(inited + 24) = v12;
  if (v12 >> 60 == 15)
  {
    sub_1D42B7F2C();
    v14 = sub_1D42B6D0C();
    sub_1D42F2074(v14, v15);
  }
  else
  {
    v17 = a4;
    v16 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(a3 + 16);
    sub_1D43AB0EC();
    sub_1D43AB0EC();
    v16(v11, v12, a2, a3);
    sub_1D43AB0E0();
    if (!v4)
    {
      sub_1D43AB0E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v17, v5, a2);
      goto LABEL_6;
    }
  }
  swift_release();
LABEL_6:
  sub_1D42BE844();
}

void sub_1D43A3FB0(uint64_t a1, uint64_t a2)
{
  sub_1D43A4B88(a1, a2, (uint64_t)&off_1E97AEE58);
}

uint64_t sub_1D43A3FCC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD v10[5];

  sub_1D439E5C4();
  v10[3] = MEMORY[0x1E0CB0338];
  v10[4] = sub_1D439EAC0();
  v10[0] = a2;
  v10[1] = a3;
  sub_1D42DD16C(a2, a3);
  v6 = sub_1D44C3224(v10);
  v8 = v7;
  sub_1D42B5400((uint64_t)v10);
  if (!v3)
  {
    sub_1D42DD16C(v6, v8);
    sub_1D439E174(v6, v8);
    sub_1D42B5420(v6, v8);
    sub_1D42B5420(v6, v8);
  }
  return swift_release();
}

uint64_t sub_1D43A4098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v8[5];

  sub_1D439E5C4();
  v2 = sub_1D4519D20();
  v8[3] = v2;
  v8[4] = sub_1D430DBE8(&qword_1EFE4EE60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  v3 = sub_1D430BBF0(v8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v0, v2);
  v4 = sub_1D44C3224(v8);
  v6 = v5;
  sub_1D42B5400((uint64_t)v8);
  if (!v1)
  {
    sub_1D42DD16C(v4, v6);
    sub_1D439E174(v4, v6);
    sub_1D42B5420(v4, v6);
    sub_1D42B5420(v4, v6);
  }
  return swift_release();
}

uint64_t sub_1D43A4188()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD v6[5];

  sub_1D439E5C4();
  v6[3] = &unk_1E9797B88;
  v6[4] = sub_1D43AA798();
  v6[0] = swift_allocObject();
  memcpy((void *)(v6[0] + 16), v0, 0xC0uLL);
  sub_1D435CE08((uint64_t)v0);
  v2 = sub_1D44C3224(v6);
  v4 = v3;
  sub_1D42B5400((uint64_t)v6);
  if (!v1)
  {
    sub_1D42DD16C(v2, v4);
    sub_1D439E174(v2, v4);
    sub_1D42B5420(v2, v4);
    sub_1D42B5420(v2, v4);
  }
  return swift_release();
}

uint64_t sub_1D43A4274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD v10[5];

  sub_1D439E5C4();
  v10[3] = &type metadata for AccessibilitySoundActions.SoundAction;
  v10[4] = sub_1D43AAAAC();
  v10[0] = a2;
  v10[1] = a3;
  swift_bridgeObjectRetain();
  v6 = sub_1D44C3224(v10);
  v8 = v7;
  sub_1D42B5400((uint64_t)v10);
  if (!v3)
  {
    sub_1D42DD16C(v6, v8);
    sub_1D439E174(v6, v8);
    sub_1D42B5420(v6, v8);
    sub_1D42B5420(v6, v8);
  }
  return swift_release();
}

void sub_1D43A433C()
{
  uint64_t (*v0)(void);
  uint64_t v1;
  uint64_t v2;

  sub_1D43AB060();
  sub_1D43AB048();
  v2 = v0();
  v1 = sub_1D43AAF30(v2);
  sub_1D43AAC9C(v1);
  if (!v0)
  {
    sub_1D43AAF8C();
    sub_1D43AADFC();
    sub_1D43AAC80();
    sub_1D43AAC80();
  }
  sub_1D42B8F48();
  sub_1D430C580();
}

uint64_t sub_1D43A43A4()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD v6[5];

  sub_1D439E5C4();
  v6[3] = &unk_1E979A470;
  v6[4] = sub_1D43AA910();
  v6[0] = swift_allocObject();
  memcpy((void *)(v6[0] + 16), v0, 0x48uLL);
  sub_1D43AA974((uint64_t)v0);
  v2 = sub_1D44C3224(v6);
  v4 = v3;
  sub_1D42B5400((uint64_t)v6);
  if (!v1)
  {
    sub_1D42DD16C(v2, v4);
    sub_1D439E174(v2, v4);
    sub_1D42B5420(v2, v4);
    sub_1D42B5420(v2, v4);
  }
  return swift_release();
}

uint64_t sub_1D43A4490()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD v6[5];

  sub_1D439E5C4();
  v6[3] = &unk_1E979A8C8;
  v6[4] = sub_1D42F0BD8();
  v6[0] = swift_allocObject();
  memcpy((void *)(v6[0] + 16), v0, 0x60uLL);
  sub_1D43AA670((uint64_t)v0);
  v2 = sub_1D44C3224(v6);
  v4 = v3;
  sub_1D42B5400((uint64_t)v6);
  if (!v1)
  {
    sub_1D42DD16C(v2, v4);
    sub_1D439E174(v2, v4);
    sub_1D42B5420(v2, v4);
    sub_1D42B5420(v2, v4);
  }
  return swift_release();
}

uint64_t sub_1D43A457C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD v8[5];

  sub_1D439E5C4();
  v8[3] = &unk_1E979B538;
  v8[4] = sub_1D42B6634();
  v2 = swift_allocObject();
  v8[0] = v2;
  v3 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(v0 + 32);
  *(_DWORD *)(v2 + 64) = *(_DWORD *)(v0 + 48);
  v4 = sub_1D44C3224(v8);
  v6 = v5;
  sub_1D42B5400((uint64_t)v8);
  if (!v1)
  {
    sub_1D42DD16C(v4, v6);
    sub_1D439E174(v4, v6);
    sub_1D42B5420(v4, v6);
    sub_1D42B5420(v4, v6);
  }
  return swift_release();
}

uint64_t sub_1D43A4664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7[5];

  sub_1D439E5C4();
  v7[3] = type metadata accessor for RemoteRequest();
  v7[4] = sub_1D430DBE8(&qword_1EFE4C8B8, (uint64_t (*)(uint64_t))type metadata accessor for RemoteRequest, (uint64_t)&unk_1D452D818);
  v2 = sub_1D430BBF0(v7);
  sub_1D430BC2C(v0, (uint64_t)v2);
  v3 = sub_1D44C3224(v7);
  v5 = v4;
  sub_1D42B5400((uint64_t)v7);
  if (!v1)
  {
    sub_1D42DD16C(v3, v5);
    sub_1D439E174(v3, v5);
    sub_1D42B5420(v3, v5);
    sub_1D42B5420(v3, v5);
  }
  return swift_release();
}

uint64_t sub_1D43A4748()
{
  _OWORD *v0;
  uint64_t v1;
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD v9[5];

  sub_1D439E5C4();
  v9[3] = &unk_1E97A4C18;
  v9[4] = sub_1D42B5DF8();
  v2 = (_OWORD *)swift_allocObject();
  v9[0] = v2;
  v3 = v0[1];
  v2[1] = *v0;
  v2[2] = v3;
  v4 = v0[3];
  v2[3] = v0[2];
  v2[4] = v4;
  v5 = sub_1D44C3224(v9);
  v7 = v6;
  sub_1D42B5400((uint64_t)v9);
  if (!v1)
  {
    sub_1D42DD16C(v5, v7);
    sub_1D439E174(v5, v7);
    sub_1D42B5420(v5, v7);
    sub_1D42B5420(v5, v7);
  }
  return swift_release();
}

uint64_t sub_1D43A4828()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD v6[5];

  sub_1D439E5C4();
  v6[3] = &unk_1E97A8138;
  v6[4] = sub_1D43AA6A4();
  v6[0] = swift_allocObject();
  memcpy((void *)(v6[0] + 16), v0, 0x68uLL);
  sub_1D43AA704((uint64_t)v0);
  v2 = sub_1D44C3224(v6);
  v4 = v3;
  sub_1D42B5400((uint64_t)v6);
  if (!v1)
  {
    sub_1D42DD16C(v2, v4);
    sub_1D439E174(v2, v4);
    sub_1D42B5420(v2, v4);
    sub_1D42B5420(v2, v4);
  }
  return swift_release();
}

void sub_1D43A4914(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5)
{
  _OWORD *v8;
  uint64_t v9;
  _QWORD v10[5];

  sub_1D43AB048();
  v10[3] = a2;
  v10[4] = a3();
  v8 = (_OWORD *)sub_1D43AADEC();
  sub_1D43AAD9C(v8);
  v9 = sub_1D44C3224(v10);
  sub_1D43AAC9C(v9);
  if (!a5)
  {
    sub_1D43AAF8C();
    sub_1D43AADFC();
    sub_1D43AAC80();
    sub_1D43AAC80();
  }
  sub_1D42B8F48();
  sub_1D430C424();
}

uint64_t sub_1D43A499C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD v10[5];

  sub_1D439E5C4();
  v10[3] = MEMORY[0x1E0DEA968];
  v10[4] = MEMORY[0x1E0DEA970];
  v10[0] = a2;
  v10[1] = a3;
  swift_bridgeObjectRetain();
  v6 = sub_1D44C3224(v10);
  v8 = v7;
  sub_1D42B5400((uint64_t)v10);
  if (!v3)
  {
    sub_1D42DD16C(v6, v8);
    sub_1D439E174(v6, v8);
    sub_1D42B5420(v6, v8);
    sub_1D42B5420(v6, v8);
  }
  return swift_release();
}

uint64_t sub_1D43A4A64(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD v8[5];

  sub_1D439E5C4();
  v8[3] = MEMORY[0x1E0DEAFA0];
  v8[4] = MEMORY[0x1E0DEAFA8];
  LOBYTE(v8[0]) = a2;
  v4 = sub_1D44C3224(v8);
  v6 = v5;
  sub_1D42B5400((uint64_t)v8);
  if (!v2)
  {
    sub_1D42DD16C(v4, v6);
    sub_1D439E174(v4, v6);
    sub_1D42B5420(v4, v6);
    sub_1D42B5420(v4, v6);
  }
  return swift_release();
}

void sub_1D43A4B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  sub_1D43AB048();
  v6 = sub_1D43AAF30(v5);
  sub_1D43AAC9C(v6);
  if (!a4)
  {
    sub_1D43AAF8C();
    sub_1D43AADFC();
    sub_1D43AAC80();
    sub_1D43AAC80();
  }
  sub_1D42B8F48();
  sub_1D430C580();
}

void sub_1D43A4B88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1D43AB048();
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  if (!v3)
  {
    v8 = v6;
    v9 = v7;
    sub_1D42DD16C(v6, v7);
    sub_1D439E174(v8, v9);
    sub_1D43AB070();
    sub_1D43AB070();
  }
  swift_release();
  sub_1D43AB008();
}

uint64_t sub_1D43A4C14()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1D43AAFD8();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_1D42B8F00(v1);
  *v2 = v0;
  v2[1] = sub_1D438BE64;
  v3 = sub_1D43AAE8C();
  return sub_1D43AAC14(v3, v4, v5, v6);
}

uint64_t sub_1D43A4C60(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1D43A4CAC;
  return sub_1D43768A8();
}

uint64_t sub_1D43A4CAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D43AAB24();
  if (v1)
    return sub_1D42E3A2C(*(uint64_t (**)(void))(v3 + 8));
  *(_QWORD *)(v2 + 40) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D43A4CF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  __int128 v4;

  sub_1D43AAB98();
  sub_1D43A7DD4(&v4);
  sub_1D42BE93C();
  sub_1D42B8F48();
  if (v0)
  {
    v2 = (uint64_t (*)(void))sub_1D430C528();
  }
  else
  {
    *(_OWORD *)*(_QWORD *)(v1 + 16) = v4;
    v2 = (uint64_t (*)(void))sub_1D42E3DD0();
  }
  return sub_1D42B8E40(v2);
}

uint64_t sub_1D43A4D44(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  sub_1D43AABB8(a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  sub_1D42E3D3C(v2, (uint64_t)sub_1D43A4D80);
  return sub_1D438C128();
}

uint64_t sub_1D43A4D80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D43AAB24();
  if (v1)
    return sub_1D42E3A2C(*(uint64_t (**)(void))(v3 + 8));
  *(_QWORD *)(v2 + 40) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D43A4DC4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D43AB128();
  v1 = *(_QWORD *)(v0 + 16);
  sub_1D43AAC6C();
  sub_1D43A7E34(v1);
  sub_1D42BE93C();
  sub_1D42BE998();
  return sub_1D42B8E40(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43A4E20(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1D43A4E6C;
  return sub_1D43768A8();
}

uint64_t sub_1D43A4E6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = v1;
  swift_task_dealloc();
  if (v1)
    return sub_1D42B8DC0(*(uint64_t (**)(void))(v3 + 8));
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43A4ECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  void *v3;
  _BYTE v5[200];

  v1 = *(_QWORD *)(v0 + 40);
  sub_1D42BE934();
  sub_1D43A7EEC(v5);
  if (v1)
  {
    swift_release();
    sub_1D42B8F48();
    v2 = (uint64_t (*)(void))sub_1D430C528();
  }
  else
  {
    v3 = *(void **)(v0 + 16);
    swift_release();
    sub_1D42B8F48();
    memcpy(v3, v5, 0xC0uLL);
    v2 = (uint64_t (*)(void))sub_1D42E3DD0();
  }
  return v2();
}

uint64_t sub_1D43A4F48(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  sub_1D43AABB8(a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  sub_1D42E3D3C(v2, (uint64_t)sub_1D43A4F84);
  return sub_1D438C128();
}

uint64_t sub_1D43A4F84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D43AAB24();
  if (v1)
    return sub_1D42E3A2C(*(uint64_t (**)(void))(v3 + 8));
  *(_QWORD *)(v2 + 40) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D43A4FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  char v4;

  sub_1D43AAB98();
  sub_1D43A7F64();
  sub_1D42BE93C();
  sub_1D42B8F48();
  if (v0)
  {
    v2 = (uint64_t (*)(void))sub_1D430C528();
  }
  else
  {
    **(_BYTE **)(v1 + 16) = v4;
    v2 = (uint64_t (*)(void))sub_1D42E3DD0();
  }
  return sub_1D42B8E40(v2);
}

uint64_t sub_1D43A501C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  sub_1D43AABB8(a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  sub_1D42E3D3C(v2, (uint64_t)sub_1D43A5058);
  return sub_1D438C128();
}

uint64_t sub_1D43A5058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D43AAB24();
  if (v1)
    return sub_1D42E3A2C(*(uint64_t (**)(void))(v3 + 8));
  *(_QWORD *)(v2 + 40) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D43A509C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;

  sub_1D43AAB98();
  sub_1D43A7FB0();
  sub_1D42BE93C();
  sub_1D42B8F48();
  if (v0)
  {
    v2 = (uint64_t (*)(void))sub_1D430C528();
  }
  else
  {
    v3 = *(_QWORD **)(v1 + 16);
    *v3 = v5;
    v3[1] = v6;
    v2 = (uint64_t (*)(void))sub_1D42E3DD0();
  }
  return sub_1D42B8E40(v2);
}

uint64_t sub_1D43A50F0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1D43A5138;
  return sub_1D43768A8();
}

uint64_t sub_1D43A5138()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D43AAB74();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  *(_QWORD *)(v2 + 32) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D43A5188()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t (*v3)(void);

  sub_1D43AB128();
  v1 = *(_QWORD *)(v0 + 24);
  sub_1D43AAC6C();
  v2 = sub_1D43A7FF4();
  sub_1D42BE93C();
  sub_1D42BE998();
  if (!v1)
    return sub_1D43AACD8(v2 & 1, *(uint64_t (**)(void))(v0 + 8));
  v3 = (uint64_t (*)(void))sub_1D430C528();
  return v3();
}

uint64_t sub_1D43A51F0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  sub_1D43AABB8(a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  sub_1D42E3D3C(v2, (uint64_t)sub_1D43A522C);
  return sub_1D438C128();
}

uint64_t sub_1D43A522C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D43AAB24();
  if (v1)
    return sub_1D42E3A2C(*(uint64_t (**)(void))(v3 + 8));
  *(_QWORD *)(v2 + 40) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D43A5270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  sub_1D43AAB98();
  sub_1D43A8044();
  sub_1D42BE93C();
  sub_1D42B8F48();
  if (v0)
  {
    v2 = (uint64_t (*)(void))sub_1D430C528();
  }
  else
  {
    v3 = *(_QWORD *)(v1 + 16);
    *(_QWORD *)v3 = v5;
    *(_QWORD *)(v3 + 8) = v6;
    *(_OWORD *)(v3 + 16) = v7;
    *(_QWORD *)(v3 + 32) = v8;
    *(_QWORD *)(v3 + 40) = v9;
    *(_QWORD *)(v3 + 48) = v10;
    *(_OWORD *)(v3 + 56) = v11;
    v2 = (uint64_t (*)(void))sub_1D42E3DD0();
  }
  return v2();
}

uint64_t sub_1D43A52F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  sub_1D43AABB8(a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  sub_1D42E3D3C(v2, (uint64_t)sub_1D43A5330);
  return sub_1D438C128();
}

uint64_t sub_1D43A5330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D43AAB24();
  if (v1)
    return sub_1D42E3A2C(*(uint64_t (**)(void))(v3 + 8));
  *(_QWORD *)(v2 + 40) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D43A5374()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;

  sub_1D43AAB98();
  sub_1D43A80B0();
  sub_1D42BE93C();
  sub_1D42B8F48();
  if (v0)
  {
    v1 = (uint64_t (*)(void))sub_1D430C528();
  }
  else
  {
    sub_1D43AAFA8();
    sub_1D43AAD0C(v2, v9, v10, v11, v12);
    *(_QWORD *)(v3 + 48) = v4;
    *(_QWORD *)(v3 + 56) = v5;
    *(_QWORD *)(v3 + 64) = v6;
    *(_BYTE *)(v3 + 72) = v7;
    *(_OWORD *)(v3 + 80) = v13;
    v1 = (uint64_t (*)(void))sub_1D42E3DD0();
  }
  return v1();
}

uint64_t sub_1D43A53EC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  sub_1D43AABB8(a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  sub_1D42E3D3C(v2, (uint64_t)sub_1D43A5428);
  return sub_1D438C128();
}

uint64_t sub_1D43A5428()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D43AAB24();
  if (v1)
    return sub_1D42E3A2C(*(uint64_t (**)(void))(v3 + 8));
  *(_QWORD *)(v2 + 40) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D43A546C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  int v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  sub_1D43AAB98();
  sub_1D43A8118();
  sub_1D42BE93C();
  sub_1D42B8F48();
  if (v0)
  {
    v2 = (uint64_t (*)(void))sub_1D430C528();
  }
  else
  {
    sub_1D43AAD30(*(_QWORD *)(v1 + 16), v6, v7, v8, v9, v10);
    *(_DWORD *)(v3 + 48) = v4;
    v2 = (uint64_t (*)(void))sub_1D42E3DD0();
  }
  return sub_1D43AABA8(v2);
}

uint64_t sub_1D43A54C8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  sub_1D43AABB8(a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  sub_1D42E3D3C(v2, (uint64_t)sub_1D43A5504);
  return sub_1D438C128();
}

uint64_t sub_1D43A5504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D43AAB24();
  if (v1)
    return sub_1D42E3A2C(*(uint64_t (**)(void))(v3 + 8));
  *(_QWORD *)(v2 + 40) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D43A5548()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D43AB128();
  v1 = *(_QWORD *)(v0 + 16);
  sub_1D43AAC6C();
  sub_1D43A815C(v1);
  sub_1D42BE93C();
  sub_1D42BE998();
  return sub_1D42B8E40(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43A55A4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  sub_1D43AABB8(a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  sub_1D42E3D3C(v2, (uint64_t)sub_1D43A55E0);
  return sub_1D438C128();
}

uint64_t sub_1D43A55E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D43AAB24();
  if (v1)
    return sub_1D42E3A2C(*(uint64_t (**)(void))(v3 + 8));
  *(_QWORD *)(v2 + 40) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D43A5624()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D43AAB98();
  sub_1D43A81E4();
  sub_1D42BE93C();
  sub_1D42B8F48();
  if (v0)
  {
    v1 = (uint64_t (*)(void))sub_1D430C528();
  }
  else
  {
    sub_1D43AAFA8();
    *(_QWORD *)v2 = v3;
    *(_QWORD *)(v2 + 8) = v6;
    *(_OWORD *)(v2 + 16) = v7;
    *(_QWORD *)(v2 + 32) = v8;
    *(_QWORD *)(v2 + 40) = v4;
    *(_QWORD *)(v2 + 48) = v9;
    *(_QWORD *)(v2 + 56) = v10;
    v1 = (uint64_t (*)(void))sub_1D42E3DD0();
  }
  return sub_1D43AABA8(v1);
}

uint64_t sub_1D43A569C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  sub_1D43AABB8(a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  sub_1D42E3D3C(v2, (uint64_t)sub_1D43A56D8);
  return sub_1D438C128();
}

uint64_t sub_1D43A56D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D43AAB24();
  if (v1)
    return sub_1D42E3A2C(*(uint64_t (**)(void))(v3 + 8));
  *(_QWORD *)(v2 + 40) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D43A571C()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  sub_1D43AAB98();
  sub_1D43A824C();
  sub_1D42BE93C();
  sub_1D42B8F48();
  if (v0)
  {
    v1 = (uint64_t (*)(void))sub_1D430C528();
  }
  else
  {
    sub_1D43AAFA8();
    sub_1D43AAD0C(v2, v7, v8, v9, v10);
    *(_BYTE *)(v3 + 48) = v4;
    *(_QWORD *)(v3 + 56) = v5;
    v1 = (uint64_t (*)(void))sub_1D42E3DD0();
  }
  return sub_1D43AABA8(v1);
}

uint64_t sub_1D43A5778(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  sub_1D43AABB8(a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  sub_1D42E3D3C(v2, (uint64_t)sub_1D43A57B4);
  return sub_1D438C128();
}

uint64_t sub_1D43A57B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D43AAB24();
  if (v1)
    return sub_1D42E3A2C(*(uint64_t (**)(void))(v3 + 8));
  *(_QWORD *)(v2 + 40) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D43A57F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  sub_1D43AAB98();
  sub_1D43A8298();
  sub_1D42BE93C();
  sub_1D42B8F48();
  if (v0)
  {
    v2 = (uint64_t (*)(void))sub_1D430C528();
  }
  else
  {
    sub_1D43AAD30(*(_QWORD *)(v1 + 16), v8, v9, v10, v11, v12);
    *(_OWORD *)(v3 + 48) = v13;
    *(_OWORD *)(v3 + 64) = v14;
    *(_QWORD *)(v3 + 80) = v4;
    *(_QWORD *)(v3 + 88) = v5;
    *(_QWORD *)(v3 + 96) = v6;
    v2 = (uint64_t (*)(void))sub_1D42E3DD0();
  }
  return v2();
}

uint64_t sub_1D43A5874(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  sub_1D43AABB8(a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  sub_1D42E3D3C(v2, (uint64_t)sub_1D43A58B0);
  return sub_1D438C128();
}

uint64_t sub_1D43A58B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D43AAB24();
  if (v1)
    return sub_1D42E3A2C(*(uint64_t (**)(void))(v3 + 8));
  *(_QWORD *)(v2 + 40) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D43A58F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  sub_1D43AAB98();
  sub_1D43A82FC();
  sub_1D42BE93C();
  sub_1D42B8F48();
  if (v0)
  {
    v2 = (uint64_t (*)(void))sub_1D430C528();
  }
  else
  {
    v3 = *(_QWORD *)(v1 + 16);
    *(_QWORD *)v3 = v5;
    *(_QWORD *)(v3 + 8) = v6;
    *(_OWORD *)(v3 + 16) = v7;
    *(_QWORD *)(v3 + 32) = v8;
    *(_OWORD *)(v3 + 40) = v9;
    *(_QWORD *)(v3 + 56) = v10;
    v2 = (uint64_t (*)(void))sub_1D42E3DD0();
  }
  return sub_1D43AABA8(v2);
}

uint64_t sub_1D43A596C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1D43A59B4;
  return sub_1D43768A8();
}

uint64_t sub_1D43A59B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D43AAB74();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  *(_QWORD *)(v2 + 32) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D43A5A04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D42E39FC();
  v1 = *(_QWORD *)(v0 + 24);
  swift_retain();
  v2 = sub_1D43A8380();
  v4 = v3;
  sub_1D42BE998();
  swift_release();
  if (!v1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v4);
  v5 = (uint64_t (*)(void))sub_1D430C528();
  return v5();
}

uint64_t sub_1D43A5A90()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  sub_1D42E3D3C(v1, (uint64_t)sub_1D43A5ACC);
  return sub_1D438C128();
}

uint64_t sub_1D43A5ACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D43AAB74();
  if (v1)
    return (*(uint64_t (**)(_QWORD))(v3 + 8))(0);
  *(_QWORD *)(v2 + 32) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D43A5B20()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  sub_1D43AB128();
  v1 = *(_QWORD *)(v0 + 24);
  sub_1D43AAC6C();
  v2 = sub_1D43A83CC();
  sub_1D42BE93C();
  sub_1D42BE998();
  if (v1)
    v3 = 0;
  else
    v3 = v2 & 1;
  return sub_1D43AACD8(v3, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43A5B78()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  sub_1D42E3D3C(v1, (uint64_t)sub_1D43A5BB4);
  return sub_1D438C128();
}

uint64_t sub_1D43A5BB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D43AAB74();
  if (v1)
    return sub_1D42E3A2C(*(uint64_t (**)(void))(v3 + 8));
  *(_QWORD *)(v2 + 32) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D43A5BF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1D43AB128();
  v1 = *(_QWORD *)(v0 + 24);
  sub_1D43AAC6C();
  sub_1D43A8430((void (*)(uint64_t))sub_1D43A8F48);
  v3 = v2;
  sub_1D42BE93C();
  v4 = sub_1D42BE998();
  if (!v1)
    v4 = v3;
  return sub_1D43AACD8(v4, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43A5C54()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1D43A5C9C;
  return sub_1D43768A8();
}

uint64_t sub_1D43A5C9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D43AAB74();
  if (v1)
    return sub_1D42E3A2C(*(uint64_t (**)(void))(v3 + 8));
  *(_QWORD *)(v2 + 32) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D43A5CE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1D43AB128();
  v1 = *(_QWORD *)(v0 + 24);
  sub_1D43AAC6C();
  sub_1D43A8430((void (*)(uint64_t))sub_1D43A8FE0);
  v3 = v2;
  sub_1D42BE93C();
  v4 = sub_1D42BE998();
  if (!v1)
    v4 = v3;
  return sub_1D43AACD8(v4, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43A5D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v4[3] = a3;
  v4[4] = a4;
  v4[2] = a1;
  v5 = (_QWORD *)swift_task_alloc();
  v4[5] = v5;
  sub_1D42E3D3C(v5, (uint64_t)sub_1D43A5D80);
  return sub_1D438C128();
}

uint64_t sub_1D43A5D80(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 48) = v1;
  swift_task_dealloc();
  if (v1)
    return sub_1D42E3A2C(*(uint64_t (**)(void))(v4 + 8));
  *(_QWORD *)(v4 + 56) = a1;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D43A5DE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 16);
  swift_retain();
  sub_1D44383D8(v2, v2, v1, v3);
  sub_1D42BE93C();
  swift_release();
  return sub_1D438C26C(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1D43A5E68(uint64_t a1, uint64_t a2)
{
  sub_1D43A6760(a1, a2, (uint64_t)&off_1E97AEE28);
}

void sub_1D43A5E84()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v3[24];
  uint64_t v4;
  _UNKNOWN **v5;

  sub_1D43AACEC();
  v4 = type metadata accessor for RemoteRequest();
  v5 = &off_1E979F300;
  v1 = sub_1D43AB040(v4);
  sub_1D430BC2C(v0, (uint64_t)v1);
  v2 = sub_1D42BE934();
  sub_1D43AAF3C(v2);
  sub_1D43AAEC8();
  sub_1D42B8F48();
  sub_1D43AAF48((uint64_t)v3);
  sub_1D43AAC44();
}

uint64_t sub_1D43A5EF8()
{
  const void *v0;
  _QWORD v2[5];

  sub_1D447DAC4();
  v2[3] = &unk_1E979A8C8;
  v2[4] = &off_1E979A840;
  v2[0] = swift_allocObject();
  memcpy((void *)(v2[0] + 16), v0, 0x60uLL);
  sub_1D43AA670((uint64_t)v0);
  swift_retain();
  sub_1D439E75C(v2);
  swift_release();
  swift_release();
  return sub_1D42B5400((uint64_t)v2);
}

uint64_t sub_1D43A5FB4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  _QWORD v6[5];

  sub_1D447DAC4();
  v6[3] = MEMORY[0x1E0CB0338];
  v6[4] = &off_1E9797748;
  v6[0] = a2;
  v6[1] = a3;
  sub_1D42DD16C(a2, a3);
  swift_retain();
  sub_1D439E75C(v6);
  swift_release();
  swift_release();
  return sub_1D42B5400((uint64_t)v6);
}

uint64_t sub_1D43A6058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4[5];

  sub_1D447DAC4();
  v1 = sub_1D4519D20();
  v4[3] = v1;
  v4[4] = (uint64_t)&off_1E97977C0;
  v2 = sub_1D430BBF0(v4);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(v2, v0, v1);
  swift_retain();
  sub_1D439E75C(v4);
  swift_release();
  swift_release();
  return sub_1D42B5400((uint64_t)v4);
}

uint64_t sub_1D43A6108()
{
  const void *v0;
  _QWORD v2[5];

  sub_1D447DAC4();
  v2[3] = &unk_1E9797B88;
  v2[4] = &off_1E9797B18;
  v2[0] = swift_allocObject();
  memcpy((void *)(v2[0] + 16), v0, 0xC0uLL);
  sub_1D435CE08((uint64_t)v0);
  swift_retain();
  sub_1D439E75C(v2);
  swift_release();
  swift_release();
  return sub_1D42B5400((uint64_t)v2);
}

void sub_1D43A61C4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  _BYTE v5[24];
  uint64_t v6;
  uint64_t v7;

  sub_1D43AB060();
  v3 = v2 & 1;
  sub_1D43AACEC();
  v6 = v1;
  v7 = v0;
  v5[0] = v3;
  v4 = sub_1D42BE934();
  sub_1D43AAF24(v4);
  swift_release();
  sub_1D42B8F48();
  sub_1D43AAF48((uint64_t)v5);
  sub_1D43AAC24();
}

uint64_t sub_1D43A6220()
{
  const void *v0;
  _QWORD v2[5];

  sub_1D447DAC4();
  v2[3] = &unk_1E979A470;
  v2[4] = &off_1E979A3E8;
  v2[0] = swift_allocObject();
  memcpy((void *)(v2[0] + 16), v0, 0x48uLL);
  sub_1D43AA974((uint64_t)v0);
  swift_retain();
  sub_1D439E75C(v2);
  swift_release();
  swift_release();
  return sub_1D42B5400((uint64_t)v2);
}

uint64_t sub_1D43A62DC()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  _QWORD v4[5];

  sub_1D447DAC4();
  v4[3] = &unk_1E979B538;
  v4[4] = &off_1E979B4B0;
  v1 = swift_allocObject();
  v4[0] = v1;
  v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v1 + 32) = v2;
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(v0 + 32);
  *(_DWORD *)(v1 + 64) = *(_DWORD *)(v0 + 48);
  swift_retain();
  sub_1D439E75C(v4);
  swift_release();
  swift_release();
  return sub_1D42B5400((uint64_t)v4);
}

uint64_t sub_1D43A6394()
{
  _OWORD *v0;
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  _QWORD v5[5];

  sub_1D447DAC4();
  v5[3] = &unk_1E97A4C18;
  v5[4] = &off_1E97A4B90;
  v1 = (_OWORD *)swift_allocObject();
  v5[0] = v1;
  v2 = v0[1];
  v1[1] = *v0;
  v1[2] = v2;
  v3 = v0[3];
  v1[3] = v0[2];
  v1[4] = v3;
  swift_retain();
  sub_1D439E75C(v5);
  swift_release();
  swift_release();
  return sub_1D42B5400((uint64_t)v5);
}

uint64_t sub_1D43A6444()
{
  const void *v0;
  _QWORD v2[5];

  sub_1D447DAC4();
  v2[3] = &unk_1E97A8138;
  v2[4] = &off_1E97A80B0;
  v2[0] = swift_allocObject();
  memcpy((void *)(v2[0] + 16), v0, 0x68uLL);
  sub_1D43AA704((uint64_t)v0);
  swift_retain();
  sub_1D439E75C(v2);
  swift_release();
  swift_release();
  return sub_1D42B5400((uint64_t)v2);
}

void sub_1D43A6500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v5;
  _QWORD v6[5];

  sub_1D43AACEC();
  v6[3] = a2;
  v6[4] = a3;
  v5 = (_OWORD *)sub_1D43AADEC();
  sub_1D43AAD9C(v5);
  sub_1D42BE934();
  sub_1D439E75C(v6);
  swift_release();
  sub_1D42B8F48();
  sub_1D43AAF48((uint64_t)v6);
  sub_1D43341E8();
}

void sub_1D43A658C()
{
  void *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  _QWORD v4[5];

  v1 = sub_1D43AACEC();
  v4[3] = sub_1D42EA3E0(v1, qword_1EFE4EF28);
  v4[4] = &off_1E97AEE28;
  v4[0] = v0;
  v2 = v0;
  v3 = sub_1D42BE934();
  sub_1D43AAF3C(v3);
  sub_1D43AAEC8();
  sub_1D42B8F48();
  sub_1D43AAF48((uint64_t)v4);
  sub_1D43AAC44();
}

void sub_1D43A6604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  _QWORD v10[5];

  sub_1D43AACEC();
  v10[3] = a4;
  v10[4] = a5;
  v10[0] = a2;
  v10[1] = a3;
  swift_bridgeObjectRetain();
  v9 = sub_1D42BE934();
  sub_1D43AAF24(v9);
  swift_release();
  sub_1D42B8F48();
  sub_1D43AAF48((uint64_t)v10);
  sub_1D430C424();
}

uint64_t sub_1D43A6678(uint64_t a1, char a2)
{
  _QWORD v4[5];

  sub_1D447DAC4();
  v4[3] = MEMORY[0x1E0DEAFA0];
  v4[4] = &off_1E97AD8A8;
  LOBYTE(v4[0]) = a2;
  swift_retain();
  sub_1D439E75C(v4);
  swift_release();
  swift_release();
  return sub_1D42B5400((uint64_t)v4);
}

void sub_1D43A6704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  _QWORD v8[5];

  sub_1D43AACEC();
  v8[3] = a3;
  v8[4] = a4;
  v8[0] = a2;
  v7 = sub_1D42BE934();
  sub_1D43AAF24(v7);
  sub_1D43AAED4();
  sub_1D42B8F48();
  sub_1D43AAF48((uint64_t)v8);
  sub_1D43AAC24();
}

void sub_1D43A6760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _BYTE v8[24];
  uint64_t v9;
  uint64_t v10;

  v5 = sub_1D43AACEC();
  v9 = a2;
  v10 = a3;
  v6 = sub_1D43AB040(v5);
  sub_1D43AAF10((uint64_t)v6);
  v7 = sub_1D42BE934();
  sub_1D43AAF3C(v7);
  sub_1D43AAED4();
  sub_1D42B8F48();
  sub_1D43AAF48((uint64_t)v8);
  sub_1D43AAC24();
}

uint64_t sub_1D43A67C0()
{
  const void *v0;
  _BYTE v2[96];

  memcpy(v2, v0, sizeof(v2));
  return sub_1D43A6B3C();
}

uint64_t sub_1D43A6800(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD v6[5];

  v6[3] = MEMORY[0x1E0CB0338];
  v6[4] = sub_1D439EAC0();
  v6[0] = a1;
  v6[1] = a2;
  sub_1D42DD16C(a1, a2);
  v4 = sub_1D44C3224(v6);
  sub_1D42B5400((uint64_t)v6);
  return v4;
}

uint64_t sub_1D43A6884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5[5];

  v1 = sub_1D4519D20();
  v5[3] = v1;
  v5[4] = sub_1D430DBE8(&qword_1EFE4EE60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  v2 = sub_1D430BBF0(v5);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(v2, v0, v1);
  v3 = sub_1D44C3224(v5);
  sub_1D42B5400((uint64_t)v5);
  return v3;
}

uint64_t sub_1D43A6928()
{
  const void *v0;
  uint64_t v1;
  _QWORD v3[5];

  v3[3] = &unk_1E9797B88;
  v3[4] = sub_1D43AA798();
  v3[0] = swift_allocObject();
  memcpy((void *)(v3[0] + 16), v0, 0xC0uLL);
  sub_1D435CE08((uint64_t)v0);
  v1 = sub_1D44C3224(v3);
  sub_1D42B5400((uint64_t)v3);
  return v1;
}

uint64_t sub_1D43A69C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD v6[5];

  v6[3] = &type metadata for AccessibilitySoundActions.SoundAction;
  v6[4] = sub_1D43AAAAC();
  v6[0] = a1;
  v6[1] = a2;
  swift_bridgeObjectRetain();
  v4 = sub_1D44C3224(v6);
  sub_1D42B5400((uint64_t)v6);
  return v4;
}

void sub_1D43A6A48(char a1, uint64_t a2, uint64_t (*a3)(void))
{
  char v3;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  v3 = a1 & 1;
  v5 = a2;
  v6 = a3();
  v4[0] = v3;
  sub_1D43AB0D4(v6);
  sub_1D43AADB8((uint64_t)v4);
  sub_1D43AAC44();
}

uint64_t sub_1D43A6A9C()
{
  const void *v0;
  uint64_t v1;
  _QWORD v3[5];

  v3[3] = &unk_1E979A470;
  v3[4] = sub_1D43AA910();
  v3[0] = swift_allocObject();
  memcpy((void *)(v3[0] + 16), v0, 0x48uLL);
  sub_1D43AA974((uint64_t)v0);
  v1 = sub_1D44C3224(v3);
  sub_1D42B5400((uint64_t)v3);
  return v1;
}

uint64_t sub_1D43A6B3C()
{
  const void *v0;
  uint64_t v1;
  _QWORD v3[5];

  v3[3] = &unk_1E979A8C8;
  v3[4] = sub_1D42F0BD8();
  v3[0] = swift_allocObject();
  memcpy((void *)(v3[0] + 16), v0, 0x60uLL);
  sub_1D43AA670((uint64_t)v0);
  v1 = sub_1D44C3224(v3);
  sub_1D42B5400((uint64_t)v3);
  return v1;
}

uint64_t sub_1D43A6BDC()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  _QWORD v5[5];

  v5[3] = &unk_1E979B538;
  v5[4] = sub_1D42B6634();
  v1 = swift_allocObject();
  v5[0] = v1;
  v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v1 + 32) = v2;
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(v0 + 32);
  *(_DWORD *)(v1 + 64) = *(_DWORD *)(v0 + 48);
  v3 = sub_1D44C3224(v5);
  sub_1D42B5400((uint64_t)v5);
  return v3;
}

uint64_t sub_1D43A6C78()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4[5];

  v4[3] = type metadata accessor for RemoteRequest();
  v4[4] = sub_1D430DBE8(&qword_1EFE4C8B8, (uint64_t (*)(uint64_t))type metadata accessor for RemoteRequest, (uint64_t)&unk_1D452D818);
  v1 = sub_1D430BBF0(v4);
  sub_1D430BC2C(v0, (uint64_t)v1);
  v2 = sub_1D44C3224(v4);
  sub_1D42B5400((uint64_t)v4);
  return v2;
}

uint64_t sub_1D43A6D10()
{
  _OWORD *v0;
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  _QWORD v6[5];

  v6[3] = &unk_1E97A4C18;
  v6[4] = sub_1D42B5DF8();
  v1 = (_OWORD *)swift_allocObject();
  v6[0] = v1;
  v2 = v0[1];
  v1[1] = *v0;
  v1[2] = v2;
  v3 = v0[3];
  v1[3] = v0[2];
  v1[4] = v3;
  v4 = sub_1D44C3224(v6);
  sub_1D42B5400((uint64_t)v6);
  return v4;
}

uint64_t sub_1D43A6DA4()
{
  const void *v0;
  uint64_t v1;
  _QWORD v3[5];

  v3[3] = &unk_1E97A8138;
  v3[4] = sub_1D43AA6A4();
  v3[0] = swift_allocObject();
  memcpy((void *)(v3[0] + 16), v0, 0x68uLL);
  sub_1D43AA704((uint64_t)v0);
  v1 = sub_1D44C3224(v3);
  sub_1D42B5400((uint64_t)v3);
  return v1;
}

void sub_1D43A6E44()
{
  uint64_t (*v0)(_OWORD *);
  _OWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  _OWORD *v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  _QWORD v8[5];

  sub_1D43AB060();
  v8[3] = v2;
  v8[4] = v3();
  v4 = (_OWORD *)sub_1D43AADEC();
  v8[0] = v4;
  v5 = v1[1];
  v4[1] = *v1;
  v4[2] = v5;
  v6 = v1[3];
  v4[3] = v1[2];
  v4[4] = v6;
  v7 = v0(v1);
  sub_1D43AAF30(v7);
  sub_1D43AADB8((uint64_t)v8);
  sub_1D43AAC44();
}

uint64_t sub_1D43A6EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[5];

  v4[3] = MEMORY[0x1E0DEA968];
  v4[4] = MEMORY[0x1E0DEA970];
  v4[0] = a1;
  v4[1] = a2;
  swift_bridgeObjectRetain();
  v2 = sub_1D44C3224(v4);
  sub_1D42B5400((uint64_t)v4);
  return v2;
}

uint64_t sub_1D43A6F20(char a1)
{
  uint64_t v1;
  _QWORD v3[5];

  v3[3] = MEMORY[0x1E0DEAFA0];
  v3[4] = MEMORY[0x1E0DEAFA8];
  LOBYTE(v3[0]) = a1;
  v1 = sub_1D44C3224(v3);
  sub_1D42B5400((uint64_t)v3);
  return v1;
}

void sub_1D43A6F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[5];

  v3[4] = a3;
  v3[3] = a2;
  v3[0] = a1;
  sub_1D44C3224(v3);
  sub_1D43AADB8((uint64_t)v3);
  sub_1D43AAC44();
}

void sub_1D43A6FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _BYTE v7[24];
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 16);
  v8 = a1;
  v9 = v4;
  v5 = sub_1D43AB040(a1);
  v6 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v5, v2, a1);
  sub_1D43AB0D4(v6);
  sub_1D43AADB8((uint64_t)v7);
  sub_1D43AAC44();
}

double sub_1D43A7034@<D0>(uint64_t a1@<X8>)
{
  return sub_1D43A70C4(a1);
}

double sub_1D43A7048@<D0>(_OWORD *a1@<X8>)
{
  return sub_1D43A84E8(a1);
}

void *sub_1D43A705C@<X0>(void *a1@<X8>)
{
  return sub_1D43A8590(a1);
}

uint64_t sub_1D43A7070@<X0>(_BYTE *a1@<X8>)
{
  return sub_1D43A8640(a1);
}

uint64_t sub_1D43A7084@<X0>(_QWORD *a1@<X8>)
{
  return sub_1D43A86E8(a1);
}

uint64_t sub_1D43A7098()
{
  return sub_1D43A8790() & 1;
}

double sub_1D43A70B0@<D0>(uint64_t a1@<X8>)
{
  return sub_1D43A8828(a1);
}

double sub_1D43A70C4@<D0>(uint64_t a1@<X8>)
{
  return sub_1D43A88F8(a1);
}

float sub_1D43A70D8@<S0>(uint64_t a1@<X8>)
{
  return sub_1D43A89E0(a1);
}

void sub_1D43A70EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  a3(0);
  sub_1D43AB07C();
  sub_1D42B6D94();
  sub_1D43AB0F8();
  sub_1D430DBE8(a4, a3, a5);
  sub_1D4519984();
  sub_1D42B8F48();
  sub_1D42BE844();
}

double sub_1D43A7184@<D0>(uint64_t a1@<X8>)
{
  return sub_1D43A8AB0(a1);
}

double sub_1D43A7198@<D0>(uint64_t a1@<X8>)
{
  return sub_1D43A8B88(a1);
}

double sub_1D43A71AC@<D0>(uint64_t a1@<X8>)
{
  return sub_1D43A8C60(a1);
}

double sub_1D43A71C0@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_1D43A8D44(a1).n128_u64[0];
  return result;
}

uint64_t sub_1D43A71D4()
{
  return sub_1D43A8E14();
}

uint64_t sub_1D43A71E8()
{
  return sub_1D43A8EAC() & 1;
}

uint64_t sub_1D43A7200()
{
  return sub_1D43A8F48();
}

uint64_t sub_1D43A7214()
{
  return sub_1D43A8FE0();
}

uint64_t sub_1D43A7228()
{
  return sub_1D44C32F4();
}

void sub_1D43A7254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_1D43AAE44(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  sub_1D43AAE0C();
  sub_1D43A4490();
  sub_1D43AAF98();
}

uint64_t sub_1D43A7280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D43A315C(a1, a2);
}

void sub_1D43A7294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_1D43AAE44(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  sub_1D43AAE0C();
  sub_1D43A5EF8();
  sub_1D43AAF98();
}

uint64_t sub_1D43A72C0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1D43AAC38();
  v0 = sub_1D42E3A4C();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D43AAB48(v1);
  return sub_1D42E3CFC(v2, v3, v4);
}

void sub_1D43A7300()
{
  sub_1D43AACB0();
  sub_1D43A6D10();
  sub_1D43AAC44();
}

double sub_1D43A7324@<D0>(uint64_t a1@<X8>)
{
  return sub_1D43A7198(a1);
}

void sub_1D43A7338()
{
  sub_1D43AACB0();
  sub_1D43A4748();
  sub_1D43AABEC();
}

uint64_t sub_1D43A7358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D43A3740(a1, a2);
}

void sub_1D43A736C()
{
  sub_1D43AACB0();
  sub_1D43A6394();
  sub_1D43AABEC();
}

uint64_t sub_1D43A738C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1D43AAC38();
  v0 = sub_1D42E3A4C();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D43AAB48(v1);
  return sub_1D42E3CFC(v2, v3, v4);
}

void sub_1D43A73CC()
{
  sub_1D43A747C();
}

void sub_1D43A73F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t *v6;
  _BYTE v7[24];
  uint64_t v8;
  uint64_t v9;

  v5 = sub_1D43AACEC();
  v8 = a2;
  v9 = a3;
  v6 = sub_1D43AB040(v5);
  sub_1D43AAF10((uint64_t)v6);
  sub_1D42BE934();
  sub_1D42B7B80();
  sub_1D43AAED4();
  sub_1D42B8F48();
  sub_1D43AAF48((uint64_t)v7);
  sub_1D43AAC24();
}

void sub_1D43A7458()
{
  sub_1D43A747C();
}

void sub_1D43A747C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int8x16_t v3;

  sub_1D43AB0AC();
  v3 = vextq_s8(*(int8x16_t *)(v0 - 16), *(int8x16_t *)(v0 - 16), 8uLL);
  v2 = MEMORY[0x1D825E41C](v1);
  sub_1D43AAF78(v2);
  sub_1D43AB050();
}

void sub_1D43A74B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1D42B7714();
  (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(a3 + 16))(*(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), a2, a3);
  if (v3)
  {
    swift_release();
  }
  else
  {
    v9 = v7;
    v10 = v8;
    swift_retain();
    swift_retain();
    v11 = sub_1D42CB9EC();
    sub_1D42B7C80(v11, v12, v9, v10);
    sub_1D43AAEC8();
    swift_release_n();
    swift_release_n();
  }
  sub_1D43AB008();
}

uint64_t sub_1D43A757C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1D42E39FC();
  sub_1D43AB100();
  v1 = swift_task_alloc();
  v2 = (__n128)sub_1D43AAF5C(v1);
  MEMORY[0x1D825E41C](&unk_1D452875C, v0, v2);
  v3 = sub_1D43AB028((uint64_t)sub_1D43A75D0);
  return sub_1D43AABD8(v3, v4, v5, v6);
}

uint64_t sub_1D43A75D0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  sub_1D42B8E20();
  v1 = *v0;
  sub_1D430C44C(&v3);
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1D43A7604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v4[3] = a3;
  v4[4] = a4;
  v4[2] = a1;
  v5 = (_QWORD *)swift_task_alloc();
  v4[5] = v5;
  sub_1D42E3D3C(v5, (uint64_t)sub_1D43A7648);
  return sub_1D438C128();
}

uint64_t sub_1D43A7648(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 48) = a1;
  swift_task_dealloc();
  if (v1)
    return sub_1D42B8DC0(*(uint64_t (**)(void))(v3 + 8));
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43A76A8()
{
  uint64_t *v0;
  _QWORD *v1;

  v0[7] = *(_QWORD *)(v0[6] + 24);
  sub_1D42BE934();
  v1 = (_QWORD *)swift_task_alloc();
  v0[8] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_1D43A7710;
  return sub_1D4368498(v0[2], v0[3], v0[3], v0[4]);
}

uint64_t sub_1D43A7710()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  sub_1D42B8EC8();
  return swift_task_switch();
}

uint64_t sub_1D43A7778()
{
  uint64_t (*v0)(void);

  swift_release();
  v0 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42B8DC0(v0);
}

uint64_t sub_1D43A77A0()
{
  uint64_t v0;

  swift_release();
  sub_1D42B8F48();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43A77D0()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1D42E39FC();
  sub_1D43AB100();
  v1 = swift_task_alloc();
  v2 = (__n128)sub_1D43AAF5C(v1);
  MEMORY[0x1D825E41C](&unk_1D4528728, v0, v2);
  v3 = sub_1D43AB028((uint64_t)sub_1D43AAAE8);
  return sub_1D43A7834(v3, v4, v5, v6);
}

uint64_t sub_1D43A7834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  v4[12] = *(_QWORD *)(a3 - 8);
  v4[13] = swift_task_alloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43A7880()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _BYTE *v13;
  uint64_t (*v14)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 72);
  v2 = v1[2];
  v3 = v1[3];
  v4 = v1[4];
  v5 = v1[5];
  type metadata accessor for XPCProxyDecoder.SingleValueContainer();
  inited = (_QWORD *)swift_initStackObject();
  *(_QWORD *)(v0 + 112) = inited;
  inited[2] = v2;
  inited[3] = v3;
  inited[4] = v4;
  inited[5] = v5;
  sub_1D430C254();
  v7 = inited[2];
  v8 = inited[3];
  *(_QWORD *)(v0 + 120) = v8;
  v9 = inited[4];
  v10 = inited[5];
  *(_QWORD *)(v0 + 128) = v10;
  sub_1D430C254();
  if (v7)
  {
    v11 = (_QWORD *)sub_1D42E3A4C();
    *(_QWORD *)(v0 + 136) = v11;
    *v11 = v0;
    v11[1] = sub_1D43A7994;
    return v14(*(_QWORD *)(v0 + 104), v7, v8, v9, v10);
  }
  else
  {
    sub_1D42B7F2C();
    swift_allocError();
    *v13 = 0;
    swift_willThrow();
    sub_1D42B8F48();
    swift_task_dealloc();
    return sub_1D438C26C(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_1D43A7994()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1D42B8E20();
  *v2 = *v1;
  *(_QWORD *)(v3 + 144) = v0;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43A79E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  v2 = v0[13];
  v1 = v0[14];
  v3 = v0[12];
  v4 = v0[10];
  v5 = v0[8];
  swift_release();
  sub_1D42B8F48();
  swift_setDeallocating();
  sub_1D42B8CF0(*(_QWORD *)(v1 + 16));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v5, v2, v4);
  swift_task_dealloc();
  v6 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42B8ED4(v6);
}

uint64_t sub_1D43A7A64()
{
  uint64_t v0;

  swift_release();
  sub_1D42B8F48();
  sub_1D42BE93C();
  swift_task_dealloc();
  return sub_1D42B8ED4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43A7AA8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1D43AABB8(a1);
  v2 = (_QWORD *)sub_1D42E3968();
  *(_QWORD *)(v1 + 24) = v2;
  v3 = sub_1D430C39C(v2, (uint64_t)sub_1D43A7AE4);
  return sub_1D438C464(v3, v4);
}

uint64_t sub_1D43A7AE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;

  v6 = *v3;
  v9 = *v3;
  sub_1D42B8F34(&v9);
  if (!v2)
  {
    v7 = *(_QWORD **)(v6 + 16);
    *v7 = a1;
    v7[1] = a2;
  }
  return sub_1D42B8ED4((uint64_t (*)(void))v3[1]);
}

void sub_1D43A7B38(uint64_t a1)
{
  uint64_t *v1;

  sub_1D43076C8(a1, *v1, v1[1]);
}

uint64_t sub_1D43A7B50()
{
  return sub_1D43A6C78();
}

void sub_1D43A7B64(uint64_t a1, uint64_t a2)
{
  sub_1D43A70EC(a1, a2, (uint64_t (*)(uint64_t))type metadata accessor for RemoteRequest, &qword_1EFE4C8B0, (uint64_t)&unk_1D452D7E0);
}

uint64_t sub_1D43A7B90()
{
  return sub_1D43A4664();
}

uint64_t sub_1D43A7BA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D43A343C(a1, a2);
}

void sub_1D43A7BB8()
{
  sub_1D43A5E84();
}

uint64_t sub_1D43A7BCC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1D43AAC38();
  v0 = sub_1D42E3A4C();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D43AAB48(v1);
  return sub_1D42E3CFC(v2, v3, v4);
}

void sub_1D43A7C0C()
{
  sub_1D43AABC4();
  sub_1D43A6E44();
  sub_1D43AAC44();
}

uint64_t sub_1D43A7C54()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

double sub_1D43A7C78@<D0>(uint64_t a1@<X8>)
{
  return sub_1D43A7184(a1);
}

void sub_1D43A7C8C()
{
  uint64_t v0;

  sub_1D43AABC4();
  sub_1D43A4914(v0, (uint64_t)&unk_1E97A2BF0, (uint64_t (*)(void))sub_1D42B5FE4, (uint64_t)&unk_1E97BAC50, (uint64_t)sub_1D42B603C);
  sub_1D43AABEC();
}

uint64_t sub_1D43A7CD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D43A35D4(a1, a2);
}

void sub_1D43A7CE4()
{
  uint64_t v0;

  sub_1D43AABC4();
  sub_1D43A6500(v0, (uint64_t)&unk_1E97A2BF0, (uint64_t)&off_1E97A2B68);
  sub_1D43AABEC();
}

uint64_t sub_1D43A7D28()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1D43AAC38();
  v0 = sub_1D42E3A4C();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D43AAB48(v1);
  return sub_1D42E3CFC(v2, v3, v4);
}

void sub_1D43A7D68()
{
  sub_1D43A9A48();
}

void sub_1D43A7D84()
{
  uint64_t v0;

  sub_1D42E39FC();
  sub_1D43AAEA0();
  v0 = swift_task_alloc();
  sub_1D43AAE18(v0);
  sub_1D4375CA8();
}

uint64_t sub_1D43A7DBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_1D43AACF4((uint64_t)sub_1D43AAAEC);
  return sub_1D43AABD8(v0, v1, v2, v3);
}

double sub_1D43A7DD4@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  double result;
  __int128 v8;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  type metadata accessor for XPCDataDecoder();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v5;
  *(_QWORD *)(inited + 24) = v4;
  sub_1D43A286C(inited, &v8);
  if (!v2)
  {
    result = *(double *)&v8;
    *a1 = v8;
  }
  return result;
}

uint64_t sub_1D43A7E34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t result;
  _BYTE v12[32];

  v4 = sub_1D4519D20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  sub_1D438C088();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v9;
  *(_QWORD *)(inited + 24) = v8;
  result = sub_1D43A29A8(inited, (uint64_t)v7);
  if (!v2)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v5 + 32))(a1, v7, v4);
  return result;
}

void *sub_1D43A7EEC@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  void *result;
  _BYTE v8[192];

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  type metadata accessor for XPCDataDecoder();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v5;
  *(_QWORD *)(inited + 24) = v4;
  result = sub_1D43A2B4C(inited, v8);
  if (!v2)
    return memcpy(a1, v8, 0xC0uLL);
  return result;
}

void sub_1D43A7F64()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  char v5;

  sub_1D43AAB60();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v3;
  *(_QWORD *)(inited + 24) = v1;
  sub_1D43A2C90(inited, &v5);
  if (!v2)
    *v0 = v5;
  sub_1D43AAC44();
}

void sub_1D43A7FB0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  sub_1D43AAB60();
  inited = swift_initStackObject();
  v3 = sub_1D43AACC8(inited);
  sub_1D43A2DCC(v3, v4);
  if (!v1)
  {
    *v0 = v5;
    v0[1] = v6;
  }
  sub_1D43AAC44();
}

uint64_t sub_1D43A7FF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  type metadata accessor for XPCDataDecoder();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v2;
  *(_QWORD *)(inited + 24) = v1;
  return sub_1D43A2F08(inited) & 1;
}

__n128 sub_1D43A8044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;

  sub_1D43AAB60();
  v2 = sub_1D43AB098();
  v3 = sub_1D43AB018(v2);
  sub_1D43A2FF8(v3, v4);
  if (!v1)
  {
    *(_QWORD *)v0 = v6;
    *(_QWORD *)(v0 + 8) = v7;
    *(_OWORD *)(v0 + 16) = v8;
    *(_QWORD *)(v0 + 32) = v9;
    *(_QWORD *)(v0 + 40) = v10;
    *(_QWORD *)(v0 + 48) = v11;
    result = v12;
    *(__n128 *)(v0 + 56) = v12;
  }
  return result;
}

__n128 sub_1D43A80B0()
{
  __n128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __n128 v14;

  sub_1D43AAB60();
  v2 = sub_1D43AB098();
  v3 = sub_1D43AACC8(v2);
  sub_1D43A315C(v3, v4);
  if (!v1)
  {
    sub_1D43AAD54(v10, v10, v11, v12, v13);
    v0[3].n128_u64[0] = v6;
    v0[3].n128_u64[1] = v7;
    v0[4].n128_u64[0] = v8;
    v0[4].n128_u8[8] = v9;
    result = v14;
    v0[5] = v14;
  }
  return result;
}

void sub_1D43A8118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  sub_1D43AAB60();
  v2 = sub_1D43AAFB8();
  v3 = sub_1D43AB018(v2);
  sub_1D43A32D8(v3, v4);
  if (!v1)
  {
    sub_1D43AAD78(v7, v6, v7, v8, v9, v10);
    *(_DWORD *)(v0 + 48) = v5;
  }
  sub_1D43AAC8C();
}

void sub_1D43A815C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;

  v5 = type metadata accessor for RemoteRequest();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42D7108();
  v7 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  sub_1D438C088();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v7;
  *(_QWORD *)(inited + 24) = v6;
  sub_1D43A343C(inited, v3);
  if (!v2)
    sub_1D43AA9B4(v3, a1);
  sub_1D42DD1D8();
}

void sub_1D43A81E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1D43AAB60();
  v2 = sub_1D43AAFB8();
  v3 = sub_1D43AACC8(v2);
  sub_1D43A35D4(v3, v4);
  if (!v1)
  {
    *(_QWORD *)v0 = v5;
    *(_QWORD *)(v0 + 8) = v6;
    *(_OWORD *)(v0 + 16) = v7;
    *(_QWORD *)(v0 + 32) = v8;
    *(_QWORD *)(v0 + 40) = v9;
    *(_QWORD *)(v0 + 48) = v10;
    *(_QWORD *)(v0 + 56) = v11;
  }
  sub_1D43AAC8C();
}

void sub_1D43A824C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  sub_1D43AAB60();
  v2 = sub_1D43AAFB8();
  v3 = sub_1D43AACC8(v2);
  sub_1D43A3740(v3, v4);
  if (!v1)
  {
    sub_1D43AAD54(v7, v7, v8, v9, v10);
    *(_BYTE *)(v0 + 48) = v5;
    *(_QWORD *)(v0 + 56) = v6;
  }
  sub_1D43AAC8C();
}

void sub_1D43A8298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  sub_1D43AAB60();
  v2 = sub_1D43AB098();
  v3 = sub_1D43AB018(v2);
  sub_1D43A38AC(v3, v4);
  if (!v1)
  {
    sub_1D43AAD78(v9, v8, v9, v10, v11, v12);
    *(_OWORD *)(v0 + 48) = v13;
    *(_OWORD *)(v0 + 64) = v14;
    *(_QWORD *)(v0 + 80) = v5;
    *(_QWORD *)(v0 + 88) = v6;
    *(_QWORD *)(v0 + 96) = v7;
  }
}

void sub_1D43A82FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  sub_1D43AAB60();
  v2 = sub_1D43AAFB8();
  v3 = sub_1D43AACC8(v2);
  sub_1D43A3A24(v3, v4);
  if (!v1)
  {
    *(_QWORD *)v0 = v5;
    *(_QWORD *)(v0 + 8) = v6;
    *(_OWORD *)(v0 + 16) = v7;
    *(_QWORD *)(v0 + 32) = v8;
    *(_OWORD *)(v0 + 40) = v9;
    *(_QWORD *)(v0 + 56) = v10;
  }
  sub_1D43AAC8C();
}

void sub_1D43A835C()
{
  sub_1D43A849C(qword_1EFE4EF28);
}

uint64_t sub_1D43A8380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  type metadata accessor for XPCDataDecoder();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v2;
  *(_QWORD *)(inited + 24) = v1;
  return sub_1D43A3B88(inited);
}

uint64_t sub_1D43A83CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_1D438C088();
  v3 = sub_1D43AAEF4();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  return sub_1D43A3C7C(v3) & 1;
}

void sub_1D43A8414()
{
  sub_1D43A8430((void (*)(uint64_t))sub_1D43A8F48);
}

void sub_1D43A8430(void (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  sub_1D438C088();
  v5 = sub_1D43AAEF4();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  sub_1D43A3D68(v5, a1);
  sub_1D4334190();
}

void sub_1D43A8478()
{
  sub_1D43A849C(&qword_1EFE4E3E0);
}

void sub_1D43A849C(unint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  sub_1D438C088();
  v5 = sub_1D43AAEF4();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  sub_1D43A3E00(v5, a1);
  sub_1D43AAEE0();
}

double sub_1D43A84E8@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  double result;
  __int128 v4;

  sub_1D451999C();
  swift_allocObject();
  sub_1D4519990();
  sub_1D43AA60C();
  sub_1D4519984();
  swift_release();
  if (!v1)
  {
    result = *(double *)&v4;
    *a1 = v4;
  }
  return result;
}

void *sub_1D43A8590@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  void *result;
  _BYTE v4[192];

  sub_1D451999C();
  swift_allocObject();
  sub_1D4519990();
  sub_1D43AA8A4();
  sub_1D4519984();
  result = (void *)swift_release();
  if (!v1)
    return memcpy(a1, v4, 0xC0uLL);
  return result;
}

uint64_t sub_1D43A8640@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char v4;

  sub_1D451999C();
  swift_allocObject();
  sub_1D4519990();
  sub_1D43AA9F8();
  sub_1D4519984();
  result = swift_release();
  if (!v1)
    *a1 = v4;
  return result;
}

uint64_t sub_1D43A86E8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  sub_1D451999C();
  swift_allocObject();
  sub_1D4519990();
  sub_1D43AAA70();
  sub_1D4519984();
  result = swift_release();
  if (!v1)
  {
    *a1 = v4;
    a1[1] = v5;
  }
  return result;
}

uint64_t sub_1D43A8790()
{
  uint64_t v0;
  uint64_t result;
  unsigned __int8 v2;

  sub_1D451999C();
  swift_allocObject();
  sub_1D4519990();
  sub_1D43AA54C();
  sub_1D4519984();
  result = swift_release();
  if (!v0)
    return v2;
  return result;
}

double sub_1D43A8828@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  sub_1D451999C();
  swift_allocObject();
  sub_1D4519990();
  sub_1D43A9BC4();
  sub_1D4519984();
  swift_release();
  if (!v1)
  {
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 48) = v9;
    result = *(double *)&v10;
    *(_OWORD *)(a1 + 56) = v10;
  }
  return result;
}

double sub_1D43A88F8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;

  sub_1D451999C();
  swift_allocObject();
  sub_1D4519990();
  sub_1D42F0B78();
  sub_1D4519984();
  swift_release();
  if (!v1)
  {
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 56) = v10;
    *(_QWORD *)(a1 + 64) = v11;
    *(_BYTE *)(a1 + 72) = v12;
    result = *(double *)&v13;
    *(_OWORD *)(a1 + 80) = v13;
  }
  return result;
}

float sub_1D43A89E0@<S0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  float result;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  float v9;

  sub_1D451999C();
  swift_allocObject();
  sub_1D4519990();
  sub_1D42B6670();
  sub_1D4519984();
  swift_release();
  if (!v1)
  {
    result = v9;
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v8;
    *(float *)(a1 + 48) = v9;
  }
  return result;
}

double sub_1D43A8AB0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;

  sub_1D451999C();
  swift_allocObject();
  sub_1D4519990();
  sub_1D42B6064();
  sub_1D4519984();
  swift_release();
  if (!v1)
  {
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v8;
    result = v9;
    *(double *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 56) = v10;
  }
  return result;
}

double sub_1D43A8B88@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  double v10;

  sub_1D451999C();
  swift_allocObject();
  sub_1D4519990();
  sub_1D42B5E34();
  sub_1D4519984();
  swift_release();
  if (!v1)
  {
    result = v10;
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v8;
    *(_BYTE *)(a1 + 48) = v9;
    *(double *)(a1 + 56) = v10;
  }
  return result;
}

double sub_1D43A8C60@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  double v11;
  uint64_t v12;
  uint64_t v13;

  sub_1D451999C();
  swift_allocObject();
  sub_1D4519990();
  sub_1D43AA4D4();
  sub_1D4519984();
  swift_release();
  if (!v1)
  {
    result = v11;
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v8;
    *(_OWORD *)(a1 + 48) = v9;
    *(_OWORD *)(a1 + 64) = v10;
    *(double *)(a1 + 80) = v11;
    *(_QWORD *)(a1 + 88) = v12;
    *(_QWORD *)(a1 + 96) = v13;
  }
  return result;
}

__n128 sub_1D43A8D44@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __n128 result;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;

  sub_1D451999C();
  swift_allocObject();
  sub_1D4519990();
  sub_1D42B5DBC();
  sub_1D4519984();
  swift_release();
  if (!v1)
  {
    result = v8;
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = v7;
    *(__n128 *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 56) = v9;
  }
  return result;
}

uint64_t sub_1D43A8E14()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  sub_1D451999C();
  swift_allocObject();
  sub_1D4519990();
  sub_1D4519984();
  result = swift_release();
  if (!v0)
    return v2;
  return result;
}

uint64_t sub_1D43A8EAC()
{
  uint64_t v0;
  char v1;
  char v3;

  sub_1D451999C();
  swift_allocObject();
  sub_1D4519990();
  sub_1D4519984();
  swift_release();
  if (!v0)
    v1 = v3;
  return v1 & 1;
}

uint64_t sub_1D43A8F48()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  sub_1D451999C();
  swift_allocObject();
  sub_1D4519990();
  sub_1D4519984();
  result = swift_release();
  if (!v0)
    return v2;
  return result;
}

uint64_t sub_1D43A8FE0()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  sub_1D451999C();
  swift_allocObject();
  sub_1D4519990();
  sub_1D4519984();
  result = swift_release();
  if (!v0)
    return v2;
  return result;
}

uint64_t sub_1D43A9078()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  sub_1D43AB07C();
  sub_1D42B6D94();
  sub_1D43AB0F8();
  sub_1D43A9B88();
  sub_1D4519984();
  result = sub_1D42B8F48();
  if (!v0)
    return v2;
  return result;
}

void sub_1D43A90FC()
{
  sub_1D42B28FC(&qword_1EFE4EBD8);
  sub_1D43AB07C();
  sub_1D42B6D94();
  sub_1D43AB0F8();
  sub_1D43AA5AC(&qword_1EFE4ED70, &qword_1EFE4EBD8, (void (*)(void))sub_1D43AA588);
  sub_1D4519984();
  sub_1D42B8F48();
  sub_1D4334190();
}

uint64_t sub_1D43A91B0()
{
  uint64_t *v0;

  return sub_1D43A69C8(*v0, v0[1]);
}

uint64_t sub_1D43A91C8@<X0>(_QWORD *a1@<X8>)
{
  return sub_1D43A7084(a1);
}

uint64_t sub_1D43A91DC(uint64_t a1)
{
  uint64_t *v1;

  return sub_1D43A4274(a1, *v1, v1[1]);
}

uint64_t sub_1D43A91F4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1D43A2DCC(a1, a2);
}

void sub_1D43A9208(uint64_t a1)
{
  uint64_t *v1;

  sub_1D43A6604(a1, *v1, v1[1], (uint64_t)&type metadata for AccessibilitySoundActions.SoundAction, (uint64_t)&off_1E9798C68);
}

uint64_t sub_1D43A9230()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1D43AAC38();
  v0 = sub_1D42E3A4C();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D43AAB48(v1);
  return sub_1D42E3CFC(v2, v3, v4);
}

uint64_t sub_1D43A9270()
{
  const void *v0;
  _BYTE __dst[72];

  memcpy(__dst, v0, sizeof(__dst));
  return sub_1D43A6A9C();
}

double sub_1D43A92B0@<D0>(uint64_t a1@<X8>)
{
  return sub_1D43A70B0(a1);
}

void sub_1D43A92C4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_1D43AAE74(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_1D43AAE0C();
  sub_1D43A43A4();
  sub_1D43341E8();
}

uint64_t sub_1D43A92F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D43A2FF8(a1, a2);
}

void sub_1D43A930C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_1D43AAE74(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_1D43AAE0C();
  sub_1D43A6220();
  sub_1D43341E8();
}

uint64_t sub_1D43A9340()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1D43AAC38();
  v0 = sub_1D42E3A4C();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D43AAB48(v1);
  return sub_1D42E3CFC(v2, v3, v4);
}

void sub_1D43A9380()
{
  char *v0;

  sub_1D43A6A48(*v0, (uint64_t)&unk_1E9799B48, (uint64_t (*)(void))sub_1D43AA510);
}

void sub_1D43A93A8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1D43A7098();
  if (!v0)
    sub_1D43AB0C0(v1);
  sub_1D43AAC78();
}

void sub_1D43A93CC()
{
  sub_1D43A433C();
}

void sub_1D43A93F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1D43A2F08(a1);
  if (!v1)
    sub_1D43AB0C0(v2);
  sub_1D43AAC78();
}

void sub_1D43A9418()
{
  sub_1D43A61C4();
}

uint64_t sub_1D43A9440(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1D43AABB8(a1);
  v2 = (_QWORD *)sub_1D42E3968();
  *(_QWORD *)(v1 + 24) = v2;
  v3 = sub_1D430C39C(v2, (uint64_t)sub_1D43A947C);
  return sub_1D438C464(v3, v4);
}

uint64_t sub_1D43A947C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D43AABF8();
  if (!v1)
    **(_BYTE **)(v2 + 16) = a1 & 1;
  return sub_1D42E3A2C(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_1D43A94B8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  *(_QWORD *)(v1 + 64) = a1;
  v2 = (_QWORD *)sub_1D42E3A4C();
  *(_QWORD *)(v1 + 72) = v2;
  v3 = sub_1D43AAB48(v2);
  return sub_1D42E3CFC(v3, v4, v5);
}

void sub_1D43A9504()
{
  uint64_t v0;

  sub_1D43AAFC0();
  sub_1D43075C4(v0);
  sub_1D43AB0A0();
}

uint64_t sub_1D43A9524()
{
  const void *v0;
  _BYTE v2[192];

  memcpy(v2, v0, sizeof(v2));
  return sub_1D43A6928();
}

void *sub_1D43A9564@<X0>(void *a1@<X8>)
{
  return sub_1D43A705C(a1);
}

void sub_1D43A9578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_1D43AAE2C(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  sub_1D43AAE0C();
  sub_1D43A4188();
  sub_1D43AAFF8();
}

void *sub_1D43A95A4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1D43A2B4C(a1, a2);
}

void sub_1D43A95B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_1D43AAE2C(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  sub_1D43AAE0C();
  sub_1D43A6108();
  sub_1D43AAFF8();
}

uint64_t sub_1D43A95E4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1D43AAC38();
  v0 = sub_1D42E3A4C();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D43AAB48(v1);
  return sub_1D42E3CFC(v2, v3, v4);
}

void sub_1D43A9624()
{
  char *v0;

  sub_1D43A6A48(*v0, (uint64_t)&type metadata for AccessibilitySoundRecognition.Detection, (uint64_t (*)(void))sub_1D43AAA34);
}

uint64_t sub_1D43A964C@<X0>(_BYTE *a1@<X8>)
{
  return sub_1D43A7070(a1);
}

void sub_1D43A9660()
{
  sub_1D43A433C();
}

uint64_t sub_1D43A9688@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1D43A2C90(a1, a2);
}

void sub_1D43A969C()
{
  sub_1D43A61C4();
}

uint64_t sub_1D43A96C4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1D43AAC38();
  v0 = sub_1D42E3A4C();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D43AAB48(v1);
  return sub_1D42E3CFC(v2, v3, v4);
}

void sub_1D43A9704()
{
  sub_1D43AABC4();
  sub_1D43A6E44();
  sub_1D43AAC44();
}

double sub_1D43A974C@<D0>(uint64_t a1@<X8>)
{
  return sub_1D43A71C0(a1);
}

void sub_1D43A9760()
{
  uint64_t v0;

  sub_1D43AABC4();
  sub_1D43A4914(v0, (uint64_t)&unk_1E97A98C0, (uint64_t (*)(void))sub_1D42B5D3C, (uint64_t)&unk_1E97BACF0, (uint64_t)sub_1D42B5D94);
  sub_1D43AABEC();
}

uint64_t sub_1D43A97A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D43A3A24(a1, a2);
}

void sub_1D43A97B8()
{
  uint64_t v0;

  sub_1D43AABC4();
  sub_1D43A6500(v0, (uint64_t)&unk_1E97A98C0, (uint64_t)&off_1E97A9838);
  sub_1D43AABEC();
}

uint64_t sub_1D43A97FC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1D43AAC38();
  v0 = sub_1D42E3A4C();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D43AAB48(v1);
  return sub_1D42E3CFC(v2, v3, v4);
}

uint64_t sub_1D43A983C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  *(_QWORD *)(v1 + 64) = a1;
  v2 = (_QWORD *)sub_1D42E3A4C();
  *(_QWORD *)(v1 + 72) = v2;
  v3 = sub_1D43AAB48(v2);
  return sub_1D42E3CFC(v3, v4, v5);
}

void sub_1D43A9888()
{
  uint64_t v0;

  sub_1D43AAFC0();
  sub_1D43075F0(v0);
  sub_1D43AB0A0();
}

void sub_1D43A98A8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;

  sub_1D43A26DC(a1, a2, a3);
  if (!v4)
    *a4 = v6;
  sub_1D43AAC78();
}

uint64_t sub_1D43A98CC()
{
  return sub_1D43A2780();
}

void sub_1D43A98EC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1D43A3EB4(a1, a2, (uint64_t)&off_1E97ADE58, a3);
}

void sub_1D43A9908(uint64_t a1, uint64_t a2)
{
  sub_1D43A4B88(a1, a2, (uint64_t)&off_1E97ADE70);
}

uint64_t sub_1D43A9924()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1D43AAFD8();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_1D42B8F00(v1);
  *v2 = v0;
  v2[1] = sub_1D438BE64;
  v3 = sub_1D43AAE8C();
  return sub_1D43AAC14(v3, v4, v5, v6);
}

void sub_1D43A9970(uint64_t a1, uint64_t a2)
{
  sub_1D43A6760(a1, a2, (uint64_t)&off_1E97ADE40);
}

void sub_1D43A998C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1D43A3EB4(a1, a2, (uint64_t)&off_1E97AE4C8, a3);
}

void sub_1D43A99A8(uint64_t a1, uint64_t a2)
{
  sub_1D43A4B88(a1, a2, (uint64_t)&off_1E97AE4E0);
}

uint64_t sub_1D43A99C4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1D43AAFD8();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_1D42B8F00(v1);
  *v2 = v0;
  v2[1] = sub_1D438BE64;
  v3 = sub_1D43AAE8C();
  return sub_1D43AAC14(v3, v4, v5, v6);
}

void sub_1D43A9A10(uint64_t a1, uint64_t a2)
{
  sub_1D43A6760(a1, a2, (uint64_t)&off_1E97AE4B0);
}

void sub_1D43A9A2C()
{
  sub_1D43A9A48();
}

void sub_1D43A9A48()
{
  sub_1D43AAEFC();
}

void sub_1D43A9A68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_1D43A73F0(v2, v1, a1);
}

void sub_1D43A9A8C()
{
  uint64_t v0;

  sub_1D42E39FC();
  sub_1D43AAEA0();
  v0 = swift_task_alloc();
  sub_1D43AAE18(v0);
  sub_1D4375CA8();
}

uint64_t sub_1D43A9AC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_1D43AACF4((uint64_t)sub_1D43A9ADC);
  return sub_1D43AABD8(v0, v1, v2, v3);
}

uint64_t sub_1D43A9ADC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  sub_1D42B8E20();
  v1 = *v0;
  sub_1D430C44C(&v3);
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1D43A9B10()
{
  char *v0;

  return sub_1D43A6F20(*v0);
}

void sub_1D43A9B28()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1D43A71E8();
  if (!v0)
    sub_1D43AB0C0(v1);
  sub_1D43AAC78();
}

uint64_t sub_1D43A9B4C(uint64_t a1)
{
  char *v1;

  return sub_1D43A4A64(a1, *v1);
}

void sub_1D43A9B64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1D43A3C7C(a1);
  if (!v1)
    sub_1D43AB0C0(v2);
  sub_1D43AAC78();
}

unint64_t sub_1D43A9B88()
{
  unint64_t result;

  result = qword_1EFE4ECE0;
  if (!qword_1EFE4ECE0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45498A8, &unk_1E97A6460);
    atomic_store(result, (unint64_t *)&qword_1EFE4ECE0);
  }
  return result;
}

unint64_t sub_1D43A9BC4()
{
  unint64_t result;

  result = qword_1EFE4ECE8;
  if (!qword_1EFE4ECE8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4538C94, &unk_1E979A470);
    atomic_store(result, (unint64_t *)&qword_1EFE4ECE8);
  }
  return result;
}

uint64_t sub_1D43A9C00(uint64_t a1)
{
  char *v1;

  return sub_1D43A6678(a1, *v1);
}

uint64_t sub_1D43A9C18(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1D43AABB8(a1);
  v2 = (_QWORD *)sub_1D42E3968();
  *(_QWORD *)(v1 + 24) = v2;
  v3 = sub_1D430C39C(v2, (uint64_t)sub_1D43A947C);
  return sub_1D438C464(v3, v4);
}

void sub_1D43A9C54()
{
  uint64_t *v0;

  sub_1D43A6F88(*v0, MEMORY[0x1E0DEBB98], MEMORY[0x1E0DEBBA0]);
}

void sub_1D43A9C7C(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1D43A7214();
  if (!v1)
    *a1 = v3;
  sub_1D43AAC78();
}

void sub_1D43A9CA0(uint64_t a1)
{
  uint64_t *v1;

  sub_1D43A4B20(a1, *v1, MEMORY[0x1E0DEBB98], MEMORY[0x1E0DEBBA0]);
}

void sub_1D43A9CC8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  sub_1D43A3D68(a1, (void (*)(uint64_t))sub_1D43A8FE0);
  if (!v2)
    *a2 = v4;
  sub_1D43AAC78();
}

void sub_1D43A9CF4(uint64_t a1)
{
  uint64_t *v1;

  sub_1D43A6704(a1, *v1, MEMORY[0x1E0DEBB98], (uint64_t)&off_1E97AEF58);
}

uint64_t sub_1D43A9D1C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1D43AABB8(a1);
  v2 = (_QWORD *)sub_1D42E3968();
  *(_QWORD *)(v1 + 24) = v2;
  v3 = sub_1D430C39C(v2, (uint64_t)sub_1D43AAB1C);
  return sub_1D438C464(v3, v4);
}

void sub_1D43A9D58()
{
  uint64_t *v0;

  sub_1D43A6F88(*v0, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB420]);
}

void sub_1D43A9D80(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1D43A7200();
  if (!v1)
    *a1 = v3;
  sub_1D43AAC78();
}

void sub_1D43A9DA4(uint64_t a1)
{
  uint64_t *v1;

  sub_1D43A4B20(a1, *v1, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB420]);
}

void sub_1D43A9DCC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  sub_1D43A3D68(a1, (void (*)(uint64_t))sub_1D43A8F48);
  if (!v2)
    *a2 = v4;
  sub_1D43AAC78();
}

void sub_1D43A9DF8(uint64_t a1)
{
  uint64_t *v1;

  sub_1D43A6704(a1, *v1, MEMORY[0x1E0DEB418], (uint64_t)&off_1E97AD970);
}

uint64_t sub_1D43A9E20(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1D43AABB8(a1);
  v2 = (_QWORD *)sub_1D42E3968();
  *(_QWORD *)(v1 + 24) = v2;
  v3 = sub_1D430C39C(v2, (uint64_t)sub_1D43A9E5C);
  return sub_1D438C464(v3, v4);
}

uint64_t sub_1D43A9E5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D43AABF8();
  if (!v1)
    **(_QWORD **)(v2 + 16) = a1;
  return sub_1D42E3A2C(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_1D43A9E94()
{
  uint64_t *v0;

  return sub_1D43A6EB0(*v0, v0[1]);
}

void sub_1D43A9EAC(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1D43A71D4();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
  }
  sub_1D43AAC78();
}

uint64_t sub_1D43A9ED0(uint64_t a1)
{
  uint64_t *v1;

  return sub_1D43A499C(a1, *v1, v1[1]);
}

void sub_1D43A9EE8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1D43A3B88(a1);
  if (!v2)
  {
    *a2 = v4;
    a2[1] = v5;
  }
  sub_1D43AAC78();
}

void sub_1D43A9F0C(uint64_t a1)
{
  uint64_t *v1;

  sub_1D43A6604(a1, *v1, v1[1], MEMORY[0x1E0DEA968], (uint64_t)&off_1E97AD710);
}

uint64_t sub_1D43A9F34(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1D43AABB8(a1);
  v2 = (_QWORD *)sub_1D42E3968();
  *(_QWORD *)(v1 + 24) = v2;
  v3 = sub_1D430C39C(v2, (uint64_t)sub_1D43AAB20);
  return sub_1D438C464(v3, v4);
}

uint64_t sub_1D43A9F70()
{
  uint64_t v0;

  return sub_1D43A6800(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

double sub_1D43A9F88@<D0>(_OWORD *a1@<X8>)
{
  return sub_1D43A7048(a1);
}

uint64_t sub_1D43A9F9C(uint64_t a1)
{
  uint64_t v1;

  return sub_1D43A3FCC(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8));
}

uint64_t sub_1D43A9FB4@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1D43A286C(a1, a2);
}

uint64_t sub_1D43A9FC8(uint64_t a1)
{
  uint64_t v1;

  return sub_1D43A5FB4(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8));
}

uint64_t sub_1D43A9FE0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1D43AAC38();
  v0 = sub_1D42E3A4C();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D43AAB48(v1);
  return sub_1D42E3CFC(v2, v3, v4);
}

uint64_t sub_1D43AA020()
{
  return sub_1D43A6884();
}

void sub_1D43AA034(uint64_t a1, uint64_t a2)
{
  sub_1D43A70EC(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], &qword_1EFE50C60, MEMORY[0x1E0CB09E0]);
}

uint64_t sub_1D43AA060()
{
  return sub_1D43A4098();
}

uint64_t sub_1D43AA074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D43A29A8(a1, a2);
}

uint64_t sub_1D43AA088()
{
  return sub_1D43A6058();
}

uint64_t sub_1D43AA09C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1D43AAC38();
  v0 = sub_1D42E3A4C();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D43AAB48(v1);
  return sub_1D42E3CFC(v2, v3, v4);
}

void sub_1D43AA0DC()
{
  sub_1D43AA184();
}

void sub_1D43AA100()
{
  uint64_t v0;

  sub_1D42E39FC();
  sub_1D43AAEA0();
  v0 = swift_task_alloc();
  sub_1D43AAE18(v0);
  sub_1D4375CA8();
}

uint64_t sub_1D43AA138()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_1D43AACF4((uint64_t)sub_1D43AAAEC);
  return sub_1D43A5D3C(v0, v1, v2, v3);
}

void sub_1D43AA160()
{
  sub_1D43AA184();
}

void sub_1D43AA184()
{
  sub_1D43AB0AC();
  sub_1D43AAEFC();
}

void sub_1D43AA1A0(uint64_t a1)
{
  sub_1D43AAF78(a1);
  sub_1D43AB050();
}

void sub_1D43AA1AC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  v8 = *(_QWORD *)(a3 - 8);
  v7 = MEMORY[0x1D825E41C](&unk_1D4546B30, a2, &v8);
  sub_1D43A3EB4(a1, a2, v7, a4);
}

void sub_1D43AA214()
{
  sub_1D43AB08C();
}

void sub_1D43AA240(uint64_t a1)
{
  uint64_t v1;

  sub_1D43A6FD0(v1, a1);
}

void sub_1D43AA260()
{
  sub_1D43AB08C();
}

void sub_1D43AA29C()
{
  sub_1D43A7228();
  sub_1D42DD1D8();
}

uint64_t sub_1D43AA2C0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1D43AABB8(a1);
  v2 = (_QWORD *)sub_1D42E3968();
  *(_QWORD *)(v1 + 24) = v2;
  v3 = sub_1D430C39C(v2, (uint64_t)sub_1D43AA2FC);
  return sub_1D438C464(v3, v4);
}

uint64_t sub_1D43AA2FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;

  sub_1D43AAEB4();
  v6 = *v3;
  v9 = *v3;
  sub_1D42B8F34(&v9);
  if (!v1)
  {
    v7 = *(_QWORD **)(v6 + 16);
    *v7 = v5;
    v7[1] = v4;
    v7[2] = v2;
    v7[3] = v0;
  }
  return sub_1D42B8ED4((uint64_t (*)(void))v3[1]);
}

void sub_1D43AA358(uint64_t a1)
{
  uint64_t *v1;

  sub_1D4307740(a1, *v1, v1[1], v1[2], v1[3]);
}

void sub_1D43AA374()
{
  sub_1D43AAC4C();
  sub_1D43A6BDC();
  sub_1D43AAC44();
}

float sub_1D43AA398@<S0>(uint64_t a1@<X8>)
{
  return sub_1D43A70D8(a1);
}

void sub_1D43AA3AC()
{
  sub_1D43AAC4C();
  sub_1D43A457C();
  sub_1D43AABEC();
}

uint64_t sub_1D43AA3CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D43A32D8(a1, a2);
}

void sub_1D43AA3E0()
{
  sub_1D43AAC4C();
  sub_1D43A62DC();
  sub_1D43AABEC();
}

uint64_t sub_1D43AA400()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1D43AAC38();
  v0 = sub_1D42E3A4C();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D43AAB48(v1);
  return sub_1D42E3CFC(v2, v3, v4);
}

uint64_t sub_1D43AA440()
{
  const void *v0;
  _BYTE __dst[104];

  memcpy(__dst, v0, sizeof(__dst));
  return sub_1D43A6DA4();
}

double sub_1D43AA480@<D0>(uint64_t a1@<X8>)
{
  return sub_1D43A71AC(a1);
}

void sub_1D43AA494(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_1D43AAE5C(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_1D43AAE0C();
  sub_1D43A4828();
  sub_1D43AAFE8();
}

uint64_t sub_1D43AA4C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D43A38AC(a1, a2);
}

unint64_t sub_1D43AA4D4()
{
  unint64_t result;

  result = qword_1EFE56860;
  if (!qword_1EFE56860)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454ED18, &unk_1E97A8138);
    atomic_store(result, (unint64_t *)&qword_1EFE56860);
  }
  return result;
}

unint64_t sub_1D43AA510()
{
  unint64_t result;

  result = qword_1EFE4ED48;
  if (!qword_1EFE4ED48)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4539548, &unk_1E9799B48);
    atomic_store(result, (unint64_t *)&qword_1EFE4ED48);
  }
  return result;
}

unint64_t sub_1D43AA54C()
{
  unint64_t result;

  result = qword_1EFE4ED50;
  if (!qword_1EFE4ED50)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4539504, &unk_1E9799B48);
    atomic_store(result, (unint64_t *)&qword_1EFE4ED50);
  }
  return result;
}

uint64_t sub_1D43AA588()
{
  return sub_1D43AA5AC((unint64_t *)&unk_1EFE4ED78, (uint64_t *)&unk_1EFE4E130, (void (*)(void))sub_1D43AA60C);
}

uint64_t sub_1D43AA5AC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1D42B8B10(a2);
    a3();
    v6 = sub_1D42CB9EC();
    result = MEMORY[0x1D825E41C](v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D43AA60C()
{
  unint64_t result;

  result = qword_1EFE4ED88;
  if (!qword_1EFE4ED88)
  {
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0CB0378], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EFE4ED88);
  }
  return result;
}

uint64_t sub_1D43AA648()
{
  sub_1D43AB0CC();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D43AA670(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_1D43AA6A4()
{
  unint64_t result;

  result = qword_1EFE4EDA8;
  if (!qword_1EFE4EDA8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454ECF0, &unk_1E97A8138);
    atomic_store(result, (unint64_t *)&qword_1EFE4EDA8);
  }
  return result;
}

uint64_t sub_1D43AA6E0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D43AA704(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1D43AA72C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_1D43AAE5C(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_1D43AAE0C();
  sub_1D43A6444();
  sub_1D43AAFE8();
}

uint64_t sub_1D43AA758()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1D43AAC38();
  v0 = sub_1D42E3A4C();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D43AAB48(v1);
  return sub_1D42E3CFC(v2, v3, v4);
}

unint64_t sub_1D43AA798()
{
  unint64_t result;

  result = qword_1EFE4EDB8;
  if (!qword_1EFE4EDB8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B618, &unk_1E9797B88);
    atomic_store(result, (unint64_t *)&qword_1EFE4EDB8);
  }
  return result;
}

uint64_t sub_1D43AA7D4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D43AB0CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1D43AA8A4()
{
  unint64_t result;

  result = qword_1EFE4EDC0;
  if (!qword_1EFE4EDC0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B5E0, &unk_1E9797B88);
    atomic_store(result, (unint64_t *)&qword_1EFE4EDC0);
  }
  return result;
}

uint64_t sub_1D43AA8E0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1D43AA904()
{
  return sub_1D42B6E34();
}

unint64_t sub_1D43AA910()
{
  unint64_t result;

  result = qword_1EFE4EE00;
  if (!qword_1EFE4EE00)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4538C6C, &unk_1E979A470);
    atomic_store(result, (unint64_t *)&qword_1EFE4EE00);
  }
  return result;
}

uint64_t sub_1D43AA94C()
{
  swift_bridgeObjectRelease();
  sub_1D43AB0CC();
  return swift_deallocObject();
}

uint64_t sub_1D43AA974(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D43AA9A8()
{
  return sub_1D42B6E34();
}

uint64_t sub_1D43AA9B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RemoteRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D43AA9F8()
{
  unint64_t result;

  result = qword_1EFE4EED8;
  if (!qword_1EFE4EED8)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for AccessibilitySoundRecognition.Detection, &type metadata for AccessibilitySoundRecognition.Detection);
    atomic_store(result, (unint64_t *)&qword_1EFE4EED8);
  }
  return result;
}

unint64_t sub_1D43AAA34()
{
  unint64_t result;

  result = qword_1EFE4EEF0;
  if (!qword_1EFE4EEF0)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for AccessibilitySoundRecognition.Detection, &type metadata for AccessibilitySoundRecognition.Detection);
    atomic_store(result, (unint64_t *)&qword_1EFE4EEF0);
  }
  return result;
}

unint64_t sub_1D43AAA70()
{
  unint64_t result;

  result = qword_1EFE4F760;
  if (!qword_1EFE4F760)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for AccessibilitySoundActions.SoundAction, &type metadata for AccessibilitySoundActions.SoundAction);
    atomic_store(result, (unint64_t *)&qword_1EFE4F760);
  }
  return result;
}

unint64_t sub_1D43AAAAC()
{
  unint64_t result;

  result = qword_1EFE4EF10;
  if (!qword_1EFE4EF10)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for AccessibilitySoundActions.SoundAction, &type metadata for AccessibilitySoundActions.SoundAction);
    atomic_store(result, (unint64_t *)&qword_1EFE4EF10);
  }
  return result;
}

void sub_1D43AAAF0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  sub_1D43A98A8(a1, a2, a3, a4);
}

uint64_t sub_1D43AAB08()
{
  return sub_1D43A98CC();
}

uint64_t sub_1D43AAB24()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 32) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1D43AAB48(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_1D43AAB60()
{
  return type metadata accessor for XPCDataDecoder();
}

uint64_t sub_1D43AAB74()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 24) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1D43AAB98()
{
  return swift_retain();
}

uint64_t sub_1D43AABA8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D43AABB8(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

__n128 sub_1D43AABC4()
{
  __n128 *v0;

  return v0[2];
}

uint64_t sub_1D43AABD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D43A7604(a1, a2, a3, a4);
}

uint64_t sub_1D43AABF8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 - 8);
  *v2 = *v0;
  *v2 = *v0;
  return swift_task_dealloc();
}

uint64_t sub_1D43AAC14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D43A5D3C(a1, a2, a3, a4);
}

__n128 sub_1D43AAC4C()
{
  __n128 *v0;

  return v0[2];
}

uint64_t sub_1D43AAC6C()
{
  return swift_retain();
}

uint64_t sub_1D43AAC80()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1D42B5420(v0, v1);
}

uint64_t sub_1D43AAC9C(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return sub_1D42B5400((uint64_t)va);
}

__n128 sub_1D43AACB0()
{
  __n128 *v0;

  return v0[2];
}

uint64_t sub_1D43AACC8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(result + 16) = v2;
  *(_QWORD *)(result + 24) = v1;
  return result;
}

uint64_t sub_1D43AACD8(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1D43AACEC()
{
  return sub_1D447DAC4();
}

uint64_t sub_1D43AACF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  *v3 = v2;
  v3[1] = a1;
  return v1;
}

void sub_1D43AAD0C(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, __int128 a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = a3;
  *(_OWORD *)(a1 + 16) = a4;
  *(_QWORD *)(a1 + 32) = a5;
  *(_QWORD *)(a1 + 40) = v6;
}

void sub_1D43AAD30(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, __int128 a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = a4;
  *(_OWORD *)(a1 + 16) = a5;
  *(_QWORD *)(a1 + 32) = a6;
  *(_QWORD *)(a1 + 40) = v7;
}

void sub_1D43AAD54(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, __int128 a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)v6 = a1;
  *(_QWORD *)(v6 + 8) = a3;
  *(_OWORD *)(v6 + 16) = a4;
  *(_QWORD *)(v6 + 32) = a5;
  *(_QWORD *)(v6 + 40) = v5;
}

void sub_1D43AAD78(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, __int128 a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)v7 = a1;
  *(_QWORD *)(v7 + 8) = a4;
  *(_OWORD *)(v7 + 16) = a5;
  *(_QWORD *)(v7 + 32) = a6;
  *(_QWORD *)(v7 + 40) = v6;
}

uint64_t sub_1D43AAD9C(_OWORD *a1)
{
  uint64_t (*v1)(_OWORD *);
  _OWORD *v2;
  __int128 v3;
  __int128 v4;

  v3 = v2[1];
  a1[1] = *v2;
  a1[2] = v3;
  v4 = v2[3];
  a1[3] = v2[2];
  a1[4] = v4;
  return v1(v2);
}

uint64_t sub_1D43AADB8(uint64_t a1)
{
  uint64_t v1;

  sub_1D42B5400(a1);
  return v1;
}

uint64_t sub_1D43AADD4()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1D42B8CDC(v0, v1);
}

uint64_t sub_1D43AADE0()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1D42DD16C(v0, v1);
}

uint64_t sub_1D43AADEC()
{
  return swift_allocObject();
}

uint64_t sub_1D43AADFC()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1D439E174(v0, v1);
}

uint64_t sub_1D43AAE0C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D43AAE18(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 24) = result;
  *(_QWORD *)(v1 + 16) = v2;
  return result;
}

void *sub_1D43AAE2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  const void *v9;

  return memcpy(&a9, v9, 0xC0uLL);
}

void *sub_1D43AAE44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  const void *v9;

  return memcpy(&a9, v9, 0x60uLL);
}

void *sub_1D43AAE5C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char __dst)
{
  const void *v10;

  return memcpy(&__dst, v10, 0x68uLL);
}

void *sub_1D43AAE74(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char __dst)
{
  const void *v10;

  return memcpy(&__dst, v10, 0x48uLL);
}

uint64_t sub_1D43AAE8C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D43AAEC8()
{
  return swift_release();
}

uint64_t sub_1D43AAED4()
{
  return swift_release();
}

uint64_t sub_1D43AAEF4()
{
  return swift_initStackObject();
}

void sub_1D43AAEFC()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D43AAF10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v1, v2);
}

uint64_t sub_1D43AAF24(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return sub_1D439E75C((uint64_t *)va);
}

uint64_t sub_1D43AAF30(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return sub_1D44C3224((uint64_t *)va);
}

uint64_t sub_1D43AAF3C(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return sub_1D439E75C((uint64_t *)va);
}

uint64_t sub_1D43AAF48(uint64_t a1)
{
  return sub_1D42B5400(a1);
}

int8x16_t sub_1D43AAF5C(uint64_t a1)
{
  uint64_t v1;
  int8x16_t *v2;
  int8x16_t v3;
  int8x16_t result;

  v3 = *(int8x16_t *)(v1 - 16);
  v2[2].i64[0] = a1;
  result = vextq_s8(v3, v3, 8uLL);
  v2[1] = result;
  return result;
}

uint64_t sub_1D43AAF78(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(v3, v2, a1);
}

uint64_t sub_1D43AAF8C()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1D42DD16C(v0, v1);
}

uint64_t sub_1D43AAFB8()
{
  return swift_initStackObject();
}

__n128 sub_1D43AAFC0()
{
  __n128 *v0;

  return v0[2];
}

uint64_t sub_1D43AB018(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(result + 16) = v2;
  *(_QWORD *)(result + 24) = v1;
  return result;
}

uint64_t sub_1D43AB028@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  *v3 = v1;
  v3[1] = a1;
  return v2;
}

uint64_t *sub_1D43AB040(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return sub_1D430BBF0((uint64_t *)va);
}

void sub_1D43AB048()
{
  sub_1D439E5C4();
}

uint64_t sub_1D43AB070()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1D42B5420(v0, v1);
}

uint64_t sub_1D43AB07C()
{
  return sub_1D451999C();
}

uint64_t sub_1D43AB084()
{
  return type metadata accessor for XPCDataDecoder.SingleValueContainer();
}

void sub_1D43AB08C()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D43AB098()
{
  return swift_initStackObject();
}

uint64_t sub_1D43AB0C0(uint64_t result)
{
  _BYTE *v1;

  *v1 = result & 1;
  return result;
}

uint64_t sub_1D43AB0CC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43AB0D4(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return sub_1D44C3224((uint64_t *)va);
}

uint64_t sub_1D43AB0E0()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1D42B8CDC(v0, v1);
}

uint64_t sub_1D43AB0EC()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1D42DD16C(v0, v1);
}

uint64_t sub_1D43AB0F8()
{
  return sub_1D4519990();
}

uint64_t sub_1D43AB114(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(result + 16) = v1;
  *(_QWORD *)(result + 24) = v2;
  return result;
}

uint64_t sub_1D43AB13C()
{
  return sub_1D451AF98();
}

uint64_t sub_1D43AB148(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  _QWORD v9[5];

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a3;
  *(_QWORD *)(v7 + 24) = a4;
  v9[3] = sub_1D42B28FC(&qword_1EFE4EFD0);
  v9[4] = sub_1D43AC20C();
  v9[0] = &unk_1EFE4EFC8;
  v9[1] = v7;
  swift_retain();
  swift_retain();
  a1(v9);
  swift_release();
  return sub_1D42B5400((uint64_t)v9);
}

uint64_t static ExampleRemoteWorkload.Request.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1D43AB210()
{
  sub_1D43AB324();
  return sub_1D451BA3C();
}

uint64_t sub_1D43AB238()
{
  sub_1D43AB324();
  return sub_1D451BA48();
}

uint64_t ExampleRemoteWorkload.Request.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_1D42B28FC(&qword_1EFE4EF40);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42B5528(a1, a1[3]);
  sub_1D43AB324();
  sub_1D451BA24();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1D43AB324()
{
  unint64_t result;

  result = qword_1EFE4EF48;
  if (!qword_1EFE4EF48)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45344C4, &type metadata for ExampleRemoteWorkload.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4EF48);
  }
  return result;
}

uint64_t ExampleRemoteWorkload.Request.hashValue.getter()
{
  sub_1D451B958();
  return sub_1D451B994();
}

uint64_t ExampleRemoteWorkload.Request.init(from:)(uint64_t a1)
{
  return sub_1D42B5400(a1);
}

uint64_t sub_1D43AB3B8(uint64_t a1)
{
  return ExampleRemoteWorkload.Request.init(from:)(a1);
}

uint64_t sub_1D43AB3CC(_QWORD *a1)
{
  return ExampleRemoteWorkload.Request.encode(to:)(a1);
}

uint64_t sub_1D43AB3E0()
{
  return ExampleRemoteWorkload.Request.hashValue.getter();
}

uint64_t sub_1D43AB3F4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[5];
  _QWORD v8[5];

  v3 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v7[2] = sub_1D43AC084;
  v7[3] = sub_1D447DE84();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v2;
  swift_retain();
  swift_retain();
  sub_1D43AB148((void (*)(_QWORD *))sub_1D43AC098, (uint64_t)v7, (uint64_t)&unk_1EFE4EFB8, v5);
  sub_1D43AC29C();
  swift_release();
  if (v1)
    return swift_release();
  v8[3] = MEMORY[0x1E0DEB418];
  v8[4] = &off_1E97AD938;
  v8[0] = v4;
  sub_1D447DF1C(v8);
  sub_1D43AC29C();
  return sub_1D42B5400((uint64_t)v8);
}

uint64_t sub_1D43AB4EC(_QWORD *a1, void (*a2)(uint64_t *))
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v8[5];

  v3 = a1[3];
  v4 = a1[4];
  v5 = sub_1D42B5528(a1, v3);
  v8[3] = v3;
  v8[4] = *(_QWORD *)(v4 + 8);
  v6 = sub_1D430BBF0(v8);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v6, v5, v3);
  a2(v8);
  return sub_1D42B5400((uint64_t)v8);
}

uint64_t sub_1D43AB57C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_1D43AC27C;
  return v5();
}

uint64_t sub_1D43AB5D4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 40) = a1;
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 48) = v2;
  v3 = sub_1D43AC280(v2);
  return sub_1D43AB6AC(v3, v4);
}

uint64_t sub_1D43AB638()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43AB690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  *(_OWORD *)v1 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 16) = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D43AB6AC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v2[2] = a1;
  v2[3] = a2;
  v3 = (_QWORD *)swift_task_alloc();
  v2[4] = v3;
  *v3 = v2;
  v3[1] = sub_1D43AB6F8;
  return sub_1D4376978();
}

uint64_t sub_1D43AB6F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 40) = a1;
  *(_QWORD *)(v3 + 48) = v1;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43AB758()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v3 = (uint64_t (*)(void))((char *)&dword_1EFE54198 + dword_1EFE54198);
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_1D43AB7B8;
  return sub_1D42B8DC0(v3);
}

uint64_t sub_1D43AB7B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 64) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 72) = a2;
    *(_QWORD *)(v6 + 80) = a1;
  }
  sub_1D42B8EC8();
  return swift_task_switch();
}

uint64_t sub_1D43AB82C()
{
  uint64_t v0;
  int8x16_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = (int8x16_t *)sub_1D42B8DB4();
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 72), *(int8x16_t *)(v0 + 72), 8uLL);
  sub_1D42B8F48();
  v2 = sub_1D42B8DB4();
  *(_QWORD *)(v0 + 88) = v2;
  *(_QWORD *)(v2 + 16) = &unk_1EFE4EF98;
  *(_QWORD *)(v2 + 24) = v1;
  v5 = (uint64_t (*)(void))((char *)&dword_1EFE54190 + dword_1EFE54190);
  swift_retain();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v3;
  *v3 = v0;
  v3[1] = sub_1D43AB8CC;
  return sub_1D430C35C(v5);
}

uint64_t sub_1D43AB8CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1D430C4B8();
  *v4 = *v3;
  *(_QWORD *)(v2 + 104) = v1;
  swift_task_dealloc();
  if (v1)
    swift_release();
  else
    *(_QWORD *)(v2 + 112) = v0;
  sub_1D42B8EC8();
  return swift_task_switch();
}

uint64_t sub_1D43AB938()
{
  uint64_t v0;

  swift_release_n();
  sub_1D43AC294();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43AB96C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD **)(v0 + 16);
  swift_release();
  swift_release();
  *v3 = &unk_1EFE4EFA8;
  v3[1] = v2;
  v3[2] = v1;
  sub_1D42B8F48();
  return sub_1D42B8ED4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43AB9CC()
{
  uint64_t v0;

  swift_release();
  sub_1D42B8F48();
  sub_1D43AC294();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43ABA04()
{
  uint64_t v0;

  sub_1D43AC294();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43ABA2C(int *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v4 = (uint64_t (*)(uint64_t))((char *)a1 + *a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1D43ABA94;
  return v4(v1 + 16);
}

uint64_t sub_1D43ABA94()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  v4 = *v1;
  sub_1D42B8F34(&v4);
  if (v0)
    return ((uint64_t (*)(void))v1[1])();
  else
    return sub_1D438C3F4(*(_QWORD *)(v2 + 16), (uint64_t (*)(void))v1[1]);
}

uint64_t sub_1D43ABAE8()
{
  return sub_1D43AB3F4();
}

uint64_t sub_1D43ABAFC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D43AC280(v1);
  return sub_1D43AB5D4(v2);
}

uint64_t run(_:)(uint64_t a1)
{
  _QWORD *v1;

  v1[10] = a1;
  v1[11] = type metadata accessor for RemoteRequest();
  v1[12] = swift_task_alloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

{
  _QWORD *v1;

  v1[7] = a1;
  sub_1D43C2384();
  v1[8] = sub_1D42F9B80();
  v1[9] = type metadata accessor for RemoteRequest();
  v1[10] = sub_1D42F9B80();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

{
  _QWORD *v1;

  v1[34] = a1;
  type metadata accessor for AccessibilitySoundRecognition.Session(0);
  v1[35] = sub_1D42F9B80();
  v1[36] = type metadata accessor for RemoteRequest();
  v1[37] = sub_1D42F9B80();
  sub_1D4419580();
  sub_1D42B8EC8();
  return swift_task_switch();
}

uint64_t sub_1D43ABB94()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t);

  v0[5] = &unk_1E979AC10;
  v0[6] = &off_1E979ABF0;
  sub_1D42B5528(v0 + 2, (uint64_t)&unk_1E979AC10);
  swift_storeEnumTagMultiPayload();
  v3 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EFE4A228 + dword_1EFE4A228);
  v1 = (_QWORD *)swift_task_alloc();
  v0[13] = v1;
  *v1 = v0;
  v1[1] = sub_1D43ABC34;
  return v3((uint64_t)(v0 + 7), v0[12]);
}

uint64_t sub_1D43ABC34()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43ABC8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  *(_OWORD *)v2 = *(_OWORD *)(v0 + 56);
  *(_QWORD *)(v2 + 16) = v3;
  sub_1D42B8C48(v1);
  sub_1D42B5400(v0 + 16);
  swift_task_dealloc();
  return sub_1D42B8ED4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43ABCE4()
{
  uint64_t v0;

  sub_1D42B8C48(*(_QWORD *)(v0 + 96));
  sub_1D42B5400(v0 + 16);
  swift_task_dealloc();
  return sub_1D42B8ED4(*(uint64_t (**)(void))(v0 + 8));
}

unint64_t sub_1D43ABD30()
{
  unint64_t result;

  result = qword_1EFE4EF58;
  if (!qword_1EFE4EF58)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for ExampleRemoteWorkload.Request, &type metadata for ExampleRemoteWorkload.Request);
    atomic_store(result, (unint64_t *)&qword_1EFE4EF58);
  }
  return result;
}

void type metadata accessor for ExampleRemoteWorkload()
{
  sub_1D42CB35C();
}

void type metadata accessor for ExampleRemoteWorkload.Request()
{
  sub_1D42CB35C();
}

_QWORD *sub_1D43ABD88(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for ExampleRemoteWorkload.Session(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for ExampleRemoteWorkload.Session(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

void type metadata accessor for ExampleRemoteWorkload.Session()
{
  sub_1D42CB35C();
}

ValueMetadata *type metadata accessor for ExampleRemoteWorkload.Request.CodingKeys()
{
  return &type metadata for ExampleRemoteWorkload.Request.CodingKeys;
}

unint64_t sub_1D43ABE64()
{
  unint64_t result;

  result = qword_1EFE4EF68;
  if (!qword_1EFE4EF68)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4534474, &type metadata for ExampleRemoteWorkload.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4EF68);
  }
  return result;
}

unint64_t sub_1D43ABEA4()
{
  unint64_t result;

  result = qword_1EFE4EF70;
  if (!qword_1EFE4EF70)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453449C, &type metadata for ExampleRemoteWorkload.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4EF70);
  }
  return result;
}

uint64_t sub_1D43ABEE0()
{
  sub_1D42B8EC8();
  return swift_task_switch();
}

void sub_1D43ABEF8()
{
  sub_1D435BE84(-1);
}

uint64_t sub_1D43ABF14(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(unint64_t))(v1 + 8))(a1 ^ 0x8000000000000000);
}

uint64_t sub_1D43ABF30(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_1D43AC27C;
  return sub_1D4367B20(a2);
}

uint64_t sub_1D43ABF88()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D43ABFAC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D438E804(v1);
  return sub_1D430C3D0(v2, v3, v4, v5);
}

uint64_t sub_1D43ABFF4()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;

  v2 = *(int **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D43AC058;
  return ((uint64_t (*)(int *))((char *)&dword_1EFE4EFA0 + dword_1EFE4EFA0))(v2);
}

uint64_t sub_1D43AC058(uint64_t a1)
{
  uint64_t v1;

  sub_1D42F9A68();
  return sub_1D438C3F4(a1, *(uint64_t (**)(void))(v1 + 8));
}

void sub_1D43AC084(_QWORD *a1)
{
  sub_1D447DF1C(a1);
}

uint64_t sub_1D43AC098(_QWORD *a1)
{
  uint64_t v1;

  return sub_1D43AB4EC(a1, *(void (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_1D43AC0B0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D438E804(v1);
  return sub_1D430C3D0(v2, v3, v4, v5);
}

uint64_t sub_1D43AC0F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v5;

  *(_QWORD *)(v3 + 16) = a1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v5;
  *v5 = v3;
  v5[1] = sub_1D43AC150;
  return sub_1D42B8584(a3);
}

uint64_t sub_1D43AC150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  sub_1D430C4B8();
  sub_1D42B8F34(v4);
  if (!v1)
    **(_QWORD **)(v2 + 16) = v0;
  return sub_1D430C35C(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_1D43AC190(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *(int **)(v2 + 16);
  v7 = swift_task_alloc();
  v8 = (_QWORD *)sub_1D42B8F00(v7);
  *v8 = v3;
  v8[1] = sub_1D42F92EC;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1EFE4EFC0 + dword_1EFE4EFC0))(a1, a2, v6);
}

unint64_t sub_1D43AC20C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFE4EFD8;
  if (!qword_1EFE4EFD8)
  {
    v1 = sub_1D42B8B10(&qword_1EFE4EFD0);
    v2[0] = &off_1E97ACAD0;
    v2[1] = &off_1E97AD938;
    result = MEMORY[0x1D825E41C](&unk_1D45287F8, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFE4EFD8);
  }
  return result;
}

uint64_t sub_1D43AC280(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_1D43AC294()
{
  return swift_release();
}

uint64_t sub_1D43AC29C()
{
  return swift_release();
}

uint64_t sub_1D43AC2A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v39 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE4F018) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v1);
  sub_1D42CB210();
  v43 = sub_1D42B28FC(&qword_1EFE4F020);
  v44 = *(_QWORD *)(v43 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v2);
  sub_1D42CB210();
  v5 = v4 - v3;
  sub_1D42B28FC(&qword_1EFE55AE0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v6);
  sub_1D42BE768();
  v41 = v7;
  v8 = sub_1D42B28FC(&qword_1EFE4F028);
  v48 = *(_QWORD *)(v8 - 8);
  v49 = v8;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  sub_1D42BE768();
  v45 = v10;
  v47 = sub_1D42B28FC(&qword_1EFE4F030);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v11);
  sub_1D42BE768();
  v46 = v12;
  v42 = sub_1D4519D20();
  v50 = *(_QWORD *)(v42 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v13);
  sub_1D42BE768();
  v37 = v14;
  sub_1D451AFA4();
  v15 = (void (*)(uint64_t))MEMORY[0x1E0DEF810];
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v16);
  sub_1D42CB210();
  sub_1D451A470();
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v17);
  sub_1D43479B4();
  v18 = sub_1D451AFB0();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  sub_1D42CB210();
  v22 = v21 - v20;
  sub_1D42E9D88(0, (unint64_t *)&qword_1EFE47A20);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v19 + 104))(v22, *MEMORY[0x1E0DEF8D8], v18);
  sub_1D451A464();
  sub_1D43287AC(&qword_1EFE47A18, v15);
  sub_1D42B28FC(&qword_1EFE479F0);
  sub_1D42E33F8(&qword_1EFE479F8, &qword_1EFE479F0);
  sub_1D451B2EC();
  v23 = (void *)sub_1D451AFD4();
  sub_1D4519D14();
  v24 = sub_1D42B6F40();
  *(_QWORD *)(v24 + 16) = a1;
  *(_QWORD *)(v24 + 24) = v23;
  v25 = sub_1D42B6F40();
  *(_QWORD *)(v25 + 16) = sub_1D43AF280;
  *(_QWORD *)(v25 + 24) = v24;
  swift_bridgeObjectRetain();
  v26 = v23;
  sub_1D42B28FC(&qword_1EFE4F038);
  sub_1D42E33F8(&qword_1EFE4F040, &qword_1EFE4F038);
  sub_1D451A2C0();
  sub_1D43ACC2C((uint64_t)sub_1D43ACBE0, 0, v5);
  sub_1D439E168(v39);
  v27 = sub_1D42B6F40();
  *(_QWORD *)(v27 + 16) = v26;
  v28 = sub_1D42B6F40();
  *(_QWORD *)(v28 + 16) = sub_1D43AF2A8;
  *(_QWORD *)(v28 + 24) = v27;
  v40 = v26;
  swift_retain();
  sub_1D42B28FC(&qword_1EFE4F048);
  sub_1D42E33F8(&qword_1EFE4F050, &qword_1EFE4F020);
  sub_1D42E33F8(&qword_1EFE4F058, &qword_1EFE4F048);
  sub_1D451A3C8();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v5, v43);
  sub_1D43AFB90();
  swift_bridgeObjectRelease();
  sub_1D43287AC(&qword_1EFE4CB00, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  sub_1D451B7C0();
  sub_1D451A794();
  swift_bridgeObjectRelease();
  sub_1D42E3FE0();
  sub_1D44A4B2C();
  swift_bridgeObjectRelease();
  sub_1D43AF3D0(v41, &qword_1EFE55AE0);
  sub_1D43AFB90();
  swift_bridgeObjectRelease();
  sub_1D451B7C0();
  sub_1D451A794();
  swift_bridgeObjectRelease();
  sub_1D42E3FE0();
  v29 = sub_1D42B6F40();
  *(_BYTE *)(v29 + 16) = 0;
  *(_QWORD *)(v29 + 24) = 0xD00000000000001FLL;
  *(_QWORD *)(v29 + 32) = 0x80000001D4554BE0;
  *(_QWORD *)(v29 + 40) = 60;
  v30 = (_QWORD *)sub_1D42B6F40();
  v30[2] = 0;
  v30[3] = sub_1D43AF374;
  v30[4] = v29;
  v31 = (_QWORD *)sub_1D42B6F40();
  v31[2] = sub_1D43AF3A0;
  v31[3] = v30;
  v31[4] = 60;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v46, v45, v49);
  v32 = (_QWORD *)(v46 + *(int *)(v47 + 52));
  *v32 = sub_1D43D6F9C;
  v32[1] = 0;
  v33 = (_QWORD *)(v46 + *(int *)(v47 + 56));
  *v33 = sub_1D43AF3C4;
  v33[1] = v31;
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v45, v49);
  sub_1D42E33F8(&qword_1EFE4F060, &qword_1EFE4F030);
  v34 = sub_1D451A374();
  sub_1D42B28FC(&qword_1EFE4F068);
  sub_1D42B6F40();
  sub_1D43AF13C(v34);
  sub_1D43AF3D0(v46, &qword_1EFE4F030);
  sub_1D42E33F8(&qword_1EFE4F070, &qword_1EFE4F068);
  v35 = sub_1D451A2E4();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v37, v42);
  type metadata accessor for SharedHIDReportStream.Instance();
  result = sub_1D42B6F40();
  *(_QWORD *)(result + 16) = v35;
  return result;
}

void sub_1D43AC99C(void (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = sub_1D42B28FC(&qword_1EFE4EFE0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1D43479B4();
  v8 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE4EFE8) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42D7108();
  if (qword_1EFE48E78 != -1)
    swift_once();
  v6 = swift_bridgeObjectRetain();
  a1(v6);
  swift_bridgeObjectRelease();
  if (!v1)
  {
    v9 = sub_1D42F25BC();
    sub_1D42B28FC(&qword_1EFE55F10);
    sub_1D43AFBB0();
    sub_1D42E33F8(&qword_1EFE55F20, &qword_1EFE55F10);
    sub_1D43AFC00();
    sub_1D451A3A4();
    sub_1D42B6F8C();
    type metadata accessor for SNAOPReport.SuccessPayload(0);
    sub_1D42E33F8(&qword_1EFE4EFF0, &qword_1EFE4EFE0);
    sub_1D451A3A4();
    sub_1D43AFBBC(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    sub_1D42E33F8(&qword_1EFE4EFF8, &qword_1EFE4EFE8);
    sub_1D43AFBF4();
    sub_1D42B28FC(&qword_1EFE4F000);
    sub_1D42B6F40();
    v7 = sub_1D43AFBA0();
    sub_1D4306FEC(v8);
    v9 = v7;
    sub_1D42E33F8(&qword_1EFE4F008, &qword_1EFE4F000);
    sub_1D451A2E4();
    sub_1D43AFBC8();
    swift_release();
    type metadata accessor for SharedAOPReportStream.Instance();
    *(_QWORD *)(sub_1D42B6F40() + 16) = &v9;
  }
  sub_1D42BE844();
}

id *sub_1D43ACBE0@<X0>(id *result@<X0>, _QWORD *a2@<X8>)
{
  id v3;

  if (*((_BYTE *)result + 8) == 1)
  {
    v3 = *result;
    result = (id *)*result;
  }
  else
  {
    v3 = 0;
  }
  *a2 = v3;
  return result;
}

uint64_t sub_1D43ACC2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a3;
  v5 = sub_1D42B28FC(&qword_1EFE4F0A8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D42B28FC(&qword_1EFE4F0B0);
  v14[0] = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  swift_retain();
  sub_1D42B28FC(&qword_1EFE4F018);
  sub_1D42B28FC(&qword_1EFE4F0B8);
  sub_1D42E33F8(&qword_1EFE4F0C0, &qword_1EFE4F018);
  sub_1D451A308();
  swift_release();
  sub_1D42B28FC(&qword_1EFE4F0C8);
  sub_1D451A0BC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1D42E9D88(0, &qword_1EFE4F0D0);
  sub_1D42E33F8(&qword_1EFE4F0D8, &qword_1EFE4F0B0);
  sub_1D451A2F0();
  return (*(uint64_t (**)(char *, uint64_t))(v14[0] + 8))(v11, v9);
}

uint64_t sub_1D43ACE28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a3;
  v5 = sub_1D42B28FC(&qword_1EFE4F110);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D42B28FC(&qword_1EFE4F118);
  v14[0] = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  swift_retain();
  sub_1D42B28FC(&qword_1EFE4A9B8);
  sub_1D42B28FC(&qword_1EFE4F120);
  sub_1D42E33F8(&qword_1EFE4A9D0, &qword_1EFE4A9B8);
  sub_1D451A308();
  swift_release();
  sub_1D42B28FC(&qword_1EFE4F128);
  sub_1D451A0BC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  type metadata accessor for AOPClassificationResult();
  sub_1D42E33F8(&qword_1EFE4F130, &qword_1EFE4F118);
  sub_1D451A2F0();
  return (*(uint64_t (**)(char *, uint64_t))(v14[0] + 8))(v11, v9);
}

uint64_t sub_1D43AD014@<X0>(void **a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v6 = sub_1D42B28FC(&qword_1EFE4F078);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = a2;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1D43AF4A0;
  *(_QWORD *)(v12 + 24) = v11;
  v13 = v10;
  v14 = a2;
  sub_1D42B28FC(&qword_1EFE4F080);
  sub_1D42E33F8(&qword_1EFE4F088, &qword_1EFE4F080);
  sub_1D451A2C0();
  sub_1D42E33F8(&qword_1EFE4F090, &qword_1EFE4F078);
  v15 = sub_1D451A2E4();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *a3 = v15;
  return result;
}

void sub_1D43AD16C(uint64_t a1)
{
  __asm { BR              X10 }
}

void sub_1D43AD1A8()
{
  sub_1D43C545C();
}

void sub_1D43AD2E8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[4];

  v4 = type metadata accessor for SNAOPReport.Payload(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SNAOPReport(0);
  sub_1D43AF844(a1 + *(int *)(v7 + 28), (uint64_t)v6, type metadata accessor for SNAOPReport.Payload);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = *(_DWORD *)v6;
    v10 = *((_QWORD *)v6 + 1);
    v9 = *((_QWORD *)v6 + 2);
    if (qword_1EFE40338 != -1)
      swift_once();
    v11 = sub_1D451A014();
    sub_1D42CC880(v11, (uint64_t)qword_1EFEA7700);
    swift_bridgeObjectRetain_n();
    v12 = sub_1D4519FFC();
    v13 = sub_1D451AF5C();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v14 = 138412290;
      v21[1] = v14 + 4;
      sub_1D43AF18C();
      swift_allocError();
      *(_DWORD *)v16 = v8;
      *(_QWORD *)(v16 + 8) = v10;
      *(_QWORD *)(v16 + 16) = v9;
      swift_bridgeObjectRetain();
      v17 = v8;
      v18 = v10;
      v19 = _swift_stdlib_bridgeErrorToNSError();
      v21[3] = v19;
      sub_1D451B1A8();
      *v15 = v19;
      v10 = v18;
      v8 = v17;
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D42A7000, v12, v13, "Received AOP error: %@", v14, 0xCu);
      sub_1D42B28FC((uint64_t *)&unk_1EFE50850);
      swift_arrayDestroy();
      MEMORY[0x1D825E524](v15, -1, -1);
      MEMORY[0x1D825E524](v14, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1D43AF18C();
    swift_allocError();
    *(_DWORD *)v20 = v8;
    *(_QWORD *)(v20 + 8) = v10;
    *(_QWORD *)(v20 + 16) = v9;
    swift_willThrow();
  }
  else
  {
    sub_1D43AF870((uint64_t)v6, a2, type metadata accessor for SNAOPReport.SuccessPayload);
  }
}

uint64_t sub_1D43AD590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = type metadata accessor for SNAOPReport.SuccessPayload(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D43AF844(a1, (uint64_t)v6, v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = 1;
  }
  else
  {
    sub_1D43AF870((uint64_t)v6, a2, (uint64_t (*)(_QWORD))type metadata accessor for AOPClassificationResult);
    v8 = 0;
  }
  v9 = type metadata accessor for AOPClassificationResult();
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a2, v8, 1, v9);
}

uint64_t sub_1D43AD668()
{
  uint64_t result;

  result = sub_1D451A5E4();
  qword_1EFEA77E0 = result;
  return result;
}

void sub_1D43AD6A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  _QWORD aBlock[6];

  v5 = sub_1D42B28FC(&qword_1EFE4F0E0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D27CB8]), sel_initWithOptions_, 8);
  v10 = (void *)sub_1D451A5A8();
  objc_msgSend(v9, sel_setDeviceMatching_, v10);

  objc_msgSend(v9, sel_setDispatchQueue_, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  v11 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v12 + v11, v8, v5);
  aBlock[4] = sub_1D43AF75C;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D4378774;
  aBlock[3] = &unk_1E97B39B8;
  v13 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v9, sel_setDeviceNotificationHandler_, v13);
  _Block_release(v13);
  *(_QWORD *)(swift_allocObject() + 16) = v9;
  v14 = v9;
  sub_1D451AB90();
  objc_msgSend(v14, sel_activate);

}

uint64_t sub_1D43AD894(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v10;
  char v11;

  v4 = sub_1D42B28FC(&qword_1EFE4F0E8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1;
  v11 = a2;
  v8 = a1;
  sub_1D42B28FC(&qword_1EFE4F0E0);
  sub_1D451AB9C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

id sub_1D43AD944(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, char *, uint64_t);
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t aBlock;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;

  v21 = a1;
  v6 = sub_1D42B28FC(&qword_1EFE4F098);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a2, sel_open);
  objc_msgSend(a2, sel_setDispatchQueue_, a3);
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v10(v9, a1, v6);
  v11 = *(unsigned __int8 *)(v7 + 80);
  v12 = swift_allocObject();
  v13 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v13(v12 + ((v11 + 16) & ~v11), v9, v6);
  v26 = sub_1D43AF4BC;
  v27 = v12;
  aBlock = MEMORY[0x1E0C809B0];
  v23 = 1107296256;
  v24 = sub_1D43ADC94;
  v25 = &unk_1E97B3570;
  v14 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(a2, sel_setInputReportHandler_, v14);
  _Block_release(v14);
  v10(v9, v21, v6);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  v13(v15 + ((v11 + 24) & ~v11), v9, v6);
  v26 = sub_1D43AF5BC;
  v27 = v15;
  aBlock = MEMORY[0x1E0C809B0];
  v23 = 1107296256;
  v24 = sub_1D43B1CEC;
  v25 = &unk_1E97B3940;
  v16 = _Block_copy(&aBlock);
  v17 = a2;
  swift_release();
  objc_msgSend(v17, sel_setRemovalHandler_, v16);
  _Block_release(v16);
  *(_QWORD *)(swift_allocObject() + 16) = v17;
  v18 = v17;
  sub_1D451AB90();
  return objc_msgSend(v18, sel_activate);
}

uint64_t sub_1D43ADBB4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  _QWORD v18[6];

  v12 = sub_1D42B28FC(&qword_1EFE4F0A0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = a1;
  v18[1] = a2;
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = a5;
  v18[5] = a6;
  v16 = a1;
  sub_1D42DD16C(a5, a6);
  sub_1D42B28FC(&qword_1EFE4F098);
  sub_1D451AB9C();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_1D43ADC94(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  void (*v11)(id, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t);
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v11 = *(void (**)(id, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(a1 + 32);
  swift_retain();
  v12 = a2;
  v13 = a6;
  v14 = sub_1D4519C54();
  v16 = v15;

  v11(v12, a3, a4, a5, v14, v16);
  sub_1D42B5420(v14, v16);
  return swift_release();
}

uint64_t sub_1D43ADD44(void *a1)
{
  objc_msgSend(a1, sel_cancel);
  objc_msgSend(a1, sel_close);
  sub_1D42B28FC(&qword_1EFE4F098);
  return sub_1D451ABA8();
}

void static HIDUtils.standaloneAOPReportStream()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = sub_1D42B28FC(&qword_1EFE4EFE0);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  sub_1D43479B4();
  v6 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE4EFE8) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v2);
  sub_1D42D7108();
  if (qword_1EFE48E78 != -1)
    swift_once();
  v3 = swift_bridgeObjectRetain();
  sub_1D43AC2A8(v3);
  swift_bridgeObjectRelease();
  v7 = sub_1D42F25BC();
  sub_1D42B28FC(&qword_1EFE55F10);
  sub_1D43AFBB0();
  sub_1D42E33F8(&qword_1EFE55F20, &qword_1EFE55F10);
  sub_1D43AFC00();
  sub_1D451A3A4();
  sub_1D42B6F8C();
  type metadata accessor for SNAOPReport.SuccessPayload(0);
  sub_1D42E33F8(&qword_1EFE4EFF0, &qword_1EFE4EFE0);
  sub_1D451A3A4();
  sub_1D43AFBBC(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1D42E33F8(&qword_1EFE4EFF8, &qword_1EFE4EFE8);
  v4 = sub_1D43AFBF4();
  sub_1D42B28FC(&qword_1EFE4F000);
  sub_1D42B6F40();
  v5 = sub_1D43AF13C(v4);
  sub_1D4306FEC(v6);
  v7 = v5;
  sub_1D42E33F8(&qword_1EFE4F008, &qword_1EFE4F000);
  sub_1D451A2E4();
  sub_1D42EA240();
  swift_release();
  type metadata accessor for SharedAOPReportStream.Instance();
  *(_QWORD *)(sub_1D42B6F40() + 16) = &v7;
  sub_1D42F489C();
  sub_1D42EA240();
  sub_1D42BE844();
}

void sub_1D43ADFE8(uint64_t a1, void (*a2)(void))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  io_service_t v15;
  task_port_t v16;
  mach_error_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  io_connect_t connect[2];
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v4 = sub_1D42B28FC(&qword_1EFE4A9B8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB210();
  v8 = v7 - v6;
  v9 = sub_1D42B28FC(&qword_1EFE4F0F0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  sub_1D42CB210();
  v13 = v12 - v11;
  type metadata accessor for IOService();
  v14 = sub_1D44936B8(*MEMORY[0x1E0CBBAA8], 0xD000000000000011, 0x80000001D4554C50, 0x706F616E73, 0xE500000000000000);
  if (!v2)
  {
    v25 = v4;
    v26 = v10;
    v27 = a1;
    v15 = *(_DWORD *)(v14 + 16);
    connect[0] = 0;
    v16 = sub_1D44FB044();
    v17 = IOServiceOpen(v15, v16, 0, connect);
    sub_1D44C84C4(v17);
    sub_1D44939D0(connect[0]);
    v19 = v18;
    swift_release();
    type metadata accessor for IOConnect();
    v20 = sub_1D42B6F40();
    *(_DWORD *)(v20 + 16) = v19;
    a2();
    v21 = sub_1D42F489C();
    v22 = sub_1D42B6F40();
    *(_QWORD *)(v22 + 16) = v20;
    *(_QWORD *)(v22 + 24) = v27;
    v23 = (_QWORD *)sub_1D42B6F40();
    v23[2] = sub_1D43AF7D0;
    v23[3] = v22;
    v23[4] = v21;
    swift_retain();
    swift_retain();
    sub_1D42B28FC(&qword_1EFE4A9C0);
    sub_1D42E33F8(&qword_1EFE4A9C8, &qword_1EFE4A9C0);
    sub_1D451A2C0();
    sub_1D43ACE28((uint64_t)sub_1D43AD590, 0, v13);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v25);
    sub_1D42E33F8(&qword_1EFE4F0F8, &qword_1EFE4F0F0);
    sub_1D451A374();
    sub_1D42B28FC(&qword_1EFE4F100);
    sub_1D42B6F40();
    v24 = sub_1D43AFBA0();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v13, v9);
    *(_QWORD *)connect = v24;
    sub_1D42E33F8(&qword_1EFE4F108, &qword_1EFE4F100);
    sub_1D451A2E4();
    sub_1D43AFBC8();
    sub_1D42B6F8C();
    swift_release();
    type metadata accessor for SharedAOPDebugStream.Instance();
    *(_QWORD *)(sub_1D42B6F40() + 16) = connect;
  }
  sub_1D42BE844();
}

uint64_t sub_1D43AE340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  type metadata accessor for SharedAOPDebugStream.AOPSubscription();
  swift_allocObject();
  swift_retain();
  swift_retain();
  result = sub_1D43CB410(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_1D43AE3B4()
{
  return sub_1D4486984((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1D43AF730);
}

void sub_1D43AE3F4(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  v6 = sub_1D42B28FC(&qword_1EFE4F120);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v9 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1);
  swift_storeEnumTagMultiPayload();
  sub_1D431AC40((uint64_t)v8, a3, &qword_1EFE4F120);
}

_QWORD *sub_1D43AE4C0(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v6 = a3;
  v7 = a4;
  result = a1(&v8, &v6);
  if (!v4)
    return (_QWORD *)v8;
  return result;
}

id sub_1D43AE508(id a1, char a2)
{
  id v3;
  id v4;

  if ((a2 & 1) != 0)
  {
    v4 = a1;
    sub_1D42B28FC(&qword_1EFE49BB0);
    swift_willThrowTypedImpl();
  }
  else
  {
    v3 = a1;
  }
  return a1;
}

void sub_1D43AE574(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD v7[2];

  v4 = sub_1D42B28FC(&qword_1EFE4F120);
  MEMORY[0x1E0C80A78](v4);
  v6 = (_QWORD *)((char *)v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D431A96C(a1, (uint64_t)v6, &qword_1EFE4F120);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7[1] = *v6;
    sub_1D42B28FC(&qword_1EFE49BB0);
    swift_willThrowTypedImpl();
  }
  else
  {
    sub_1D431AC40((uint64_t)v6, a2, &qword_1EFE4F128);
  }
}

void *sub_1D43AE658(void *a1)
{
  id v2;

  v2 = a1;
  return a1;
}

void sub_1D43AE67C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1D431A96C(a1, a2, &qword_1EFE4F128);
}

_QWORD *sub_1D43AE69C(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *(*a4)(uint64_t *__return_ptr, _QWORD *, _QWORD, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[2];

  v14[0] = a1;
  v14[1] = a2;
  v8 = *a3;
  v9 = a3[1];
  result = a4(&v13, v14, *a3, v9);
  v11 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
  }
  else
  {
    if (v11 < a6)
    {
      v12 = v8;
    }
    else
    {
      v11 = 0;
      v12 = v8 + 1;
    }
    *a3 = v12;
    a3[1] = v11;
    return (_QWORD *)v13;
  }
  return result;
}

_QWORD *sub_1D43AE714(uint64_t a1, _QWORD *a2, _QWORD *(*a3)(uint64_t *__return_ptr, uint64_t *, _QWORD, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v13 = a1;
  v7 = *a2;
  v8 = a2[1];
  result = a3(&v12, &v13, *a2, v8);
  v10 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
  }
  else
  {
    if (v10 < a5)
    {
      v11 = v7;
    }
    else
    {
      v10 = 0;
      v11 = v7 + 1;
    }
    *a2 = v11;
    a2[1] = v10;
    return (_QWORD *)v12;
  }
  return result;
}

_QWORD *sub_1D43AE790@<X0>(_OWORD *a1@<X0>, _QWORD *a2@<X1>, _QWORD *(*a3)(uint64_t *__return_ptr, _OWORD *, _QWORD, uint64_t)@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _OWORD v19[3];

  v8 = a1[1];
  v19[0] = *a1;
  v19[1] = v8;
  v19[2] = a1[2];
  v9 = *a2;
  v10 = a2[1];
  result = a3(&v15, v19, *a2, v10);
  v12 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    if (v12 < a4)
    {
      v13 = v9;
    }
    else
    {
      v12 = 0;
      v13 = v9 + 1;
    }
    *a2 = v13;
    a2[1] = v12;
    v14 = v18;
    *(_QWORD *)a5 = v15;
    *(_OWORD *)(a5 + 8) = v16;
    *(_OWORD *)(a5 + 24) = v17;
    *(_QWORD *)(a5 + 40) = v14;
  }
  return result;
}

uint64_t sub_1D43AE838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t *__return_ptr, _QWORD *, uint64_t))
{
  uint64_t v6;
  uint64_t v8;
  _QWORD v9[2];

  v9[0] = a1;
  v9[1] = a2;
  if (a4 == a5)
  {
    a6(&v8, v9, a3);
    return v8;
  }
  else
  {
    v6 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v6;
}

uint64_t sub_1D43AE8A0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v5;
  uint64_t v6;

  v6 = result;
  if (a3 == a4)
  {
    a5(&v5, &v6);
    return v5;
  }
  return result;
}

double sub_1D43AE8E0@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, void (*a4)(_BYTE *__return_ptr, _OWORD *)@<X4>, uint64_t a5@<X8>)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  double result;
  _BYTE v10[48];
  _OWORD v11[3];

  v6 = a1[1];
  v11[0] = *a1;
  v11[1] = v6;
  v11[2] = a1[2];
  if (a2 == a3)
  {
    a4(v10, v11);
  }
  else
  {
    v7 = a1[1];
    *(_OWORD *)v10 = *a1;
    *(_OWORD *)&v10[16] = v7;
    *(_OWORD *)&v10[32] = a1[2];
    sub_1D43AF400((uint64_t)a1);
  }
  v8 = *(_QWORD *)&v10[40];
  *(_QWORD *)a5 = *(_QWORD *)v10;
  *(_OWORD *)(a5 + 8) = *(_OWORD *)&v10[8];
  result = *(double *)&v10[24];
  *(_OWORD *)(a5 + 24) = *(_OWORD *)&v10[24];
  *(_QWORD *)(a5 + 40) = v8;
  return result;
}

uint64_t sub_1D43AE964(uint64_t a1, uint64_t a2, char a3)
{
  os_log_type_t v3;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v17;

  if ((a3 & 1) != 0)
  {
    if (qword_1EFE40338 != -1)
      swift_once();
    v5 = sub_1D451A014();
    sub_1D42CC880(v5, (uint64_t)qword_1EFEA7700);
    sub_1D43AFB50();
    v6 = sub_1D4519FFC();
    v7 = sub_1D451AF74();
    if (sub_1D43AFB80(v7))
    {
      v8 = sub_1D42CC940();
      v17 = sub_1D42CC940();
      v9 = sub_1D43AFB70(4.8755e-34);
      sub_1D43AFB60(v9);
      sub_1D43AFB04();
      sub_1D43AFBE8();
      sub_1D43AFAE4();
      sub_1D43AFB24();
      *(_WORD *)(v8 + 32) = 2080;
      v10 = sub_1D451A728();
      sub_1D43D72EC(v10, v11, &v17);
      sub_1D451B1A8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D42A7000, v6, v3, "%{public}sheartbeat count %{public}ld (fires every %{public}ld values); value: %s",
        (uint8_t *)v8,
        0x2Au);
      goto LABEL_10;
    }
  }
  else
  {
    if (qword_1EFE40338 != -1)
      swift_once();
    v12 = sub_1D451A014();
    sub_1D42CC880(v12, (uint64_t)qword_1EFEA7700);
    sub_1D43AFB50();
    v6 = sub_1D4519FFC();
    v13 = sub_1D451AF74();
    if (sub_1D43AFB80(v13))
    {
      v14 = (uint8_t *)sub_1D42CC940();
      v17 = sub_1D42CC940();
      v15 = sub_1D43AFB70(4.8754e-34);
      sub_1D43AFB60(v15);
      sub_1D43AFB04();
      sub_1D43AFBE8();
      sub_1D43AFAE4();
      sub_1D43AFB24();
      _os_log_impl(&dword_1D42A7000, v6, v3, "%{public}sheartbeat count %{public}ld (fires every %{public}ld values)", v14, 0x20u);
LABEL_10:
      swift_arrayDestroy();
      sub_1D42CC934();
    }
  }

  swift_bridgeObjectRelease_n();
  return a1;
}

uint64_t sub_1D43AEBC4@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, _OWORD *a7@<X8>)
{
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v26;
  _OWORD v27[3];
  uint64_t v28;

  if ((a3 & 1) != 0)
  {
    if (qword_1EFE40338 != -1)
      swift_once();
    v13 = sub_1D451A014();
    sub_1D42CC880(v13, (uint64_t)qword_1EFEA7700);
    swift_bridgeObjectRetain();
    sub_1D43AF400((uint64_t)a1);
    swift_bridgeObjectRetain();
    sub_1D43AF400((uint64_t)a1);
    v14 = sub_1D4519FFC();
    v15 = sub_1D451AF74();
    if (!os_log_type_enabled(v14, v15))
    {
      swift_bridgeObjectRelease_n();
      sub_1D43AF440((uint64_t)a1);
      sub_1D43AF440((uint64_t)a1);
      goto LABEL_12;
    }
    v16 = swift_slowAlloc();
    v26 = swift_slowAlloc();
    v28 = v26;
    *(_DWORD *)v16 = 136446978;
    swift_bridgeObjectRetain();
    sub_1D43D72EC(a4, a5, &v28);
    sub_1D451B1A8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2050;
    sub_1D451B1A8();
    *(_WORD *)(v16 + 22) = 2050;
    *(_QWORD *)&v27[0] = a6;
    sub_1D451B1A8();
    *(_WORD *)(v16 + 32) = 2080;
    v17 = a1[1];
    v27[0] = *a1;
    v27[1] = v17;
    v27[2] = a1[2];
    sub_1D43AF400((uint64_t)a1);
    v18 = sub_1D451A728();
    *(_QWORD *)&v27[0] = sub_1D43D72EC(v18, v19, &v28);
    sub_1D451B1A8();
    swift_bridgeObjectRelease();
    sub_1D43AF440((uint64_t)a1);
    sub_1D43AF440((uint64_t)a1);
    _os_log_impl(&dword_1D42A7000, v14, v15, "%{public}sheartbeat count %{public}ld (fires every %{public}ld values); value: %s",
      (uint8_t *)v16,
      0x2Au);
    swift_arrayDestroy();
    v20 = v26;
  }
  else
  {
    if (qword_1EFE40338 != -1)
      swift_once();
    v21 = sub_1D451A014();
    sub_1D42CC880(v21, (uint64_t)qword_1EFEA7700);
    swift_bridgeObjectRetain_n();
    v14 = sub_1D4519FFC();
    v22 = sub_1D451AF74();
    if (!os_log_type_enabled(v14, v22))
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_14;
    }
    v16 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    *(_DWORD *)v16 = 136446722;
    *(_QWORD *)&v27[0] = v23;
    swift_bridgeObjectRetain();
    v28 = sub_1D43D72EC(a4, a5, (uint64_t *)v27);
    sub_1D451B1A8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2050;
    v28 = a2;
    sub_1D451B1A8();
    *(_WORD *)(v16 + 22) = 2050;
    v28 = a6;
    sub_1D451B1A8();
    _os_log_impl(&dword_1D42A7000, v14, v22, "%{public}sheartbeat count %{public}ld (fires every %{public}ld values)", (uint8_t *)v16, 0x20u);
    swift_arrayDestroy();
    v20 = v23;
  }
  MEMORY[0x1D825E524](v20, -1, -1);
  MEMORY[0x1D825E524](v16, -1, -1);
LABEL_12:

LABEL_14:
  v24 = a1[1];
  *a7 = *a1;
  a7[1] = v24;
  a7[2] = a1[2];
  return sub_1D43AF400((uint64_t)a1);
}

void type metadata accessor for HIDUtils()
{
  sub_1D42CB35C();
}

uint64_t sub_1D43AEFE8(uint64_t a1)
{

  return sub_1D42B5420(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

uint64_t sub_1D43AF010(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  unint64_t v5;
  id v6;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  v6 = v3;
  sub_1D42DD16C(v4, v5);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return a1;
}

uint64_t sub_1D43AF068(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  sub_1D42DD16C(v8, v7);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v7;
  sub_1D42B5420(v9, v10);
  return a1;
}

uint64_t sub_1D43AF0DC(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v5;
  sub_1D42B5420(v6, v7);
  return a1;
}

void type metadata accessor for HIDReport()
{
  sub_1D42CB35C();
}

uint64_t sub_1D43AF13C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;

  type metadata accessor for SafeRecursiveLock();
  v3 = sub_1D42B6F40();
  v4 = (_QWORD *)sub_1D42CC940();
  *v4 = 0;
  *(_QWORD *)(v3 + 16) = v4;
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)(v1 + 24) = a1;
  return v1;
}

unint64_t sub_1D43AF18C()
{
  unint64_t result;

  result = qword_1EFE4F010;
  if (!qword_1EFE4F010)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45354EC, &type metadata for SNAOPReport.AOPError);
    atomic_store(result, (unint64_t *)&qword_1EFE4F010);
  }
  return result;
}

void sub_1D43AF1C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  _BYTE __dst[77];

  v2 = sub_1D4519A14();
  if (v2)
  {
    v3 = v2;
    v4 = sub_1D4519A38();
    if (__OFSUB__(a1, v4))
    {
      __break(1u);
      goto LABEL_8;
    }
    v5 = (const void *)(v3 + a1 - v4);
  }
  else
  {
    v5 = 0;
  }
  sub_1D4519A2C();
  if (v5)
  {
    memcpy(__dst, v5, sizeof(__dst));
    sub_1D43C545C();
    return;
  }
LABEL_8:
  __break(1u);
}

uint64_t sub_1D43AF25C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  sub_1D42EA3A0();
  return swift_deallocObject();
}

void sub_1D43AF280(uint64_t a1)
{
  uint64_t v1;

  sub_1D43AD6A4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1D43AF288()
{
  sub_1D42B8F98();
  sub_1D42EA3A0();
  return swift_deallocObject();
}

void sub_1D43AF2A0()
{
  uint64_t v0;

  sub_1D43EDB10(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1D43AF2A8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1D43AD014(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1D43AF2B0@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, _OWORD *a7@<X8>)
{
  __int128 v7;
  _OWORD v9[3];

  v7 = a1[1];
  v9[0] = *a1;
  v9[1] = v7;
  v9[2] = a1[2];
  return sub_1D43AEBC4(v9, a2, a3, a4, a5, a6, a7);
}

double sub_1D43AF2E0@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, void (*a4)(_BYTE *__return_ptr, _OWORD *)@<X4>, uint64_t a5@<X8>)
{
  __int128 v5;
  _OWORD v7[3];

  v5 = a1[1];
  v7[0] = *a1;
  v7[1] = v5;
  v7[2] = a1[2];
  return sub_1D43AE8E0(v7, a2, a3, a4, a5);
}

_QWORD *sub_1D43AF310@<X0>(_OWORD *a1@<X0>, _QWORD *a2@<X1>, _QWORD *(*a3)(uint64_t *__return_ptr, _OWORD *, _QWORD, uint64_t)@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  __int128 v5;
  _OWORD v7[3];

  v5 = a1[1];
  v7[0] = *a1;
  v7[1] = v5;
  v7[2] = a1[2];
  return sub_1D43AE790(v7, a2, a3, a4, a5);
}

void sub_1D43AF340()
{
  sub_1D44B0C60();
}

void sub_1D43AF348()
{
  sub_1D43AF340();
}

uint64_t sub_1D43AF350()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D43AF374@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_1D43AF2B0(a1, a2, *(_BYTE *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), a3);
}

uint64_t sub_1D43AF384()
{
  swift_release();
  sub_1D42E3F08();
  return swift_deallocObject();
}

double sub_1D43AF3A0@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1D43AF2E0(a1, a2, *(_QWORD *)(v3 + 16), *(void (**)(_BYTE *__return_ptr, _OWORD *))(v3 + 24), a3);
}

uint64_t sub_1D43AF3AC()
{
  sub_1D42B8F98();
  sub_1D42E3F08();
  return swift_deallocObject();
}

_QWORD *sub_1D43AF3C4@<X0>(_OWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1D43AF310(a1, a2, *(_QWORD *(**)(uint64_t *__return_ptr, _OWORD *, _QWORD, uint64_t))(v3 + 16), *(_QWORD *)(v3 + 32), a3);
}

void sub_1D43AF3D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = sub_1D42B28FC(a2);
  sub_1D439E168(*(_QWORD *)(v2 - 8));
  sub_1D42B6E24();
}

uint64_t sub_1D43AF400(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  id v4;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(id *)a1;
  sub_1D42DD16C(v2, v3);
  return a1;
}

uint64_t sub_1D43AF440(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);

  sub_1D42B5420(v2, v3);
  return a1;
}

uint64_t sub_1D43AF480()
{
  uint64_t v0;

  sub_1D43AFC14();

  sub_1D42EA3A0();
  return swift_deallocObject();
}

id sub_1D43AF4A0(uint64_t a1)
{
  uint64_t v1;

  return sub_1D43AD944(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1D43AF4A8()
{
  uint64_t v0;

  sub_1D43EDB2C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1D43AF4B0()
{
  return sub_1D431AFEC(&qword_1EFE4F098);
}

uint64_t sub_1D43AF4BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  sub_1D42B28FC(&qword_1EFE4F098);
  sub_1D43AFBD4();
  return sub_1D43ADBB4(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1D43AF530(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D43AF540()
{
  return swift_release();
}

uint64_t sub_1D43AF548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1D42B28FC(&qword_1EFE4F098);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  sub_1D43AFC14();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1D43AF5BC()
{
  uint64_t v0;

  sub_1D42B28FC(&qword_1EFE4F098);
  return sub_1D43ADD44(*(void **)(v0 + 16));
}

uint64_t sub_1D43AF5F0()
{
  sub_1D43AFC14();
  return swift_deallocObject();
}

id sub_1D43AF610()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, sel_cancel);
  return objc_msgSend(v1, sel_close);
}

uint64_t sub_1D43AF648@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_1D43AE3B4();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1D43AF688@<X0>(uint64_t a1@<X8>)
{
  return sub_1D43AF648(a1);
}

id sub_1D43AF690@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id result;

  result = sub_1D43AE508(*(id *)a1, *(_BYTE *)(a1 + 8));
  if (!v2)
    *a2 = result;
  return result;
}

void *sub_1D43AF6C4@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *result;

  result = sub_1D43AE658(*a1);
  *a2 = result;
  return result;
}

_QWORD *sub_1D43AF6EC@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  _QWORD *result;

  result = sub_1D43AE4C0(a1, a2, *(_QWORD *)a3, *(_BYTE *)(a3 + 8));
  if (v5)
    *a4 = v5;
  else
    *a5 = result;
  return result;
}

_QWORD *sub_1D43AF730@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1D43AF6EC(*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t *))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a1, a2);
}

uint64_t sub_1D43AF750()
{
  return sub_1D431AFEC(&qword_1EFE4F0E0);
}

uint64_t sub_1D43AF75C(void *a1, char a2)
{
  sub_1D42B28FC(&qword_1EFE4F0E0);
  sub_1D43AFBD4();
  return sub_1D43AD894(a1, a2);
}

id sub_1D43AF7A0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_cancel);
}

uint64_t sub_1D43AF7B0()
{
  swift_release();
  sub_1D42B8F98();
  sub_1D42EA3A0();
  return swift_deallocObject();
}

uint64_t sub_1D43AF7D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1D43AE340(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_1D43AF7E8()
{
  sub_1D44A6158();
}

uint64_t sub_1D43AF800(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t sub_1D43AF810()
{
  sub_1D42B8F98();
  swift_release();
  sub_1D42E3F08();
  return swift_deallocObject();
}

void sub_1D43AF830()
{
  sub_1D43AF7E8();
}

void sub_1D43AF83C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1D43AE3F4(a1, *(void (**)(uint64_t))(v2 + 16), a2);
}

void sub_1D43AF844(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_1D43AFB40(a1, a2, a3);
  sub_1D431B48C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_1D42B6E24();
}

void sub_1D43AF870(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_1D43AFB40(a1, a2, a3);
  sub_1D431B48C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_1D42B6E24();
}

uint64_t sub_1D43AF89C(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D43AF8DC + 4 * byte_1D4534530[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D43AF8FC + 4 * byte_1D4534535[v4]))();
}

_BYTE *sub_1D43AF8DC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D43AF8FC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D43AF904(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D43AF90C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D43AF914(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D43AF91C(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for HIDUtils.DomainError()
{
  sub_1D42CB35C();
}

uint64_t sub_1D43AF934(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = v3;
  return a1;
}

uint64_t sub_1D43AF968(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t sub_1D43AF9B0(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t sub_1D43AF9EC(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 9))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D43AFA2C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 9) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for HIDDeviceDiscoveryEvent()
{
  sub_1D42CB35C();
}

unint64_t sub_1D43AFA7C()
{
  unint64_t result;

  result = qword_1EFE4F138;
  if (!qword_1EFE4F138)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45345C8, &unk_1E97ACB20);
    atomic_store(result, (unint64_t *)&qword_1EFE4F138);
  }
  return result;
}

uint64_t sub_1D43AFAE4()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 2050;
  return sub_1D451B1A8();
}

uint64_t sub_1D43AFB04()
{
  return sub_1D451B1A8();
}

uint64_t sub_1D43AFB24()
{
  __int16 v0;
  uint64_t v1;

  *(_WORD *)(v1 + 22) = v0;
  return sub_1D451B1A8();
}

uint64_t sub_1D43AFB40(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

uint64_t sub_1D43AFB50()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1D43AFB60(uint64_t a1, ...)
{
  unint64_t v1;
  uint64_t v2;
  va_list va;

  va_start(va, a1);
  return sub_1D43D72EC(v2, v1, (uint64_t *)va);
}

uint64_t sub_1D43AFB70(float a1)
{
  float *v1;

  *v1 = a1;
  return swift_bridgeObjectRetain();
}

BOOL sub_1D43AFB80(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1D43AFB90()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = 0;
  *(_QWORD *)(v1 - 88) = v0;
  return sub_1D451B400();
}

uint64_t sub_1D43AFBA0()
{
  uint64_t v0;

  return sub_1D43AF13C(v0);
}

uint64_t sub_1D43AFBB0()
{
  return type metadata accessor for SNAOPReport(0);
}

uint64_t sub_1D43AFBBC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_1D43AFBC8()
{
  return swift_release();
}

uint64_t sub_1D43AFBE8()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1D43AFBF4()
{
  return sub_1D451A374();
}

void sub_1D43AFC14()
{
  uint64_t v0;

}

unint64_t sub_1D43AFC1C(unint64_t result, char a2, uint64_t a3)
{
  unint64_t v3;

  v3 = result;
  if ((a2 & 1) != 0)
    goto LABEL_5;
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(a3 + 16) > result)
  {
    v3 = *(_QWORD *)(a3 + 8 * result + 32);
LABEL_5:
    swift_bridgeObjectRelease();
    return v3;
  }
  __break(1u);
  return result;
}

char *sub_1D43AFC80(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char *v13;
  id v14[2];

  v14[1] = *(id *)MEMORY[0x1E0C80C00];
  sub_1D42F4138(a1, *(_QWORD *)&v2[OBJC_IVAR____SNSoundPrintFeatureEmbeddingCustomModel_outerToInnerInputFeatureNameMappings]);
  if (!v3)
  {
    v7 = v5;
    v8 = *(void **)&v2[OBJC_IVAR____SNSoundPrintFeatureEmbeddingCustomModel_model];
    v14[0] = 0;
    v9 = objc_msgSend(v8, sel_predictionFromFeatures_options_error_, v7, a2, v14);
    if (v9)
    {
      v10 = (uint64_t)v9;
      v11 = *(_QWORD *)&v2[OBJC_IVAR____SNSoundPrintFeatureEmbeddingCustomModel_outerToInnerOutputFeatureNameMappings];
      v12 = v14[0];
      sub_1D42F4230(v10, v11);
      v2 = v13;
      swift_unknownObjectRelease();
    }
    else
    {
      v2 = (char *)v14[0];
      sub_1D4519AA4();

      swift_willThrow();
    }
    swift_unknownObjectRelease();
  }
  return v2;
}

void sub_1D43AFDAC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1D43AFDE4()
{
  return sub_1D43A17BC(type metadata accessor for SNSoundPrintFeatureEmbeddingCustomModel);
}

uint64_t type metadata accessor for SNSoundPrintFeatureEmbeddingCustomModel()
{
  return objc_opt_self();
}

void sub_1D43AFE64(void *a1)
{
  char *v1;
  uint64_t v2;
  id v4;
  void *v5;
  void *v6;

  swift_getObjectType();
  sub_1D42CB8F4();
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E958]), sel_init);
  sub_1D439C424(35, v4);
  if (v2)
  {

    swift_deallocPartialClassInstance();
  }
  else
  {
    v6 = v5;

    swift_getObjectType();
    sub_1D43B1A4C(v6, a1, v1);
  }
}

char *sub_1D43AFF30(uint64_t a1, uint64_t a2)
{
  return sub_1D43AFC80(a1, a2);
}

uint64_t type metadata accessor for SNSoundPrintKFeatureEmbeddingCustomModel()
{
  return objc_opt_self();
}

uint64_t sub_1D43AFF70(uint64_t result)
{
  void *v1;
  unint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  _WORD *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v2 = *(_QWORD *)(result + 16);
  if (v2 >= 2 && *(_QWORD *)(result + 8 * v2 + 16) != 1)
  {
    if (qword_1EFE40338 != -1)
      swift_once();
    v3 = sub_1D430710C();
    sub_1D4307218(v3, (uint64_t)qword_1EFEA7700);
    v4 = sub_1D43073E8();
    if (sub_1D4306FDC(v4))
    {
      v5 = (_WORD *)sub_1D43074C8();
      sub_1D4307498(v5);
      sub_1D4306FFC(&dword_1D42A7000, v6, v7, "Only single-channel audio is supported.");
      sub_1D43B1B80();
    }

    sub_1D451A6EC();
    sub_1D43B1BF8();
    v8 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
    sub_1D43B1B64();
    return sub_1D4312028();
  }
  return result;
}

uint64_t sub_1D43B0048(uint64_t result)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  if ((unint64_t)(result - 1) > 1)
  {
    sub_1D42DCEE8();
    v1 = sub_1D43B1C04();
    sub_1D43EC59C(v1, v2, 4, 0, v3, v4);
    return sub_1D4312028();
  }
  return result;
}

uint64_t sub_1D43B00B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  uint64_t result;
  char v7;
  unint64_t v8;
  char v9;

  v5 = *(_QWORD *)(a1 + 16);
  result = sub_1D43B0048(v5);
  if (!v2)
  {
    v7 = v5 < 2;
    if (v5 >= 2)
      v8 = v5 - 2;
    else
      v8 = 0;
    swift_bridgeObjectRetain();
    result = sub_1D43AFC1C(v8, v7, a1);
    if ((v9 & 1) != 0)
    {
      if (a2 == 1)
        return result;
    }
    else if (result == a2)
    {
      return result;
    }
    sub_1D42DCEE8();
    sub_1D451B400();
    swift_bridgeObjectRelease();
    sub_1D451B7C0();
    sub_1D451A794();
    swift_bridgeObjectRelease();
    sub_1D451A794();
    sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 2, 0, 0xD00000000000001BLL, 0x80000001D4554DB0);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  return result;
}

void sub_1D43B0210(void *a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  os_log_type_t v27;
  _WORD *v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  os_log_type_t v33;
  _WORD *v34;
  uint64_t v35;
  os_log_type_t v36;
  _WORD *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  unint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  id v58;
  id v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t i;
  id v63;
  void *v64;
  id v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  os_log_type_t v69;
  _WORD *v70;
  uint64_t v71;
  uint64_t v72;
  const char *v73;
  uint64_t v74;
  os_log_type_t v75;
  _WORD *v76;
  uint64_t v77;
  os_log_type_t v78;
  _WORD *v79;
  uint64_t v80;
  os_log_type_t v81;
  _WORD *v82;
  id v83;
  void *v84;
  uint64_t v85;
  os_log_type_t v86;
  _WORD *v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  id v92;
  id v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v3 = objc_msgSend(a1, sel_inputDescriptionsByName);
  sub_1D42EA3E0((uint64_t)v3, (unint64_t *)&qword_1EFE40360);
  v4 = MEMORY[0x1E0DEA968];
  v5 = sub_1D43B1BB0();

  v6 = *(void **)(v5 + 16);
  sub_1D42D3258();
  v7 = objc_msgSend(a2, sel_inputDescriptionsByName);
  sub_1D43B1BB0();
  sub_1D43B1B90();
  v8 = *(void **)(v4 + 16);
  v9 = sub_1D42B7204();
  if (v6 != v8)
  {
    if (qword_1EFE40338 != -1)
      swift_once();
    v26 = sub_1D430710C();
    sub_1D4307218(v26, (uint64_t)qword_1EFEA7700);
    v27 = sub_1D43073E8();
    if (sub_1D4306FDC(v27))
    {
      v28 = (_WORD *)sub_1D43074C8();
      sub_1D4307498(v28);
      v31 = "Input feature count doesn't match";
      goto LABEL_28;
    }
    goto LABEL_29;
  }
  v10 = sub_1D43B1B98(v9, sel_inputDescriptionsByName);
  sub_1D43B1BA8();
  sub_1D43B1B90();
  v8 = *(void **)(v4 + 16);
  v11 = sub_1D42B7204();
  if (v8 != (void *)1)
  {
    if (qword_1EFE40338 != -1)
      swift_once();
    v32 = sub_1D430710C();
    sub_1D4307218(v32, (uint64_t)qword_1EFEA7700);
    v33 = sub_1D43073E8();
    if (sub_1D4306FDC(v33))
    {
      v34 = (_WORD *)sub_1D43074C8();
      sub_1D4307498(v34);
      v31 = "Input feature description has > 1 input feature";
      goto LABEL_28;
    }
LABEL_29:

    sub_1D451A6EC();
    sub_1D43B1BF8();
    v38 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
    sub_1D43B1B64();
    sub_1D4312028();
    return;
  }
  v12 = sub_1D43B1B98(v11, sel_inputDescriptionsByName);
  sub_1D43B1BA8();
  sub_1D43B1B90();
  v8 = (void *)sub_1D4396600(v4);
  v13 = sub_1D42B7204();
  if (!v8
    || (v14 = sub_1D43B1BA0(v13, sel_multiArrayConstraint), v8, !v14))
  {
    if (qword_1EFE40338 != -1)
      swift_once();
    v35 = sub_1D430710C();
    sub_1D4307218(v35, (uint64_t)qword_1EFEA7700);
    v36 = sub_1D43073E8();
    if (sub_1D4306FDC(v36))
    {
      v37 = (_WORD *)sub_1D43074C8();
      sub_1D4307498(v37);
      v31 = "Input feature isn't an MLMultiArray";
LABEL_28:
      sub_1D4306FFC(&dword_1D42A7000, v29, v30, v31);
      sub_1D43B1B80();
    }
    goto LABEL_29;
  }
  v92 = a2;
  v16 = (uint64_t)sub_1D43B1BD0(v15, sel_shape);
  v17 = sub_1D42EA3E0(v16, (unint64_t *)&qword_1EFE404B0);
  v18 = sub_1D451A92C();

  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    v19 = sub_1D42EA3D8();
    sub_1D435EB80();
  }
  else
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v20 = MEMORY[0x1E0DEE9D8];
  v91 = v17;
  if (v19)
  {
    v97 = MEMORY[0x1E0DEE9D8];
    sub_1D43B1BE0();
    if (v19 < 0)
    {
      __break(1u);
      goto LABEL_90;
    }
    v16 = 0;
    v20 = v97;
    do
    {
      if ((v18 & 0xC000000000000001) != 0)
        sub_1D43B1C20();
      v21 = sub_1D42CB2A4(v18 + 8 * v16);
      v22 = objc_msgSend(v21, sel_integerValue);

      v24 = *(_QWORD *)(v97 + 16);
      v23 = *(_QWORD *)(v97 + 24);
      v25 = v24 + 1;
      if (v24 >= v23 >> 1)
      {
        sub_1D43B1BE8(v23);
        sub_1D43B1BD8();
      }
      ++v16;
      *(_QWORD *)(v97 + 16) = v25;
      *(_QWORD *)(v97 + 8 * v24 + 32) = v22;
    }
    while (v19 != v16);
  }
  else
  {
    v25 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  }
  sub_1D4473408(v25);
  if (v95)
  {
    sub_1D435EB80();
    sub_1D42B7204();
LABEL_34:

    return;
  }
  sub_1D43AFF70(v20);
  sub_1D42B7204();
  v94 = v14;
  if (!v19)
  {
    sub_1D435EB80();
    v40 = MEMORY[0x1E0DEE9D8];
    goto LABEL_45;
  }
  v98 = MEMORY[0x1E0DEE9D8];
  sub_1D43B1BE0();
  if (v19 < 0)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    swift_once();
LABEL_64:
    v68 = sub_1D430710C();
    sub_1D4307218(v68, (uint64_t)qword_1EFEA7700);
    v69 = sub_1D43073E8();
    if (sub_1D4306FDC(v69))
    {
      v70 = (_WORD *)sub_1D43074C8();
      sub_1D4307498(v70);
      v73 = "Input feature must contain floating point data";
      goto LABEL_78;
    }
LABEL_79:

    sub_1D451A6EC();
    sub_1D43B1BF8();
    v83 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
    sub_1D43B1B64();
    sub_1D4312028();
    goto LABEL_34;
  }
  v39 = 0;
  v40 = v98;
  do
  {
    if ((v18 & 0xC000000000000001) != 0)
      sub_1D43B1C20();
    v41 = sub_1D42CB2A4(v18 + 8 * v39);
    v42 = objc_msgSend(v41, sel_integerValue);

    v44 = *(_QWORD *)(v98 + 16);
    v43 = *(_QWORD *)(v98 + 24);
    if (v44 >= v43 >> 1)
    {
      sub_1D43B1BE8(v43);
      sub_1D43B1BD8();
    }
    ++v39;
    *(_QWORD *)(v98 + 16) = v44 + 1;
    *(_QWORD *)(v98 + 8 * v44 + 32) = v42;
  }
  while (v19 != v39);
  sub_1D435EB80();
LABEL_45:
  v16 = sub_1D447348C(v40);
  v46 = v45;
  v47 = sub_1D42B7204();
  if ((v46 & 1) != 0)
    v16 = 1;
  v14 = v94;
  if (sub_1D43B1BD0(v47, sel_dataType) != (id)65568)
  {
    if (qword_1EFE40338 == -1)
      goto LABEL_64;
    goto LABEL_91;
  }
  v96 = v16;
  v48 = sub_1D43B1B98(65568, sel_outputDescriptionsByName);
  v49 = MEMORY[0x1E0DEA968];
  v50 = sub_1D43B1BC0();

  v51 = *(_QWORD *)(v50 + 16);
  swift_bridgeObjectRelease();
  v52 = objc_msgSend(v92, sel_outputDescriptionsByName);
  sub_1D43B1BC0();
  sub_1D43B1B90();
  v16 = *(_QWORD *)(v49 + 16);
  v53 = sub_1D42B7204();
  if (v51 != v16)
  {
    if (qword_1EFE40338 != -1)
      swift_once();
    v74 = sub_1D430710C();
    sub_1D4307218(v74, (uint64_t)qword_1EFEA7700);
    v75 = sub_1D43073E8();
    v14 = v94;
    if (sub_1D4306FDC(v75))
    {
      v76 = (_WORD *)sub_1D43074C8();
      sub_1D4307498(v76);
      v73 = "Output feature count doesn't match";
      goto LABEL_78;
    }
    goto LABEL_79;
  }
  v54 = sub_1D43B1B98(v53, sel_outputDescriptionsByName);
  sub_1D43B1BA8();
  sub_1D43B1B90();
  v16 = *(_QWORD *)(v49 + 16);
  v55 = sub_1D42B7204();
  if (v16 != 1)
  {
    v14 = v94;
    if (qword_1EFE40338 != -1)
      swift_once();
    v77 = sub_1D430710C();
    sub_1D4307218(v77, (uint64_t)qword_1EFEA7700);
    v78 = sub_1D43073E8();
    if (sub_1D4306FDC(v78))
    {
      v79 = (_WORD *)sub_1D43074C8();
      sub_1D4307498(v79);
      v73 = "Output feature description has > 1 feature";
      goto LABEL_78;
    }
    goto LABEL_79;
  }
  v56 = sub_1D43B1B98(v55, sel_outputDescriptionsByName);
  sub_1D43B1BA8();
  sub_1D43B1B90();
  v16 = sub_1D4396600(v49);
  v57 = sub_1D42B7204();
  v14 = v94;
  if (!v16
    || (v58 = sub_1D43B1BA0(v57, sel_multiArrayConstraint),
        (id)v16,
        !v58))
  {
    if (qword_1EFE40338 != -1)
      swift_once();
    v80 = sub_1D430710C();
    sub_1D4307218(v80, (uint64_t)qword_1EFEA7700);
    v81 = sub_1D43073E8();
    if (sub_1D4306FDC(v81))
    {
      v82 = (_WORD *)sub_1D43074C8();
      sub_1D4307498(v82);
      v73 = "No multi array constraint for output feature";
LABEL_78:
      sub_1D4306FFC(&dword_1D42A7000, v71, v72, v73);
      sub_1D43B1B80();
    }
    goto LABEL_79;
  }
  v59 = objc_msgSend(v58, sel_shape);
  v60 = sub_1D451A92C();

  if (v60 >> 62)
  {
    swift_bridgeObjectRetain();
    v61 = sub_1D42EA3D8();
    sub_1D42CB8F4();
  }
  else
  {
    v61 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v61 < 1)
  {
    sub_1D42CB8F4();
    v84 = v94;
  }
  else
  {
    v93 = v58;
    v99 = MEMORY[0x1E0DEE9D8];
    sub_1D43B1BE0();
    for (i = 0; i != v61; ++i)
    {
      if ((v60 & 0xC000000000000001) != 0)
        v63 = (id)MEMORY[0x1D825CD78](i, v60);
      else
        v63 = sub_1D42CB2A4(v60 + 8 * i);
      v64 = v63;
      v65 = objc_msgSend(v63, sel_integerValue, v91);

      v67 = *(_QWORD *)(v99 + 16);
      v66 = *(_QWORD *)(v99 + 24);
      if (v67 >= v66 >> 1)
      {
        sub_1D43B1BE8(v66);
        sub_1D43B1BD8();
      }
      *(_QWORD *)(v99 + 16) = v67 + 1;
      *(_QWORD *)(v99 + 8 * v67 + 32) = v65;
    }
    sub_1D42CB8F4();
    sub_1D43B00B8(v99, v96);
    sub_1D42B7204();
    v58 = v93;
    v84 = v94;
  }
  if (objc_msgSend(v58, sel_dataType, v91) != (id)65568)
  {
    if (qword_1EFE40338 != -1)
      swift_once();
    v85 = sub_1D430710C();
    sub_1D4307218(v85, (uint64_t)qword_1EFEA7700);
    v86 = sub_1D43073E8();
    if (sub_1D4306FDC(v86))
    {
      v87 = (_WORD *)sub_1D43074C8();
      sub_1D4307498(v87);
      sub_1D4306FFC(&dword_1D42A7000, v88, v89, "Output feature must contain floating point data");
      sub_1D43B1B80();
    }

    sub_1D451A6EC();
    sub_1D43B1BF8();
    v90 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
    sub_1D43B1B64();
    sub_1D4312028();
  }

}

void sub_1D43B0C40(void *a1)
{
  void *v1;
  uint64_t v2;
  id v4;
  char *v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  id v39;
  void *v40;
  id v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  char *v50;
  uint64_t v51;

  swift_bridgeObjectRelease();
  v4 = objc_allocWithZone(MEMORY[0x1E0C9E958]);
  v5 = v1;
  v6 = sub_1D43B1BD0((uint64_t)v5, sel_init);
  sub_1D439CBCC(0x22u, v6);
  if (v2)
  {

    v8 = a1;
    a1 = v5;
LABEL_4:

    type metadata accessor for SNSoundPrintAFeatureEmbeddingCustomModel();
    swift_deallocPartialClassInstance();
    return;
  }
  v8 = v7;

  v9 = type metadata accessor for SNSoundPrintAFeatureEmbeddingCustomModel();
  v10 = sub_1D43B1BD0(v9, sel_modelDescription);
  sub_1D43B0210(a1, v10);
  v50 = v5;

  v12 = sub_1D43B1BA0(v11, sel_outputDescriptionsByName);
  sub_1D42EA3E0((uint64_t)v12, (unint64_t *)&qword_1EFE40360);
  v13 = sub_1D43B1C18();

  v14 = sub_1D439660C(v13);
  v16 = v15;
  v17 = sub_1D435EB80();
  if (!v16)
  {
LABEL_22:

    sub_1D42DCEE8();
    v43 = sub_1D43B1C04();
    sub_1D43EC59C(v43, v44, 1, 0, v45, v46);
    sub_1D4312028();
    goto LABEL_4;
  }
  v18 = sub_1D43B1BA0(v17, sel_inputDescriptionsByName);
  v19 = sub_1D43B1C18();

  v20 = sub_1D439660C(v19);
  v22 = v21;
  swift_bridgeObjectRelease();
  if (!v22)
  {
    sub_1D42D3258();
    goto LABEL_22;
  }
  v23 = (uint64_t *)&v50[OBJC_IVAR____SNSoundPrintAFeatureEmbeddingCustomModel_inputFeatureName];
  *v23 = v20;
  v23[1] = v22;
  v24 = (uint64_t *)&v50[OBJC_IVAR____SNSoundPrintAFeatureEmbeddingCustomModel_outputFeatureName];
  *v24 = v14;
  v24[1] = v16;
  v25 = swift_bridgeObjectRetain();
  v26 = sub_1D43B1BA0(v25, sel_outputDescriptionsByName);
  v27 = sub_1D43B1C18();

  sub_1D4364898(v14, v16, v27);
  v29 = v28;
  sub_1D42D3258();
  sub_1D435EB80();
  if (!v29)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v30 = objc_msgSend(v29, sel_multiArrayConstraint);

  if (v30)
  {
    v31 = objc_msgSend(v30, sel_shape);

    sub_1D42EA3E0(v32, (unint64_t *)&qword_1EFE404B0);
    v33 = sub_1D451A92C();

    if (v33 >> 62)
    {
      swift_bridgeObjectRetain();
      v34 = sub_1D42EA3D8();
      sub_1D42CB208();
    }
    else
    {
      v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v49 = v8;
    if (!v34)
    {
      sub_1D42CB208();
      v36 = MEMORY[0x1E0DEE9D8];
LABEL_24:
      *(_QWORD *)&v50[OBJC_IVAR____SNSoundPrintAFeatureEmbeddingCustomModel_outputShape] = v36;

      sub_1D43B1938(v49, a1, v50);
      return;
    }
    v47 = 0;
    v48 = a1;
    v51 = MEMORY[0x1E0DEE9D8];
    sub_1D43B1BE0();
    if ((v34 & 0x8000000000000000) == 0)
    {
      v35 = 0;
      v36 = v51;
      v37 = v33 & 0xC000000000000001;
      v38 = v33;
      do
      {
        if (v37)
          v39 = (id)MEMORY[0x1D825CD78](v35, v33);
        else
          v39 = sub_1D42CB2A4(v33 + 8 * v35);
        v40 = v39;
        v41 = objc_msgSend(v39, sel_integerValue, v47, v48, v49);

        v42 = *(_QWORD *)(v51 + 16);
        if (v42 >= *(_QWORD *)(v51 + 24) >> 1)
          sub_1D43B1BD8();
        ++v35;
        *(_QWORD *)(v51 + 16) = v42 + 1;
        *(_QWORD *)(v51 + 8 * v42 + 32) = v41;
        v33 = v38;
      }
      while (v34 != v35);
      sub_1D42CB208();
      a1 = v48;
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_27;
  }
LABEL_28:
  __break(1u);
}

uint64_t sub_1D43B108C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void *, uint64_t))
{
  uint64_t v8;

  v8 = sub_1D451A5CC();
  return a6(a3, v8);
}

void sub_1D43B1140(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  uint64_t v7;

  v3 = v2;
  v6 = (void *)MEMORY[0x1D825DB34]();
  sub_1D43B11B8(a1, v3, a2, &v7);
  objc_autoreleasePoolPop(v6);
}

void sub_1D43B11B8(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t inited;
  id v22;
  id v23;
  id v24;
  char *v25;
  void *v26;
  id v27;
  _QWORD *v28;
  id v29;
  uint64_t v30;
  void *v31;
  unint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  _QWORD *v49;
  void *v50;
  void *v51;

  v10 = *(_QWORD *)(a2 + OBJC_IVAR____SNSoundPrintAFeatureEmbeddingCustomModel_inputFeatureName);
  v9 = *(_QWORD *)(a2 + OBJC_IVAR____SNSoundPrintAFeatureEmbeddingCustomModel_inputFeatureName + 8);
  v11 = (void *)sub_1D451A6C8();
  v12 = objc_msgSend(a1, sel_featureValueForName_, v11);

  if (!v12
    || (v13 = objc_msgSend(v12, sel_multiArrayValue), v12, !v13))
  {
    v16 = sub_1D451A6EC();
    v18 = v17;
    v19 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
    sub_1D44C8708(v16, v18, 1, 0);
    swift_willThrow();
    return;
  }
  v14 = sub_1D4434A1C(v13);
  sub_1D44367E0(v14, 3);
  if (v4)
  {

    return;
  }
  v49 = a4;
  v50 = v14;
  v51 = v15;
  v20 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, v15);
  sub_1D42B28FC((uint64_t *)&unk_1EFE498B0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D45261D0;
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 40) = v9;
  *(_QWORD *)(inited + 72) = sub_1D42E9D88(0, (unint64_t *)&qword_1EFE4D470);
  *(_QWORD *)(inited + 48) = v20;
  swift_bridgeObjectRetain();
  v22 = v20;
  sub_1D451A5E4();
  v23 = objc_allocWithZone(MEMORY[0x1E0C9E8F8]);
  v24 = sub_1D4392954();
  v25 = sub_1D43AFC80((uint64_t)v24, a3);

  v45 = *(_QWORD *)(a2 + OBJC_IVAR____SNSoundPrintAFeatureEmbeddingCustomModel_outputFeatureName);
  v46 = *(_QWORD *)(a2 + OBJC_IVAR____SNSoundPrintAFeatureEmbeddingCustomModel_outputFeatureName + 8);
  v26 = (void *)sub_1D451A6C8();
  v27 = objc_msgSend(v25, sel_featureValueForName_, v26);

  if (v27)
  {
    v28 = (_QWORD *)swift_allocObject();
    v29 = objc_msgSend(v27, sel_multiArrayValue);

    v28[2] = v29;
    if (!v29)
    {
      v37 = sub_1D451A6EC();
      v39 = v38;
      v40 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
      sub_1D44C8708(v37, v39, 0, 0);
      swift_willThrow();

      swift_unknownObjectRelease();
      swift_release();
      return;
    }
    v47 = v24;
    v48 = v22;
    v30 = *(_QWORD *)(a2 + OBJC_IVAR____SNSoundPrintAFeatureEmbeddingCustomModel_outputShape);
    v31 = (void *)sub_1D451A908();
    v32 = sub_1D443472C(v31);

    v33 = (void *)v28[2];
    if (v33)
    {
      v34 = objc_msgSend(objc_retainAutorelease(v33), sel_dataPointer);
      v35 = sub_1D448D5F0(v30);
      objc_allocWithZone(MEMORY[0x1E0C9E970]);
      swift_retain();
      v36 = sub_1D44372DC((uint64_t)v34, v35, 65568, v32, sub_1D43B1930, v28);
      v41 = swift_initStackObject();
      *(_OWORD *)(v41 + 16) = xmmword_1D45261D0;
      *(_QWORD *)(v41 + 32) = v45;
      *(_QWORD *)(v41 + 40) = v46;
      *(_QWORD *)(v41 + 72) = sub_1D42E9D88(0, (unint64_t *)&unk_1EFE49790);
      *(_QWORD *)(v41 + 48) = v36;
      swift_bridgeObjectRetain();
      v42 = v36;
      sub_1D451A5E4();
      v43 = objc_allocWithZone(MEMORY[0x1E0C9E8F8]);
      v44 = sub_1D4392954();
      swift_release();
      swift_unknownObjectRelease();

      *v49 = v44;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1D43B174C(uint64_t a1, uint64_t a2)
{
  void *v3;

  swift_beginAccess();
  v3 = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = 0;

}

id sub_1D43B179C(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t (*a6)(uint64_t, id))
{
  id v10;
  id v11;
  void *v12;

  swift_unknownObjectRetain();
  v10 = a4;
  v11 = a1;
  v12 = (void *)a6(a3, v10);

  swift_unknownObjectRelease();
  return v12;
}

uint64_t sub_1D43B1860()
{
  sub_1D43A18E4();
  sub_1D43A18E4();
  return swift_bridgeObjectRelease();
}

id sub_1D43B189C()
{
  return sub_1D43A17BC(type metadata accessor for SNSoundPrintAFeatureEmbeddingCustomModel);
}

uint64_t type metadata accessor for SNSoundPrintAFeatureEmbeddingCustomModel()
{
  return objc_opt_self();
}

uint64_t sub_1D43B190C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1D43B1930(uint64_t a1)
{
  uint64_t v1;

  sub_1D43B174C(a1, v1);
}

void sub_1D43B1938(void *a1, void *a2, char *a3)
{
  char *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  objc_super v12;

  *(_QWORD *)&a3[OBJC_IVAR____SNSoundPrintFeatureEmbeddingCustomModel_modelDescription] = a2;
  *(_QWORD *)&a3[OBJC_IVAR____SNSoundPrintFeatureEmbeddingCustomModel_model] = a1;
  v5 = a3;
  v6 = a2;
  v7 = a1;
  v8 = objc_msgSend(v7, sel_modelDescription);
  v9 = sub_1D42F3FD0(v6, v8);

  if (v9)
  {
    *(_QWORD *)&v5[OBJC_IVAR____SNSoundPrintFeatureEmbeddingCustomModel_outerToInnerInputFeatureNameMappings] = v9;
    v10 = objc_msgSend(v7, sel_modelDescription);
    v11 = sub_1D42F3FDC(v6, v10);

    if (v11)
    {
      *(_QWORD *)&v5[OBJC_IVAR____SNSoundPrintFeatureEmbeddingCustomModel_outerToInnerOutputFeatureNameMappings] = v11;

      v12.receiver = v5;
      v12.super_class = (Class)type metadata accessor for SNSoundPrintFeatureEmbeddingCustomModel();
      objc_msgSendSuper2(&v12, sel_init);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1D43B1A4C(void *a1, void *a2, char *a3)
{
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  objc_super v11;

  *(_QWORD *)&a3[OBJC_IVAR____SNSoundPrintFeatureEmbeddingCustomModel_modelDescription] = a2;
  *(_QWORD *)&a3[OBJC_IVAR____SNSoundPrintFeatureEmbeddingCustomModel_model] = a1;
  v5 = a3;
  v6 = a2;
  v7 = objc_msgSend((id)swift_unknownObjectRetain(), sel_modelDescription);
  v8 = sub_1D42F3FD0(v6, v7);

  if (v8)
  {
    *(_QWORD *)&v5[OBJC_IVAR____SNSoundPrintFeatureEmbeddingCustomModel_outerToInnerInputFeatureNameMappings] = v8;
    v9 = objc_msgSend(a1, sel_modelDescription);
    v10 = sub_1D42F3FDC(v6, v9);

    if (v10)
    {
      *(_QWORD *)&v5[OBJC_IVAR____SNSoundPrintFeatureEmbeddingCustomModel_outerToInnerOutputFeatureNameMappings] = v10;

      v11.receiver = v5;
      v11.super_class = (Class)type metadata accessor for SNSoundPrintFeatureEmbeddingCustomModel();
      objc_msgSendSuper2(&v11, sel_init);
      swift_unknownObjectRelease();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1D43B1B64()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1D44C8708(v0, v1, 0, 0);
}

void sub_1D43B1B80()
{
  JUMPOUT(0x1D825E524);
}

void sub_1D43B1B90()
{
  void *v0;

}

id sub_1D43B1B98(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

id sub_1D43B1BA0(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_1D43B1BA8()
{
  return sub_1D451A5CC();
}

uint64_t sub_1D43B1BB0()
{
  return sub_1D451A5CC();
}

uint64_t sub_1D43B1BC0()
{
  return sub_1D451A5CC();
}

id sub_1D43B1BD0(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

void sub_1D43B1BD8()
{
  sub_1D42C73B0();
}

void sub_1D43B1BE0()
{
  sub_1D42C73B0();
}

BOOL sub_1D43B1BE8@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

unint64_t sub_1D43B1C04()
{
  return 0xD000000000000017;
}

uint64_t sub_1D43B1C18()
{
  return sub_1D451A5CC();
}

void sub_1D43B1C20()
{
  JUMPOUT(0x1D825CD78);
}

id static SystemUtils.queryXCapability()()
{
  id result;
  void *v1;
  uint64_t exclaveCapability;

  result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    v1 = result;
    exclaveCapability = MobileGestalt_get_exclaveCapability();

    return (id)exclaveCapability;
  }
  else
  {
    __break(1u);
  }
  return result;
}

ValueMetadata *type metadata accessor for SystemUtils()
{
  return &type metadata for SystemUtils;
}

uint64_t sub_1D43B1C7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1D42F9A58;
  return v8(a1, a2);
}

uint64_t sub_1D43B1CEC(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_1D43B1D18()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0
                              + OBJC_IVAR____TtC13SoundAnalysis29TrampolineXPCListenerDelegate_listenerShouldAcceptNewConnectionFn))() & 1;
}

void sub_1D43B1DA8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for TrampolineXPCListenerDelegate()
{
  return objc_opt_self();
}

void *sub_1D43B1E14(void *a1, uint64_t a2, uint64_t a3)
{
  objc_class *v6;
  char *v7;
  char *v8;
  id v9;
  id v10;
  objc_super v12;

  v6 = (objc_class *)type metadata accessor for TrampolineXPCListenerDelegate();
  v7 = (char *)objc_allocWithZone(v6);
  v8 = &v7[OBJC_IVAR____TtC13SoundAnalysis29TrampolineXPCListenerDelegate_listenerShouldAcceptNewConnectionFn];
  *(_QWORD *)v8 = a2;
  *((_QWORD *)v8 + 1) = a3;
  v12.receiver = v7;
  v12.super_class = v6;
  sub_1D42E3CA4();
  v9 = objc_msgSendSuper2(&v12, sel_init);
  objc_msgSend(a1, sel_setDelegate_, v9, v12.receiver, v12.super_class);
  objc_msgSend(a1, sel_resume);
  v10 = a1;
  return a1;
}

uint64_t sub_1D43B1EB4(uint64_t a1, void *a2, uint64_t (*a3)(_QWORD *, void *, uint64_t))
{
  return sub_1D43B1EC4(a2, a3);
}

uint64_t sub_1D43B1EC4(void *a1, uint64_t (*a2)(_QWORD *, void *, uint64_t))
{
  id v4;
  char v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  _QWORD v17[5];

  v17[3] = sub_1D43B3754();
  v17[4] = &off_1E97ADDF8;
  v17[0] = a1;
  v4 = a1;
  v5 = sub_1D444BFE4(v17, 0xD00000000000002BLL, 0x80000001D4554F90);
  if (v5 == 2)
  {
    sub_1D42B5400((uint64_t)v17);
  }
  else
  {
    sub_1D42B5400((uint64_t)v17);
    if ((v5 & 1) != 0)
    {
      sub_1D43B2254(v4, a2);
      v10 = 1;
      goto LABEL_8;
    }
  }
  if (qword_1EFE40338 != -1)
    swift_once();
  v6 = sub_1D430710C();
  sub_1D42CC880(v6, (uint64_t)qword_1EFEA7700);
  v7 = sub_1D4519FFC();
  v8 = sub_1D451AF5C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)sub_1D42CC940();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1D42A7000, v7, v8, "Client rejected due to insufficient entitlements.", v9, 2u);
    sub_1D42CC934();
  }

  v10 = 0;
LABEL_8:
  objc_msgSend(v4, sel_resume);
  v11 = objc_msgSend(v4, sel_processIdentifier);
  if (qword_1EFE40338 != -1)
    swift_once();
  v12 = sub_1D430710C();
  sub_1D42CC880(v12, (uint64_t)qword_1EFEA7700);
  v13 = sub_1D4519FFC();
  v14 = sub_1D451AF74();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = sub_1D42CC940();
    *(_DWORD *)v15 = 67109376;
    LODWORD(v17[0]) = v11;
    sub_1D43B3BC8();
    *(_WORD *)(v15 + 8) = 1024;
    LODWORD(v17[0]) = v10;
    sub_1D43B3BC8();
    _os_log_impl(&dword_1D42A7000, v13, v14, "  Client with PID %d attempted to connect.   Accepted? %{BOOL}d", (uint8_t *)v15, 0xEu);
    sub_1D42CC934();
  }

  return v10;
}

void sub_1D43B2254(void *a1, uint64_t (*a2)(_QWORD *, void *, uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  objc_class *v23;
  char *v24;
  uint64_t *v25;
  id v26;
  objc_super v27;
  _QWORD aBlock[3];
  void *v29;
  void (*v30)();
  uint64_t v31;
  uint64_t v32;

  sub_1D42B28FC(&qword_1EFE4F200);
  sub_1D42B6F40();
  v5 = sub_1D4319684();
  v6 = objc_msgSend(a1, sel_processIdentifier);
  v7 = sub_1D42B6F40();
  *(_DWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v5;
  v30 = sub_1D43B3924;
  v31 = v7;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D43B1CEC;
  v29 = &unk_1E97B3888;
  v8 = _Block_copy(aBlock);
  sub_1D42E3CA4();
  swift_release();
  objc_msgSend(a1, sel_setInvalidationHandler_, v8);
  _Block_release(v8);
  v9 = sub_1D42B6F40();
  *(_QWORD *)(v9 + 16) = v5;
  *(_DWORD *)(v9 + 24) = v6;
  v29 = (void *)sub_1D43B3754();
  v30 = (void (*)())&off_1E97ADDF8;
  aBlock[0] = a1;
  sub_1D42E3CA4();
  v10 = a1;
  v11 = a2(aBlock, &unk_1EFE4F248, v9);
  if (v2)
  {
    sub_1D42FC448();
    sub_1D42BE93C();
    sub_1D42B5400((uint64_t)aBlock);
  }
  else
  {
    v13 = v11;
    v14 = v12;
    sub_1D42B5400((uint64_t)aBlock);
    v15 = (_QWORD *)sub_1D42B6F40();
    v15[2] = v13;
    v15[3] = v14;
    v15[4] = &unk_1EFE4F248;
    v15[5] = v9;
    v16 = sub_1D42B6F40();
    *(_QWORD *)(v16 + 16) = &unk_1EFE4F258;
    *(_QWORD *)(v16 + 24) = v15;
    swift_retain();
    swift_retain();
    v17 = sub_1D42B7268((uint64_t)&unk_1EFE4F268, v16, (uint64_t)&unk_1EFE4F248, v9);
    v19 = v18;
    v21 = v20;
    v32 = v22;
    swift_release();
    if (qword_1EFE48E50 != -1)
      swift_once();
    objc_msgSend(v10, sel_setExportedInterface_, qword_1EFEA7768);
    v23 = (objc_class *)type metadata accessor for XPCProxyXPCHost();
    v24 = (char *)objc_allocWithZone(v23);
    v25 = (uint64_t *)&v24[OBJC_IVAR____TtC13SoundAnalysis15XPCProxyXPCHost_hosted];
    *v25 = v17;
    v25[1] = v32;
    v25[2] = v19;
    v25[3] = v21;
    v27.receiver = v24;
    v27.super_class = v23;
    swift_retain();
    swift_retain();
    v26 = objc_msgSendSuper2(&v27, sel_init);
    objc_msgSend(v10, sel_setExportedObject_, v26, v27.receiver, v27.super_class);
    sub_1D42BE93C();
    sub_1D42FC448();
    sub_1D42BE998();
    swift_release();
    swift_release();

  }
}

uint64_t sub_1D43B2560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1D42F92EC;
  return sub_1D434B284(a1, a3);
}

void *sub_1D43B25C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11[2];

  sub_1D42E2D8C(a1, (uint64_t)v11);
  v5 = sub_1D42B6F40();
  sub_1D42E33E0(v11, v5 + 16);
  sub_1D42B28FC((uint64_t *)&unk_1EFE4F270);
  v6 = sub_1D42B6F40();
  v7 = (void *)objc_opt_self();
  swift_retain();
  swift_retain();
  *(_QWORD *)(v6 + 16) = objc_msgSend(v7, sel_mapTableWithKeyOptions_valueOptions_, 0x10000, 5);
  sub_1D42B28FC(&qword_1EFE4C720);
  sub_1D42B6F40();
  v8 = sub_1D4312B70(v6);
  v9 = sub_1D42B6F40();
  *(_QWORD *)(v9 + 16) = sub_1D43B3AB0;
  *(_QWORD *)(v9 + 24) = v5;
  *(_BYTE *)(v9 + 32) = 0;
  *(_QWORD *)(v9 + 40) = v8;
  *(_QWORD *)(v9 + 48) = a4;
  sub_1D42BE998();
  return &unk_1EFE4F288;
}

uint64_t sub_1D43B26E8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a3[3];
  v6 = a3[4];
  sub_1D42B5528(a3, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, a2, v5, v6);
}

void sub_1D43B2758()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  id v4;

  if (qword_1EFE40338 != -1)
    swift_once();
  v0 = sub_1D451A014();
  sub_1D42CC880(v0, (uint64_t)qword_1EFEA7700);
  v1 = sub_1D4519FFC();
  v2 = sub_1D451AF74();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v3 = 67109120;
    sub_1D451B1A8();
    _os_log_impl(&dword_1D42A7000, v1, v2, "Invalidation handler called for connection to PID %d", v3, 8u);
    MEMORY[0x1D825E524](v3, -1, -1);
  }

  type metadata accessor for SNError();
  v4 = sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0x697463656E6E6F63, 0xEF74736F6C206E6FLL);
  sub_1D43175B8(v4);

}

uint64_t sub_1D43B28D4(uint64_t a1, int a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (__cdecl *v5)();

  *(_DWORD *)(v2 + 44) = a2;
  v5 = (uint64_t (__cdecl *)())((char *)&dword_1EFE4B738 + dword_1EFE4B738);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_1D43B2934;
  return v5();
}

uint64_t sub_1D43B2934(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 32) = a1;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43B2984()
{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  if (*(_QWORD *)(v0 + 32))
  {
    sub_1D4311FD8();
    if (qword_1EFE40338 != -1)
      swift_once();
    v2 = sub_1D430710C();
    sub_1D42CC880(v2, (uint64_t)qword_1EFEA7700);
    sub_1D4311FD8();
    sub_1D4311FD8();
    v3 = sub_1D4519FFC();
    v4 = sub_1D451AF74();
    if (sub_1D43B3B88(v4))
    {
      v5 = *(_DWORD *)(v0 + 44);
      v6 = sub_1D42CC940();
      v7 = (_QWORD *)sub_1D42CC940();
      *(_DWORD *)v6 = 67109378;
      *(_DWORD *)(v0 + 40) = v5;
      sub_1D451B1A8();
      *(_WORD *)(v6 + 8) = 2112;
      sub_1D4311FD8();
      v8 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 16) = v8;
      sub_1D451B1A8();
      *v7 = v8;
      sub_1D4311F78();
      sub_1D4311F78();
      _os_log_impl(&dword_1D42A7000, v3, v1, "Connection state invalidated for client with PID %d; error: %@",
        (uint8_t *)v6,
        0x12u);
      sub_1D42B28FC((uint64_t *)&unk_1EFE50850);
      sub_1D43B3BB0();
      sub_1D42CC934();
    }
    sub_1D4311F78();
    sub_1D4311F78();
    sub_1D4311F78();

  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 32));
}

uint64_t sub_1D43B2B20(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v8;
  int *v10;

  v6[14] = a5;
  v6[15] = a6;
  v6[13] = a1;
  v10 = (int *)((char *)a3 + *a3);
  v8 = (_QWORD *)swift_task_alloc();
  v6[16] = v8;
  *v8 = v6;
  v8[1] = sub_1D43B2B98;
  return ((uint64_t (*)(_QWORD *, uint64_t))v10)(v6 + 8, a2);
}

uint64_t sub_1D43B2B98()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43B2BF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;

  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 96);
  sub_1D42B5528((_QWORD *)(v0 + 64), v4);
  sub_1D447DD10(v3, v2, v4, v5, (uint64_t *)(v0 + 16));
  if (!v1)
  {
    v6 = *(_OWORD **)(v0 + 104);
    v7 = *(_OWORD *)(v0 + 16);
    v8 = *(_OWORD *)(v0 + 48);
    v6[1] = *(_OWORD *)(v0 + 32);
    v6[2] = v8;
    *v6 = v7;
  }
  sub_1D42B5400(v0 + 64);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D43B2CA0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1D43B2CAC()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D42B6F40();
  *(_QWORD *)(v0 + 16) = 0xD000000000000018;
  *(_QWORD *)(v0 + 24) = 0x80000001D4553460;
  type metadata accessor for AnalysisClientUtils.RegenerativeConnection();
  v1 = swift_allocObject();
  sub_1D43B30E8();
  qword_1EFEA77E8 = v1;
}

id sub_1D43B2D20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id result;
  uint64_t v6;

  swift_bridgeObjectRetain();
  result = sub_1D43B2D64(a1, a2);
  if (v2)
    return (id)v6;
  return result;
}

id sub_1D43B2D64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  void *v13;
  void (*v14)();
  uint64_t v15;

  sub_1D42B28FC(&qword_1EFE4F200);
  swift_allocObject();
  swift_bridgeObjectRetain();
  v4 = sub_1D4319684();
  sub_1D43B3754();
  swift_bridgeObjectRetain();
  swift_retain();
  v5 = sub_1D43B2F4C(a1, a2, 4096);
  v14 = sub_1D43B374C;
  v15 = v4;
  v6 = MEMORY[0x1E0C809B0];
  v10 = MEMORY[0x1E0C809B0];
  v11 = 1107296256;
  v12 = sub_1D43B1CEC;
  v13 = &unk_1E97B3598;
  v7 = _Block_copy(&v10);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_setInterruptionHandler_, v7);
  _Block_release(v7);
  v14 = sub_1D43B374C;
  v15 = v4;
  v10 = v6;
  v11 = 1107296256;
  v12 = sub_1D43B1CEC;
  v13 = &unk_1E97BB270;
  v8 = _Block_copy(&v10);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_setInvalidationHandler_, v8);
  _Block_release(v8);
  objc_msgSend(v5, sel_resume);
  swift_release();
  if (qword_1EFE48E50 != -1)
    swift_once();
  objc_msgSend(v5, sel_setRemoteObjectInterface_, qword_1EFEA7768);
  swift_bridgeObjectRelease_n();
  return v5;
}

id sub_1D43B2F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4;
  void *v5;
  id v6;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v5 = (void *)sub_1D451A6C8();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithMachServiceName_options_, v5, a3);

  return v6;
}

void sub_1D43B2FC4()
{
  id v0;

  type metadata accessor for SNError();
  v0 = sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0x697463656E6E6F63, 0xEF74736F6C206E6FLL);
  sub_1D43175B8(v0);

}

uint64_t sub_1D43B3060()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_1EFE4B738 + dword_1EFE4B738);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1D43B30BC;
  return v3();
}

uint64_t sub_1D43B30BC(uint64_t a1)
{
  uint64_t v1;

  sub_1D42F9A68();
  return sub_1D438C464(a1, *(uint64_t (**)(void))(v1 + 8));
}

void sub_1D43B30E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  sub_1D4307354();
  swift_defaultActor_initialize();
  *(_OWORD *)(v1 + 128) = 0u;
  *(_OWORD *)(v1 + 144) = 0u;
  sub_1D42B8EC8();
  sub_1D43B3720(v3);
  sub_1D43B3BD4();
  *(_QWORD *)(v1 + 112) = v2;
  *(_QWORD *)(v1 + 120) = v0;
  sub_1D42CB15C();
}

void sub_1D43B312C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 128);
  if (v1)
    objc_msgSend(v1, sel_invalidate);
  if (*(_QWORD *)(v0 + 152))
  {
    sub_1D42E3CA4();
    sub_1D451AB3C();
    swift_release();
  }
  sub_1D43B3B74();
  sub_1D43B3BD4();
  swift_release();
  sub_1D43B3720(*(void **)(v0 + 128));
  swift_release();
  swift_defaultActor_destroy();
  sub_1D42CB15C();
}

uint64_t sub_1D43B31C0()
{
  sub_1D43B312C();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for AnalysisClientUtils.RegenerativeConnection()
{
  return objc_opt_self();
}

uint64_t sub_1D43B31F8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 128);
  if (v1)
    objc_msgSend(v1, sel_invalidate);
  if (*(_QWORD *)(v0 + 152))
  {
    sub_1D42E3CA4();
    sub_1D451AB3C();
    swift_release();
  }
  sub_1D43B3B74();
  *(_QWORD *)(v0 + 152) = 0;
  return swift_release();
}

uint64_t sub_1D43B3270()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  sub_1D42B28FC(&qword_1EFE4DC70);
  *(_QWORD *)(v1 + 24) = swift_task_alloc();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43B32C4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v1 + 128);
  if (v2)
  {
    v3 = *(id *)(v1 + 128);
    v4 = *(_QWORD *)(v1 + 136);
    v5 = *(_QWORD *)(v1 + 144);
  }
  else
  {
    v7 = (*(uint64_t (**)(void))(v1 + 112))();
    v8 = *(_QWORD *)(v0 + 24);
    v9 = (void *)v7;
    v4 = v10;
    v5 = v11;
    v19 = *(_QWORD *)(v0 + 16);
    v12 = sub_1D451AAC4();
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v8, 1, 1, v12);
    v13 = sub_1D42B6F40();
    swift_weakInit();
    v14 = (_QWORD *)sub_1D42B6F40();
    v14[2] = 0;
    v14[3] = 0;
    v14[4] = v9;
    v14[5] = v4;
    v14[6] = v5;
    v14[7] = v13;
    v15 = v9;
    swift_retain_n();
    v3 = v15;
    sub_1D444D358();
    v17 = v16;
    v18 = *(void **)(v1 + 128);
    *(_QWORD *)(v1 + 128) = v3;
    *(_QWORD *)(v1 + 136) = v4;
    *(_QWORD *)(v1 + 144) = v5;
    sub_1D43B3720(v18);
    *(_QWORD *)(v19 + 152) = v17;
    swift_release();
  }
  sub_1D43B38D8(v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(id, uint64_t, uint64_t))(v0 + 8))(v3, v4, v5);
}

void type metadata accessor for AnalysisClientUtils()
{
  sub_1D42CB35C();
}

uint64_t sub_1D43B3474(uint64_t a1, __int128 *a2)
{
  uint64_t v3;
  __int128 v4;
  id v5;

  v3 = *((_QWORD *)a2 + 2);
  v4 = *a2;
  *(_OWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 16) = v3;
  v5 = (id)v4;
  swift_retain();
  return a1;
}

uint64_t sub_1D43B34B4(id *a1)
{

  return swift_release();
}

uint64_t sub_1D43B34DC(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1D43B3534(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

void type metadata accessor for AnalysisClientUtils.ConnectionToServer()
{
  sub_1D42CB35C();
}

uint64_t sub_1D43B3584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(void);

  *(_QWORD *)(v7 + 40) = a7;
  v10 = (uint64_t (*)(void))((char *)a5 + *a5);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 48) = v8;
  *v8 = v7;
  v8[1] = sub_1D43B35DC;
  return v10();
}

uint64_t sub_1D43B35DC(void *a1)
{
  swift_task_dealloc();

  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43B3630()
{
  uint64_t v0;
  uint64_t Strong;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 56) = Strong;
  if (Strong)
    return sub_1D42B8DA8();
  else
    return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43B3694()
{
  uint64_t v0;

  sub_1D43B31F8();
  swift_release();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1D43B36C4()
{
  sub_1D42CB35C();
}

void sub_1D43B36CC()
{
  sub_1D43B36C4();
}

uint64_t sub_1D43B36E4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1D43B3708()
{
  uint64_t v0;

  return sub_1D43B2D20(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void *sub_1D43B3720(void *result)
{
  if (result)
  {

    return (void *)swift_release();
  }
  return result;
}

void sub_1D43B374C()
{
  sub_1D43B2FC4();
}

unint64_t sub_1D43B3754()
{
  unint64_t result;

  result = qword_1EFE4F208;
  if (!qword_1EFE4F208)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_1EFE4F208);
  }
  return result;
}

uint64_t sub_1D43B3790(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D43B37A0()
{
  return swift_release();
}

uint64_t sub_1D43B37A8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1D43B30BC;
  return sub_1D43B3060();
}

uint64_t sub_1D43B37F0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D43B3814()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D43B3850(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (int *)v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = swift_task_alloc();
  v11 = (_QWORD *)sub_1D42B8F00(v10);
  *v11 = v2;
  v11[1] = sub_1D42F92EC;
  return sub_1D43B3584(a1, v4, v5, v6, v7, v9, v8);
}

void *sub_1D43B38D8(void *result)
{
  id v1;

  if (result)
  {
    v1 = result;
    return (void *)swift_retain();
  }
  return result;
}

uint64_t sub_1D43B3904()
{
  sub_1D42B8F98();
  return swift_deallocObject();
}

void sub_1D43B3924()
{
  sub_1D43B2758();
}

uint64_t sub_1D43B3930()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D43B3954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_DWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1D43B3B58;
  return sub_1D43B28D4(v2, v3);
}

uint64_t sub_1D43B39A8()
{
  sub_1D42B8F98();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D43B39D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;

  sub_1D4307354();
  v1 = v0[3];
  v3 = v0[4];
  v2 = v0[5];
  v4 = swift_task_alloc();
  v5 = (_QWORD *)sub_1D42B8F00(v4);
  v6 = sub_1D43B3B98(v5);
  return sub_1D43B2B20(v6, v7, v8, v1, v3, v2);
}

uint64_t sub_1D43B3A38()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;

  sub_1D4307354();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D43B3B98(v1);
  return sub_1D43B1C7C(v2, v3, v4);
}

uint64_t sub_1D43B3A8C()
{
  uint64_t v0;

  sub_1D42B5400(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1D43B3AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D43B26E8(a1, a2, (_QWORD *)(v2 + 16));
}

uint64_t sub_1D43B3AC8()
{
  sub_1D42B8F98();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D43B3AF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  sub_1D4307354();
  v4 = swift_task_alloc();
  v5 = (_QWORD *)sub_1D42B8F00(v4);
  *v5 = v3;
  v5[1] = sub_1D42F9A58;
  return sub_1D43B2560(v2, v0, v1 + 16);
}

void *sub_1D43B3B74()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;

  v2 = *(void **)(v0 + 128);
  *v1 = 0;
  v1[1] = 0;
  v1[2] = 0;
  return sub_1D43B3720(v2);
}

BOOL sub_1D43B3B88(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1D43B3B98(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_1D43B3BB0()
{
  return swift_arrayDestroy();
}

id sub_1D43B3BC0()
{
  void *v0;

  return v0;
}

uint64_t sub_1D43B3BC8()
{
  return sub_1D451B1A8();
}

uint64_t sub_1D43B3BD4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 152) = 0;
  return swift_release();
}

double SNShazamSignatureResult.timeRange.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = v1 + OBJC_IVAR___SNShazamSignatureResult_impl;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl + 40);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(v2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 + 16);
  result = *(double *)(v2 + 32);
  *(double *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v3;
  return result;
}

double SNShazamSignatureResult.timeRange.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = v1 + OBJC_IVAR___SNShazamSignatureResult_impl;
  *(_QWORD *)v3 = *(_QWORD *)a1;
  *(_QWORD *)(v3 + 8) = *(_QWORD *)(a1 + 8);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a1 + 16);
  result = *(double *)(a1 + 32);
  *(double *)(v3 + 32) = result;
  *(_QWORD *)(v3 + 40) = v2;
  return result;
}

double (*SNShazamSignatureResult.timeRange.modify(_QWORD *a1))(void **a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  SNShazamSignatureResult.timeRange.getter((uint64_t)v3);
  return sub_1D43B3D48;
}

double sub_1D43B3D48(void **a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  double result;

  v1 = *a1;
  v2 = v1[5];
  v3 = v1[6] + OBJC_IVAR___SNShazamSignatureResult_impl;
  v4 = v1[1];
  v5 = v1[4];
  v6 = *((_OWORD *)v1 + 1);
  *(_QWORD *)v3 = *v1;
  *(_QWORD *)(v3 + 8) = v4;
  *(_OWORD *)(v3 + 16) = v6;
  *(_QWORD *)(v3 + 32) = v5;
  *(_QWORD *)(v3 + 40) = v2;
  free(v1);
  return result;
}

id SNShazamSignatureResult.signature.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___SNShazamSignatureResult_impl + 48);
}

void SNShazamSignatureResult.signature.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl + 48);
  *(_QWORD *)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl + 48) = a1;

}

void sub_1D43B3E18(id *a1)
{
  SNShazamSignatureResult.signature.setter((uint64_t)*a1);
}

void (*SNShazamSignatureResult.signature.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl + 48);
  *a1 = v2;
  a1[1] = v1;
  v3 = v2;
  return sub_1D43B3E84;
}

void sub_1D43B3E84(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    SNShazamSignatureResult.signature.setter((uint64_t)v3);

  }
  else
  {
    SNShazamSignatureResult.signature.setter((uint64_t)v2);
  }
}

uint64_t SNShazamSignatureResult.sequenceNum.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___SNShazamSignatureResult_impl + 56);
}

uint64_t SNShazamSignatureResult.sequenceNum.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl + 56) = result;
  return result;
}

_QWORD *(*SNShazamSignatureResult.sequenceNum.modify(_QWORD *a1))(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR___SNShazamSignatureResult_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(_QWORD *)(v1 + v2 + 56);
  return sub_1D43B3F6C;
}

_QWORD *sub_1D43B3F6C(_QWORD *result)
{
  *(_QWORD *)(result[1] + result[2] + 56) = *result;
  return result;
}

id sub_1D43B3F80(void *a1, uint64_t a2)
{
  void *v2;
  objc_class *v5;
  char *v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  objc_super v17;
  void *v18;

  v5 = (objc_class *)sub_1D42B7104();
  v6 = v2;
  objc_msgSend(a1, sel_copy);
  sub_1D451B208();
  swift_unknownObjectRelease();
  sub_1D43B4B50();
  if ((swift_dynamicCast() & 1) != 0)
  {
    v7 = v18;
  }
  else
  {
    if (qword_1EFE40338 != -1)
      swift_once();
    v8 = sub_1D451A014();
    sub_1D42CC880(v8, (uint64_t)qword_1EFEA7700);
    v9 = sub_1D4519FFC();
    v10 = sub_1D451AF5C();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1D42A7000, v9, v10, "Failed to copy Shazam signature", v11, 2u);
      MEMORY[0x1D825E524](v11, -1, -1);
    }

    v7 = a1;
  }
  v12 = MEMORY[0x1E0CA2E40];
  v13 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 40);
  v14 = &v6[OBJC_IVAR___SNShazamSignatureResult_impl];
  *(_QWORD *)v14 = *MEMORY[0x1E0CA2E40];
  *((_QWORD *)v14 + 1) = *(_QWORD *)(v12 + 8);
  *((_OWORD *)v14 + 1) = *(_OWORD *)(v12 + 16);
  *((_QWORD *)v14 + 4) = *(_QWORD *)(v12 + 32);
  *((_QWORD *)v14 + 5) = v13;
  *((_QWORD *)v14 + 6) = v7;
  *((_QWORD *)v14 + 7) = a2;

  v17.receiver = v6;
  v17.super_class = v5;
  v15 = objc_msgSendSuper2(&v17, sel_init);

  return v15;
}

id sub_1D43B4168(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;
  char *v6;
  objc_super v8;

  v3 = (char *)sub_1D42CB9E4();
  v4 = *(_OWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = &v3[OBJC_IVAR___SNShazamSignatureResult_impl];
  *(_QWORD *)v6 = *(_QWORD *)a1;
  *((_QWORD *)v6 + 1) = *(_QWORD *)(a1 + 8);
  *((_OWORD *)v6 + 1) = *(_OWORD *)(a1 + 16);
  *((_QWORD *)v6 + 4) = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(v6 + 40) = v4;
  *((_QWORD *)v6 + 7) = v5;
  v8.receiver = v3;
  v8.super_class = v1;
  return objc_msgSendSuper2(&v8, sel_init);
}

id SNShazamSignatureResult.copy(with:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  id result;
  _QWORD v9[8];

  v3 = sub_1D42B7104();
  v9[0] = *(_QWORD *)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl);
  sub_1D42D83C4(v1 + OBJC_IVAR___SNShazamSignatureResult_impl);
  v9[5] = v4;
  v9[6] = v5;
  v9[7] = v6;
  v7 = v5;
  result = sub_1D43B4168((uint64_t)v9);
  a1[3] = v3;
  *a1 = result;
  return result;
}

uint64_t SNShazamSignatureResult.hash.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;

  v1 = *(void **)(v0 + OBJC_IVAR___SNShazamSignatureResult_impl + 48);
  sub_1D451B958();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  v2 = v1;
  objc_msgSend(v2, sel_hash);
  sub_1D451B964();
  sub_1D451B988();
  v3 = sub_1D451B994();

  return v3;
}

unint64_t SNShazamSignatureResult.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[6];
  _QWORD v16[2];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD v20[2];
  __int128 v21;
  uint64_t v22;

  sub_1D42B7104();
  sub_1D42B28B4(a1, (uint64_t)&v21);
  if (v22)
  {
    sub_1D42B293C(&v21, v20);
    sub_1D42B294C((uint64_t)v20, (uint64_t)v16);
    if (swift_dynamicCast())
    {
      v3 = (void *)v15[0];
      v4 = v1 + OBJC_IVAR___SNShazamSignatureResult_impl;
      v5 = *(_QWORD *)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl);
      v6 = *(_QWORD *)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl + 40);
      v7 = *(_QWORD *)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl + 48);
      v8 = *(_QWORD *)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl + 56);
      v9 = v15[0] + OBJC_IVAR___SNShazamSignatureResult_impl;
      v10 = *(_QWORD *)(v15[0] + OBJC_IVAR___SNShazamSignatureResult_impl);
      v11 = *(_QWORD *)(v15[0] + OBJC_IVAR___SNShazamSignatureResult_impl + 48);
      v12 = *(_QWORD *)(v15[0] + OBJC_IVAR___SNShazamSignatureResult_impl + 56);
      v16[0] = v5;
      v16[1] = *(_QWORD *)(v4 + 8);
      v17 = *(_OWORD *)(v4 + 16);
      v18 = *(_QWORD *)(v4 + 32);
      v19 = v6;
      v15[0] = v10;
      sub_1D42D83C4(v9);
      v15[5] = v13;
      if (static TimeRange.== infix(_:_:)((uint64_t)v16, (uint64_t)v15))
      {
        LODWORD(v7) = objc_msgSend((id)v7, sel_isEqual_, v11, v15[0]);

        if (v8 == v12)
          v7 = v7;
        else
          v7 = 0;
        goto LABEL_10;
      }

    }
    v7 = 0;
LABEL_10:
    sub_1D42B5400((uint64_t)v20);
    return v7;
  }
  return 0;
}

id SNShazamSignatureResult.__allocating_init(coder:)(void *a1)
{
  sub_1D42CB9E4();
  return SNShazamSignatureResult.init(coder:)(a1);
}

id SNShazamSignatureResult.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  _QWORD v7[7];

  v3 = v1;
  sub_1D42B1B48();
  swift_getObjectType();

  v4 = (id)v7[6];
  v5 = sub_1D43B4168((uint64_t)v7);

  sub_1D432BF64();
  return v5;
}

Swift::Void __swiftcall SNShazamSignatureResult.encode(with:)(NSCoder with)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  _OWORD v5[4];

  v3 = *(_OWORD *)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl + 16);
  v5[0] = *(_OWORD *)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl);
  v5[1] = v3;
  v4 = *(_OWORD *)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl + 48);
  v5[2] = *(_OWORD *)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl + 32);
  v5[3] = v4;
  sub_1D42B5D94((uint64_t)v5);
  sub_1D42AFE84((uint64_t)v5, 1819307369, 0xE400000000000000, (uint64_t)with.super.isa);
  sub_1D43B4A58((uint64_t)v5);
}

uint64_t static SNShazamSignatureResult.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t SNShazamSignatureResult.description.getter()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  _QWORD v14[6];
  objc_super v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[6];

  v15.receiver = v0;
  v15.super_class = (Class)sub_1D42B7104();
  v3 = objc_msgSendSuper2(&v15, sel_description);
  sub_1D43B4B9C();
  sub_1D42B722C();
  v16 = v1;
  v17 = v2;
  sub_1D43B4B8C();
  v4 = &v0[OBJC_IVAR___SNShazamSignatureResult_impl];
  v5 = objc_msgSend(*(id *)&v0[OBJC_IVAR___SNShazamSignatureResult_impl + 48], sel_description);
  sub_1D43B4B9C();
  sub_1D42B722C();
  sub_1D42B7190();
  swift_bridgeObjectRelease();
  sub_1D43B4B8C();
  v18[0] = *((_QWORD *)v4 + 7);
  sub_1D451B7C0();
  sub_1D451A794();
  swift_bridgeObjectRelease();
  sub_1D451A794();
  SNShazamSignatureResult.timeRange.getter((uint64_t)v18);
  v6 = v18[0];
  v7 = v18[2];
  v8 = v18[3];
  v9 = v18[5];
  v10 = (void *)objc_opt_self();
  v14[0] = v6;
  v14[1] = v18[1];
  v14[2] = v7;
  v14[3] = v8;
  v14[4] = v18[4];
  v14[5] = v9;
  v11 = objc_msgSend(v10, sel_valueWithCMTimeRange_, v14);
  v12 = objc_msgSend(v11, sel_description);
  sub_1D43B4B9C();
  sub_1D42B722C();
  sub_1D42B7190();

  swift_bridgeObjectRelease();
  return v16;
}

id SNShazamSignatureResult.__allocating_init()()
{
  return objc_msgSend(sub_1D42CB9E4(), sel_init);
}

void SNShazamSignatureResult.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SNShazamSignatureResult.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1D42B7104();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D43B4A58(uint64_t a1)
{

  return a1;
}

void sub_1D43B4A80(uint64_t a1@<X8>)
{
  SNShazamSignatureResult.timeRange.getter(a1);
  sub_1D42B6E24();
}

void sub_1D43B4A9C(uint64_t a1)
{
  SNShazamSignatureResult.timeRange.setter(a1);
  sub_1D42B6E24();
}

void sub_1D43B4AB8(id *a1@<X8>)
{
  *a1 = SNShazamSignatureResult.signature.getter();
  sub_1D42B6E24();
}

void sub_1D43B4AE0(uint64_t *a1@<X8>)
{
  *a1 = SNShazamSignatureResult.sequenceNum.getter();
  sub_1D42B6E24();
}

void sub_1D43B4B04(uint64_t *a1)
{
  SNShazamSignatureResult.sequenceNum.setter(*a1);
  sub_1D42B6E24();
}

uint64_t type metadata accessor for SNShazamSignatureResult()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNShazamSignatureResult()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_1D43B4B50()
{
  unint64_t result;

  result = qword_1EFE4F298;
  if (!qword_1EFE4F298)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFE4F298);
  }
  return result;
}

uint64_t sub_1D43B4B8C()
{
  return sub_1D451A794();
}

uint64_t sub_1D43B4B9C()
{
  return sub_1D451A6EC();
}

uint64_t sub_1D43B4BA4(char a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v4 = a1;
  return sub_1D44FB0C0(*(unsigned __int8 **)(v2 + 16), &v4, a2 & 1);
}

uint64_t sub_1D43B4BFC()
{
  return sub_1D43B4CB8((void (*)(_QWORD))sub_1D44FB14C);
}

uint64_t type metadata accessor for ManagedAtomicInt64()
{
  return objc_opt_self();
}

uint64_t sub_1D43B4C28(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v4[2];

  v4[1] = *MEMORY[0x1E0C80C00];
  v4[0] = a1;
  return sub_1D44FB07C(*(unint64_t **)(v2 + 16), v4, a2);
}

uint64_t sub_1D43B4C80()
{
  return sub_1D43B4CB8((void (*)(_QWORD))sub_1D44FB168);
}

uint64_t type metadata accessor for ManagedAtomicInt32()
{
  return objc_opt_self();
}

uint64_t sub_1D43B4CAC()
{
  return sub_1D43B4CB8((void (*)(_QWORD))sub_1D44FB184);
}

uint64_t sub_1D43B4CB8(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ManagedAtomicBool()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for CInteropUtils.DomainError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D43B4D4C + 4 * byte_1D4534849[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D43B4D80 + 4 * asc_1D4534844[v4]))();
}

uint64_t sub_1D43B4D80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43B4D88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D43B4D90);
  return result;
}

uint64_t sub_1D43B4D9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D43B4DA4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D43B4DA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43B4DB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CInteropUtils.DomainError()
{
  return &type metadata for CInteropUtils.DomainError;
}

unint64_t sub_1D43B4DD0()
{
  unint64_t result;

  result = qword_1EFE4F2A0;
  if (!qword_1EFE4F2A0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45348AC, &type metadata for CInteropUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4F2A0);
  }
  return result;
}

void SNAOPReport.SuccessPayload.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;

  v3 = v1;
  v5 = type metadata accessor for AOPClassificationResult();
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v6);
  sub_1D43B9F74();
  type metadata accessor for SNAOPReport.SuccessPayload(0);
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D43AF844(v3, (uint64_t)v9, v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1D451B964();
    sub_1D451B97C();
  }
  else
  {
    sub_1D43AF870((uint64_t)v9, v2, (uint64_t (*)(_QWORD))type metadata accessor for AOPClassificationResult);
    sub_1D451B964();
    sub_1D43341C8();
    sub_1D42B4EF4(&qword_1EFE4BE30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
    sub_1D43B9FEC();
    sub_1D43B9FEC();
    v11 = *(_QWORD *)(v2 + *(int *)(v5 + 24));
    swift_bridgeObjectRetain();
    sub_1D43332AC(a1, v11);
    sub_1D42B7204();
    sub_1D4325D80(v2, (uint64_t (*)(_QWORD))type metadata accessor for AOPClassificationResult);
  }
}

uint64_t type metadata accessor for SNAOPReport.SuccessPayload(uint64_t a1)
{
  return sub_1D42BFA18(a1, (uint64_t *)&unk_1EFE4F3B0);
}

void static SNAOPReport.SuccessPayload.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = type metadata accessor for AOPClassificationResult();
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1D43B9ECC();
  type metadata accessor for SNAOPReport.SuccessPayload(v8);
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v9);
  sub_1D432D380();
  v12 = v10 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v23 - v14;
  sub_1D42B28FC(&qword_1EFE4F2A8);
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v16);
  sub_1D43B9EE8();
  v18 = v2 + v17;
  sub_1D43AF844(a1, v2, type metadata accessor for SNAOPReport.SuccessPayload);
  sub_1D43AF844(a2, v18, type metadata accessor for SNAOPReport.SuccessPayload);
  v19 = sub_1D43B9FA4();
  if ((_DWORD)v19 == 1)
  {
    sub_1D43AF844(v2, v12, type metadata accessor for SNAOPReport.SuccessPayload);
    v21 = sub_1D43B9FA4();
    if ((_DWORD)v21 == 1)
    {
      sub_1D43B9E90(v21, type metadata accessor for SNAOPReport.SuccessPayload);
      goto LABEL_11;
    }
LABEL_6:
    sub_1D4328A1C(v2, &qword_1EFE4F2A8);
    goto LABEL_11;
  }
  sub_1D43B9FC4(v19, v20, type metadata accessor for SNAOPReport.SuccessPayload);
  if (sub_1D43B9FA4() == 1)
  {
    sub_1D4325D80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for AOPClassificationResult);
    goto LABEL_6;
  }
  sub_1D43AF870(v18, v3, (uint64_t (*)(_QWORD))type metadata accessor for AOPClassificationResult);
  sub_1D43B9FAC();
  if ((sub_1D4519CC0() & 1) != 0 && (sub_1D4519CC0() & 1) != 0)
    sub_1D432F4C8(*(_QWORD *)&v15[*(int *)(v6 + 24)], *(_QWORD *)(v3 + *(int *)(v6 + 24)));
  sub_1D43B9F6C(v3);
  sub_1D43B9F6C((uint64_t)v15);
  sub_1D43B9E90(v22, type metadata accessor for SNAOPReport.SuccessPayload);
LABEL_11:
  sub_1D42CB520();
}

BOOL static SNAOPReport.AOPNewDataAvailable.== infix(_:_:)(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1D43B51A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6966697373616C63 && a2 == 0xEF736E6F69746163;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D45550F0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D43B52B0(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000010;
  else
    return 0x6966697373616C63;
}

uint64_t sub_1D43B52FC()
{
  sub_1D43B7A78();
  return sub_1D451BA3C();
}

uint64_t sub_1D43B5324()
{
  sub_1D43B7A78();
  return sub_1D451BA48();
}

uint64_t sub_1D43B5350()
{
  char *v0;

  return sub_1D43B52B0(*v0);
}

uint64_t sub_1D43B5358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D43B51A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D43B537C()
{
  sub_1D43B79C4();
  return sub_1D451BA3C();
}

uint64_t sub_1D43B53A4()
{
  sub_1D43B79C4();
  return sub_1D451BA48();
}

uint64_t sub_1D43B53CC()
{
  sub_1D43B7A00();
  return sub_1D451BA3C();
}

uint64_t sub_1D43B53F4()
{
  sub_1D43B7A00();
  return sub_1D451BA48();
}

void SNAOPReport.SuccessPayload.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D42BE910();
  v19 = v0;
  v6 = v5;
  v17 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE4F2B0) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v7);
  sub_1D43B9F20(v8, v14);
  v15 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE4F2B8) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  sub_1D43B9F3C();
  type metadata accessor for AOPClassificationResult();
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v10);
  v11 = sub_1D43B9F04();
  type metadata accessor for SNAOPReport.SuccessPayload(v11);
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v12);
  sub_1D42D7108();
  v18 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE4F2C0) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v13);
  sub_1D434799C();
  sub_1D42B5528(v6, v6[3]);
  sub_1D43B79C4();
  sub_1D451BA24();
  sub_1D43AF844(v19, v1, type metadata accessor for SNAOPReport.SuccessPayload);
  if (sub_1D43B9FF8() == 1)
  {
    sub_1D43BA03C();
    sub_1D43B9F94();
    sub_1D43B7A3C();
    sub_1D451B760();
    sub_1D4306F6C(v16, *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
  }
  else
  {
    sub_1D43AF870(v1, v4, (uint64_t (*)(_QWORD))type metadata accessor for AOPClassificationResult);
    sub_1D43B7A78();
    sub_1D43B9F94();
    sub_1D42B4EF4(&qword_1EFE4F2E8, (uint64_t (*)(uint64_t))type metadata accessor for AOPClassificationResult, (uint64_t)&protocol conformance descriptor for AOPClassificationResult);
    sub_1D451B760();
    sub_1D4306F6C(v3, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
    sub_1D4325D80(v4, (uint64_t (*)(_QWORD))type metadata accessor for AOPClassificationResult);
  }
  sub_1D4307058(v2, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  sub_1D42BE844();
}

void SNAOPReport.SuccessPayload.hashValue.getter()
{
  sub_1D43B60D0((void (*)(_BYTE *))SNAOPReport.SuccessPayload.hash(into:));
}

void SNAOPReport.SuccessPayload.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  _QWORD *v10;
  char v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _DWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _DWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _DWORD *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;

  sub_1D42BE910();
  v61 = v10;
  v13 = v12;
  v52 = v14;
  v15 = sub_1D42B28FC(&qword_1EFE4F2F0);
  v55 = *(_QWORD *)(v15 - 8);
  v56 = v15;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v16);
  sub_1D42BE768();
  v58 = v17;
  v18 = sub_1D42B28FC(&qword_1EFE4F2F8);
  v53 = *(_QWORD *)(v18 - 8);
  v54 = v18;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v19);
  sub_1D42BE768();
  v57 = v20;
  v21 = sub_1D42B28FC(&qword_1EFE4F300);
  v59 = *(_QWORD *)(v21 - 8);
  v60 = v21;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v22);
  v23 = sub_1D43B9E1C();
  v24 = type metadata accessor for SNAOPReport.SuccessPayload(v23);
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v25);
  sub_1D432D380();
  v28 = (_DWORD *)(v26 - v27);
  v30 = MEMORY[0x1E0C80A78](v29);
  v32 = (char *)&v48 - v31;
  MEMORY[0x1E0C80A78](v30);
  v34 = (char *)&v48 - v33;
  v35 = v13[3];
  sub_1D42B5528(v13, v35);
  sub_1D43B79C4();
  v36 = v61;
  sub_1D43BA004();
  if (v36)
    goto LABEL_8;
  v48 = v28;
  v49 = v34;
  v50 = v32;
  v51 = v24;
  v61 = v13;
  v37 = sub_1D43B9FB8();
  v38 = *(_QWORD *)(v37 + 16);
  if (!v38 || (sub_1D43B9E4C(v37, v38), sub_1D43B9EB8(), v35 >> 1))
  {
    v40 = v59;
    sub_1D451B460();
    sub_1D42B6D0C();
    sub_1D42B28FC(&qword_1EFE49ED0);
    sub_1D43B9E98();
    v41 = sub_1D43B9E70();
    sub_1D43B9F58(v41, *MEMORY[0x1E0DEC450]);
    swift_willThrow();
    sub_1D4371170();
    sub_1D43B9E10(*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8));
    v13 = v61;
LABEL_8:
    v44 = (uint64_t)v13;
    goto LABEL_9;
  }
  if ((v11 & 1) != 0)
  {
    sub_1D43BA03C();
    sub_1D43B9DF8();
    sub_1D43B7AB4();
    sub_1D435EA20();
    v39 = v59;
    sub_1D4306FEC(v55);
    sub_1D4371170();
    sub_1D43B9E10(*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
    v45 = v48;
    *v48 = a10;
    swift_storeEnumTagMultiPayload();
    v46 = (uint64_t)v45;
  }
  else
  {
    sub_1D43B7A78();
    sub_1D43B9DF8();
    type metadata accessor for AOPClassificationResult();
    sub_1D42B4EF4(&qword_1EFE4F310, (uint64_t (*)(uint64_t))type metadata accessor for AOPClassificationResult, (uint64_t)&protocol conformance descriptor for AOPClassificationResult);
    v42 = (uint64_t)v50;
    sub_1D435EA20();
    v43 = v59;
    sub_1D4306FEC(v53);
    sub_1D4371170();
    sub_1D43B9E10(*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8));
    swift_storeEnumTagMultiPayload();
    v46 = v42;
  }
  v47 = (uint64_t)v49;
  sub_1D43AF870(v46, (uint64_t)v49, type metadata accessor for SNAOPReport.SuccessPayload);
  sub_1D43AF870(v47, v52, type metadata accessor for SNAOPReport.SuccessPayload);
  v44 = (uint64_t)v61;
LABEL_9:
  sub_1D42B5400(v44);
  sub_1D42BE844();
}

void sub_1D43B5A10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;

  v3 = v1;
  type metadata accessor for SNAOPReport.SuccessPayload(0);
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D43B9F8C();
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v8);
  sub_1D43B9F74();
  sub_1D43AF844(v3, v2, v9);
  if (sub_1D43B9FA4() == 1)
  {
    sub_1D451B964();
    sub_1D43B9FE4();
    swift_bridgeObjectRetain();
    sub_1D451A74C();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1D43AF870(v2, (uint64_t)v7, type metadata accessor for SNAOPReport.SuccessPayload);
    sub_1D42E4000();
    SNAOPReport.SuccessPayload.hash(into:)(a1);
    sub_1D4325D80((uint64_t)v7, type metadata accessor for SNAOPReport.SuccessPayload);
  }
  sub_1D42CB084();
}

void sub_1D43B5B14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  type metadata accessor for SNAOPReport.SuccessPayload(0);
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1D43B9ECC();
  type metadata accessor for SNAOPReport.Payload(v7);
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v8);
  sub_1D432D380();
  v11 = v9 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v27 - v13;
  sub_1D42B28FC(&qword_1EFE4F4B8);
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v15);
  sub_1D43B9EE8();
  v17 = v2 + v16;
  sub_1D43AF844(a1, v2, type metadata accessor for SNAOPReport.Payload);
  sub_1D43AF844(a2, v17, type metadata accessor for SNAOPReport.Payload);
  v18 = sub_1D43B9FD0();
  if ((_DWORD)v18 != 1)
  {
    sub_1D43B9FC4(v18, v19, type metadata accessor for SNAOPReport.Payload);
    if (sub_1D43B9FD0() != 1)
    {
      sub_1D43AF870(v17, v3, type metadata accessor for SNAOPReport.SuccessPayload);
      v24 = sub_1D43B9FAC();
      static SNAOPReport.SuccessPayload.== infix(_:_:)(v24, v25);
      sub_1D4325D80(v3, type metadata accessor for SNAOPReport.SuccessPayload);
      sub_1D4325D80((uint64_t)v14, type metadata accessor for SNAOPReport.SuccessPayload);
      sub_1D43B9E90(v26, type metadata accessor for SNAOPReport.Payload);
      goto LABEL_16;
    }
    sub_1D4325D80((uint64_t)v14, type metadata accessor for SNAOPReport.SuccessPayload);
    goto LABEL_12;
  }
  sub_1D43AF844(v2, v11, type metadata accessor for SNAOPReport.Payload);
  v21 = *(_QWORD *)(v11 + 8);
  v20 = *(_QWORD *)(v11 + 16);
  if (sub_1D43B9FD0() != 1)
  {
    sub_1D42B7204();
LABEL_12:
    sub_1D4328A1C(v2, &qword_1EFE4F4B8);
    goto LABEL_16;
  }
  if (*(_DWORD *)v11 == *(_DWORD *)v17)
  {
    if (v21 == *(_QWORD *)(v17 + 8) && v20 == *(_QWORD *)(v17 + 16))
    {
      v23 = swift_bridgeObjectRelease_n();
    }
    else
    {
      sub_1D43B9FAC();
      sub_1D451B820();
      sub_1D42B7204();
      v23 = swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1D42B7204();
    v23 = swift_bridgeObjectRelease();
  }
  sub_1D43B9E90(v23, type metadata accessor for SNAOPReport.Payload);
LABEL_16:
  sub_1D42CB520();
}

uint64_t sub_1D43B5D3C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6572756C696166 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D43B5E30(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6572756C696166;
  else
    return 0x73736563637573;
}

void sub_1D43B5E60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D42BE910();
  v19 = v0;
  v6 = v5;
  v17 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE4F450) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42BE768();
  v16 = v8;
  v15 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE4F458) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1D43B9F3C();
  type metadata accessor for SNAOPReport.SuccessPayload(v10);
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v11);
  v12 = sub_1D43B9F04();
  type metadata accessor for SNAOPReport.Payload(v12);
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v13);
  sub_1D42D7108();
  v18 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE4F460) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v14);
  sub_1D42F1ED4();
  sub_1D42B5528(v6, v6[3]);
  sub_1D43B967C();
  sub_1D451BA24();
  sub_1D43AF844(v19, v1, type metadata accessor for SNAOPReport.Payload);
  if (sub_1D43B9FF8() == 1)
  {
    sub_1D43BA030();
    sub_1D437EC40();
    sub_1D43B96F4();
    sub_1D451B760();
    sub_1D43211E8(v16, *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
    sub_1D4307058(v2, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D43AF870(v1, v4, type metadata accessor for SNAOPReport.SuccessPayload);
    sub_1D43B9730();
    sub_1D437EC40();
    sub_1D42B4EF4(&qword_1EFE4F488, type metadata accessor for SNAOPReport.SuccessPayload, (uint64_t)&protocol conformance descriptor for SNAOPReport.SuccessPayload);
    sub_1D451B760();
    sub_1D4306F6C(v3, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
    sub_1D4325D80(v4, type metadata accessor for SNAOPReport.SuccessPayload);
    sub_1D4307058(v2, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  }
  sub_1D42BE844();
}

void sub_1D43B60D0(void (*a1)(_BYTE *))
{
  _BYTE v2[72];

  sub_1D42BE9A8();
  a1(v2);
  sub_1D42CB230();
  sub_1D42BE978();
}

void sub_1D43B60FC()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _DWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _DWORD *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;

  sub_1D42BE910();
  v3 = v2;
  v43 = v4;
  v5 = sub_1D42B28FC(&qword_1EFE4F490);
  v46 = *(_QWORD *)(v5 - 8);
  v47 = v5;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v6);
  sub_1D42BE768();
  v48 = v7;
  v8 = sub_1D42B28FC(&qword_1EFE4F498);
  v44 = *(_QWORD *)(v8 - 8);
  v45 = v8;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  sub_1D43B9F20(v10, (uint64_t)v39);
  v11 = sub_1D42B28FC(&qword_1EFE4F4A0);
  v49 = *(_QWORD *)(v11 - 8);
  v50 = v11;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v12);
  v13 = sub_1D43B9E1C();
  v14 = type metadata accessor for SNAOPReport.Payload(v13);
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v15);
  sub_1D432D380();
  v18 = (_DWORD *)(v16 - v17);
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v39 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v39 - v23;
  v25 = v3[3];
  sub_1D42B5528(v3, v25);
  sub_1D43B967C();
  sub_1D43BA004();
  if (v0)
    goto LABEL_8;
  v40 = v24;
  v41 = v22;
  v39 = v18;
  v42 = v14;
  v26 = sub_1D43B9FB8();
  v27 = *(_QWORD *)(v26 + 16);
  if (!v27 || (sub_1D43B9E4C(v26, v27), sub_1D43B9EB8(), v25 >> 1))
  {
    v29 = v49;
    sub_1D451B460();
    sub_1D42B6D0C();
    sub_1D42B28FC(&qword_1EFE49ED0);
    sub_1D43B9E98();
    v30 = sub_1D43B9E70();
    sub_1D43B9F58(v30, *MEMORY[0x1E0DEC450]);
    swift_willThrow();
    sub_1D4371170();
    sub_1D43B9E10(*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
LABEL_8:
    v33 = (uint64_t)v3;
    goto LABEL_9;
  }
  if ((v1 & 1) != 0)
  {
    sub_1D43BA030();
    sub_1D43B9DF8();
    sub_1D43B976C();
    sub_1D435EA20();
    v28 = v49;
    sub_1D4306FEC(v46);
    sub_1D4371170();
    sub_1D43B9E10(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8));
    v34 = v52;
    v35 = v53;
    v36 = v39;
    *v39 = v51;
    *((_QWORD *)v36 + 1) = v34;
    *((_QWORD *)v36 + 2) = v35;
    swift_storeEnumTagMultiPayload();
    v37 = (uint64_t)v36;
  }
  else
  {
    LOBYTE(v51) = 0;
    sub_1D43B9730();
    sub_1D43B9DF8();
    type metadata accessor for SNAOPReport.SuccessPayload(0);
    sub_1D42B4EF4(&qword_1EFE4F4B0, type metadata accessor for SNAOPReport.SuccessPayload, (uint64_t)&protocol conformance descriptor for SNAOPReport.SuccessPayload);
    v31 = (uint64_t)v41;
    sub_1D435EA20();
    v32 = v49;
    sub_1D4306FEC(v44);
    sub_1D4371170();
    sub_1D43B9E10(*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
    swift_storeEnumTagMultiPayload();
    v37 = v31;
  }
  v38 = (uint64_t)v40;
  sub_1D43AF870(v37, (uint64_t)v40, type metadata accessor for SNAOPReport.Payload);
  sub_1D43AF870(v38, v43, type metadata accessor for SNAOPReport.Payload);
  v33 = (uint64_t)v3;
LABEL_9:
  sub_1D42B5400(v33);
  sub_1D42BE844();
}

uint64_t sub_1D43B64A0()
{
  sub_1D451B97C();
  swift_bridgeObjectRetain();
  sub_1D43B9FD8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43B64E8(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 != *(_DWORD *)a2)
    return 0;
  if (*(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
    return 1;
  else
    return sub_1D451B820();
}

uint64_t sub_1D43B6530(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x726F727245706F61 && a2 == 0xE800000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D43B661C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6567617373656DLL;
  else
    return 0x726F727245706F61;
}

void sub_1D43B6654()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D42BE910();
  v2 = v1;
  v3 = sub_1D42B28FC(&qword_1EFE4F510);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1D42CB18C();
  sub_1D42B5528(v2, v2[3]);
  sub_1D43B9C30();
  sub_1D451BA24();
  sub_1D42CB9F8();
  sub_1D43B9EB0(&qword_1EFE4F528, v5, MEMORY[0x1E0DEE100], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
  sub_1D43BA010();
  sub_1D451B760();
  if (!v0)
  {
    sub_1D43BA024();
    sub_1D451B724();
  }
  sub_1D42BE98C(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_1D42BE844();
}

void sub_1D43B6770()
{
  sub_1D42BE9A8();
  sub_1D43B9FE4();
  swift_bridgeObjectRetain();
  sub_1D43B9FD8();
  swift_bridgeObjectRelease();
  sub_1D42CB230();
  sub_1D42CB708();
}

void sub_1D43B67BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1D42BE910();
  v13 = v12;
  v15 = v14;
  sub_1D42B28FC(&qword_1EFE4F530);
  sub_1D438FAD8();
  MEMORY[0x1E0C80A78](v16);
  sub_1D42B5528(v13, v13[3]);
  sub_1D43B9C30();
  sub_1D43070F4();
  if (!v11)
  {
    sub_1D42CB9F8();
    sub_1D43B9EB0(&qword_1EFE4F538, v17, MEMORY[0x1E0DEE128], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
    sub_1D451B688();
    sub_1D43BA024();
    v18 = sub_1D451B64C();
    v20 = v19;
    sub_1D42CB3BC();
    *(_DWORD *)v15 = a11;
    *(_QWORD *)(v15 + 8) = v18;
    *(_QWORD *)(v15 + 16) = v20;
  }
  sub_1D42B5400((uint64_t)v13);
  sub_1D42BE844();
}

void sub_1D43B68F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  int vars8;

  SNAOPReport.SuccessPayload.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1D43B6904()
{
  SNAOPReport.SuccessPayload.encode(to:)();
}

void sub_1D43B6920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D43B6AA0(a1, a2, a3, (void (*)(_BYTE *))SNAOPReport.SuccessPayload.hash(into:));
}

uint64_t sub_1D43B6930()
{
  char *v0;

  return sub_1D43B5E30(*v0);
}

uint64_t sub_1D43B6938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D43B5D3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D43B695C()
{
  sub_1D43B967C();
  return sub_1D451BA3C();
}

uint64_t sub_1D43B6984()
{
  sub_1D43B967C();
  return sub_1D451BA48();
}

uint64_t sub_1D43B69AC()
{
  sub_1D43B96B8();
  return sub_1D451BA3C();
}

uint64_t sub_1D43B69D4()
{
  sub_1D43B96B8();
  return sub_1D451BA48();
}

uint64_t sub_1D43B69FC()
{
  sub_1D43B9730();
  return sub_1D451BA3C();
}

uint64_t sub_1D43B6A24()
{
  sub_1D43B9730();
  return sub_1D451BA48();
}

void sub_1D43B6A4C()
{
  sub_1D43B60FC();
}

void sub_1D43B6A60()
{
  sub_1D43B5E60();
}

void sub_1D43B6A74()
{
  sub_1D43B60D0((void (*)(_BYTE *))sub_1D43B5A10);
}

void sub_1D43B6A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D43B6AA0(a1, a2, a3, (void (*)(_BYTE *))sub_1D43B5A10);
}

void sub_1D43B6AA0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *))
{
  _BYTE v5[72];

  sub_1D434955C();
  a4(v5);
  sub_1D42CB230();
  sub_1D42BE978();
}

void sub_1D43B6AD0()
{
  sub_1D434955C();
  sub_1D451B964();
  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t sub_1D43B6B00()
{
  char *v0;

  return sub_1D43B661C(*v0);
}

uint64_t sub_1D43B6B08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D43B6530(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D43B6B2C()
{
  sub_1D43B9C30();
  return sub_1D451BA3C();
}

uint64_t sub_1D43B6B54()
{
  sub_1D43B9C30();
  return sub_1D451BA48();
}

void sub_1D43B6B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  sub_1D43B67BC(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SHIDWORD(vars8));
}

void sub_1D43B6B90()
{
  sub_1D43B6654();
}

uint64_t sub_1D43B6BAC()
{
  sub_1D451B958();
  sub_1D451B97C();
  swift_bridgeObjectRetain();
  sub_1D451A74C();
  swift_bridgeObjectRelease();
  return sub_1D451B994();
}

uint64_t SNAOPReport.AOPNewDataAvailable.hash(into:)()
{
  return sub_1D451B97C();
}

void sub_1D43B6C44()
{
  sub_1D434955C();
  sub_1D42E4000();
  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t sub_1D43B6C6C()
{
  sub_1D43B7AF0();
  return sub_1D451BA3C();
}

uint64_t sub_1D43B6C94()
{
  sub_1D43B7AF0();
  return sub_1D451BA48();
}

void SNAOPReport.AOPNewDataAvailable.encode(to:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  sub_1D42BE910();
  v1 = v0;
  sub_1D42B28FC(&qword_1EFE4F318);
  sub_1D438FAD8();
  MEMORY[0x1E0C80A78](v2);
  sub_1D42F1ED4();
  sub_1D42B5528(v1, v1[3]);
  sub_1D43B7AF0();
  sub_1D451BA24();
  sub_1D451B790();
  sub_1D42CB3BC();
  sub_1D42BE844();
}

void SNAOPReport.AOPNewDataAvailable.hashValue.getter()
{
  sub_1D42BE9A8();
  sub_1D43B9FE4();
  sub_1D42CB230();
  sub_1D42BE978();
}

void SNAOPReport.AOPNewDataAvailable.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _DWORD *v3;
  _DWORD *v4;
  uint64_t v5;
  int v6;

  sub_1D42BE910();
  v2 = v1;
  v4 = v3;
  sub_1D42B28FC(&qword_1EFE4F328);
  sub_1D438FAD8();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42B5528(v2, v2[3]);
  sub_1D43B7AF0();
  sub_1D43070F4();
  if (!v0)
  {
    v6 = sub_1D451B6B8();
    sub_1D42CB3BC();
    *v4 = v6;
  }
  sub_1D42B5400((uint64_t)v2);
  sub_1D42BE844();
}

void sub_1D43B6E48()
{
  SNAOPReport.AOPNewDataAvailable.init(from:)();
}

void sub_1D43B6E5C()
{
  SNAOPReport.AOPNewDataAvailable.encode(to:)();
}

void SNAOPReport.hash(into:)(uint64_t a1)
{
  sub_1D451B97C();
  type metadata accessor for SNAOPReport(0);
  sub_1D43341C8();
  sub_1D42B4EF4(&qword_1EFE4BE30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1D451A614();
  sub_1D451B97C();
  sub_1D43B5A10(a1);
  sub_1D42CB084();
}

void static SNAOPReport.== infix(_:_:)(_DWORD *a1, _DWORD *a2)
{
  uint64_t v4;

  if (*a1 == *a2)
  {
    v4 = type metadata accessor for SNAOPReport(0);
    if ((sub_1D4519CC0() & 1) != 0
      && *(_DWORD *)((char *)a1 + *(int *)(v4 + 24)) == *(_DWORD *)((char *)a2 + *(int *)(v4 + 24)))
    {
      sub_1D43B5B14((uint64_t)a1 + *(int *)(v4 + 28), (uint64_t)a2 + *(int *)(v4 + 28));
    }
  }
}

uint64_t sub_1D43B6FA0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x644974726F706572 && a2 == 0xE800000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x64497265646E6573 && a2 == 0xE800000000000000;
      if (v7 || (sub_1D451B820() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x64616F6C796170 && a2 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_1D451B820();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_1D43B7158(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D43B718C + 4 * byte_1D4534920[a1]))(0x644974726F706572, 0xE800000000000000);
}

uint64_t sub_1D43B718C()
{
  return 0x6D617473656D6974;
}

uint64_t sub_1D43B71A8()
{
  return 0x64497265646E6573;
}

uint64_t sub_1D43B71BC()
{
  return 0x64616F6C796170;
}

uint64_t sub_1D43B71D4()
{
  unsigned __int8 *v0;

  return sub_1D43B7158(*v0);
}

uint64_t sub_1D43B71DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D43B6FA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D43B7200()
{
  sub_1D43B7B40();
  return sub_1D451BA3C();
}

uint64_t sub_1D43B7228()
{
  sub_1D43B7B40();
  return sub_1D451BA48();
}

uint64_t SNAOPReport.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = sub_1D42B28FC(&qword_1EFE4F330);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1D42CB18C();
  sub_1D42B5528(a1, a1[3]);
  sub_1D43B7B40();
  sub_1D451BA24();
  sub_1D42CB9F8();
  sub_1D43B9EB0(&qword_1EFE4F348, v5, MEMORY[0x1E0DEE100], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
  sub_1D43BA010();
  sub_1D4338480();
  if (!v1)
  {
    type metadata accessor for SNAOPReport(0);
    sub_1D43BA024();
    sub_1D4519CE4();
    sub_1D42B4EF4(&qword_1EFE4BE48, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1D4338480();
    sub_1D42CB9F8();
    sub_1D43B9EB0(&qword_1EFE4F358, v6, MEMORY[0x1E0DEE100], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
    sub_1D4338480();
    type metadata accessor for SNAOPReport.Payload(0);
    sub_1D42B4EF4(&qword_1EFE4F360, type metadata accessor for SNAOPReport.Payload, (uint64_t)&unk_1D4535064);
    sub_1D4338480();
  }
  return sub_1D42BE98C(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
}

void SNAOPReport.hashValue.getter()
{
  _BYTE v0[72];

  sub_1D42BE9A8();
  sub_1D451B97C();
  type metadata accessor for SNAOPReport(0);
  sub_1D43341C8();
  sub_1D42B4EF4(&qword_1EFE4BE30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1D451A614();
  sub_1D451B97C();
  sub_1D43B5A10((uint64_t)v0);
  sub_1D42CB230();
  sub_1D42CB708();
}

void SNAOPReport.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _DWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(_QWORD);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _DWORD *v43;
  uint64_t v44;
  int v45;

  sub_1D42BE910();
  v15 = v14;
  v37 = v16;
  type metadata accessor for SNAOPReport.Payload(0);
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v17);
  sub_1D434799C();
  v44 = sub_1D4519CE4();
  v40 = *(_QWORD *)(v44 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_1D42B28FC(&qword_1EFE4F368);
  v21 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v22 = sub_1D43B9E1C();
  v42 = type metadata accessor for SNAOPReport(v22);
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v23);
  sub_1D42BE768();
  v43 = v24;
  v25 = v15[3];
  v41 = v15;
  sub_1D42B5528(v15, v25);
  sub_1D43B7B40();
  v39 = v12;
  sub_1D451BA0C();
  if (v11)
  {
    sub_1D4375D90();
  }
  else
  {
    v35 = v13;
    v36 = v21;
    sub_1D42CB9F8();
    sub_1D43B9EB0(&qword_1EFE4F370, v26, MEMORY[0x1E0DEE128], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
    sub_1D435EA20();
    v27 = (uint64_t)v43;
    *v43 = a11;
    sub_1D43BA024();
    sub_1D42B4EF4(&qword_1EFE4BE68, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    v28 = v44;
    sub_1D435EA20();
    v29 = v42;
    (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v27 + *(int *)(v42 + 20), v20, v28);
    sub_1D42CB9F8();
    sub_1D43B9EB0(&qword_1EFE4F378, v30, MEMORY[0x1E0DEE128], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
    sub_1D435EA20();
    *(_DWORD *)(v27 + *(int *)(v29 + 24)) = v45;
    sub_1D42B4EF4(&qword_1EFE4F380, type metadata accessor for SNAOPReport.Payload, (uint64_t)&unk_1D453503C);
    v31 = v35;
    sub_1D435EA20();
    sub_1D43B9E38();
    sub_1D43AF870(v31, v27 + *(int *)(v29 + 28), type metadata accessor for SNAOPReport.Payload);
    sub_1D43AF844(v27, v37, type metadata accessor for SNAOPReport);
    sub_1D4375D90();
    v32 = sub_1D43B9FAC();
    sub_1D4325D80(v32, v33);
  }
  sub_1D42BE844();
}

void sub_1D43B7868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  SNAOPReport.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SHIDWORD(vars8));
}

uint64_t sub_1D43B787C(_QWORD *a1)
{
  return SNAOPReport.encode(to:)(a1);
}

uint64_t sub_1D43B7898()
{
  _BYTE v1[72];

  sub_1D451B958();
  sub_1D451B97C();
  sub_1D4519CE4();
  sub_1D42B4EF4(&qword_1EFE4BE30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1D451A614();
  sub_1D451B97C();
  sub_1D43B5A10((uint64_t)v1);
  return sub_1D451B994();
}

uint64_t sub_1D43B794C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2)
    goto LABEL_10;
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0)
    return swift_unknownObjectRetain();
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1D43B79C4()
{
  unint64_t result;

  result = qword_1EFE4F2C8;
  if (!qword_1EFE4F2C8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45351CC, &type metadata for SNAOPReport.SuccessPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F2C8);
  }
  return result;
}

unint64_t sub_1D43B7A00()
{
  unint64_t result;

  result = qword_1EFE4F2D0;
  if (!qword_1EFE4F2D0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453517C, &type metadata for SNAOPReport.SuccessPayload.NewDataAvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F2D0);
  }
  return result;
}

unint64_t sub_1D43B7A3C()
{
  unint64_t result;

  result = qword_1EFE4F2D8;
  if (!qword_1EFE4F2D8)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for SNAOPReport.AOPNewDataAvailable, &type metadata for SNAOPReport.AOPNewDataAvailable);
    atomic_store(result, (unint64_t *)&qword_1EFE4F2D8);
  }
  return result;
}

unint64_t sub_1D43B7A78()
{
  unint64_t result;

  result = qword_1EFE4F2E0;
  if (!qword_1EFE4F2E0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453512C, &type metadata for SNAOPReport.SuccessPayload.ClassificationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F2E0);
  }
  return result;
}

unint64_t sub_1D43B7AB4()
{
  unint64_t result;

  result = qword_1EFE4F308;
  if (!qword_1EFE4F308)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for SNAOPReport.AOPNewDataAvailable, &type metadata for SNAOPReport.AOPNewDataAvailable);
    atomic_store(result, (unint64_t *)&qword_1EFE4F308);
  }
  return result;
}

unint64_t sub_1D43B7AF0()
{
  unint64_t result;

  result = qword_1EFE4F320;
  if (!qword_1EFE4F320)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45350DC, &type metadata for SNAOPReport.AOPNewDataAvailable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F320);
  }
  return result;
}

uint64_t type metadata accessor for SNAOPReport(uint64_t a1)
{
  return sub_1D42BFA18(a1, (uint64_t *)&unk_1EFE4F3A0);
}

unint64_t sub_1D43B7B40()
{
  unint64_t result;

  result = qword_1EFE4F338;
  if (!qword_1EFE4F338)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453508C, &type metadata for SNAOPReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F338);
  }
  return result;
}

uint64_t type metadata accessor for SNAOPReport.Payload(uint64_t a1)
{
  return sub_1D42BFA18(a1, (uint64_t *)&unk_1EFE4F3C0);
}

void sub_1D43B7B90()
{
  sub_1D42B4EF4(&qword_1EFE4F388, type metadata accessor for SNAOPReport.SuccessPayload, (uint64_t)&protocol conformance descriptor for SNAOPReport.SuccessPayload);
}

unint64_t sub_1D43B7BC0()
{
  unint64_t result;

  result = qword_1EFE4F390;
  if (!qword_1EFE4F390)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for SNAOPReport.AOPNewDataAvailable, &type metadata for SNAOPReport.AOPNewDataAvailable);
    atomic_store(result, (unint64_t *)&qword_1EFE4F390);
  }
  return result;
}

void sub_1D43B7BFC()
{
  sub_1D42B4EF4(&qword_1EFE4F398, type metadata accessor for SNAOPReport, (uint64_t)&protocol conformance descriptor for SNAOPReport);
}

uint64_t *initializeBufferWithCopyOfBuffer for SNAOPReport(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1D4519CE4();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = a3[7];
    *(_DWORD *)((char *)v4 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
    v13 = (char *)v4 + v12;
    v14 = (char *)a2 + v12;
    type metadata accessor for SNAOPReport.Payload(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_DWORD *)v13 = *(_DWORD *)v14;
      v15 = *((_QWORD *)v14 + 2);
      *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
      *((_QWORD *)v13 + 2) = v15;
      swift_bridgeObjectRetain();
    }
    else
    {
      v17 = type metadata accessor for SNAOPReport.SuccessPayload(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        v11(v13, v14, v10);
        v18 = type metadata accessor for AOPClassificationResult();
        v11(&v13[*(int *)(v18 + 20)], &v14[*(int *)(v18 + 20)], v10);
        *(_QWORD *)&v13[*(int *)(v18 + 24)] = *(_QWORD *)&v14[*(int *)(v18 + 24)];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t destroy for SNAOPReport(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1D4519CE4();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = a1 + *(int *)(a2 + 28);
  type metadata accessor for SNAOPReport.Payload(0);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    type metadata accessor for SNAOPReport.SuccessPayload(0);
    result = swift_getEnumCaseMultiPayload();
    if ((_DWORD)result)
      return result;
    v6(v7, v5);
    v9 = type metadata accessor for AOPClassificationResult();
    v6(v7 + *(int *)(v9 + 20), v5);
  }
  return swift_bridgeObjectRelease();
}

_DWORD *initializeWithCopy for SNAOPReport(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D4519CE4();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = a3[7];
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  type metadata accessor for SNAOPReport.Payload(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_DWORD *)v12 = *(_DWORD *)v13;
    v14 = *((_QWORD *)v13 + 2);
    *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
    *((_QWORD *)v12 + 2) = v14;
    swift_bridgeObjectRetain();
  }
  else
  {
    v15 = type metadata accessor for SNAOPReport.SuccessPayload(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v10(v12, v13, v9);
      v16 = type metadata accessor for AOPClassificationResult();
      v10(&v12[*(int *)(v16 + 20)], &v13[*(int *)(v16 + 20)], v9);
      *(_QWORD *)&v12[*(int *)(v16 + 24)] = *(_QWORD *)&v13[*(int *)(v16 + 24)];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_DWORD *assignWithCopy for SNAOPReport(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D4519CE4();
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  if (a1 != a2)
  {
    v11 = a3[7];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    sub_1D4325D80((uint64_t)a1 + v11, type metadata accessor for SNAOPReport.Payload);
    type metadata accessor for SNAOPReport.Payload(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_DWORD *)v12 = *(_DWORD *)v13;
      *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
      *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
      swift_bridgeObjectRetain();
    }
    else
    {
      v14 = type metadata accessor for SNAOPReport.SuccessPayload(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v15 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
        v15(v12, v13, v9);
        v16 = type metadata accessor for AOPClassificationResult();
        v15(&v12[*(int *)(v16 + 20)], &v13[*(int *)(v16 + 20)], v9);
        *(_QWORD *)&v12[*(int *)(v16 + 24)] = *(_QWORD *)&v13[*(int *)(v16 + 24)];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_DWORD *initializeWithTake for SNAOPReport(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D4519CE4();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[7];
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for SNAOPReport.Payload(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = type metadata accessor for SNAOPReport.SuccessPayload(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v10(v12, v13, v9);
      v16 = type metadata accessor for AOPClassificationResult();
      v10(&v12[*(int *)(v16 + 20)], &v13[*(int *)(v16 + 20)], v9);
      *(_QWORD *)&v12[*(int *)(v16 + 24)] = *(_QWORD *)&v13[*(int *)(v16 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_DWORD *assignWithTake for SNAOPReport(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D4519CE4();
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  if (a1 != a2)
  {
    v11 = a3[7];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    sub_1D4325D80((uint64_t)a1 + v11, type metadata accessor for SNAOPReport.Payload);
    v14 = type metadata accessor for SNAOPReport.Payload(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v15 = type metadata accessor for SNAOPReport.SuccessPayload(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        v16 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
        v16(v12, v13, v9);
        v17 = type metadata accessor for AOPClassificationResult();
        v16(&v12[*(int *)(v17 + 20)], &v13[*(int *)(v17 + 20)], v9);
        *(_QWORD *)&v12[*(int *)(v17 + 24)] = *(_QWORD *)&v13[*(int *)(v17 + 24)];
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SNAOPReport()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D43B8448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1D43341C8();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = *(int *)(a3 + 20);
  }
  else
  {
    v7 = sub_1D43B9F8C();
    v8 = *(int *)(a3 + 28);
  }
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1 + v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for SNAOPReport()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D43B84B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = sub_1D43341C8();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = *(int *)(a4 + 20);
  }
  else
  {
    v9 = sub_1D43B9F8C();
    v10 = *(int *)(a4 + 28);
  }
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a1 + v10, a2, a2, v9);
}

uint64_t sub_1D43B851C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D4519CE4();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for SNAOPReport.Payload(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SNAOPReport.SuccessPayload(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    v8 = sub_1D4519CE4();
    v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    v9(a1, a2, v8);
    v10 = type metadata accessor for AOPClassificationResult();
    v9((uint64_t *)((char *)a1 + *(int *)(v10 + 20)), (uint64_t *)((char *)a2 + *(int *)(v10 + 20)), v8);
    *(uint64_t *)((char *)a1 + *(int *)(v10 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v10 + 24));
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for SNAOPReport.SuccessPayload(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)result)
  {
    v3 = sub_1D4519CE4();
    v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
    v4(a1, v3);
    v5 = type metadata accessor for AOPClassificationResult();
    v4(a1 + *(int *)(v5 + 20), v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *initializeWithCopy for SNAOPReport.SuccessPayload(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  uint64_t v8;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_1D4519CE4();
    v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
    v7(a1, a2, v6);
    v8 = type metadata accessor for AOPClassificationResult();
    v7(&a1[*(int *)(v8 + 20)], &a2[*(int *)(v8 + 20)], v6);
    *(_QWORD *)&a1[*(int *)(v8 + 24)] = *(_QWORD *)&a2[*(int *)(v8 + 24)];
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithCopy for SNAOPReport.SuccessPayload(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1D4325D80((uint64_t)a1, type metadata accessor for SNAOPReport.SuccessPayload);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_1D4519CE4();
      v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
      v7(a1, a2, v6);
      v8 = type metadata accessor for AOPClassificationResult();
      v7(&a1[*(int *)(v8 + 20)], &a2[*(int *)(v8 + 20)], v6);
      *(_QWORD *)&a1[*(int *)(v8 + 24)] = *(_QWORD *)&a2[*(int *)(v8 + 24)];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

char *initializeWithTake for SNAOPReport.SuccessPayload(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  uint64_t v8;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_1D4519CE4();
    v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
    v7(a1, a2, v6);
    v8 = type metadata accessor for AOPClassificationResult();
    v7(&a1[*(int *)(v8 + 20)], &a2[*(int *)(v8 + 20)], v6);
    *(_QWORD *)&a1[*(int *)(v8 + 24)] = *(_QWORD *)&a2[*(int *)(v8 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithTake for SNAOPReport.SuccessPayload(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1D4325D80((uint64_t)a1, type metadata accessor for SNAOPReport.SuccessPayload);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_1D4519CE4();
      v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      v8 = type metadata accessor for AOPClassificationResult();
      v7(&a1[*(int *)(v8 + 20)], &a2[*(int *)(v8 + 20)], v6);
      *(_QWORD *)&a1[*(int *)(v8 + 24)] = *(_QWORD *)&a2[*(int *)(v8 + 24)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1D43B8A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D43B9114(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for AOPClassificationResult);
}

ValueMetadata *type metadata accessor for SNAOPReport.AOPNewDataAvailable()
{
  return &type metadata for SNAOPReport.AOPNewDataAvailable;
}

uint64_t *sub_1D43B8A7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v6 = a2[2];
      a1[1] = a2[1];
      a1[2] = v6;
      swift_bridgeObjectRetain();
    }
    else
    {
      v8 = type metadata accessor for SNAOPReport.SuccessPayload(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        v9 = sub_1D4519CE4();
        v10 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
        v10(a1, a2, v9);
        v11 = type metadata accessor for AOPClassificationResult();
        v10((uint64_t *)((char *)a1 + *(int *)(v11 + 20)), (uint64_t *)((char *)a2 + *(int *)(v11 + 20)), v9);
        *(uint64_t *)((char *)a1 + *(int *)(v11 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v11 + 24));
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D43B8BC8(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;

  if (swift_getEnumCaseMultiPayload() != 1)
  {
    type metadata accessor for SNAOPReport.SuccessPayload(0);
    result = swift_getEnumCaseMultiPayload();
    if ((_DWORD)result)
      return result;
    v3 = sub_1D4519CE4();
    v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
    v4(a1, v3);
    v5 = type metadata accessor for AOPClassificationResult();
    v4(a1 + *(int *)(v5 + 20), v3);
  }
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1D43B8C70(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v8;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v4 = a2[2];
    a1[1] = a2[1];
    a1[2] = v4;
    swift_bridgeObjectRetain();
  }
  else
  {
    v5 = type metadata accessor for SNAOPReport.SuccessPayload(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
    }
    else
    {
      v6 = sub_1D4519CE4();
      v7 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
      v7(a1, a2, v6);
      v8 = type metadata accessor for AOPClassificationResult();
      v7((_QWORD *)((char *)a1 + *(int *)(v8 + 20)), (_QWORD *)((char *)a2 + *(int *)(v8 + 20)), v6);
      *(_QWORD *)((char *)a1 + *(int *)(v8 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v8 + 24));
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1D43B8D90(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v7;

  if (a1 != a2)
  {
    sub_1D4325D80((uint64_t)a1, type metadata accessor for SNAOPReport.Payload);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
    }
    else
    {
      v4 = type metadata accessor for SNAOPReport.SuccessPayload(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
      }
      else
      {
        v5 = sub_1D4519CE4();
        v6 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
        v6(a1, a2, v5);
        v7 = type metadata accessor for AOPClassificationResult();
        v6((_QWORD *)((char *)a1 + *(int *)(v7 + 20)), (_QWORD *)((char *)a2 + *(int *)(v7 + 20)), v5);
        *(_QWORD *)((char *)a1 + *(int *)(v7 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 24));
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1D43B8ED0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for SNAOPReport.SuccessPayload(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      v7 = sub_1D4519CE4();
      v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
      v8(a1, a2, v7);
      v9 = type metadata accessor for AOPClassificationResult();
      v8(&a1[*(int *)(v9 + 20)], &a2[*(int *)(v9 + 20)], v7);
      *(_QWORD *)&a1[*(int *)(v9 + 24)] = *(_QWORD *)&a2[*(int *)(v9 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1D43B8FDC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;

  if (a1 != a2)
  {
    sub_1D4325D80((uint64_t)a1, type metadata accessor for SNAOPReport.Payload);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for SNAOPReport.SuccessPayload(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      else
      {
        v7 = sub_1D4519CE4();
        v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
        v8(a1, a2, v7);
        v9 = type metadata accessor for AOPClassificationResult();
        v8(&a1[*(int *)(v9 + 20)], &a2[*(int *)(v9 + 20)], v7);
        *(_QWORD *)&a1[*(int *)(v9 + 24)] = *(_QWORD *)&a2[*(int *)(v9 + 24)];
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1D43B9100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D43B9114(a1, a2, a3, type metadata accessor for SNAOPReport.SuccessPayload);
}

uint64_t sub_1D43B9114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v5;

  result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SNAOPReport.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D43B91C8 + 4 * byte_1D4534929[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D43B91FC + 4 * byte_1D4534924[v4]))();
}

uint64_t sub_1D43B91FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43B9204(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D43B920CLL);
  return result;
}

uint64_t sub_1D43B9218(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D43B9220);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D43B9224(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43B922C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SNAOPReport.CodingKeys()
{
  return &type metadata for SNAOPReport.CodingKeys;
}

ValueMetadata *type metadata accessor for SNAOPReport.AOPNewDataAvailable.CodingKeys()
{
  return &type metadata for SNAOPReport.AOPNewDataAvailable.CodingKeys;
}

ValueMetadata *type metadata accessor for SNAOPReport.SuccessPayload.CodingKeys()
{
  return &type metadata for SNAOPReport.SuccessPayload.CodingKeys;
}

ValueMetadata *type metadata accessor for SNAOPReport.SuccessPayload.ClassificationsCodingKeys()
{
  return &type metadata for SNAOPReport.SuccessPayload.ClassificationsCodingKeys;
}

ValueMetadata *type metadata accessor for SNAOPReport.SuccessPayload.NewDataAvailableCodingKeys()
{
  return &type metadata for SNAOPReport.SuccessPayload.NewDataAvailableCodingKeys;
}

unint64_t sub_1D43B9294()
{
  unint64_t result;

  result = qword_1EFE4F3D0;
  if (!qword_1EFE4F3D0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4534CCC, &type metadata for SNAOPReport.SuccessPayload.NewDataAvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F3D0);
  }
  return result;
}

unint64_t sub_1D43B92D4()
{
  unint64_t result;

  result = qword_1EFE4F3D8;
  if (!qword_1EFE4F3D8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4534D84, &type metadata for SNAOPReport.SuccessPayload.ClassificationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F3D8);
  }
  return result;
}

unint64_t sub_1D43B9314()
{
  unint64_t result;

  result = qword_1EFE4F3E0;
  if (!qword_1EFE4F3E0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4534E3C, &type metadata for SNAOPReport.SuccessPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F3E0);
  }
  return result;
}

unint64_t sub_1D43B9354()
{
  unint64_t result;

  result = qword_1EFE4F3E8;
  if (!qword_1EFE4F3E8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4534EF4, &type metadata for SNAOPReport.AOPNewDataAvailable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F3E8);
  }
  return result;
}

unint64_t sub_1D43B9394()
{
  unint64_t result;

  result = qword_1EFE4F3F0;
  if (!qword_1EFE4F3F0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4534FAC, &type metadata for SNAOPReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F3F0);
  }
  return result;
}

void sub_1D43B93D0()
{
  sub_1D42B4EF4(&qword_1EFE4F3F8, type metadata accessor for SNAOPReport.Payload, (uint64_t)&unk_1D4534FD4);
}

unint64_t sub_1D43B9400()
{
  unint64_t result;

  result = qword_1EFE4F400;
  if (!qword_1EFE4F400)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4534F1C, &type metadata for SNAOPReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F400);
  }
  return result;
}

unint64_t sub_1D43B9440()
{
  unint64_t result;

  result = qword_1EFE4F408;
  if (!qword_1EFE4F408)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4534F44, &type metadata for SNAOPReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F408);
  }
  return result;
}

unint64_t sub_1D43B9480()
{
  unint64_t result;

  result = qword_1EFE4F410;
  if (!qword_1EFE4F410)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4534E64, &type metadata for SNAOPReport.AOPNewDataAvailable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F410);
  }
  return result;
}

unint64_t sub_1D43B94C0()
{
  unint64_t result;

  result = qword_1EFE4F418;
  if (!qword_1EFE4F418)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4534E8C, &type metadata for SNAOPReport.AOPNewDataAvailable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F418);
  }
  return result;
}

unint64_t sub_1D43B9500()
{
  unint64_t result;

  result = qword_1EFE4F420;
  if (!qword_1EFE4F420)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4534CF4, &type metadata for SNAOPReport.SuccessPayload.ClassificationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F420);
  }
  return result;
}

unint64_t sub_1D43B9540()
{
  unint64_t result;

  result = qword_1EFE4F428;
  if (!qword_1EFE4F428)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4534D1C, &type metadata for SNAOPReport.SuccessPayload.ClassificationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F428);
  }
  return result;
}

unint64_t sub_1D43B9580()
{
  unint64_t result;

  result = qword_1EFE4F430;
  if (!qword_1EFE4F430)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4534C3C, &type metadata for SNAOPReport.SuccessPayload.NewDataAvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F430);
  }
  return result;
}

unint64_t sub_1D43B95C0()
{
  unint64_t result;

  result = qword_1EFE4F438;
  if (!qword_1EFE4F438)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4534C64, &type metadata for SNAOPReport.SuccessPayload.NewDataAvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F438);
  }
  return result;
}

unint64_t sub_1D43B9600()
{
  unint64_t result;

  result = qword_1EFE4F440;
  if (!qword_1EFE4F440)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4534DAC, &type metadata for SNAOPReport.SuccessPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F440);
  }
  return result;
}

unint64_t sub_1D43B9640()
{
  unint64_t result;

  result = qword_1EFE4F448;
  if (!qword_1EFE4F448)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4534DD4, &type metadata for SNAOPReport.SuccessPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F448);
  }
  return result;
}

unint64_t sub_1D43B967C()
{
  unint64_t result;

  result = qword_1EFE4F468;
  if (!qword_1EFE4F468)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453561C, &type metadata for SNAOPReport.Payload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F468);
  }
  return result;
}

unint64_t sub_1D43B96B8()
{
  unint64_t result;

  result = qword_1EFE4F470;
  if (!qword_1EFE4F470)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45355CC, &type metadata for SNAOPReport.Payload.FailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F470);
  }
  return result;
}

unint64_t sub_1D43B96F4()
{
  unint64_t result;

  result = qword_1EFE4F478;
  if (!qword_1EFE4F478)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45355A4, &type metadata for SNAOPReport.AOPError);
    atomic_store(result, (unint64_t *)&qword_1EFE4F478);
  }
  return result;
}

unint64_t sub_1D43B9730()
{
  unint64_t result;

  result = qword_1EFE4F480;
  if (!qword_1EFE4F480)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4535554, &type metadata for SNAOPReport.Payload.SuccessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F480);
  }
  return result;
}

unint64_t sub_1D43B976C()
{
  unint64_t result;

  result = qword_1EFE4F4A8;
  if (!qword_1EFE4F4A8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453552C, &type metadata for SNAOPReport.AOPError);
    atomic_store(result, (unint64_t *)&qword_1EFE4F4A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SNAOPReport.Payload.CodingKeys()
{
  return &type metadata for SNAOPReport.Payload.CodingKeys;
}

ValueMetadata *type metadata accessor for SNAOPReport.Payload.SuccessCodingKeys()
{
  return &type metadata for SNAOPReport.Payload.SuccessCodingKeys;
}

uint64_t _s13SoundAnalysis11SNAOPReportV19AOPNewDataAvailableV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D43B9808 + 4 * byte_1D453492E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D43B9828 + 4 * byte_1D4534933[v4]))();
}

_BYTE *sub_1D43B9808(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D43B9828(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D43B9830(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D43B9838(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D43B9840(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D43B9848(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SNAOPReport.Payload.FailureCodingKeys()
{
  return &type metadata for SNAOPReport.Payload.FailureCodingKeys;
}

uint64_t destroy for SNAOPReport.AOPError()
{
  return swift_bridgeObjectRelease();
}

void _s13SoundAnalysis11SNAOPReportV8AOPErrorVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  sub_1D42B6E24();
}

uint64_t assignWithCopy for SNAOPReport.AOPError(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SNAOPReport.AOPError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SNAOPReport.AOPError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SNAOPReport.AOPError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SNAOPReport.AOPError()
{
  return &type metadata for SNAOPReport.AOPError;
}

unint64_t sub_1D43B99B4()
{
  unint64_t result;

  result = qword_1EFE4F4C0;
  if (!qword_1EFE4F4C0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453525C, &type metadata for SNAOPReport.AOPError);
    atomic_store(result, (unint64_t *)&qword_1EFE4F4C0);
  }
  return result;
}

unint64_t sub_1D43B99F4()
{
  unint64_t result;

  result = qword_1EFE4F4C8;
  if (!qword_1EFE4F4C8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4535354, &type metadata for SNAOPReport.Payload.FailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F4C8);
  }
  return result;
}

unint64_t sub_1D43B9A34()
{
  unint64_t result;

  result = qword_1EFE4F4D0;
  if (!qword_1EFE4F4D0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453540C, &type metadata for SNAOPReport.Payload.SuccessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F4D0);
  }
  return result;
}

unint64_t sub_1D43B9A74()
{
  unint64_t result;

  result = qword_1EFE4F4D8;
  if (!qword_1EFE4F4D8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45354C4, &type metadata for SNAOPReport.Payload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F4D8);
  }
  return result;
}

unint64_t sub_1D43B9AB4()
{
  unint64_t result;

  result = qword_1EFE4F4E0;
  if (!qword_1EFE4F4E0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453537C, &type metadata for SNAOPReport.Payload.SuccessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F4E0);
  }
  return result;
}

unint64_t sub_1D43B9AF4()
{
  unint64_t result;

  result = qword_1EFE4F4E8;
  if (!qword_1EFE4F4E8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45353A4, &type metadata for SNAOPReport.Payload.SuccessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F4E8);
  }
  return result;
}

unint64_t sub_1D43B9B34()
{
  unint64_t result;

  result = qword_1EFE4F4F0;
  if (!qword_1EFE4F4F0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45352C4, &type metadata for SNAOPReport.Payload.FailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F4F0);
  }
  return result;
}

unint64_t sub_1D43B9B74()
{
  unint64_t result;

  result = qword_1EFE4F4F8;
  if (!qword_1EFE4F4F8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45352EC, &type metadata for SNAOPReport.Payload.FailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F4F8);
  }
  return result;
}

unint64_t sub_1D43B9BB4()
{
  unint64_t result;

  result = qword_1EFE4F500;
  if (!qword_1EFE4F500)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4535434, &type metadata for SNAOPReport.Payload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F500);
  }
  return result;
}

unint64_t sub_1D43B9BF4()
{
  unint64_t result;

  result = qword_1EFE4F508;
  if (!qword_1EFE4F508)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453545C, &type metadata for SNAOPReport.Payload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F508);
  }
  return result;
}

unint64_t sub_1D43B9C30()
{
  unint64_t result;

  result = qword_1EFE4F518;
  if (!qword_1EFE4F518)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4535724, &type metadata for SNAOPReport.AOPError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F518);
  }
  return result;
}

uint64_t _s13SoundAnalysis11SNAOPReportV14SuccessPayloadO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D43B9CB8 + 4 * byte_1D453493D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D43B9CEC + 4 * byte_1D4534938[v4]))();
}

uint64_t sub_1D43B9CEC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43B9CF4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D43B9CFCLL);
  return result;
}

uint64_t sub_1D43B9D08(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D43B9D10);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D43B9D14(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43B9D1C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SNAOPReport.AOPError.CodingKeys()
{
  return &type metadata for SNAOPReport.AOPError.CodingKeys;
}

unint64_t sub_1D43B9D3C()
{
  unint64_t result;

  result = qword_1EFE4F540;
  if (!qword_1EFE4F540)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45356FC, &type metadata for SNAOPReport.AOPError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F540);
  }
  return result;
}

unint64_t sub_1D43B9D7C()
{
  unint64_t result;

  result = qword_1EFE4F548;
  if (!qword_1EFE4F548)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453566C, &type metadata for SNAOPReport.AOPError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F548);
  }
  return result;
}

unint64_t sub_1D43B9DBC()
{
  unint64_t result;

  result = qword_1EFE4F550[0];
  if (!qword_1EFE4F550[0])
  {
    result = MEMORY[0x1D825E41C](&unk_1D4535694, &type metadata for SNAOPReport.AOPError.CodingKeys);
    atomic_store(result, qword_1EFE4F550);
  }
  return result;
}

uint64_t sub_1D43B9DF8()
{
  return sub_1D451B610();
}

uint64_t sub_1D43B9E10@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_1D43B9E1C()
{
  return 0;
}

uint64_t sub_1D43B9E38()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 160) + 8))(v0, *(_QWORD *)(v1 - 144));
}

uint64_t sub_1D43B9E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D43B794C(1, a2, v2, v2 + 32, 0, (2 * a2) | 1);
}

uint64_t sub_1D43B9E70()
{
  return sub_1D451B454();
}

void sub_1D43B9E90(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_1D4325D80(v2, a2);
}

uint64_t sub_1D43B9E98()
{
  uint64_t v0;
  _QWORD *v1;

  *v1 = v0;
  return sub_1D451B61C();
}

uint64_t sub_1D43B9EB0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_1D437DB2C(a1, v4, a3, a4);
}

uint64_t sub_1D43B9EB8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43B9ECC()
{
  return 0;
}

uint64_t sub_1D43B9F04()
{
  return 0;
}

void sub_1D43B9F20(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1D43B9F3C()
{
  return 0;
}

uint64_t sub_1D43B9F58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, a2, v2);
}

void sub_1D43B9F6C(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_1D4325D80(a1, v1);
}

uint64_t sub_1D43B9F8C()
{
  return type metadata accessor for SNAOPReport.Payload(0);
}

uint64_t sub_1D43B9F94()
{
  return sub_1D451B6F4();
}

uint64_t sub_1D43B9FA4()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1D43B9FAC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D43B9FB8()
{
  return sub_1D451B6D0();
}

void sub_1D43B9FC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_1D43AF844(v3, v4, a3);
}

uint64_t sub_1D43B9FD0()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1D43B9FD8()
{
  return sub_1D451A74C();
}

uint64_t sub_1D43B9FE4()
{
  return sub_1D451B97C();
}

uint64_t sub_1D43B9FEC()
{
  return sub_1D451A614();
}

uint64_t sub_1D43B9FF8()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1D43BA004()
{
  return sub_1D451BA0C();
}

uint64_t sub_1D43BA010()
{
  uint64_t v0;

  return v0 - 68;
}

void sub_1D43BA024()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 70) = 1;
}

unint64_t sub_1D43BA030()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 104) = 1;
  return sub_1D43B96B8();
}

unint64_t sub_1D43BA03C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_1D43B7A00();
}

uint64_t sub_1D43BA048()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1D43BA0AC(uint64_t (*a1)(uint64_t), void (*a2)(uint64_t, uint64_t))
{
  _QWORD *v2;
  os_unfair_lock_s *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);

  v5 = *(os_unfair_lock_s **)(v2[6] + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  result = swift_beginAccess();
  v7 = v2[4];
  v8 = v2[5] >> 1;
  v9 = __OFSUB__(v8, v7);
  v10 = v8 - v7;
  if (v9)
  {
    __break(1u);
  }
  else
  {
    if (v10 < 1)
      v11 = 0;
    else
      v11 = sub_1D43BA16C(a1, a2);
    os_unfair_lock_unlock(v5);
    swift_release();
    return (uint64_t)v11;
  }
  return result;
}

uint64_t (*sub_1D43BA16C(uint64_t (*result)(uint64_t), void (*a2)(uint64_t, uint64_t)))(uint64_t)
{
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v2[2];
  v4 = v2[3];
  if (v3 == v4 >> 1)
  {
    __break(1u);
  }
  else if (v3 < (uint64_t)(v4 >> 1))
  {
    v6 = v2[1] + 16 * v3;
    v7 = *(_QWORD *)v6;
    v8 = *(unsigned __int8 *)(v6 + 8);
    v9 = result(v3 + 1);
    v11 = v10;
    v13 = v12;
    v15 = v14;
    a2(v7, v8);
    swift_unknownObjectRelease();
    *v2 = v9;
    v2[1] = v11;
    v2[2] = v13;
    v2[3] = v15;
    return (uint64_t (*)(uint64_t))v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D43BA21C()
{
  sub_1D451A794();
  sub_1D451A794();
  sub_1D451A794();
  sub_1D451A794();
  sub_1D4334D9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43BA2C4(uint64_t a1)
{
  unint64_t v1;
  _QWORD v3[3];

  v3[2] = a1;
  sub_1D430740C();
  return sub_1D43BB1F8(102, v1, (void (*)(uint64_t *__return_ptr))sub_1D43BB1C0, (uint64_t)v3, (void (*)(uint64_t *))sub_1D43BA308);
}

uint64_t sub_1D43BA308(uint64_t a1)
{
  return sub_1D43BA94C(a1);
}

uint64_t sub_1D43BA31C(const void *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  int v6;
  _QWORD *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE v13[136];
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[128];
  _QWORD v18[18];

  v18[16] = *MEMORY[0x1E0C80C00];
  v5 = *a2;
  v12 = sub_1D4519D20();
  MEMORY[0x1E0C80A78](v12);
  sub_1D434936C(a1, v17);
  sub_1D434936C(v17, v18);
  v6 = sub_1D43493A8(v18);
  v7 = sub_1D43493B4(v18);
  if (v6 != 1 || (memcpy(v13, v7, 0x80uLL), result = sub_1D443D090((uint64_t)v13), !v2))
  {
    swift_beginAccess();
    if (*(_QWORD *)(a2[3] + 16) < a2[5])
    {
      v9 = *(_QWORD *)(v5 + 96);
      v10 = *(_QWORD *)(v5 + 112);
      swift_retain();
      v14 = *(_OWORD *)(v5 + 80);
      v15 = v9;
      v16 = v10;
      _s14descr1E97B8181C17ServerEnvironmentCMa();
    }
    sub_1D43778D4();
    swift_allocError();
    *v11 = 1;
    return swift_willThrow();
  }
  return result;
}

void sub_1D43BA624()
{
  void *v0;

  sub_1D430740C();
  sub_1D43BB1DC();
  if (v0)
  {
    sub_1D4473640(v0);
    sub_1D42D71D8();
    sub_1D43778D4();
    swift_willThrowTypedImpl();
  }
  sub_1D42F1EB4();
}

uint64_t sub_1D43BA6A0(uint64_t a1)
{
  return nullsub_1(a1);
}

uint64_t sub_1D43BA6C4(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 16) == 16)
  {
    swift_beginAccess();
    sub_1D42E809C();
    swift_endAccess();
    return swift_release();
  }
  else
  {
    sub_1D43BB038();
    swift_allocError();
    return swift_willThrow();
  }
}

void sub_1D43BA768()
{
  sub_1D430740C();
  sub_1D4473E34();
  sub_1D43BB1EC();
}

uint64_t sub_1D43BA7C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void *v9;
  char v10;
  void *v11;
  char v12;
  char v13;

  if (*(_QWORD *)(a1 + 16) != 16)
  {
    sub_1D43BB038();
    swift_allocError();
    return swift_willThrow();
  }
  swift_beginAccess();
  v6 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1D4364AE8(a1, v6);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v7)
    goto LABEL_11;
  v9 = (void *)sub_1D43BA0AC((uint64_t (*)(uint64_t))sub_1D43B7948, (void (*)(uint64_t, uint64_t))sub_1D43BB194);
  v11 = v9;
  if (!v10)
  {
    result = swift_release();
    v12 = v11 & 1;
    goto LABEL_12;
  }
  if (v10 == 1)
  {
    v13 = sub_1D4473640(v9);
    sub_1D43BB16C(v11, 1);
    result = swift_release();
    v12 = v13 | 0x40;
    goto LABEL_12;
  }
  if (v10 != 2)
  {
    result = swift_release();
LABEL_11:
    v12 = -4;
    goto LABEL_12;
  }
  result = swift_release();
  v12 = 0x80;
LABEL_12:
  *a3 = v12;
  return result;
}

uint64_t sub_1D43BA914()
{
  unint64_t v0;
  uint64_t v1;

  sub_1D430740C();
  return sub_1D43BB1F8(97, v0, (void (*)(uint64_t *__return_ptr))sub_1D43BB08C, v1, (void (*)(uint64_t *))sub_1D43BA308);
}

uint64_t sub_1D43BA94C(uint64_t result)
{
  if (*(_QWORD *)(*(_QWORD *)result + 16) != 16)
  {
    sub_1D43BB038();
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1D43BA9A4(uint64_t a1)
{
  uint64_t v2;
  _BYTE *v3;

  v2 = sub_1D4519D20();
  MEMORY[0x1E0C80A78](v2);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16) < *(_QWORD *)(a1 + 48))
    _s14descr1E97B8181C17ServerEnvironmentCMa();
  sub_1D43778D4();
  swift_allocError();
  *v3 = 1;
  return swift_willThrow();
}

void sub_1D43BAC04()
{
  void *v0;

  sub_1D430740C();
  sub_1D43BB1DC();
  if (v0)
  {
    sub_1D4473640(v0);
    sub_1D42D71D8();
    sub_1D43778D4();
    swift_willThrowTypedImpl();
  }
  sub_1D42F1EB4();
}

uint64_t sub_1D43BAC80(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 16) == 16)
  {
    swift_beginAccess();
    sub_1D42E80B0();
    swift_endAccess();
    return swift_release();
  }
  else
  {
    sub_1D43BB038();
    swift_allocError();
    return swift_willThrow();
  }
}

void sub_1D43BAD24()
{
  sub_1D430740C();
  sub_1D4473E34();
  sub_1D43BB1EC();
}

void sub_1D43BAD80(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char v9;
  void *v10;
  char v11;
  char v12;

  if (*(_QWORD *)(a1 + 16) != 16)
  {
    sub_1D43BB038();
    swift_allocError();
    swift_willThrow();
    return;
  }
  swift_beginAccess();
  v6 = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1D4364AE8(a1, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v7)
    goto LABEL_11;
  v8 = (void *)sub_1D43BA0AC((uint64_t (*)(uint64_t))sub_1D43B7948, (void (*)(uint64_t, uint64_t))sub_1D43BB1D8);
  v10 = v8;
  if (!v9)
  {
    swift_release();
    *a3 = (char)v10;
    return;
  }
  if (v9 == 1)
  {
    sub_1D43BB194(v8, 1);
    v12 = sub_1D4473640(v10);
    swift_release();
    sub_1D43BB16C(v10, 1);
    sub_1D43BB16C(v10, 1);
    v11 = v12 | 0x40;
    goto LABEL_12;
  }
  if (v9 != 2)
  {
    swift_release();
LABEL_11:
    v11 = -16;
    goto LABEL_12;
  }
  swift_release();
  v11 = 0x80;
LABEL_12:
  *a3 = v11;
}

uint64_t sub_1D43BAEE8()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D43BAF14()
{
  sub_1D43BAEE8();
  return swift_deallocClassInstance();
}

void _s14descr1E97BB559C7HandlerCMa()
{
  JUMPOUT(0x1D825E3A4);
}

uint64_t sub_1D43BAF40()
{
  return sub_1D43BA21C();
}

uint64_t sub_1D43BAF60()
{
  return sub_1D43BA914();
}

uint64_t sub_1D43BAF80(uint64_t a1)
{
  return sub_1D43BA2C4(a1);
}

void sub_1D43BAFA0()
{
  sub_1D43BAC04();
}

void sub_1D43BAFC0()
{
  sub_1D43BA624();
}

void sub_1D43BAFE0()
{
  sub_1D43BAD24();
}

void sub_1D43BB000()
{
  sub_1D43BA768();
}

void sub_1D43BB020(char *a1@<X8>)
{
  uint64_t v1;

  sub_1D43BAD80(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_1D43BB038()
{
  unint64_t result;

  result = qword_1EFE4F5D8[0];
  if (!qword_1EFE4F5D8[0])
  {
    result = MEMORY[0x1D825E41C](&unk_1D453F5E4, &type metadata for XValidation.DomainError);
    atomic_store(result, qword_1EFE4F5D8);
  }
  return result;
}

uint64_t sub_1D43BB074()
{
  uint64_t v0;

  return sub_1D43BAC80(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1D43BB08C()
{
  uint64_t v0;

  return sub_1D43BA9A4(v0);
}

size_t sub_1D43BB0A4(size_t result, unint64_t a2)
{
  const void *v3;
  int64_t v4;
  _QWORD *v5;

  if (!result)
    return MEMORY[0x1E0DEE9D8];
  v3 = (const void *)result;
  v4 = a2 - result;
  if (a2 == result)
    return MEMORY[0x1E0DEE9D8];
  if (v4 < 1)
  {
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (!a2)
      goto LABEL_13;
  }
  else
  {
    sub_1D42B28FC(&qword_1EFE40408);
    v5 = (_QWORD *)swift_allocObject();
    result = j__malloc_size(v5);
    v5[2] = v4;
    v5[3] = 2 * result - 64;
    if (!a2)
      goto LABEL_13;
  }
  if ((unint64_t)v3 < a2)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      memmove(v5 + 4, v3, v4);
      return (size_t)v5;
    }
    __break(1u);
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1D43BB154@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1D43BA7C4(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_1D43BB16C(id a1, char a2)
{
  if (a2 != -1)
    sub_1D43BB180(a1, a2);
}

void sub_1D43BB180(id a1, char a2)
{
  if (a2 == 1)

}

id sub_1D43BB194(id result, char a2)
{
  if (a2 == 1)
    return result;
  return result;
}

uint64_t sub_1D43BB1A8()
{
  uint64_t v0;

  return sub_1D43BA6C4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1D43BB1C0()
{
  uint64_t v0;

  return sub_1D43BA31C(*(const void **)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_1D43BB1DC()
{
  return sub_1D4473908();
}

uint64_t sub_1D43BB1F8(uint64_t a1, unint64_t a2, void (*a3)(uint64_t *__return_ptr), uint64_t a4, void (*a5)(uint64_t *))
{
  return sub_1D4473DAC(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a2, a3, a4, a5);
}

uint64_t sub_1D43BB204()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1D43BB20C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D43BB294(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    *v10 = *v11;
    v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFF8);
    *v12 = *v13;
    *(_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_1D43BB374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  *(_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D43BB3F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  *(_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D43BB46C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  *(_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D43BB4E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  *(_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D43BB564(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)((((((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v6, v4);
    }
  }
  else
  {
    if (((((((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1D43BB5F0 + 4 * byte_1D45357E0[v11]))();
  }
}

void sub_1D43BB680(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
  }
  else
  {
    if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1D43BB77C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0x7FFFFFFF)
    {
      v8 = (_QWORD *)((((((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      if ((a2 & 0x80000000) != 0)
        v9 = a2 ^ 0x80000000;
      else
        v9 = (a2 - 1);
      *v8 = v9;
    }
    else
    {
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v5, a2, a3, a4);
    }
  }
  return result;
}

void type metadata accessor for SliceWithStride()
{
  JUMPOUT(0x1D825E3A4);
}

uint64_t sub_1D43BB824()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D43BB89C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 >= a2)
  {
    if ((_DWORD)v6)
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v6, v4);
    return 0;
  }
  if (((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
    v7 = 2;
  else
    v7 = a2 - v6 + 1;
  if (v7 >= 0x10000)
    v8 = 4;
  else
    v8 = 2;
  if (v7 < 0x100)
    v8 = 1;
  if (v7 >= 2)
    v9 = v8;
  else
    v9 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1D43BB90C + 4 * byte_1D45357EF[v9]))();
}

void sub_1D43BB960(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 >= a3)
  {
    v12 = 0u;
  }
  else
  {
    v9 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
  }
  if (a2 > v7)
  {
    if ((_DWORD)v8)
    {
      v13 = ~v7 + a2;
      bzero(a1, v8);
      *a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t sub_1D43BBA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  *(_BYTE *)(v4 + v5) = 0;
  if ((_DWORD)a2)
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v4, a2, a3, a4);
  return result;
}

void sub_1D43BBA7C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_WORD *)(v2 + v3) = 0;
  if (!a2)
    JUMPOUT(0x1D43BBA84);
  JUMPOUT(0x1D43BBA64);
}

uint64_t type metadata accessor for MaximumSlice(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MaximumSlice);
}

void sub_1D43BBAA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t AssociatedConformanceWitness;
  _QWORD v12[8];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v12[7] = a4;
  v15 = a1;
  v16 = a3;
  v13 = *(_QWORD *)(a2 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v4 = MEMORY[0x1E0C80A78](a1);
  v6 = *(_QWORD *)(v5 + 16);
  v12[5] = v5;
  v17 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v4);
  v12[6] = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  v8 = sub_1D451AA1C();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = MEMORY[0x1D825E41C](MEMORY[0x1E0DEAF38], v8);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v18 = v8;
  v19 = AssociatedTypeWitness;
  v20 = v10;
  v21 = AssociatedConformanceWitness;
  sub_1D43BDA68();
  v12[4] = sub_1D451A14C();
  sub_1D451B9E8();
  sub_1D4375CA8();
}

void sub_1D43BBC18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v1 - 200) = a1;
  v2 = sub_1D451A0D4();
  v3 = sub_1D451A278();
  v4 = MEMORY[0x1D825E41C](MEMORY[0x1E0C95950], v2);
  v5 = MEMORY[0x1D825E41C](MEMORY[0x1E0C960B0], v3);
  *(_QWORD *)(v1 - 112) = v2;
  *(_QWORD *)(v1 - 104) = v3;
  *(_QWORD *)(v1 - 96) = v4;
  *(_QWORD *)(v1 - 88) = v5;
  sub_1D43BDA68();
  sub_1D451A0E0();
  sub_1D4375CA8();
}

void sub_1D43BBC88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 112) = v1;
  *(_QWORD *)(v4 - 104) = v2;
  *(_QWORD *)(v4 - 96) = a1;
  *(_QWORD *)(v4 - 88) = v3;
  sub_1D43BDA68();
  sub_1D451A0A4();
  sub_1D4375CA8();
}

void sub_1D43BBCA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 112) = v1;
  *(_QWORD *)(v4 - 104) = v2;
  *(_QWORD *)(v4 - 96) = a1;
  *(_QWORD *)(v4 - 88) = v3;
  sub_1D43BDA68();
  sub_1D451A128();
  sub_1D4375CA8();
}

void sub_1D43BBCD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 112) = v2;
  *(_QWORD *)(v4 - 104) = v1;
  *(_QWORD *)(v4 - 96) = v3;
  *(_QWORD *)(v4 - 88) = a1;
  type metadata accessor for ExpandResult();
}

void sub_1D43BBCE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v14 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v13 - 216) = a1;
  *(_QWORD *)(v13 - 208) = v14;
  sub_1D42BA1F0();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&a9 - v16;
  v18 = *(_QWORD *)(v13 - 176);
  v19 = *(_QWORD *)(v13 - 152);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 120) + 16))(v18, v19, v10);
  v20 = *(_QWORD *)(v13 - 160);
  v21 = *(_QWORD *)(v13 - 184);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v11, v19, v21);
  v22 = (*(unsigned __int8 *)(v20 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v23 = (char *)swift_allocObject();
  v24 = *(_QWORD *)(v13 - 128);
  *((_QWORD *)v23 + 2) = v9;
  *((_QWORD *)v23 + 3) = v24;
  v25 = *(_QWORD *)(v13 - 168);
  *((_QWORD *)v23 + 4) = v12;
  *((_QWORD *)v23 + 5) = v25;
  *((_QWORD *)v23 + 6) = *(_QWORD *)(v21 + 32);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(&v23[v22], v11, v21);
  sub_1D43D6770(1, (uint64_t)sub_1D43BD9C4, (uint64_t)v23, v9, *(_QWORD *)(v13 - 192), v12, *(_QWORD *)(v13 - 200), (uint64_t)v17);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 120) + 8))(v18, v9);
  v26 = *(_QWORD *)(v13 - 216);
  MEMORY[0x1D825E41C](&unk_1D453CE08, v26);
  sub_1D451A3F8();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 208) + 8))(v17, v26);
  sub_1D42CB520();
}

uint64_t sub_1D43BBE28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  float v35;
  uint64_t result;
  float v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  char *v55;
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t TupleTypeMetadata2;
  uint64_t AssociatedConformanceWitness;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v94 = a2;
  v75 = a6;
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v11 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v86 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v85 = (char *)&v68 - v13;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v84 = sub_1D451AECC();
  v83 = *(_QWORD *)(v84 - 8);
  v14 = MEMORY[0x1E0C80A78](v84);
  v82 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v81 = (char *)&v68 - v16;
  v17 = swift_getAssociatedTypeWitness();
  v79 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x1E0C80A78](v17);
  v78 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  v77 = (char *)&v68 - v21;
  v22 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = (char *)&v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v23);
  v98 = (char *)&v68 - v27;
  MEMORY[0x1E0C80A78](v26);
  v92 = (char *)&v68 - v28;
  v29 = sub_1D451AA1C();
  v30 = MEMORY[0x1D825E41C](MEMORY[0x1E0DEAF38], v29);
  v95 = v29;
  v101 = v29;
  v102 = MEMORY[0x1E0DEDCE8];
  v70 = v30;
  v103 = v30;
  v104 = MEMORY[0x1E0DEDD18];
  v31 = sub_1D451A14C();
  v72 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v71 = (char *)&v68 - v32;
  v80 = v17;
  v101 = sub_1D451A59C();
  v33 = swift_checkMetadataState();
  v93 = a1;
  v34 = v33;
  v35 = (float)sub_1D451ACA4();
  v73 = a3;
  v74 = a4;
  v99 = a5;
  result = type metadata accessor for MaximumSlice(0, a3, a4, a5);
  v91 = *(int *)(result + 44);
  v37 = ceilf(v35 / (float)*(uint64_t *)(v94 + v91));
  if ((~COERCE__INT64(v37) & 0x7FF0000000000000) == 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v37 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v37 >= 9.2234e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v38 = (uint64_t)v37;
  result = sub_1D451A974();
  if ((v38 & 0x8000000000000000) == 0)
  {
    v89 = v25;
    v90 = v22;
    v69 = v31;
    v39 = v92;
    v40 = v98;
    if (!v38)
    {
LABEL_14:
      v100 = v101;
      v66 = v71;
      sub_1D451A830();
      swift_bridgeObjectRelease();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      v67 = v69;
      sub_1D451A140();
      return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v66, v67);
    }
    v41 = 0;
    v76 = v38;
    v97 = v34;
    while (1)
    {
      v42 = *(_QWORD *)(v94 + v91);
      v43 = v42 * v41;
      if ((unsigned __int128)(v42 * (__int128)v41) >> 64 != (v42 * v41) >> 63)
        break;
      result = sub_1D451ACA4();
      v44 = result - v43;
      if (__OFSUB__(result, v43))
        goto LABEL_16;
      if (v44 >= v42)
        v44 = v42;
      v96 = v44;
      sub_1D451AC98();
      sub_1D451ACBC();
      v45 = v90;
      v46 = *(void (**)(char *, uint64_t))(v90 + 8);
      v46(v40, AssociatedTypeWitness);
      v47 = v39;
      v48 = v89;
      result = sub_1D451AC98();
      if (__OFADD__(v43, v96))
        goto LABEL_17;
      sub_1D451ACBC();
      v46(v48, AssociatedTypeWitness);
      result = sub_1D451A65C();
      if ((result & 1) == 0)
        goto LABEL_18;
      v49 = v47;
      ++v41;
      v50 = TupleTypeMetadata2;
      v51 = v85;
      v52 = &v85[*(int *)(TupleTypeMetadata2 + 48)];
      v53 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
      v53(v85, v49, AssociatedTypeWitness);
      v53(v52, v98, AssociatedTypeWitness);
      v54 = v86;
      v55 = &v86[*(int *)(v50 + 48)];
      v53(v86, v51, AssociatedTypeWitness);
      v53(v55, v52, AssociatedTypeWitness);
      v56 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
      v57 = v82;
      v56(v82, v54, AssociatedTypeWitness);
      v46(v55, AssociatedTypeWitness);
      v58 = &v54[*(int *)(v50 + 48)];
      v56(v54, v51, AssociatedTypeWitness);
      v56(v58, v52, AssociatedTypeWitness);
      v59 = v84;
      v56(&v57[*(int *)(v84 + 36)], v58, AssociatedTypeWitness);
      v46(v54, AssociatedTypeWitness);
      v60 = v83;
      v61 = v81;
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v81, v57, v59);
      v62 = v77;
      sub_1D451AD94();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v59);
      v63 = v79;
      v64 = v80;
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v78, v62, v80);
      v40 = v98;
      sub_1D451A9F8();
      v65 = *(void (**)(char *, uint64_t))(v63 + 8);
      v39 = v92;
      v65(v62, v64);
      v46(v40, AssociatedTypeWitness);
      result = ((uint64_t (*)(char *, uint64_t))v46)(v39, AssociatedTypeWitness);
      if (v76 == v41)
        goto LABEL_14;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_22:
  __break(1u);
  return result;
}

void sub_1D43BC5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D43BBAA8(a1, a4, a2, a3);
}

uint64_t sub_1D43BC5E8()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1D43BC608(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  v4 = *(_QWORD *)(v3 + *(int *)(a3 + 60));
  v5 = result - v4;
  if (__OFSUB__(result, v4))
  {
    __break(1u);
    goto LABEL_10;
  }
  v6 = *(_QWORD *)(v3 + *(int *)(a3 + 64));
  v7 = __OFADD__(v5, v6);
  v8 = v5 + v6;
  if (v7)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (!v6)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v6 != -1 || v8 != 0x8000000000000000)
    return (v8 / v6) & ~((v8 / v6) >> 63);
LABEL_12:
  __break(1u);
  return result;
}

void sub_1D43BC658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[28];

  v12[13] = a4;
  v12[20] = a3;
  v12[18] = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a2 - 8) + 64);
  v12[15] = *(_QWORD *)(a2 - 8);
  v12[16] = v4;
  v5 = MEMORY[0x1E0C80A78](a1);
  v12[14] = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[9] = *(_QWORD *)(*(_QWORD *)(v7 + 16) - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = v8;
  v12[17] = *(_QWORD *)(sub_1D451A0F8() - 8);
  sub_1D42BA1F0();
  MEMORY[0x1E0C80A78](v10);
  v12[21] = (char *)v12 - v11;
  v12[19] = *(_QWORD *)(v9 + 24);
  sub_1D451AA1C();
  sub_1D43BDA54();
  sub_1D43BDA74();
}

void sub_1D43BC76C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;

  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v4 - 128) = v2;
  *(_QWORD *)(v4 - 120) = v3;
  *(_QWORD *)(v4 - 112) = a1;
  *(_QWORD *)(v4 - 104) = AssociatedConformanceWitness;
  v7 = sub_1D451A14C();
  sub_1D43BDA54();
  swift_getAssociatedTypeWitness();
  *(_QWORD *)(v4 - 248) = sub_1D451AA1C();
  v8 = MEMORY[0x1E0C95AD0];
  *(_QWORD *)(v4 - 256) = v1;
  *(_QWORD *)(v4 - 264) = MEMORY[0x1D825E41C](v8, v1);
  *(_QWORD *)(v4 - 240) = v7;
  sub_1D43BDA74();
}

void sub_1D43BC820(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 272) = a1;
  *(_QWORD *)(v5 - 128) = v1;
  *(_QWORD *)(v5 - 120) = v2;
  *(_QWORD *)(v5 - 112) = v3;
  *(_QWORD *)(v5 - 104) = v4;
  *(_QWORD *)(v5 - 96) = a1;
  _s15StatefulFlatMapVMa();
}

void sub_1D43BC840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v15 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v14 - 224) = a1;
  *(_QWORD *)(v14 - 216) = v15;
  sub_1D42BA1F0();
  MEMORY[0x1E0C80A78](v16);
  *(_QWORD *)(v14 - 280) = (char *)&a9 - v17;
  v18 = *(_QWORD *)(v14 - 232);
  v19 = *(_QWORD *)(v14 - 208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v9, v19, v12);
  v20 = (_QWORD *)sub_1D43479CC();
  v21 = *(_QWORD *)(v14 - 152);
  v22 = *(_QWORD *)(v14 - 144);
  v20[2] = v12;
  v20[3] = v21;
  v20[4] = v22;
  v20[5] = v13;
  v23 = v13;
  v24 = v11;
  *(_QWORD *)(v14 - 296) = v11;
  v25 = *(_QWORD *)(v11 + 40);
  *(_QWORD *)(v14 - 288) = v25;
  v26 = *(_QWORD *)(v14 - 200);
  v20[6] = v25;
  v20[7] = v26;
  v20[8] = v10;
  v27 = v23;
  *(_QWORD *)(v14 - 304) = v23;
  sub_1D451A38C();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v9, v12);
  v29 = *(_QWORD *)(v14 - 192);
  v28 = *(_QWORD *)(v14 - 184);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v29, v19, v24);
  v30 = v28;
  v31 = (*(unsigned __int8 *)(v28 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v32 = (char *)swift_allocObject();
  v33 = *(_QWORD *)(v14 - 152);
  *((_QWORD *)v32 + 2) = v12;
  *((_QWORD *)v32 + 3) = v33;
  *((_QWORD *)v32 + 4) = v22;
  *((_QWORD *)v32 + 5) = v27;
  v34 = *(_QWORD *)(v14 - 288);
  *((_QWORD *)v32 + 6) = v34;
  *((_QWORD *)v32 + 7) = v26;
  *((_QWORD *)v32 + 8) = v10;
  (*(void (**)(char *, uint64_t, _QWORD))(v30 + 32))(&v32[v31], v29, *(_QWORD *)(v14 - 296));
  v35 = (_QWORD *)sub_1D43479CC();
  v35[2] = v12;
  v35[3] = v33;
  v36 = *(_QWORD *)(v14 - 304);
  v35[4] = *(_QWORD *)(v14 - 144);
  v35[5] = v36;
  v35[6] = v34;
  v35[7] = v26;
  v35[8] = v10;
  sub_1D448120C(1, (uint64_t)sub_1D43BD90C, *(_QWORD *)(v14 - 256), *(_QWORD *)(v14 - 240), *(_QWORD *)(v14 - 248), *(_QWORD *)(v14 - 280));
}

void sub_1D43BCA04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 168) + 8))(v0, v1);
  sub_1D43BDA74();
}

void sub_1D43BCA3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D451A3F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 216) + 8))(v1, v0);
  sub_1D42CB520();
}

BOOL sub_1D43BCA78()
{
  swift_getAssociatedTypeWitness();
  return sub_1D451ACA4() > 0;
}

void sub_1D43BCACC(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t AssociatedConformanceWitness;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[4];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t TupleTypeMetadata2;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v74 = a8;
  v80 = a6;
  v56 = a3;
  v78 = a1;
  v51 = a9;
  v79 = a10;
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v16 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v63 = (char *)v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v62 = (char *)v47 - v19;
  v72 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v66 = (char *)v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v68 = (char *)v47 - v23;
  MEMORY[0x1E0C80A78](v22);
  v67 = (char *)v47 - v24;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v81 = AssociatedTypeWitness;
  v65 = AssociatedConformanceWitness;
  v61 = sub_1D451AECC();
  v60 = *(_QWORD *)(v61 - 8);
  v26 = MEMORY[0x1E0C80A78](v61);
  v59 = (char *)v47 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x1E0C80A78](v26);
  v58 = (char *)v47 - v29;
  v54 = *(_QWORD *)(a5 - 8);
  v30 = MEMORY[0x1E0C80A78](v28);
  v53 = (char *)v47 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v77 = (char *)v47 - v32;
  v33 = sub_1D451AA1C();
  v34 = MEMORY[0x1D825E41C](MEMORY[0x1E0DEAF38], v33);
  v89 = v33;
  v90 = MEMORY[0x1E0DEDCE8];
  v47[1] = v34;
  v91 = v34;
  v92 = MEMORY[0x1E0DEDD18];
  v48 = sub_1D451A14C();
  v47[3] = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v47[2] = (char *)v47 - v35;
  v36 = swift_getAssociatedTypeWitness();
  v69 = *(_QWORD *)(v36 - 8);
  v37 = MEMORY[0x1E0C80A78](v36);
  v73 = (char *)v47 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x1E0C80A78](v37);
  v71 = (char *)v47 - v40;
  v47[0] = v41;
  MEMORY[0x1E0C80A78](v39);
  v43 = (char *)v47 - v42;
  v75 = swift_checkMetadataState();
  sub_1D451AD70();
  v70 = v36;
  v44 = sub_1D451AA1C();
  v57 = v43;
  sub_1D451A9F8();
  v55 = a2;
  v45 = *a2;
  v94 = 0;
  v95 = v45;
  v82 = a4;
  v83 = a5;
  v84 = v80;
  v85 = a7;
  v46 = v74;
  v86 = v74;
  v87 = v79;
  v88 = a11;
  swift_bridgeObjectRetain();
  MEMORY[0x1D825E41C](MEMORY[0x1E0DEAF38], v44);
  v52 = v44;
  sub_1D451A878();
  swift_bridgeObjectRelease();
  v49 = a4;
  v89 = a4;
  v90 = a5;
  v50 = a7;
  v91 = a7;
  v92 = v46;
  v76 = a11;
  v93 = a11;
  type metadata accessor for SliceWithStride();
}

uint64_t sub_1D43BD67C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  result = sub_1D451ACA4();
  if (__OFADD__(v3, result))
    __break(1u);
  else
    *a2 = v3 + result;
  return result;
}

uint64_t sub_1D43BD744@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  result = sub_1D451A59C();
  *a1 = result;
  return result;
}

void sub_1D43BD7AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D43BC658(a1, a4, a2, a3);
}

BOOL sub_1D43BD7C4()
{
  return sub_1D43BCA78();
}

void sub_1D43BD7D8()
{
  type metadata accessor for SliceWithStride();
}

uint64_t sub_1D43BD810(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  (*(void (**)(uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v1 + ((v2 + 72) & ~v2));
  return swift_deallocObject();
}

void sub_1D43BD868()
{
  type metadata accessor for SliceWithStride();
}

void sub_1D43BD8B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D43BDA7C();
  sub_1D43BCACC(v3, v4, v5, v6, v7, v8, v9, v1, v10, v2, v0);
}

uint64_t sub_1D43BD90C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D43BD744(a1);
}

uint64_t sub_1D43BD920@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1D43BD67C(a1, a2);
}

uint64_t sub_1D43BD950()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MaximumSlice(0, v1, v0[4], v0[6]) - 8) + 80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))((uint64_t)v0 + ((v2 + 56) & ~v2), v1);
  return swift_deallocObject();
}

uint64_t sub_1D43BD9C4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  type metadata accessor for MaximumSlice(0, v0[2], v0[4], v0[6]);
  sub_1D43BDA7C();
  return sub_1D43BBE28(v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1D43BDA44()
{
  return swift_deallocObject();
}

uint64_t sub_1D43BDA54()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1D43BDA68()
{
  return 255;
}

void sub_1D43BDA74()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t type metadata accessor for UnsafeAsyncSDFNodeView()
{
  return objc_opt_self();
}

void sub_1D43BDAB0()
{
  _QWORD *v0;

  MEMORY[0x1D825E41C](&unk_1D452B8C4, *v0);
  sub_1D43BDB04();
}

void sub_1D43BDB04()
{
  uint64_t AssociatedTypeWitness;

  sub_1D42BE910();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  sub_1D43C22CC();
  sub_1D43C22CC();
  sub_1D43C22CC();
  type metadata accessor for SharedLogMelSpectrogram.Configuration();
}

void sub_1D43BDBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;

  *(_QWORD *)(v12 - 160) = a1;
  MEMORY[0x1E0C80A78](a1);
  v14 = (char *)&a9 - v13;
  sub_1D4393144(v10, *(_QWORD *)(v12 - 152), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
  *(_QWORD *)(v12 - 136) = 0x40467A0000;
  *(_QWORD *)(v12 - 128) = 0x45EA600042FA0000;
  *(_QWORD *)(v12 - 120) = 0x3C23D70A00000002;
  *(_BYTE *)(v12 - 112) = 0;
  *(_OWORD *)(v12 - 108) = xmmword_1D452E6F0;
  *(_QWORD *)(v12 - 92) = 0;
  sub_1D42BA890(v10, v9, (uint64_t)v14);
}

uint64_t sub_1D43BDC58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 40))(v2, v1, v0);
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(v2, *(_QWORD *)(v4 - 160));
  return v5;
}

void sub_1D43BDCB4()
{
  sub_1D43BDAB0();
}

uint64_t sub_1D43BDCD4()
{
  uint64_t v0;
  _QWORD v2[6];
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  uint64_t v16;
  char v17;

  if (qword_1EFE48EE8 != -1)
    swift_once();
  v17 = byte_1EFEA7980;
  v2[0] = qword_1EFEA7940;
  v2[1] = *(_QWORD *)algn_1EFEA7948;
  v2[2] = qword_1EFEA7950;
  v2[3] = unk_1EFEA7958;
  v2[4] = qword_1EFEA7960;
  v2[5] = unk_1EFEA7968;
  v3 = byte_1EFEA7970;
  v4 = byte_1EFEA7971;
  v5 = byte_1EFEA7972;
  v6 = byte_1EFEA7973;
  v7 = byte_1EFEA7974;
  v8 = byte_1EFEA7975;
  v9 = qword_1EFEA7978;
  v10 = byte_1EFEA7980;
  v11 = 0x40467A0000;
  v12 = 0x45EA600042FA0000;
  v13 = 0x3C23D70A00000002;
  v14 = 0;
  v15 = xmmword_1D452E6F0;
  v16 = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0 = sub_1D42BB60C(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D42B8F48();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1D43BDE58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  _QWORD v6[5];

  v6[3] = &unk_1E979AD08;
  v6[4] = &off_1E979AC68;
  v2 = sub_1D42B6F40();
  v6[0] = v2;
  v3 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 48) = *(_QWORD *)(v0 + 32);
  swift_retain();
  swift_retain();
  swift_retain();
  v4 = sub_1D444BFE4(v6, 0xD000000000000031, 0x80000001D4555520);
  if (!v1)
    LOBYTE(v0) = v4 & 1;
  sub_1D43C2400(v4);
  return v0 & 1;
}

uint64_t sub_1D43BDF28()
{
  return sub_1D43BDCD4();
}

void sub_1D43BDF3C(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D45456DC, a1);
  sub_1D43BDB04();
}

void sub_1D43BDF80(uint64_t a1)
{
  sub_1D43BDF3C(a1);
}

void static AccessibilitySoundActions.isSupported.getter()
{
  void *v0;
  id v1;
  char v2;
  char v3;
  id v4;
  void *v5;
  int exclaveCapability;
  uint64_t v7;

  if (qword_1EFE47240 != -1)
    swift_once();
  v1 = objc_msgSend((id)qword_1EFE47238, sel_dictionaryRepresentation);
  sub_1D451A5CC();

  sub_1D43C241C();
  if (v0)
  {

    sub_1D42BE8B4();
  }
  else
  {
    v3 = v2;
    sub_1D42BE8B4();
    if ((v3 & 1) == 0)
    {
LABEL_9:
      sub_1D42CB758();
      return;
    }
  }
  v4 = (id)MobileGestalt_get_current_device();
  if (v4)
  {
    v5 = v4;
    exclaveCapability = MobileGestalt_get_exclaveCapability();

    if (exclaveCapability)
    {
      v7 = MGGetProductType();
      sub_1D4380234(v7);
      return;
    }
    goto LABEL_9;
  }
  __break(1u);
}

void sub_1D43BE0B0()
{
  void *v0;
  char v1;
  id v2;

  static AccessibilitySoundActions.isSupported.getter();
  if ((v1 & 1) != 0)
  {
    if (qword_1EFE47240 != -1)
      swift_once();
    v2 = objc_msgSend((id)qword_1EFE47238, sel_dictionaryRepresentation);
    sub_1D451A5CC();

    sub_1D43C241C();
    if (v0)

    sub_1D42BE8B4();
  }
  sub_1D42CB758();
}

uint64_t AccessibilitySoundActions.SoundAction.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D42CB6CC();
  return v1;
}

uint64_t AccessibilitySoundActions.SoundAction.hash(into:)()
{
  sub_1D42CB6CC();
  sub_1D451A74C();
  return swift_bridgeObjectRelease();
}

uint64_t static AccessibilitySoundActions.SoundAction.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1D451B820();
}

uint64_t sub_1D43BE23C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1D451B820();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1D43BE2CC()
{
  return 0x696669746E656469;
}

uint64_t sub_1D43BE2EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D43BE23C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D43BE314()
{
  sub_1D43C0D78();
  return sub_1D451BA3C();
}

uint64_t sub_1D43BE33C()
{
  sub_1D43C0D78();
  return sub_1D451BA48();
}

void AccessibilitySoundActions.SoundAction.encode(to:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D42BE910();
  v1 = v0;
  v2 = sub_1D42B28FC(&qword_1EFE4F6E0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1D42F1ED4();
  sub_1D42B5528(v1, v1[3]);
  sub_1D43C0D78();
  sub_1D451BA24();
  sub_1D451B724();
  sub_1D43C2340(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_1D42BE844();
}

void AccessibilitySoundActions.SoundAction.hashValue.getter()
{
  sub_1D42BE9A8();
  sub_1D42CB6CC();
  sub_1D451A74C();
  swift_bridgeObjectRelease();
  sub_1D42CB230();
  sub_1D42BE978();
}

void AccessibilitySoundActions.SoundAction.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1D42BE910();
  v3 = v2;
  v5 = v4;
  sub_1D42B28FC(&qword_1EFE4F6F0);
  sub_1D438FAD8();
  MEMORY[0x1E0C80A78](v6);
  sub_1D42F1ED4();
  sub_1D42B5528(v3, v3[3]);
  sub_1D43C0D78();
  sub_1D451BA0C();
  if (!v0)
  {
    v7 = sub_1D451B64C();
    v9 = v8;
    sub_1D43C2340(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    *v5 = v7;
    v5[1] = v9;
  }
  sub_1D42B5400((uint64_t)v3);
  sub_1D42BE844();
}

void sub_1D43BE530()
{
  AccessibilitySoundActions.SoundAction.init(from:)();
}

void sub_1D43BE544()
{
  AccessibilitySoundActions.SoundAction.encode(to:)();
}

uint64_t static AccessibilitySoundActions.Request.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1D43BE574()
{
  sub_1D43C0DB4();
  return sub_1D451BA3C();
}

uint64_t sub_1D43BE59C()
{
  sub_1D43C0DB4();
  return sub_1D451BA48();
}

uint64_t AccessibilitySoundActions.Request.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_1D42B28FC(&qword_1EFE4F6F8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1D42CB210();
  v6 = v5 - v4;
  sub_1D42B5528(a1, a1[3]);
  sub_1D43C0DB4();
  sub_1D451BA24();
  return sub_1D4307058(v6, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
}

void AccessibilitySoundActions.Request.hashValue.getter()
{
  sub_1D42BE9A8();
  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t AccessibilitySoundActions.Request.init(from:)(uint64_t a1)
{
  return sub_1D42B5400(a1);
}

uint64_t sub_1D43BE6C0(uint64_t a1)
{
  return AccessibilitySoundActions.Request.init(from:)(a1);
}

uint64_t sub_1D43BE6D4(_QWORD *a1)
{
  return AccessibilitySoundActions.Request.encode(to:)(a1);
}

void sub_1D43BE6E8()
{
  AccessibilitySoundActions.Request.hashValue.getter();
}

void sub_1D43BE6FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[4];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1D42BE910();
  v24 = v1;
  v25 = v2;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v21[2] = v10;
  v21[3] = v9;
  v11 = sub_1D42B28FC((uint64_t *)&unk_1EFE4CF60);
  v22 = *(_QWORD *)(v11 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v12);
  sub_1D42CB210();
  v15 = v14 - v13;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v23 = v8;
  sub_1D445A168(20, v6, v4, (uint64_t)v21 - v18);
  if (!v0)
  {
    v21[0] = v17;
    v21[1] = AssociatedTypeWitness;
    sub_1D42CB9F8();
    sub_1D43C234C((unint64_t *)&unk_1EFE4F850, v19, MEMORY[0x1E0C95D90]);
    sub_1D451A308();
    sub_1D42BE210((unint64_t *)&unk_1EFE4CF70, (uint64_t *)&unk_1EFE4CF60, MEMORY[0x1E0C95950]);
    sub_1D451A2E4();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v15, v11);
    sub_1D4495CF8();
    sub_1D42B8F48();
    sub_1D42CB9F8();
    sub_1D43C234C(&qword_1EFE4CB70, v20, MEMORY[0x1E0C95D90]);
    sub_1D451A3A4();
    swift_release();
    sub_1D43C23E0();
  }
  sub_1D42BE844();
}

uint64_t sub_1D43BE918@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  a2[3] = sub_1D42B28FC((uint64_t *)&unk_1EFE4A660);
  *a2 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D43BE950@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[32];

  sub_1D42B294C(a1, (uint64_t)v7);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    *a2 = v5;
    a2[1] = v6;
  }
  else
  {
    sub_1D435D008();
    swift_allocError();
    *v4 = 1;
    return swift_willThrow();
  }
  return result;
}

void sub_1D43BE9E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _DWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, char *, _DWORD *);
  NSObject *v78;
  os_log_type_t v79;
  _BOOL4 v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  void (*v85)(char *, _DWORD *);
  uint64_t v86;
  uint64_t v87;
  void (**v88)(uint64_t *@<X8>);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _DWORD *v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char *v112;
  _DWORD *v113;
  uint64_t v114;
  uint64_t (*v115)(uint64_t, _QWORD);
  uint64_t v116;
  uint64_t (*v117)(uint64_t, uint64_t);
  char *v118;
  void (*v119)(char *, char *, _DWORD *);
  uint64_t v120;
  NSObject *v121;
  os_log_type_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t (*v126)(uint64_t, _QWORD);
  uint64_t v127[2];
  void (*v128)(char *, char *, _DWORD *);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _DWORD *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  void (**v143)(uint64_t *@<X8>);
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  char *v161;
  _DWORD *v162;
  unint64_t v163;
  unint64_t v164;

  sub_1D42BE910();
  a19 = v21;
  a20 = v22;
  v158 = v23;
  v159 = v24;
  v160 = v25;
  v140 = v26;
  v27 = sub_1D42B28FC((uint64_t *)&unk_1EFE4CF00);
  v28 = sub_1D42BA240(v27, (uint64_t)&v162);
  v133 = v29;
  MEMORY[0x1E0C80A78](v28);
  sub_1D42BA180((uint64_t)v127 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v130 = v31;
  MEMORY[0x1E0C80A78](v32);
  sub_1D42BA180((uint64_t)v127 - v33);
  v34 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7D0);
  sub_1D42BA240(v34, (uint64_t)&a10);
  v137 = v35;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v36);
  sub_1D42BE768();
  sub_1D42BA180(v37);
  v38 = sub_1D42B28FC((uint64_t *)&unk_1EFE4CF10);
  sub_1D42BA240(v38, (uint64_t)&a12);
  v139 = v39;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v40);
  sub_1D42BE768();
  sub_1D42BA180(v41);
  v42 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F840);
  sub_1D42BA240(v42, (uint64_t)&a14);
  v127[1] = v43;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v44);
  sub_1D42BE768();
  v154 = v45;
  v46 = sub_1D42B28FC(&qword_1EFE4CF20);
  v152 = *(_QWORD *)(v46 - 8);
  v153 = v46;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v47);
  sub_1D42BE768();
  v151 = v48;
  v49 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v144 = *(_QWORD *)(v49 - 8);
  v145 = v49;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v50);
  sub_1D42BE768();
  sub_1D42BA180(v51);
  v52 = sub_1D451A0B0();
  v156 = *(_QWORD *)(v52 - 8);
  v157 = v52;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v53);
  sub_1D42BA180((uint64_t)v127 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
  v55 = sub_1D42B28FC(&qword_1EFE4C9C0);
  v147 = *(_QWORD *)(v55 - 8);
  v148 = v55;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v56);
  sub_1D42BE768();
  v146 = v57;
  v150 = sub_1D42B28FC(&qword_1EFE4CF28);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v58);
  sub_1D43C2368(v59, v127[0]);
  v60 = sub_1D42B28FC((uint64_t *)&unk_1EFE4CF30);
  sub_1D42BA240(v60, (uint64_t)&a16);
  v141 = v61;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v62);
  sub_1D42CB210();
  v65 = v64 - v63;
  v66 = (_DWORD *)sub_1D42EA2A8();
  v67 = *((_QWORD *)v66 - 1);
  v68 = MEMORY[0x1E0C80A78](v66);
  v135 = (char *)v127 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = MEMORY[0x1E0C80A78](v68);
  v72 = (char *)v127 - v71;
  MEMORY[0x1E0C80A78](v70);
  v74 = (char *)v127 - v73;
  sub_1D4519D14();
  if (qword_1EFE40338 != -1)
    swift_once();
  v75 = sub_1D451A014();
  v76 = sub_1D42CC880(v75, (uint64_t)qword_1EFEA7700);
  v77 = *(void (**)(char *, char *, _DWORD *))(v67 + 16);
  v161 = v74;
  v128 = v77;
  v77(v72, v74, v66);
  v129 = v76;
  v78 = sub_1D4519FFC();
  v79 = sub_1D451AF74();
  v80 = os_log_type_enabled(v78, v79);
  v155 = v65;
  if (v80)
  {
    sub_1D43C23F0();
    v162 = v66;
    v81 = sub_1D43C23D0();
    v127[0] = v20;
    v163 = v81;
    *v66 = 136446210;
    sub_1D42BDF9C();
    v82 = sub_1D451B7C0();
    v84 = sub_1D43C2464(v82, v83);
    sub_1D43C2450(v84);
    sub_1D451B1A8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _DWORD *))(v67 + 8))(v72, v162);
    sub_1D43C2444(&dword_1D42A7000, v78, v79, "Started Creating Accessibility Sound Actions Session %{public}s");
    swift_arrayDestroy();
    sub_1D42CC934();
  }
  v85 = *(void (**)(char *, _DWORD *))(v67 + 8);
  v85(v72, v66);

  (*(void (**)(uint64_t, unint64_t))(v159 + 40))(v158, v159);
  if (v20)
  {
    v85(v161, v66);
  }
  else
  {
    v127[0] = (uint64_t)v85;
    v162 = v66;
    v86 = sub_1D42BA9B8();
    sub_1D42B8F48();
    v163 = v86;
    v87 = v142;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v156 + 104))(v142, *MEMORY[0x1E0C958B0], v157);
    v88 = v143;
    *v143 = sub_1D43BF480;
    v88[1] = 0;
    v90 = v144;
    v89 = v145;
    (*(void (**)(void (**)(uint64_t *@<X8>), _QWORD, uint64_t))(v144 + 104))(v88, *MEMORY[0x1E0C958F0], v145);
    sub_1D42B28FC((uint64_t *)&unk_1EFE4C9F0);
    sub_1D42BE210((unint64_t *)&unk_1EFE4F850, (uint64_t *)&unk_1EFE4C9F0, MEMORY[0x1E0C95D90]);
    v91 = v146;
    sub_1D451A380();
    (*(void (**)(void (**)(uint64_t *@<X8>), uint64_t))(v90 + 8))(v88, v89);
    (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v87, v157);
    swift_release();
    v92 = sub_1D42B28FC((uint64_t *)&unk_1EFE557D0);
    sub_1D42BE210(&qword_1EFE4CA00, &qword_1EFE4C9C0, MEMORY[0x1E0C95AB8]);
    v93 = v151;
    v94 = v148;
    sub_1D451A308();
    v95 = v152;
    v96 = v153;
    v97 = v149;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v152 + 16))(v149, v93, v153);
    v98 = v150;
    *(_QWORD *)(v97 + *(int *)(v150 + 60)) = 96;
    *(_QWORD *)(v97 + *(int *)(v98 + 64)) = 2;
    *(_QWORD *)(v97 + *(int *)(v98 + 68)) = v92;
    (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v93, v96);
    (*(void (**)(uint64_t, uint64_t))(v147 + 8))(v91, v94);
    sub_1D42B28FC((uint64_t *)&unk_1EFE4A660);
    sub_1D42BE210((unint64_t *)&unk_1EFE4F860, &qword_1EFE4CF28, (uint64_t)&unk_1D4535888);
    v99 = v155;
    sub_1D451A308();
    v100 = sub_1D43C1E54(v97);
    MEMORY[0x1E0C80A78](v100);
    v101 = v159;
    v127[-4] = v158;
    v127[-3] = v101;
    v102 = v160;
    v127[-2] = v99;
    v127[-1] = v102;
    sub_1D43F8CA4(0xD000000000000022, 0x80000001D45536C0, (uint64_t (*)(void))sub_1D43C1E94);
    v160 = 0;
    sub_1D42BE210((unint64_t *)&unk_1EFE4CF40, (uint64_t *)&unk_1EFE4F840, MEMORY[0x1E0C95B48]);
    v103 = v132;
    sub_1D451A308();
    v104 = v133;
    v105 = v131;
    v106 = v134;
    sub_1D4393144(v131, v103, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v133 + 16));
    v107 = (*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
    v108 = swift_allocObject();
    *(_QWORD *)(v108 + 16) = sub_1D43BF7D8;
    *(_QWORD *)(v108 + 24) = 0;
    sub_1D4393144(v108 + v107, v105, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v104 + 32));
    sub_1D42CB9F8();
    sub_1D43C234C((unint64_t *)&qword_1EFE4CF50, v109, MEMORY[0x1E0C95D90]);
    v110 = v136;
    sub_1D451A2C0();
    (*(void (**)(uint64_t, _DWORD *))(v104 + 8))(v103, v106);
    v163 = 0;
    v164 = 0xE000000000000000;
    sub_1D451B400();
    swift_bridgeObjectRelease();
    v163 = 0xD000000000000022;
    v164 = 0x80000001D45536F0;
    v111 = sub_1D42BDF9C();
    v112 = v161;
    v113 = v162;
    v159 = v111;
    sub_1D451B7C0();
    sub_1D451A794();
    sub_1D42BE8B4();
    sub_1D42E3FE0();
    v114 = v138;
    sub_1D4406DA0();
    sub_1D42BE8B4();
    sub_1D43C2408();
    sub_1D43C238C(v110, v115);
    sub_1D42BE210(&qword_1EFE4F800, (uint64_t *)&unk_1EFE4CF10, MEMORY[0x1E0C957C0]);
    v116 = sub_1D451A2E4();
    sub_1D43C2408();
    sub_1D4307058(v114, v117);
    v118 = v140;
    v119 = v128;
    v128(v140, v112, v113);
    *(_QWORD *)&v118[*(int *)(sub_1D43C2384() + 20)] = v116;
    v120 = (uint64_t)v135;
    v119(v135, v112, v113);
    swift_retain();
    v121 = sub_1D4519FFC();
    v122 = sub_1D451AF74();
    if (os_log_type_enabled(v121, v122))
    {
      sub_1D43C23F0();
      v157 = sub_1D43C23D0();
      v163 = v157;
      *v106 = 136446210;
      v158 = v116;
      v123 = sub_1D451B7C0();
      v125 = sub_1D43C2464(v123, v124);
      sub_1D43C2450(v125);
      sub_1D451B1A8();
      swift_bridgeObjectRelease();
      sub_1D43C23B0(v120);
      sub_1D43C2444(&dword_1D42A7000, v121, v122, "Finished Creating Accessibility Sound Actions Session %{public}s");
      swift_arrayDestroy();
      sub_1D42CC934();
    }

    sub_1D43C23B0(v120);
    swift_release();
    sub_1D43C2324();
    ((void (*)(char *, _DWORD *))v119)(v112, v113);
    sub_1D43C2408();
    sub_1D43C238C(v155, v126);
  }
  sub_1D42BE844();
}

void sub_1D43BF480(uint64_t *a1@<X8>)
{
  sub_1D43C0354(3, a1);
}

uint64_t sub_1D43BF488@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v3 = *(_QWORD *)result;
  v4 = *(_QWORD *)(*(_QWORD *)result + 16);
  if (v4)
  {
    sub_1D42CB6CC();
    v5 = 0;
    v6 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v7 = *(_QWORD *)(v3 + 8 * v5 + 32);
      v8 = *(_QWORD *)(v7 + 16);
      v9 = *(_QWORD *)(v6 + 16);
      if (__OFADD__(v9, v8))
        break;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!swift_isUniquelyReferenced_nonNull_native() || v9 + v8 > *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_1D442F36C();
        v6 = v10;
      }
      if (*(_QWORD *)(v7 + 16))
      {
        v11 = *(_QWORD *)(v6 + 16);
        if ((*(_QWORD *)(v6 + 24) >> 1) - v11 < v8)
          goto LABEL_24;
        v12 = (void *)(v6 + 4 * v11 + 32);
        if (v7 + 32 < (unint64_t)v12 + 4 * v8 && (unint64_t)v12 < v7 + 32 + 4 * v8)
          goto LABEL_26;
        memcpy(v12, (const void *)(v7 + 32), 4 * v8);
        if (v8)
        {
          v14 = *(_QWORD *)(v6 + 16);
          v15 = __OFADD__(v14, v8);
          v16 = v14 + v8;
          if (v15)
            goto LABEL_25;
          *(_QWORD *)(v6 + 16) = v16;
        }
      }
      else if (v8)
      {
        goto LABEL_23;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v4 == ++v5)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    result = sub_1D451B5D4();
    __break(1u);
  }
  else
  {
    v6 = MEMORY[0x1E0DEE9D8];
LABEL_21:
    *a2 = v6;
  }
  return result;
}

uint64_t sub_1D43BF630@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v11[0] = a1;
  v11[1] = a4;
  v5 = *(_QWORD *)(a3 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v9 = (char *)v11 - v8;
  sub_1D42B28FC((uint64_t *)&unk_1EFE4CF30);
  sub_1D42BE210((unint64_t *)&unk_1EFE4F870, (uint64_t *)&unk_1EFE4CF30, MEMORY[0x1E0C95950]);
  sub_1D451A2E4();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, v5);
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  sub_1D43BE6FC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
  return swift_release();
}

uint64_t sub_1D43BF7CC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D43BF7D8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D43C0310(a1);
}

uint64_t sub_1D43BF840()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(_QWORD, _QWORD);

  v0[5] = &unk_1E979AC10;
  v0[6] = &off_1E979ABF0;
  sub_1D42B5528(v0 + 2, (uint64_t)&unk_1E979AC10);
  swift_storeEnumTagMultiPayload();
  v1 = (_QWORD *)sub_1D42E3A4C();
  v0[11] = v1;
  *v1 = v0;
  v1[1] = sub_1D43BF8C8;
  return v3(v0[8], v0[10]);
}

uint64_t sub_1D43BF8C8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43BF920()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  sub_1D43C0E28(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 56));
  sub_1D43C20B4(v1, (uint64_t (*)(_QWORD))type metadata accessor for RemoteRequest);
  sub_1D42B5400(v0 + 16);
  sub_1D42E3E54();
  sub_1D438C1C4();
  return sub_1D42E3A2C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43BF97C()
{
  uint64_t v0;

  sub_1D43C20B4(*(_QWORD *)(v0 + 80), (uint64_t (*)(_QWORD))type metadata accessor for RemoteRequest);
  sub_1D42B5400(v0 + 16);
  sub_1D42E3E54();
  sub_1D438C1C4();
  return sub_1D42E3A2C(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1D43BF9D0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (**v6)(uint64_t *@<X8>);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (**v44)(uint64_t *@<X8>);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (**v68)(uint64_t *@<X8>);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t (*v74)@<X0>(uint64_t *@<X8>);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  sub_1D42BE910();
  v2 = v1;
  v71 = v3;
  v4 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v69 = *(_QWORD *)(v4 - 8);
  v70 = v4;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42BE768();
  v68 = v6;
  v7 = sub_1D451A0B0();
  v66 = *(_QWORD *)(v7 - 8);
  v67 = v7;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v8);
  sub_1D42BE768();
  v65 = v9;
  v54 = sub_1D42B28FC(&qword_1EFE55990);
  v10 = *(_QWORD *)(v54 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x1E0C80A78](v54);
  v13 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v49 - v14;
  v57 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7D0);
  v56 = *(_QWORD *)(v57 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v16);
  sub_1D42BA180((uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = sub_1D42B28FC((uint64_t *)&unk_1EFE4CF10);
  v59 = *(_QWORD *)(v18 - 8);
  v60 = v18;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v19);
  sub_1D42BE768();
  v58 = v20;
  v21 = sub_1D42B28FC(&qword_1EFE4F7E0);
  v63 = *(_QWORD *)(v21 - 8);
  v64 = v21;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v22);
  sub_1D43C2368(v23, v49);
  v77 = sub_1D42EA2A8();
  v61 = *(_QWORD *)(v77 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v24);
  sub_1D42BE768();
  v26 = v25;
  v28 = v2[3];
  v27 = v2[4];
  sub_1D42B5528(v2, v28);
  (*(void (**)(uint64_t))(*(_QWORD *)(v27 + 8) + 8))(v28);
  if (!v0)
  {
    v53 = 0;
    v29 = sub_1D4471100();
    sub_1D42B8F48();
    sub_1D43C1CA4((uint64_t)v2, (uint64_t)&v72);
    v30 = sub_1D42B6F40();
    sub_1D43C1D0C(&v72, (_OWORD *)(v30 + 16));
    v50 = v26;
    sub_1D4519D14();
    *(_QWORD *)&v72 = v29;
    *((_QWORD *)&v72 + 1) = sub_1D43BFFA8;
    v73 = 0;
    v74 = sub_1D43C1D24;
    v75 = v30;
    v76 = 1;
    v52 = v29;
    swift_retain();
    v51 = v30;
    swift_retain();
    sub_1D42CB9F8();
    sub_1D43C234C((unint64_t *)&unk_1EFE4F7F0, v31, (uint64_t)&unk_1D4545EA8);
    sub_1D451A308();
    swift_release();
    swift_release();
    v32 = v54;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v54);
    v33 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v34 = swift_allocObject();
    *(_QWORD *)(v34 + 16) = sub_1D43BF7D8;
    *(_QWORD *)(v34 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v34 + v33, v13, v32);
    sub_1D42CB9F8();
    sub_1D43C234C((unint64_t *)&qword_1EFE4CF50, v35, MEMORY[0x1E0C95D90]);
    v36 = v55;
    sub_1D451A2C0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v32);
    *(_QWORD *)&v72 = 0;
    *((_QWORD *)&v72 + 1) = 0xE000000000000000;
    sub_1D451B400();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v72 = 0xD000000000000022;
    *((_QWORD *)&v72 + 1) = 0x80000001D45536F0;
    sub_1D42BDF9C();
    sub_1D451B7C0();
    sub_1D451A794();
    sub_1D42BE8B4();
    sub_1D42E3FE0();
    sub_1D4406DA0();
    sub_1D42BE8B4();
    sub_1D43C2408();
    v37(v36, v57);
    sub_1D42BE210(&qword_1EFE4F800, (uint64_t *)&unk_1EFE4CF10, MEMORY[0x1E0C957C0]);
    v38 = sub_1D451A374();
    sub_1D42B28FC(&qword_1EFE4F808);
    sub_1D42B6F40();
    v39 = sub_1D43AEFD8(v38);
    sub_1D43C2340(*(uint64_t (**)(uint64_t, uint64_t))(v59 + 8));
    *(_QWORD *)&v72 = v39;
    v41 = v65;
    v40 = v66;
    v42 = v67;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v66 + 104))(v65, *MEMORY[0x1E0C958B0], v67);
    v44 = v68;
    v43 = v69;
    *v68 = sub_1D43C034C;
    v44[1] = 0;
    v45 = v70;
    (*(void (**)(void (**)(uint64_t *@<X8>), _QWORD, uint64_t))(v43 + 104))(v44, *MEMORY[0x1E0C958F0], v70);
    sub_1D42BE210(&qword_1EFE4F810, &qword_1EFE4F808, (uint64_t)&unk_1D4537AC0);
    v46 = v62;
    sub_1D451A380();
    (*(void (**)(void (**)(uint64_t *@<X8>), uint64_t))(v43 + 8))(v44, v45);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v42);
    swift_release();
    sub_1D42BE210(&qword_1EFE4F818, &qword_1EFE4F7E0, MEMORY[0x1E0C95AB8]);
    v47 = sub_1D451A2E4();
    swift_release();
    swift_release();
    sub_1D4307058(v46, *(uint64_t (**)(uint64_t, uint64_t))(v63 + 8));
    v48 = v71;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 32))(v71, v50, v77);
    *(_QWORD *)(v48 + *(int *)(sub_1D43C2384() + 20)) = v47;
  }
  sub_1D42BE844();
}

uint64_t sub_1D43BFFA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  char v8;
  void *v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = sub_1D42B28FC(&qword_1EFE4F828);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D441F118();
  if (v1)
    return swift_bridgeObjectRelease();
  v10 = v7;
  v11 = v8;
  v20[1] = a1;
  v21 = v4;
  v22 = v3;
  v12 = MEMORY[0x1E0DEE9D8];
  while (v11 != -1)
  {
    sub_1D43BB1D8(v10, v11);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1D442FEF4();
      v12 = v17;
    }
    v13 = *(_QWORD *)(v12 + 16);
    if (v13 >= *(_QWORD *)(v12 + 24) >> 1)
    {
      sub_1D442FEF4();
      v12 = v18;
    }
    *(_QWORD *)(v12 + 16) = v13 + 1;
    v14 = v12 + 16 * v13;
    *(_QWORD *)(v14 + 32) = v10;
    *(_BYTE *)(v14 + 40) = v11;
    sub_1D43BB16C(v10, v11);
    sub_1D441F118();
    v10 = v15;
    v11 = v16;
  }
  v23 = v12;
  sub_1D42B28FC(&qword_1EFE4F830);
  sub_1D42BE210(&qword_1EFE4F838, &qword_1EFE4F830, MEMORY[0x1E0DEAF38]);
  sub_1D451A830();
  swift_bridgeObjectRelease();
  sub_1D42B28FC(&qword_1EFE49BB0);
  v19 = v22;
  sub_1D451A140();
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v6, v19);
}

uint64_t sub_1D43C01AC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10[5];

  v4 = a1[3];
  v5 = a1[5];
  v6 = sub_1D42B5528(a1, v4);
  v10[3] = v4;
  v10[4] = v5;
  v7 = sub_1D430BBF0(v10);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v7, v6, v4);
  v8 = sub_1D441F1C4(v10);
  result = sub_1D42B5400((uint64_t)v10);
  if (!v2)
    *a2 = v8;
  return result;
}

uint64_t sub_1D43C0240(unsigned __int8 *a1)
{
  return ((uint64_t (*)(void))((char *)sub_1D43C026C + 4 * byte_1D4535910[*a1]))();
}

void sub_1D43C026C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2 + 786432;
  a1[1] = v1;
}

uint64_t sub_1D43C0310@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = os_transaction_create();
  if (result)
    *a1 = result;
  else
    __break(1u);
  return result;
}

void sub_1D43C034C(uint64_t *a1@<X8>)
{
  sub_1D43C0354(4, a1);
}

void sub_1D43C0354(char a1@<W0>, uint64_t *a2@<X8>)
{
  _BYTE *v4;

  sub_1D435D008();
  *a2 = swift_allocError();
  *v4 = a1;
  sub_1D42B6E24();
}

void AccessibilitySoundActions.Session.soundActions.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  v23 = a1;
  v2 = sub_1D43C2384();
  v20 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v20 + 64);
  MEMORY[0x1E0C80A78](v2);
  v22 = sub_1D42B28FC(&qword_1EFE4F710);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB210();
  v5 = sub_1D42B28FC(&qword_1EFE4F718);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x1E0C80A78](v5);
  v21 = (uint64_t)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - v9;
  v24 = *(_QWORD *)(v1 + *(int *)(v2 + 20));
  v11 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F720);
  v12 = sub_1D42BE210((unint64_t *)&qword_1EFE4CF50, (uint64_t *)&unk_1EFE4F720, MEMORY[0x1E0C95D90]);
  MEMORY[0x1D825BCEC](v11, v12);
  sub_1D43C0E6C(v1, (uint64_t)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v14 = swift_allocObject();
  sub_1D43C0E28((uint64_t)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
  sub_1D42BE210(&qword_1EFE4F740, &qword_1EFE4F710, MEMORY[0x1E0C96010]);
  sub_1D451B520();
  v15 = v21;
  sub_1D4340870(v21, (uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
  v16 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v17 = swift_allocObject();
  sub_1D4340870(v17 + v16, v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
  v18 = v23;
  *v23 = sub_1D43C1524;
  v18[1] = v17;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  sub_1D42CB520();
}

uint64_t sub_1D43C05C4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[4] = a1;
  v3[5] = a3;
  v5 = sub_1D4519F90();
  v3[6] = v5;
  v3[7] = *(_QWORD *)(v5 - 8);
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  type metadata accessor for AccessibilitySoundActions.Session();
  v6 = swift_task_alloc();
  v7 = *a2;
  v8 = a2[1];
  v3[10] = v6;
  v3[11] = v7;
  v3[12] = v8;
  return swift_task_switch();
}

uint64_t sub_1D43C0660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_signpost_type_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  os_signpost_id_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  os_signpost_type_t v21;
  uint64_t v22;

  if (qword_1EFE472E0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = sub_1D4519FB4();
  sub_1D42CC880(v3, (uint64_t)qword_1EFEA7728);
  sub_1D43C0E6C(v2, v1);
  swift_bridgeObjectRetain_n();
  sub_1D4519F84();
  v4 = sub_1D4519F9C();
  v5 = sub_1D451B004();
  v6 = sub_1D451B148();
  v7 = *(_QWORD *)(v0 + 96);
  if ((v6 & 1) != 0)
  {
    v21 = v5;
    v8 = *(_QWORD *)(v0 + 80);
    v9 = *(_QWORD *)(v0 + 88);
    (*(void (**)(void))(*(_QWORD *)(v0 + 56) + 16))();
    v10 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    *(_DWORD *)v10 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_1D43D72EC(v9, v7, &v22);
    sub_1D451B1A8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2080;
    sub_1D42EA2A8();
    sub_1D42BDF9C();
    v11 = sub_1D451B7C0();
    *(_QWORD *)(v0 + 24) = sub_1D43D72EC(v11, v12, &v22);
    sub_1D451B1A8();
    swift_bridgeObjectRelease();
    sub_1D43C20B4(v8, (uint64_t (*)(_QWORD))type metadata accessor for AccessibilitySoundActions.Session);
    v13 = sub_1D4519F78();
    _os_signpost_emit_with_name_impl(&dword_1D42A7000, v4, v21, v13, "ClientReadResult_AccessibilitySoundActions", "{\"identifier\":\"%s\",\"workloadID\":\"%s\"}", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    sub_1D42CC934();
  }
  v15 = *(_QWORD *)(v0 + 72);
  v14 = *(_QWORD *)(v0 + 80);
  v16 = *(_QWORD *)(v0 + 48);
  v17 = *(_QWORD *)(v0 + 56);

  sub_1D43C20B4(v14, (uint64_t (*)(_QWORD))type metadata accessor for AccessibilitySoundActions.Session);
  swift_bridgeObjectRelease_n();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  v18 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD **)(v0 + 32);
  *v19 = *(_QWORD *)(v0 + 88);
  v19[1] = v18;
  swift_bridgeObjectRetain();
  swift_task_dealloc();
  sub_1D42E3E54();
  sub_1D438C1C4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D43C0924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10[3];
  uint64_t v11;
  _UNKNOWN **v12;

  sub_1D447DE84();
  v2 = *(_QWORD *)(v0 + *(int *)(sub_1D43C2384() + 20));
  v11 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F720);
  v12 = (_UNKNOWN **)sub_1D43C1FC8();
  v10[0] = v2;
  v3 = swift_retain();
  sub_1D43C2470(v3);
  if (!v1)
  {
    sub_1D43C2400(v4);
    v5 = sub_1D42EA2A8();
    v11 = v5;
    v12 = &off_1E9797798;
    v6 = sub_1D430BBF0(v10);
    v7 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v6, v0, v5);
    sub_1D43C2470(v7);
  }
  v8 = sub_1D42B8F48();
  return sub_1D43C2400(v8);
}

uint64_t sub_1D43C09E4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_1D42EA2A8();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = sub_1D42F9B80();
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc();
  v2[7] = v4;
  *v4 = v2;
  v4[1] = sub_1D43C0A54;
  return sub_1D4376978();
}

uint64_t sub_1D43C0A54()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v7;
  uint64_t (*v8)(void);

  sub_1D430C4B8();
  v4 = *v3;
  *v5 = v4;
  v2[8] = v0;
  v2[9] = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42F1DEC();
  }
  else
  {
    v8 = (uint64_t (*)(void))((char *)&dword_1EFE54178 + dword_1EFE54178);
    v7 = (_QWORD *)swift_task_alloc();
    v2[10] = v7;
    *v7 = v4;
    v7[1] = sub_1D43C0ADC;
    return sub_1D42E3A2C(v8);
  }
}

uint64_t sub_1D43C0ADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1D430C4B8();
  *v4 = *v3;
  *(_QWORD *)(v2 + 88) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 96) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D43C0B34()
{
  uint64_t v0;

  sub_1D43C2414();
  sub_1D42E3E54();
  return sub_1D42E39E4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43C0B64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD);

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(int *)(sub_1D43C2384() + 20);
  *(_DWORD *)(v0 + 120) = v3;
  *(_QWORD *)(v2 + v3) = v1;
  v4 = (_QWORD *)sub_1D42E3A4C();
  *(_QWORD *)(v0 + 104) = v4;
  *v4 = v0;
  v4[1] = sub_1D43C0BD4;
  return v6(*(_QWORD *)(v0 + 48));
}

uint64_t sub_1D43C0BD4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43C0C2C()
{
  uint64_t v0;

  swift_release();
  sub_1D43C2414();
  sub_1D42E3E54();
  return sub_1D42E39E4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43C0C64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 16);
  swift_release();
  swift_release();
  sub_1D4340870(v3, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
  sub_1D42E3E54();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D43C0CD0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_1D43C2414();
  sub_1D42E3E54();
  return sub_1D42E3A2C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43C0D1C()
{
  return sub_1D43C0924();
}

uint64_t sub_1D43C0D30()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D43AC280(v1);
  return sub_1D43C09E4(v2, v3);
}

unint64_t sub_1D43C0D78()
{
  unint64_t result;

  result = qword_1EFE4F6E8;
  if (!qword_1EFE4F6E8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4535D84, &type metadata for AccessibilitySoundActions.SoundAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F6E8);
  }
  return result;
}

unint64_t sub_1D43C0DB4()
{
  unint64_t result;

  result = qword_1EFE4F700;
  if (!qword_1EFE4F700)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4535D34, &type metadata for AccessibilitySoundActions.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F700);
  }
  return result;
}

uint64_t type metadata accessor for AccessibilitySoundActions.Session()
{
  uint64_t result;

  result = qword_1EFE4F778;
  if (!qword_1EFE4F778)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D43C0E28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccessibilitySoundActions.Session();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D43C0E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccessibilitySoundActions.Session();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D43C0EB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D43C2384();
  sub_1D43C247C();
  v2 = v0 + v1;
  v3 = sub_1D42EA2A8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  return sub_1D43C2314();
}

uint64_t sub_1D43C0F18(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  sub_1D43C2384();
  sub_1D43AFBD4();
  v7 = v2 + v6;
  v8 = swift_task_alloc();
  v9 = (_QWORD *)sub_1D42B8F00(v8);
  *v9 = v3;
  v9[1] = sub_1D43C0F84;
  return sub_1D43C05C4(a1, a2, v7);
}

uint64_t sub_1D43C0F84()
{
  uint64_t v0;

  sub_1D42F9A68();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D43C0FB0(uint64_t a1)
{
  _QWORD *v1;

  v1[5] = a1;
  v1[6] = sub_1D42B28FC(&qword_1EFE4F880);
  v1[7] = swift_projectBox();
  return swift_task_switch();
}

uint64_t sub_1D43C1008()
{
  _QWORD *v0;

  sub_1D43C22E0();
  sub_1D42BE210(&qword_1EFE4F8A0, &qword_1EFE4F880, MEMORY[0x1E0DF0830]);
  v0 = (_QWORD *)swift_task_alloc();
  sub_1D43C22B0(v0);
  return sub_1D43C22A4();
}

uint64_t sub_1D43C1068()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D43C2284();
  if (v0)
  {
    sub_1D42B8EC8();
    return sub_1D431B32C();
  }
  else
  {
    sub_1D43C243C();
    return sub_1D42E39E4(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_1D43C10A8(uint64_t a1)
{
  _QWORD *v1;

  v1[5] = a1;
  v1[6] = sub_1D42B28FC(&qword_1EFE4F8E8);
  v1[7] = swift_projectBox();
  return swift_task_switch();
}

uint64_t sub_1D43C1100()
{
  _QWORD *v0;

  sub_1D43C22E0();
  sub_1D42BE210(&qword_1EFE4F908, &qword_1EFE4F8E8, MEMORY[0x1E0DF0C48]);
  v0 = (_QWORD *)swift_task_alloc();
  sub_1D43C22B0(v0);
  return sub_1D43C22A4();
}

uint64_t sub_1D43C1160(uint64_t a1)
{
  _QWORD *v1;

  v1[5] = a1;
  v1[6] = sub_1D42B28FC(&qword_1EFE4F8C0);
  v1[7] = swift_projectBox();
  return swift_task_switch();
}

uint64_t sub_1D43C11B8()
{
  _QWORD *v0;

  sub_1D43C22E0();
  sub_1D42BE210(&qword_1EFE4F8E0, &qword_1EFE4F8C0, MEMORY[0x1E0DF0C48]);
  v0 = (_QWORD *)swift_task_alloc();
  sub_1D43C22B0(v0);
  return sub_1D43C22A4();
}

uint64_t sub_1D43C1218()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D43C2284();
  if (v0)
  {
    sub_1D42B8EC8();
    return sub_1D431B32C();
  }
  else
  {
    sub_1D43C243C();
    return sub_1D42E39E4(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_1D43C1258()
{
  uint64_t v0;

  swift_endAccess();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1D43C1284(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1D42B28FC(&qword_1EFE4B690);
  sub_1D438FAD8();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42F1ED4();
  sub_1D42B28FC(&qword_1EFE4F880);
  sub_1D43C2428();
  MEMORY[0x1E0C80A78](v6);
  sub_1D43408A0();
  MEMORY[0x1E0C80A78](v7);
  sub_1D43C22F4();
  sub_1D42BE210(&qword_1EFE4F888, &qword_1EFE4B690, MEMORY[0x1E0DF0848]);
  sub_1D43C2354();
  sub_1D4340870(v1, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  v8 = swift_allocBox();
  sub_1D4340870(v9, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
  sub_1D43C23C0();
  *a1 = &unk_1EFE4F898;
  a1[1] = v8;
  sub_1D42CB520();
}

uint64_t sub_1D43C1360@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;

  v4 = sub_1D42B28FC(&qword_1EFE4F718);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D42B28FC(&qword_1EFE4F8E8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v18 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_1D42BE210(&qword_1EFE4F8F0, &qword_1EFE4F718, MEMORY[0x1E0DF0C70]);
  sub_1D451AB6C();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  v15 = swift_allocBox();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v16, v12, v8);
  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  *a2 = &unk_1EFE4F900;
  a2[1] = v15;
  return result;
}

uint64_t sub_1D43C14CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D42B28FC(&qword_1EFE4F718);
  sub_1D43C247C();
  (*(void (**)(uint64_t))(v2 + 8))(v0 + v1);
  return swift_deallocObject();
}

uint64_t sub_1D43C1524@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D42B28FC(&qword_1EFE4F718);
  sub_1D43AFBD4();
  return sub_1D43C1360(v1 + v3, a1);
}

unint64_t sub_1D43C155C()
{
  unint64_t result;

  result = qword_1EFE4F748;
  if (!qword_1EFE4F748)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for AccessibilitySoundActions.SoundAction, &type metadata for AccessibilitySoundActions.SoundAction);
    atomic_store(result, (unint64_t *)&qword_1EFE4F748);
  }
  return result;
}

unint64_t sub_1D43C159C()
{
  unint64_t result;

  result = qword_1EFE4F750;
  if (!qword_1EFE4F750)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for AccessibilitySoundActions.Request, &type metadata for AccessibilitySoundActions.Request);
    atomic_store(result, (unint64_t *)&qword_1EFE4F750);
  }
  return result;
}

unint64_t sub_1D43C15D8(uint64_t a1)
{
  unint64_t result;

  result = sub_1D43AAAAC();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1D43C15FC(uint64_t a1)
{
  unint64_t result;

  result = sub_1D43AAA70();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

void type metadata accessor for AccessibilitySoundActions()
{
  sub_1D42CB35C();
}

void type metadata accessor for AccessibilitySoundActions.SoundAction()
{
  sub_1D42CB35C();
}

void type metadata accessor for AccessibilitySoundActions.Request()
{
  sub_1D42CB35C();
}

uint64_t *initializeBufferWithCopyOfBuffer for AccessibilitySoundActions.Session(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1D4519D20();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t destroy for AccessibilitySoundActions.Session(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D4519D20();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

uint64_t initializeWithCopy for AccessibilitySoundActions.Session(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1D4519D20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AccessibilitySoundActions.Session(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1D4519D20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for AccessibilitySoundActions.Session(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1D4519D20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for AccessibilitySoundActions.Session(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1D4519D20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessibilitySoundActions.Session()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D43C18A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_1D42EA2A8();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessibilitySoundActions.Session()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D43C1928(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_1D42EA2A8();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1D43C1998()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D4519D20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilitySoundActions.Request.CodingKeys()
{
  return &type metadata for AccessibilitySoundActions.Request.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for AccessibilitySoundActions.SoundAction.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D43C1A5C + 4 * byte_1D453591E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D43C1A7C + 4 * byte_1D4535923[v4]))();
}

_BYTE *sub_1D43C1A5C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D43C1A7C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D43C1A84(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D43C1A8C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D43C1A94(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D43C1A9C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AccessibilitySoundActions.SoundAction.CodingKeys()
{
  return &type metadata for AccessibilitySoundActions.SoundAction.CodingKeys;
}

unint64_t sub_1D43C1ABC()
{
  unint64_t result;

  result = qword_1EFE4F790;
  if (!qword_1EFE4F790)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4535C74, &type metadata for AccessibilitySoundActions.SoundAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F790);
  }
  return result;
}

uint64_t sub_1D43C1AF8(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

uint64_t sub_1D43C1B00(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 32);
}

uint64_t sub_1D43C1B08(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 40);
}

uint64_t sub_1D43C1B10(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1D825E41C](&unk_1D4545730);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_1D43C1B3C()
{
  return &off_1E97A6998;
}

_UNKNOWN **sub_1D43C1B48()
{
  return &off_1E97A6940;
}

_UNKNOWN **sub_1D43C1B54()
{
  return &off_1E97A6980;
}

uint64_t sub_1D43C1B60(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 88);
}

uint64_t sub_1D43C1B68(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 96);
}

uint64_t sub_1D43C1B70(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 104);
}

uint64_t sub_1D43C1B78(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1D825E41C](&unk_1D452B690);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1D43C1BA8()
{
  unint64_t result;

  result = qword_1EFE4F7A0;
  if (!qword_1EFE4F7A0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4535C9C, &type metadata for AccessibilitySoundActions.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F7A0);
  }
  return result;
}

unint64_t sub_1D43C1BE8()
{
  unint64_t result;

  result = qword_1EFE4F7A8;
  if (!qword_1EFE4F7A8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4535CC4, &type metadata for AccessibilitySoundActions.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F7A8);
  }
  return result;
}

unint64_t sub_1D43C1C28()
{
  unint64_t result;

  result = qword_1EFE4F7B0;
  if (!qword_1EFE4F7B0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4535BE4, &type metadata for AccessibilitySoundActions.SoundAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F7B0);
  }
  return result;
}

unint64_t sub_1D43C1C68()
{
  unint64_t result;

  result = qword_1EFE4F7B8;
  if (!qword_1EFE4F7B8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4535C0C, &type metadata for AccessibilitySoundActions.SoundAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F7B8);
  }
  return result;
}

uint64_t sub_1D43C1CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1D43C1CE8()
{
  uint64_t v0;

  sub_1D42B5400(v0 + 16);
  return swift_deallocObject();
}

_OWORD *sub_1D43C1D0C(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_1D43C1D24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1D43C01AC((_QWORD *)(v1 + 16), a1);
}

void sub_1D43C1D3C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1D42B28FC((uint64_t *)&unk_1EFE50CF0);
  sub_1D438FAD8();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42F1ED4();
  sub_1D42B28FC(&qword_1EFE4F8C0);
  sub_1D43C2428();
  MEMORY[0x1E0C80A78](v6);
  sub_1D43408A0();
  MEMORY[0x1E0C80A78](v7);
  sub_1D43C22F4();
  sub_1D42BE210(&qword_1EFE4F8C8, (uint64_t *)&unk_1EFE50CF0, MEMORY[0x1E0DF0C70]);
  sub_1D43C2354();
  sub_1D4340870(v1, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  v8 = swift_allocBox();
  sub_1D4340870(v9, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
  sub_1D43C23C0();
  *a1 = &unk_1EFE4F8D8;
  a1[1] = v8;
  sub_1D42CB520();
}

uint64_t sub_1D43C1E18()
{
  return sub_1D43C1EBC(&qword_1EFE55990);
}

void sub_1D43C1E24()
{
  sub_1D42B28FC(&qword_1EFE55990);
  sub_1D43C2394();
  sub_1D44A5B70();
}

void sub_1D43C1E48(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  sub_1D42B6E24();
}

uint64_t sub_1D43C1E54(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D42B28FC(&qword_1EFE4CF28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D43C1E94@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1D43BF630(v1[5], v1[2], v1[3], a1);
}

uint64_t sub_1D43C1EB0()
{
  return sub_1D43C1EBC((uint64_t *)&unk_1EFE4CF00);
}

uint64_t sub_1D43C1EBC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = sub_1D42B28FC(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  return sub_1D43C2314();
}

void sub_1D43C1F20()
{
  sub_1D42B28FC((uint64_t *)&unk_1EFE4CF00);
  sub_1D43C2394();
  sub_1D435C124();
}

uint64_t sub_1D43C1F50()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D43C1F84()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D43AC280(v1);
  return sub_1D43C0FB0(v2);
}

unint64_t sub_1D43C1FC8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFE4F8B0;
  if (!qword_1EFE4F8B0)
  {
    v1 = sub_1D42B8B10((uint64_t *)&unk_1EFE4F720);
    v2[0] = &off_1E9798C30;
    v2[1] = &off_1E9798C40;
    result = MEMORY[0x1D825E41C](&unk_1D45293A0, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFE4F8B0);
  }
  return result;
}

uint64_t sub_1D43C202C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D43AC280(v1);
  return sub_1D43C1160(v2);
}

uint64_t sub_1D43C2070()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D43AC280(v1);
  return sub_1D43C10A8(v2);
}

uint64_t sub_1D43C20B4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D43C20F0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 5) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v5 = v6 - 6;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_1D43C2178(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D43C21C4 + 4 * byte_1D453592D[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D43C21F8 + 4 * byte_1D4535928[v4]))();
}

uint64_t sub_1D43C21F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43C2200(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D43C2208);
  return result;
}

uint64_t sub_1D43C2214(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D43C221CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D43C2220(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43C2228(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AccessibilitySoundActions.DomainError()
{
  sub_1D42CB35C();
}

unint64_t sub_1D43C2244()
{
  unint64_t result;

  result = qword_1EFE4F910;
  if (!qword_1EFE4F910)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4535E2C, &unk_1E9798D70);
    atomic_store(result, (unint64_t *)&qword_1EFE4F910);
  }
  return result;
}

uint64_t sub_1D43C2284()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 72) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1D43C22A4()
{
  return sub_1D451AAA0();
}

uint64_t sub_1D43C22B0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 40);
}

uint64_t sub_1D43C22CC()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1D43C22E0()
{
  return swift_beginAccess();
}

uint64_t sub_1D43C22F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v0, v1);
}

uint64_t sub_1D43C2314()
{
  return swift_deallocObject();
}

uint64_t sub_1D43C2324()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 424) + 8))(*(_QWORD *)(v0 - 176), *(_QWORD *)(v0 - 296));
}

uint64_t sub_1D43C2340@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_1D43C234C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1D42BE210(a1, v3, a3);
}

uint64_t sub_1D43C2354()
{
  return sub_1D451AB6C();
}

void sub_1D43C2368(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 216) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1D43C2384()
{
  return type metadata accessor for AccessibilitySoundActions.Session();
}

uint64_t sub_1D43C238C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 256));
}

uint64_t sub_1D43C2394()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1D43C23B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 432))(a1, v1);
}

uint64_t sub_1D43C23C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1D43C23D0()
{
  return swift_slowAlloc();
}

uint64_t sub_1D43C23E0()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 144) + 8))(v0, *(_QWORD *)(v1 - 136));
}

uint64_t sub_1D43C23F0()
{
  return swift_slowAlloc();
}

uint64_t sub_1D43C2400(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return sub_1D42B5400((uint64_t)va);
}

uint64_t sub_1D43C2414()
{
  return swift_release();
}

id sub_1D43C241C()
{
  return sub_1D4457124();
}

uint64_t sub_1D43C243C()
{
  return swift_endAccess();
}

void sub_1D43C2444(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t sub_1D43C2450(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = a1;
  return v1 - 72;
}

uint64_t sub_1D43C2464(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1D43D72EC(a1, a2, (uint64_t *)(v2 - 104));
}

void sub_1D43C2470(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  sub_1D447DF1C((uint64_t *)va);
}

uint64_t sub_1D43C2490(uint64_t result)
{
  byte_1EFEA77F0 = result;
  return result;
}

uint64_t sub_1D43C24B4@<X0>(void *__src@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  void *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  _UNKNOWN **v11;
  uint64_t v12;
  void *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17[4];
  _BYTE __dst[72];

  memcpy(__dst, __src, 0x41uLL);
  if (byte_1EFEA77F0 == 1)
  {
    if (qword_1EFE40338 != -1)
      swift_once();
    v3 = sub_1D430710C();
    v4 = (void *)sub_1D42CC880(v3, (uint64_t)qword_1EFEA7700);
    sub_1D4519FFC();
    v5 = sub_1D43C39B8();
    if (sub_1D43C3A0C(v5))
    {
      *(_WORD *)sub_1D42CC940() = 0;
      sub_1D43C39C0(&dword_1D42A7000, v6, v7, "Instantiating SNSystemAudioAnalyzer with In-Process Computation");
      sub_1D42CC934();
    }

    memcpy(v17, __dst, 0x41uLL);
    v8 = type metadata accessor for SNSystemAudioAnalyzerLocal();
    swift_allocObject();
    sub_1D42B5B38((uint64_t)__dst);
    result = sub_1D43FAE88(1, v17);
    v10 = result;
    v11 = &off_1E97A9F50;
  }
  else
  {
    if (qword_1EFE40338 != -1)
      swift_once();
    v12 = sub_1D430710C();
    v13 = (void *)sub_1D42CC880(v12, (uint64_t)qword_1EFEA7700);
    sub_1D4519FFC();
    v14 = sub_1D43C39B8();
    if (sub_1D43C3A0C(v14))
    {
      *(_WORD *)sub_1D42CC940() = 0;
      sub_1D43C39C0(&dword_1D42A7000, v15, v16, "Instantiating SNSystemAudioAnalyzer in Daemon");
      sub_1D42CC934();
    }

    sub_1D42B5B38((uint64_t)__dst);
    v10 = sub_1D43C38E4(__dst);
    result = type metadata accessor for SNSystemAudioAnalyzerRemote();
    v8 = result;
    v11 = &off_1E97AA9A0;
  }
  a2[3] = v8;
  a2[4] = (uint64_t)v11;
  *a2 = v10;
  return result;
}

id SNSystemAudioAnalyzer.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id SNSystemAudioAnalyzer.init()()
{
  uint64_t v0;
  char v1;
  void (*v2)(uint64_t *__return_ptr, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  id v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t __src;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38[5];
  uint64_t v39[7];
  _QWORD v40[3];
  char v41[40];
  uint64_t v42;
  _BYTE v43[24];

  swift_getObjectType();
  v0 = MGGetProductType();
  sub_1D4380880(v0, v39);
  sub_1D4377088((uint64_t)v39, (uint64_t)v41, &qword_1EFE506B0);
  if (v42)
  {
    v1 = v41[0];
    sub_1D42F11A4(v39);
    sub_1D4380388(v1);
    v2 = (void (*)(uint64_t *__return_ptr, uint64_t))v40[2];
    sub_1D4377088((uint64_t)v40, (uint64_t)v43, &qword_1EFE4A7A0);
    v3 = sub_1D42F1244((uint64_t)v43);
    v2(&__src, v3);
    swift_release();
    v4 = __src;
    v5 = v25;
    v6 = v26;
    v7 = v27;
    v8 = v28;
    v9 = v29;
    v10 = v30;
    v11 = v31;
    v12 = v32;
    v13 = v33;
    v14 = v34;
    v15 = v35;
    v16 = v36;
    v17 = v37;
  }
  else
  {
    if (qword_1EFE48EF0 != -1)
      swift_once();
    v5 = *(_QWORD *)algn_1EFEA7998;
    v7 = qword_1EFEA79A8;
    v22 = qword_1EFEA79A0;
    v23 = qword_1EFEA7990;
    v9 = qword_1EFEA79B8;
    v21 = qword_1EFEA79B0;
    v20 = byte_1EFEA79C0;
    v11 = byte_1EFEA79C1;
    v12 = byte_1EFEA79C2;
    v13 = byte_1EFEA79C3;
    v14 = byte_1EFEA79C4;
    v15 = byte_1EFEA79C5;
    v16 = qword_1EFEA79C8;
    v17 = byte_1EFEA79D0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = v20;
    v8 = v21;
    v6 = v22;
    v4 = v23;
  }
  __src = v4;
  v25 = v5;
  v26 = v6;
  v27 = v7;
  v28 = v8;
  v29 = v9;
  v30 = v10;
  v31 = v11;
  v32 = v12;
  v33 = v13;
  v34 = v14;
  v35 = v15;
  v36 = v16;
  v37 = v17;
  sub_1D43C24B4(&__src, v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = sub_1D43C28A4((uint64_t)v38);
  sub_1D43C3A38();
  return v18;
}

id sub_1D43C28A4(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;
  objc_super v6;

  v3 = objc_allocWithZone(v1);
  sub_1D42E2D8C(a1, (uint64_t)v3 + OBJC_IVAR___SNSystemAudioAnalyzer_impl);
  v6.receiver = v3;
  v6.super_class = v1;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  sub_1D42B5400(a1);
  return v4;
}

id sub_1D43C2914(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  id v12;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26[5];

  swift_getObjectType();
  v2 = *(_QWORD *)&a1[OBJC_IVAR___SNAudioConfiguration_impl + 16];
  v3 = *(_QWORD *)&a1[OBJC_IVAR___SNAudioConfiguration_impl + 24];
  v4 = a1[OBJC_IVAR___SNAudioConfiguration_impl + 48];
  v5 = a1[OBJC_IVAR___SNAudioConfiguration_impl + 49];
  v6 = a1[OBJC_IVAR___SNAudioConfiguration_impl + 50];
  v7 = a1[OBJC_IVAR___SNAudioConfiguration_impl + 51];
  v8 = a1[OBJC_IVAR___SNAudioConfiguration_impl + 52];
  v9 = a1[OBJC_IVAR___SNAudioConfiguration_impl + 53];
  v10 = *(_QWORD *)&a1[OBJC_IVAR___SNAudioConfiguration_impl + 56];
  v11 = a1[OBJC_IVAR___SNAudioConfiguration_impl + 64];
  v14 = *(_OWORD *)&a1[OBJC_IVAR___SNAudioConfiguration_impl];
  v15 = v2;
  v16 = v3;
  v17 = *(_OWORD *)&a1[OBJC_IVAR___SNAudioConfiguration_impl + 32];
  v18 = v4;
  v19 = v5;
  v20 = v6;
  v21 = v7;
  v22 = v8;
  v23 = v9;
  v24 = v10;
  v25 = v11;
  sub_1D43C24B4(&v14, v26);
  v12 = sub_1D43C28A4((uint64_t)v26);

  sub_1D43C3A38();
  return v12;
}

uint64_t sub_1D43C2A08(void *a1, void *a2)
{
  void *v2;
  uint64_t v5;
  id v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v26;
  uint64_t v27;

  if (qword_1EFE40338 != -1)
    swift_once();
  v5 = sub_1D451A014();
  sub_1D42CC880(v5, (uint64_t)qword_1EFEA7700);
  v6 = v2;
  sub_1D4311FD0();
  sub_1D4311FD0();
  v7 = (char *)v6;
  v8 = sub_1D4519FFC();
  v9 = sub_1D451AF74();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    *(_DWORD *)v10 = 136315650;
    v26 = a2;
    v11 = objc_msgSend(v7, sel_description);
    v12 = sub_1D451A6EC();
    v14 = v13;

    sub_1D43D72EC(v12, v14, &v27);
    sub_1D43C39FC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    v15 = objc_msgSend(a1, (SEL)&selRef_analyzeWithCompletionHandler_);
    v16 = sub_1D451A6EC();
    v18 = v17;

    sub_1D43D72EC(v16, v18, &v27);
    sub_1D43C39FC();
    sub_1D43C39EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 22) = 2080;
    v19 = objc_msgSend(v26, sel_description);
    v20 = sub_1D451A6EC();
    v22 = v21;

    sub_1D43D72EC(v20, v22, &v27);
    sub_1D451B1A8();
    sub_1D43C39EC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D42A7000, v8, v9, "(SNSystemAudioAnalyzer:%s) addRequest:%s withObserver:%s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    sub_1D42CC934();
  }

  sub_1D43C39EC();
  sub_1D43C39EC();

  v23 = *(_QWORD *)&v7[OBJC_IVAR___SNSystemAudioAnalyzer_impl + 24];
  v24 = *(_QWORD *)&v7[OBJC_IVAR___SNSystemAudioAnalyzer_impl + 32];
  sub_1D42B5528(&v7[OBJC_IVAR___SNSystemAudioAnalyzer_impl], v23);
  return (*(uint64_t (**)(void *, void *, uint64_t, uint64_t))(v24 + 8))(a1, a2, v23, v24);
}

uint64_t sub_1D43C2DB4(void *a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  NSObject *v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t type;
  uint64_t v26[2];

  if (qword_1EFE40338 != -1)
    swift_once();
  v6 = sub_1D430710C();
  v7 = sub_1D42CC880(v6, (uint64_t)qword_1EFEA7700);
  v8 = v2;
  sub_1D4311FD0();
  sub_1D4311FD0();
  v9 = v8;
  v10 = v7;
  sub_1D4519FFC();
  v11 = sub_1D43C39B8();
  if (sub_1D43B3B88(v11))
  {
    type = v7;
    v12 = sub_1D42CC940();
    v26[0] = sub_1D42CC940();
    *(_DWORD *)v12 = 136315650;
    v13 = objc_msgSend(v9, sel_description);
    v14 = sub_1D43C39F4();
    v16 = v15;

    sub_1D43D72EC(v14, v16, v26);
    sub_1D451B1A8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    v17 = objc_msgSend(a1, (SEL)&selRef_analyzeWithCompletionHandler_);
    sub_1D451A6EC();
    sub_1D43C3A5C();
    sub_1D43C3A2C(v18, v19, v26);
    sub_1D43C39D4();
    sub_1D43C3A44();
    v20 = swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 22) = 2080;
    v21 = sub_1D43B1BA0(v20, sel_description);
    sub_1D451A6EC();

    sub_1D43C39A0(v22, v23, v26);
    sub_1D451B1A8();
    sub_1D43C39AC();
    sub_1D4347994();
    _os_log_impl(&dword_1D42A7000, v10, type, "(SNSystemAudioAnalyzer:%s) addRequestInBackground:%s withObserver:%s", (uint8_t *)v12, 0x20u);
    swift_arrayDestroy();
    sub_1D42CC934();
  }

  sub_1D43C39AC();
  sub_1D43C3A44();

  return sub_1D43C2A08(a1, a2);
}

void sub_1D43C3104(uint64_t a1)
{
  void *v1;
  os_log_type_t v2;
  uint64_t v4;
  NSObject *v5;
  id v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (qword_1EFE40338 != -1)
    swift_once();
  v4 = sub_1D430710C();
  v5 = sub_1D42CC880(v4, (uint64_t)qword_1EFEA7700);
  v6 = v1;
  sub_1D4311FD0();
  v7 = (char *)v6;
  v8 = v5;
  sub_1D4519FFC();
  v9 = sub_1D43C39B8();
  if (sub_1D43B3B88(v9))
  {
    v10 = sub_1D42CC940();
    v21 = sub_1D42CC940();
    *(_DWORD *)v10 = 136315394;
    v11 = objc_msgSend(v7, sel_description);
    sub_1D43C39F4();
    sub_1D43C39E0();
    sub_1D43C39A0(v12, v13, &v21);
    sub_1D43C39D4();

    v14 = sub_1D4347994();
    *(_WORD *)(v10 + 12) = 2080;
    v15 = sub_1D43B1BA0(v14, sel_description);
    sub_1D451A6EC();
    sub_1D43C3A5C();
    sub_1D43C3A2C(v16, v17, &v21);
    sub_1D43C39D4();
    sub_1D43C39AC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D42A7000, v8, v2, "(SNSystemAudioAnalyzer:%s) removeRequest:%s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    sub_1D42CC934();
  }

  sub_1D43C39AC();
  v18 = &v7[OBJC_IVAR___SNSystemAudioAnalyzer_impl];
  v19 = *(_QWORD *)&v7[OBJC_IVAR___SNSystemAudioAnalyzer_impl + 24];
  v20 = *((_QWORD *)v18 + 4);
  sub_1D42B5528(v18, v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(a1, v19, v20);
  sub_1D4340954();
}

uint64_t sub_1D43C3348()
{
  void *v0;
  os_log_type_t v1;
  uint64_t v2;
  NSObject *v3;
  char *v4;
  NSObject *v5;
  os_log_type_t v6;
  _DWORD *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  if (qword_1EFE40338 != -1)
    swift_once();
  v2 = sub_1D430710C();
  v3 = sub_1D42CC880(v2, (uint64_t)qword_1EFEA7700);
  v4 = v0;
  v5 = v3;
  sub_1D4519FFC();
  v6 = sub_1D43C39B8();
  if (sub_1D4307454(v6))
  {
    v7 = (_DWORD *)sub_1D42CC940();
    v8 = sub_1D42CC940();
    v16 = v8;
    *v7 = 136315138;
    v9 = sub_1D43B1BA0(v8, sel_description);
    sub_1D43C39F4();
    sub_1D43C39E0();
    sub_1D43C39A0(v10, v11, &v16);
    sub_1D43C3A68();

    sub_1D4347994();
    sub_1D43C3A50(&dword_1D42A7000, v5, v1, "(SNSystemAudioAnalyzer:%s) removeAllRequests");
    sub_1D43C3A1C();
    sub_1D42CC934();
  }

  v12 = &v4[OBJC_IVAR___SNSystemAudioAnalyzer_impl];
  v13 = *(_QWORD *)&v4[OBJC_IVAR___SNSystemAudioAnalyzer_impl + 24];
  v14 = *((_QWORD *)v12 + 4);
  sub_1D42B5528(v12, v13);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 24))(v13, v14);
}

void sub_1D43C3548(const char *a1)
{
  void *v1;
  os_log_type_t v2;
  uint64_t v4;
  NSObject *v5;
  NSObject *v6;
  os_log_type_t v7;
  _DWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;

  if (qword_1EFE40338 != -1)
    swift_once();
  v4 = sub_1D430710C();
  v5 = sub_1D42CC880(v4, (uint64_t)qword_1EFEA7700);
  v38 = v1;
  v6 = v5;
  sub_1D4519FFC();
  v7 = sub_1D43C39B8();
  if (sub_1D4307454(v7))
  {
    v8 = (_DWORD *)sub_1D42CC940();
    v41 = sub_1D42CC940();
    *v8 = 136315138;
    v9 = objc_msgSend(v38, sel_description);
    sub_1D43C39F4();
    sub_1D43C39E0();
    sub_1D43C39A0(v10, v11, &v41);
    v12 = sub_1D43C3A68();
    sub_1D43C3A74(v12, v13, v14, v15, v16, v17, v18, v19, v36, v38);
    sub_1D43C3A74(v20, v21, v22, v23, v24, v25, v26, v27, v37, v39);
    sub_1D4347994();
    sub_1D43C3A50(&dword_1D42A7000, v6, v2, a1);
    sub_1D43C3A1C();
    sub_1D42CC934();
  }

  sub_1D43C3A74(v28, v29, v30, v31, v32, v33, v34, v35, v36, v38);
}

id SNSystemAudioAnalyzer.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D43C3734(void *a1, void *a2)
{
  return sub_1D43C2A08(a1, a2);
}

void sub_1D43C3754(uint64_t a1)
{
  sub_1D43C3104(a1);
}

uint64_t sub_1D43C3774()
{
  return sub_1D43C3348();
}

uint64_t type metadata accessor for SNSystemAudioAnalyzer()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNSystemAudioAnalyzer()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1D43C37C0(const void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v11[24];
  void *v12;
  _UNKNOWN **v13;

  v4 = sub_1D4519D20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = &unk_1E979AC10;
  v13 = &off_1E979ABF0;
  sub_1D42E2D8C((uint64_t)v11, a2 + OBJC_IVAR____TtC13SoundAnalysis27SNSystemAudioAnalyzerRemote_environment);
  type metadata accessor for SNSystemAudioAnalyzerRemote.State();
  v8 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v8 + 112) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a2 + OBJC_IVAR____TtC13SoundAnalysis27SNSystemAudioAnalyzerRemote_state) = v8;
  sub_1D4519D14();
  sub_1D42B5400((uint64_t)v11);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v5 + 32))(a2 + OBJC_IVAR____TtC13SoundAnalysis27SNSystemAudioAnalyzerRemote_id, v7, v4);
  memcpy((void *)(a2 + OBJC_IVAR____TtC13SoundAnalysis27SNSystemAudioAnalyzerRemote_audioConfiguration), a1, 0x41uLL);
  return a2;
}

uint64_t sub_1D43C38E4(const void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];
  void *v8;
  _UNKNOWN **v9;

  v8 = &unk_1E979AC10;
  v9 = &off_1E979ABF0;
  type metadata accessor for SNSystemAudioAnalyzerRemote();
  v2 = swift_allocObject();
  v3 = sub_1D42CAEF0((uint64_t)v7, (uint64_t)&unk_1E979AC10);
  MEMORY[0x1E0C80A78](v3);
  (*(void (**)(void))(v4 + 16))();
  v5 = sub_1D43C37C0(a1, v2);
  sub_1D42B5400((uint64_t)v7);
  return v5;
}

uint64_t sub_1D43C39A0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  unint64_t v4;

  return sub_1D43D72EC(v3, v4, a3);
}

uint64_t sub_1D43C39AC()
{
  return swift_unknownObjectRelease_n();
}

uint64_t sub_1D43C39B8()
{
  return sub_1D451AF74();
}

void sub_1D43C39C0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_1D43C39D4()
{
  return sub_1D451B1A8();
}

void sub_1D43C39E0()
{
  void *v0;

}

uint64_t sub_1D43C39EC()
{
  return swift_unknownObjectRelease_n();
}

uint64_t sub_1D43C39F4()
{
  return sub_1D451A6EC();
}

uint64_t sub_1D43C39FC()
{
  return sub_1D451B1A8();
}

BOOL sub_1D43C3A0C(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1D43C3A1C()
{
  return swift_arrayDestroy();
}

uint64_t sub_1D43C3A2C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;
  uint64_t v4;

  return sub_1D43D72EC(v4, v3, a3);
}

uint64_t sub_1D43C3A38()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1D43C3A44()
{
  return swift_unknownObjectRelease_n();
}

void sub_1D43C3A50(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

void sub_1D43C3A5C()
{
  void *v0;

}

uint64_t sub_1D43C3A68()
{
  return sub_1D451B1A8();
}

void sub_1D43C3A74(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

}

uint64_t sub_1D43C3A7C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[5];

  v8[3] = MEMORY[0x1E0DEAC20];
  v8[4] = MEMORY[0x1E0CB1AA8];
  v8[0] = a1;
  v8[1] = a2;
  v2 = sub_1D42B5528(v8, MEMORY[0x1E0DEAC20]);
  v3 = *v2;
  if (*v2 && (v4 = v2[1], v5 = v4 - v3, v4 != v3))
  {
    if (v5 <= 14)
    {
      v6 = sub_1D4519BD0();
    }
    else if ((unint64_t)v5 >= 0x7FFFFFFF)
    {
      v6 = MEMORY[0x1D825B524]();
    }
    else
    {
      v6 = MEMORY[0x1D825B53C]();
    }
  }
  else
  {
    v6 = 0;
  }
  sub_1D42B5400((uint64_t)v8);
  return v6;
}

void sub_1D43C3B34(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  v8 = sub_1D42B28FC(&qword_1EFE4F940);
  v9 = sub_1D43CA330(&qword_1EFE4F948, &qword_1EFE4F940);
  v7[0] = a1;
  v7[1] = a2;
  v4 = sub_1D42B5528(v7, v8);
  if (*v4)
    v5 = *v4 + v4[1];
  else
    v5 = 0;
  sub_1D43C9D6C(*v4, v5, &v6);
  sub_1D42B5400((uint64_t)v7);
  sub_1D42D7120();
}

void sub_1D43C3BD0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[5];

  v5[3] = MEMORY[0x1E0DEBC70];
  v5[4] = MEMORY[0x1E0CB23F0];
  v5[0] = a1;
  v5[1] = a2;
  v2 = sub_1D42B5528(v5, MEMORY[0x1E0DEBC70]);
  if (*v2)
    v3 = v2[1];
  else
    v3 = 0;
  sub_1D43C9D6C(*v2, v3, &v4);
  sub_1D42B5400((uint64_t)v5);
  sub_1D42D7120();
}

uint64_t sub_1D43C3C48(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *, char *), uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  __int16 v7;
  char v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v6 = a1;
  v7 = a2;
  v8 = BYTE2(a2);
  v9 = BYTE3(a2);
  v10 = BYTE4(a2);
  v11 = BYTE5(a2);
  return a3(&v6, (char *)&v6 + a5);
}

void sub_1D43C3D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __int16 v4;
  char v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = BYTE2(a2);
  v6 = BYTE3(a2);
  v7 = BYTE4(a2);
  v8 = BYTE5(a2);
  sub_1D44AD4A4((uint64_t)&v3, a3);
}

unsigned int *sub_1D43C3DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unsigned int *result;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  result = (unsigned int *)sub_1D446D63C((uint64_t)&v8, (uint64_t)&v8 + a3, 4);
  if (!v3)
  {
    if (result)
    {
      if (!v5 || v6 == v5)
      {
        return (unsigned int *)*result;
      }
      else
      {
        sub_1D4370694();
        swift_allocError();
        *v7 = 3;
        return (unsigned int *)swift_willThrow();
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_1D43C3EF8(uint64_t a1)
{
  uint64_t v1;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];
  __int16 v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _BYTE v32[146];

  *(_QWORD *)&v32[138] = *MEMORY[0x1E0C80C00];
  sub_1D43C6264(2036490594, 0xE400000000000000);
  if (!v1)
  {
    v4 = v3;
    sub_1D43CB138(0x72615F7265746177, 0xEE00746361666974);
    v6 = v5;
    sub_1D43CB138(0x7472615F646E6977, 0xED00007463616669);
    v8 = v7;
    sub_1D43CB138(0x615F657665656C73, 0xEF74636166697472);
    v17[0] = 0x1000100000001;
    v17[1] = 1;
    v18 = 1024;
    v19 = v4;
    __asm { FMOV            V0.2S, #0.75 }
    v20 = _D0;
    v21 = v6;
    v22 = _D0;
    v23 = v8;
    v24 = _D0;
    v25 = v14;
    v26 = _D0;
    v27 = 0u;
    v28 = 0u;
    v29 = 0u;
    v30 = 0u;
    v31 = 0;
    v15 = sub_1D43C3A7C((uint64_t)v17, (uint64_t)v32);
    sub_1D43C6DE4(a1, 34, v15, v16);
    sub_1D43CAF58(v15);
  }
}

void sub_1D43C40AC()
{
  uint64_t v0;
  id v1;
  float v2;
  float v3;
  char v4;
  id v5;
  float v6;
  float v7;
  id v8;
  float v9;
  float v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  unsigned __int8 v13;
  uint64_t v14;
  int v15;
  char v16;
  int v17;
  float v18;
  float v19;
  int v20;
  float v21;
  float v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[154];

  *(_QWORD *)&v29[138] = *MEMORY[0x1E0C80C00];
  if (qword_1EFE47240 != -1)
    swift_once();
  v1 = sub_1D43CB160((void *)qword_1EFE47238);
  sub_1D451A5CC();
  sub_1D42B6EBC();
  sub_1D43CAF84();
  if (v0)
  {
    sub_1D43CB0C8();
    sub_1D42CB208();
    v2 = 0.75;
  }
  else
  {
    sub_1D42CB208();
    v3 = sub_1D43CB028();
    if (v4)
      v2 = v3;
    else
      v2 = 0.75;
  }
  v5 = sub_1D43CB160((void *)qword_1EFE47238);
  sub_1D451A5CC();
  sub_1D42B6EBC();
  sub_1D43CAF84();
  if (v0)
  {
    sub_1D43CB0C8();
    sub_1D42CB208();
    v6 = 0.75;
  }
  else
  {
    sub_1D42CB208();
    v7 = sub_1D43CB028();
    if (v4)
      v6 = v7;
    else
      v6 = 0.75;
  }
  v8 = sub_1D43CB160((void *)qword_1EFE47238);
  sub_1D451A5CC();
  sub_1D42B6EBC();
  sub_1D445720C();
  sub_1D42CB208();
  v9 = sub_1D43CB028();
  if (v4)
    v10 = v9;
  else
    v10 = 0.5;
  sub_1D43CAD8C();
  v12 = v11;
  sub_1D43CADC8();
  v14 = 0x2000100000002;
  v15 = 1;
  v16 = 2;
  v17 = v12;
  v18 = v2;
  v19 = v10;
  v20 = v13;
  v21 = v6;
  v22 = v10;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  sub_1D43C3A7C((uint64_t)&v14, (uint64_t)v29);
  sub_1D43CAE38();
  sub_1D43CAEA8();
}

void sub_1D43C4380()
{
  uint64_t v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  if (qword_1EFE48E90 != -1)
    swift_once();
  if (*((_QWORD *)off_1EFE4F930 + 2) >= 0x100uLL)
  {
    sub_1D42DCED4();
    sub_1D43074E8();
    __break(1u);
  }
  else
  {
    sub_1D43CAE08(2036490594, 0xE400000000000000);
    if (!v0)
    {
      sub_1D43CAE08(0x72615F7265746177, 0xEE00746361666974);
      sub_1D43CAE08(0x7472615F646E6977, 0xED00007463616669);
      sub_1D43CAE08(0x615F657665656C73, 0xEF74636166697472);
      sub_1D43CAD8C();
      sub_1D43CADC8();
      sub_1D43CACD4(v1, 0x100000000, v2, v3, v4, v5, v6, v7, SHIDWORD(v7), v8, v9, SHIDWORD(v9), v10, v11, v12, v13, v14, SWORD2(v14), SHIWORD(v14));
      sub_1D43CAE38();
      sub_1D43CAEA8();
    }
    sub_1D43CAE8C();
  }
}

void sub_1D43C4534(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  os_unfair_lock_s *v13;

  v4 = sub_1D42EA2A8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1D434799C();
  if (qword_1EFE40338 != -1)
    swift_once();
  v6 = sub_1D430710C();
  sub_1D42CC880(v6, (uint64_t)qword_1EFEA7700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v2, a1, v4);
  v7 = sub_1D4519FFC();
  v8 = sub_1D451AF74();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = sub_1D42CC940();
    sub_1D42CC940();
    *(_DWORD *)v9 = 136315394;
    sub_1D43CA3E0(&qword_1EFE4CB00);
    v10 = sub_1D451B7C0();
    v12 = sub_1D43C2464(v10, v11);
    sub_1D43CB180(v12);
    sub_1D451B1A8();
    swift_bridgeObjectRelease();
    sub_1D43CB0B8();
    *(_WORD *)(v9 + 12) = 1024;
    sub_1D451B1A8();
    _os_log_impl(&dword_1D42A7000, v7, v8, "AOP use-case added: uuuid: %s; type: %u", (uint8_t *)v9, 0x12u);
    swift_arrayDestroy();
    sub_1D42CC934();
  }
  sub_1D43CB0B8();

  v13 = *(os_unfair_lock_s **)(*(_QWORD *)(v1 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v13);
  sub_1D43CAF28();
  sub_1D441793C();
  swift_endAccess();
  ++*(_QWORD *)(v1 + 48);
  os_unfair_lock_unlock(v13);
  swift_release();
  sub_1D43CB168();
  sub_1D42CB520();
}

void sub_1D43C4750(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD v15[6];

  v3 = (os_unfair_lock_s *)sub_1D42EA2A8();
  v4 = *(_QWORD *)&v3[-2]._os_unfair_lock_opaque;
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFE40338 != -1)
    swift_once();
  v7 = sub_1D430710C();
  sub_1D42CC880(v7, (uint64_t)qword_1EFEA7700);
  (*(void (**)(char *, uint64_t, os_unfair_lock_s *))(v4 + 16))(v6, a1, v3);
  v8 = sub_1D4519FFC();
  v9 = sub_1D451AF74();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = sub_1D42CC940();
    v15[1] = a1;
    v11 = (uint8_t *)v10;
    v15[3] = sub_1D42CC940();
    *(_DWORD *)v11 = 136315138;
    v15[0] = v11 + 4;
    sub_1D43CA3E0(&qword_1EFE4CB00);
    v12 = sub_1D451B7C0();
    v14 = sub_1D43C2464(v12, v13);
    sub_1D43CB180(v14);
    sub_1D451B1A8();
    swift_bridgeObjectRelease();
    sub_1D43CB0A8();
    sub_1D43CB120(&dword_1D42A7000, v8, v9, "AOP use-case removed: uuuid: %s", v11);
    swift_arrayDestroy();
    sub_1D42CC934();
  }
  sub_1D43CB0A8();

  sub_1D43CB114();
  os_unfair_lock_lock(v3);
  sub_1D43CAF28();
  sub_1D42E8160();
  swift_endAccess();
  ++*(_QWORD *)(v1 + 48);
  os_unfair_lock_unlock(v3);
  swift_release();
  sub_1D43CB168();
  sub_1D42CB520();
}

uint64_t sub_1D43C4944()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for _SNAOPClassfication(0);
  v1 = sub_1D451B4FC();
  if (v0)
  {
    sub_1D42B28FC(&qword_1EFE49BB0);
    swift_dynamicCast();
    swift_willThrowTypedImpl();
  }
  return v1;
}

uint64_t sub_1D43C49DC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1D451B4FC();
  if (v0)
  {
    sub_1D42B28FC(&qword_1EFE49BB0);
    swift_dynamicCast();
    swift_willThrowTypedImpl();
  }
  return v1;
}

_QWORD *sub_1D43C4A68(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  _DWORD *v6;

  type metadata accessor for SafeLock();
  v5 = swift_allocObject();
  v6 = (_DWORD *)sub_1D42CC940();
  *v6 = 0;
  *(_QWORD *)(v5 + 16) = v6;
  v2[2] = v5;
  v2[3] = a1;
  v2[4] = a2;
  sub_1D42EA2A8();
  sub_1D43CA3E0(&qword_1EFE4A518);
  v2[5] = sub_1D451A5E4();
  v2[6] = 0;
  return v2;
}

void sub_1D43C4B00(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];

  v2 = v1;
  v4 = *v1;
  v5 = sub_1D42B28FC(&qword_1EFE4DC70);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D451AAC4();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v7, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v2;
  v9[5] = a1;
  v9[6] = v4;
  LODWORD(a1) = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v7, 1, v8);
  swift_retain();
  if ((_DWORD)a1 == 1)
  {
    sub_1D438E444((uint64_t)v7);
    v10 = 0;
    v11 = 0;
  }
  else
  {
    sub_1D451AAB8();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    if (v9[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v10 = sub_1D451AA70();
      v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      v10 = 0;
      v11 = 0;
    }
  }
  if (v11 | v10)
  {
    v13[0] = 0;
    v13[1] = 0;
    v13[2] = v10;
    v13[3] = v11;
  }
  swift_task_create();
  swift_release();
  sub_1D42CB0F8();
}

uint64_t sub_1D43C4CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[2] = a4;
  v5[3] = a5;
  v6 = sub_1D451B4D8();
  v5[4] = v6;
  v5[5] = *(_QWORD *)(v6 - 8);
  v5[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D43C4D00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  v1 = sub_1D451BA30();
  v3 = v2;
  sub_1D451B4CC();
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1EFE52238 + dword_1EFE52238);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v4;
  *v4 = v0;
  v4[1] = sub_1D43C4D94;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_1D43C4D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return swift_task_switch();
}

uint64_t sub_1D43C4E14()
{
  uint64_t v0;

  sub_1D43C4E80(*(_QWORD *)(v0 + 24));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D43C4E54()
{
  uint64_t v0;

  swift_task_dealloc();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43C4E80(uint64_t a1)
{
  os_unfair_lock_s *v1;

  sub_1D43CB114();
  os_unfair_lock_lock(v1);
  sub_1D43C4EC8(a1);
  os_unfair_lock_unlock(v1);
  return swift_release();
}

void sub_1D43C4EC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void (*v7)(void);
  uint64_t v8;
  _QWORD *v9;
  __int16 v10;
  __int16 v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  NSObject *oslog;

  if (*(_QWORD *)(v1 + 48) == a1)
  {
    v2 = v1;
    if (qword_1EFE40338 != -1)
      swift_once();
    v3 = sub_1D430710C();
    sub_1D42CC880(v3, (uint64_t)qword_1EFEA7700);
    v4 = sub_1D4519FFC();
    v5 = sub_1D451AF44();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)sub_1D42CC940();
      *(_DWORD *)v6 = 134217984;
      sub_1D43CAF60();
      sub_1D43CB120(&dword_1D42A7000, v4, v5, "Flushing snapshot of AOP state (snapshot ID: %ld)", v6);
      sub_1D42CC934();
    }

    v7 = *(void (**)(void))(v2 + 24);
    swift_beginAccess();
    v8 = swift_bridgeObjectRetain();
    v9 = sub_1D43C50D8(v8);
    v11 = v10;
    swift_bridgeObjectRelease();
    sub_1D44CF08C((uint64_t)v9, v11 & 0x101);
    v7();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1EFE40338 != -1)
      swift_once();
    v12 = sub_1D430710C();
    sub_1D42CC880(v12, (uint64_t)qword_1EFEA7700);
    oslog = sub_1D4519FFC();
    v13 = sub_1D451AF44();
    if (os_log_type_enabled(oslog, v13))
    {
      v14 = (uint8_t *)sub_1D42CC940();
      *(_DWORD *)v14 = 134217984;
      sub_1D43CAF60();
      sub_1D43CB120(&dword_1D42A7000, oslog, v13, "Skipping snapshot of AOP state (snapshot ID: %ld)", v14);
      sub_1D42CC934();
    }

  }
}

_QWORD *sub_1D43C50D8(uint64_t a1)
{
  _QWORD *result;
  int64_t v3;
  unint64_t v4;
  int64_t v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  result = sub_1D43F6E7C(&v21, a1);
  v3 = v24;
  v4 = v25;
  v5 = (unint64_t)(v23 + 64) >> 6;
  while (v4)
  {
    v6 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    v7 = v6 | (v3 << 6);
LABEL_22:
    if (*(_DWORD *)(*(_QWORD *)(v21 + 56) + 4 * v7) == 2)
      goto LABEL_23;
  }
  v8 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
LABEL_47:
    __break(1u);
    return result;
  }
  if (v8 >= v5)
    goto LABEL_23;
  v9 = *(_QWORD *)(v22 + 8 * v8);
  v10 = v3 + 1;
  if (v9)
    goto LABEL_21;
  v10 = v3 + 2;
  if (v3 + 2 >= v5)
    goto LABEL_23;
  v9 = *(_QWORD *)(v22 + 8 * v10);
  if (v9)
    goto LABEL_21;
  v10 = v3 + 3;
  if (v3 + 3 >= v5)
    goto LABEL_23;
  v9 = *(_QWORD *)(v22 + 8 * v10);
  if (v9)
    goto LABEL_21;
  v10 = v3 + 4;
  if (v3 + 4 >= v5)
    goto LABEL_23;
  v9 = *(_QWORD *)(v22 + 8 * v10);
  if (v9)
    goto LABEL_21;
  v10 = v3 + 5;
  if (v3 + 5 >= v5)
    goto LABEL_23;
  v9 = *(_QWORD *)(v22 + 8 * v10);
  if (v9)
    goto LABEL_21;
  v10 = v3 + 6;
  if (v3 + 6 >= v5)
    goto LABEL_23;
  v9 = *(_QWORD *)(v22 + 8 * v10);
  if (v9)
  {
LABEL_21:
    v4 = (v9 - 1) & v9;
    v7 = __clz(__rbit64(v9)) + (v10 << 6);
    v3 = v10;
    goto LABEL_22;
  }
  v11 = v3 + 7;
  while (v11 < v5)
  {
    v9 = *(_QWORD *)(v22 + 8 * v11++);
    if (v9)
    {
      v10 = v11 - 1;
      goto LABEL_21;
    }
  }
LABEL_23:
  swift_bridgeObjectRetain();
  swift_release();
  result = sub_1D43F6E7C(&v26, a1);
  v12 = v29;
  v13 = v30;
  v14 = (unint64_t)(v28 + 64) >> 6;
  while (2)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v12 << 6);
      goto LABEL_44;
    }
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_47;
    if (v17 >= v14)
      goto LABEL_45;
    v18 = *(_QWORD *)(v27 + 8 * v17);
    v19 = v12 + 1;
    if (v18)
      goto LABEL_43;
    v19 = v12 + 2;
    if (v12 + 2 >= v14)
      goto LABEL_45;
    v18 = *(_QWORD *)(v27 + 8 * v19);
    if (v18)
      goto LABEL_43;
    v19 = v12 + 3;
    if (v12 + 3 >= v14)
      goto LABEL_45;
    v18 = *(_QWORD *)(v27 + 8 * v19);
    if (v18)
      goto LABEL_43;
    v19 = v12 + 4;
    if (v12 + 4 >= v14)
      goto LABEL_45;
    v18 = *(_QWORD *)(v27 + 8 * v19);
    if (v18)
      goto LABEL_43;
    v19 = v12 + 5;
    if (v12 + 5 >= v14)
      goto LABEL_45;
    v18 = *(_QWORD *)(v27 + 8 * v19);
    if (v18)
      goto LABEL_43;
    v19 = v12 + 6;
    if (v12 + 6 >= v14)
      goto LABEL_45;
    v18 = *(_QWORD *)(v27 + 8 * v19);
    if (v18)
    {
LABEL_43:
      v13 = (v18 - 1) & v18;
      v16 = __clz(__rbit64(v18)) + (v19 << 6);
      v12 = v19;
LABEL_44:
      if (*(_DWORD *)(*(_QWORD *)(v26 + 56) + 4 * v16) == 1)
        goto LABEL_45;
      continue;
    }
    break;
  }
  v20 = v12 + 7;
  while (v20 < v14)
  {
    v18 = *(_QWORD *)(v27 + 8 * v20++);
    if (v18)
    {
      v19 = v20 - 1;
      goto LABEL_43;
    }
  }
LABEL_45:
  swift_bridgeObjectRetain();
  swift_release();
  return *(_QWORD **)(a1 + 16);
}

uint64_t sub_1D43C5348()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D43C5374()
{
  sub_1D43C5348();
  return swift_deallocClassInstance();
}

void sub_1D43C5394()
{
  qword_1EFE4F928 = (uint64_t)&unk_1E979C0F0;
}

uint64_t static SNAOPUtils.classNames.getter()
{
  return sub_1D43C5424(&qword_1EFE48E88);
}

void sub_1D43C53C4()
{
  off_1EFE4F930 = &unk_1E979C4A0;
}

uint64_t static SNAOPUtils.classNamesV2.getter()
{
  return sub_1D43C5424(&qword_1EFE48E90);
}

void sub_1D43C53F4()
{
  qword_1EFE4F938 = (uint64_t)&unk_1E979C430;
}

uint64_t static SNAOPUtils.classNamesAP.getter()
{
  return sub_1D43C5424(&qword_1EFE48E98);
}

uint64_t sub_1D43C5424(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

void sub_1D43C545C()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  char *v20;
  int *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  unsigned int v29;

  sub_1D42BE910();
  v3 = v2;
  v23 = v4;
  v5 = type metadata accessor for SNAOPReport.Payload(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v22 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (_DWORD *)((char *)&v22 - v12);
  v24 = sub_1D4519CE4();
  v14 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  sub_1D42D7108();
  type metadata accessor for SNTimeUtils();
  v28 = *v3;
  v29 = v3[2];
  sub_1D42DC0A4(*(_QWORD *)(v3 + 3));
  if (!v0)
  {
    static SNTimeUtils.timestampToDate(machContinuousTime:)(v15);
    if (v29 < 2)
    {
      sub_1D43C59FC((unsigned int *)(v3 + 15), v1, v29, (uint64_t)v11);
      type metadata accessor for SNAOPReport.SuccessPayload(0);
      sub_1D43CB128();
      sub_1D43CB128();
      sub_1D43CA254((uint64_t)v11, (uint64_t)v13);
      v20 = v23;
      v16 = v24;
LABEL_10:
      v21 = (int *)type metadata accessor for SNAOPReport(0);
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(&v20[v21[5]], v1, v16);
      sub_1D43CA254((uint64_t)v13, (uint64_t)&v20[v21[7]]);
      *(_DWORD *)v20 = v28;
      *(_DWORD *)&v20[v21[6]] = v29;
      goto LABEL_11;
    }
    if (v29 == 2)
    {
      sub_1D43C56DC();
      v16 = v24;
      v17 = v26;
      v18 = v27;
      *(_DWORD *)v8 = v25;
      *((_QWORD *)v8 + 1) = v17;
      *((_QWORD *)v8 + 2) = v18;
      swift_storeEnumTagMultiPayload();
      sub_1D43CA254((uint64_t)v8, (uint64_t)v13);
      goto LABEL_8;
    }
    v16 = v24;
    if (v29 == 3)
    {
      *v13 = *(_DWORD *)(v3 + 15);
      type metadata accessor for SNAOPReport.SuccessPayload(0);
      swift_storeEnumTagMultiPayload();
      sub_1D43CB128();
LABEL_8:
      v20 = v23;
      goto LABEL_10;
    }
    sub_1D43CA1FC();
    sub_1D42B6D0C();
    sub_1D4306EF8(v19, 1);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v1, v16);
  }
LABEL_11:
  sub_1D43CB140();
  sub_1D42BE844();
}

void sub_1D43C56DC()
{
  _DWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  _DWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  int v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  int v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;

  sub_1D42BE910();
  v36 = v0;
  v2 = *((unsigned __int16 *)v1 + 30);
  v3 = *((unsigned int *)v1 + 14);
  v5 = v1[5];
  v4 = v1[6];
  v6 = v1[3];
  v7 = v1[4];
  v9 = v1[1];
  v8 = v1[2];
  v10 = *v1;
  v11 = sub_1D451B9D0();
  v34 = *(_QWORD *)(v11 - 8);
  v35 = v11;
  MEMORY[0x1E0C80A78](v11);
  v33 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v10 & 0x8000) != 0)
  {
    sub_1D42DCED4();
    sub_1D43074E8();
    __break(1u);
  }
  else
  {
    v30 = v3 | (v2 << 32);
    v31 = v30 >> 16;
    v28 = WORD1(v4);
    v29 = HIDWORD(v4);
    v27 = HIWORD(v5) | ((_DWORD)v4 << 16);
    v25 = HIWORD(v7);
    v26 = HIDWORD(v5);
    v23 = HIDWORD(v6);
    v24 = v7 >> 16;
    v21 = WORD1(v6);
    v22 = v5;
    v32 = (unsigned __int16)v10;
    v40 = sub_1D42B28FC(&qword_1EFE4F978);
    v13 = sub_1D42B6F40();
    v38 = v13;
    *(_WORD *)(v13 + 16) = WORD1(v10);
    *(_DWORD *)(v13 + 18) = HIDWORD(v10);
    *(_WORD *)(v13 + 22) = v9;
    *(_DWORD *)(v13 + 24) = v9 >> 16;
    *(_WORD *)(v13 + 28) = HIWORD(v9);
    *(_DWORD *)(v13 + 30) = v8;
    *(_WORD *)(v13 + 34) = WORD2(v8);
    *(_DWORD *)(v13 + 36) = HIWORD(v8) | ((_DWORD)v6 << 16);
    *(_WORD *)(v13 + 40) = v21;
    *(_DWORD *)(v13 + 42) = v23;
    *(_WORD *)(v13 + 46) = v7;
    *(_DWORD *)(v13 + 48) = v24;
    *(_WORD *)(v13 + 52) = v25;
    *(_DWORD *)(v13 + 54) = v22;
    *(_WORD *)(v13 + 58) = v26;
    *(_DWORD *)(v13 + 60) = v27;
    *(_WORD *)(v13 + 64) = v28;
    *(_DWORD *)(v13 + 66) = v29;
    *(_WORD *)(v13 + 70) = v30;
    *(_DWORD *)(v13 + 72) = v31;
    v14 = v33;
    sub_1D451B9A0();
    sub_1D451B9C4();
    v15 = sub_1D43C49DC();
    sub_1D42B8F48();
    v38 = v15;
    sub_1D42B28FC((uint64_t *)&unk_1EFE51A80);
    sub_1D43CA330(&qword_1EFE56360, (uint64_t *)&unk_1EFE51A80);
    sub_1D451A644();
    sub_1D435EB80();
    v38 = 0;
    v39 = 0xE000000000000000;
    sub_1D451B400();
    swift_bridgeObjectRelease();
    v38 = 0xD000000000000012;
    v39 = 0x80000001D45557A0;
    v16 = v32;
    v37 = v32;
    sub_1D451B7C0();
    sub_1D451A794();
    sub_1D435EB80();
    sub_1D451A794();
    sub_1D451A794();
    swift_bridgeObjectRelease();
    v17 = v38;
    v18 = v39;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v35);
    v19 = v36;
    *v36 = v16;
    *((_QWORD *)v19 + 1) = v17;
    *((_QWORD *)v19 + 2) = v18;
    sub_1D43CB140();
    sub_1D42BE844();
  }
}

uint64_t sub_1D43C59FC@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  int v8;
  char v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  char v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void (*v32)(char *, uint64_t);
  uint64_t result;
  _BYTE *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  uint64_t v49;
  unsigned int v50;
  char v51;
  int v52;
  char v53;
  int v54;
  char v55;
  int v56;
  char v57;
  unsigned int v58;
  char v59;
  int v60;
  char v61;
  int v62;
  char v63;
  int v64;
  char v65;
  unsigned int v66;
  char v67;
  int v68;
  char v69;
  int v70;
  uint64_t v71;

  v49 = a2;
  v39 = a4;
  v6 = *((unsigned __int8 *)a1 + 4);
  v7 = *a1;
  v8 = *(unsigned int *)((char *)a1 + 5);
  v9 = *((_BYTE *)a1 + 9);
  v10 = *(unsigned int *)((char *)a1 + 10);
  v11 = *((unsigned __int8 *)a1 + 14);
  v12 = *(unsigned int *)((char *)a1 + 15);
  v45 = *((unsigned __int8 *)a1 + 19);
  v46 = v11;
  v13 = a1[5];
  v14 = *((_BYTE *)a1 + 24);
  v15 = *(unsigned int *)((char *)a1 + 25);
  v16 = *((unsigned __int8 *)a1 + 29);
  v17 = *(unsigned int *)((char *)a1 + 30);
  v43 = *((unsigned __int8 *)a1 + 34);
  v44 = v16;
  v18 = *(unsigned int *)((char *)a1 + 35);
  v19 = *((unsigned __int8 *)a1 + 39);
  v20 = a1[10];
  v41 = *((unsigned __int8 *)a1 + 44);
  v42 = v19;
  v21 = *(unsigned int *)((char *)a1 + 45);
  v40 = *((unsigned __int8 *)a1 + 49);
  v47 = *(unsigned int *)((char *)a1 + 50);
  v48 = v21;
  v22 = sub_1D4519CE4();
  sub_1D42F86A4();
  v24 = MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v38 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v38 - v27;
  if (a3 >= 2)
  {
    sub_1D43CA1FC();
    sub_1D42B6D0C();
    return sub_1D4306EF8(v34, 2);
  }
  else
  {
    v50 = v7;
    v51 = (v7 | (unint64_t)(v6 << 32)) >> 32;
    v52 = v8;
    v53 = v9;
    v54 = v10;
    v55 = v46;
    v56 = v12;
    v57 = v45;
    v58 = v13;
    v59 = v14;
    v60 = v15;
    v61 = v44;
    v62 = v17;
    v63 = v43;
    v64 = v18;
    v65 = v42;
    v66 = v20;
    v67 = v41;
    v68 = v48;
    v69 = v40;
    v70 = v47;
    v29 = v49;
    sub_1D43CAFF8((uint64_t)&v38 - v27, v49);
    sub_1D43CAFF8((uint64_t)v26, v29);
    v30 = v71;
    v31 = sub_1D43C5FE4(&v50);
    if (v30)
    {
      v32 = *(void (**)(char *, uint64_t))(v4 + 8);
      v32(v26, v22);
      return ((uint64_t (*)(char *, uint64_t))v32)(v28, v22);
    }
    else
    {
      v35 = v31;
      v36 = v39;
      sub_1D43CAFF8(v39, (uint64_t)v28);
      v37 = type metadata accessor for AOPClassificationResult();
      result = sub_1D43CAFF8(v36 + *(int *)(v37 + 20), (uint64_t)v26);
      *(_QWORD *)(v36 + *(int *)(v37 + 24)) = v35;
    }
  }
  return result;
}

uint64_t sub_1D43C5C68@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[32];

  v3 = a1 + 16;
  sub_1D42B294C(a1 + 16, (uint64_t)v5);
  type metadata accessor for _SNAOPErrorDetails(0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1D451B7C0();
    sub_1D451A794();
    sub_1D451B7C0();
    sub_1D451A794();
    swift_bridgeObjectRelease();
  }
  sub_1D42B294C(v3, (uint64_t)v5);
  swift_bridgeObjectRetain();
  sub_1D42B5400((uint64_t)v5);
  sub_1D451A794();
  swift_bridgeObjectRelease();
  sub_1D451A794();
  sub_1D451A794();
  swift_bridgeObjectRelease();
  result = sub_1D451A794();
  *a2 = 0x5B6C6961746564;
  a2[1] = 0xE700000000000000;
  return result;
}

uint64_t sub_1D43C5E24(unsigned int *a1)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v9;

  v2 = sub_1D451B9D0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1D42CB18C();
  sub_1D42B28FC(&qword_1EFE4F970);
  v9 = sub_1D42B6F40();
  v4 = *(_OWORD *)(a1 + 5);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v9 + 32) = v4;
  *(_OWORD *)(v9 + 48) = *(_OWORD *)(a1 + 9);
  *(_WORD *)(v9 + 64) = *((_WORD *)a1 + 26);
  sub_1D451B9A0();
  sub_1D451B9C4();
  v5 = *a1;
  sub_1D451B508();
  sub_1D42B8F48();
  v6 = sub_1D43C4944();
  sub_1D42E3F48();
  if (*(_QWORD *)(v6 + 16) != v5)
  {
    swift_bridgeObjectRelease();
    sub_1D43CA1FC();
    sub_1D42B6D0C();
    sub_1D4306EF8(v7, 2);
  }
  sub_1D42BE98C(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  return v6;
}

uint64_t sub_1D43C5F64(uint64_t a1)
{
  _OWORD v2[2];
  __int128 v3;

  sub_1D42B294C(a1 + 16, (uint64_t)v2);
  sub_1D42B293C(v2, &v3);
  type metadata accessor for _SNAOPClassfication(0);
  return swift_dynamicCast();
}

id sub_1D43C5FE4(unsigned int *a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  float *v9;
  unint64_t v10;
  float v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  _BYTE *v23;
  void *v25;
  uint64_t v26;

  v2 = sub_1D43C5E24(a1);
  v3 = v1;
  if (v1)
  {
LABEL_14:
    sub_1D43CA1FC();
    sub_1D42B6D0C();
    sub_1D4306EF8(v23, 2);
    sub_1D43CB0C8();
    return v3;
  }
  v4 = v2;
  v5 = *(_QWORD *)(v2 + 16);
  if (v5)
  {
    v26 = MEMORY[0x1E0DEE9D8];
    sub_1D42C7994();
    v6 = v26;
    if (qword_1EFE48E90 != -1)
      swift_once();
    v7 = off_1EFE4F930;
    v8 = (char *)off_1EFE4F930 + 32;
    v9 = (float *)(v4 + 33);
    while (1)
    {
      v10 = *((unsigned __int8 *)v9 - 1);
      if (v7[2] <= v10)
        break;
      v11 = *v9;
      v12 = &v8[16 * v10];
      v13 = *(_QWORD *)v12;
      v14 = *((_QWORD *)v12 + 1);
      v16 = *(_QWORD *)(v26 + 16);
      v15 = *(_QWORD *)(v26 + 24);
      swift_bridgeObjectRetain();
      if (v16 >= v15 >> 1)
        sub_1D42C7994();
      *(_QWORD *)(v26 + 16) = v16 + 1;
      v17 = v26 + 24 * v16;
      *(_QWORD *)(v17 + 32) = v13;
      *(_QWORD *)(v17 + 40) = v14;
      *(double *)(v17 + 48) = v11;
      v9 = (float *)((char *)v9 + 5);
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    type metadata accessor for SNError();
    sub_1D451B400();
    swift_bridgeObjectRelease();
    sub_1D451B7C0();
    sub_1D451A794();
    swift_bridgeObjectRelease();
    v18 = sub_1D43CAF98();
    v3 = sub_1D43EC59C(v18, v19, v20, v21, v22, 0x80000001D4555770);
    swift_bridgeObjectRelease();
    swift_willThrow();
    swift_bridgeObjectRelease();
    sub_1D42FC448();
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  v6 = MEMORY[0x1E0DEE9D8];
LABEL_13:
  sub_1D449584C(v6);
  v3 = v25;
  sub_1D42CB208();
  return v3;
}

void sub_1D43C6264(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  if (qword_1EFE48E90 != -1)
    swift_once();
  v4 = sub_1D43002F4(a1, a2, (uint64_t)off_1EFE4F930);
  if ((v5 & 1) != 0)
  {
    type metadata accessor for SNError();
    sub_1D451B400();
    swift_bridgeObjectRelease();
    sub_1D451A794();
    sub_1D451A794();
    v6 = sub_1D43CAF98();
    sub_1D43EC59C(v6, v7, v8, v9, v10, 0x80000001D45556C0);
    swift_bridgeObjectRelease();
    swift_willThrow();
LABEL_8:
    sub_1D43CAE70();
    return;
  }
  if ((v4 & 0x8000000000000000) == 0 && v4 < 0x100)
    goto LABEL_8;
  sub_1D42DCED4();
  sub_1D43074E8();
  __break(1u);
}

uint64_t static SNAOPUtils.uint32ToString(value:)()
{
  return sub_1D451A6BC();
}

void sub_1D43C6434(int a1, uint64_t a2)
{
  int v4;
  _QWORD v5[3];
  int v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v4 = a1;
  sub_1D43C3A7C((uint64_t)&v4, (uint64_t)v5);
  v5[2] = a2;
  v6 = 210;
  __asm { BR              X10 }
}

uint64_t sub_1D43C64A8()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v3;

  sub_1D43C3C48(v1, v0 & 0xFFFFFFFFFFFFLL, (uint64_t (*)(uint64_t *, char *))sub_1D43CA238, (uint64_t)&v3, BYTE6(v0));
  return sub_1D42B5420(v1, v0);
}

uint64_t sub_1D43C65B4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _BYTE *v10;
  _QWORD v12[2];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v12[1] = a3;
  v5 = HIDWORD(a3) + 12;
  v12[0] = a2;
  v6 = sub_1D43C3A7C((uint64_t)v12, (uint64_t)&v13);
  v8 = v7;
  sub_1D444C3D8(a1, 33, v6, v7, v5);
  sub_1D42B5420(v6, v8);
  if (!v3)
  {
    if (sub_1D43CAFEC() >= 12)
    {
      if (sub_1D43CAFEC() >= (uint64_t)0x800000000000000CLL)
      {
        sub_1D43CB108();
        __asm { BR              X10 }
      }
      __break(1u);
      JUMPOUT(0x1D43C68B4);
    }
    sub_1D43CA1FC();
    sub_1D42B6D0C();
    sub_1D4306EF8(v10, 3);
    sub_1D43CB174();
  }
  return v6;
}

void sub_1D43C6904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;

  sub_1D444C3D8(a1, a2, a3, a4, 1);
  if (!v4)
  {
    v7 = v5;
    v8 = v6;
    if (sub_1D4519C6C() == 1)
      __asm { BR              X10 }
    sub_1D43CA1C0();
    sub_1D42B6D0C();
    *v9 = 0;
    swift_willThrow();
    sub_1D43CADF4(v7);
  }
  sub_1D42DD1D8();
}

void sub_1D43C69A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  swift_retain();
  swift_retain();
  sub_1D43C9E8C(v2, v3);
  if (!v1)
  {
    sub_1D42BE998();
    swift_release();
    sub_1D43CADF4(v0);
    JUMPOUT(0x1D43C6990);
  }
  sub_1D42BE998();
  swift_release();
  __break(1u);
  JUMPOUT(0x1D43C6A68);
}

void sub_1D43C6A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _BYTE *v9;

  sub_1D444C3D8(a1, a2, a3, a4, 27);
  if (!v4)
  {
    v7 = v5;
    v8 = v6;
    if (sub_1D4519C6C() == 27)
      __asm { BR              X10 }
    sub_1D43CA1C0();
    swift_allocError();
    *v9 = 0;
    swift_willThrow();
    sub_1D42B5420(v7, v8);
  }
}

void sub_1D43C6B38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  swift_retain();
  swift_retain();
  sub_1D43C9F04(v3, v4, v2);
  if (!v1)
  {
    swift_release();
    swift_release();
    JUMPOUT(0x1D43C6B14);
  }
  swift_release();
  swift_release();
  __break(1u);
  JUMPOUT(0x1D43C6BF0);
}

uint64_t sub_1D43C6C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _BYTE *v9;

  sub_1D444C3D8(a1, a2, a3, a4, 12);
  if (!v5)
  {
    v4 = v6;
    v8 = v7;
    if (sub_1D4519C6C() == 12)
      __asm { BR              X10 }
    sub_1D43CA1C0();
    swift_allocError();
    *v9 = 0;
    swift_willThrow();
    sub_1D42B5420(v4, v8);
  }
  return v4;
}

void sub_1D43C6CCC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  swift_retain();
  swift_retain();
  sub_1D43C9F94(v3, v4);
  if (!v2)
  {
    swift_release();
    swift_release();
    sub_1D42B5420(v0, v1);
    JUMPOUT(0x1D43C6CACLL);
  }
  swift_release();
  swift_release();
  __break(1u);
  JUMPOUT(0x1D43C6DC4);
}

void sub_1D43C6DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _BYTE *v9;

  sub_1D444C3D8(a1, a2, a3, a4, 136);
  if (!v4)
  {
    v7 = v5;
    v8 = v6;
    if (sub_1D4519C6C() == 136)
      __asm { BR              X10 }
    sub_1D43CA1C0();
    swift_allocError();
    *v9 = 0;
    swift_willThrow();
    sub_1D42B5420(v7, v8);
  }
}

void sub_1D43C709C(uint64_t a1)
{
  uint64_t v1;

  sub_1D444C358(a1, 208, 8);
  if (!v1)
    __asm { BR              X10 }
  sub_1D42DD1D8();
}

void sub_1D43C718C(uint64_t a1)
{
  uint64_t v1;

  sub_1D444C358(a1, 209, 8);
  if (!v1)
    __asm { BR              X10 }
  sub_1D42DD1D8();
}

uint64_t sub_1D43C727C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D42B28FC(qword_1EFE40540);
  v0 = sub_1D42B6F40();
  v1 = MEMORY[0x1E0DEA968];
  *(_OWORD *)(v0 + 16) = xmmword_1D45261D0;
  *(_QWORD *)(v0 + 56) = v1;
  *(_QWORD *)(v0 + 32) = 0x3A73746C75736552;
  *(_QWORD *)(v0 + 40) = 0xE900000000000020;
  sub_1D451B940();
  swift_bridgeObjectRelease();
  type metadata accessor for _SNAOPDataReadOut(0);
  return sub_1D43CAF10();
}

void sub_1D43C733C()
{
  uint64_t v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  if (qword_1EFE48E90 != -1)
    swift_once();
  if (*((_QWORD *)off_1EFE4F930 + 2) >= 0x100uLL)
  {
    sub_1D42DCED4();
    sub_1D43074E8();
    __break(1u);
  }
  else
  {
    sub_1D43CAE08(2036490594, 0xE400000000000000);
    if (!v0)
    {
      sub_1D43CAE08(0x72615F7265746177, 0xEE00746361666974);
      sub_1D43CAE08(0x7472615F646E6977, 0xED00007463616669);
      sub_1D43CAE08(0x615F657665656C73, 0xEF74636166697472);
      sub_1D43CAD8C();
      sub_1D43CADC8();
      sub_1D43CACD4(v1, 0x3000100000003, v2, v3, v4, v5, v6, v7, SHIDWORD(v7), v8, v9, SHIDWORD(v9), v10, v11, v12, v13, v14, SWORD2(v14), SHIWORD(v14));
      sub_1D43CAE38();
      sub_1D43CAEA8();
    }
    sub_1D43CAE8C();
  }
}

void sub_1D43C74F8()
{
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B970();
  sub_1D43CB130();
  sub_1D43CB000();
  sub_1D42CB0F8();
}

BOOL sub_1D43C7564(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  _BOOL4 v8;

  v8 = BYTE1(a4) == BYTE1(a8) && BYTE2(a4) == BYTE2(a8);
  if (a4 != a8)
    v8 = 0;
  return a1 == a5 && a2 == a6 && (_DWORD)a3 == (_DWORD)a7 && HIDWORD(a3) == HIDWORD(a7) && v8;
}

uint64_t sub_1D43C75B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v9;

  v2 = a1 == 0x43656C6379436F69 && a2 == 0xEC000000746E756FLL;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x695474736574616CLL && a2 == 0xEF706D617453656DLL;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x80000001D45557C0 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x6F7272457473616CLL && a2 == 0xED00006570795472;
      if (v7 || (sub_1D451B820() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000013 && a2 == 0x80000001D45557E0 || (sub_1D451B820() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v8 = a1 == 0x6E45746E65696C63 && a2 == 0xED000064656C6261;
        if (v8 || (sub_1D451B820() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else if (a1 == 0xD000000000000010 && a2 == 0x80000001D4555800)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          v9 = sub_1D451B820();
          swift_bridgeObjectRelease();
          if ((v9 & 1) != 0)
            return 6;
          else
            return 7;
        }
      }
    }
  }
}

uint64_t sub_1D43C78F8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D43C7934 + 4 * byte_1D4535F30[a1]))(0x43656C6379436F69, 0xEC000000746E756FLL);
}

uint64_t sub_1D43C7934()
{
  return 0x695474736574616CLL;
}

unint64_t sub_1D43C7958()
{
  return 0xD000000000000011;
}

uint64_t sub_1D43C79B4()
{
  return 0x6E45746E65696C63;
}

unint64_t sub_1D43C79D8()
{
  return 0xD000000000000010;
}

void sub_1D43C79F4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_1D42BE910();
  v3 = v2;
  sub_1D42B28FC(&qword_1EFE4FA10);
  sub_1D42F86A4();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB18C();
  sub_1D42B5528(v3, v3[3]);
  sub_1D43CA8D8();
  sub_1D451BA24();
  sub_1D43CB0E0();
  if (!v0)
  {
    sub_1D43CB0E0();
    sub_1D43CB0D0();
    sub_1D43CB0D0();
    sub_1D43CAF00();
    sub_1D43CAF00();
    sub_1D43CAF00();
  }
  sub_1D42BE98C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1D42BE844();
}

void sub_1D43C7B5C()
{
  sub_1D42BE9A8();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B970();
  sub_1D43CB000();
  sub_1D43CB0F0();
  sub_1D42CB230();
  sub_1D42CB598();
}

uint64_t sub_1D43C7BEC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D42BE910();
  v1 = v0;
  sub_1D42B28FC(&qword_1EFE4F9F0);
  sub_1D42CB4F8();
  MEMORY[0x1E0C80A78](v2);
  v3 = v1[3];
  sub_1D42B5528(v1, v3);
  sub_1D43CA8D8();
  sub_1D42F1FF8();
  sub_1D43CB088();
  sub_1D43CB14C();
  sub_1D43CB088();
  sub_1D43CB098();
  sub_1D43CB098();
  sub_1D43CAEC8();
  sub_1D43CAEC8();
  sub_1D43CAEC8();
  sub_1D42CB3BC();
  sub_1D42BE944();
  return v3;
}

uint64_t sub_1D43C7D90()
{
  sub_1D451B988();
  return sub_1D43B9FE4();
}

BOOL sub_1D43C7DBC(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return a1 == a3 && a2 == a4;
}

uint64_t sub_1D43C7DCC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x80000001D4555820 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D4555840)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1D43C7EB4(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000011;
  else
    return 0xD000000000000015;
}

void sub_1D43C7EF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  sub_1D42BE910();
  v4 = v3;
  v5 = sub_1D42B28FC(&qword_1EFE4FA18);
  sub_1D42CB4F8();
  MEMORY[0x1E0C80A78](v6);
  sub_1D42D7108();
  sub_1D42B5528(v4, v4[3]);
  sub_1D43CA914();
  sub_1D451BA24();
  sub_1D451B79C();
  if (!v0)
    sub_1D451B790();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v5);
  sub_1D43CB140();
  sub_1D42BE844();
}

uint64_t sub_1D43C7FD4()
{
  sub_1D42BE9A8();
  sub_1D43CB0FC();
  sub_1D43B9FE4();
  return sub_1D42CB230();
}

uint64_t sub_1D43C8018(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_1D42B28FC(&qword_1EFE4FA00);
  sub_1D42F86A4();
  MEMORY[0x1E0C80A78](v3);
  v4 = a1[3];
  sub_1D42B5528(a1, v4);
  sub_1D43CA914();
  sub_1D42F1FF8();
  if (!v1)
  {
    sub_1D451B6C4();
    sub_1D43CB14C();
    sub_1D451B6B8();
    sub_1D43CB078();
  }
  sub_1D42BE944();
  return v4;
}

void sub_1D43C812C()
{
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D43CB130();
  sub_1D43CB000();
  sub_1D451B970();
  sub_1D451B988();
  sub_1D43B9FE4();
  sub_1D42CB0F8();
}

BOOL sub_1D43C81A4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v3;
  BOOL v4;
  BOOL v5;
  BOOL v6;
  _BOOL8 result;

  result = 0;
  if (*(_QWORD *)a1 == *(_QWORD *)a2)
  {
    v2 = *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && *(_DWORD *)(a1 + 16) == *(_DWORD *)(a2 + 16);
    v3 = v2 && *(_DWORD *)(a1 + 20) == *(_DWORD *)(a2 + 20);
    v4 = v3 && *(unsigned __int8 *)(a1 + 24) == *(unsigned __int8 *)(a2 + 24);
    v5 = v4 && *(unsigned __int8 *)(a1 + 25) == *(unsigned __int8 *)(a2 + 25);
    v6 = v5 && *(unsigned __int8 *)(a1 + 26) == *(unsigned __int8 *)(a2 + 26);
    if (v6 && *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_DWORD *)(a1 + 40) == *(_DWORD *)(a2 + 40))
      return 1;
  }
  return result;
}

uint64_t sub_1D43C8228(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x737574617473 && a2 == 0xE600000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6961764161746164 && a2 == 0xED0000656C62616CLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D43C8330(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6961764161746164;
  else
    return 0x737574617473;
}

uint64_t sub_1D43C8370(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  sub_1D42B28FC(&qword_1EFE4F9B0);
  sub_1D42F86A4();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB18C();
  sub_1D42B5528(a1, a1[3]);
  sub_1D43CA5C4();
  sub_1D451BA24();
  sub_1D43CA678();
  sub_1D43CAF40();
  if (!v1)
  {
    sub_1D43CA6B4();
    sub_1D43CAF40();
  }
  return sub_1D42BE98C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
}

void sub_1D43C847C()
{
  sub_1D42BE9A8();
  sub_1D451B988();
  sub_1D43CB0FC();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D43CB130();
  sub_1D43CB000();
  sub_1D43CB0F0();
  sub_1D451B988();
  sub_1D43B9FE4();
  sub_1D42CB230();
  sub_1D42CB598();
}

void sub_1D43C8510(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;

  sub_1D42B28FC(&qword_1EFE4F990);
  sub_1D42CB4F8();
  MEMORY[0x1E0C80A78](v5);
  sub_1D434799C();
  sub_1D42B5528(a1, a1[3]);
  sub_1D43CA5C4();
  sub_1D451BA0C();
  if (v2)
  {
    sub_1D42BE944();
  }
  else
  {
    sub_1D43CA600();
    sub_1D43CAEE4();
    sub_1D43CA63C();
    sub_1D43CAEE4();
    sub_1D42CB3CC();
    sub_1D42BE944();
    *(_QWORD *)a2 = v6;
    *(_QWORD *)(a2 + 8) = v7;
    *(_QWORD *)(a2 + 16) = v8;
    *(_BYTE *)(a2 + 24) = v9;
    *(_BYTE *)(a2 + 25) = v10;
    *(_BYTE *)(a2 + 26) = v11;
    *(_QWORD *)(a2 + 32) = v6;
    *(_DWORD *)(a2 + 40) = v7;
  }
  sub_1D43CB140();
}

uint64_t sub_1D43C8674()
{
  unsigned __int8 *v0;

  return sub_1D43C78F8(*v0);
}

uint64_t sub_1D43C867C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D43C75B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D43C86A0()
{
  sub_1D43CA8D8();
  return sub_1D451BA3C();
}

uint64_t sub_1D43C86C8()
{
  sub_1D43CA8D8();
  return sub_1D451BA48();
}

uint64_t sub_1D43C86F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  int v6;

  result = sub_1D43C7BEC();
  if (!v1)
  {
    *(_QWORD *)a1 = result;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v5;
    *(_WORD *)(a1 + 24) = v6;
    *(_BYTE *)(a1 + 26) = BYTE2(v6);
  }
  return result;
}

void sub_1D43C8734()
{
  sub_1D43C79F4();
}

void sub_1D43C875C()
{
  sub_1D43C7B5C();
}

void sub_1D43C8774()
{
  sub_1D43C74F8();
}

uint64_t sub_1D43C878C()
{
  sub_1D451B958();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B970();
  sub_1D451B970();
  sub_1D451B970();
  return sub_1D451B994();
}

BOOL sub_1D43C883C(uint64_t a1, uint64_t a2)
{
  return sub_1D43C7564(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int16 *)(a1 + 24) | (*(unsigned __int8 *)(a1 + 26) << 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(unsigned __int16 *)(a2 + 24) | (*(unsigned __int8 *)(a2 + 26) << 16));
}

unint64_t sub_1D43C8870()
{
  char *v0;

  return sub_1D43C7EB4(*v0);
}

uint64_t sub_1D43C8878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D43C7DCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D43C889C()
{
  sub_1D43CA914();
  return sub_1D451BA3C();
}

uint64_t sub_1D43C88C4()
{
  sub_1D43CA914();
  return sub_1D451BA48();
}

uint64_t sub_1D43C88EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  int v5;

  result = sub_1D43C8018(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_DWORD *)(a2 + 8) = v5;
  }
  return result;
}

void sub_1D43C8918()
{
  sub_1D43C7EF0();
}

uint64_t sub_1D43C8934()
{
  return sub_1D43C7FD4();
}

uint64_t sub_1D43C8940()
{
  return sub_1D43C7D90();
}

uint64_t sub_1D43C894C()
{
  sub_1D451B958();
  sub_1D451B988();
  sub_1D451B97C();
  return sub_1D451B994();
}

BOOL sub_1D43C89A4(uint64_t a1, uint64_t a2)
{
  return sub_1D43C7DBC(*(_QWORD *)a1, *(_DWORD *)(a1 + 8), *(_QWORD *)a2, *(_DWORD *)(a2 + 8));
}

uint64_t sub_1D43C89C0()
{
  char *v0;

  return sub_1D43C8330(*v0);
}

uint64_t sub_1D43C89C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D43C8228(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D43C89EC()
{
  sub_1D43CA5C4();
  return sub_1D451BA3C();
}

uint64_t sub_1D43C8A14()
{
  sub_1D43CA5C4();
  return sub_1D451BA48();
}

double sub_1D43C8A3C@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];

  sub_1D43C8510(a1, (uint64_t)&v6);
  if (!v2)
  {
    v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    result = *(double *)((char *)v7 + 12);
    *(_OWORD *)((char *)a2 + 28) = *(_OWORD *)((char *)v7 + 12);
  }
  return result;
}

uint64_t sub_1D43C8A7C(_QWORD *a1)
{
  return sub_1D43C8370(a1);
}

uint64_t sub_1D43C8A98()
{
  sub_1D451B958();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B970();
  sub_1D451B970();
  sub_1D451B970();
  sub_1D451B988();
  sub_1D451B97C();
  return sub_1D451B994();
}

uint64_t sub_1D43C8B74@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  char v19;
  char v20;
  uint64_t v21;
  int v22;
  _QWORD v23[3];
  char v24;
  char v25;
  char v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v22 = a2;
  v7 = sub_1D43C3A7C((uint64_t)&v22, (uint64_t)v23);
  v9 = v8;
  sub_1D43C6A84(a1, 37, v7, v8);
  result = sub_1D42B5420(v7, v9);
  if (!v3)
  {
    v11 = v23[1];
    v21 = v23[0];
    v12 = v23[2];
    v13 = v24;
    v19 = v26;
    v20 = v25;
    LODWORD(v23[0]) = a2;
    v14 = sub_1D43C3A7C((uint64_t)v23, (uint64_t)v23 + 4);
    v16 = sub_1D43C6C10(a1, 36, v14, v15);
    v18 = v17;
    result = sub_1D43CAF58(v14);
    *(_QWORD *)a3 = v21;
    *(_QWORD *)(a3 + 8) = v11;
    *(_QWORD *)(a3 + 16) = v12;
    *(_BYTE *)(a3 + 24) = v13;
    *(_BYTE *)(a3 + 25) = v20;
    *(_BYTE *)(a3 + 26) = v19;
    *(_QWORD *)(a3 + 32) = v16;
    *(_DWORD *)(a3 + 40) = v18;
  }
  return result;
}

uint64_t sub_1D43C8CE4(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t result;
  __int128 v4;

  result = sub_1D43C8B74(a1, a2, (uint64_t)&v4);
  if (!v2)
    return sub_1D43CAF10();
  return result;
}

void static SNAOPUtils.toggleAOPServiceTest(enable:)(int a1)
{
  uint64_t v1;
  io_service_t v2;
  uint64_t v4;
  task_port_t v5;
  uint64_t v6;
  mach_error_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19[6];

  v19[5] = *MEMORY[0x1E0C80C00];
  v4 = sub_1D43CAE20();
  sub_1D43CAC68(*MEMORY[0x1E0CBBAA8], (uint64_t)"AppleSPUInterface");
  if (!v1)
  {
    v5 = sub_1D43CAEB8();
    v7 = sub_1D43CAE10(v2, v5, v6, (io_connect_t *)v19);
    sub_1D43CAE30(v7);
    sub_1D43CAE28(v19[0]);
    v9 = v8;
    sub_1D42B8F48();
    sub_1D43CAE18();
    v10 = sub_1D43CACC4();
    *(_DWORD *)(v10 + 16) = v9;
    v19[3] = v4;
    v19[4] = (uint64_t)&off_1E97AD280;
    v19[0] = v10;
    sub_1D43C6434(a1, (uint64_t)v19);
    sub_1D43CAF78(v11, v12, v13, v14, v15, v16, v17, v18, v19[0]);
  }
  sub_1D43CAE70();
}

void static SNAOPUtils.getAOPServiceId()()
{
  sub_1D43C8EC8((uint64_t (*)(uint64_t *))sub_1D43C709C);
}

void static SNAOPUtils.getAOPServiceState()()
{
  sub_1D43C8EC8((uint64_t (*)(uint64_t *))sub_1D43C718C);
}

void sub_1D43C8EC8(uint64_t (*a1)(uint64_t *))
{
  uint64_t v1;
  io_service_t v2;
  uint64_t v4;
  task_port_t v5;
  uint64_t v6;
  mach_error_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19[6];

  v19[5] = *MEMORY[0x1E0C80C00];
  v4 = sub_1D43CAE20();
  sub_1D43CAC68(*MEMORY[0x1E0CBBAA8], (uint64_t)"AppleSPUInterface");
  if (!v1)
  {
    v5 = sub_1D43CAEB8();
    v7 = sub_1D43CAE10(v2, v5, v6, (io_connect_t *)v19);
    sub_1D43CAE30(v7);
    sub_1D43CAE28(v19[0]);
    v9 = v8;
    sub_1D42B8F48();
    sub_1D43CAE18();
    v10 = sub_1D43CACC4();
    *(_DWORD *)(v10 + 16) = v9;
    v19[3] = v4;
    v19[4] = (uint64_t)&off_1E97AD280;
    v19[0] = v10;
    v11 = a1(v19);
    sub_1D43CAF78(v11, v12, v13, v14, v15, v16, v17, v18, v19[0]);
  }
  sub_1D43CAE70();
}

void static SNAOPUtils.readFromAOPServiceNoiseDet()()
{
  uint64_t v0;
  task_port_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  mach_error_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  _QWORD v25[5];

  sub_1D43CADBC(*MEMORY[0x1E0C80C00]);
  sub_1D43CAC68(*MEMORY[0x1E0CBBAA8], (uint64_t)"AppleSPUInterface");
  if (!v0)
  {
    v1 = sub_1D43CAD60();
    v9 = sub_1D43CACB0(v1, v2, v3, v4, v5, v6, v7, v8, v24, *((uint64_t *)&v24 + 1), v25[0]);
    sub_1D43CAE30(v9);
    sub_1D43CADB0(v10, v11, v12, v13, v14, v15, v16, v17, v24, *((uint64_t *)&v24 + 1), v25[0]);
    v19 = v18;
    sub_1D42B8F48();
    v20 = sub_1D43CAE18();
    v21 = sub_1D43CAD70();
    *(_DWORD *)(v21 + 16) = v19;
    v25[3] = v20;
    v25[4] = &off_1E97AD280;
    v25[0] = v21;
    swift_retain();
    LODWORD(v24) = 1;
    *(_QWORD *)((char *)&v24 + 4) = 0;
    HIDWORD(v24) = 100;
    sub_1D43C65B4((uint64_t)v25, 1, *((unint64_t *)&v24 + 1));
    swift_bridgeObjectRelease();
    sub_1D43C727C();
    v22 = sub_1D42B8F48();
    sub_1D43CAE5C(v22, v23, (_QWORD)v24);
  }
  sub_1D43CAD50();
}

void static SNAOPUtils.configureDebugAOPService()()
{
  sub_1D43C9178((void (*)(_QWORD *))sub_1D43C4380);
  sub_1D42B6F28();
}

void static SNAOPUtils.configureNoiseAOPService()()
{
  sub_1D43C9178((void (*)(_QWORD *))sub_1D43C3EF8);
  sub_1D42B6F28();
}

void sub_1D43C9178(void (*a1)(_QWORD *))
{
  uint64_t v1;
  uint64_t v3;
  io_service_t v4;
  task_port_t v5;
  uint64_t v6;
  mach_error_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[6];

  v12[5] = *MEMORY[0x1E0C80C00];
  sub_1D43CAE20();
  v3 = sub_1D44936B8(*MEMORY[0x1E0CBBAA8], 0xD000000000000011, 0x80000001D4554C50, 0x706F616E73, 0xE500000000000000);
  if (!v1)
  {
    v4 = *(_DWORD *)(v3 + 16);
    LODWORD(v12[0]) = 0;
    v5 = sub_1D44FB044();
    v7 = sub_1D43CAE10(v4, v5, v6, (io_connect_t *)v12);
    sub_1D44C84C4(v7);
    sub_1D44939D0(v12[0]);
    v9 = v8;
    sub_1D42FC448();
    v10 = sub_1D43CAE18();
    v11 = sub_1D43CAD70();
    *(_DWORD *)(v11 + 16) = v9;
    v12[3] = v10;
    v12[4] = &off_1E97AD280;
    v12[0] = v11;
    a1(v12);
    sub_1D42B5400((uint64_t)v12);
  }
  sub_1D43CAE70();
}

void static SNAOPUtils.configureMusicAOPService()()
{
  sub_1D43C9178((void (*)(_QWORD *))sub_1D43C40AC);
  sub_1D42B6F28();
}

void static SNAOPUtils.configureAccessibilityAOPService()()
{
  sub_1D43C9178((void (*)(_QWORD *))sub_1D43C733C);
  sub_1D42B6F28();
}

void static SNAOPUtils.enableDebugAOPService()()
{
  uint64_t v0;
  task_port_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  mach_error_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  io_connect_t v30;
  int v31;

  sub_1D43CADBC(*MEMORY[0x1E0C80C00]);
  sub_1D43CAC68(*MEMORY[0x1E0CBBAA8], (uint64_t)"AppleSPUInterface");
  if (!v0)
  {
    v1 = sub_1D43CAD60();
    v9 = sub_1D43CACB0(v1, v2, v3, v4, v5, v6, v7, v8, v26, v28, v30);
    sub_1D43CAE30(v9);
    sub_1D43CADB0(v10, v11, v12, v13, v14, v15, v16, v17, v27, v29, v31);
    sub_1D42B8F48();
    sub_1D43CAE18();
    v18 = sub_1D43CACC4();
    sub_1D43CAE80(v18);
    sub_1D43CB038();
    v19 = sub_1D43CADE8();
    v20 = sub_1D43CADFC(v19);
    sub_1D43CAC90(v20, v21, v22, v23);
    sub_1D43CAD7C();
    v24 = sub_1D42BE998();
    sub_1D43CAE5C(v24, v25);
  }
  sub_1D43CAD50();
}

void static SNAOPUtils.disableDebugAOPService()()
{
  uint64_t v0;
  task_port_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  mach_error_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  io_connect_t v30;
  int v31;

  sub_1D43CADBC(*MEMORY[0x1E0C80C00]);
  sub_1D43CAC68(*MEMORY[0x1E0CBBAA8], (uint64_t)"AppleSPUInterface");
  if (!v0)
  {
    v1 = sub_1D43CAD60();
    v9 = sub_1D43CACB0(v1, v2, v3, v4, v5, v6, v7, v8, v26, v28, v30);
    sub_1D43CAE30(v9);
    sub_1D43CADB0(v10, v11, v12, v13, v14, v15, v16, v17, v27, v29, v31);
    sub_1D42B8F48();
    sub_1D43CAE18();
    v18 = sub_1D43CACC4();
    sub_1D43CAE80(v18);
    sub_1D43CB038();
    v19 = sub_1D43CADE8();
    v20 = sub_1D43CADFC(v19);
    sub_1D43CAC90(v20, v21, v22, v23);
    sub_1D43CAD7C();
    v24 = sub_1D42BE998();
    sub_1D43CAE5C(v24, v25);
  }
  sub_1D43CAD50();
}

void static SNAOPUtils.enableNoiseAOPService()()
{
  uint64_t v0;
  task_port_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  mach_error_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  io_connect_t v30;
  int v31;

  sub_1D43CADBC(*MEMORY[0x1E0C80C00]);
  sub_1D43CAC68(*MEMORY[0x1E0CBBAA8], (uint64_t)"AppleSPUInterface");
  if (!v0)
  {
    v1 = sub_1D43CAD60();
    v9 = sub_1D43CACB0(v1, v2, v3, v4, v5, v6, v7, v8, v26, v28, v30);
    sub_1D43CAE30(v9);
    sub_1D43CADB0(v10, v11, v12, v13, v14, v15, v16, v17, v27, v29, v31);
    sub_1D42B8F48();
    sub_1D43CAE18();
    v18 = sub_1D43CACC4();
    sub_1D43CAE80(v18);
    sub_1D43CB050();
    v19 = sub_1D43CADE8();
    v20 = sub_1D43CADFC(v19);
    sub_1D43CAC90(v20, v21, v22, v23);
    sub_1D43CAD7C();
    v24 = sub_1D42BE998();
    sub_1D43CAE5C(v24, v25);
  }
  sub_1D43CAD50();
}

void static SNAOPUtils.disableNoiseAOPService()()
{
  uint64_t v0;
  task_port_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  mach_error_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  io_connect_t v30;
  int v31;

  sub_1D43CADBC(*MEMORY[0x1E0C80C00]);
  sub_1D43CAC68(*MEMORY[0x1E0CBBAA8], (uint64_t)"AppleSPUInterface");
  if (!v0)
  {
    v1 = sub_1D43CAD60();
    v9 = sub_1D43CACB0(v1, v2, v3, v4, v5, v6, v7, v8, v26, v28, v30);
    sub_1D43CAE30(v9);
    sub_1D43CADB0(v10, v11, v12, v13, v14, v15, v16, v17, v27, v29, v31);
    sub_1D42B8F48();
    sub_1D43CAE18();
    v18 = sub_1D43CACC4();
    sub_1D43CAE80(v18);
    sub_1D43CB050();
    v19 = sub_1D43CADE8();
    v20 = sub_1D43CADFC(v19);
    sub_1D43CAC90(v20, v21, v22, v23);
    sub_1D43CAD7C();
    v24 = sub_1D42BE998();
    sub_1D43CAE5C(v24, v25);
  }
  sub_1D43CAD50();
}

void static SNAOPUtils.enableMusicAOPService()()
{
  uint64_t v0;
  task_port_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  mach_error_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  io_connect_t v30;
  int v31;

  sub_1D43CADBC(*MEMORY[0x1E0C80C00]);
  sub_1D43CAC68(*MEMORY[0x1E0CBBAA8], (uint64_t)"AppleSPUInterface");
  if (!v0)
  {
    v1 = sub_1D43CAD60();
    v9 = sub_1D43CACB0(v1, v2, v3, v4, v5, v6, v7, v8, v26, v28, v30);
    sub_1D43CAE30(v9);
    sub_1D43CADB0(v10, v11, v12, v13, v14, v15, v16, v17, v27, v29, v31);
    sub_1D42B8F48();
    sub_1D43CAE18();
    v18 = sub_1D43CACC4();
    sub_1D43CAE80(v18);
    sub_1D43CAFB4();
    v19 = sub_1D43CADE8();
    v20 = sub_1D43CADFC(v19);
    sub_1D43CAC90(v20, v21, v22, v23);
    sub_1D43CAD7C();
    v24 = sub_1D42BE998();
    sub_1D43CAE5C(v24, v25);
  }
  sub_1D43CAD50();
}

void static SNAOPUtils.disableMusicAOPService()()
{
  uint64_t v0;
  task_port_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  mach_error_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  io_connect_t v30;
  int v31;

  sub_1D43CADBC(*MEMORY[0x1E0C80C00]);
  sub_1D43CAC68(*MEMORY[0x1E0CBBAA8], (uint64_t)"AppleSPUInterface");
  if (!v0)
  {
    v1 = sub_1D43CAD60();
    v9 = sub_1D43CACB0(v1, v2, v3, v4, v5, v6, v7, v8, v26, v28, v30);
    sub_1D43CAE30(v9);
    sub_1D43CADB0(v10, v11, v12, v13, v14, v15, v16, v17, v27, v29, v31);
    sub_1D42B8F48();
    sub_1D43CAE18();
    v18 = sub_1D43CACC4();
    sub_1D43CAE80(v18);
    sub_1D43CAFB4();
    v19 = sub_1D43CADE8();
    v20 = sub_1D43CADFC(v19);
    sub_1D43CAC90(v20, v21, v22, v23);
    sub_1D43CAD7C();
    v24 = sub_1D42BE998();
    sub_1D43CAE5C(v24, v25);
  }
  sub_1D43CAD50();
}

void static SNAOPUtils.enableAccessibilityAOPService()()
{
  uint64_t v0;
  task_port_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  mach_error_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  io_connect_t v30;
  int v31;

  sub_1D43CADBC(*MEMORY[0x1E0C80C00]);
  sub_1D43CAC68(*MEMORY[0x1E0CBBAA8], (uint64_t)"AppleSPUInterface");
  if (!v0)
  {
    v1 = sub_1D43CAD60();
    v9 = sub_1D43CACB0(v1, v2, v3, v4, v5, v6, v7, v8, v26, v28, v30);
    sub_1D43CAE30(v9);
    sub_1D43CADB0(v10, v11, v12, v13, v14, v15, v16, v17, v27, v29, v31);
    sub_1D42B8F48();
    sub_1D43CAE18();
    v18 = sub_1D43CACC4();
    sub_1D43CAE80(v18);
    sub_1D43CAFD0();
    v19 = sub_1D43CADE8();
    v20 = sub_1D43CADFC(v19);
    sub_1D43CAC90(v20, v21, v22, v23);
    sub_1D43CAD7C();
    v24 = sub_1D42BE998();
    sub_1D43CAE5C(v24, v25);
  }
  sub_1D43CAD50();
}

void static SNAOPUtils.disableAccessibilityAOPService()()
{
  uint64_t v0;
  task_port_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  mach_error_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  io_connect_t v30;
  int v31;

  sub_1D43CADBC(*MEMORY[0x1E0C80C00]);
  sub_1D43CAC68(*MEMORY[0x1E0CBBAA8], (uint64_t)"AppleSPUInterface");
  if (!v0)
  {
    v1 = sub_1D43CAD60();
    v9 = sub_1D43CACB0(v1, v2, v3, v4, v5, v6, v7, v8, v26, v28, v30);
    sub_1D43CAE30(v9);
    sub_1D43CADB0(v10, v11, v12, v13, v14, v15, v16, v17, v27, v29, v31);
    sub_1D42B8F48();
    sub_1D43CAE18();
    v18 = sub_1D43CACC4();
    sub_1D43CAE80(v18);
    sub_1D43CAFD0();
    v19 = sub_1D43CADE8();
    v20 = sub_1D43CADFC(v19);
    sub_1D43CAC90(v20, v21, v22, v23);
    sub_1D43CAD7C();
    v24 = sub_1D42BE998();
    sub_1D43CAE5C(v24, v25);
  }
  sub_1D43CAD50();
}

void static SNAOPUtils.dumpStatusDebugAOPService()()
{
  sub_1D43C9A8C(0);
  sub_1D42B6F28();
}

void static SNAOPUtils.dumpStatusMusicAOPService()()
{
  sub_1D43C9A8C(2);
  sub_1D42B6F28();
}

void sub_1D43C9A8C(int a1)
{
  uint64_t v1;
  io_service_t v2;
  uint64_t v4;
  task_port_t v5;
  uint64_t v6;
  mach_error_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19[6];

  v19[5] = *MEMORY[0x1E0C80C00];
  v4 = sub_1D43CAE20();
  sub_1D43CAC68(*MEMORY[0x1E0CBBAA8], (uint64_t)"AppleSPUInterface");
  if (!v1)
  {
    v5 = sub_1D43CAEB8();
    v7 = sub_1D43CAE10(v2, v5, v6, (io_connect_t *)v19);
    sub_1D43CAE30(v7);
    sub_1D43CAE28(v19[0]);
    v9 = v8;
    sub_1D42B8F48();
    sub_1D43CAE18();
    v10 = sub_1D43CACC4();
    *(_DWORD *)(v10 + 16) = v9;
    v19[3] = v4;
    v19[4] = (uint64_t)&off_1E97AD280;
    v19[0] = v10;
    v11 = sub_1D43C8CE4((uint64_t)v19, a1);
    sub_1D43CAF78(v11, v12, v13, v14, v15, v16, v17, v18, v19[0]);
  }
  sub_1D43CAE70();
}

void static SNAOPUtils.dumpStatusNoiseAOPService()()
{
  sub_1D43C9A8C(1);
  sub_1D42B6F28();
}

void static SNAOPUtils.dumpStatusAccessibilityAOPService()()
{
  sub_1D43C9A8C(3);
  sub_1D42B6F28();
}

uint64_t sub_1D43C9C08()
{
  uint64_t v0;

  swift_beginAccess();
  nullsub_1(v0 + 16);
  swift_endAccess();
  return swift_deallocClassInstance();
}

uint64_t sub_1D43C9C60@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  __int16 v2;
  char v3;

  if (result)
  {
    v2 = *(_WORD *)(result + 24);
    v3 = *(_BYTE *)(result + 26);
    *(_OWORD *)a2 = *(_OWORD *)result;
    *(_QWORD *)(a2 + 16) = *(_QWORD *)(result + 16);
    *(_WORD *)(a2 + 24) = v2;
    *(_BYTE *)(a2 + 26) = v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D43C9C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;

  result = sub_1D446D63C(a1, a2, 4);
  if (!v2)
  {
    if (result)
    {
      result = *(unsigned int *)result;
      if (v4)
      {
        if (v5 != v4)
        {
          sub_1D4370694();
          swift_allocError();
          *v6 = 3;
          return swift_willThrow();
        }
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void type metadata accessor for SNAOPUtils()
{
  sub_1D42CB35C();
}

uint64_t type metadata accessor for SNAOPUtils.Analytics()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SNAOPUtils.UnsafeSoundPrintGraphRunner()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SNAOPUtils.UnsafeSoundPrintGraphRunner.Result()
{
  return objc_opt_self();
}

uint64_t sub_1D43C9D6C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = sub_1D4519BD0();
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = MEMORY[0x1D825B524]();
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = MEMORY[0x1D825B53C]();
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1D43C9DE0()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D43C9E0C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1D4322434;
  return sub_1D43C4CA0(a1, v4, v5, v6, v7);
}

uint64_t sub_1D43C9E8C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unsigned __int8 *v5;

  result = sub_1D4519A14();
  v5 = (unsigned __int8 *)result;
  if (result)
  {
    result = sub_1D4519A38();
    if (__OFSUB__(a1, result))
    {
LABEL_8:
      __break(1u);
      goto LABEL_9;
    }
    v5 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_8;
  }
  result = sub_1D4519A2C();
  if (v5)
    return *v5;
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1D43C9F04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;
  uint64_t v7;

  result = sub_1D4519A14();
  v7 = result;
  if (result)
  {
    result = sub_1D4519A38();
    if (__OFSUB__(a1, result))
      goto LABEL_7;
    v7 += a1 - result;
  }
  if (!__OFSUB__(a2, a1))
  {
    sub_1D4519A2C();
    return sub_1D43C9C60(v7, a3);
  }
  __break(1u);
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1D43C9F94(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = sub_1D4519A14();
  v5 = result;
  if (result)
  {
    result = sub_1D4519A38();
    if (__OFSUB__(a1, result))
    {
LABEL_8:
      __break(1u);
      goto LABEL_9;
    }
    v5 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_8;
  }
  result = sub_1D4519A2C();
  if (v5)
    return *(_QWORD *)v5;
LABEL_9:
  __break(1u);
  return result;
}

char *sub_1D43CA010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v3;
  char *result;
  char *v8;

  result = (char *)sub_1D4519A14();
  v8 = result;
  if (result)
  {
    result = (char *)sub_1D4519A38();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      goto LABEL_10;
    }
    v8 += a1 - (_QWORD)result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  result = (char *)sub_1D4519A2C();
  if (!v8)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  if (!v3)
    return (char *)memcpy(a3, v8, 0x88uLL);
  return result;
}

void sub_1D43CA0AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_1D4519A14();
  if (v4)
  {
    v5 = sub_1D4519A38();
    if (__OFSUB__(a1, v5))
    {
LABEL_12:
      __break(1u);
      return;
    }
    v4 += a1 - v5;
  }
  v6 = __OFSUB__(a2, a1);
  v7 = a2 - a1;
  if (v6)
  {
    __break(1u);
    goto LABEL_12;
  }
  v8 = sub_1D4519A2C();
  if (v4)
  {
    if (v8 >= v7)
      v9 = v7;
    else
      v9 = v8;
    sub_1D44AD4A4(v4, v9);
  }
}

uint64_t sub_1D43CA138(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = sub_1D4519A14();
  v5 = result;
  if (result)
  {
    result = sub_1D4519A38();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v5 += a1 - result;
  }
  v6 = __OFSUB__(a2, a1);
  v7 = a2 - a1;
  if (v6)
  {
    __break(1u);
    goto LABEL_13;
  }
  v8 = sub_1D4519A2C();
  if (v8 >= v7)
    v9 = v7;
  else
    v9 = v8;
  v10 = v5 + v9;
  if (v5)
    v11 = v10;
  else
    v11 = 0;
  return sub_1D43C9C8C(v5, v11);
}

unint64_t sub_1D43CA1C0()
{
  unint64_t result;

  result = qword_1EFE4F960;
  if (!qword_1EFE4F960)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4540560, &type metadata for SPUServiceUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4F960);
  }
  return result;
}

unint64_t sub_1D43CA1FC()
{
  unint64_t result;

  result = qword_1EFE4F968;
  if (!qword_1EFE4F968)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4536128, &unk_1E979C3B0);
    atomic_store(result, (unint64_t *)&qword_1EFE4F968);
  }
  return result;
}

uint64_t sub_1D43CA238(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D444C56C(a1, a2, *(_QWORD **)(v2 + 16), *(_DWORD *)(v2 + 24));
}

uint64_t sub_1D43CA254(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SNAOPReport.Payload(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D43CA298()
{
  return sub_1D42B6E34();
}

float sub_1D43CA2A4@<S0>(void (*a1)(uint64_t *__return_ptr)@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  float result;
  uint64_t v5;

  a1(&v5);
  if (v2)
  {
    swift_allocError();
  }
  else
  {
    result = *(float *)((char *)&v5 + 1);
    *(_BYTE *)a2 = v5;
    *(float *)(a2 + 1) = result;
  }
  return result;
}

float sub_1D43CA30C@<S0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D43CA2A4(*(void (**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_1D43CA324()
{
  return sub_1D42B6E34();
}

uint64_t sub_1D43CA330(uint64_t *a1, uint64_t *a2)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    sub_1D42B8B10(a2);
    sub_1D42E3FC0();
  }
  return result;
}

_QWORD *sub_1D43CA368@<X0>(_QWORD *(*a1)(_QWORD *__return_ptr)@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;
  _QWORD v6[2];

  result = a1(v6);
  if (v2)
    return (_QWORD *)swift_allocError();
  v5 = v6[1];
  *a2 = v6[0];
  a2[1] = v5;
  return result;
}

_QWORD *sub_1D43CA3C8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1D43CA368(*(_QWORD *(**)(_QWORD *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_1D43CA3E0(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    sub_1D4519D20();
    sub_1D42E3FC0();
  }
  return result;
}

uint64_t sub_1D43CA418(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D43CA464 + 4 * byte_1D4535F3C[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D43CA498 + 4 * byte_1D4535F37[v4]))();
}

uint64_t sub_1D43CA498(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43CA4A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D43CA4A8);
  return result;
}

uint64_t sub_1D43CA4B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D43CA4BCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D43CA4C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43CA4C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SNAOPUtils.DomainError()
{
  sub_1D42CB35C();
}

uint64_t sub_1D43CA4E0(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 44))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1D43CA500(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 40) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 44) = v3;
  return result;
}

void type metadata accessor for SNAOPUtils.AOPUseCaseStateSnapshot()
{
  sub_1D42CB35C();
}

unint64_t sub_1D43CA548()
{
  unint64_t result;

  result = qword_1EFE4F980;
  if (!qword_1EFE4F980)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4536008, &unk_1E979C6D0);
    atomic_store(result, (unint64_t *)&qword_1EFE4F980);
  }
  return result;
}

unint64_t sub_1D43CA588()
{
  unint64_t result;

  result = qword_1EFE4F988;
  if (!qword_1EFE4F988)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4536100, &unk_1E979C3B0);
    atomic_store(result, (unint64_t *)&qword_1EFE4F988);
  }
  return result;
}

unint64_t sub_1D43CA5C4()
{
  unint64_t result;

  result = qword_1EFE4F998;
  if (!qword_1EFE4F998)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45363C4, &type metadata for SNAOPUtils.AOPUseCaseStateSnapshot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F998);
  }
  return result;
}

unint64_t sub_1D43CA600()
{
  unint64_t result;

  result = qword_1EFE4F9A0;
  if (!qword_1EFE4F9A0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453639C, &unk_1E979C7E0);
    atomic_store(result, (unint64_t *)&qword_1EFE4F9A0);
  }
  return result;
}

unint64_t sub_1D43CA63C()
{
  unint64_t result;

  result = qword_1EFE4F9A8;
  if (!qword_1EFE4F9A8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4536374, &unk_1E979C5C0);
    atomic_store(result, (unint64_t *)&qword_1EFE4F9A8);
  }
  return result;
}

unint64_t sub_1D43CA678()
{
  unint64_t result;

  result = qword_1EFE4F9B8;
  if (!qword_1EFE4F9B8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453634C, &unk_1E979C7E0);
    atomic_store(result, (unint64_t *)&qword_1EFE4F9B8);
  }
  return result;
}

unint64_t sub_1D43CA6B4()
{
  unint64_t result;

  result = qword_1EFE4F9C0;
  if (!qword_1EFE4F9C0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4536324, &unk_1E979C5C0);
    atomic_store(result, (unint64_t *)&qword_1EFE4F9C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SNAOPUtils.AOPUseCaseStateSnapshot.CodingKeys()
{
  return &type metadata for SNAOPUtils.AOPUseCaseStateSnapshot.CodingKeys;
}

uint64_t initializeBufferWithCopyOfBuffer for SNSystemConfiguration(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(_QWORD *)result = v2;
  return result;
}

void type metadata accessor for SNAOPUtils.AOPDataAvailable()
{
  sub_1D42CB35C();
}

__n128 sub_1D43CA724(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1D43CA738(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 27))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1D43CA758(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 26) = 0;
    *(_WORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 27) = v3;
  return result;
}

void type metadata accessor for SNAOPUtils.AOPStatus()
{
  sub_1D42CB35C();
}

unint64_t sub_1D43CA79C()
{
  unint64_t result;

  result = qword_1EFE4F9C8;
  if (!qword_1EFE4F9C8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453619C, &unk_1E979C7E0);
    atomic_store(result, (unint64_t *)&qword_1EFE4F9C8);
  }
  return result;
}

unint64_t sub_1D43CA7DC()
{
  unint64_t result;

  result = qword_1EFE4F9D0;
  if (!qword_1EFE4F9D0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4536204, &unk_1E979C5C0);
    atomic_store(result, (unint64_t *)&qword_1EFE4F9D0);
  }
  return result;
}

unint64_t sub_1D43CA81C()
{
  unint64_t result;

  result = qword_1EFE4F9D8;
  if (!qword_1EFE4F9D8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45362FC, &type metadata for SNAOPUtils.AOPUseCaseStateSnapshot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F9D8);
  }
  return result;
}

unint64_t sub_1D43CA85C()
{
  unint64_t result;

  result = qword_1EFE4F9E0;
  if (!qword_1EFE4F9E0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453626C, &type metadata for SNAOPUtils.AOPUseCaseStateSnapshot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F9E0);
  }
  return result;
}

unint64_t sub_1D43CA89C()
{
  unint64_t result;

  result = qword_1EFE4F9E8;
  if (!qword_1EFE4F9E8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4536294, &type metadata for SNAOPUtils.AOPUseCaseStateSnapshot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F9E8);
  }
  return result;
}

unint64_t sub_1D43CA8D8()
{
  unint64_t result;

  result = qword_1EFE4F9F8;
  if (!qword_1EFE4F9F8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45365D4, &type metadata for SNAOPUtils.AOPStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4F9F8);
  }
  return result;
}

unint64_t sub_1D43CA914()
{
  unint64_t result;

  result = qword_1EFE4FA08;
  if (!qword_1EFE4FA08)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4536584, &type metadata for SNAOPUtils.AOPDataAvailable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FA08);
  }
  return result;
}

uint64_t _s13SoundAnalysis10SNAOPUtilsV23AOPUseCaseStateSnapshotV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D43CA99C + 4 * byte_1D4535F46[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D43CA9D0 + 4 * byte_1D4535F41[v4]))();
}

uint64_t sub_1D43CA9D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43CA9D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D43CA9E0);
  return result;
}

uint64_t sub_1D43CA9EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D43CA9F4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D43CA9F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43CAA00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SNAOPUtils.AOPDataAvailable.CodingKeys()
{
  return &type metadata for SNAOPUtils.AOPDataAvailable.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SNAOPUtils.AOPStatus.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D43CAA68 + 4 * byte_1D4535F50[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D43CAA9C + 4 * byte_1D4535F4B[v4]))();
}

uint64_t sub_1D43CAA9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43CAAA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D43CAAACLL);
  return result;
}

uint64_t sub_1D43CAAB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D43CAAC0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D43CAAC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43CAACC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SNAOPUtils.AOPStatus.CodingKeys()
{
  return &type metadata for SNAOPUtils.AOPStatus.CodingKeys;
}

unint64_t sub_1D43CAAEC()
{
  unint64_t result;

  result = qword_1EFE4FA20;
  if (!qword_1EFE4FA20)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45364A4, &type metadata for SNAOPUtils.AOPStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FA20);
  }
  return result;
}

unint64_t sub_1D43CAB2C()
{
  unint64_t result;

  result = qword_1EFE4FA28;
  if (!qword_1EFE4FA28)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453655C, &type metadata for SNAOPUtils.AOPDataAvailable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FA28);
  }
  return result;
}

unint64_t sub_1D43CAB6C()
{
  unint64_t result;

  result = qword_1EFE4FA30;
  if (!qword_1EFE4FA30)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45364CC, &type metadata for SNAOPUtils.AOPDataAvailable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FA30);
  }
  return result;
}

unint64_t sub_1D43CABAC()
{
  unint64_t result;

  result = qword_1EFE4FA38;
  if (!qword_1EFE4FA38)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45364F4, &type metadata for SNAOPUtils.AOPDataAvailable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FA38);
  }
  return result;
}

unint64_t sub_1D43CABEC()
{
  unint64_t result;

  result = qword_1EFE4FA40;
  if (!qword_1EFE4FA40)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4536414, &type metadata for SNAOPUtils.AOPStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FA40);
  }
  return result;
}

unint64_t sub_1D43CAC2C()
{
  unint64_t result;

  result = qword_1EFE4FA48;
  if (!qword_1EFE4FA48)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453643C, &type metadata for SNAOPUtils.AOPStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FA48);
  }
  return result;
}

uint64_t sub_1D43CAC68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D44936B8(a1, 0xD000000000000011, (a2 - 32) | 0x8000000000000000, 0x706F616E73, 0xE500000000000000);
}

void sub_1D43CAC90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_1D43C6904((uint64_t)va, 35, a1, a2);
}

uint64_t sub_1D43CACB0(task_port_t owningTask, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, io_connect_t connect)
{
  io_service_t v11;

  return IOServiceOpen(v11, owningTask, 0, &connect);
}

uint64_t sub_1D43CACC4()
{
  return swift_allocObject();
}

uint64_t sub_1D43CACD4@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, __int128 a5, __int128 a6, __int128 a7, int a8, int a9, __int128 a10, int a11, int a12, __int128 a13, uint64_t a14, __int128 a15, __int128 a16, int a17, __int16 a18, __int16 a19)
{
  unsigned __int8 v19;
  unsigned __int8 v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  char v24;

  *(_QWORD *)((char *)&a5 + 4) = a2;
  HIDWORD(a5) = 1;
  LOBYTE(a6) = v24;
  *(_DWORD *)((char *)&a6 + 1) = v19;
  __asm { FMOV            V0.2S, #0.75 }
  *(_QWORD *)((char *)&a6 + 5) = _D0;
  *(_DWORD *)((char *)&a6 + 13) = v20;
  *(_QWORD *)((char *)&a7 + 1) = _D0;
  *(_DWORD *)((char *)&a7 + 9) = v21;
  *(_QWORD *)((char *)&a7 + 13) = _D0;
  *(int *)((char *)&a9 + 1) = v22;
  *(_QWORD *)((char *)&a10 + 1) = _D0;
  *(_DWORD *)((char *)&a10 + 9) = v23;
  *(_QWORD *)((char *)&a10 + 13) = _D0;
  *(int *)((char *)&a12 + 1) = a1;
  *(_QWORD *)((char *)&a13 + 1) = _D0;
  *(__int128 *)((char *)&a13 + 9) = 0u;
  *(__int128 *)((char *)&a15 + 1) = 0u;
  *(__int128 *)((char *)&a16 + 1) = 0u;
  return sub_1D43C3A7C((uint64_t)&a5 + 4, (uint64_t)&a19);
}

uint64_t sub_1D43CAD60()
{
  return sub_1D44FB044();
}

uint64_t sub_1D43CAD70()
{
  return swift_allocObject();
}

uint64_t sub_1D43CAD7C()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1D42B5420(v0, v1);
}

void sub_1D43CAD8C()
{
  sub_1D43C6264(0x68735F636973756DLL, 0xEB0000000074726FLL);
}

void sub_1D43CADB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  sub_1D44939D0(a11);
}

uint64_t sub_1D43CADBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 40) = a1;
  return type metadata accessor for IOService();
}

void sub_1D43CADC8()
{
  sub_1D43C6264(0x6F6C5F636973756DLL, 0xEA0000000000676ELL);
}

uint64_t sub_1D43CADE8()
{
  return swift_retain();
}

uint64_t sub_1D43CADF4(uint64_t a1)
{
  unint64_t v1;

  return sub_1D42B5420(a1, v1);
}

uint64_t sub_1D43CADFC(uint64_t a1, ...)
{
  uint64_t v1;
  va_list va;

  va_start(va, a1);
  return sub_1D43C3A7C((uint64_t)va, v1);
}

void sub_1D43CAE08(uint64_t a1, uint64_t a2)
{
  sub_1D43C6264(a1, a2);
}

uint64_t sub_1D43CAE10(io_service_t a1, task_port_t a2, uint64_t a3, io_connect_t *a4)
{
  return IOServiceOpen(a1, a2, 0, a4);
}

uint64_t sub_1D43CAE18()
{
  return type metadata accessor for IOConnect();
}

uint64_t sub_1D43CAE20()
{
  return type metadata accessor for IOService();
}

void sub_1D43CAE28(int a1)
{
  sub_1D44939D0(a1);
}

void sub_1D43CAE30(mach_error_t a1)
{
  sub_1D44C84C4(a1);
}

void sub_1D43CAE38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D43C6DE4(v0, 34, v1, v2);
}

uint64_t sub_1D43CAE50()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1D42B5420(v0, v1);
}

uint64_t sub_1D43CAE5C(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  return sub_1D42B5400((uint64_t)va);
}

uint64_t sub_1D43CAE64(uint64_t a1, uint64_t a2)
{
  return sub_1D43CA138(a1, a2);
}

uint64_t sub_1D43CAE80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 16) = v1;
  return result;
}

uint64_t sub_1D43CAEA8()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1D42B5420(v0, v1);
}

uint64_t sub_1D43CAEB8()
{
  return sub_1D44FB044();
}

uint64_t sub_1D43CAEC8()
{
  return sub_1D451B6AC();
}

uint64_t sub_1D43CAED8()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1D42B5420(v1, v0);
}

uint64_t sub_1D43CAEE4()
{
  return sub_1D451B688();
}

uint64_t sub_1D43CAF00()
{
  return sub_1D451B784();
}

uint64_t sub_1D43CAF10()
{
  return sub_1D451B8A4();
}

uint64_t sub_1D43CAF28()
{
  return swift_beginAccess();
}

uint64_t sub_1D43CAF40()
{
  return sub_1D451B760();
}

uint64_t sub_1D43CAF58(uint64_t a1)
{
  unint64_t v1;

  return sub_1D42B5420(a1, v1);
}

uint64_t sub_1D43CAF60()
{
  return sub_1D451B1A8();
}

uint64_t sub_1D43CAF78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1D42B5400((uint64_t)&a9);
}

uint64_t sub_1D43CAF84()
{
  return sub_1D445720C();
}

unint64_t sub_1D43CAF98()
{
  return 0xD000000000000017;
}

uint64_t sub_1D43CAFEC()
{
  return sub_1D4519C6C();
}

uint64_t sub_1D43CAFF8(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_1D43CB000()
{
  return sub_1D451B970();
}

uint64_t sub_1D43CB008()
{
  return 0;
}

uint64_t sub_1D43CB018()
{
  return swift_release();
}

float sub_1D43CB028()
{
  double v0;

  return v0;
}

uint64_t sub_1D43CB068()
{
  return swift_retain();
}

uint64_t sub_1D43CB078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1D43CB088()
{
  return sub_1D451B6C4();
}

uint64_t sub_1D43CB098()
{
  return sub_1D451B6B8();
}

uint64_t sub_1D43CB0A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_1D43CB0B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

void sub_1D43CB0C8()
{
  void *v0;

}

uint64_t sub_1D43CB0D0()
{
  return sub_1D451B790();
}

uint64_t sub_1D43CB0E0()
{
  return sub_1D451B79C();
}

uint64_t sub_1D43CB0F0()
{
  return sub_1D451B970();
}

uint64_t sub_1D43CB0FC()
{
  return sub_1D451B988();
}

uint64_t sub_1D43CB108()
{
  return sub_1D4519C24();
}

uint64_t sub_1D43CB114()
{
  return swift_retain();
}

void sub_1D43CB120(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0xCu);
}

uint64_t sub_1D43CB128()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1D43CB130()
{
  return sub_1D451B970();
}

void sub_1D43CB138(uint64_t a1, uint64_t a2)
{
  sub_1D43C6264(a1, a2);
}

uint64_t sub_1D43CB14C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return v0 - 66;
}

id sub_1D43CB160(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 584));
}

void sub_1D43CB168()
{
  uint64_t v0;

  sub_1D43C4B00(v0);
}

uint64_t sub_1D43CB174()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1D42B5420(v1, v0);
}

uint64_t sub_1D43CB180(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = a1;
  return v1 - 112;
}

void sub_1D43CB194(uint64_t a1, uint64_t a2)
{
  sub_1D43CA0AC(a1, a2);
}

uint64_t sub_1D43CB1A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v1 = v0;
  v2 = sub_1D42B28FC(&qword_1EFE4FA78);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1D42CB210();
  v6 = v5 - v4;
  v7 = *(_QWORD *)(v1 + 16);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = sub_1D42BE1BC;
  v8[3] = v1;
  v8[4] = v7;
  swift_retain();
  swift_retain();
  sub_1D42B28FC(&qword_1EFE4BBB0);
  sub_1D42BE210(&qword_1EFE4BBB8, &qword_1EFE4BBB0, MEMORY[0x1E0C95D90]);
  sub_1D451A2C0();
  sub_1D42BE210(&qword_1EFE4FA80, &qword_1EFE4FA78, MEMORY[0x1E0C96148]);
  v9 = sub_1D451A2E4();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  return v9;
}

uint64_t sub_1D43CB2D0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_1D42B28FC(&qword_1EFE4FA68);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1D42CB210();
  v6 = v5 - v4;
  sub_1D42B5528(a1, a1[3]);
  sub_1D43CB944();
  sub_1D451BA24();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_1D43CB38C()
{
  sub_1D43CB944();
  return sub_1D451BA3C();
}

uint64_t sub_1D43CB3B4()
{
  sub_1D43CB944();
  return sub_1D451BA48();
}

uint64_t sub_1D43CB3DC(_QWORD *a1)
{
  return sub_1D43CB2D0(a1);
}

uint64_t type metadata accessor for SharedAOPDebugStream.Instance()
{
  return objc_opt_self();
}

uint64_t sub_1D43CB410(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v17;
  __int16 v18;
  char v19;
  char v20;
  _QWORD v21[3];
  uint64_t v22;
  _UNKNOWN **v23;
  uint64_t v24;

  v4 = v2;
  v24 = *MEMORY[0x1E0C80C00];
  v7 = sub_1D4519D20();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1D42CB210();
  v11 = v10 - v9;
  sub_1D4519D14();
  v12 = type metadata accessor for IOConnect();
  v22 = v12;
  v23 = &off_1E97AD280;
  v21[0] = a1;
  sub_1D4307398();
  sub_1D43C4380();
  if (v3)
  {
    swift_release();
    swift_release();
    sub_1D42CB3CC();
    sub_1D42B5400((uint64_t)v21);
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1D42B5400((uint64_t)v21);
    v22 = v12;
    v23 = &off_1E97AD280;
    v21[0] = a1;
    sub_1D4307398();
    sub_1D43C6434(1, (uint64_t)v21);
    sub_1D42B5400((uint64_t)v21);
    v22 = v12;
    v23 = &off_1E97AD280;
    v21[0] = a1;
    v17 = 0;
    v18 = 1;
    v19 = 1;
    sub_1D4307398();
    v13 = sub_1D43C3A7C((uint64_t)&v17, (uint64_t)&v20);
    v15 = v14;
    sub_1D43C6904((uint64_t)v21, 35, v13, v14);
    sub_1D42B5420(v13, v15);
    sub_1D42B5400((uint64_t)v21);
    *(_QWORD *)(v4 + OBJC_IVAR____TtCV13SoundAnalysis20SharedAOPDebugStream15AOPSubscription_connect) = a1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v4 + OBJC_IVAR____TtCV13SoundAnalysis20SharedAOPDebugStream15AOPSubscription_trackingID, v11, v7);
    *(_QWORD *)(v4 + OBJC_IVAR____TtCV13SoundAnalysis20SharedAOPDebugStream15AOPSubscription_analytics) = a2;
    sub_1D4307398();
    swift_retain();
    sub_1D43C4534(v11);
    swift_release();
    swift_release();
    sub_1D42CB3CC();
  }
  return v4;
}

uint64_t sub_1D43CB648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v20;
  __int16 v21;
  char v22;
  char v23;
  _QWORD v24[3];
  uint64_t v25;
  _UNKNOWN **v26;
  uint64_t v27;

  v1 = v0;
  v27 = *MEMORY[0x1E0C80C00];
  v2 = v0 + OBJC_IVAR____TtCV13SoundAnalysis20SharedAOPDebugStream15AOPSubscription_trackingID;
  sub_1D43C4750(v0 + OBJC_IVAR____TtCV13SoundAnalysis20SharedAOPDebugStream15AOPSubscription_trackingID);
  v3 = OBJC_IVAR____TtCV13SoundAnalysis20SharedAOPDebugStream15AOPSubscription_connect;
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtCV13SoundAnalysis20SharedAOPDebugStream15AOPSubscription_connect);
  v5 = type metadata accessor for IOConnect();
  v25 = v5;
  v26 = &off_1E97AD280;
  v24[0] = v4;
  swift_retain();
  sub_1D43C6434(0, (uint64_t)v24);
  sub_1D43CBA70(v6, v7, v8, v9);
  v10 = *(_QWORD *)(v1 + v3);
  v25 = v5;
  v26 = &off_1E97AD280;
  v24[0] = v10;
  v20 = 0;
  v21 = 1;
  v22 = 0;
  swift_retain();
  v11 = sub_1D43C3A7C((uint64_t)&v20, (uint64_t)&v23);
  v13 = v12;
  sub_1D43C6904((uint64_t)v24, 35, v11, v12);
  v14 = sub_1D42B5420(v11, v13);
  sub_1D43CBA70(v14, v15, v16, v17);
  v18 = sub_1D4519D20();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v2, v18);
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1D43CB804()
{
  sub_1D43CB648();
  return swift_deallocClassInstance();
}

uint64_t sub_1D43CB828()
{
  return type metadata accessor for SharedAOPDebugStream.AOPSubscription();
}

uint64_t type metadata accessor for SharedAOPDebugStream.AOPSubscription()
{
  uint64_t result;

  result = qword_1EFE4FA50;
  if (!qword_1EFE4FA50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D43CB868()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D4519D20();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedAOPDebugStream()
{
  return &type metadata for SharedAOPDebugStream;
}

ValueMetadata *type metadata accessor for SharedAOPDebugStream.Configuration()
{
  return &type metadata for SharedAOPDebugStream.Configuration;
}

unint64_t sub_1D43CB908()
{
  unint64_t result;

  result = qword_1EFE4FA60;
  if (!qword_1EFE4FA60)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45366D4, &type metadata for SharedAOPDebugStream.Configuration);
    atomic_store(result, (unint64_t *)&qword_1EFE4FA60);
  }
  return result;
}

unint64_t sub_1D43CB944()
{
  unint64_t result;

  result = qword_1EFE4FA70;
  if (!qword_1EFE4FA70)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45367E8, &type metadata for SharedAOPDebugStream.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FA70);
  }
  return result;
}

void sub_1D43CB980()
{
  sub_1D44A5D68();
}

uint64_t sub_1D43CB998(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t sub_1D43CB9A8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1D43CB9D4()
{
  sub_1D43CB980();
}

ValueMetadata *type metadata accessor for SharedAOPDebugStream.Configuration.CodingKeys()
{
  return &type metadata for SharedAOPDebugStream.Configuration.CodingKeys;
}

unint64_t sub_1D43CB9F4()
{
  unint64_t result;

  result = qword_1EFE4FA88;
  if (!qword_1EFE4FA88)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4536798, &type metadata for SharedAOPDebugStream.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FA88);
  }
  return result;
}

unint64_t sub_1D43CBA34()
{
  unint64_t result;

  result = qword_1EFE4FA90;
  if (!qword_1EFE4FA90)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45367C0, &type metadata for SharedAOPDebugStream.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FA90);
  }
  return result;
}

uint64_t sub_1D43CBA70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  return sub_1D42B5400((uint64_t)va);
}

id sub_1D43CBA78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  char *v11;
  objc_super v13;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC13SoundAnalysis18SNResultsForwarder_resultsHandler];
  *(_QWORD *)v10 = a3;
  *((_QWORD *)v10 + 1) = a4;
  v11 = &v4[OBJC_IVAR____TtC13SoundAnalysis18SNResultsForwarder_completionHandler];
  *(_QWORD *)v11 = a1;
  *((_QWORD *)v11 + 1) = a2;
  v13.receiver = v4;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, sel_init);
}

void sub_1D43CBAF4()
{
  sub_1D43CBED4(OBJC_IVAR____TtC13SoundAnalysis18SNResultsForwarder_resultsHandler);
  sub_1D42B6E24();
}

void sub_1D43CBB88()
{
  sub_1D43CBED4(OBJC_IVAR____TtC13SoundAnalysis18SNResultsForwarder_completionHandler);
  sub_1D42B6E24();
}

void sub_1D43CBC10(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t, _QWORD))(v1 + OBJC_IVAR____TtC13SoundAnalysis18SNResultsForwarder_completionHandler))(a1, 0);
  sub_1D42B6E24();
}

void sub_1D43CBC90()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for SNResultsForwarder()
{
  return objc_opt_self();
}

uint64_t sub_1D43CBD2C(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  a3();
  return a5(a1, a2);
}

void *sub_1D43CBD7C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  void *result;
  void *v7;
  id v8;
  void *v9;

  v5 = a3 + 16;
  sub_1D4311F3C();
  result = (void *)MEMORY[0x1D825E608](v5);
  if (result)
  {
    v7 = result;
    if (a2)
    {
      if ((objc_msgSend(result, sel_respondsToSelector_, sel_request_didFailWithError_) & 1) != 0)
      {
        v8 = a2;
        swift_unknownObjectRetain();
        v9 = (void *)sub_1D4519A98();
        objc_msgSend(v7, sel_request_didFailWithError_, a1, v9);
        swift_unknownObjectRelease();

      }
    }
    else if ((objc_msgSend(result, sel_respondsToSelector_, sel_requestDidComplete_) & 1) != 0)
    {
      objc_msgSend(v7, sel_requestDidComplete_, a1);
    }
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

void *sub_1D43CBE68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void *result;

  v5 = a3 + 16;
  sub_1D4311F3C();
  result = (void *)MEMORY[0x1D825E608](v5);
  if (result)
  {
    objc_msgSend(result, sel_request_didProduceResult_, a1, a2);
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D43CBED4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + a1))();
}

uint64_t sub_1D43CBEE0()
{
  uint64_t v0;

  swift_beginAccess();
  nullsub_1(v0 + 16);
  swift_endAccess();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnsafeInt16ToFloatNode()
{
  return objc_opt_self();
}

uint64_t sub_1D43CBF58()
{
  uint64_t v0;

  swift_beginAccess();
  nullsub_1(v0 + 16);
  swift_endAccess();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnsafeEBankNode()
{
  return objc_opt_self();
}

uint64_t sub_1D43CBFD0@<X0>(void (*a1)(uint64_t, char *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v29;
  void (*v30)(uint64_t, char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;

  v32 = a4;
  v30 = a1;
  v10 = *(_QWORD *)(a3 - 8);
  v11 = MEMORY[0x1E0C80A78](a1);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v29 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v29 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v29 - v20;
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v22);
  v24 = *(_QWORD *)(v10 + 16);
  sub_1D43CC2EC(a6, (uint64_t)v30);
  sub_1D43CC2EC((uint64_t)v19, a2);
  if ((sub_1D43CC2D0() & 1) == 0)
  {
    v30 = *(void (**)(uint64_t, char *, uint64_t, uint64_t))(v32 + 8);
    v31 = v24;
    do
    {
      sub_1D43CC2EC((uint64_t)v16, (uint64_t)v19);
      v30(a6, v19, a3, v32);
      sub_1D43CC2E4((uint64_t)v19);
      sub_1D43CC2E4(a6);
      v25 = v21;
      v26 = a5;
      v27 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v27(v19, v13, a3);
      v27((char *)a6, v16, a3);
      a5 = v26;
      v21 = v25;
    }
    while ((sub_1D43CC2D0() & 1) == 0);
  }
  sub_1D43CC2E4((uint64_t)v19);
  return sub_1D43CC2E4((uint64_t)v21);
}

void sub_1D43CC188(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t *sub_1D43CC190@<X0>(uint64_t *result@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  v3 = *a2;
  if (*a2)
  {
    if (*result != 0x8000000000000000 || v3 != -1)
    {
      *a3 = *result % v3;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1D43CC1C4@<X0>(_QWORD *result@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  v3 = *a2;
  if (*a2)
  {
    if (*result != 0x8000000000000000 || v3 != -1)
    {
      *a3 = *result / v3;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t storeEnumTagSinglePayload for SNNumberUtils.DomainError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D43CC234 + 4 * byte_1D45368D0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D43CC254 + 4 * byte_1D45368D5[v4]))();
}

_BYTE *sub_1D43CC234(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D43CC254(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D43CC25C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D43CC264(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D43CC26C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D43CC274(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SNNumberUtils.DomainError()
{
  return &type metadata for SNNumberUtils.DomainError;
}

unint64_t sub_1D43CC294()
{
  unint64_t result;

  result = qword_1EFE4FAB0;
  if (!qword_1EFE4FAB0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4536A0C, &type metadata for SNNumberUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4FAB0);
  }
  return result;
}

uint64_t sub_1D43CC2D0()
{
  return sub_1D451A698();
}

uint64_t sub_1D43CC2E4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_1D43CC2EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

_QWORD *initializeBufferWithCopyOfBuffer for FeatureExtractorConfiguration(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)(*a2 & 0x7FFFFFFFFFFFFFFFLL);
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void destroy for FeatureExtractorConfiguration(_QWORD *a1)
{

}

uint64_t *assignWithCopy for FeatureExtractorConfiguration(uint64_t *a1, uint64_t *a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = (void *)(*a2 & 0x7FFFFFFFFFFFFFFFLL);
  v4 = *a1;
  *a1 = *a2;
  v5 = (void *)(v4 & 0x7FFFFFFFFFFFFFFFLL);
  v6 = v3;

  return a1;
}

uint64_t *assignWithTake for FeatureExtractorConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for FeatureExtractorConfiguration(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7F && *(_BYTE *)(a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 126;
    }
    else
    {
      v2 = (((*(_QWORD *)a1 >> 57) >> 6) | (2 * ((*(_QWORD *)a1 >> 57) & 0x38 | *(_QWORD *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7E)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for FeatureExtractorConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t *sub_1D43CC444(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for FeatureExtractorConfiguration()
{
  return &type metadata for FeatureExtractorConfiguration;
}

uint64_t sub_1D43CC468(uint64_t a1)
{
  return sub_1D43CC484(a1, (uint64_t (*)(uint64_t, uint64_t *, id))sub_1D43CCDCC);
}

uint64_t sub_1D43CC484(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t *, id))
{
  void *v2;
  uint64_t v3;
  char v4;
  void (*v5)(uint64_t *__return_ptr, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  char v20;
  id v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v30[7];
  _QWORD v31[3];
  char v32[40];
  uint64_t v33;
  _BYTE v34[16];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t (*v49)(uint64_t, uint64_t *, id);

  v49 = a2;
  v28 = v2;
  v3 = MGGetProductType();
  sub_1D4380880(v3, v30);
  sub_1D431AC40((uint64_t)v30, (uint64_t)v32, &qword_1EFE506B0);
  if (v33)
  {
    v4 = v32[0];
    sub_1D42F11A4(v30);
    sub_1D4380388(v4);
    v5 = (void (*)(uint64_t *__return_ptr, uint64_t))v31[2];
    sub_1D431AC40((uint64_t)v31, (uint64_t)v34, &qword_1EFE4A7A0);
    v6 = sub_1D42F1244((uint64_t)v34);
    v5(&v35, v6);
    sub_1D42B8F48();
    v7 = v35;
    v8 = v36;
    v9 = v37;
    v10 = v38;
    v11 = v39;
    v12 = v40;
    v13 = v41;
    v14 = v42;
    v15 = v43;
    v16 = v44;
    v17 = v45;
    v18 = v46;
    v19 = v47;
    v20 = v48;
  }
  else
  {
    if (qword_1EFE48EF0 != -1)
      swift_once();
    v8 = *(_QWORD *)algn_1EFEA7998;
    v10 = qword_1EFEA79A8;
    v26 = qword_1EFEA79A0;
    v27 = qword_1EFEA7990;
    v12 = qword_1EFEA79B8;
    v25 = qword_1EFEA79B0;
    v24 = byte_1EFEA79C0;
    v14 = byte_1EFEA79C1;
    v15 = byte_1EFEA79C2;
    v16 = byte_1EFEA79C3;
    v17 = byte_1EFEA79C4;
    v18 = byte_1EFEA79C5;
    v19 = qword_1EFEA79C8;
    v20 = byte_1EFEA79D0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = v24;
    v11 = v25;
    v9 = v26;
    v7 = v27;
  }
  v35 = v7;
  v36 = v8;
  v37 = v9;
  v38 = v10;
  v39 = v11;
  v40 = v12;
  v41 = v13;
  v42 = v14;
  v43 = v15;
  v44 = v16;
  v45 = v17;
  v46 = v18;
  v47 = v19;
  v48 = v20;
  v21 = v28;
  v22 = v49(a1, &v35, v21);

  swift_bridgeObjectRelease();
  sub_1D42B7204();
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_1D43CC674(uint64_t a1)
{
  return nullsub_1(a1);
}

uint64_t sub_1D43CC688(uint64_t a1)
{
  return sub_1D43CC484(a1, (uint64_t (*)(uint64_t, uint64_t *, id))sub_1D43CD5FC);
}

uint64_t sub_1D43CC6A4(uint64_t a1)
{
  return sub_1D43CC484(a1, (uint64_t (*)(uint64_t, uint64_t *, id))sub_1D43D1620);
}

void sub_1D43CC6C0(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v15 = sub_1D42B8B10((uint64_t *)&unk_1EFE4FCF0);
  sub_1D42F1168(&qword_1EFE4FAF0, (uint64_t *)&unk_1EFE4FCF0, MEMORY[0x1E0C95D90]);
  v34 = v15;
  v35 = a7;
  v16 = sub_1D451A11C();
  v36 = *(_QWORD *)(v16 - 8);
  sub_1D42BA1F0();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v34 - v18;
  v20 = *((_QWORD *)a2 + 2);
  v21 = *((_QWORD *)a2 + 3);
  v22 = *((_BYTE *)a2 + 48);
  v23 = *((_BYTE *)a2 + 49);
  v24 = *((_BYTE *)a2 + 50);
  v25 = *((_BYTE *)a2 + 51);
  v26 = *((_BYTE *)a2 + 52);
  v27 = *((_BYTE *)a2 + 53);
  v28 = *((_QWORD *)a2 + 7);
  v29 = *((_BYTE *)a2 + 64);
  v37 = *a2;
  v38 = v20;
  v39 = v21;
  v40 = a2[2];
  v41 = v22;
  v42 = v23;
  v43 = v24;
  v44 = v25;
  v45 = v26;
  v46 = v27;
  v47 = v28;
  v48 = v29;
  v30 = v49;
  sub_1D43D2CB4(a1, (uint64_t)&v37, a4, a5, a6, a8);
  if (!v30)
  {
    *(_QWORD *)&v37 = v31;
    v32 = (_QWORD *)sub_1D42B6F40();
    v33 = v35;
    v32[2] = a6;
    v32[3] = v33;
    v32[4] = a8;
    sub_1D451A3A4();
    sub_1D42EA1BC();
    swift_release();
    MEMORY[0x1D825E41C](MEMORY[0x1E0C95B48], v16);
    sub_1D451A2E4();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v19, v16);
  }
  sub_1D42BE844();
}

uint64_t sub_1D43CC894(uint64_t a1)
{
  return sub_1D43CC484(a1, (uint64_t (*)(uint64_t, uint64_t *, id))sub_1D43D0648);
}

uint64_t sub_1D43CC8B0(unint64_t a1, void (*a2)(uint64_t *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  if (a1 >> 62)
    goto LABEL_11;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_1D451B5A4())
  {
    v5 = 4;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x1D825CD78](v5 - 4, a1);
      }
      else
      {
        v6 = *(_QWORD *)(a1 + 8 * v5);
        swift_unknownObjectRetain();
      }
      v7 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v9 = v6;
      v10 = 0;
      swift_unknownObjectRetain();
      a2(&v9);
      swift_unknownObjectRelease_n();
      ++v5;
      if (v7 == v4)
        goto LABEL_9;
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
LABEL_9:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43CC9C4(unint64_t a1, void (*a2)(id *))
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  id v10;
  char v11;

  if (a1 >> 62)
    goto LABEL_11;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_1D451B5A4())
  {
    v5 = 4;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1D825CD78](v5 - 4, a1) : *(id *)(a1 + 8 * v5);
      v7 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v10 = v6;
      v11 = 0;
      v8 = v6;
      a2(&v10);

      ++v5;
      if (v7 == v4)
        goto LABEL_9;
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
LABEL_9:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43CCACC(uint64_t a1)
{
  return sub_1D43CC484(a1, (uint64_t (*)(uint64_t, uint64_t *, id))sub_1D43CF658);
}

uint64_t sub_1D43CCAE8(uint64_t a1)
{
  return sub_1D43CC484(a1, (uint64_t (*)(uint64_t, uint64_t *, id))sub_1D43CE600);
}

uint64_t *sub_1D43CCB04(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t *v6;
  void *v7;
  id v8;

  if ((a1 & 0x8000000000000000) != 0)
  {
    v7 = (void *)(a1 & 0x7FFFFFFFFFFFFFFFLL);
    type metadata accessor for SNSoundPrintFeatureExtractor();
    sub_1D42B6F40();
    v5 = sub_1D4465D64((uint64_t)v7);
    v8 = v7;
  }
  else
  {
    type metadata accessor for SNLogMelBasedFeatureExtractor();
    v3 = sub_1D42B6F40();
    v4 = (id)a1;
    v5 = v3;
    v6 = sub_1D432D3F8(v4);
    if (!v1)
      return v6;
  }
  return (uint64_t *)v5;
}

void sub_1D43CCBA8(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;

  v2 = (void *)(a2 & 0x7FFFFFFFFFFFFFFFLL);
  sub_1D451B964();
  v3 = v2;
  sub_1D451B118();

}

uint64_t sub_1D43CCBF4(uint64_t a1, unint64_t a2)
{
  id v4;
  id v5;
  char v6;
  void *v7;

  if (a1 < 0)
  {
    if ((a2 & 0x8000000000000000) != 0)
    {
      v7 = (void *)(a2 & 0x7FFFFFFFFFFFFFFFLL);
      sub_1D42EA3E0(a1, (unint64_t *)&qword_1EFE404C0);
      v4 = (id)(a1 & 0x7FFFFFFFFFFFFFFFLL);
      v5 = v7;
      goto LABEL_7;
    }
  }
  else if ((a2 & 0x8000000000000000) == 0)
  {
    sub_1D42EA3E0(a1, (unint64_t *)&qword_1EFE404C0);
    v4 = (id)a1;
    v5 = (id)a2;
LABEL_7:
    v6 = sub_1D451B10C();

    return v6 & 1;
  }
  v6 = 0;
  return v6 & 1;
}

uint64_t sub_1D43CCCB4(uint64_t a1)
{
  id v2;

  sub_1D42BE9A8();
  sub_1D451B964();
  v2 = (id)(a1 & 0x7FFFFFFFFFFFFFFFLL);
  sub_1D451B118();

  return sub_1D451B994();
}

uint64_t sub_1D43CCD10()
{
  uint64_t *v0;

  return sub_1D43CCCB4(*v0);
}

void sub_1D43CCD18(uint64_t a1)
{
  uint64_t *v1;

  sub_1D43CCBA8(a1, *v1);
}

uint64_t sub_1D43CCD20()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_1D451B958();
  sub_1D451B964();
  v2 = (id)(v1 & 0x7FFFFFFFFFFFFFFFLL);
  sub_1D451B118();

  return sub_1D451B994();
}

uint64_t sub_1D43CCD80(uint64_t *a1, unint64_t *a2)
{
  return sub_1D43CCBF4(*a1, *a2);
}

unint64_t sub_1D43CCD90()
{
  unint64_t result;

  result = qword_1EFE4FAC0;
  if (!qword_1EFE4FAC0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4536B10, &type metadata for FeatureExtractorConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EFE4FAC0);
  }
  return result;
}

uint64_t sub_1D43CCDCC(void *a1, void *a2, id a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  double v24;
  double v25;
  unint64_t v26;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t result;
  void *v30;
  _QWORD *v31;
  _QWORD *v32;
  double v33;
  double v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  char *v38;
  uint64_t (**v39)@<X0>(uint64_t *@<X8>);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (**v51)@<X0>(uint64_t *@<X8>);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  char *v69;
  uint64_t (**v70)@<X0>(uint64_t *@<X8>);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  id v80;
  _BYTE __dst[72];
  uint64_t v82;

  v79 = a2;
  v80 = a1;
  v78 = sub_1D42B28FC(&qword_1EFE4FAF8);
  v74 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v73 = (uint64_t)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v77 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v70 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1D451A0B0();
  v75 = *(_QWORD *)(v7 - 8);
  v76 = v7;
  MEMORY[0x1E0C80A78](v7);
  v69 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_1D42B28FC(&qword_1EFE4ACA0);
  v9 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D42B28FC((uint64_t *)&unk_1EFE4FB00);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1D42B28FC(&qword_1EFE4AEE0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1D42CE074();
  if (v3)
  {

    return (uint64_t)a3;
  }
  v67 = a3;
  v64 = v11;
  v60 = v9;
  v61 = v16;
  v66 = v20;
  v62 = v15;
  v63 = v13;
  v65 = v18;
  v68 = v19;
  v21 = v78;
  v22 = v80;
  v23 = sub_1D43D34E8();
  v25 = v24;
  v26 = v23;
  ObjectType = swift_getObjectType();
  v28 = *(_QWORD *)(v66 + 8);
  (*(void (**)(unint64_t, uint64_t, uint64_t, double))(v28 + 8))(v26, ObjectType, v28, v25);
  v30 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(ObjectType, v28);
  sub_1D44F4884((uint64_t)v30);
  (*(void (**)(uint64_t))(v66 + 32))(ObjectType);
  a3 = v67;
  if (sub_1D44F5EF4((uint64_t)v30) != 1
    || (v31 = sub_1D44F65F4((uint64_t)v30)) == 0)
  {
LABEL_13:
    sub_1D435C53C();
    swift_allocError();
    *v36 = 0;
    swift_willThrow();

    swift_unknownObjectRelease();
    return (uint64_t)a3;
  }
  v32 = v31;
  if (sub_1D44EF6C4((uint64_t)v31) != 1)
  {

    goto LABEL_13;
  }
  sub_1D44F1774(v32, 0);
  v34 = v33;
  result = sub_1D44F1BF8((uint64_t)v32, 0);
  if ((~*(_QWORD *)&v34 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v34 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v34 < 9.22337204e18)
  {
    v35 = result;
    memcpy(__dst, v22, sizeof(__dst));
    sub_1D42BE38C((uint64_t)v22);
    sub_1D43994BC(v35, (uint64_t)v34);
    sub_1D4328888((uint64_t)v22);
    v37 = sub_1D4398FE0();
    swift_release();
    v82 = v37;
    v38 = v69;
    (*(void (**)(char *, _QWORD, uint64_t))(v75 + 104))(v69, *MEMORY[0x1E0C958B0], v76);
    v39 = v70;
    *v70 = sub_1D43D3E64;
    v39[1] = 0;
    v40 = v71;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), _QWORD, uint64_t))(v77 + 104))(v39, *MEMORY[0x1E0C958F0], v71);
    v80 = (id)sub_1D42B28FC((uint64_t *)&unk_1EFE4ACD0);
    sub_1D42F1168(&qword_1EFE496A0, (uint64_t *)&unk_1EFE4ACD0, MEMORY[0x1E0C95D90]);
    sub_1D451A380();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v77 + 8))(v39, v40);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v38, v76);
    swift_release();
    v41 = swift_allocObject();
    v80 = v32;
    *(_QWORD *)(v41 + 16) = sub_1D42FB61C;
    *(_QWORD *)(v41 + 24) = 0;
    sub_1D42B28FC((uint64_t *)&unk_1EFE4FB10);
    sub_1D42F1168(&qword_1EFE4ACE8, &qword_1EFE4ACA0, MEMORY[0x1E0C95AB8]);
    v42 = v62;
    v43 = v72;
    v44 = v64;
    sub_1D451A308();
    swift_release();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v44, v43);
    v45 = sub_1D44F41CC((uint64_t)v30);
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 16) = v45;
    v47 = v63;
    v48 = (uint64_t)v65;
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v65, v42, v12);
    v49 = v61;
    v50 = v48 + *(int *)(v61 + 84);
    *(_QWORD *)v50 = 0;
    *(_QWORD *)(v50 + 8) = 0;
    *(_BYTE *)(v50 + 16) = 2;
    v51 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v48 + *(int *)(v49 + 88));
    *v51 = sub_1D43D652C;
    v51[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v46;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v42, v12);
    v52 = swift_allocObject();
    *(double *)(v52 + 16) = v25;
    v53 = swift_allocObject();
    v54 = v66;
    *(_QWORD *)(v53 + 16) = v68;
    *(_QWORD *)(v53 + 24) = v54;
    v55 = swift_allocObject();
    v79 = v30;
    v56 = v55;
    *(_QWORD *)(v55 + 16) = sub_1D43D6530;
    *(_QWORD *)(v55 + 24) = v52;
    v57 = (_QWORD *)swift_allocObject();
    v57[2] = sub_1D43D6620;
    v57[3] = v53;
    v57[4] = sub_1D43D3F9C;
    v57[5] = 0;
    v57[6] = sub_1D43D65FC;
    v57[7] = v56;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    v58 = v73;
    sub_1D43D42C0(0, (uint64_t)sub_1D43D5F2C, (uint64_t)v57, v73);
    swift_release();
    swift_release();
    swift_release();
    sub_1D42F1168(&qword_1EFE4FB20, &qword_1EFE4FAF8, MEMORY[0x1E0C95B48]);
    a3 = (id)sub_1D451A2E4();
    swift_unknownObjectRelease();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v58, v21);
    sub_1D42D7018((uint64_t)v65, &qword_1EFE4AEE0);

    return (uint64_t)a3;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1D43CD5FC(void *a1, void *a2, id a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  double v24;
  double v25;
  unint64_t v26;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t result;
  void *v30;
  _QWORD *v31;
  _QWORD *v32;
  double v33;
  double v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  char *v38;
  uint64_t (**v39)@<X0>(uint64_t *@<X8>);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (**v51)@<X0>(uint64_t *@<X8>);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  char *v69;
  uint64_t (**v70)@<X0>(uint64_t *@<X8>);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  id v80;
  _BYTE __dst[72];
  uint64_t v82;

  v79 = a2;
  v80 = a1;
  v78 = sub_1D42B28FC(&qword_1EFE4FAF8);
  v74 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v73 = (uint64_t)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v77 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v70 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1D451A0B0();
  v75 = *(_QWORD *)(v7 - 8);
  v76 = v7;
  MEMORY[0x1E0C80A78](v7);
  v69 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_1D42B28FC(&qword_1EFE4ACA0);
  v9 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D42B28FC((uint64_t *)&unk_1EFE4FB00);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1D42B28FC(&qword_1EFE4AEE0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1D42D18EC();
  if (v3)
  {

    return (uint64_t)a3;
  }
  v67 = a3;
  v64 = v11;
  v60 = v9;
  v61 = v16;
  v66 = v20;
  v62 = v15;
  v63 = v13;
  v65 = v18;
  v68 = v19;
  v21 = v78;
  v22 = v80;
  v23 = sub_1D43D34E8();
  v25 = v24;
  v26 = v23;
  ObjectType = swift_getObjectType();
  v28 = *(_QWORD *)(v66 + 8);
  (*(void (**)(unint64_t, uint64_t, uint64_t, double))(v28 + 8))(v26, ObjectType, v28, v25);
  v30 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(ObjectType, v28);
  sub_1D44F4884((uint64_t)v30);
  (*(void (**)(uint64_t))(v66 + 32))(ObjectType);
  a3 = v67;
  if (sub_1D44F5EF4((uint64_t)v30) != 1
    || (v31 = sub_1D44F65F4((uint64_t)v30)) == 0)
  {
LABEL_13:
    sub_1D435C53C();
    swift_allocError();
    *v36 = 0;
    swift_willThrow();

    swift_unknownObjectRelease();
    return (uint64_t)a3;
  }
  v32 = v31;
  if (sub_1D44EF6C4((uint64_t)v31) != 1)
  {

    goto LABEL_13;
  }
  sub_1D44F1774(v32, 0);
  v34 = v33;
  result = sub_1D44F1BF8((uint64_t)v32, 0);
  if ((~*(_QWORD *)&v34 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v34 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v34 < 9.22337204e18)
  {
    v35 = result;
    memcpy(__dst, v22, sizeof(__dst));
    sub_1D42BE38C((uint64_t)v22);
    sub_1D43994BC(v35, (uint64_t)v34);
    sub_1D4328888((uint64_t)v22);
    v37 = sub_1D4398FE0();
    swift_release();
    v82 = v37;
    v38 = v69;
    (*(void (**)(char *, _QWORD, uint64_t))(v75 + 104))(v69, *MEMORY[0x1E0C958B0], v76);
    v39 = v70;
    *v70 = sub_1D43D3E64;
    v39[1] = 0;
    v40 = v71;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), _QWORD, uint64_t))(v77 + 104))(v39, *MEMORY[0x1E0C958F0], v71);
    v80 = (id)sub_1D42B28FC((uint64_t *)&unk_1EFE4ACD0);
    sub_1D42F1168(&qword_1EFE496A0, (uint64_t *)&unk_1EFE4ACD0, MEMORY[0x1E0C95D90]);
    sub_1D451A380();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v77 + 8))(v39, v40);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v38, v76);
    swift_release();
    v41 = swift_allocObject();
    v80 = v32;
    *(_QWORD *)(v41 + 16) = sub_1D42FB61C;
    *(_QWORD *)(v41 + 24) = 0;
    sub_1D42B28FC((uint64_t *)&unk_1EFE4FB10);
    sub_1D42F1168(&qword_1EFE4ACE8, &qword_1EFE4ACA0, MEMORY[0x1E0C95AB8]);
    v42 = v62;
    v43 = v72;
    v44 = v64;
    sub_1D451A308();
    swift_release();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v44, v43);
    v45 = sub_1D44F41CC((uint64_t)v30);
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 16) = v45;
    v47 = v63;
    v48 = (uint64_t)v65;
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v65, v42, v12);
    v49 = v61;
    v50 = v48 + *(int *)(v61 + 84);
    *(_QWORD *)v50 = 0;
    *(_QWORD *)(v50 + 8) = 0;
    *(_BYTE *)(v50 + 16) = 2;
    v51 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v48 + *(int *)(v49 + 88));
    *v51 = sub_1D43D652C;
    v51[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v46;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v42, v12);
    v52 = swift_allocObject();
    *(double *)(v52 + 16) = v25;
    v53 = swift_allocObject();
    v54 = v66;
    *(_QWORD *)(v53 + 16) = v68;
    *(_QWORD *)(v53 + 24) = v54;
    v55 = swift_allocObject();
    v79 = v30;
    v56 = v55;
    *(_QWORD *)(v55 + 16) = sub_1D43D6530;
    *(_QWORD *)(v55 + 24) = v52;
    v57 = (_QWORD *)swift_allocObject();
    v57[2] = sub_1D43D6620;
    v57[3] = v53;
    v57[4] = sub_1D43D3F9C;
    v57[5] = 0;
    v57[6] = sub_1D43D65FC;
    v57[7] = v56;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    v58 = v73;
    sub_1D43D42C0(0, (uint64_t)sub_1D43D5F2C, (uint64_t)v57, v73);
    swift_release();
    swift_release();
    swift_release();
    sub_1D42F1168(&qword_1EFE4FB20, &qword_1EFE4FAF8, MEMORY[0x1E0C95B48]);
    a3 = (id)sub_1D451A2E4();
    swift_unknownObjectRelease();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v58, v21);
    sub_1D42D7018((uint64_t)v65, &qword_1EFE4AEE0);

    return (uint64_t)a3;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1D43CDE2C(void *a1, _QWORD *a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t result;
  id v28;
  _QWORD *v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t (**v38)@<X0>(uint64_t *@<X8>);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (**v50)@<X0>(uint64_t *@<X8>);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t (**v68)@<X0>(uint64_t *@<X8>);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  id v78;
  _BYTE __dst[72];
  uint64_t v80;

  v77 = a2;
  v78 = a1;
  v76 = sub_1D42B28FC(&qword_1EFE4FAF8);
  v71 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v67 = (uint64_t)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v74 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v68 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1D451A0B0();
  v72 = *(_QWORD *)(v7 - 8);
  v73 = v7;
  MEMORY[0x1E0C80A78](v7);
  v66 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_1D42B28FC(&qword_1EFE4ACA0);
  v70 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D42B28FC((uint64_t *)&unk_1EFE4FB00);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1D42B28FC(&qword_1EFE4AEE0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SNSoundActionsDetector();
  v18 = swift_allocObject();
  v19 = a3;
  sub_1D44750D0(v19);
  if (v3)
  {

    return v18;
  }
  v63 = v10;
  v60 = v15;
  v21 = v75;
  v61 = v14;
  v62 = v12;
  v64 = v17;
  v65 = v20;
  v22 = v76;
  v23 = v78;
  sub_1D43D34E8();
  v25 = v24;
  v18 = v65;
  sub_1D4475DAC();
  v26 = v19;
  v28 = sub_1D4475D60();
  sub_1D44F4884((uint64_t)v28);
  if (sub_1D44F5EF4((uint64_t)v28) != 1
    || (v77 = sub_1D44F65F4((uint64_t)v28)) == 0)
  {
LABEL_14:
    sub_1D435C53C();
    swift_allocError();
    *v34 = 0;
    swift_willThrow();

    swift_release();
    return v18;
  }
  if (sub_1D44EF6C4((uint64_t)v77) != 1)
  {

    goto LABEL_14;
  }
  v29 = v77;
  sub_1D44F1774(v77, 0);
  v31 = v30;
  result = sub_1D44F1BF8((uint64_t)v29, 0);
  if ((~*(_QWORD *)&v31 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v31 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v59 = 0;
  if (v31 < 9.22337204e18)
  {
    v58 = result;
    memcpy(__dst, v23, sizeof(__dst));
    sub_1D42BE38C((uint64_t)v23);
    v32 = v59;
    sub_1D43994BC(v58, (uint64_t)v31);
    v18 = v33;
    sub_1D4328888((uint64_t)v23);
    if (v32)
    {

      swift_release();
    }
    else
    {
      v35 = sub_1D4398FE0();
      v59 = 0;
      v36 = v35;
      swift_release();
      v80 = v36;
      v37 = v66;
      (*(void (**)(char *, _QWORD, uint64_t))(v72 + 104))(v66, *MEMORY[0x1E0C958B0], v73);
      v38 = v68;
      *v68 = sub_1D43D3E64;
      v38[1] = 0;
      v39 = v69;
      (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), _QWORD, uint64_t))(v74 + 104))(v38, *MEMORY[0x1E0C958F0], v69);
      v78 = (id)sub_1D42B28FC((uint64_t *)&unk_1EFE4ACD0);
      sub_1D42F1168(&qword_1EFE496A0, (uint64_t *)&unk_1EFE4ACD0, MEMORY[0x1E0C95D90]);
      sub_1D451A380();
      (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v74 + 8))(v38, v39);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v37, v73);
      swift_release();
      v40 = swift_allocObject();
      *(_QWORD *)(v40 + 16) = sub_1D42FB61C;
      *(_QWORD *)(v40 + 24) = 0;
      sub_1D42B28FC((uint64_t *)&unk_1EFE4FB10);
      sub_1D42F1168(&qword_1EFE4ACE8, &qword_1EFE4ACA0, MEMORY[0x1E0C95AB8]);
      v41 = v61;
      v42 = v63;
      sub_1D451A308();
      swift_release();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v42, v21);
      v43 = sub_1D44F41CC((uint64_t)v28);
      v44 = swift_allocObject();
      *(_QWORD *)(v44 + 16) = v43;
      v45 = v41;
      v46 = v62;
      v47 = (uint64_t)v64;
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v64, v45, v11);
      v48 = v60;
      v49 = v47 + *(int *)(v60 + 84);
      *(_QWORD *)v49 = 0;
      *(_QWORD *)(v49 + 8) = 0;
      *(_BYTE *)(v49 + 16) = 2;
      v50 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v47 + *(int *)(v48 + 88));
      *v50 = sub_1D43D652C;
      v50[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v44;
      (*(void (**)(char *, uint64_t))(v46 + 8))(v45, v11);
      v51 = swift_allocObject();
      *(_QWORD *)(v51 + 16) = v25;
      v52 = swift_allocObject();
      v78 = v28;
      v53 = v52;
      *(_QWORD *)(v52 + 16) = v65;
      *(_QWORD *)(v52 + 24) = &off_1E97A6F68;
      v54 = swift_allocObject();
      *(_QWORD *)(v54 + 16) = sub_1D43D6530;
      *(_QWORD *)(v54 + 24) = v51;
      v55 = (_QWORD *)swift_allocObject();
      v55[2] = sub_1D43D6620;
      v55[3] = v53;
      v55[4] = sub_1D43D3F9C;
      v55[5] = 0;
      v55[6] = sub_1D43D65FC;
      v55[7] = v54;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v56 = v67;
      sub_1D43D42C0(0, (uint64_t)sub_1D43D5F2C, (uint64_t)v55, v67);
      swift_release();
      swift_release();
      swift_release();
      sub_1D42F1168(&qword_1EFE4FB20, &qword_1EFE4FAF8, MEMORY[0x1E0C95B48]);
      v18 = sub_1D451A2E4();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v56, v22);
      sub_1D42D7018((uint64_t)v64, &qword_1EFE4AEE0);

    }
    return v18;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1D43CE600(void *a1, void *a2, id a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  double v24;
  double v25;
  unint64_t v26;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t result;
  void *v30;
  _QWORD *v31;
  _QWORD *v32;
  double v33;
  double v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  char *v38;
  uint64_t (**v39)@<X0>(uint64_t *@<X8>);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (**v51)@<X0>(uint64_t *@<X8>);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  char *v69;
  uint64_t (**v70)@<X0>(uint64_t *@<X8>);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  id v80;
  _BYTE __dst[72];
  uint64_t v82;

  v79 = a2;
  v80 = a1;
  v78 = sub_1D42B28FC(&qword_1EFE4FAF8);
  v74 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v73 = (uint64_t)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v77 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v70 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1D451A0B0();
  v75 = *(_QWORD *)(v7 - 8);
  v76 = v7;
  MEMORY[0x1E0C80A78](v7);
  v69 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_1D42B28FC(&qword_1EFE4ACA0);
  v9 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D42B28FC((uint64_t *)&unk_1EFE4FB00);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1D42B28FC(&qword_1EFE4AEE0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1D4344CC0();
  if (v3)
  {

    return (uint64_t)a3;
  }
  v67 = a3;
  v64 = v11;
  v60 = v9;
  v61 = v16;
  v66 = v20;
  v62 = v15;
  v63 = v13;
  v65 = v18;
  v68 = v19;
  v21 = v78;
  v22 = v80;
  v23 = sub_1D43D34E8();
  v25 = v24;
  v26 = v23;
  ObjectType = swift_getObjectType();
  v28 = *(_QWORD *)(v66 + 8);
  (*(void (**)(unint64_t, uint64_t, uint64_t, double))(v28 + 8))(v26, ObjectType, v28, v25);
  v30 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(ObjectType, v28);
  sub_1D44F4884((uint64_t)v30);
  (*(void (**)(uint64_t))(v66 + 32))(ObjectType);
  a3 = v67;
  if (sub_1D44F5EF4((uint64_t)v30) != 1
    || (v31 = sub_1D44F65F4((uint64_t)v30)) == 0)
  {
LABEL_13:
    sub_1D435C53C();
    swift_allocError();
    *v36 = 0;
    swift_willThrow();

    swift_unknownObjectRelease();
    return (uint64_t)a3;
  }
  v32 = v31;
  if (sub_1D44EF6C4((uint64_t)v31) != 1)
  {

    goto LABEL_13;
  }
  sub_1D44F1774(v32, 0);
  v34 = v33;
  result = sub_1D44F1BF8((uint64_t)v32, 0);
  if ((~*(_QWORD *)&v34 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v34 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v34 < 9.22337204e18)
  {
    v35 = result;
    memcpy(__dst, v22, sizeof(__dst));
    sub_1D42BE38C((uint64_t)v22);
    sub_1D43994BC(v35, (uint64_t)v34);
    sub_1D4328888((uint64_t)v22);
    v37 = sub_1D4398FE0();
    swift_release();
    v82 = v37;
    v38 = v69;
    (*(void (**)(char *, _QWORD, uint64_t))(v75 + 104))(v69, *MEMORY[0x1E0C958B0], v76);
    v39 = v70;
    *v70 = sub_1D43D3E64;
    v39[1] = 0;
    v40 = v71;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), _QWORD, uint64_t))(v77 + 104))(v39, *MEMORY[0x1E0C958F0], v71);
    v80 = (id)sub_1D42B28FC((uint64_t *)&unk_1EFE4ACD0);
    sub_1D42F1168(&qword_1EFE496A0, (uint64_t *)&unk_1EFE4ACD0, MEMORY[0x1E0C95D90]);
    sub_1D451A380();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v77 + 8))(v39, v40);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v38, v76);
    swift_release();
    v41 = swift_allocObject();
    v80 = v32;
    *(_QWORD *)(v41 + 16) = sub_1D42FB61C;
    *(_QWORD *)(v41 + 24) = 0;
    sub_1D42B28FC((uint64_t *)&unk_1EFE4FB10);
    sub_1D42F1168(&qword_1EFE4ACE8, &qword_1EFE4ACA0, MEMORY[0x1E0C95AB8]);
    v42 = v62;
    v43 = v72;
    v44 = v64;
    sub_1D451A308();
    swift_release();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v44, v43);
    v45 = sub_1D44F41CC((uint64_t)v30);
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 16) = v45;
    v47 = v63;
    v48 = (uint64_t)v65;
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v65, v42, v12);
    v49 = v61;
    v50 = v48 + *(int *)(v61 + 84);
    *(_QWORD *)v50 = 0;
    *(_QWORD *)(v50 + 8) = 0;
    *(_BYTE *)(v50 + 16) = 2;
    v51 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v48 + *(int *)(v49 + 88));
    *v51 = sub_1D43D652C;
    v51[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v46;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v42, v12);
    v52 = swift_allocObject();
    *(double *)(v52 + 16) = v25;
    v53 = swift_allocObject();
    v54 = v66;
    *(_QWORD *)(v53 + 16) = v68;
    *(_QWORD *)(v53 + 24) = v54;
    v55 = swift_allocObject();
    v79 = v30;
    v56 = v55;
    *(_QWORD *)(v55 + 16) = sub_1D43D6530;
    *(_QWORD *)(v55 + 24) = v52;
    v57 = (_QWORD *)swift_allocObject();
    v57[2] = sub_1D43D6620;
    v57[3] = v53;
    v57[4] = sub_1D43D3F9C;
    v57[5] = 0;
    v57[6] = sub_1D43D65FC;
    v57[7] = v56;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    v58 = v73;
    sub_1D43D42C0(0, (uint64_t)sub_1D43D5F2C, (uint64_t)v57, v73);
    swift_release();
    swift_release();
    swift_release();
    sub_1D42F1168(&qword_1EFE4FB20, &qword_1EFE4FAF8, MEMORY[0x1E0C95B48]);
    a3 = (id)sub_1D451A2E4();
    swift_unknownObjectRelease();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v58, v21);
    sub_1D42D7018((uint64_t)v65, &qword_1EFE4AEE0);

    return (uint64_t)a3;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1D43CEE30(void *a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (**v9)@<X0>(uint64_t *@<X8>);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  int v24;
  double v25;
  double v26;
  uint64_t result;
  _QWORD *v28;
  _QWORD *v29;
  double v30;
  double v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (**v47)@<X0>(uint64_t *@<X8>);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  _BYTE __dst[72];
  uint64_t v73;

  v71 = a3;
  v5 = sub_1D42B28FC(&qword_1EFE4FAF8);
  v69 = *(_QWORD *)(v5 - 8);
  v70 = v5;
  MEMORY[0x1E0C80A78](v5);
  v68 = (uint64_t)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v62 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_1D451A0B0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1D42B28FC(&qword_1EFE4ACA0);
  v64 = *(_QWORD *)(v14 - 8);
  v65 = v14;
  MEMORY[0x1E0C80A78](v14);
  v63 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1D42B28FC((uint64_t *)&unk_1EFE4FB00);
  v67 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v66 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1D42B28FC(&qword_1EFE4AEE0);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFE403C0 != -1)
  {
    v61 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    v60 = v19;
    swift_once();
    v19 = v60;
    v21 = v61;
  }
  if (byte_1EFE403B0 != 1)
  {
    v23 = (id)type metadata accessor for SNError();
    sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD00000000000001ALL, 0x80000001D4551C80);
    swift_willThrow();

    return (uint64_t)v23;
  }
  v60 = v19;
  v59 = v16;
  v61 = v21;
  type metadata accessor for SNAudioLevelMeasurer();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = 0;
  *(_QWORD *)(v22 + 24) = 0;
  v23 = a1;
  v24 = sub_1D43D34E8();
  if (v3)
  {

    swift_release();
    return (uint64_t)v23;
  }
  v26 = v25;
  sub_1D44BA6FC(v24, v25);
  v23 = sub_1D44BA6B0();
  sub_1D44F4884((uint64_t)v23);
  if (sub_1D44F5EF4((uint64_t)v23) != 1)
    goto LABEL_17;
  v28 = sub_1D44F65F4((uint64_t)v23);
  if (!v28)
    goto LABEL_17;
  v58 = v23;
  v29 = v28;
  if (sub_1D44EF6C4((uint64_t)v28) != 1)
  {

    v23 = v58;
LABEL_17:
    sub_1D435C53C();
    swift_allocError();
    *v33 = 0;
    swift_willThrow();

    swift_release();
    return (uint64_t)v23;
  }
  sub_1D44F1774(v29, 0);
  v31 = v30;
  v57 = v29;
  result = sub_1D44F1BF8((uint64_t)v29, 0);
  if ((~*(_QWORD *)&v31 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v31 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v56 = v22;
  if (v31 < 9.22337204e18)
  {
    v32 = result;
    v55 = (uint64_t)v31;
    memcpy(__dst, a1, sizeof(__dst));
    sub_1D42BE38C((uint64_t)a1);
    sub_1D43994BC(v32, v55);
    sub_1D4328888((uint64_t)a1);
    v34 = sub_1D4398FE0();
    swift_release();
    v73 = v34;
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0C958B0], v10);
    *v9 = sub_1D43D3E64;
    v9[1] = 0;
    v35 = v62;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), _QWORD, uint64_t))(v62 + 104))(v9, *MEMORY[0x1E0C958F0], v7);
    v55 = sub_1D42B28FC((uint64_t *)&unk_1EFE4ACD0);
    sub_1D42F1168(&qword_1EFE496A0, (uint64_t *)&unk_1EFE4ACD0, MEMORY[0x1E0C95D90]);
    v36 = v63;
    sub_1D451A380();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v35 + 8))(v9, v7);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    swift_release();
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = sub_1D42FB61C;
    *(_QWORD *)(v37 + 24) = 0;
    sub_1D42B28FC((uint64_t *)&unk_1EFE4FB10);
    sub_1D42F1168(&qword_1EFE4ACE8, &qword_1EFE4ACA0, MEMORY[0x1E0C95AB8]);
    v38 = v65;
    v39 = v66;
    sub_1D451A308();
    swift_release();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v36, v38);
    v40 = sub_1D44F41CC((uint64_t)v58);
    v41 = swift_allocObject();
    *(_QWORD *)(v41 + 16) = v40;
    v42 = v67;
    v43 = (uint64_t)v61;
    v44 = v59;
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v61, v39, v59);
    v45 = v60;
    v46 = v43 + *(int *)(v60 + 84);
    *(_QWORD *)v46 = 0;
    *(_QWORD *)(v46 + 8) = 0;
    *(_BYTE *)(v46 + 16) = 2;
    v47 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v43 + *(int *)(v45 + 88));
    *v47 = sub_1D43D652C;
    v47[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v41;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v44);
    v48 = swift_allocObject();
    *(double *)(v48 + 16) = v26;
    v49 = swift_allocObject();
    *(_QWORD *)(v49 + 16) = v56;
    *(_QWORD *)(v49 + 24) = &off_1E97A4418;
    v50 = swift_allocObject();
    *(_QWORD *)(v50 + 16) = sub_1D43D6530;
    *(_QWORD *)(v50 + 24) = v48;
    v51 = (_QWORD *)swift_allocObject();
    v51[2] = sub_1D43D6620;
    v51[3] = v49;
    v51[4] = sub_1D43D3F9C;
    v51[5] = 0;
    v51[6] = sub_1D43D65FC;
    v51[7] = v50;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v52 = v68;
    sub_1D43D42C0(0, (uint64_t)sub_1D43D5F2C, (uint64_t)v51, v68);
    swift_release();
    swift_release();
    swift_release();
    sub_1D42F1168(&qword_1EFE4FB20, &qword_1EFE4FAF8, MEMORY[0x1E0C95B48]);
    v53 = v70;
    v23 = (id)sub_1D451A2E4();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v52, v53);
    sub_1D42D7018(v43, &qword_1EFE4AEE0);

    return (uint64_t)v23;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1D43CF658(void *a1, void *a2, id a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  double v24;
  double v25;
  unint64_t v26;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t result;
  void *v30;
  _QWORD *v31;
  _QWORD *v32;
  double v33;
  double v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  char *v38;
  uint64_t (**v39)@<X0>(uint64_t *@<X8>);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (**v51)@<X0>(uint64_t *@<X8>);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  char *v69;
  uint64_t (**v70)@<X0>(uint64_t *@<X8>);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  id v80;
  _BYTE __dst[72];
  uint64_t v82;

  v79 = a2;
  v80 = a1;
  v78 = sub_1D42B28FC(&qword_1EFE4FAF8);
  v74 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v73 = (uint64_t)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v77 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v70 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1D451A0B0();
  v75 = *(_QWORD *)(v7 - 8);
  v76 = v7;
  MEMORY[0x1E0C80A78](v7);
  v69 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_1D42B28FC(&qword_1EFE4ACA0);
  v9 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D42B28FC((uint64_t *)&unk_1EFE4FB00);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1D42B28FC(&qword_1EFE4AEE0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1D4340EF8();
  if (v3)
  {

    return (uint64_t)a3;
  }
  v67 = a3;
  v64 = v11;
  v60 = v9;
  v61 = v16;
  v66 = v20;
  v62 = v15;
  v63 = v13;
  v65 = v18;
  v68 = v19;
  v21 = v78;
  v22 = v80;
  v23 = sub_1D43D34E8();
  v25 = v24;
  v26 = v23;
  ObjectType = swift_getObjectType();
  v28 = *(_QWORD *)(v66 + 8);
  (*(void (**)(unint64_t, uint64_t, uint64_t, double))(v28 + 8))(v26, ObjectType, v28, v25);
  v30 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(ObjectType, v28);
  sub_1D44F4884((uint64_t)v30);
  (*(void (**)(uint64_t))(v66 + 32))(ObjectType);
  a3 = v67;
  if (sub_1D44F5EF4((uint64_t)v30) != 1
    || (v31 = sub_1D44F65F4((uint64_t)v30)) == 0)
  {
LABEL_13:
    sub_1D435C53C();
    swift_allocError();
    *v36 = 0;
    swift_willThrow();

    swift_unknownObjectRelease();
    return (uint64_t)a3;
  }
  v32 = v31;
  if (sub_1D44EF6C4((uint64_t)v31) != 1)
  {

    goto LABEL_13;
  }
  sub_1D44F1774(v32, 0);
  v34 = v33;
  result = sub_1D44F1BF8((uint64_t)v32, 0);
  if ((~*(_QWORD *)&v34 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v34 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v34 < 9.22337204e18)
  {
    v35 = result;
    memcpy(__dst, v22, sizeof(__dst));
    sub_1D42BE38C((uint64_t)v22);
    sub_1D43994BC(v35, (uint64_t)v34);
    sub_1D4328888((uint64_t)v22);
    v37 = sub_1D4398FE0();
    swift_release();
    v82 = v37;
    v38 = v69;
    (*(void (**)(char *, _QWORD, uint64_t))(v75 + 104))(v69, *MEMORY[0x1E0C958B0], v76);
    v39 = v70;
    *v70 = sub_1D43D3E64;
    v39[1] = 0;
    v40 = v71;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), _QWORD, uint64_t))(v77 + 104))(v39, *MEMORY[0x1E0C958F0], v71);
    v80 = (id)sub_1D42B28FC((uint64_t *)&unk_1EFE4ACD0);
    sub_1D42F1168(&qword_1EFE496A0, (uint64_t *)&unk_1EFE4ACD0, MEMORY[0x1E0C95D90]);
    sub_1D451A380();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v77 + 8))(v39, v40);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v38, v76);
    swift_release();
    v41 = swift_allocObject();
    v80 = v32;
    *(_QWORD *)(v41 + 16) = sub_1D42FB61C;
    *(_QWORD *)(v41 + 24) = 0;
    sub_1D42B28FC((uint64_t *)&unk_1EFE4FB10);
    sub_1D42F1168(&qword_1EFE4ACE8, &qword_1EFE4ACA0, MEMORY[0x1E0C95AB8]);
    v42 = v62;
    v43 = v72;
    v44 = v64;
    sub_1D451A308();
    swift_release();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v44, v43);
    v45 = sub_1D44F41CC((uint64_t)v30);
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 16) = v45;
    v47 = v63;
    v48 = (uint64_t)v65;
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v65, v42, v12);
    v49 = v61;
    v50 = v48 + *(int *)(v61 + 84);
    *(_QWORD *)v50 = 0;
    *(_QWORD *)(v50 + 8) = 0;
    *(_BYTE *)(v50 + 16) = 2;
    v51 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v48 + *(int *)(v49 + 88));
    *v51 = sub_1D43D652C;
    v51[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v46;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v42, v12);
    v52 = swift_allocObject();
    *(double *)(v52 + 16) = v25;
    v53 = swift_allocObject();
    v54 = v66;
    *(_QWORD *)(v53 + 16) = v68;
    *(_QWORD *)(v53 + 24) = v54;
    v55 = swift_allocObject();
    v79 = v30;
    v56 = v55;
    *(_QWORD *)(v55 + 16) = sub_1D43D6530;
    *(_QWORD *)(v55 + 24) = v52;
    v57 = (_QWORD *)swift_allocObject();
    v57[2] = sub_1D43D6620;
    v57[3] = v53;
    v57[4] = sub_1D43D3F9C;
    v57[5] = 0;
    v57[6] = sub_1D43D65FC;
    v57[7] = v56;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    v58 = v73;
    sub_1D43D42C0(0, (uint64_t)sub_1D43D5F2C, (uint64_t)v57, v73);
    swift_release();
    swift_release();
    swift_release();
    sub_1D42F1168(&qword_1EFE4FB20, &qword_1EFE4FAF8, MEMORY[0x1E0C95B48]);
    a3 = (id)sub_1D451A2E4();
    swift_unknownObjectRelease();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v58, v21);
    sub_1D42D7018((uint64_t)v65, &qword_1EFE4AEE0);

    return (uint64_t)a3;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1D43CFE88(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t (**v40)@<X0>(uint64_t *@<X8>);
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (**v49)@<X0>(uint64_t *@<X8>);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t (**v65)@<X0>(uint64_t *@<X8>);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  _QWORD *v76;
  _BYTE __dst[72];
  uint64_t v78;

  v75 = a1;
  v76 = a3;
  v74 = a2;
  v73 = sub_1D42B28FC(&qword_1EFE4FAF8);
  v67 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v66 = (uint64_t)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v70 = *(_QWORD *)(v5 - 8);
  v71 = v5;
  MEMORY[0x1E0C80A78](v5);
  v65 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1D451A0B0();
  v68 = *(_QWORD *)(v7 - 8);
  v69 = v7;
  MEMORY[0x1E0C80A78](v7);
  v64 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_1D42B28FC(&qword_1EFE4ACA0);
  v9 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D42B28FC((uint64_t *)&unk_1EFE4FB00);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1D42B28FC(&qword_1EFE4AEE0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SNAudioOffsetEstimator();
  v19 = swift_allocObject();
  v20 = sub_1D4466D84();
  if (v3)
  {
    v21 = v76;
    goto LABEL_3;
  }
  v58 = v11;
  v59 = v9;
  v22 = v72;
  v60 = v15;
  v61 = v13;
  v62 = v18;
  v63 = v20;
  v23 = v73;
  v25 = (const void *)v75;
  v24 = v76;
  sub_1D43D34E8();
  v27 = v26;
  v74 = sub_1D446749C();
  v29 = (uint64_t)v74;
  sub_1D44F4884((uint64_t)v74);
  v30 = sub_1D44F5EF4(v29);
  v19 = (uint64_t)v24;
  if (v30 != 1 || (v57 = sub_1D44F65F4((uint64_t)v74)) == 0)
  {
LABEL_15:
    sub_1D435C53C();
    swift_allocError();
    *v36 = 0;
    swift_willThrow();

    swift_release();
    v21 = v74;
    goto LABEL_3;
  }
  if (sub_1D44EF6C4((uint64_t)v57) != 1)
  {

    goto LABEL_15;
  }
  v31 = v57;
  sub_1D44F1774(v57, 0);
  v33 = v32;
  result = sub_1D44F1BF8((uint64_t)v31, 0);
  if ((~*(_QWORD *)&v33 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v33 <= -9.22337204e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v56 = 0;
  if (v33 < 9.22337204e18)
  {
    v55 = result;
    memcpy(__dst, v25, sizeof(__dst));
    sub_1D42BE38C((uint64_t)v25);
    v34 = v56;
    sub_1D43994BC(v55, (uint64_t)v33);
    v19 = v35;
    sub_1D4328888((uint64_t)v25);
    if (!v34)
    {
      v37 = sub_1D4398FE0();
      v56 = 0;
      v38 = v37;
      swift_release();
      v78 = v38;
      v39 = v64;
      (*(void (**)(char *, _QWORD, uint64_t))(v68 + 104))(v64, *MEMORY[0x1E0C958B0], v69);
      v40 = v65;
      *v65 = sub_1D43D3E64;
      v40[1] = 0;
      (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), _QWORD, uint64_t))(v70 + 104))(v40, *MEMORY[0x1E0C958F0], v71);
      v75 = sub_1D42B28FC((uint64_t *)&unk_1EFE4ACD0);
      sub_1D42F1168(&qword_1EFE496A0, (uint64_t *)&unk_1EFE4ACD0, MEMORY[0x1E0C95D90]);
      v41 = v58;
      sub_1D451A380();
      (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v70 + 8))(v40, v71);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v39, v69);
      swift_release();
      v42 = swift_allocObject();
      *(_QWORD *)(v42 + 16) = sub_1D42FB61C;
      *(_QWORD *)(v42 + 24) = 0;
      sub_1D42B28FC((uint64_t *)&unk_1EFE4FB10);
      sub_1D42F1168(&qword_1EFE4ACE8, &qword_1EFE4ACA0, MEMORY[0x1E0C95AB8]);
      v43 = v60;
      sub_1D451A308();
      swift_release();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v41, v22);
      v44 = sub_1D44F41CC((uint64_t)v74);
      v45 = swift_allocObject();
      *(_QWORD *)(v45 + 16) = v44;
      v46 = v61;
      v47 = (uint64_t)v62;
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v62, v43, v12);
      v48 = v47 + *(int *)(v16 + 84);
      *(_QWORD *)v48 = 0;
      *(_QWORD *)(v48 + 8) = 0;
      *(_BYTE *)(v48 + 16) = 2;
      v49 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v47 + *(int *)(v16 + 88));
      *v49 = sub_1D43D652C;
      v49[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v45;
      (*(void (**)(char *, uint64_t))(v46 + 8))(v43, v12);
      v50 = swift_allocObject();
      *(_QWORD *)(v50 + 16) = v27;
      v51 = swift_allocObject();
      *(_QWORD *)(v51 + 16) = v63;
      *(_QWORD *)(v51 + 24) = &off_1E97A6E90;
      v52 = swift_allocObject();
      *(_QWORD *)(v52 + 16) = sub_1D43D6530;
      *(_QWORD *)(v52 + 24) = v50;
      v53 = (_QWORD *)swift_allocObject();
      v53[2] = sub_1D43D6620;
      v53[3] = v51;
      v53[4] = sub_1D43D3F9C;
      v53[5] = 0;
      v53[6] = sub_1D43D65FC;
      v53[7] = v52;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v54 = v66;
      sub_1D43D42C0(0, (uint64_t)sub_1D43D5F2C, (uint64_t)v53, v66);
      swift_release();
      swift_release();
      swift_release();
      sub_1D42F1168(&qword_1EFE4FB20, &qword_1EFE4FAF8, MEMORY[0x1E0C95B48]);
      v19 = sub_1D451A2E4();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v54, v23);
      sub_1D42D7018((uint64_t)v62, &qword_1EFE4AEE0);

      return v19;
    }

    swift_release();
    v21 = v57;
LABEL_3:

    return v19;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1D43D0648(void *a1, void *a2, id a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  double v24;
  double v25;
  unint64_t v26;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t result;
  void *v30;
  _QWORD *v31;
  _QWORD *v32;
  double v33;
  double v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  char *v38;
  uint64_t (**v39)@<X0>(uint64_t *@<X8>);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (**v51)@<X0>(uint64_t *@<X8>);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  char *v69;
  uint64_t (**v70)@<X0>(uint64_t *@<X8>);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  id v80;
  _BYTE __dst[72];
  uint64_t v82;

  v79 = a2;
  v80 = a1;
  v78 = sub_1D42B28FC(&qword_1EFE4FAF8);
  v74 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v73 = (uint64_t)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v77 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v70 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1D451A0B0();
  v75 = *(_QWORD *)(v7 - 8);
  v76 = v7;
  MEMORY[0x1E0C80A78](v7);
  v69 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_1D42B28FC(&qword_1EFE4ACA0);
  v9 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D42B28FC((uint64_t *)&unk_1EFE4FB00);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1D42B28FC(&qword_1EFE4AEE0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1D42F67F4();
  if (v3)
  {

    return (uint64_t)a3;
  }
  v67 = a3;
  v64 = v11;
  v60 = v9;
  v61 = v16;
  v66 = v20;
  v62 = v15;
  v63 = v13;
  v65 = v18;
  v68 = v19;
  v21 = v78;
  v22 = v80;
  v23 = sub_1D43D34E8();
  v25 = v24;
  v26 = v23;
  ObjectType = swift_getObjectType();
  v28 = *(_QWORD *)(v66 + 8);
  (*(void (**)(unint64_t, uint64_t, uint64_t, double))(v28 + 8))(v26, ObjectType, v28, v25);
  v30 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(ObjectType, v28);
  sub_1D44F4884((uint64_t)v30);
  (*(void (**)(uint64_t))(v66 + 32))(ObjectType);
  a3 = v67;
  if (sub_1D44F5EF4((uint64_t)v30) != 1
    || (v31 = sub_1D44F65F4((uint64_t)v30)) == 0)
  {
LABEL_13:
    sub_1D435C53C();
    swift_allocError();
    *v36 = 0;
    swift_willThrow();

    swift_unknownObjectRelease();
    return (uint64_t)a3;
  }
  v32 = v31;
  if (sub_1D44EF6C4((uint64_t)v31) != 1)
  {

    goto LABEL_13;
  }
  sub_1D44F1774(v32, 0);
  v34 = v33;
  result = sub_1D44F1BF8((uint64_t)v32, 0);
  if ((~*(_QWORD *)&v34 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v34 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v34 < 9.22337204e18)
  {
    v35 = result;
    memcpy(__dst, v22, sizeof(__dst));
    sub_1D42BE38C((uint64_t)v22);
    sub_1D43994BC(v35, (uint64_t)v34);
    sub_1D4328888((uint64_t)v22);
    v37 = sub_1D4398FE0();
    swift_release();
    v82 = v37;
    v38 = v69;
    (*(void (**)(char *, _QWORD, uint64_t))(v75 + 104))(v69, *MEMORY[0x1E0C958B0], v76);
    v39 = v70;
    *v70 = sub_1D43D3E64;
    v39[1] = 0;
    v40 = v71;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), _QWORD, uint64_t))(v77 + 104))(v39, *MEMORY[0x1E0C958F0], v71);
    v80 = (id)sub_1D42B28FC((uint64_t *)&unk_1EFE4ACD0);
    sub_1D42F1168(&qword_1EFE496A0, (uint64_t *)&unk_1EFE4ACD0, MEMORY[0x1E0C95D90]);
    sub_1D451A380();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v77 + 8))(v39, v40);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v38, v76);
    swift_release();
    v41 = swift_allocObject();
    v80 = v32;
    *(_QWORD *)(v41 + 16) = sub_1D42FB61C;
    *(_QWORD *)(v41 + 24) = 0;
    sub_1D42B28FC((uint64_t *)&unk_1EFE4FB10);
    sub_1D42F1168(&qword_1EFE4ACE8, &qword_1EFE4ACA0, MEMORY[0x1E0C95AB8]);
    v42 = v62;
    v43 = v72;
    v44 = v64;
    sub_1D451A308();
    swift_release();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v44, v43);
    v45 = sub_1D44F41CC((uint64_t)v30);
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 16) = v45;
    v47 = v63;
    v48 = (uint64_t)v65;
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v65, v42, v12);
    v49 = v61;
    v50 = v48 + *(int *)(v61 + 84);
    *(_QWORD *)v50 = 0;
    *(_QWORD *)(v50 + 8) = 0;
    *(_BYTE *)(v50 + 16) = 2;
    v51 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v48 + *(int *)(v49 + 88));
    *v51 = sub_1D43D652C;
    v51[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v46;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v42, v12);
    v52 = swift_allocObject();
    *(double *)(v52 + 16) = v25;
    v53 = swift_allocObject();
    v54 = v66;
    *(_QWORD *)(v53 + 16) = v68;
    *(_QWORD *)(v53 + 24) = v54;
    v55 = swift_allocObject();
    v79 = v30;
    v56 = v55;
    *(_QWORD *)(v55 + 16) = sub_1D43D6530;
    *(_QWORD *)(v55 + 24) = v52;
    v57 = (_QWORD *)swift_allocObject();
    v57[2] = sub_1D43D6620;
    v57[3] = v53;
    v57[4] = sub_1D43D3F9C;
    v57[5] = 0;
    v57[6] = sub_1D43D65FC;
    v57[7] = v56;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    v58 = v73;
    sub_1D43D42C0(0, (uint64_t)sub_1D43D5F2C, (uint64_t)v57, v73);
    swift_release();
    swift_release();
    swift_release();
    sub_1D42F1168(&qword_1EFE4FB20, &qword_1EFE4FAF8, MEMORY[0x1E0C95B48]);
    a3 = (id)sub_1D451A2E4();
    swift_unknownObjectRelease();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v58, v21);
    sub_1D42D7018((uint64_t)v65, &qword_1EFE4AEE0);

    return (uint64_t)a3;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1D43D0E78(void *a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t result;
  id v26;
  _QWORD *v27;
  double v28;
  double v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t (**v33)@<X0>(uint64_t *@<X8>);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t (**v41)@<X0>(uint64_t *@<X8>);
  uint64_t (*v42)@<X0>(uint64_t *@<X8>);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t (**v59)@<X0>(uint64_t *@<X8>);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  id v71;
  _BYTE __dst[72];
  uint64_t v73;

  v71 = a3;
  v69 = sub_1D42B28FC(&qword_1EFE4FAF8);
  v62 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v61 = (uint64_t)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v65 = *(_QWORD *)(v5 - 8);
  v66 = v5;
  MEMORY[0x1E0C80A78](v5);
  v59 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1D451A0B0();
  v63 = *(_QWORD *)(v7 - 8);
  v64 = v7;
  MEMORY[0x1E0C80A78](v7);
  v67 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_1D42B28FC(&qword_1EFE4ACA0);
  v60 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D42B28FC((uint64_t *)&unk_1EFE4FB00);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1D42B28FC(&qword_1EFE4AEE0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SNSpeechEmotionEstimator();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = 0;
  v19 = v70;
  sub_1D43D34E8();
  if (v19)
  {

    swift_release();
    return (uint64_t)a1;
  }
  v21 = v20;
  v70 = a1;
  v56 = v10;
  v22 = v68;
  v57 = v14;
  v55 = v12;
  v58 = v17;
  v23 = v69;
  v24 = v71;
  sub_1D44D1A28();
  v26 = sub_1D44D19D0();
  sub_1D44F4884((uint64_t)v26);
  a1 = v24;
  if (sub_1D44F5EF4((uint64_t)v26) != 1
    || (v54 = sub_1D44F65F4((uint64_t)v26)) == 0)
  {
LABEL_13:
    sub_1D435C53C();
    swift_allocError();
    *v31 = 0;
    swift_willThrow();

    swift_release();
    return (uint64_t)a1;
  }
  if (sub_1D44EF6C4((uint64_t)v54) != 1)
  {

    goto LABEL_13;
  }
  v53 = v18;
  v27 = v54;
  sub_1D44F1774(v54, 0);
  v29 = v28;
  result = sub_1D44F1BF8((uint64_t)v27, 0);
  if ((~*(_QWORD *)&v29 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v30 = (uint64_t)v70;
  if (v29 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v29 < 9.22337204e18)
  {
    v52 = result;
    v51 = (uint64_t)v29;
    memcpy(__dst, v70, sizeof(__dst));
    sub_1D42BE38C((uint64_t)v70);
    sub_1D43994BC(v52, v51);
    sub_1D4328888(v30);
    v32 = sub_1D4398FE0();
    swift_release();
    v73 = v32;
    (*(void (**)(char *, _QWORD, uint64_t))(v63 + 104))(v67, *MEMORY[0x1E0C958B0], v64);
    v33 = v59;
    *v59 = sub_1D43D3E64;
    v33[1] = 0;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), _QWORD, uint64_t))(v65 + 104))(v33, *MEMORY[0x1E0C958F0], v66);
    v70 = (void *)sub_1D42B28FC((uint64_t *)&unk_1EFE4ACD0);
    sub_1D42F1168(&qword_1EFE496A0, (uint64_t *)&unk_1EFE4ACD0, MEMORY[0x1E0C95D90]);
    sub_1D451A380();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v65 + 8))(v33, v66);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v67, v64);
    swift_release();
    v34 = swift_allocObject();
    *(_QWORD *)(v34 + 16) = sub_1D42FB61C;
    *(_QWORD *)(v34 + 24) = 0;
    sub_1D42B28FC((uint64_t *)&unk_1EFE4FB10);
    sub_1D42F1168(&qword_1EFE4ACE8, &qword_1EFE4ACA0, MEMORY[0x1E0C95AB8]);
    v35 = v56;
    sub_1D451A308();
    swift_release();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v35, v22);
    v36 = sub_1D44F41CC((uint64_t)v26);
    v70 = (void *)swift_allocObject();
    *((_QWORD *)v70 + 2) = v36;
    v37 = v55;
    v38 = (uint64_t)v58;
    v39 = v57;
    (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v58, v57, v11);
    v40 = v38 + *(int *)(v15 + 84);
    *(_QWORD *)v40 = 0;
    *(_QWORD *)(v40 + 8) = 0;
    *(_BYTE *)(v40 + 16) = 2;
    v41 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v38 + *(int *)(v15 + 88));
    v42 = (uint64_t (*)@<X0>(uint64_t *@<X8>))v70;
    *v41 = sub_1D43D652C;
    v41[1] = v42;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v11);
    v43 = swift_allocObject();
    *(_QWORD *)(v43 + 16) = v21;
    v44 = v43;
    v45 = swift_allocObject();
    *(_QWORD *)(v45 + 16) = v53;
    *(_QWORD *)(v45 + 24) = &off_1E97A8B90;
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 16) = sub_1D43D6530;
    *(_QWORD *)(v46 + 24) = v44;
    v68 = v44;
    v47 = (_QWORD *)swift_allocObject();
    v70 = v26;
    v48 = (uint64_t)v47;
    v47[2] = sub_1D43D6620;
    v47[3] = v45;
    v47[4] = sub_1D43D3F9C;
    v47[5] = 0;
    v47[6] = sub_1D43D65FC;
    v47[7] = v46;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v49 = v61;
    sub_1D43D42C0(0, (uint64_t)sub_1D43D5F2C, v48, v61);
    swift_release();
    swift_release();
    swift_release();
    sub_1D42F1168(&qword_1EFE4FB20, &qword_1EFE4FAF8, MEMORY[0x1E0C95B48]);
    a1 = (void *)sub_1D451A2E4();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v49, v23);
    sub_1D42D7018((uint64_t)v58, &qword_1EFE4AEE0);

    return (uint64_t)a1;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1D43D1620(void *a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  int v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t result;
  id v27;
  _QWORD *v28;
  double v29;
  double v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t (**v34)@<X0>(uint64_t *@<X8>);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t (**v42)@<X0>(uint64_t *@<X8>);
  uint64_t (*v43)@<X0>(uint64_t *@<X8>);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t (**v60)@<X0>(uint64_t *@<X8>);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  _BYTE __dst[72];
  uint64_t v74;

  v72 = a3;
  v70 = sub_1D42B28FC(&qword_1EFE4FAF8);
  v63 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v62 = (uint64_t)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v66 = *(_QWORD *)(v5 - 8);
  v67 = v5;
  MEMORY[0x1E0C80A78](v5);
  v60 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1D451A0B0();
  v64 = *(_QWORD *)(v7 - 8);
  v65 = v7;
  MEMORY[0x1E0C80A78](v7);
  v68 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_1D42B28FC(&qword_1EFE4ACA0);
  v61 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D42B28FC((uint64_t *)&unk_1EFE4FB00);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1D42B28FC(&qword_1EFE4AEE0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SNDistanceEstimator();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = 0;
  v19 = v71;
  v20 = sub_1D43D34E8();
  if (v19)
  {

    swift_release();
    return (uint64_t)a1;
  }
  v22 = v21;
  v71 = a1;
  v57 = v10;
  v23 = v69;
  v58 = v14;
  v56 = v12;
  v59 = v17;
  v24 = v70;
  v25 = v72;
  sub_1D42F351C(v20, v21);
  v27 = sub_1D42F34CC();
  sub_1D44F4884((uint64_t)v27);
  a1 = v25;
  if (sub_1D44F5EF4((uint64_t)v27) != 1
    || (v55 = sub_1D44F65F4((uint64_t)v27)) == 0)
  {
LABEL_13:
    sub_1D435C53C();
    swift_allocError();
    *v32 = 0;
    swift_willThrow();

    swift_release();
    return (uint64_t)a1;
  }
  if (sub_1D44EF6C4((uint64_t)v55) != 1)
  {

    goto LABEL_13;
  }
  v54 = v18;
  v28 = v55;
  sub_1D44F1774(v55, 0);
  v30 = v29;
  result = sub_1D44F1BF8((uint64_t)v28, 0);
  if ((~*(_QWORD *)&v30 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v31 = (uint64_t)v71;
  if (v30 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v30 < 9.22337204e18)
  {
    v53 = result;
    v52 = (uint64_t)v30;
    memcpy(__dst, v71, sizeof(__dst));
    sub_1D42BE38C((uint64_t)v71);
    sub_1D43994BC(v53, v52);
    sub_1D4328888(v31);
    v33 = sub_1D4398FE0();
    swift_release();
    v74 = v33;
    (*(void (**)(char *, _QWORD, uint64_t))(v64 + 104))(v68, *MEMORY[0x1E0C958B0], v65);
    v34 = v60;
    *v60 = sub_1D43D3E64;
    v34[1] = 0;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), _QWORD, uint64_t))(v66 + 104))(v34, *MEMORY[0x1E0C958F0], v67);
    v71 = (void *)sub_1D42B28FC((uint64_t *)&unk_1EFE4ACD0);
    sub_1D42F1168(&qword_1EFE496A0, (uint64_t *)&unk_1EFE4ACD0, MEMORY[0x1E0C95D90]);
    sub_1D451A380();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v66 + 8))(v34, v67);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v68, v65);
    swift_release();
    v35 = swift_allocObject();
    *(_QWORD *)(v35 + 16) = sub_1D42FB61C;
    *(_QWORD *)(v35 + 24) = 0;
    sub_1D42B28FC((uint64_t *)&unk_1EFE4FB10);
    sub_1D42F1168(&qword_1EFE4ACE8, &qword_1EFE4ACA0, MEMORY[0x1E0C95AB8]);
    v36 = v57;
    sub_1D451A308();
    swift_release();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v36, v23);
    v37 = sub_1D44F41CC((uint64_t)v27);
    v71 = (void *)swift_allocObject();
    *((_QWORD *)v71 + 2) = v37;
    v38 = v56;
    v39 = (uint64_t)v59;
    v40 = v58;
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v59, v58, v11);
    v41 = v39 + *(int *)(v15 + 84);
    *(_QWORD *)v41 = 0;
    *(_QWORD *)(v41 + 8) = 0;
    *(_BYTE *)(v41 + 16) = 2;
    v42 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v39 + *(int *)(v15 + 88));
    v43 = (uint64_t (*)@<X0>(uint64_t *@<X8>))v71;
    *v42 = sub_1D43D652C;
    v42[1] = v43;
    (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v11);
    v44 = swift_allocObject();
    *(double *)(v44 + 16) = v22;
    v45 = v44;
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 16) = v54;
    *(_QWORD *)(v46 + 24) = &off_1E97A34A8;
    v47 = swift_allocObject();
    *(_QWORD *)(v47 + 16) = sub_1D43D6530;
    *(_QWORD *)(v47 + 24) = v45;
    v69 = v45;
    v48 = (_QWORD *)swift_allocObject();
    v71 = v27;
    v49 = (uint64_t)v48;
    v48[2] = sub_1D43D6620;
    v48[3] = v46;
    v48[4] = sub_1D43D3F9C;
    v48[5] = 0;
    v48[6] = sub_1D43D65FC;
    v48[7] = v47;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v50 = v62;
    sub_1D43D42C0(0, (uint64_t)sub_1D43D5F2C, v49, v62);
    swift_release();
    swift_release();
    swift_release();
    sub_1D42F1168(&qword_1EFE4FB20, &qword_1EFE4FAF8, MEMORY[0x1E0C95B48]);
    a1 = (void *)sub_1D451A2E4();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v50, v24);
    sub_1D42D7018((uint64_t)v59, &qword_1EFE4AEE0);

    return (uint64_t)a1;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1D43D1DC8(_QWORD *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  int v21;
  double v22;
  double v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  id v28;
  void *v29;
  _QWORD *v30;
  double v31;
  double v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (**v37)@<X0>(uint64_t *@<X8>);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t (**v50)@<X0>(uint64_t *@<X8>);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[2];
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t (**v64)@<X0>(uint64_t *@<X8>);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  _QWORD *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  _BYTE __dst[72];
  uint64_t v79;

  v76 = a2;
  v75 = sub_1D42B28FC(&qword_1EFE4FAF8);
  v66 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  v74 = (char *)v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v69 = *(_QWORD *)(v6 - 8);
  v70 = v6;
  MEMORY[0x1E0C80A78](v6);
  v64 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v68 = sub_1D451A0B0();
  v67 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v72 = (char *)v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = (_QWORD *)sub_1D42B28FC(&qword_1EFE4ACA0);
  v65 = *(v73 - 1);
  MEMORY[0x1E0C80A78](v73);
  v71 = (char *)v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D42B28FC((uint64_t *)&unk_1EFE4FB00);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1D42B28FC(&qword_1EFE4AEE0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SNShazamSignatureGenerator();
  swift_allocObject();
  v17 = a3;
  v18 = sub_1D443B1B0(v17);
  v19 = v77;
  v20 = a1;
  v21 = sub_1D43D34E8();
  if (v19)
  {

    swift_release();
    return (uint64_t)v20;
  }
  v23 = v22;
  v63 = a1;
  v61 = v14;
  v24 = v73;
  v77 = v13;
  v62 = v11;
  v76 = v10;
  v25 = (uint64_t)v74;
  v26 = v75;
  sub_1D443BB04(v21, v22);
  v20 = (_QWORD *)v18;
  v28 = sub_1D443BAAC();
  v29 = v28;
  sub_1D44F4884((uint64_t)v28);
  if (sub_1D44F5EF4((uint64_t)v29) != 1
    || (v30 = sub_1D44F65F4((uint64_t)v29)) == 0)
  {
LABEL_13:
    sub_1D435C53C();
    swift_allocError();
    *v34 = 0;
    swift_willThrow();

    swift_release();
    return (uint64_t)v20;
  }
  v20 = v30;
  if (sub_1D44EF6C4((uint64_t)v30) != 1)
  {

    goto LABEL_13;
  }
  sub_1D44F1774(v20, 0);
  v32 = v31;
  result = sub_1D44F1BF8((uint64_t)v20, 0);
  if ((~*(_QWORD *)&v32 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v32 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v60 = v20;
  if (v32 < 9.22337204e18)
  {
    v59 = result;
    v58 = (uint64_t)v32;
    memcpy(__dst, v63, sizeof(__dst));
    sub_1D42BE38C((uint64_t)v63);
    sub_1D43994BC(v59, v58);
    v59 = v33;
    sub_1D4328888((uint64_t)v63);
    v35 = sub_1D4398FE0();
    v63 = v29;
    v36 = v35;
    swift_release();
    v79 = v36;
    (*(void (**)(char *, _QWORD, uint64_t))(v67 + 104))(v72, *MEMORY[0x1E0C958B0], v68);
    v37 = v64;
    *v64 = sub_1D43D3E64;
    v37[1] = 0;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), _QWORD, uint64_t))(v69 + 104))(v37, *MEMORY[0x1E0C958F0], v70);
    v59 = sub_1D42B28FC((uint64_t *)&unk_1EFE4ACD0);
    sub_1D42F1168(&qword_1EFE496A0, (uint64_t *)&unk_1EFE4ACD0, MEMORY[0x1E0C95D90]);
    sub_1D451A380();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v69 + 8))(v37, v70);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v72, v68);
    swift_release();
    v38 = swift_allocObject();
    *(_QWORD *)(v38 + 16) = sub_1D42FB61C;
    *(_QWORD *)(v38 + 24) = 0;
    sub_1D42B28FC((uint64_t *)&unk_1EFE4FB10);
    sub_1D42F1168(&qword_1EFE4ACE8, &qword_1EFE4ACA0, MEMORY[0x1E0C95AB8]);
    v39 = v71;
    sub_1D451A308();
    swift_release();
    (*(void (**)(char *, _QWORD *))(v65 + 8))(v39, v24);
    v40 = sub_1D44F41CC((uint64_t)v63);
    v41 = swift_allocObject();
    *(_QWORD *)(v41 + 16) = v40;
    v73 = v17;
    v42 = v62;
    v43 = v16;
    v44 = v16;
    v45 = v76;
    v46 = v77;
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v44, v77, v76);
    v47 = v61;
    v48 = *(int *)(v61 + 84);
    v57[0] = v43;
    v49 = &v43[v48];
    *(_QWORD *)v49 = 0;
    *((_QWORD *)v49 + 1) = 0;
    v49[16] = 2;
    v50 = (uint64_t (**)@<X0>(uint64_t *@<X8>))&v43[*(int *)(v47 + 88)];
    *v50 = sub_1D43D652C;
    v50[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v41;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v46, v45);
    v51 = swift_allocObject();
    *(double *)(v51 + 16) = v23;
    v52 = swift_allocObject();
    *(_QWORD *)(v52 + 16) = v18;
    *(_QWORD *)(v52 + 24) = &off_1E97A9F08;
    v53 = swift_allocObject();
    *(_QWORD *)(v53 + 16) = sub_1D43D6530;
    *(_QWORD *)(v53 + 24) = v51;
    v54 = (_QWORD *)swift_allocObject();
    v57[1] = v18;
    v55 = (uint64_t)v54;
    v54[2] = sub_1D43D6620;
    v54[3] = v52;
    v54[4] = sub_1D43D3F9C;
    v54[5] = 0;
    v54[6] = sub_1D43D65FC;
    v54[7] = v53;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v56 = v57[0];
    sub_1D43D42C0(0, (uint64_t)sub_1D43D5F2C, v55, v25);
    swift_release();
    swift_release();
    swift_release();
    sub_1D42F1168(&qword_1EFE4FB20, &qword_1EFE4FAF8, MEMORY[0x1E0C95B48]);
    v20 = (_QWORD *)sub_1D451A2E4();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v25, v26);
    sub_1D42D7018(v56, &qword_1EFE4AEE0);

    return (uint64_t)v20;
  }
LABEL_16:
  __break(1u);
  return result;
}

void sub_1D43D2580(const void *a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  double v24;
  double v25;
  unint64_t v26;
  uint64_t ObjectType;
  uint64_t v28;
  void *v29;
  _QWORD *v30;
  _QWORD *v31;
  double v32;
  double v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (**v44)@<X0>(uint64_t *@<X8>);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (**v57)@<X0>(uint64_t *@<X8>);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  void *v68;
  _BYTE __dst[72];
  uint64_t v70;

  v65 = sub_1D42B28FC(&qword_1EFE4FAF8);
  v61 = *(_QWORD *)(v65 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42BE768();
  v60 = v8;
  v58 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v64 = *(_QWORD *)(v58 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  sub_1D42BE768();
  v11 = sub_1D435EBB0(v10);
  v62 = *(_QWORD *)(v11 - 8);
  v63 = v11;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v12);
  sub_1D42BE768();
  v56 = v13;
  v59 = sub_1D42B28FC(&qword_1EFE4ACA0);
  MEMORY[0x1E0C80A78](v59);
  sub_1D43383FC();
  v14 = sub_1D42B28FC((uint64_t *)&unk_1EFE4FB00);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  sub_1D42CB210();
  v18 = v17 - v16;
  v19 = sub_1D42B28FC(&qword_1EFE4AEE0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v20);
  sub_1D42F1ED4();
  sub_1D4424144();
  if (v4)
  {

LABEL_4:
    sub_1D43D669C();
    return;
  }
  v54 = a3;
  v51 = v3;
  v49 = v19;
  v53 = v22;
  v50 = v15;
  v52 = v5;
  v55 = v21;
  v23 = sub_1D43D34E8();
  v25 = v24;
  v26 = v23;
  ObjectType = swift_getObjectType();
  v28 = *(_QWORD *)(v53 + 8);
  (*(void (**)(unint64_t, uint64_t, uint64_t, double))(v28 + 8))(v26, ObjectType, v28, v25);
  v29 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(ObjectType, v28);
  sub_1D44F4884((uint64_t)v29);
  (*(void (**)(uint64_t))(v53 + 32))(ObjectType);
  if (sub_1D44F5EF4((uint64_t)v29) != 1
    || (v30 = sub_1D44F65F4((uint64_t)v29)) == 0)
  {
LABEL_13:
    sub_1D435C53C();
    v36 = sub_1D42B6D0C();
    sub_1D42F2074(v36, v37);

    swift_unknownObjectRelease();
    goto LABEL_4;
  }
  v31 = v30;
  if (sub_1D44EF6C4((uint64_t)v30) != 1)
  {

    goto LABEL_13;
  }
  sub_1D44F1774(v31, 0);
  v33 = v32;
  v34 = sub_1D44F1BF8((uint64_t)v31, 0);
  if ((~*(_QWORD *)&v33 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v33 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v33 < 9.22337204e18)
  {
    v35 = v34;
    memcpy(__dst, a1, sizeof(__dst));
    sub_1D42BE38C((uint64_t)a1);
    sub_1D43994BC(v35, (uint64_t)v33);
    sub_1D4328888((uint64_t)a1);
    v38 = sub_1D4398FE0();
    sub_1D42B8F48();
    v70 = v38;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v62 + 104))(v56, *MEMORY[0x1E0C958B0], v63);
    *v57 = sub_1D43D3E64;
    v57[1] = 0;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), _QWORD, uint64_t))(v64 + 104))(v57, *MEMORY[0x1E0C958F0], v58);
    sub_1D42B28FC((uint64_t *)&unk_1EFE4ACD0);
    sub_1D42F1168(&qword_1EFE496A0, (uint64_t *)&unk_1EFE4ACD0, MEMORY[0x1E0C95D90]);
    sub_1D451A380();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v64 + 8))(v57, v58);
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v56, v63);
    swift_release();
    v39 = sub_1D42B6F40();
    v68 = v31;
    *(_QWORD *)(v39 + 16) = sub_1D42FB61C;
    *(_QWORD *)(v39 + 24) = 0;
    sub_1D42B28FC((uint64_t *)&unk_1EFE4FB10);
    sub_1D42F1168(&qword_1EFE4ACE8, &qword_1EFE4ACA0, MEMORY[0x1E0C95AB8]);
    sub_1D451A308();
    sub_1D42BE93C();
    sub_1D43C2408();
    v40(v51, v59);
    v41 = sub_1D44F41CC((uint64_t)v29);
    v42 = sub_1D42B6F40();
    *(_QWORD *)(v42 + 16) = v41;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v52, v18, v14);
    sub_1D43D672C(*(int *)(v49 + 84));
    v44 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v52 + *(int *)(v43 + 88));
    *v44 = sub_1D43D652C;
    v44[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v42;
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v18, v14);
    v45 = sub_1D42B6F40();
    *(double *)(v45 + 16) = v25;
    v46 = sub_1D42B6F40();
    *(_QWORD *)(v46 + 16) = v55;
    *(_QWORD *)(v46 + 24) = v53;
    v66 = v29;
    v47 = sub_1D42B6F40();
    *(_QWORD *)(v47 + 16) = sub_1D43D6530;
    *(_QWORD *)(v47 + 24) = v45;
    v48 = (_QWORD *)sub_1D42B6F40();
    v48[2] = sub_1D43D6620;
    v48[3] = v46;
    v48[4] = sub_1D43D3F9C;
    v48[5] = 0;
    v48[6] = sub_1D43D65FC;
    v48[7] = v47;
    swift_unknownObjectRetain();
    sub_1D42E3CA4();
    sub_1D42BE9A0();
    sub_1D42EA340();
    sub_1D43D42C0(0, (uint64_t)sub_1D43D5F2C, (uint64_t)v48, v60);
    sub_1D42BE998();
    sub_1D42EA1BC();
    sub_1D42E3F48();
    sub_1D42F1168(&qword_1EFE4FB20, &qword_1EFE4FAF8, MEMORY[0x1E0C95B48]);
    sub_1D451A2E4();
    swift_unknownObjectRelease();
    sub_1D42BE93C();

    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v65);
    sub_1D42D7018(v52, &qword_1EFE4AEE0);
    sub_1D43D6690();
    goto LABEL_4;
  }
LABEL_16:
  __break(1u);
}

void sub_1D43D2CB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t ObjectType;
  uint64_t v32;
  void *v33;
  _QWORD *v34;
  _QWORD *v35;
  double v36;
  double v37;
  unsigned int v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t (**v47)@<X0>(uint64_t *@<X8>);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t (*v52)(uint64_t, uint64_t);
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (**v60)@<X0>(uint64_t *@<X8>);
  uint64_t v61;
  uint64_t v62;
  void *v65;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  char v70;
  uint64_t v71;

  sub_1D42B28FC(&qword_1EFE4FAF8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v8);
  sub_1D42BE768();
  v58 = v9;
  v61 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v56 = *(_QWORD *)(v61 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v10);
  sub_1D42BE768();
  v62 = sub_1D435EBB0(v11);
  v59 = *(_QWORD *)(v62 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v12);
  sub_1D42BE768();
  v55 = v13;
  v57 = sub_1D42B28FC(&qword_1EFE4ACA0);
  MEMORY[0x1E0C80A78](v57);
  sub_1D42CB210();
  v16 = v15 - v14;
  v17 = sub_1D42B28FC((uint64_t *)&unk_1EFE4FB00);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  sub_1D43383FC();
  v19 = sub_1D42B28FC(&qword_1EFE4AEE0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v20);
  sub_1D42CB210();
  v23 = v22 - v21;
  v24 = *(_BYTE *)(a2 + 64);
  v25 = a3();
  if (v71)
    goto LABEL_3;
  v71 = v25;
  v67 = v26;
  v54 = v18;
  sub_1D43D6634();
  v70 = v24;
  v27 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(a6 + 8))(&v69, a5, a6);
  v29 = v28;
  v30 = v27;
  v53 = v24;
  ObjectType = swift_getObjectType();
  v32 = *(_QWORD *)(v67 + 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(v32 + 8))(v30, ObjectType, v32, v29);
  v33 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v32 + 16))(ObjectType, v32);
  sub_1D44F4884((uint64_t)v33);
  (*(void (**)(uint64_t))(v67 + 32))(ObjectType);
  if (sub_1D44F5EF4((uint64_t)v33) != 1)
    goto LABEL_12;
  v34 = sub_1D44F65F4((uint64_t)v33);
  if (!v34)
    goto LABEL_12;
  v35 = v34;
  if (sub_1D44EF6C4((uint64_t)v34) != 1)
  {

LABEL_12:
    sub_1D435C53C();
    v39 = sub_1D42B6D0C();
    sub_1D42F2074(v39, v40);
    sub_1D42B6E6C();

    goto LABEL_3;
  }
  sub_1D44F1774(v35, 0);
  v37 = v36;
  sub_1D44F1BF8((uint64_t)v35, 0);
  sub_1D43D6634();
  v70 = v53;
  if ((~*(_QWORD *)&v37 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v37 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v37 < 9.22337204e18)
  {
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t, uint64_t))(a6 + 16))(&v69, v38, (uint64_t)v37, a5, a6);
    v65 = v35;
    v41 = sub_1D4398FE0();
    sub_1D42B8F48();
    v69 = v41;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v59 + 104))(v55, *MEMORY[0x1E0C958B0], v62);
    *v60 = sub_1D43D3E64;
    v60[1] = 0;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), _QWORD, uint64_t))(v56 + 104))(v60, *MEMORY[0x1E0C958F0], v61);
    sub_1D42B28FC((uint64_t *)&unk_1EFE4ACD0);
    sub_1D42F1168(&qword_1EFE496A0, (uint64_t *)&unk_1EFE4ACD0, MEMORY[0x1E0C95D90]);
    sub_1D451A380();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v56 + 8))(v60, v61);
    sub_1D43C2408();
    v42(v55, v62);
    swift_release();
    v43 = sub_1D42B6F40();
    *(_QWORD *)(v43 + 16) = sub_1D42FB61C;
    *(_QWORD *)(v43 + 24) = 0;
    sub_1D42B28FC((uint64_t *)&unk_1EFE4FB10);
    sub_1D42F1168(&qword_1EFE4ACE8, &qword_1EFE4ACA0, MEMORY[0x1E0C95AB8]);
    sub_1D451A308();
    sub_1D42BE998();
    sub_1D43C2408();
    v44(v16, v57);
    v45 = sub_1D44F41CC((uint64_t)v33);
    v46 = sub_1D42B6F40();
    *(_QWORD *)(v46 + 16) = v45;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v23, v6, v17);
    sub_1D43D672C(*(int *)(v19 + 84));
    v47 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v23 + *(int *)(v19 + 88));
    *v47 = sub_1D4306B58;
    v47[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v46;
    sub_1D42F1FA0(v6, *(uint64_t (**)(uint64_t, uint64_t))(v54 + 8));
    v48 = sub_1D42B6F40();
    *(double *)(v48 + 16) = v29;
    v49 = sub_1D42B6F40();
    *(_QWORD *)(v49 + 16) = v71;
    *(_QWORD *)(v49 + 24) = v67;
    v68 = v33;
    v50 = sub_1D42B6F40();
    *(_QWORD *)(v50 + 16) = sub_1D43D5EE0;
    *(_QWORD *)(v50 + 24) = v48;
    v51 = (_QWORD *)sub_1D42B6F40();
    v51[2] = sub_1D43D5EF8;
    v51[3] = v49;
    v51[4] = sub_1D43D3F9C;
    v51[5] = 0;
    v51[6] = sub_1D43D5F10;
    v51[7] = v50;
    swift_unknownObjectRetain();
    sub_1D42BE9A0();
    sub_1D42BE984();
    sub_1D42EA340();
    sub_1D43D42C0(0, (uint64_t)sub_1D43D5F2C, (uint64_t)v51, v58);
    sub_1D42FC448();
    sub_1D42EA1BC();
    sub_1D42E3F48();
    sub_1D42F1168(&qword_1EFE4FB20, &qword_1EFE4FAF8, MEMORY[0x1E0C95B48]);
    sub_1D451A2E4();
    sub_1D42B6E6C();
    sub_1D42BE998();

    sub_1D43C2408();
    sub_1D42F1FA0(v58, v52);
    sub_1D42D7018(v23, &qword_1EFE4AEE0);
LABEL_3:
    sub_1D43D669C();
    return;
  }
LABEL_15:
  __break(1u);
}

void sub_1D43D3474(_QWORD *a1)
{
  sub_1D42BE984();
  sub_1D42BE9A0();
  sub_1D42EA340();
  sub_1D43D3B64(a1);
}

uint64_t sub_1D43D34AC(uint64_t a1)
{
  sub_1D42EA1BC();
  sub_1D42BE998();
  sub_1D42FC448();
  return a1;
}

unint64_t sub_1D43D34E8()
{
  uint64_t v0;
  unint64_t result;

  result = *(_QWORD *)(v0 + 8);
  if ((result & 0x8000000000000000) != 0)
  {
    sub_1D42DCED4();
    sub_1D43831DC();
LABEL_6:
    result = sub_1D43074E8();
    __break(1u);
    return result;
  }
  if (HIDWORD(result))
  {
    sub_1D42DCED4();
    sub_1D43831CC();
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1D43D356C(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int v15;
  char v16;
  int v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  int v24;
  int v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  uint64_t v40;
  char v41;

  v28 = a2;
  v29 = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v30 = *(_QWORD *)(AssociatedTypeWitness - 8);
  sub_1D42BA1F0();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - v9;
  v11 = *a1;
  v26 = a1[1];
  v27 = v11;
  v13 = *((_QWORD *)a1 + 4);
  v12 = *((_QWORD *)a1 + 5);
  v14 = *((_BYTE *)a1 + 48);
  v15 = *((unsigned __int8 *)a1 + 49);
  v16 = *((_BYTE *)a1 + 50);
  v24 = *((unsigned __int8 *)a1 + 51);
  v25 = v15;
  v17 = *((unsigned __int8 *)a1 + 52);
  v22 = *((unsigned __int8 *)a1 + 53);
  v23 = v17;
  v21 = *((_QWORD *)a1 + 7);
  LOBYTE(a1) = *((_BYTE *)a1 + 64);
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(v28, a4);
  v31[0] = v27;
  v31[1] = v26;
  v32 = v13;
  v33 = v12;
  v34 = v14;
  v35 = v25;
  v36 = v16;
  v37 = v24;
  v38 = v23;
  v39 = v22;
  v40 = v21;
  v41 = (char)a1;
  v18 = (*(uint64_t (**)(_OWORD *, uint64_t))(v29 + 8))(v31, AssociatedTypeWitness);
  sub_1D42F1FA0((uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
  return v18;
}

void sub_1D43D36E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint8x8_t v10;
  int16x8_t v11;
  __int128 __src;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  unsigned __int32 v16;
  char v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_BYTE *)(a1 + 64);
  v8 = *(_BYTE *)(a1 + 52) & 1;
  v9 = *(_BYTE *)(a1 + 53) & 1;
  __src = *(_OWORD *)a1;
  v13 = v4;
  v14 = v5;
  v15 = *(_OWORD *)(a1 + 32);
  v10.i32[1] = DWORD1(v15);
  v10.i32[0] = *(_DWORD *)(a1 + 48);
  v11 = (int16x8_t)vmovl_u8(v10);
  v11.i64[0] &= 0xFF01FF01FF01FF01;
  v16 = vmovn_s16(v11).u32[0];
  v17 = v8;
  v18 = v9;
  v19 = v6;
  v20 = v7 & 1;
  v21 = a2;
  v22 = a3;
  sub_1D42E3CA4();
  sub_1D42EA340();
  swift_retain();
  sub_1D42B5B38(a1);
  sub_1D439940C(&__src);
}

void sub_1D43D378C()
{
  uint64_t v0;

  sub_1D42BDEAC(v0);
  sub_1D42B8F48();
  sub_1D42EA1BC();
  sub_1D42BE93C();
  sub_1D43D66F0();
}

void sub_1D43D37B8(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  char v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  int v24;
  int v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  uint64_t v42;
  char v43;

  v28 = a4;
  v29 = a7;
  v30 = a2;
  v31 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(AssociatedTypeWitness - 8);
  sub_1D42BA1F0();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - v11;
  v13 = *a1;
  v26 = a1[1];
  v27 = v13;
  v15 = *((_QWORD *)a1 + 4);
  v14 = *((_QWORD *)a1 + 5);
  v16 = *((_BYTE *)a1 + 48);
  v17 = *((unsigned __int8 *)a1 + 49);
  v18 = *((_BYTE *)a1 + 50);
  v24 = *((unsigned __int8 *)a1 + 51);
  v25 = v17;
  v19 = *((unsigned __int8 *)a1 + 52);
  v22 = *((unsigned __int8 *)a1 + 53);
  v23 = v19;
  v21 = *((_QWORD *)a1 + 7);
  LOBYTE(a1) = *((_BYTE *)a1 + 64);
  (*(void (**)(uint64_t, uint64_t))(a6 + 16))(v28, a6);
  v33[0] = v27;
  v33[1] = v26;
  v34 = v15;
  v35 = v14;
  v36 = v16;
  v37 = v25;
  v38 = v18;
  v39 = v24;
  v40 = v23;
  v41 = v22;
  v42 = v21;
  v43 = (char)a1;
  (*(void (**)(_OWORD *, uint64_t, uint64_t, uint64_t))(v29 + 16))(v33, v30, v31, AssociatedTypeWitness);
  sub_1D42F1FA0((uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
  sub_1D42BE844();
}

uint64_t sub_1D43D3920()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t result;

  sub_1D4477F00();
  if (v1)
    return v0;
  v0 = v2;
  swift_release();
  if ((v0 & 0x8000000000000000) != 0)
  {
    sub_1D42DCED4();
    sub_1D43831DC();
  }
  else
  {
    if (!HIDWORD(v0))
      return v0;
    sub_1D42DCED4();
    sub_1D43831CC();
  }
  result = sub_1D43074E8();
  __break(1u);
  return result;
}

void sub_1D43D39D4()
{
  unint64_t v0;
  _BYTE v1[16];

  sub_1D43D41A8();
  sub_1D43D41E4();
  v0 = sub_1D43D4220();
  sub_1D4398F50(v0, (uint64_t)&type metadata for EmptyAudioSourceConfiguration, (uint64_t)v1);
}

void sub_1D43D3A34()
{
  uint64_t v0;

  MEMORY[0x1D825E41C](&unk_1D454589C, v0);
  sub_1D4399584();
}

uint64_t sub_1D43D3A78()
{
  return sub_1D43D3920();
}

void sub_1D43D3A8C()
{
  sub_1D43D39D4();
}

uint64_t sub_1D43D3AA0(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = MEMORY[0x1D825E41C](&unk_1D4545650);
  return sub_1D43D356C(a1, a2, v5, v4, (uint64_t)&off_1E97AB948);
}

void sub_1D43D3AF4(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  v8 = MEMORY[0x1D825E41C](&unk_1D4545650, a4);
  sub_1D43D37B8(a1, a2, a3, a4, v9, v8, (uint64_t)&off_1E97AB948);
}

void sub_1D43D3B64(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  _QWORD __src[6];
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  char v23;

  v1 = a1[1];
  v2 = a1[3];
  v3 = a1[5];
  sub_1D43D66D0();
  LOBYTE(v4) = *(_BYTE *)(v4 + 64);
  __src[0] = v5;
  __src[1] = v1;
  __src[2] = v6;
  __src[3] = v2;
  __src[4] = v7;
  __src[5] = v3;
  v16 = v8;
  v17 = v9;
  v18 = v10;
  v19 = v11;
  v20 = v12;
  v21 = v13;
  v22 = v14;
  v23 = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D42CB7B8();
  swift_bridgeObjectRetain();
  sub_1D432E81C(__src);
}

uint64_t sub_1D43D3BE8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t result;

  swift_bridgeObjectRelease();
  sub_1D42CB5C8();
  swift_bridgeObjectRelease();
  sub_1D42E3F48();
  if (v2)
    return v1;
  v1 = *(_QWORD *)(a1 + 24);
  sub_1D42FC448();
  if ((v1 & 0x8000000000000000) != 0)
  {
    sub_1D42DCED4();
    sub_1D43831DC();
  }
  else
  {
    if (!HIDWORD(v1))
      return v1;
    sub_1D42DCED4();
    sub_1D43831CC();
  }
  result = sub_1D43074E8();
  __break(1u);
  return result;
}

void sub_1D43D3C9C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD __src[6];
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;

  v1 = a1[1];
  v2 = a1[3];
  v3 = a1[5];
  sub_1D43D66D0();
  LOBYTE(v4) = *(_BYTE *)(v4 + 64);
  __src[0] = v5;
  __src[1] = v1;
  __src[2] = v6;
  __src[3] = v2;
  __src[4] = v7;
  __src[5] = v3;
  v18 = v8;
  v19 = v9;
  v20 = v10;
  v21 = v11;
  v22 = v12;
  v23 = v13;
  v24 = v14;
  v25 = v4;
  v26 = v15;
  v27 = v16;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D42CB7B8();
  swift_bridgeObjectRetain();
  sub_1D439940C(__src);
}

void sub_1D43D3D20()
{
  sub_1D42CB5C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D42B8F48();
  sub_1D43D66F0();
}

uint64_t sub_1D43D3D50()
{
  sub_1D42BE9A8();
  sub_1D451B964();
  return sub_1D451B994();
}

void sub_1D43D3D8C(_QWORD *a1)
{
  sub_1D43D3B64(a1);
}

void sub_1D43D3DA0(_QWORD *a1)
{
  sub_1D43D3C9C(a1);
}

void sub_1D43D3DB4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  __int128 *v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[9];
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  sub_1D43D6704(a1, a2, a3, a4, a5, a6, a7, a8, v10, v11[0]);
  v9 = v8[1];
  v12 = *v8;
  v13 = v9;
  v14 = *((_QWORD *)v8 + 4);
  sub_1D43D3474(v11);
}

void sub_1D43D3DFC(void *a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8)
{
  __int128 *v8;
  __int128 v11;
  uint64_t v12;
  char v13[72];
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  sub_1D43D6704(a1, a2, a3, a4, a5, a6, a7, a8, v12, v13[0]);
  v11 = v8[1];
  v14 = *v8;
  v15 = v11;
  v16 = *((_QWORD *)v8 + 4);
  sub_1D43D36E4((uint64_t)v13, a2, a3);
}

uint64_t sub_1D43D3E5C()
{
  return sub_1D43D3D50();
}

uint64_t sub_1D43D3E64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  _BYTE *v3;

  sub_1D435C53C();
  result = swift_allocError();
  *a1 = result;
  *v3 = 3;
  return result;
}

CMTimeValue sub_1D43D3EA8(CMTimeValue result, uint64_t a2, CMTimeEpoch a3, double a4)
{
  CMTime v4;
  CMTime time;

  if ((~*(_QWORD *)&a4 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (a4 <= -2147483650.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a4 < 2147483650.0)
  {
    time.value = result;
    *(_QWORD *)&time.timescale = a2;
    time.epoch = a3;
    CMTimeConvertScale(&v4, &time, (int)a4, kCMTimeRoundingMethod_RoundTowardZero);
    return v4.value;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1D43D3F3C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v8;

  ObjectType = swift_getObjectType();
  v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a3 + 8) + 16))(ObjectType);
  if (!v3)
  {
    *a1 = a2;
    a1[1] = a3;
    swift_unknownObjectRetain();
  }
  return v8;
}

uint64_t sub_1D43D3F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;

  v2 = *(_QWORD *)(a2 + 8);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40))(ObjectType, v2);
}

uint64_t sub_1D43D3FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t ObjectType;

  v10 = *(_QWORD *)(a4 + 8);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 16))(a2, a3, a5, a6, ObjectType, v10);
}

uint64_t sub_1D43D4054@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _BYTE *v11;
  _QWORD v12[2];

  v6 = sub_1D451B160();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v12 - v8;
  v12[1] = *a1;
  swift_unknownObjectRetain();
  sub_1D42B28FC(&qword_1EFE4C690);
  if ((swift_dynamicCast() & 1) != 0)
  {
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v9, 0, 1, a2);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, v9, a2);
  }
  else
  {
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v9, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_1D435C53C();
    swift_allocError();
    *v11 = 1;
    return swift_willThrow();
  }
}

uint64_t sub_1D43D418C(uint64_t a1)
{
  return sub_1D43CC484(a1, (uint64_t (*)(uint64_t, uint64_t *, id))sub_1D43D1DC8);
}

unint64_t sub_1D43D41A8()
{
  unint64_t result;

  result = qword_1EFE4FAD0;
  if (!qword_1EFE4FAD0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452B130, &type metadata for EmptyAudioSourceConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EFE4FAD0);
  }
  return result;
}

unint64_t sub_1D43D41E4()
{
  unint64_t result;

  result = qword_1EFE4FAD8;
  if (!qword_1EFE4FAD8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452B108, &type metadata for EmptyAudioSourceConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EFE4FAD8);
  }
  return result;
}

unint64_t sub_1D43D4220()
{
  unint64_t result;

  result = qword_1EFE4FAE0;
  if (!qword_1EFE4FAE0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452B158, &type metadata for EmptyAudioSourceConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EFE4FAE0);
  }
  return result;
}

uint64_t sub_1D43D425C()
{
  return swift_deallocObject();
}

uint64_t sub_1D43D426C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1D43D4054(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1D43D4288(uint64_t a1)
{
  return sub_1D43CC484(a1, (uint64_t (*)(uint64_t, uint64_t *, id))sub_1D43CFE88);
}

uint64_t sub_1D43D42A4(uint64_t a1)
{
  return sub_1D43CC484(a1, (uint64_t (*)(uint64_t, uint64_t *, id))sub_1D43CDE2C);
}

void sub_1D43D42C0(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  _QWORD v19[2];

  v5 = v4;
  v19[1] = a4;
  v9 = sub_1D42B28FC(&qword_1EFE4FB28);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D42B28FC(&qword_1EFE4FB30);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  *(_BYTE *)(v15 + 32) = a1;
  sub_1D431A96C(v5, (uint64_t)v11, &qword_1EFE4AEE0);
  v16 = &v11[*(int *)(v9 + 52)];
  *(_QWORD *)v16 = sub_1D43D5F60;
  *((_QWORD *)v16 + 1) = v15;
  v17 = &v11[*(int *)(v9 + 56)];
  *(_QWORD *)v17 = sub_1D43D5DD8;
  *((_QWORD *)v17 + 1) = 0;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_1D43D5DF4;
  *(_QWORD *)(v18 + 24) = 0;
  swift_retain();
  sub_1D42B28FC(&qword_1EFE4FB38);
  sub_1D42F1168(&qword_1EFE4FB40, &qword_1EFE4FB28, (uint64_t)&unk_1D4544100);
  sub_1D42F1168(&qword_1EFE4FB48, &qword_1EFE4FB38, MEMORY[0x1E0C959F8]);
  sub_1D451A3C8();
  swift_release();
  sub_1D42D7018((uint64_t)v11, &qword_1EFE4FB28);
  sub_1D42B28FC(&qword_1EFE4C690);
  sub_1D42F1168((unint64_t *)&unk_1EFE4FB50, &qword_1EFE4FB30, (uint64_t)&unk_1D453CE08);
  sub_1D451A3A4();
  sub_1D42D7018((uint64_t)v14, &qword_1EFE4FB30);
}

void sub_1D43D44FC(uint64_t a1@<X8>)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D43D6714(a1);
  v6 = sub_1D42B28FC(&qword_1EFE4FB90);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42BE8F8();
  sub_1D42B28FC(&qword_1EFE4FB98);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v8);
  sub_1D42F1ED4();
  v9 = sub_1D42B6F40();
  *(_QWORD *)(v9 + 16) = v5;
  *(_QWORD *)(v9 + 24) = v4;
  *(_BYTE *)(v9 + 32) = v1;
  sub_1D43D6764(v9, v10, &qword_1EFE4FBA0);
  v11 = (_QWORD *)(v2 + *(int *)(v6 + 52));
  *v11 = sub_1D43D6038;
  v11[1] = v9;
  v12 = (_QWORD *)(v2 + *(int *)(v6 + 56));
  *v12 = sub_1D43D5DD8;
  v12[1] = 0;
  v13 = sub_1D42B6F40();
  *(_QWORD *)(v13 + 16) = sub_1D43D6064;
  *(_QWORD *)(v13 + 24) = 0;
  sub_1D4307398();
  sub_1D42B28FC(&qword_1EFE4FBA8);
  sub_1D42F1168(&qword_1EFE4FBB0, &qword_1EFE4FB90, (uint64_t)&unk_1D4544100);
  sub_1D43D675C(&qword_1EFE4FBB8, v14, MEMORY[0x1E0C959F8]);
  sub_1D43D66B8();
  swift_release();
  sub_1D42D7018(v2, &qword_1EFE4FB90);
  sub_1D42F1168((unint64_t *)&unk_1EFE4FBC0, &qword_1EFE4FB98, (uint64_t)&unk_1D453CE08);
  sub_1D451A3A4();
  sub_1D42D7018(v3, &qword_1EFE4FB98);
  sub_1D42CB520();
}

void sub_1D43D46B4(uint64_t a1@<X8>)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D43D6714(a1);
  v5 = sub_1D42B28FC(&qword_1EFE4FBF0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v6);
  sub_1D42BE8F8();
  sub_1D42B28FC(&qword_1EFE4FBF8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42CB210();
  v10 = v9 - v8;
  v11 = sub_1D42B6F40();
  *(_QWORD *)(v11 + 16) = v4;
  *(_QWORD *)(v11 + 24) = v3;
  *(_BYTE *)(v11 + 32) = v1;
  sub_1D43D6764(v11, v12, &qword_1EFE4AEE0);
  v13 = (_QWORD *)(v2 + *(int *)(v5 + 52));
  *v13 = sub_1D43D61CC;
  v13[1] = v11;
  v14 = (_QWORD *)(v2 + *(int *)(v5 + 56));
  *v14 = sub_1D43D5DD8;
  v14[1] = 0;
  v15 = sub_1D42B6F40();
  *(_QWORD *)(v15 + 16) = sub_1D43D61F8;
  *(_QWORD *)(v15 + 24) = 0;
  sub_1D4307398();
  sub_1D42B28FC(&qword_1EFE4FC00);
  sub_1D42F1168(&qword_1EFE4FC08, &qword_1EFE4FBF0, (uint64_t)&unk_1D4544100);
  sub_1D43D675C((unint64_t *)&unk_1EFE4FC10, v16, MEMORY[0x1E0C959F8]);
  sub_1D43D66B8();
  swift_release();
  sub_1D42D7018(v2, &qword_1EFE4FBF0);
  sub_1D42EA3E0(v17, (unint64_t *)&qword_1EFE47A08);
  sub_1D43D675C(&qword_1EFE4FC20, v18, (uint64_t)&unk_1D453CE08);
  sub_1D451A3A4();
  sub_1D42D7018(v10, &qword_1EFE4FBF8);
  sub_1D42CB520();
}

uint64_t sub_1D43D4884(uint64_t a1, uint64_t *a2, void (*a3)(_OWORD *, _QWORD *, uint64_t *, uint64_t, uint64_t, unint64_t *, int *, uint64_t *))
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  unsigned int v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  int v20;
  uint64_t v21;
  _QWORD v22[3];
  unint64_t v23;
  _OWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v4 = *(_OWORD *)(a1 + 16);
  v24[0] = *(_OWORD *)a1;
  v24[1] = v4;
  v5 = *(_QWORD *)(a1 + 40);
  v25 = *(_QWORD *)(a1 + 32);
  v26 = v5;
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v27 = v6;
  v23 = 0;
  v8 = v6 - v5;
  if (v6 < v5)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (__OFSUB__(v6, v5))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v10 = a2;
  v11 = *a2;
  sub_1D42BE0D0(a1);
  sub_1D44F6E94(v11);
  if (sub_1D44F6274(v11))
  {
    v12 = sub_1D44F6A44(v11);
    if (!v12)
    {
      __break(1u);
      sub_1D42DCED4();
      sub_1D43831DC();
LABEL_18:
      result = sub_1D43074E8();
      __break(1u);
      return result;
    }
    v13 = v12;
    v14 = sub_1D44F0E74((uint64_t)v12, 0);

    v15 = v14;
  }
  else
  {
    v15 = 0;
  }
  v16 = v23;
  if ((unsigned __int128)(v15 * (__int128)(uint64_t)v23) >> 64 != (uint64_t)(v15 * v23) >> 63)
LABEL_15:
    __break(1u);
  sub_1D43E2A9C(v15 * v23);
  *(_QWORD *)(v17 + 16) = v15 * v23;
  v22[0] = v17;
  v22[1] = v15;
  v22[2] = v16;
  v21 = 0;
  if (HIDWORD(v16))
  {
    sub_1D42DCED4();
    sub_1D43831CC();
    goto LABEL_18;
  }
  v20 = v16;
  a3(v24, v22, v10, v8, v7, &v23, &v20, &v21);
  if (v3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = v10[2];
    swift_beginAccess();
    v10 = *(uint64_t **)(v18 + 16);
    sub_1D42CB7B8();
    sub_1D42BE984();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v18 + 16) = MEMORY[0x1E0DEE9D8];
    sub_1D42FC448();
    sub_1D42CB5C8();
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v10;
}

id sub_1D43D4AB4(uint64_t (*a1)(id *, uint64_t, uint64_t), uint64_t a2, char a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  char v13;
  char v14;
  id v15;
  uint64_t v16;
  int v17;
  id v18;
  uint64_t v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  _BYTE *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t type;
  os_log_type_t typea;
  unsigned __int8 v51;
  uint64_t v52[4];
  __int128 v53;
  id v54;

  sub_1D42B28FC(a4);
  v9 = sub_1D42B6F40();
  *(_QWORD *)(v9 + 16) = MEMORY[0x1E0DEE9D8];
  swift_retain();
  v10 = (id)a1(&v54, a5, v9);
  sub_1D42BE93C();
  if (v5)
  {
    sub_1D42BE93C();
    return v10;
  }
  if ((a3 & 1) != 0)
  {
    if (qword_1EFE472D0 != -1)
      swift_once();
    if (byte_1EFEA7718 == 1)
    {
      if (qword_1EFE47240 != -1)
        swift_once();
      v11 = objc_msgSend((id)qword_1EFE47238, sel_dictionaryRepresentation);
      sub_1D451A5CC();

      v12 = sub_1D4457124();
      v14 = v13;
      sub_1D42B7204();
      v15 = 0;
      if ((v14 & 1) != 0 || !v12)
        goto LABEL_22;
      v16 = objc_opt_self();
      v17 = sub_1D44FC83C(v16, v10);
      type metadata accessor for SNUtils();
      sub_1D44BC2A0((uint64_t)&v53);
      sub_1D431A96C((uint64_t)&v53, (uint64_t)v52, &qword_1EFE47160);
      if (v52[3])
      {
        if ((swift_dynamicCast() & 1) != 0 && ((v17 | v51 ^ 1) & 1) == 0)
        {
          v18 = objc_allocWithZone((Class)SNTunableDSPGraphHost);
          v15 = sub_1D43FF2D4(v10);
          sub_1D43D674C((uint64_t)v15, &qword_1EFE47160, v40, v41, v42, v43, v44, v45, v46, v47, v48, type);
          goto LABEL_22;
        }
      }
      else
      {
        sub_1D42D7018((uint64_t)v52, &qword_1EFE47160);
      }
      if (qword_1EFE40338 != -1)
        swift_once();
      v19 = sub_1D451A014();
      sub_1D42CC880(v19, (uint64_t)qword_1EFEA7700);
      v20 = v10;
      v21 = sub_1D4519FFC();
      v22 = sub_1D451AF5C();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = sub_1D42CC940();
        v52[0] = sub_1D42CC940();
        *(_DWORD *)v23 = 136315650;
        typea = v22;
        v24 = sub_1D44F5CD8(v20);
        v25 = sub_1D451A6EC();
        v27 = v26;

        sub_1D43D72EC(v25, v27, v52);
        sub_1D451B1A8();

        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 12) = 1024;
        sub_1D43D6740();
        *(_WORD *)(v23 + 18) = 1024;
        sub_1D43D6740();
        _os_log_impl(&dword_1D42A7000, v21, typea, "Refusing to publish graph for tuning: %s. Boxes can be tuned? %{BOOL}d; Process is entitled? %{BOOL}d",
          (uint8_t *)v23,
          0x18u);
        swift_arrayDestroy();
        sub_1D42CC934();
      }

      sub_1D43D674C(v28, &qword_1EFE47160, v29, v30, v31, v32, v33, v34, v46, v47, v48, type);
    }
  }
  v15 = 0;
LABEL_22:
  v35 = v54;
  v36 = v15;
  v37 = v35;
  sub_1D42E3CA4();
  v10 = v10;
  if (sub_1D44F5EF4((uint64_t)v10) == 1
    && (!sub_1D44F6274((uint64_t)v10) || sub_1D44F6274((uint64_t)v10) == 1)
    && sub_1D44F42B8((_BOOL8)v10)
    && sub_1D44F43AC((_BOOL8)v10))
  {

    sub_1D42BE93C();
  }
  else
  {
    sub_1D4383190();
    sub_1D42B6D0C();
    *v38 = 1;
    swift_willThrow();

    swift_release_n();
  }
  return v10;
}

uint64_t sub_1D43D509C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  sub_1D43D6134(a1);
  sub_1D43A2420();
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 16);
  sub_1D43A24C8(v4);
  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(v5 + 16) = v4 + 1;
  sub_1D431AC40(a1, v5 + 72 * v4 + 32, (uint64_t *)&unk_1EFE519A0);
  return swift_endAccess();
}

uint64_t sub_1D43D5130(uint64_t a1, char a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t), void (*a5)(uint64_t), void (*a6)(uint64_t))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  swift_beginAccess();
  v12 = a2 & 1;
  v13 = a4(a1, v12);
  a5(v13);
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 16) + 16);
  a6(v14);
  v15 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(v15 + 16) = v14 + 1;
  v16 = v15 + 16 * v14;
  *(_QWORD *)(v16 + 32) = a1;
  *(_BYTE *)(v16 + 40) = v12;
  return swift_endAccess();
}

uint64_t sub_1D43D51DC(uint64_t a1, uint64_t *a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;

  v7 = sub_1D42B28FC(a2);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1D42F1ED4();
  sub_1D42B28FC(a3);
  sub_1D42F1168(a4, a3, MEMORY[0x1E0DEAF38]);
  sub_1D451A830();
  sub_1D42B28FC(&qword_1EFE49BB0);
  sub_1D451A140();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v4, v7);
}

id sub_1D43D52BC(id a1, char a2)
{
  id v3;

  if ((a2 & 1) != 0)
  {
    v3 = a1;
    sub_1D42B28FC(&qword_1EFE49BB0);
    swift_willThrowTypedImpl();
  }
  else
  {
    swift_unknownObjectRetain();
  }
  return a1;
}

uint64_t sub_1D43D531C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[9];
  _BYTE v15[80];
  void *v16;

  sub_1D431AC40(a1, (uint64_t)v14, (uint64_t *)&unk_1EFE519A0);
  v4 = (void *)v14[0];
  v5 = v14[1];
  v6 = v14[4];
  v11 = v14[3];
  v12 = v14[2];
  v7 = v14[6];
  v13 = v14[5];
  v8 = v14[7];
  sub_1D431AC40(a1, (uint64_t)v15, (uint64_t *)&unk_1EFE519A0);
  if ((v15[64] & 1) != 0)
  {
    v16 = v4;
    v9 = v4;
    sub_1D42B28FC(&qword_1EFE49BB0);
    return swift_willThrowTypedImpl();
  }
  else
  {
    *a2 = v4;
    a2[1] = v5;
    a2[2] = v12;
    a2[3] = v11;
    a2[4] = v6;
    a2[5] = v13;
    a2[6] = v7;
    a2[7] = v8;
    return swift_bridgeObjectRetain();
  }
}

void *sub_1D43D5424(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(__int128 *), uint64_t a5, uint64_t (*a6)(uint64_t, __int128 *), uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  char v23;
  id v24;
  void *v25;
  _QWORD *v27;
  uint64_t v28;
  id aBlock[6];
  __int128 v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v15 = a4(&v30);
  v16 = (void *)v15;
  if (!v9)
  {
    v17 = (void *)a6(v15, &v30);
    v27 = a1;
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = v30;
    v28 = objc_opt_self();
    v19 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v20 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = v19;
    v21[3] = v20;
    v21[4] = a8;
    v21[5] = a9;
    v21[6] = v18;
    v21[7] = a2;
    v21[8] = a3;
    aBlock[4] = sub_1D43D5FD0;
    aBlock[5] = v21;
    aBlock[0] = (id)MEMORY[0x1E0C809B0];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_1D43FEF00;
    aBlock[3] = &unk_1E97B35C0;
    v22 = _Block_copy(aBlock);
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    aBlock[0] = 0;
    v23 = sub_1D4501228(v28, v17, v22, (uint64_t)aBlock);
    _Block_release(v22);
    v24 = aBlock[0];
    if ((v23 & 1) != 0)
    {
      swift_unknownObjectRelease();
      *v27 = v17;
      swift_release();
    }
    else
    {
      v25 = v24;
      sub_1D4519AA4();

      swift_willThrow();
      swift_release();
      swift_unknownObjectRelease();

    }
  }
  return v16;
}

void *sub_1D43D56A8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(uint64_t), uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1D43D5780(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t)&unk_1E97BBDA0, sub_1D43D6194, &unk_1E97B39E0);
}

void *sub_1D43D5714(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(uint64_t), uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1D43D5780(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t)&unk_1E97BBE18, sub_1D43D62CC, &unk_1E97BBE30);
}

void *sub_1D43D5780(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(uint64_t), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
  uint64_t v12;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  char v25;
  id v26;
  void *v27;
  uint64_t v29;
  void *v30;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x1E0C80C00];
  v18 = a4();
  v19 = (void *)v18;
  if (!v12)
  {
    v30 = (void *)a6(v18);
    v20 = swift_allocEmptyBox();
    v29 = objc_opt_self();
    v21 = sub_1D42B6F40();
    swift_unknownObjectWeakInit();
    v22 = sub_1D42B6F40();
    swift_unknownObjectWeakInit();
    v23 = (_QWORD *)sub_1D42B6F40();
    v23[2] = v21;
    v23[3] = v22;
    v23[4] = a8;
    v23[5] = a9;
    v23[6] = v20;
    v23[7] = a2;
    v23[8] = a3;
    aBlock[4] = a11;
    aBlock[5] = v23;
    aBlock[0] = (id)MEMORY[0x1E0C809B0];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_1D43FEF00;
    aBlock[3] = a12;
    v24 = _Block_copy(aBlock);
    sub_1D4307398();
    swift_retain();
    swift_retain();
    swift_release();
    aBlock[0] = 0;
    v25 = sub_1D4501228(v29, v30, v24, (uint64_t)aBlock);
    _Block_release(v24);
    v26 = aBlock[0];
    if ((v25 & 1) != 0)
    {
      *a1 = v30;
      swift_release();
    }
    else
    {
      v27 = v26;
      sub_1D4519AA4();

      swift_willThrow();
      swift_release();

    }
  }
  return v19;
}

void sub_1D43D59A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, void *, uint64_t, uint64_t), uint64_t a5, uint64_t a6, void (*a7)(uint64_t *))
{
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  unint64_t v17;

  v12 = a2 + 16;
  swift_beginAccess();
  v13 = MEMORY[0x1D825E608](v12);
  if (v13)
  {
    v14 = (void *)v13;
    swift_beginAccess();
    v15 = MEMORY[0x1D825E608](a3 + 16);
    if (v15)
    {
      v16 = (void *)v15;
      swift_beginAccess();
      v17 = a4(v14, v16, a1, a6 + 16);
      swift_endAccess();
      swift_retain();
      sub_1D43CC8B0(v17, a7);
      swift_bridgeObjectRelease();

    }
  }
}

void sub_1D43D5AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t), uint64_t a5, uint64_t a6, void (*a7)(_OWORD *))
{
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  _OWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  char v25;

  v11 = a2 + 16;
  swift_beginAccess();
  v12 = MEMORY[0x1D825E608](v11);
  if (v12)
  {
    v13 = (void *)v12;
    swift_beginAccess();
    v14 = MEMORY[0x1D825E608](a3 + 16);
    if (v14)
    {
      v15 = (void *)v14;
      v16 = a4(v13, v14, a1);
      v17 = *(_QWORD *)(v16 + 16);
      if (v17)
      {
        swift_bridgeObjectRetain();
        v18 = (uint64_t *)(v16 + 88);
        do
        {
          v19 = *(v18 - 1);
          v20 = *v18;
          v21 = *(_OWORD *)(v18 - 5);
          v22[0] = *(_OWORD *)(v18 - 7);
          v22[1] = v21;
          v22[2] = *(_OWORD *)(v18 - 3);
          v23 = v19;
          v24 = v20;
          v25 = 0;
          swift_bridgeObjectRetain();
          a7(v22);
          swift_bridgeObjectRelease();
          v18 += 8;
          --v17;
        }
        while (v17);

        swift_bridgeObjectRelease_n();
        return;
      }
      swift_bridgeObjectRelease();

    }
  }
}

void sub_1D43D5C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t), uint64_t a5, uint64_t a6, void (*a7)(id *))
{
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  unint64_t v16;

  v11 = a2 + 16;
  swift_beginAccess();
  v12 = MEMORY[0x1D825E608](v11);
  if (v12)
  {
    v13 = (void *)v12;
    swift_beginAccess();
    v14 = MEMORY[0x1D825E608](a3 + 16);
    if (v14)
    {
      v15 = (void *)v14;
      v16 = a4(v13, v14, a1);
      swift_retain();
      sub_1D43CC9C4(v16, a7);
      swift_bridgeObjectRelease();

    }
  }
}

uint64_t sub_1D43D5DA0(uint64_t a1)
{
  return sub_1D43CC484(a1, (uint64_t (*)(uint64_t, uint64_t *, id))sub_1D43CEE30);
}

uint64_t sub_1D43D5DBC(uint64_t a1)
{
  return sub_1D43CC484(a1, (uint64_t (*)(uint64_t, uint64_t *, id))sub_1D43D0E78);
}

uint64_t sub_1D43D5DD8@<X0>(_OWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1D43D5FF4(a1, a2, (void (*)(_OWORD *, _QWORD *, uint64_t *, uint64_t, uint64_t, unint64_t *, int *, uint64_t *))sub_1D438194C, a3);
}

uint64_t sub_1D43D5DF4(uint64_t *a1)
{
  return sub_1D43D51DC(*a1, &qword_1EFE4FB60, &qword_1EFE4FB68, &qword_1EFE4FB70);
}

id sub_1D43D5E24@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id result;

  result = sub_1D43D52BC(*(id *)a1, *(_BYTE *)(a1 + 8));
  if (!v2)
    *a2 = result;
  return result;
}

void sub_1D43D5E58()
{
  sub_1D44B0508();
}

uint64_t sub_1D43D5E60(uint64_t a1, uint64_t a2)
{
  return sub_1D43D5130(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), a2, (uint64_t (*)(uint64_t, uint64_t))sub_1D43D5F9C, (void (*)(uint64_t))sub_1D43A2414, (void (*)(uint64_t))sub_1D43A24BC);
}

uint64_t sub_1D43D5E9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1D439C37C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D43D5EC0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1D439B93C(*a1, a1[1], a1[2], a1[3], a2, a3);
}

CMTimeValue sub_1D43D5EE0(CMTimeValue a1, uint64_t a2, CMTimeEpoch a3)
{
  uint64_t v3;

  return sub_1D43D3EA8(a1, a2, a3, *(double *)(v3 + 16));
}

uint64_t sub_1D43D5EF8(_QWORD *a1)
{
  uint64_t v1;

  return sub_1D43D3F3C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1D43D5F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1D43D3FDC(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

void *sub_1D43D5F2C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1D43D63F4(a1, a2, a3);
}

uint64_t sub_1D43D5F40()
{
  sub_1D42B8F98();
  return swift_deallocObject();
}

id sub_1D43D5F60@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1D43D61A0(*(uint64_t (**)(id *, uint64_t, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), &qword_1EFE4FB78, (uint64_t)sub_1D43D5F94, a1);
}

void sub_1D43D5F8C()
{
  sub_1D43D5E58();
}

uint64_t sub_1D43D5F94(uint64_t a1)
{
  uint64_t v1;

  return sub_1D43D5E60(a1, v1);
}

id sub_1D43D5F9C(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_unknownObjectRetain();
}

uint64_t sub_1D43D5FA8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D43D5FD0(uint64_t a1)
{
  return sub_1D43D62D8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D43D59A0);
}

uint64_t sub_1D43D5FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D43D5FEC()
{
  return swift_release();
}

uint64_t sub_1D43D5FF4@<X0>(_OWORD *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(_OWORD *, _QWORD *, uint64_t *, uint64_t, uint64_t, unint64_t *, int *, uint64_t *)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  uint64_t result;
  _OWORD v9[4];

  v6 = a1[1];
  v9[0] = *a1;
  v9[1] = v6;
  v7 = a1[3];
  v9[2] = a1[2];
  v9[3] = v7;
  result = sub_1D43D4884((uint64_t)v9, a2, a3);
  if (!v4)
    *a4 = result;
  return result;
}

id sub_1D43D6038@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1D43D61A0(*(uint64_t (**)(id *, uint64_t, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), &qword_1EFE4FBE8, (uint64_t)sub_1D43D612C, a1);
}

uint64_t sub_1D43D6064(uint64_t *a1)
{
  return sub_1D43D51DC(*a1, &qword_1EFE4FBD0, &qword_1EFE4FBD8, &qword_1EFE4FBE0);
}

uint64_t sub_1D43D6094@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _BYTE v4[72];

  sub_1D431AC40(a1, (uint64_t)v4, (uint64_t *)&unk_1EFE519A0);
  return sub_1D43D531C((uint64_t)v4, a2);
}

void sub_1D43D60DC()
{
  sub_1D44B05FC();
}

void sub_1D43D60E4()
{
  sub_1D43D60DC();
}

uint64_t sub_1D43D60EC(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_1D431AC40(a1, (uint64_t)v4, (uint64_t *)&unk_1EFE519A0);
  return sub_1D43D509C((uint64_t)v4, a2);
}

uint64_t sub_1D43D612C(uint64_t a1)
{
  uint64_t v1;

  return sub_1D43D60EC(a1, v1);
}

uint64_t sub_1D43D6134(uint64_t a1)
{
  sub_1D43D617C(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  return a1;
}

id sub_1D43D617C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

uint64_t sub_1D43D6194(uint64_t a1)
{
  return sub_1D43D62D8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D43D5AE8);
}

id sub_1D43D61A0@<X0>(uint64_t (*a1)(id *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v6;
  id result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = sub_1D43D4AB4(a1, a2, a3, a4, a5);
  if (!v6)
  {
    *a6 = result;
    a6[1] = v9;
    a6[2] = v10;
    a6[3] = v11;
  }
  return result;
}

id sub_1D43D61CC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1D43D61A0(*(uint64_t (**)(id *, uint64_t, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), &qword_1EFE4FC40, (uint64_t)sub_1D43D6274, a1);
}

uint64_t sub_1D43D61F8(uint64_t *a1)
{
  return sub_1D43D51DC(*a1, &qword_1EFE4FC28, &qword_1EFE4FC30, &qword_1EFE4FC38);
}

void sub_1D43D6228()
{
  sub_1D44B0F5C();
}

void sub_1D43D6230()
{
  sub_1D43D6228();
}

uint64_t sub_1D43D6238(uint64_t a1, uint64_t a2)
{
  return sub_1D43D5130(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), a2, (uint64_t (*)(uint64_t, uint64_t))sub_1D43D627C, (void (*)(uint64_t))sub_1D43A2438, (void (*)(uint64_t))sub_1D43A24E4);
}

uint64_t sub_1D43D6274(uint64_t a1)
{
  uint64_t v1;

  return sub_1D43D6238(a1, v1);
}

id sub_1D43D627C(id a1)
{
  return a1;
}

uint64_t sub_1D43D628C()
{
  swift_release();
  sub_1D42B8F98();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D43D62CC(uint64_t a1)
{
  return sub_1D43D62D8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D43D5C80);
}

uint64_t sub_1D43D62D8(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8]);
}

uint64_t sub_1D43D6304()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D43D6328()
{
  sub_1D42B8F98();
  return swift_deallocObject();
}

uint64_t sub_1D43D63C4()
{
  sub_1D42B8F98();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void *sub_1D43D63F4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1D43D5424(a1, a2, a3, *(uint64_t (**)(__int128 *))(v3 + 16), *(_QWORD *)(v3 + 24), *(uint64_t (**)(uint64_t, __int128 *))(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56));
}

uint64_t storeEnumTagSinglePayload for ProcessingUtils.DomainError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D43D646C + 4 * byte_1D4536A85[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D43D64A0 + 4 * byte_1D4536A80[v4]))();
}

uint64_t sub_1D43D64A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43D64A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D43D64B0);
  return result;
}

uint64_t sub_1D43D64BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D43D64C4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D43D64C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43D64D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProcessingUtils.DomainError()
{
  return &type metadata for ProcessingUtils.DomainError;
}

unint64_t sub_1D43D64F0()
{
  unint64_t result;

  result = qword_1EFE4FC48;
  if (!qword_1EFE4FC48)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4536C1C, &type metadata for ProcessingUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4FC48);
  }
  return result;
}

CMTimeValue sub_1D43D6530(CMTimeValue a1, uint64_t a2, CMTimeEpoch a3)
{
  return sub_1D43D5EE0(a1, a2, a3);
}

uint64_t sub_1D43D65FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D43D5F10(a1, a2, a3, a4);
}

uint64_t sub_1D43D6620(_QWORD *a1)
{
  return sub_1D43D5EF8(a1);
}

void sub_1D43D6634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 - 192);
  *(_QWORD *)(v1 - 176) = v0;
  *(_QWORD *)(v1 - 168) = v2;
  v3 = *(_QWORD *)(v1 - 208);
  *(_QWORD *)(v1 - 160) = *(_QWORD *)(v1 - 200);
  *(_QWORD *)(v1 - 152) = v3;
  v4 = *(_QWORD *)(v1 - 224);
  *(_QWORD *)(v1 - 144) = *(_QWORD *)(v1 - 216);
  *(_QWORD *)(v1 - 136) = v4;
  *(_BYTE *)(v1 - 128) = *(_DWORD *)(v1 - 228);
  *(_BYTE *)(v1 - 127) = *(_DWORD *)(v1 - 232);
  *(_BYTE *)(v1 - 126) = *(_DWORD *)(v1 - 236);
  *(_BYTE *)(v1 - 125) = *(_DWORD *)(v1 - 240);
  *(_BYTE *)(v1 - 124) = *(_DWORD *)(v1 - 244);
  *(_BYTE *)(v1 - 123) = *(_DWORD *)(v1 - 248);
  *(_QWORD *)(v1 - 120) = *(_QWORD *)(v1 - 256);
}

void sub_1D43D6690()
{
  uint64_t v0;

}

uint64_t sub_1D43D66B8()
{
  return sub_1D451A3C8();
}

void *sub_1D43D6704(void *__src, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char __dst)
{
  return memcpy(&__dst, __src, 0x41uLL);
}

void sub_1D43D6714(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = a1;
}

void sub_1D43D672C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + a1;
  *(_QWORD *)v2 = 0;
  *(_QWORD *)(v2 + 8) = 0;
  *(_BYTE *)(v2 + 16) = 2;
}

uint64_t sub_1D43D6740()
{
  return sub_1D451B1A8();
}

void sub_1D43D674C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  sub_1D42D7018((uint64_t)va, a2);
}

void sub_1D43D6754()
{
  void *v0;

}

void sub_1D43D675C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  sub_1D42F1168(a1, v3, a3);
}

void sub_1D43D6764(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_1D431A96C(v4, v3, a3);
}

void sub_1D43D6770(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t AssociatedTypeWitness;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v22 = a1;
  v20 = a2;
  v21 = a3;
  v23 = a8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1D451B9E8();
  v12 = sub_1D451A0D4();
  v13 = sub_1D451A278();
  MEMORY[0x1D825E41C](MEMORY[0x1E0C95950], v12);
  MEMORY[0x1D825E41C](MEMORY[0x1E0C960B0], v13);
  v14 = sub_1D451A0E0();
  MEMORY[0x1D825E41C](MEMORY[0x1E0C959F8], v14);
  v24 = sub_1D451A0A4();
  v25 = a4;
  v26 = MEMORY[0x1D825E41C](MEMORY[0x1E0C95850], v24);
  v27 = a6;
  v15 = sub_1D451A128();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&AssociatedTypeWitness - v16;
  v18 = (_QWORD *)sub_1D42B6F40();
  v18[2] = a4;
  v18[3] = a5;
  v18[4] = a6;
  v18[5] = a7;
  v18[6] = v20;
  v18[7] = v21;
  swift_retain();
  sub_1D451A3C8();
  sub_1D42EA438();
  MEMORY[0x1D825E41C](MEMORY[0x1E0C95B78], v15);
  sub_1D441CAFC((uint64_t)v17, v15, v23);
  sub_1D42CB520();
}

void sub_1D43D69A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1D43D7BB8();
  sub_1D43D7BB8();
  swift_getAssociatedConformanceWitness();
  sub_1D451B9E8();
  v4 = sub_1D451A0D4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - v6;
  v8 = sub_1D42B6F40();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  sub_1D451A308();
  sub_1D42EA438();
  v9 = sub_1D42B6F40();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  v10 = sub_1D451A278();
  MEMORY[0x1D825E41C](MEMORY[0x1E0C95950], v4);
  MEMORY[0x1D825E41C](MEMORY[0x1E0C960B0], v10);
  sub_1D451A350();
  sub_1D42EA438();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1D42CB520();
}

uint64_t sub_1D43D6B44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a2, a1, AssociatedTypeWitness);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1D451B9E8();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1D43D6C18(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v3 = sub_1D451B9E8();
  MEMORY[0x1E0C80A78](v3);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))((char *)&v6 - v4, a1, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  return sub_1D451A284();
}

uint64_t sub_1D43D6D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(uint64_t);
  uint64_t v15;

  v9 = *(_QWORD *)(a5 - 8);
  v10 = MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13(v10);
  sub_1D43D69A4(a5, a7);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, a5);
}

void sub_1D43D6DCC()
{
  uint64_t v0;
  void *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_1EFE40338 != -1)
    swift_once();
  v0 = sub_1D451A014();
  sub_1D42CC880(v0, (uint64_t)qword_1EFEA7700);
  sub_1D43D7B70();
  v1 = (void *)sub_1D4519FFC();
  v2 = sub_1D451AF74();
  if (sub_1D43B3B88(v2))
  {
    sub_1D43D7B80();
    sub_1D43D7B50();
    v3 = sub_1D43D7B24(4.8751e-34);
    sub_1D43D7B60(v3);
    sub_1D43D7AF4();
    sub_1D43D7BAC();
    sub_1D43D7B10(&dword_1D42A7000, v4, v5, "%{public}sreceive subscription");
    sub_1D43D7B90();
    sub_1D42CC934();
  }

  sub_1D437EEAC();
  sub_1D42EA18C();
}

void sub_1D43D6EB4()
{
  uint64_t v0;
  void *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_1EFE40338 != -1)
    swift_once();
  v0 = sub_1D451A014();
  sub_1D42CC880(v0, (uint64_t)qword_1EFEA7700);
  sub_1D43D7B70();
  v1 = (void *)sub_1D4519FFC();
  v2 = sub_1D451AF74();
  if (sub_1D43B3B88(v2))
  {
    sub_1D43D7B80();
    sub_1D43D7B50();
    v3 = sub_1D43D7B24(4.8751e-34);
    sub_1D43D7B60(v3);
    sub_1D43D7AF4();
    sub_1D43D7BAC();
    sub_1D43D7B10(&dword_1D42A7000, v4, v5, "%{public}scancelled");
    sub_1D43D7B90();
    sub_1D42CC934();
  }

  sub_1D437EEAC();
  sub_1D42EA18C();
}

void sub_1D43D6F9C(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_1D43D6FA4@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void sub_1D43D6FAC(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v8;
  uint64_t v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;

  v8 = *a1;
  if ((*(_BYTE *)(a2 + 8) & 1) == 0)
  {
    v10 = *(_QWORD *)a2 + a3;
    if ((unint64_t)(v8 - v10) >= 0x7FFFFFFF)
      v11 = 0x7FFFFFFFLL;
    else
      v11 = v8 - v10;
    if ((_DWORD)v11)
      v12 = v11 > a4;
    else
      v12 = 0;
    if (v12)
    {
      if (qword_1EFE40338 == -1)
        goto LABEL_11;
      goto LABEL_35;
    }
    while (1)
    {
      v21 = *(_QWORD *)(a2 + 24);
      v23 = __CFADD__(v21, 1);
      v22 = v21 + 1;
      if (!v23)
        break;
      __break(1u);
LABEL_35:
      swift_once();
LABEL_11:
      v13 = sub_1D451A014();
      sub_1D42CC880(v13, (uint64_t)qword_1EFEA7700);
      v14 = sub_1D4519FFC();
      v15 = sub_1D451AF50();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = sub_1D42CC940();
        v29 = sub_1D42CC940();
        *(_DWORD *)v16 = 136315394;
        if (v8 == v10)
          v17 = 0x646E69686562;
        else
          v17 = 0x6461656861;
        if (v8 == v10)
          v18 = 0xE600000000000000;
        else
          v18 = 0xE500000000000000;
        sub_1D43D72EC(v17, v18, &v29);
        sub_1D451B1A8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v16 + 12) = 1024;
        sub_1D451B1A8();
        _os_log_impl(&dword_1D42A7000, v14, v15, "Timestamp is %s by %d samples", (uint8_t *)v16, 0x12u);
        swift_arrayDestroy();
        sub_1D42CC934();
      }

      v19 = *(_QWORD *)(a2 + 16);
      v23 = __CFADD__(v19, 1);
      v20 = v19 + 1;
      if (v23)
      {
        __break(1u);
LABEL_37:
        swift_once();
LABEL_29:
        v24 = sub_1D451A014();
        sub_1D42CC880(v24, (uint64_t)qword_1EFEA7700);
        v25 = sub_1D4519FFC();
        v26 = sub_1D451AF5C();
        if (os_log_type_enabled(v25, v26))
        {
          v27 = sub_1D42CC940();
          *(_DWORD *)v27 = 134218240;
          sub_1D43D7BA0();
          *(_WORD *)(v27 + 12) = 2048;
          v29 = a5;
          sub_1D43D7BA0();
          _os_log_impl(&dword_1D42A7000, v25, v26, "Detected %lu timestamp deviations in the last %ld timestamps", (uint8_t *)v27, 0x16u);
          sub_1D42CC934();
        }

        *(_QWORD *)(a2 + 16) = 0;
        a6 = v28;
LABEL_32:
        *(_QWORD *)(a2 + 24) = 0;
        goto LABEL_33;
      }
      *(_QWORD *)(a2 + 16) = v20;
    }
    *(_QWORD *)(a2 + 24) = v22;
    v23 = a5 < 1 || v22 >= a5;
    if (v23)
    {
      if (*(_QWORD *)(a2 + 16))
      {
        v28 = a6;
        if (qword_1EFE40338 != -1)
          goto LABEL_37;
        goto LABEL_29;
      }
      goto LABEL_32;
    }
  }
LABEL_33:
  *(_QWORD *)a2 = v8;
  *(_BYTE *)(a2 + 8) = 0;
  *a6 = v8;
}

uint64_t sub_1D43D72D0()
{
  return 0;
}

uint64_t sub_1D43D72EC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t ObjectType;

  v6 = sub_1D43D73BC(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1D42B294C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1D42B294C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_1D42B5400((uint64_t)v12);
  return v7;
}

uint64_t sub_1D43D73BC(_QWORD *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_1D43D7510((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_1D451B1C0();
      result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = sub_1D43D75D4(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    v8 = sub_1D451B46C();
    if (!v8)
    {
      result = sub_1D451B550();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

void *sub_1D43D7510(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_1D451B5D4();
  __break(1u);
  return result;
}

uint64_t sub_1D43D75D4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1D43D7668(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (uint64_t)sub_1D43D7890(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = (uint64_t)sub_1D43D7890((char *)(v3 > 1), v4 + 1, 1, v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1D43D7668(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
  {
    v2 = sub_1D451A7AC();
    if (v2)
      goto LABEL_6;
    return MEMORY[0x1E0DEE9D8];
  }
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
LABEL_6:
  v3 = sub_1D43D77D8(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = v3;
    v5 = sub_1D451B40C();
    if ((v6 & 1) != 0 || v5 != v2)
      goto LABEL_14;
    return (uint64_t)v4;
  }
  sub_1D451B5D4();
  __break(1u);
LABEL_14:
  result = sub_1D451B550();
  __break(1u);
  return result;
}

_QWORD *sub_1D43D77D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1D42B28FC(&qword_1EFE40408);
  v4 = (_QWORD *)sub_1D42B6F40();
  v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1D43D7838(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v6 = sub_1D451A7DC();
    sub_1D43D7B38(v6);
    return v7 | 4;
  }
  else
  {
    v3 = MEMORY[0x1D825C100](15, a1 >> 16);
    sub_1D43D7B38(v3);
    return v4 | 8;
  }
}

char *sub_1D43D7890(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_1D42B28FC(&qword_1EFE40408);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_1D43D7A28(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1D43D7964(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_1D43D7964(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_1D451B5D4();
  __break(1u);
  return result;
}

char *sub_1D43D7A28(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_1D451B5D4();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

uint64_t sub_1D43D7AAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D43D6B44(a1, a2);
}

uint64_t sub_1D43D7AB8(uint64_t a1)
{
  return sub_1D43D6C18(a1);
}

uint64_t sub_1D43D7AC0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D43D7AE4(uint64_t a1)
{
  uint64_t *v1;

  return sub_1D43D6D38(a1, v1[6], v1[7], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1D43D7AF4()
{
  return sub_1D451B1A8();
}

void sub_1D43D7B10(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_1D43D7B24(float a1)
{
  float *v1;

  *v1 = a1;
  return swift_bridgeObjectRetain();
}

unint64_t sub_1D43D7B38(uint64_t a1)
{
  char v1;

  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

uint64_t sub_1D43D7B50()
{
  return swift_slowAlloc();
}

uint64_t sub_1D43D7B60(uint64_t a1, ...)
{
  unint64_t v1;
  uint64_t v2;
  va_list va;

  va_start(va, a1);
  return sub_1D43D72EC(v2, v1, (uint64_t *)va);
}

uint64_t sub_1D43D7B70()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1D43D7B80()
{
  return swift_slowAlloc();
}

uint64_t sub_1D43D7B90()
{
  return swift_arrayDestroy();
}

uint64_t sub_1D43D7BA0()
{
  return sub_1D451B1A8();
}

uint64_t sub_1D43D7BAC()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1D43D7BB8()
{
  return swift_getAssociatedTypeWitness();
}

void sub_1D43D7BC4()
{
  sub_1D42C0CC0();
}

uint64_t sub_1D43D7BCC()
{
  uint64_t v0;
  uint64_t result;

  sub_1D42B8E84();
  result = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 112) = MEMORY[0x1E0DEE9D8];
  return result;
}

void sub_1D43D7C04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  void *v9;
  void *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  void *v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __int128 v30[2];
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41[4];
  _QWORD v42[16];

  sub_1D42CB740();
  v2 = v1;
  sub_1D43E015C(v3, v42);
  v4 = v0 + 112;
  sub_1D42B8E84();
  v5 = *(_QWORD *)(v0 + 112);
  sub_1D42CB6CC();
  sub_1D43E02F8(v42, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D43DF7EC);
  v6 = sub_1D43D865C(v5, v42);
  v8 = v7;
  sub_1D42B7204();
  if ((v8 & 1) != 0)
  {
    *(_QWORD *)(v2 + 32) = 0;
    *(_OWORD *)v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
    goto LABEL_6;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v6 < *(_QWORD *)(*(_QWORD *)v4 + 16))
  {
    sub_1D43DFFC8(*(_QWORD *)v4 + 160 * v6 + 32, (uint64_t)v31, &qword_1EFE4FCA0);
    sub_1D42B8E84();
    sub_1D43FAD68(v6, v20);
    swift_endAccess();
    sub_1D43E1568(v20[0], v20[1], v21, v22, v23, v24, v25, v26, v27, v28, v29);
    sub_1D42B5400((uint64_t)v30);
    v9 = (void *)v31[0];
    v10 = (void *)v31[1];
    v11 = v32;
    v12 = v33;
    v13 = v34;
    v14 = v35;
    v16 = v36;
    v15 = v37;
    v18 = v39;
    v19 = v38;
    v17 = v40;
    sub_1D42E33E0(v41, (uint64_t)v30);
    sub_1D43DF924(v9, v10, v11, v12, v13, v14, v16, v15, v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v17, *((unint64_t *)&v17 + 1));
    sub_1D42E33E0(v30, v2);
LABEL_6:
    sub_1D42CB520();
    return;
  }
  __break(1u);
}

void sub_1D43D7DB0()
{
  sub_1D42CB740();
  __asm { BR              X11 }
}

uint64_t sub_1D43D7EAC@<X0>(uint64_t a1@<X0>, char a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X5>, void *a6@<X6>, uint64_t a7@<X7>, __n128 *a8@<X8>, __n128 a9@<Q0>, __n128 a10@<Q1>, __n128 a11@<Q2>)
{
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char v31;
  uint64_t v32;
  void *v33;
  void *v34;
  char v35;
  void *v36;
  uint64_t v37;
  char v38;
  char v39;
  void *v40;
  uint64_t v41;
  void *v42;
  void *v43;
  char v44;
  uint64_t v45;
  char v46;
  void *v47;
  void *v48;
  void *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v80;
  char v81;
  uint64_t v82;
  void *v85;
  uint64_t v90;
  __int128 v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  __int128 v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  char v111;
  uint64_t v112;

  v85 = v11;
  v82 = a11.n128_i64[1];
  if (v19 >> 61)
  {
    v81 = v20 & 1;
    v46 = v23 & 1;
    v47 = v25;
    v48 = v16;
    v49 = v12;
    v51 = v13;
    v52 = v14;
    v53 = v15;
    sub_1D42B5CE4(v47, v48, v46);
    sub_1D42B5CF4(v82, a9.n128_i64[0], a9.n128_i64[1], a10.n128_i64[0], a10.n128_i64[1], v24, v81);
    swift_bridgeObjectRetain();
    sub_1D43DF7EC(v85, v49, a2, a3, a4, a5, v18, a7, v90, v51, v22, v52, v53, v19);
    sub_1D43E14B4();
    v39 = 0;
  }
  else
  {
    *(_QWORD *)&v105 = v25;
    *((_QWORD *)&v105 + 1) = v16;
    v106 = v23 & 1;
    v107 = v26;
    v108 = v17;
    a8[3] = a11;
    a8[4] = a9;
    a8[5] = a10;
    v109 = a6;
    v110 = v24;
    v111 = v20 & 1;
    v112 = v21;
    *(_QWORD *)&v91 = v11;
    *((_QWORD *)&v91 + 1) = v12;
    v92 = a2 & 1;
    v93 = a3;
    v94 = a4;
    v95 = a5;
    v96 = v18;
    v97 = a7;
    v98 = v90;
    v99 = v13;
    v100 = v22;
    v101 = v14;
    v102 = v15;
    v103 = v19 & 1;
    v104 = a1;
    sub_1D43DF7EC(v11, v12, a2, a3, a4, a5, v18, a7, v90, v13, v22, v14, v15, v19);
    v27 = (void *)sub_1D43E12B8();
    v29 = v28;
    v77 = v28;
    sub_1D43DF7EC(v27, v30, v31, v26, v17, a6, v28, v32, v55, v58, v63, v68, v24, v20);
    v33 = (void *)sub_1D43E12B8();
    sub_1D43DF7EC(v33, v34, v35, v26, v17, a6, v29, v82, v56, v59, v64, v69, v24, v20);
    sub_1D43E13C0();
    sub_1D43DF7EC(v85, v36, a2, v37, a4, a5, v18, a7, v90, v60, v65, v70, v73, v75);
    sub_1D43EF5FC(&v105, &v91);
    v80 = v18;
    v39 = v38;
    sub_1D43E14B4();
    sub_1D43E13C0();
    sub_1D43DF924(v85, v40, a2, v41, a4, a5, v80, a7, v90, v61, v66, v71, v74, v76);
    v42 = (void *)sub_1D43E12B8();
    sub_1D43DF924(v42, v43, v44, v45, v17, a6, v77, v82, v57, v62, v67, v72, v24, v20);
  }
  return v39 & 1;
}

uint64_t sub_1D43D865C(uint64_t a1, _QWORD *a2)
{
  __int128 __dst;
  uint64_t v6;

  sub_1D43E015C(a2, &__dst);
  if (*(_QWORD *)(a1 + 16))
  {
    v6 = 0;
    __asm { BR              X9 }
  }
  sub_1D43E02F8(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D43DF924);
  return 0;
}

uint64_t sub_1D43DA11C()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

void sub_1D43DA140()
{
  __asm { BR              X10 }
}

uint64_t sub_1D43DA1A0()
{
  sub_1D43E161C();
  return sub_1D43EF984();
}

uint64_t sub_1D43DA3E0(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v10;

  if (a1 == 0xD000000000000013 && a2 == 0x80000001D4553720 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x7455686365657073 && a2 == 0xEF65636E61726574;
    if (v5 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v6 = a1 == 0x6D45686365657073 && a2 == 0xED00006E6F69746FLL;
      if (v6 || (sub_1D451B820() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v7 = a1 == 0x76654C6F69647561 && a2 == 0xEA00000000006C65;
        if (v7 || (sub_1D451B820() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v8 = a1 == 0x69536D617A616873 && a2 == 0xEF65727574616E67;
          if (v8 || (sub_1D451B820() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v9 = a1 == 0x746544646E756F73 && a2 == 0xEE006E6F69746365;
            if (v9 || (sub_1D451B820() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0xD000000000000012 && a2 == 0x80000001D4553740)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v10 = sub_1D451B820();
              swift_bridgeObjectRelease();
              if ((v10 & 1) != 0)
                return 6;
              else
                return 7;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1D43DA744(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1D43DA780 + 4 * byte_1D4536CA2[a1]))(0xD000000000000013, 0x80000001D4553720);
}

uint64_t sub_1D43DA780()
{
  return 0x7455686365657073;
}

uint64_t sub_1D43DA7A4()
{
  return 0x6D45686365657073;
}

uint64_t sub_1D43DA7C8()
{
  return 0x76654C6F69647561;
}

uint64_t sub_1D43DA7E4()
{
  return 0x69536D617A616873;
}

uint64_t sub_1D43DA808()
{
  return 0x746544646E756F73;
}

unint64_t sub_1D43DA82C()
{
  return 0xD000000000000012;
}

void sub_1D43DA848(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[8];
  _BYTE v36[8];
  _BYTE v37[8];
  _BYTE v38[8];
  _BYTE v39[8];
  uint64_t v40;

  v3 = sub_1D42B28FC(&qword_1EFE4FE80);
  sub_1D42BA240(v3, (uint64_t)&v40);
  sub_1D42BA18C(v4);
  MEMORY[0x1E0C80A78](v5);
  sub_1D42BE768();
  sub_1D42BA180(v6);
  v34 = sub_1D42B28FC(&qword_1EFE4FE88);
  sub_1D42BA18C(*(_QWORD *)(v34 - 8));
  MEMORY[0x1E0C80A78](v7);
  sub_1D42BE768();
  sub_1D42BA180(v8);
  v9 = sub_1D42B28FC(&qword_1EFE4FE90);
  sub_1D42BA240(v9, (uint64_t)v39);
  sub_1D42BA18C(v10);
  MEMORY[0x1E0C80A78](v11);
  sub_1D42BE768();
  sub_1D42BA180(v12);
  v13 = sub_1D42B28FC(&qword_1EFE4FE98);
  sub_1D42BA240(v13, (uint64_t)v36);
  sub_1D42BA18C(v14);
  MEMORY[0x1E0C80A78](v15);
  sub_1D42BE768();
  sub_1D42BA180(v16);
  v17 = sub_1D42B28FC(&qword_1EFE4FEA0);
  sub_1D42BA240(v17, (uint64_t)v35);
  sub_1D42BA18C(v18);
  MEMORY[0x1E0C80A78](v19);
  sub_1D42BE768();
  sub_1D42BA180(v20);
  v21 = sub_1D42B28FC(&qword_1EFE4FEA8);
  sub_1D42BA240(v21, (uint64_t)v37);
  sub_1D42BA18C(v22);
  MEMORY[0x1E0C80A78](v23);
  sub_1D42CB210();
  v24 = sub_1D42B28FC(&qword_1EFE4FEB0);
  sub_1D42BA240(v24, (uint64_t)v38);
  sub_1D42BA18C(v25);
  MEMORY[0x1E0C80A78](v26);
  sub_1D42BE768();
  sub_1D42BA180(v27);
  sub_1D42B28FC((uint64_t *)&unk_1EFE4FEB8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v28);
  sub_1D42BE768();
  v29 = *(_QWORD *)(v1 + 104);
  v30 = a1[3];
  v31 = a1;
  v33 = v32;
  sub_1D42B5528(v31, v30);
  sub_1D43E0410();
  v40 = v33;
  sub_1D451BA24();
  __asm { BR              X10 }
}

void sub_1D43DAAE4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  int v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, _QWORD);

  *(_QWORD *)(v24 - 504) = v22;
  v25 = v22 & 1;
  v26 = v21;
  *(_QWORD *)(v24 - 328) = HIDWORD(v21);
  *(_QWORD *)(v24 - 488) = v21;
  *(_QWORD *)(v24 - 512) = v23;
  v27 = v23 & 1;
  *(_QWORD *)(v24 - 336) = v27;
  *(_BYTE *)(v24 - 208) = 0;
  v28 = *(void **)(v24 - 224);
  *(_QWORD *)(v24 - 496) = v20;
  sub_1D42B5CE4(v28, v20, v25);
  v29 = *(_QWORD *)(v24 - 272);
  v30 = *(_QWORD *)(v24 - 304);
  v31 = *(_QWORD *)(v24 - 312);
  sub_1D42B5CF4(v29, v30, *(_QWORD *)(v24 - 280), v31, *(_QWORD *)(v24 - 288), *(_QWORD *)(v24 - 296), v27);
  sub_1D43E05B4();
  v32 = *(_QWORD *)(v24 - 320);
  swift_bridgeObjectRetain();
  v33 = *(_QWORD *)(v24 - 416);
  sub_1D43E14D8();
  v34 = *(_QWORD *)(v24 - 496);
  *(_QWORD *)(v24 - 208) = v28;
  *(_QWORD *)(v24 - 200) = v34;
  *(_BYTE *)(v24 - 192) = v25;
  *(_QWORD *)(v24 - 184) = *(_QWORD *)(v24 - 256);
  v35 = *(_QWORD *)(v24 - 328);
  *(_DWORD *)(v24 - 176) = v26;
  *(_DWORD *)(v24 - 172) = v35;
  sub_1D43E1624();
  *(_QWORD *)(v24 - 152) = v29;
  *(_QWORD *)(v24 - 144) = v30;
  v36 = v30;
  v37 = *(_QWORD *)(v24 - 280);
  *(_QWORD *)(v24 - 136) = v37;
  *(_QWORD *)(v24 - 128) = v31;
  v38 = *(_QWORD *)(v24 - 288);
  v39 = *(_QWORD *)(v24 - 296);
  *(_QWORD *)(v24 - 120) = v38;
  *(_QWORD *)(v24 - 112) = v39;
  *(_BYTE *)(v24 - 104) = *(_QWORD *)(v24 - 336);
  *(_QWORD *)(v24 - 96) = v32;
  sub_1D42B5BBC();
  v40 = *(_QWORD *)(v24 - 400);
  sub_1D43E13E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 408) + 8))(v33, v40);
  v41 = sub_1D43E1470();
  v42(v41, *(_QWORD *)(v24 - 216));
  sub_1D43DF924(*(void **)(v24 - 224), *(void **)(v24 - 496), *(_QWORD *)(v24 - 504), *(_QWORD *)(v24 - 256), *(_QWORD *)(v24 - 488), *(void **)(v24 - 248), *(_QWORD *)(v24 - 264), *(_QWORD *)(v24 - 272), v36, v37, v31, v38, v39, *(_QWORD *)(v24 - 512));
  sub_1D42BE844();
}

uint64_t sub_1D43DB0FC()
{
  sub_1D42BE9A8();
  sub_1D43DA140();
  return sub_1D42CB230();
}

void sub_1D43DB15C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _BYTE v43[8];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v2 = sub_1D42B28FC(&qword_1EFE4FDC0);
  sub_1D42BA240(v2, (uint64_t)&v45);
  sub_1D42BA18C(v3);
  MEMORY[0x1E0C80A78](v4);
  sub_1D42BE768();
  v5 = sub_1D42B28FC(&qword_1EFE4FDC8);
  sub_1D42BA240(v5, (uint64_t)&v47);
  sub_1D42BA18C(v6);
  MEMORY[0x1E0C80A78](v7);
  sub_1D42BE768();
  v8 = sub_1D42B28FC(&qword_1EFE4FDD0);
  sub_1D42BA240(v8, (uint64_t)&v46);
  sub_1D42BA18C(v9);
  MEMORY[0x1E0C80A78](v10);
  sub_1D42BE768();
  sub_1D42BA180(v11);
  v12 = sub_1D42B28FC(&qword_1EFE4FDD8);
  sub_1D42BA240(v12, (uint64_t)&v44);
  sub_1D42BA18C(v13);
  MEMORY[0x1E0C80A78](v14);
  sub_1D42BE768();
  v41 = sub_1D42B28FC(&qword_1EFE4FDE0);
  sub_1D42BA18C(*(_QWORD *)(v41 - 8));
  MEMORY[0x1E0C80A78](v15);
  sub_1D42BE768();
  v16 = sub_1D42B28FC(&qword_1EFE4FDE8);
  sub_1D42BA240(v16, (uint64_t)v43);
  sub_1D42BA18C(v17);
  MEMORY[0x1E0C80A78](v18);
  sub_1D42BE768();
  sub_1D42BA180(v19);
  v20 = sub_1D42B28FC(&qword_1EFE4FDF0);
  MEMORY[0x1E0C80A78](v20);
  sub_1D42CB210();
  v21 = sub_1D42B28FC(&qword_1EFE4FDF8);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  sub_1D42CB210();
  v25 = v24 - v23;
  v42 = a1;
  sub_1D42B5528(a1, a1[3]);
  sub_1D43E0410();
  v26 = v44;
  sub_1D451BA0C();
  if (v26)
  {
    v27 = (uint64_t)a1;
  }
  else
  {
    v40 = v22;
    v44 = v25;
    v28 = sub_1D451B6D0();
    v29 = *(_QWORD *)(v28 + 16);
    v30 = v21;
    if (v29)
    {
      v31 = *(unsigned __int8 *)(v28 + 32);
      sub_1D43B7948(1, v29, v28, v28 + 32, 0, (2 * v29) | 1);
      v33 = v32;
      v35 = v34;
      swift_bridgeObjectRelease();
      if (v33 == v35 >> 1)
        __asm { BR              X9 }
      v27 = (uint64_t)v42;
      v30 = v21;
    }
    else
    {
      v27 = (uint64_t)a1;
    }
    v36 = v44;
    v37 = sub_1D451B460();
    sub_1D42B6D0C();
    v39 = v38;
    sub_1D42B28FC(&qword_1EFE49ED0);
    *v39 = &unk_1E97AA920;
    sub_1D451B61C();
    sub_1D451B454();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v39, *MEMORY[0x1E0DEC450], v37);
    swift_willThrow();
    sub_1D4371170();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v36, v30);
  }
  sub_1D42B5400(v27);
  sub_1D42BE844();
}

uint64_t sub_1D43DB994()
{
  sub_1D43E0500();
  return sub_1D451BA3C();
}

uint64_t sub_1D43DB9BC()
{
  sub_1D43E0500();
  return sub_1D451BA48();
}

uint64_t sub_1D43DB9E4()
{
  unsigned __int8 *v0;

  return sub_1D43DA744(*v0);
}

uint64_t sub_1D43DB9EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D43DA3E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D43DBA10()
{
  sub_1D43E0410();
  return sub_1D451BA3C();
}

uint64_t sub_1D43DBA38()
{
  sub_1D43E0410();
  return sub_1D451BA48();
}

uint64_t sub_1D43DBA60()
{
  sub_1D43E044C();
  return sub_1D451BA3C();
}

uint64_t sub_1D43DBA88()
{
  sub_1D43E044C();
  return sub_1D451BA48();
}

uint64_t sub_1D43DBAB0()
{
  sub_1D43E04C4();
  return sub_1D451BA3C();
}

uint64_t sub_1D43DBAD8()
{
  sub_1D43E04C4();
  return sub_1D451BA48();
}

uint64_t sub_1D43DBB00()
{
  sub_1D43E05B4();
  return sub_1D451BA3C();
}

uint64_t sub_1D43DBB28()
{
  sub_1D43E05B4();
  return sub_1D451BA48();
}

uint64_t sub_1D43DBB50()
{
  sub_1D43E0488();
  return sub_1D451BA3C();
}

uint64_t sub_1D43DBB78()
{
  sub_1D43E0488();
  return sub_1D451BA48();
}

uint64_t sub_1D43DBBA0()
{
  sub_1D43E053C();
  return sub_1D451BA3C();
}

uint64_t sub_1D43DBBC8()
{
  sub_1D43E053C();
  return sub_1D451BA48();
}

uint64_t sub_1D43DBBF0()
{
  sub_1D43E0578();
  return sub_1D451BA3C();
}

uint64_t sub_1D43DBC18()
{
  sub_1D43E0578();
  return sub_1D451BA48();
}

uint64_t sub_1D43DBC48()
{
  sub_1D451B958();
  sub_1D43DA140();
  return sub_1D451B994();
}

void sub_1D43DBCB0(_QWORD *a1)
{
  sub_1D43DB15C(a1);
}

void sub_1D43DBCC4(_QWORD *a1)
{
  sub_1D43DA848(a1);
}

uint64_t sub_1D43DBCDC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[58] = a2;
  v3[59] = v2;
  v3[57] = a1;
  v3[60] = *v2;
  return sub_1D438E840();
}

uint64_t sub_1D43DBCFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D43DC1E8(v0 + 136);
  v1 = *(_QWORD *)(v0 + 472);
  sub_1D43E015C((void *)(v0 + 136), (void *)(v0 + 16));
  sub_1D43E015C((void *)(v0 + 16), (void *)(v0 + 256));
  v2 = v1 + OBJC_IVAR____TtC13SoundAnalysis27SNSystemAudioAnalyzerRemote_audioConfiguration;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13SoundAnalysis27SNSystemAudioAnalyzerRemote_audioConfiguration);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13SoundAnalysis27SNSystemAudioAnalyzerRemote_audioConfiguration + 8);
  *(_QWORD *)(v0 + 488) = v3;
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v0 + 496) = v6;
  v7 = *(_QWORD *)(v2 + 32);
  v8 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v0 + 504) = v8;
  v9 = *(_BYTE *)(v2 + 48);
  v10 = *(_BYTE *)(v2 + 49);
  v11 = *(_BYTE *)(v2 + 50);
  v12 = *(_BYTE *)(v2 + 51);
  v13 = *(_BYTE *)(v2 + 52);
  v14 = *(_BYTE *)(v2 + 53);
  v15 = *(_QWORD *)(v2 + 56);
  LOBYTE(v2) = *(_BYTE *)(v2 + 64);
  *(_QWORD *)(v0 + 376) = v4;
  *(_QWORD *)(v0 + 384) = v3;
  *(_QWORD *)(v0 + 392) = v5;
  *(_QWORD *)(v0 + 400) = v6;
  *(_QWORD *)(v0 + 408) = v7;
  *(_QWORD *)(v0 + 416) = v8;
  *(_BYTE *)(v0 + 424) = v9;
  *(_BYTE *)(v0 + 425) = v10;
  *(_BYTE *)(v0 + 426) = v11;
  *(_BYTE *)(v0 + 427) = v12;
  *(_BYTE *)(v0 + 428) = v13;
  *(_BYTE *)(v0 + 429) = v14;
  *(_QWORD *)(v0 + 432) = v15;
  *(_BYTE *)(v0 + 440) = v2;
  v16 = v1 + OBJC_IVAR____TtC13SoundAnalysis27SNSystemAudioAnalyzerRemote_environment;
  swift_bridgeObjectRetain();
  sub_1D42CB7F8();
  sub_1D42D71EC();
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 512) = v17;
  *v17 = v0;
  v17[1] = sub_1D43DBEA8;
  v18 = sub_1D42F1F54();
  return sub_1D43DC5D4(v18, v19, v16);
}

uint64_t sub_1D43DBEA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v6;

  v6 = *v2;
  v4 = v6;
  sub_1D42E3E84(&v6);
  *(_QWORD *)(v4 + 520) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_1D42BE8B4();
    sub_1D42B7204();
  }
  else
  {
    sub_1D42CB0C4();
    sub_1D42B7204();
    *(_QWORD *)(v4 + 528) = a1;
  }
  sub_1D42B8EC8();
  return sub_1D43E142C();
}

uint64_t sub_1D43DBF30()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0[59];
  v2 = v0[57];
  v0[56] = v0[66];
  v3 = sub_1D42B6F40();
  sub_1D43E1688();
  v4 = sub_1D42B6F40();
  swift_weakInit();
  v5 = (_QWORD *)sub_1D42B6F40();
  v5[2] = v4;
  v5[3] = v2;
  v5[4] = v3;
  v6 = sub_1D42B6F40();
  sub_1D43E1688();
  v7 = sub_1D42B6F40();
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v2;
  sub_1D4311FD0();
  swift_retain();
  sub_1D42B28FC((uint64_t *)&unk_1EFE4FCF0);
  sub_1D42BE210(&qword_1EFE4FAF0, (uint64_t *)&unk_1EFE4FCF0, MEMORY[0x1E0C95D90]);
  v0[67] = sub_1D451A344();
  sub_1D42E3F48();
  swift_release();
  swift_release();
  v0[68] = *(_QWORD *)(v1 + OBJC_IVAR____TtC13SoundAnalysis27SNSystemAudioAnalyzerRemote_state);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_1D43DC0B0()
{
  uint64_t v0;

  sub_1D43E0204((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 536));
  swift_release();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43DC0F4()
{
  uint64_t v0;

  swift_release();
  sub_1D43E02F8((_QWORD *)(v0 + 16), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D43DF924);
  sub_1D42BE93C();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D43DC140()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;

  sub_1D43E02F8((_QWORD *)(v0 + 16), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D43DF924);
  v1 = *(void **)(v0 + 520);
  if ((objc_msgSend(*(id *)(v0 + 464), sel_respondsToSelector_, sel_request_didFailWithError_) & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 456);
    v2 = *(void **)(v0 + 464);
    swift_unknownObjectRetain();
    v4 = (void *)sub_1D4519A98();
    objc_msgSend(v2, sel_request_didFailWithError_, v3, v4);

    swift_unknownObjectRelease();
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1D43DC1E8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  void *v64;
  void *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  void *v105;

  v7 = v1;
  type metadata accessor for _SNClassifySoundRequest();
  v9 = sub_1D43E1254();
  v94 = (_QWORD *)a1;
  v95 = v1;
  if (v9)
  {
    v10 = (void *)sub_1D43E1480((uint64_t *)(v9 + OBJC_IVAR____SNClassifySoundRequest_impl));
    a1 = v11[7];
    v101 = v11[6];
    v12 = v11[8];
    v6 = v11[9];
    sub_1D43E1350(v10, v13, v14);
    v99 = v12;
    v100 = a1;
    sub_1D43E1504(a1, v12, v6);
  }
  else
  {
    v97 = 0;
    v105 = 0;
    v102 = 0;
    v96 = 0;
    v103 = 0;
    v104 = 0;
    sub_1D43E1138();
    v3 = 0x1FFFFFFFELL;
  }
  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {
    sub_1D43E1344();
    v15 = sub_1D43EF79C();
    sub_1D43E1324(v97, v105, v102, v96, v16, v103, v17, v18, v99, v6, v2, v1, v5, v3, v4, v15, (uint64_t)v94, v1, v96,
      (uint64_t)v97,
      v99,
      v100,
      v101);
    sub_1D42E3CB4();
    v19 = (void *)sub_1D43E1480((uint64_t *)(v15 + OBJC_IVAR____SNClassifySoundRequest_impl));
    v21 = v20[7];
    v101 = v20[6];
    v22 = v20[8];
    a1 = v20[9];
    sub_1D43E1350(v19, v23, v24);
    v99 = v22;
    v100 = v21;
    v25 = v22;
    v6 = a1;
    sub_1D43E1504(v21, v25, a1);

  }
  type metadata accessor for SNDetectSpeechUtteranceRequest();
  if (sub_1D43E1254())
  {
    sub_1D43E1344();
    sub_1D43E1324(v97, v105, v102, v96, v26, v103, v27, v28, v99, v6, v2, v1, v5, v3, v4, (uint64_t)v93, (uint64_t)v94, v95, v96,
      (uint64_t)v97,
      v99,
      v100,
      v101);
    v29 = *(char **)(a1 + OBJC_IVAR___SNDetectSpeechUtteranceRequest_impl);
    sub_1D42E3CB4();
    v105 = 0;
    v102 = 0;
    v103 = 0;
    v30 = 0;
    v104 = 0;
    sub_1D43E1138();
    v3 = 0x2000000000000000;
  }
  else
  {
    v30 = v96;
    v29 = v97;
  }
  type metadata accessor for SNEstimateSpeechEmotionRequest();
  if (sub_1D43E1254())
  {
    v31 = sub_1D43E1380();
    sub_1D43E1288(v31, v32, v33, v34, v35, v36, v37, v38, v86, v87, v88, v89, v90, v91, v92, (uint64_t)v93, (uint64_t)v94, v95, v96,
      (uint64_t)v97,
      v99,
      v100,
      v101);
    sub_1D42E3CB4();
    v29 = 0;
    v105 = 0;
    v102 = 0;
    v103 = 0;
    v30 = 0;
    v104 = 0;
    sub_1D43E1138();
    v3 = 0xA000000000000000;
  }
  type metadata accessor for SNMeasureLKFSRequest();
  if (sub_1D43E1254())
  {
    v39 = sub_1D43E1380();
    sub_1D43E1288(v39, v40, v41, v42, v43, v44, v45, v46, v86, v87, v88, v89, v90, v91, v92, (uint64_t)v93, (uint64_t)v94, v95, v96,
      (uint64_t)v97,
      v99,
      v100,
      v101);
    sub_1D42E3CB4();
    v105 = 0;
    v102 = 0;
    v103 = 0;
    v30 = 0;
    v104 = 0;
    v100 = 0;
    v101 = 0;
    v6 = 0;
    v2 = 0;
    v7 = 0;
    v5 = 0;
    v4 = 0;
    v3 = 0xA000000000000000;
    v98 = 1;
    v99 = 0;
  }
  else
  {
    v98 = (uint64_t)v29;
  }
  type metadata accessor for SNGenerateShazamSignatureRequest();
  if (sub_1D43E1254())
  {
    v47 = sub_1D43E1344();
    sub_1D43E108C(v47, v48, v49, v50, v51, v52, v53, v54, v86, v87, v88, v89, v90, v91, v92, (uint64_t)v93, (uint64_t)v94, v95, v96,
      (void *)v98,
      v99,
      v100,
      v101);
    v98 = *(_QWORD *)&v29[OBJC_IVAR___SNGenerateShazamSignatureRequest_impl];
    v105 = *(void **)&v29[OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 8];
    v30 = *(_QWORD *)&v29[OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 24];
    v104 = *(_QWORD *)&v29[OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 32];
    v102 = *(_QWORD *)&v29[OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 16];
    v103 = *(void **)&v29[OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 40];
    v101 = *(_QWORD *)&v29[OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 48];
    sub_1D42E3CB4();
    v99 = 0;
    v100 = 0;
    sub_1D43E1198();
    v3 = 0x4000000000000000;
  }
  type metadata accessor for SNDetectSoundRequest();
  if (sub_1D43E1254())
  {
    v55 = sub_1D43E1344();
    sub_1D43E108C(v55, v56, v57, v58, v59, v60, v61, v62, v86, v87, v88, v89, v90, v91, v92, (uint64_t)v93, (uint64_t)v94, v95, v96,
      (void *)v98,
      v99,
      v100,
      v101);
    v63 = &v29[OBJC_IVAR___SNDetectSoundRequest_impl];
    v64 = *(void **)&v29[OBJC_IVAR___SNDetectSoundRequest_impl];
    v65 = *(void **)&v29[OBJC_IVAR___SNDetectSoundRequest_impl + 8];
    v30 = *(_QWORD *)&v29[OBJC_IVAR___SNDetectSoundRequest_impl + 24];
    v7 = *(_QWORD *)&v29[OBJC_IVAR___SNDetectSoundRequest_impl + 32];
    v29 = *(char **)&v29[OBJC_IVAR___SNDetectSoundRequest_impl + 40];
    v102 = v63[16];
    v98 = (uint64_t)v64;
    v105 = v65;
    sub_1D42B633C(v64, v65, v63[16]);
    v104 = v7;
    sub_1D42CB7B8();
    v103 = v29;
    v66 = v29;
    sub_1D42E3CB4();
    sub_1D43E1138();
    v3 = 0x6000000000000000;
  }
  type metadata accessor for SNEstimateDirectionOfArrivalRequest();
  if (sub_1D43E1254())
  {
    v67 = sub_1D43E1344();
    sub_1D43E108C(v67, v68, v69, v70, v71, v72, v73, v74, v86, v87, v88, v89, v90, v91, v92, (uint64_t)v93, (uint64_t)v94, v95, v96,
      (void *)v98,
      v99,
      v100,
      v101);
    v75 = &v29[OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl];
    v76 = *(_QWORD *)&v29[OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl];
    v77 = (void *)*((_QWORD *)v75 + 1);
    swift_bridgeObjectRetain();
    sub_1D42E3CB4();
    sub_1D43E1198();
    v3 = 0x8000000000000000;
  }
  else
  {
    v76 = v98;
    v84 = v99;
    v78 = v30;
    v77 = v105;
    v80 = v103;
    v79 = v104;
    v81 = v102;
    v83 = v100;
    v82 = v101;
    if (v3 >> 1 == 0xFFFFFFFF)
    {
      sub_1D43E0048();
      sub_1D42B6D0C();
      *v85 = 1;
      swift_willThrow();
      return;
    }
  }
  *v94 = v76;
  v94[1] = v77;
  v94[2] = v81;
  v94[3] = v78;
  v94[4] = v79;
  v94[5] = v80;
  v94[6] = v82;
  v94[7] = v83;
  v94[8] = v84;
  v94[9] = v6;
  v94[10] = v2;
  v94[11] = v7;
  v94[12] = v5;
  v94[13] = v3;
  v94[14] = v4;
}

uint64_t sub_1D43DC5D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v3 + 264) = a3;
  v6 = sub_1D42B28FC((uint64_t *)&unk_1EFE4E3A0);
  *(_QWORD *)(v3 + 272) = v6;
  *(_QWORD *)(v3 + 280) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 288) = sub_1D42F9B80();
  v7 = sub_1D42B28FC((uint64_t *)&unk_1EFE4A770);
  *(_QWORD *)(v3 + 296) = v7;
  *(_QWORD *)(v3 + 304) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v3 + 312) = sub_1D42F9B80();
  v8 = sub_1D42B28FC(&qword_1EFE4FD08);
  *(_QWORD *)(v3 + 320) = v8;
  *(_QWORD *)(v3 + 328) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v3 + 336) = sub_1D42F9B80();
  v9 = sub_1D42B28FC(&qword_1EFE4FD10);
  *(_QWORD *)(v3 + 344) = v9;
  *(_QWORD *)(v3 + 352) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v3 + 360) = sub_1D42F9B80();
  v10 = sub_1D42B28FC(&qword_1EFE4FD18);
  *(_QWORD *)(v3 + 368) = v10;
  *(_QWORD *)(v3 + 376) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v3 + 384) = sub_1D42F9B80();
  v11 = sub_1D42B28FC(&qword_1EFE4FD20);
  *(_QWORD *)(v3 + 392) = v11;
  *(_QWORD *)(v3 + 400) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v3 + 408) = sub_1D42F9B80();
  v12 = sub_1D42B28FC(&qword_1EFE4FD28);
  *(_QWORD *)(v3 + 416) = v12;
  *(_QWORD *)(v3 + 424) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v3 + 432) = sub_1D42F9B80();
  *(_QWORD *)(v3 + 440) = type metadata accessor for RemoteRequest();
  *(_QWORD *)(v3 + 448) = sub_1D438C5D0();
  *(_QWORD *)(v3 + 456) = sub_1D438C5D0();
  *(_QWORD *)(v3 + 464) = sub_1D438C5D0();
  *(_QWORD *)(v3 + 472) = sub_1D438C5D0();
  *(_QWORD *)(v3 + 480) = sub_1D438C5D0();
  *(_QWORD *)(v3 + 488) = sub_1D438C5D0();
  *(_QWORD *)(v3 + 496) = sub_1D438C5D0();
  v13 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v3 + 504) = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 520) = v13;
  v14 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v3 + 536) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v3 + 552) = v14;
  v15 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v3 + 568) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v3 + 584) = v15;
  *(_OWORD *)(v3 + 600) = *(_OWORD *)(a1 + 96);
  *(_QWORD *)(v3 + 616) = *(_QWORD *)(a1 + 112);
  v16 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(v3 + 624) = *(_QWORD *)a2;
  *(_QWORD *)(v3 + 632) = v16;
  v17 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v3 + 640) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(v3 + 648) = v17;
  *(_OWORD *)(v3 + 656) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(v3 + 201) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(v3 + 202) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(v3 + 203) = *(_BYTE *)(a2 + 50);
  *(_BYTE *)(v3 + 204) = *(_BYTE *)(a2 + 51);
  *(_BYTE *)(v3 + 205) = *(_BYTE *)(a2 + 52);
  *(_BYTE *)(v3 + 206) = *(_BYTE *)(a2 + 53);
  *(_QWORD *)(v3 + 672) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(v3 + 207) = *(_BYTE *)(a2 + 64);
  sub_1D42B8EC8();
  return sub_1D43E142C();
}

void sub_1D43DC7CC()
{
  __asm { BR              X11 }
}

uint64_t sub_1D43DC814()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  const void *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v46;

  v3 = *(_BYTE *)(v0 + 207);
  v4 = *(_QWORD *)(v0 + 672);
  v5 = *(_BYTE *)(v0 + 206);
  v6 = *(_BYTE *)(v0 + 205);
  v7 = *(_BYTE *)(v0 + 204);
  v8 = *(_BYTE *)(v0 + 203);
  v9 = *(_BYTE *)(v0 + 202);
  v10 = *(_BYTE *)(v0 + 201);
  v11 = *(_QWORD *)(v0 + 664);
  v12 = *(_QWORD *)(v0 + 656);
  v13 = *(_QWORD *)(v0 + 648);
  *(_QWORD *)(v2 - 112) = v13;
  v14 = *(_QWORD *)(v0 + 640);
  v15 = *(_QWORD *)(v0 + 632);
  *(_QWORD *)(v2 - 128) = v11;
  *(_QWORD *)(v2 - 120) = v15;
  v16 = *(_QWORD *)(v0 + 624);
  v17 = *(_QWORD *)(v0 + 616);
  v18 = *(_QWORD *)(v0 + 600);
  v19 = *(_QWORD *)(v0 + 592);
  v20 = *(_QWORD *)(v0 + 584);
  v21 = *(_QWORD *)(v0 + 536);
  v22 = *(_QWORD *)(v0 + 520);
  v23 = v22;
  *(_QWORD *)(v2 - 152) = v21;
  *(_QWORD *)(v2 - 144) = v22;
  *(_BYTE *)(v0 + 32) = v22 & 1;
  *(_QWORD *)(v0 + 48) = v21;
  *(_BYTE *)(v0 + 120) = v1 & 1;
  v24 = *(_QWORD *)(v0 + 576);
  *(_QWORD *)(v0 + 128) = v17;
  *(_QWORD *)(v0 + 136) = v16;
  v25 = *(_QWORD *)(v0 + 568);
  *(_QWORD *)(v0 + 144) = v15;
  *(_QWORD *)(v0 + 152) = v14;
  v26 = *(_QWORD *)(v0 + 560);
  *(_QWORD *)(v0 + 160) = v13;
  *(_QWORD *)(v0 + 168) = v12;
  v27 = *(_QWORD *)(v0 + 552);
  *(_BYTE *)(v0 + 184) = v10;
  v28 = *(_QWORD *)(v0 + 544);
  *(_BYTE *)(v0 + 185) = v9;
  v29 = *(_QWORD *)(v0 + 528);
  *(_BYTE *)(v0 + 186) = v8;
  v31 = *(void **)(v0 + 504);
  v30 = *(void **)(v0 + 512);
  *(_BYTE *)(v0 + 187) = v7;
  *(_BYTE *)(v0 + 188) = v6;
  v32 = *(_QWORD *)(v0 + 496);
  *(_BYTE *)(v0 + 189) = v5;
  v33 = *(_QWORD *)(v0 + 440);
  *(_QWORD *)(v2 - 96) = v32;
  *(_QWORD *)(v2 - 88) = v33;
  *(_QWORD *)(v0 + 192) = v4;
  *(_QWORD *)(v0 + 16) = v31;
  *(_QWORD *)(v2 - 104) = v0 + 16;
  *(_BYTE *)(v0 + 200) = v3;
  *(_QWORD *)(v2 - 136) = *(_QWORD *)(v0 + 264);
  *(_QWORD *)(v0 + 24) = v30;
  *(_QWORD *)(v0 + 40) = v29;
  *(_QWORD *)(v0 + 56) = v28;
  *(_QWORD *)(v0 + 64) = v27;
  *(_QWORD *)(v0 + 72) = v26;
  *(_QWORD *)(v0 + 80) = v25;
  *(_QWORD *)(v0 + 88) = v24;
  *(_QWORD *)(v0 + 96) = v20;
  *(_QWORD *)(v2 - 168) = v19;
  *(_QWORD *)(v2 - 160) = v20;
  *(_QWORD *)(v0 + 104) = v19;
  *(_QWORD *)(v0 + 112) = v18;
  v46 = v18;
  *(_QWORD *)(v0 + 176) = v11;
  sub_1D43E14A0(v31, v30, v23, v15, v21, v18, v19, v20, v25, v24, v20, v19, v18, v1);
  sub_1D43E14A0(v31, v30, *(_QWORD *)(v2 - 144), v34, *(_QWORD *)(v2 - 152), v35, v36, v37, v25, v24, *(_QWORD *)(v2 - 160), *(_QWORD *)(v2 - 168), v46, v1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v38 = (_QWORD *)sub_1D42F1F54();
  sub_1D42B5528(v38, v39);
  v40 = *(_QWORD *)(v2 - 104);
  v41 = (void *)sub_1D42F1F54();
  memcpy(v41, v42, 0xB9uLL);
  swift_storeEnumTagMultiPayload();
  sub_1D43E0354(v40);
  *(_QWORD *)(v2 - 88) = (char *)&dword_1EFE4A120 + dword_1EFE4A120;
  v43 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 696) = v43;
  *v43 = v0;
  v43[1] = sub_1D43DD1B4;
  v44 = sub_1D43E1654(*(_QWORD *)(v0 + 496));
  return (*(uint64_t (**)(uint64_t))(v2 - 88))(v44);
}

uint64_t sub_1D43DD160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_1D430C4B8();
  sub_1D42E3E84(v3);
  *(_QWORD *)(v2 + 688) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 816) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D43DD1B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_1D430C4B8();
  sub_1D42E3E84(v3);
  *(_QWORD *)(v2 + 704) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 776) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D43DD208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_1D430C4B8();
  sub_1D42E3E84(v3);
  *(_QWORD *)(v2 + 720) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 784) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D43DD25C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_1D430C4B8();
  sub_1D42E3E84(v3);
  *(_QWORD *)(v2 + 736) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 824) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D43DD2B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_1D430C4B8();
  sub_1D42E3E84(v3);
  *(_QWORD *)(v2 + 752) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 832) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D43DD304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_1D430C4B8();
  sub_1D42E3E84(v3);
  *(_QWORD *)(v2 + 768) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 840) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D43DD358()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 776);
  v12 = *(_OWORD *)(v0 + 584);
  v13 = *(_OWORD *)(v0 + 600);
  v10 = *(_OWORD *)(v0 + 568);
  v15 = *(_QWORD *)(v0 + 552);
  v16 = *(_QWORD *)(v0 + 560);
  v14 = *(void **)(v0 + 544);
  v11 = *(_QWORD *)(v0 + 536);
  v7 = *(_QWORD *)(v0 + 520);
  v8 = *(_QWORD *)(v0 + 528);
  v3 = *(void **)(v0 + 504);
  v2 = *(void **)(v0 + 512);
  v4 = *(_QWORD *)(v0 + 432);
  v9 = *(_QWORD *)(v0 + 424);
  v5 = *(_QWORD *)(v0 + 416);
  sub_1D42B8C48(*(_QWORD *)(v0 + 496));
  sub_1D435C34C(v0 + 16);
  *(_QWORD *)(v0 + 240) = v1;
  swift_retain();
  sub_1D42B28FC(&qword_1EFE4FDA8);
  sub_1D42B28FC(&qword_1EFE4C690);
  sub_1D42BE210(&qword_1EFE4FDB0, &qword_1EFE4FDA8, MEMORY[0x1E0C95D90]);
  sub_1D451A308();
  swift_release();
  sub_1D42BE210(&qword_1EFE4FDB8, &qword_1EFE4FD28, MEMORY[0x1E0C95950]);
  v17 = sub_1D451A2E4();
  swift_release();
  sub_1D43DF924(v3, v2, v7, v8, v11, v14, v15, v16, v10, *((uint64_t *)&v10 + 1), v12, *((uint64_t *)&v12 + 1), v13, *((unint64_t *)&v13 + 1));
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v4, v5);
  sub_1D43E1388();
  swift_task_dealloc();
  sub_1D42E3E54();
  sub_1D438C1C4();
  sub_1D438C438();
  sub_1D438C490();
  sub_1D438E880();
  sub_1D438E878();
  sub_1D43E11FC();
  sub_1D43E11F4();
  sub_1D42E3E5C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1D43E164C();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v17);
}

uint64_t sub_1D43DD570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;

  v1 = *(_QWORD *)(v0 + 616);
  sub_1D43E143C();
  v32 = *(_QWORD *)(v0 + 560);
  v2 = *(_QWORD *)(v0 + 552);
  v3 = *(void **)(v0 + 544);
  v4 = *(_QWORD *)(v0 + 536);
  v5 = *(_QWORD *)(v0 + 528);
  v6 = *(_QWORD *)(v0 + 520);
  v8 = *(void **)(v0 + 504);
  v7 = *(void **)(v0 + 512);
  sub_1D42B8C48(*(_QWORD *)(v0 + 496));
  v9 = sub_1D435C34C(v0 + 16);
  sub_1D43E1578(v9, v10, v11, v12, v13, v14, v15, v16, v18, v20, v22, v24, v26, v28, v1, v30, v31);
  sub_1D43DF924(v8, v7, v6, v5, v4, v3, v2, v32, v19, v21, v23, v25, v27, v29);
  sub_1D43E1388();
  swift_task_dealloc();
  sub_1D42E3E54();
  sub_1D438C1C4();
  sub_1D438C438();
  sub_1D438C490();
  sub_1D438E880();
  sub_1D438E878();
  sub_1D43E11FC();
  sub_1D43E11F4();
  sub_1D42E3E5C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

#error "1D43DD780: call analysis failed (funcsize=58)"

uint64_t sub_1D43DD78C()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_1D43E1070();
  sub_1D43E12D4();
  sub_1D42B8C48(*(_QWORD *)(v0 + 488));
  sub_1D42CB0C4();
  sub_1D42BE8B4();
  sub_1D42B7204();
  sub_1D43E0FA4();
  sub_1D42E3E54();
  sub_1D438C1C4();
  sub_1D438C438();
  sub_1D438C490();
  sub_1D438E880();
  sub_1D438E878();
  sub_1D43E11FC();
  sub_1D43E11F4();
  sub_1D42E3E5C();
  sub_1D43E12FC();
  sub_1D43E12F4();
  sub_1D43E12EC();
  sub_1D43E12E4();
  v1 = (uint64_t (*)(void))sub_1D43E1544();
  return sub_1D43E1018(v1);
}

uint64_t sub_1D43DD804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_1D430C4B8();
  sub_1D42E3E84(v3);
  *(_QWORD *)(v2 + 800) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 808) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

#error "1D43DD94C: call analysis failed (funcsize=58)"

uint64_t sub_1D43DD958()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_1D43E1070();
  sub_1D43E12D4();
  sub_1D42B8C48(*(_QWORD *)(v0 + 480));
  sub_1D42CB0C4();
  sub_1D42BE8B4();
  sub_1D42B7204();
  sub_1D43E0FA4();
  sub_1D42E3E54();
  sub_1D438C1C4();
  sub_1D438C438();
  sub_1D438C490();
  sub_1D438E880();
  sub_1D438E878();
  sub_1D43E11FC();
  sub_1D43E11F4();
  sub_1D42E3E5C();
  sub_1D43E12FC();
  sub_1D43E12F4();
  sub_1D43E12EC();
  sub_1D43E12E4();
  v1 = (uint64_t (*)(void))sub_1D43E1544();
  return sub_1D43E1018(v1);
}

#error "1D43DDAC4: call analysis failed (funcsize=58)"

uint64_t sub_1D43DDAD0()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_1D43E1070();
  sub_1D43E12D4();
  sub_1D42B8C48(*(_QWORD *)(v0 + 472));
  sub_1D42CB0C4();
  sub_1D42BE8B4();
  sub_1D42B7204();
  sub_1D43E0FA4();
  sub_1D42E3E54();
  sub_1D438C1C4();
  sub_1D438C438();
  sub_1D438C490();
  sub_1D438E880();
  sub_1D438E878();
  sub_1D43E11FC();
  sub_1D43E11F4();
  sub_1D42E3E5C();
  sub_1D43E12FC();
  sub_1D43E12F4();
  sub_1D43E12EC();
  sub_1D43E12E4();
  v1 = (uint64_t (*)(void))sub_1D43E1544();
  return sub_1D43E1018(v1);
}

#error "1D43DDC3C: call analysis failed (funcsize=58)"

uint64_t sub_1D43DDC48()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_1D43E1070();
  sub_1D43E12D4();
  sub_1D42B8C48(*(_QWORD *)(v0 + 464));
  sub_1D42CB0C4();
  sub_1D42BE8B4();
  sub_1D42B7204();
  sub_1D43E0FA4();
  sub_1D42E3E54();
  sub_1D438C1C4();
  sub_1D438C438();
  sub_1D438C490();
  sub_1D438E880();
  sub_1D438E878();
  sub_1D43E11FC();
  sub_1D43E11F4();
  sub_1D42E3E5C();
  sub_1D43E12FC();
  sub_1D43E12F4();
  sub_1D43E12EC();
  sub_1D43E12E4();
  v1 = (uint64_t (*)(void))sub_1D43E1544();
  return sub_1D43E1018(v1);
}

uint64_t sub_1D43DDCC0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 832);
  v15 = *(_OWORD *)(v0 + 600);
  v13 = *(_OWORD *)(v0 + 568);
  v14 = *(_OWORD *)(v0 + 584);
  v16 = *(_QWORD *)(v0 + 552);
  v17 = *(_QWORD *)(v0 + 560);
  v2 = *(void **)(v0 + 544);
  v3 = *(_QWORD *)(v0 + 536);
  v4 = *(_QWORD *)(v0 + 520);
  v5 = *(void **)(v0 + 504);
  v6 = *(void **)(v0 + 512);
  v7 = *(_QWORD *)(v0 + 312);
  v11 = *(_QWORD *)(v0 + 528);
  v12 = *(_QWORD *)(v0 + 304);
  v9 = *(_QWORD *)(v0 + 296);
  sub_1D42B8C48(*(_QWORD *)(v0 + 456));
  sub_1D42B62C8(v5, v6, v4);
  sub_1D42BE8B4();

  sub_1D42CB338();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 208) = v1;
  swift_retain();
  sub_1D42B28FC((uint64_t *)&unk_1EFE4A780);
  sub_1D42B28FC(&qword_1EFE4C690);
  sub_1D42BE210((unint64_t *)&unk_1EFE4A790, (uint64_t *)&unk_1EFE4A780, MEMORY[0x1E0C95D90]);
  sub_1D451A308();
  sub_1D42E3F48();
  sub_1D42BE210(&qword_1EFE4FD40, (uint64_t *)&unk_1EFE4A770, MEMORY[0x1E0C95950]);
  v10 = sub_1D451A2E4();
  sub_1D42E3F48();
  sub_1D43DF924(v5, v6, v4, v11, v3, v2, v16, v17, v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((unint64_t *)&v15 + 1));
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v7, v9);
  sub_1D43E1408();
  swift_task_dealloc();
  sub_1D42E3E54();
  sub_1D438C1C4();
  sub_1D438C438();
  sub_1D438C490();
  sub_1D438E880();
  sub_1D438E878();
  sub_1D43E11FC();
  sub_1D43E11F4();
  sub_1D42E3E5C();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1D43E164C();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v10);
}

uint64_t sub_1D43DDF08()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_1D43E12D4();
  v30 = *(_QWORD *)(v0 + 616);
  sub_1D43E143C();
  v31 = *(_QWORD *)(v0 + 552);
  v32 = *(_QWORD *)(v0 + 560);
  v1 = *(void **)(v0 + 544);
  v2 = *(_QWORD *)(v0 + 536);
  v3 = *(_QWORD *)(v0 + 528);
  v4 = *(_QWORD *)(v0 + 520);
  v6 = *(void **)(v0 + 504);
  v5 = *(void **)(v0 + 512);
  sub_1D42B8C48(*(_QWORD *)(v0 + 456));
  sub_1D42B62C8(v6, v5, v4);
  sub_1D42CB338();

  sub_1D42CB0C4();
  sub_1D42BE8B4();
  v7 = sub_1D42B7204();
  sub_1D43E1578(v7, v8, v9, v10, v11, v12, v13, v14, v16, v18, v20, v22, v24, v26, v30, v28, v29);
  sub_1D43DF924(v6, v5, v4, v3, v2, v1, v31, v32, v17, v19, v21, v23, v25, v27);
  sub_1D43E1408();
  swift_task_dealloc();
  sub_1D42E3E54();
  sub_1D438C1C4();
  sub_1D438C438();
  sub_1D438C490();
  sub_1D438E880();
  sub_1D438E878();
  sub_1D43E11FC();
  sub_1D43E11F4();
  sub_1D42E3E5C();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1D43E164C();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

#error "1D43DE158: call analysis failed (funcsize=66)"

uint64_t sub_1D43DE164()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_1D43E1070();
  sub_1D43E12D4();
  sub_1D42B8C48(*(_QWORD *)(v0 + 448));
  swift_bridgeObjectRelease();
  sub_1D42CB0C4();
  sub_1D42BE8B4();
  sub_1D42B7204();
  sub_1D43E0FA4();
  sub_1D42E3E54();
  sub_1D438C1C4();
  sub_1D438C438();
  sub_1D438C490();
  sub_1D438E880();
  sub_1D438E878();
  sub_1D43E11FC();
  sub_1D43E11F4();
  sub_1D42E3E5C();
  sub_1D43E12FC();
  sub_1D43E12F4();
  sub_1D43E12EC();
  sub_1D43E12E4();
  v1 = (uint64_t (*)(void))sub_1D43E1544();
  return sub_1D43E1018(v1);
}

void sub_1D43DE1E8(void **a1, uint64_t a2, void *a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  void *v41;
  os_log_type_t type;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v5 = *a1;
  v6 = a4 + 16;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1D43DE814();
    swift_release();
  }
  swift_beginAccess();
  v7 = MEMORY[0x1D825E608](v6);
  if (v7)
  {
    v8 = (void *)v7;
    if (v5)
    {
      v9 = v5;
      if (qword_1EFE40338 != -1)
        swift_once();
      v10 = sub_1D451A014();
      sub_1D42CC880(v10, (uint64_t)qword_1EFEA7700);
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      v11 = v5;
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      v12 = v5;
      v13 = sub_1D4519FFC();
      v14 = sub_1D451AF74();
      if (os_log_type_enabled(v13, v14))
      {
        type = v14;
        v15 = swift_slowAlloc();
        v43 = swift_slowAlloc();
        v45 = v43;
        *(_DWORD *)v15 = 136315650;
        v16 = objc_msgSend(v8, sel_description);
        v17 = sub_1D451A6EC();
        v19 = v18;

        sub_1D43D72EC(v17, v19, &v45);
        sub_1D451B1A8();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v15 + 12) = 2080;
        v20 = objc_msgSend(a3, (SEL)&selRef_analyzeWithCompletionHandler_);
        v21 = sub_1D451A6EC();
        v23 = v22;

        sub_1D43D72EC(v21, v23, &v45);
        sub_1D451B1A8();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v15 + 22) = 2080;
        v24 = (void *)sub_1D4519A98();
        v25 = objc_msgSend(v24, sel_description);

        v26 = sub_1D451A6EC();
        v28 = v27;

        sub_1D43D72EC(v26, v28, &v45);
        sub_1D451B1A8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1D42A7000, v13, type, "Observer %s for request %s failed with error %s", (uint8_t *)v15, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1D825E524](v43, -1, -1);
        MEMORY[0x1D825E524](v15, -1, -1);
      }
      else
      {
        swift_unknownObjectRelease_n();
        swift_unknownObjectRelease_n();

      }
      if ((objc_msgSend(v8, sel_respondsToSelector_, sel_request_didFailWithError_) & 1) == 0)
      {
        swift_unknownObjectRelease();

        return;
      }
      swift_unknownObjectRetain();
      v41 = (void *)sub_1D4519A98();
      objc_msgSend(v8, sel_request_didFailWithError_, a3, v41);
      swift_unknownObjectRelease();

    }
    else
    {
      if (qword_1EFE40338 != -1)
        swift_once();
      v29 = sub_1D451A014();
      sub_1D42CC880(v29, (uint64_t)qword_1EFEA7700);
      swift_unknownObjectRetain_n();
      swift_unknownObjectRetain_n();
      v30 = sub_1D4519FFC();
      v31 = sub_1D451AF74();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = swift_slowAlloc();
        v44 = swift_slowAlloc();
        v45 = v44;
        *(_DWORD *)v32 = 136315394;
        v33 = objc_msgSend(v8, sel_description);
        v34 = sub_1D451A6EC();
        v36 = v35;

        sub_1D43D72EC(v34, v36, &v45);
        sub_1D451B1A8();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v32 + 12) = 2080;
        v37 = objc_msgSend(a3, sel_description);
        v38 = sub_1D451A6EC();
        v40 = v39;

        sub_1D43D72EC(v38, v40, &v45);
        sub_1D451B1A8();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D42A7000, v30, v31, "Observer %s for request %s completed", (uint8_t *)v32, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D825E524](v44, -1, -1);
        MEMORY[0x1D825E524](v32, -1, -1);

      }
      else
      {

        swift_unknownObjectRelease_n();
        swift_unknownObjectRelease_n();
      }
      if ((objc_msgSend(v8, sel_respondsToSelector_, sel_requestDidComplete_) & 1) != 0)
        objc_msgSend(v8, sel_requestDidComplete_, a3);
    }
    swift_unknownObjectRelease();
  }
}

void sub_1D43DE814()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  sub_1D42CB740();
  v1 = v0;
  sub_1D42B28FC(&qword_1EFE4DC70);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v2);
  sub_1D42CB210();
  v5 = v4 - v3;
  if (qword_1EFE40338 != -1)
    swift_once();
  v6 = sub_1D451A014();
  sub_1D42CC880(v6, (uint64_t)qword_1EFEA7700);
  sub_1D4307010();
  sub_1D4311FD0();
  v7 = sub_1D4519FFC();
  v8 = sub_1D451AF74();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = sub_1D42CC940();
    v21 = sub_1D42CC940();
    *(_DWORD *)v9 = 136315394;
    sub_1D42EA2A8();
    sub_1D42BDF9C();
    v10 = sub_1D43E1668();
    sub_1D43E15D4(v10, v11);
    sub_1D451B1A8();
    sub_1D43E1590();
    sub_1D42B7204();
    *(_WORD *)(v9 + 12) = 2080;
    v12 = objc_msgSend(v1, sel_description);
    v13 = sub_1D451A6EC();
    v15 = v14;

    sub_1D43D72EC(v13, v15, &v21);
    sub_1D451B1A8();
    sub_1D43C39AC();
    sub_1D42CB338();
    _os_log_impl(&dword_1D42A7000, v7, v8, "(SNSystemAudioAnalyzerRemote:%s removeRequest:%s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    sub_1D42CC934();
  }

  sub_1D43C39AC();
  sub_1D43E1590();
  v16 = sub_1D451AAC4();
  sub_1D43409D0(v5, v17, v18, v16);
  v19 = sub_1D42B6F40();
  swift_weakInit();
  v20 = (_QWORD *)sub_1D42B6F40();
  v20[2] = 0;
  v20[3] = 0;
  v20[4] = v19;
  v20[5] = v1;
  swift_unknownObjectRetain();
  sub_1D444D358();
  swift_release();
  sub_1D42CB520();
}

void *sub_1D43DEA9C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *result;

  v4 = *a1;
  v5 = a2 + 16;
  swift_beginAccess();
  result = (void *)MEMORY[0x1D825E608](v5);
  if (result)
  {
    objc_msgSend(result, sel_request_didProduceResult_, a3, v4);
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D43DEB10(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[22] = a1;
  v2[23] = v1;
  v2[24] = *v1;
  return sub_1D438E840();
}

uint64_t sub_1D43DEB2C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_1D43DC1E8((uint64_t)v18);
  v1 = v0[23];
  v2 = v18[0];
  v3 = v18[1];
  v0[25] = v18[0];
  v0[26] = v3;
  v4 = v19;
  v5 = v20;
  v0[27] = v19;
  v0[28] = v5;
  v6 = v21;
  v7 = v22;
  v0[29] = v21;
  v0[30] = v7;
  v8 = v23;
  v9 = v24;
  v0[31] = v23;
  v0[32] = v9;
  v10 = v25;
  v11 = v26;
  v0[33] = v25;
  v0[34] = v11;
  v12 = v27;
  v13 = v28;
  v0[35] = v27;
  v0[36] = v13;
  v14 = v29;
  v15 = v30;
  v0[37] = v29;
  v0[38] = v15;
  v16 = v31;
  v0[39] = v31;
  v0[40] = *(_QWORD *)(v1 + OBJC_IVAR____TtC13SoundAnalysis27SNSystemAudioAnalyzerRemote_state);
  v0[2] = v2;
  v0[3] = v3;
  v0[4] = v4;
  v0[5] = v5;
  v0[6] = v6;
  v0[7] = v7;
  v0[8] = v8;
  v0[9] = v9;
  v0[10] = v10;
  v0[11] = v11;
  v0[12] = v12;
  v0[13] = v13;
  v0[14] = v14;
  v0[15] = v15;
  v0[16] = v16;
  return swift_task_switch();
}

uint64_t sub_1D43DEC0C()
{
  sub_1D43D7C04();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43DEC44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  sub_1D43DFFC8(v0 + 136, v0 + 16, &qword_1EFE4FCC0);
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 248);
  if (v1)
  {
    sub_1D42B5528((_QWORD *)(v0 + 16), v1);
    sub_1D43E15B8();
    v4 = (void *)sub_1D43E11B0();
    sub_1D43DF924(v4, v5, v6, v7, v8, v9, v3, v2, v17, v18, v19, v20, v21, v22);
    sub_1D43E0008(v0 + 136);
    sub_1D42B5400(v0 + 16);
  }
  else
  {
    sub_1D43E0008(v0 + 136);
    v10 = (void *)sub_1D43E11B0();
    sub_1D43DF924(v10, v11, v12, v13, v14, v15, v3, v2, v17, v18, v19, v20, v21, v22);
    sub_1D43E0008(v0 + 16);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D43DED50()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 176) = v0;
  return sub_1D438E840();
}

uint64_t sub_1D43DED64()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 184) = *(_QWORD *)(*(_QWORD *)(v0 + 176)
                                    + OBJC_IVAR____TtC13SoundAnalysis27SNSystemAudioAnalyzerRemote_state);
  return sub_1D438E840();
}

uint64_t sub_1D43DED84()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 192) = sub_1D43D7BCC();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43DEDB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 32;
    do
    {
      sub_1D43DFFC8(v3, v0 + 16, &qword_1EFE4FCA0);
      sub_1D43E1568(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(void **)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(__n128 *)(v0 + 80), *(__n128 *)(v0 + 96), *(__n128 *)(v0 + 112));
      sub_1D42B5528((_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
      sub_1D43E15B8();
      sub_1D42B5400(v0 + 136);
      v3 += 160;
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1D43DEE80(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;

  sub_1D42B28FC(&qword_1EFE4DC70);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB210();
  v7 = v6 - v5;
  if (qword_1EFE40338 != -1)
    swift_once();
  v8 = sub_1D451A014();
  sub_1D42CC880(v8, (uint64_t)qword_1EFEA7700);
  sub_1D4307010();
  sub_1D4311FD0();
  sub_1D4311FD0();
  v9 = sub_1D4519FFC();
  v10 = sub_1D451AF74();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v25 = swift_slowAlloc();
    *(_DWORD *)v11 = 136315650;
    sub_1D4519D20();
    sub_1D42BDF9C();
    v12 = sub_1D451B7C0();
    sub_1D43D72EC(v12, v13, &v25);
    sub_1D43E13B0();
    sub_1D43E15F8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    v14 = objc_msgSend(a1, sel_description);
    v15 = sub_1D451A6EC();
    v17 = v16;

    sub_1D43D72EC(v15, v17, &v25);
    sub_1D43E13B0();
    sub_1D43C39EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 22) = 2080;
    v18 = objc_msgSend(a2, sel_description);
    v19 = sub_1D451A6EC();
    v21 = v20;

    sub_1D43D72EC(v19, v21, &v25);
    sub_1D43E13B0();
    sub_1D43C39EC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D42A7000, v9, v10, "(SNSystemAudioAnalyzerRemote:%s addRequest:%s withObserver:%s", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    sub_1D42CC934();
  }

  sub_1D43C39EC();
  sub_1D43C39EC();
  sub_1D43E15F8();
  v22 = sub_1D451AAC4();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v7, 1, 1, v22);
  v23 = swift_allocObject();
  swift_weakInit();
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = 0;
  v24[3] = 0;
  v24[4] = v23;
  v24[5] = a1;
  v24[6] = a2;
  sub_1D43E1380();
  swift_unknownObjectRetain();
  sub_1D444D358();
  swift_release();
  sub_1D42BE844();
}

uint64_t sub_1D43DF1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  return swift_task_switch();
}

uint64_t sub_1D43DF1DC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_1D43E126C();
  v1 = sub_1D43E1660();
  *(_QWORD *)(v0 + 64) = v1;
  if (!v1)
    return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v2;
  *v2 = v0;
  v2[1] = sub_1D43DF244;
  v3 = sub_1D43E1654(*(_QWORD *)(v0 + 48));
  return sub_1D43DBCDC(v3, v4);
}

uint64_t sub_1D43DF244()
{
  sub_1D42B8E20();
  sub_1D430C324();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43DF278()
{
  uint64_t v0;

  swift_release();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43DF2A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 40) = a4;
  *(_QWORD *)(v5 + 48) = a5;
  return swift_task_switch();
}

uint64_t sub_1D43DF2B8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1D43E126C();
  v1 = sub_1D43E1660();
  *(_QWORD *)(v0 + 56) = v1;
  if (!v1)
    return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v2;
  *v2 = v0;
  v2[1] = sub_1D43DF320;
  v3 = sub_1D43E1654(*(_QWORD *)(v0 + 48));
  return sub_1D43DEB10(v3);
}

uint64_t sub_1D43DF320()
{
  sub_1D42B8E20();
  sub_1D430C324();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43DF354()
{
  uint64_t v0;

  swift_release();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1D43DF37C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  sub_1D42CB740();
  sub_1D42B28FC(&qword_1EFE4DC70);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v0);
  sub_1D42CB210();
  v3 = v2 - v1;
  if (qword_1EFE40338 != -1)
    swift_once();
  v4 = sub_1D451A014();
  sub_1D42CC880(v4, (uint64_t)qword_1EFEA7700);
  sub_1D4307010();
  v5 = sub_1D4519FFC();
  v6 = sub_1D451AF74();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)sub_1D42CC940();
    sub_1D42CC940();
    *(_DWORD *)v7 = 136315138;
    sub_1D42EA2A8();
    sub_1D42BDF9C();
    v8 = sub_1D43E1668();
    sub_1D43E15D4(v8, v9);
    sub_1D451B1A8();
    sub_1D43E1590();
    sub_1D42B7204();
    _os_log_impl(&dword_1D42A7000, v5, v6, "(SNSystemAudioAnalyzerRemote:%s removeAllRequests", v7, 0xCu);
    swift_arrayDestroy();
    sub_1D42CC934();
  }

  sub_1D43E1590();
  v10 = sub_1D451AAC4();
  sub_1D43409D0(v3, v11, v12, v10);
  v13 = sub_1D42B6F40();
  swift_weakInit();
  v14 = (_QWORD *)sub_1D42B6F40();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = v13;
  sub_1D444D358();
  swift_release();
  sub_1D42CB520();
}

uint64_t sub_1D43DF578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a4;
  return swift_task_switch();
}

uint64_t sub_1D43DF590()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1D43E126C();
  v1 = sub_1D43E1660();
  *(_QWORD *)(v0 + 48) = v1;
  if (!v1)
    return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v2;
  *v2 = v0;
  v2[1] = sub_1D43DF5F4;
  return sub_1D43DED50();
}

uint64_t sub_1D43DF5F4()
{
  sub_1D42B8E20();
  sub_1D430C324();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43DF628()
{
  uint64_t v0;

  swift_release();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43DF650()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC13SoundAnalysis27SNSystemAudioAnalyzerRemote_id;
  v2 = sub_1D42EA2A8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  sub_1D42BE8B4();
  sub_1D42CB0C4();
  sub_1D42B5400(v0 + OBJC_IVAR____TtC13SoundAnalysis27SNSystemAudioAnalyzerRemote_environment);
  swift_release();
  return v0;
}

uint64_t sub_1D43DF6DC()
{
  sub_1D43DF650();
  return swift_deallocClassInstance();
}

uint64_t sub_1D43DF700()
{
  return type metadata accessor for SNSystemAudioAnalyzerRemote();
}

uint64_t type metadata accessor for SNSystemAudioAnalyzerRemote()
{
  uint64_t result;

  result = qword_1EFE4FC58;
  if (!qword_1EFE4FC58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D43DF740()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D4519D20();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for SNSystemAudioAnalyzerRemote.State()
{
  return objc_opt_self();
}

id sub_1D43DF7EC(id result, void *a2, char a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14)
{
  unint64_t v14;

  v14 = a14 >> 61;
  if (a14 >> 61 == 4)
    return (id)swift_bridgeObjectRetain();
  if ((_DWORD)v14 != 3)
  {
    if ((_DWORD)v14)
      return result;
    sub_1D42B5CE4(result, a2, a3 & 1);
    sub_1D42B5CF4(a8, a9, a10, a11, a12, a13, a14 & 1);
    return (id)swift_bridgeObjectRetain();
  }
  sub_1D42B633C(result, a2, a3);
  swift_bridgeObjectRetain();
  return a6;
}

void *sub_1D43DF8DC(uint64_t a1)
{
  return sub_1D43DF924(*(void **)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(void **)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104));
}

void *sub_1D43DF924(void *result, void *a2, char a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14)
{
  unint64_t v14;

  v14 = a14 >> 61;
  if (a14 >> 61 != 4)
  {
    if ((_DWORD)v14 == 3)
    {
      sub_1D42B62C8(result, a2, a3);

    }
    else
    {
      if ((_DWORD)v14)
        return result;
      sub_1D42B5C3C(result, a2, a3 & 1);
      sub_1D42B5C4C(a8, a9, a10, a11, a12, a13, a14 & 1);
    }
  }
  return (void *)swift_bridgeObjectRelease();
}

_QWORD *sub_1D43DF9E8(_QWORD *a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(void **)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 104);
  v18 = *(_QWORD *)(a2 + 112);
  sub_1D43DF7EC(*(id *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  a1[13] = v17;
  a1[14] = v18;
  return a1;
}

uint64_t sub_1D43DFAD4(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(void **)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v24 = *(_QWORD *)(a2 + 72);
  v25 = *(_QWORD *)(a2 + 80);
  v26 = *(_QWORD *)(a2 + 88);
  v27 = *(_QWORD *)(a2 + 96);
  v28 = *(_QWORD *)(a2 + 104);
  v29 = *(_QWORD *)(a2 + 112);
  sub_1D43DF7EC(*(id *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v24, v25, v26, v27, v28);
  v12 = *(void **)a1;
  v13 = *(void **)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(void **)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  v22 = *(_OWORD *)(a1 + 96);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v24;
  *(_QWORD *)(a1 + 80) = v25;
  *(_QWORD *)(a1 + 88) = v26;
  *(_QWORD *)(a1 + 96) = v27;
  *(_QWORD *)(a1 + 104) = v28;
  *(_QWORD *)(a1 + 112) = v29;
  sub_1D43DF924(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((unint64_t *)&v22 + 1));
  return a1;
}

void *sub_1D43DFBEC(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x78uLL);
}

uint64_t sub_1D43DFBF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v3 = *(_QWORD *)(a2 + 112);
  v4 = *(void **)a1;
  v6 = *(void **)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(void **)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_OWORD *)(a1 + 64);
  v13 = *(_OWORD *)(a1 + 80);
  v14 = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v15;
  v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v16;
  v17 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v17;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = v3;
  sub_1D43DF924(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((unint64_t *)&v14 + 1));
  return a1;
}

uint64_t sub_1D43DFC78(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 120))
    {
      v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 104) >> 1;
      if (v2 > 0x80000000)
        v3 = ~(_DWORD)v2;
      else
        v3 = -1;
    }
  }
  else
  {
    v3 = -1;
  }
  return (v3 + 1);
}

double sub_1D43DFCC0(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_QWORD *)(a1 + 96) = 0;
      *(_QWORD *)(a1 + 104) = 2 * -a2;
      *(_QWORD *)(a1 + 112) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1D43DFD34(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 104) >> 61;
  if (v1 <= 4)
    return v1;
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_1D43DFD50(uint64_t result)
{
  *(_QWORD *)(result + 104) &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1D43DFD60(uint64_t result, uint64_t a2)
{
  if (a2 < 5)
  {
    *(_QWORD *)(result + 104) = *(_QWORD *)(result + 104) & 1 | (a2 << 61);
  }
  else
  {
    *(_QWORD *)result = (a2 - 5);
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 104) = xmmword_1D4537850;
  }
  return result;
}

void type metadata accessor for SNSystemAudioAnalyzerRemote.Request()
{
  sub_1D42CB35C();
}

unint64_t sub_1D43DFDBC()
{
  unint64_t result;

  result = qword_1EFE4FC70;
  if (!qword_1EFE4FC70)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4536D58, &unk_1E97AA920);
    atomic_store(result, (unint64_t *)&qword_1EFE4FC70);
  }
  return result;
}

void sub_1D43DFDF8(void *a1, void *a2)
{
  sub_1D43DEE80(a1, a2);
}

void sub_1D43DFE18()
{
  sub_1D43DE814();
}

void sub_1D43DFE38()
{
  sub_1D43DF37C();
}

uint64_t sub_1D43DFE58()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D43DFE7C()
{
  sub_1D431B468();
  sub_1D42E4010();
  return swift_deallocObject();
}

uint64_t sub_1D43DFEA0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1D43DFF0C;
  return sub_1D43DF578(a1, v4, v5, v6);
}

uint64_t sub_1D43DFF0C()
{
  uint64_t v0;

  sub_1D42B8E20();
  sub_1D430C324();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43DFF38()
{
  sub_1D431B468();
  sub_1D42E4010();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D43DFF64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 40);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  v4 = sub_1D43E14E8(v3);
  return sub_1D43DF2A0(v4, v5, v6, v7, v2);
}

uint64_t sub_1D43DFFC8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t);

  sub_1D42B28FC(a3);
  v4 = sub_1D42F1F54();
  v5(v4);
  return a2;
}

uint64_t sub_1D43E0008(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D42B28FC(&qword_1EFE4FCC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D43E0048()
{
  unint64_t result;

  result = qword_1EFE4FCC8;
  if (!qword_1EFE4FCC8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45377F4, &unk_1E97AA410);
    atomic_store(result, &qword_1EFE4FCC8);
  }
  return result;
}

void *sub_1D43E0084(void *result, void *a2, char a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14)
{
  if (a14 >> 1 != 0xFFFFFFFF)
    return sub_1D43DF924(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  return result;
}

uint64_t sub_1D43E00BC()
{
  sub_1D431B468();
  sub_1D42E4010();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D43E00F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  v5 = sub_1D43E14E8(v4);
  return sub_1D43DF1C0(v5, v6, v7, v8, v2, v3);
}

void *sub_1D43E015C(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x78uLL);
}

uint64_t sub_1D43E0170()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D43E0194()
{
  swift_release();
  swift_unknownObjectRelease();
  sub_1D42E4010();
  return swift_deallocObject();
}

void sub_1D43E01C4(void **a1)
{
  uint64_t v1;

  sub_1D43DE1E8(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1D43E01D0()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void *sub_1D43E01FC(uint64_t *a1)
{
  uint64_t v1;

  return sub_1D43DEA9C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1D43E0204(_QWORD *a1, uint64_t a2)
{
  uint64_t inited;
  _QWORD v6[5];

  v6[3] = sub_1D451A200();
  v6[4] = MEMORY[0x1E0C95DF8];
  v6[0] = a2;
  sub_1D42B28FC(&qword_1EFE4FD00);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D45261D0;
  sub_1D43E015C(a1, (void *)(inited + 32));
  sub_1D42E2D8C((uint64_t)v6, inited + 152);
  swift_beginAccess();
  swift_retain();
  sub_1D43E02F8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D43DF7EC);
  swift_bridgeObjectRetain();
  sub_1D44B531C();
  swift_endAccess();
  swift_setDeallocating();
  sub_1D434772C();
  return sub_1D42B5400((uint64_t)v6);
}

_QWORD *sub_1D43E02F8(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14]);
  return a1;
}

uint64_t sub_1D43E0354(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 80);
  v6 = *(_QWORD *)(a1 + 88);
  v7 = *(_QWORD *)(a1 + 96);
  v8 = *(_BYTE *)(a1 + 104);
  sub_1D42B5CE4(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
  sub_1D42B5CF4(v2, v3, v4, v5, v6, v7, v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_1D43E0410()
{
  unint64_t result;

  result = qword_1EFE4FE00;
  if (!qword_1EFE4FE00)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45377A4, &type metadata for SNSystemAudioAnalyzerRemote.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FE00);
  }
  return result;
}

unint64_t sub_1D43E044C()
{
  unint64_t result;

  result = qword_1EFE4FE10;
  if (!qword_1EFE4FE10)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4537754, &type metadata for SNSystemAudioAnalyzerRemote.Request.DirectionOfArrivalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FE10);
  }
  return result;
}

unint64_t sub_1D43E0488()
{
  unint64_t result;

  result = qword_1EFE4FE20;
  if (!qword_1EFE4FE20)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4537704, &type metadata for SNSystemAudioAnalyzerRemote.Request.SoundDetectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FE20);
  }
  return result;
}

unint64_t sub_1D43E04C4()
{
  unint64_t result;

  result = qword_1EFE4FE30;
  if (!qword_1EFE4FE30)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45376B4, &type metadata for SNSystemAudioAnalyzerRemote.Request.ShazamSignatureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FE30);
  }
  return result;
}

unint64_t sub_1D43E0500()
{
  unint64_t result;

  result = qword_1EFE4FE40;
  if (!qword_1EFE4FE40)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4537664, &type metadata for SNSystemAudioAnalyzerRemote.Request.AudioLevelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FE40);
  }
  return result;
}

unint64_t sub_1D43E053C()
{
  unint64_t result;

  result = qword_1EFE4FE50;
  if (!qword_1EFE4FE50)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4537614, &type metadata for SNSystemAudioAnalyzerRemote.Request.SpeechEmotionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FE50);
  }
  return result;
}

unint64_t sub_1D43E0578()
{
  unint64_t result;

  result = qword_1EFE4FE60;
  if (!qword_1EFE4FE60)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45375C4, &type metadata for SNSystemAudioAnalyzerRemote.Request.SpeechUtteranceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FE60);
  }
  return result;
}

unint64_t sub_1D43E05B4()
{
  unint64_t result;

  result = qword_1EFE4FE70;
  if (!qword_1EFE4FE70)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4537574, &type metadata for SNSystemAudioAnalyzerRemote.Request.SoundClassificationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FE70);
  }
  return result;
}

uint64_t sub_1D43E05F0(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v2 = *(void **)(a1 + 120);
  v3 = *(void **)(a1 + 128);
  v4 = *(_QWORD *)(a1 + 136);
  v5 = *(_QWORD *)(a1 + 144);
  v6 = *(_QWORD *)(a1 + 152);
  v7 = *(void **)(a1 + 160);
  v8 = *(_QWORD *)(a1 + 168);
  v9 = *(_QWORD *)(a1 + 176);
  v12 = *(_OWORD *)(a1 + 200);
  v13 = *(_OWORD *)(a1 + 184);
  v11 = *(_OWORD *)(a1 + 216);
  sub_1D43DF924(*(void **)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(void **)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104));
  sub_1D43DF924(v2, v3, v4, v5, v6, v7, v8, v9, v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11, *((unint64_t *)&v11 + 1));
  return a1;
}

uint64_t storeEnumTagSinglePayload for SNSystemAudioAnalyzerRemote.Request.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D43E0718 + 4 * byte_1D4536CCF[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D43E074C + 4 * byte_1D4536CCA[v4]))();
}

uint64_t sub_1D43E074C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43E0754(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D43E075CLL);
  return result;
}

uint64_t sub_1D43E0768(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D43E0770);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D43E0774(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43E077C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SNSystemAudioAnalyzerRemote.Request.CodingKeys()
{
  return &type metadata for SNSystemAudioAnalyzerRemote.Request.CodingKeys;
}

ValueMetadata *type metadata accessor for SNSystemAudioAnalyzerRemote.Request.SoundClassificationCodingKeys()
{
  return &type metadata for SNSystemAudioAnalyzerRemote.Request.SoundClassificationCodingKeys;
}

ValueMetadata *type metadata accessor for SNSystemAudioAnalyzerRemote.Request.SpeechUtteranceCodingKeys()
{
  return &type metadata for SNSystemAudioAnalyzerRemote.Request.SpeechUtteranceCodingKeys;
}

ValueMetadata *type metadata accessor for SNSystemAudioAnalyzerRemote.Request.SpeechEmotionCodingKeys()
{
  return &type metadata for SNSystemAudioAnalyzerRemote.Request.SpeechEmotionCodingKeys;
}

ValueMetadata *type metadata accessor for SNSystemAudioAnalyzerRemote.Request.AudioLevelCodingKeys()
{
  return &type metadata for SNSystemAudioAnalyzerRemote.Request.AudioLevelCodingKeys;
}

ValueMetadata *type metadata accessor for SNSystemAudioAnalyzerRemote.Request.ShazamSignatureCodingKeys()
{
  return &type metadata for SNSystemAudioAnalyzerRemote.Request.ShazamSignatureCodingKeys;
}

ValueMetadata *type metadata accessor for SNSystemAudioAnalyzerRemote.Request.SoundDetectionCodingKeys()
{
  return &type metadata for SNSystemAudioAnalyzerRemote.Request.SoundDetectionCodingKeys;
}

uint64_t _s13SoundAnalysis27SNSystemAudioAnalyzerRemoteC7RequestO29SoundClassificationCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D43E083C + 4 * byte_1D4536CD4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D43E085C + 4 * byte_1D4536CD9[v4]))();
}

_BYTE *sub_1D43E083C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D43E085C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D43E0864(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D43E086C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D43E0874(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D43E087C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SNSystemAudioAnalyzerRemote.Request.DirectionOfArrivalCodingKeys()
{
  return &type metadata for SNSystemAudioAnalyzerRemote.Request.DirectionOfArrivalCodingKeys;
}

uint64_t sub_1D43E0898(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D43E08E4 + 4 * byte_1D4536CE3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D43E0918 + 4 * byte_1D4536CDE[v4]))();
}

uint64_t sub_1D43E0918(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43E0920(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D43E0928);
  return result;
}

uint64_t sub_1D43E0934(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D43E093CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D43E0940(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43E0948(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SNSystemAudioAnalyzerRemote.DomainError()
{
  sub_1D42CB35C();
}

unint64_t sub_1D43E0964()
{
  unint64_t result;

  result = qword_1EFE4FEC8;
  if (!qword_1EFE4FEC8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4536F8C, &unk_1E97AA410);
    atomic_store(result, (unint64_t *)&qword_1EFE4FEC8);
  }
  return result;
}

unint64_t sub_1D43E09A4()
{
  unint64_t result;

  result = qword_1EFE4FED0;
  if (!qword_1EFE4FED0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4537044, &type metadata for SNSystemAudioAnalyzerRemote.Request.DirectionOfArrivalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FED0);
  }
  return result;
}

unint64_t sub_1D43E09E4()
{
  unint64_t result;

  result = qword_1EFE4FED8;
  if (!qword_1EFE4FED8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45370FC, &type metadata for SNSystemAudioAnalyzerRemote.Request.SoundDetectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FED8);
  }
  return result;
}

unint64_t sub_1D43E0A24()
{
  unint64_t result;

  result = qword_1EFE4FEE0;
  if (!qword_1EFE4FEE0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45371B4, &type metadata for SNSystemAudioAnalyzerRemote.Request.ShazamSignatureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FEE0);
  }
  return result;
}

unint64_t sub_1D43E0A64()
{
  unint64_t result;

  result = qword_1EFE4FEE8;
  if (!qword_1EFE4FEE8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453726C, &type metadata for SNSystemAudioAnalyzerRemote.Request.AudioLevelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FEE8);
  }
  return result;
}

unint64_t sub_1D43E0AA4()
{
  unint64_t result;

  result = qword_1EFE4FEF0;
  if (!qword_1EFE4FEF0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4537324, &type metadata for SNSystemAudioAnalyzerRemote.Request.SpeechEmotionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FEF0);
  }
  return result;
}

unint64_t sub_1D43E0AE4()
{
  unint64_t result;

  result = qword_1EFE4FEF8;
  if (!qword_1EFE4FEF8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45373DC, &type metadata for SNSystemAudioAnalyzerRemote.Request.SpeechUtteranceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FEF8);
  }
  return result;
}

unint64_t sub_1D43E0B24()
{
  unint64_t result;

  result = qword_1EFE4FF00;
  if (!qword_1EFE4FF00)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4537494, &type metadata for SNSystemAudioAnalyzerRemote.Request.SoundClassificationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FF00);
  }
  return result;
}

unint64_t sub_1D43E0B64()
{
  unint64_t result;

  result = qword_1EFE4FF08;
  if (!qword_1EFE4FF08)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453754C, &type metadata for SNSystemAudioAnalyzerRemote.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FF08);
  }
  return result;
}

unint64_t sub_1D43E0BA4()
{
  unint64_t result;

  result = qword_1EFE4FF10;
  if (!qword_1EFE4FF10)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4537404, &type metadata for SNSystemAudioAnalyzerRemote.Request.SoundClassificationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FF10);
  }
  return result;
}

unint64_t sub_1D43E0BE4()
{
  unint64_t result;

  result = qword_1EFE4FF18;
  if (!qword_1EFE4FF18)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453742C, &type metadata for SNSystemAudioAnalyzerRemote.Request.SoundClassificationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FF18);
  }
  return result;
}

unint64_t sub_1D43E0C24()
{
  unint64_t result;

  result = qword_1EFE4FF20;
  if (!qword_1EFE4FF20)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453734C, &type metadata for SNSystemAudioAnalyzerRemote.Request.SpeechUtteranceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FF20);
  }
  return result;
}

unint64_t sub_1D43E0C64()
{
  unint64_t result;

  result = qword_1EFE4FF28;
  if (!qword_1EFE4FF28)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4537374, &type metadata for SNSystemAudioAnalyzerRemote.Request.SpeechUtteranceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FF28);
  }
  return result;
}

unint64_t sub_1D43E0CA4()
{
  unint64_t result;

  result = qword_1EFE4FF30;
  if (!qword_1EFE4FF30)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4537294, &type metadata for SNSystemAudioAnalyzerRemote.Request.SpeechEmotionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FF30);
  }
  return result;
}

unint64_t sub_1D43E0CE4()
{
  unint64_t result;

  result = qword_1EFE4FF38;
  if (!qword_1EFE4FF38)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45372BC, &type metadata for SNSystemAudioAnalyzerRemote.Request.SpeechEmotionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FF38);
  }
  return result;
}

unint64_t sub_1D43E0D24()
{
  unint64_t result;

  result = qword_1EFE4FF40;
  if (!qword_1EFE4FF40)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45371DC, &type metadata for SNSystemAudioAnalyzerRemote.Request.AudioLevelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FF40);
  }
  return result;
}

unint64_t sub_1D43E0D64()
{
  unint64_t result;

  result = qword_1EFE4FF48;
  if (!qword_1EFE4FF48)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4537204, &type metadata for SNSystemAudioAnalyzerRemote.Request.AudioLevelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FF48);
  }
  return result;
}

unint64_t sub_1D43E0DA4()
{
  unint64_t result;

  result = qword_1EFE4FF50;
  if (!qword_1EFE4FF50)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4537124, &type metadata for SNSystemAudioAnalyzerRemote.Request.ShazamSignatureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FF50);
  }
  return result;
}

unint64_t sub_1D43E0DE4()
{
  unint64_t result;

  result = qword_1EFE4FF58;
  if (!qword_1EFE4FF58)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453714C, &type metadata for SNSystemAudioAnalyzerRemote.Request.ShazamSignatureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FF58);
  }
  return result;
}

unint64_t sub_1D43E0E24()
{
  unint64_t result;

  result = qword_1EFE4FF60;
  if (!qword_1EFE4FF60)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453706C, &type metadata for SNSystemAudioAnalyzerRemote.Request.SoundDetectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FF60);
  }
  return result;
}

unint64_t sub_1D43E0E64()
{
  unint64_t result;

  result = qword_1EFE4FF68;
  if (!qword_1EFE4FF68)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4537094, &type metadata for SNSystemAudioAnalyzerRemote.Request.SoundDetectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FF68);
  }
  return result;
}

unint64_t sub_1D43E0EA4()
{
  unint64_t result;

  result = qword_1EFE4FF70;
  if (!qword_1EFE4FF70)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4536FB4, &type metadata for SNSystemAudioAnalyzerRemote.Request.DirectionOfArrivalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FF70);
  }
  return result;
}

unint64_t sub_1D43E0EE4()
{
  unint64_t result;

  result = qword_1EFE4FF78;
  if (!qword_1EFE4FF78)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4536FDC, &type metadata for SNSystemAudioAnalyzerRemote.Request.DirectionOfArrivalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FF78);
  }
  return result;
}

unint64_t sub_1D43E0F24()
{
  unint64_t result;

  result = qword_1EFE4FF80;
  if (!qword_1EFE4FF80)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45374BC, &type metadata for SNSystemAudioAnalyzerRemote.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4FF80);
  }
  return result;
}

unint64_t sub_1D43E0F64()
{
  unint64_t result;

  result = qword_1EFE4FF88[0];
  if (!qword_1EFE4FF88[0])
  {
    result = MEMORY[0x1D825E41C](&unk_1D45374E4, &type metadata for SNSystemAudioAnalyzerRemote.Request.CodingKeys);
    atomic_store(result, qword_1EFE4FF88);
  }
  return result;
}

uint64_t sub_1D43E0FA4()
{
  return swift_task_dealloc();
}

uint64_t sub_1D43E0FE0()
{
  return swift_task_dealloc();
}

uint64_t sub_1D43E1018(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D43E1034(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1D43E1050()
{
  return sub_1D451B610();
}

void *sub_1D43E108C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  return sub_1D43E0084(a20, *(void **)(v29 - 72), *(_QWORD *)(v29 - 104), v27, *(_QWORD *)(v29 - 88), *(void **)(v29 - 96), a23, a22, a21, v28, v24, v23, v26, v25);
}

uint64_t sub_1D43E10B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 256) + 8))(v2, v1);
}

uint64_t sub_1D43E10CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1D42B5528(v3, v5);
  *(_QWORD *)v4 = v6;
  *(_QWORD *)(v4 + 8) = v2;
  *(_QWORD *)(v4 + 16) = v7;
  *(_QWORD *)(v4 + 24) = v0;
  *(_QWORD *)(v4 + 32) = *(_QWORD *)(v8 - 160);
  *(_QWORD *)(v4 + 40) = v1;
  *(_BYTE *)(v4 + 48) = *(_DWORD *)(v8 - 152);
  *(_BYTE *)(v4 + 49) = *(_DWORD *)(v8 - 144);
  *(_BYTE *)(v4 + 50) = *(_DWORD *)(v8 - 136);
  *(_BYTE *)(v4 + 51) = *(_DWORD *)(v8 - 128);
  *(_BYTE *)(v4 + 52) = *(_DWORD *)(v8 - 120);
  *(_BYTE *)(v4 + 53) = *(_DWORD *)(v8 - 112);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(v8 - 96);
  *(_BYTE *)(v4 + 64) = *(_DWORD *)(v8 - 88);
  return v4;
}

uint64_t sub_1D43E1158()
{
  return sub_1D451B688();
}

uint64_t sub_1D43E116C()
{
  return sub_1D451A308();
}

uint64_t sub_1D43E1180@<X0>(int *a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = (char *)a1 + *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D43E11B0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D43E11F4()
{
  return swift_task_dealloc();
}

uint64_t sub_1D43E11FC()
{
  return swift_task_dealloc();
}

void sub_1D43E1204()
{
  uint64_t v0;
  uint64_t v1;

  *(_DWORD *)(v1 - 88) = *(unsigned __int8 *)(v0 + 207);
  *(_QWORD *)(v1 - 96) = *(_QWORD *)(v0 + 672);
  *(_DWORD *)(v1 - 104) = *(unsigned __int8 *)(v0 + 206);
  *(_DWORD *)(v1 - 112) = *(unsigned __int8 *)(v0 + 205);
  *(_DWORD *)(v1 - 120) = *(unsigned __int8 *)(v0 + 204);
  *(_DWORD *)(v1 - 128) = *(unsigned __int8 *)(v0 + 203);
  *(_DWORD *)(v1 - 136) = *(unsigned __int8 *)(v0 + 202);
}

uint64_t sub_1D43E1244()
{
  return sub_1D451A2E4();
}

uint64_t sub_1D43E1254()
{
  return swift_dynamicCastClass();
}

uint64_t sub_1D43E1260()
{
  return sub_1D451B610();
}

uint64_t sub_1D43E126C()
{
  return swift_beginAccess();
}

void *sub_1D43E1288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  return sub_1D43E0084(v24, *(void **)(v30 - 72), *(_QWORD *)(v30 - 104), v28, *(_QWORD *)(v30 - 88), *(void **)(v30 - 96), a23, a22, a21, v29, v25, v23, v27, v26);
}

uint64_t sub_1D43E12B8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D43E12E4()
{
  return swift_task_dealloc();
}

uint64_t sub_1D43E12EC()
{
  return swift_task_dealloc();
}

uint64_t sub_1D43E12F4()
{
  return swift_task_dealloc();
}

uint64_t sub_1D43E12FC()
{
  return swift_task_dealloc();
}

uint64_t sub_1D43E1304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

void *sub_1D43E1324(void *a1, void *a2, char a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;

  return sub_1D43E0084(a1, a2, a3, a4, *(_QWORD *)(v23 - 88), a6, a23, a22, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1D43E1344()
{
  return swift_unknownObjectRetain();
}

id sub_1D43E1350(void *a1, id a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 - 72) = a2;
  *(_QWORD *)(v3 - 104) = a3;
  return sub_1D42B5CE4(a1, a2, a3);
}

uint64_t sub_1D43E1370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return a13;
}

uint64_t sub_1D43E1380()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1D43E1388()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 496);
}

uint64_t sub_1D43E13B0()
{
  return sub_1D451B1A8();
}

uint64_t sub_1D43E13E4()
{
  return sub_1D451B760();
}

uint64_t sub_1D43E13EC()
{
  return sub_1D451B6F4();
}

uint64_t sub_1D43E1408()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 496);
}

uint64_t sub_1D43E142C()
{
  return swift_task_switch();
}

__n128 sub_1D43E143C()
{
  uint64_t v0;

  return *(__n128 *)(v0 + 568);
}

uint64_t sub_1D43E1470()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 72);
}

uint64_t sub_1D43E1480@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = *a1;
  v3 = a1[4];
  *(_QWORD *)(v1 - 96) = a1[5];
  *(_QWORD *)(v1 - 88) = v3;
  return result;
}

id sub_1D43E14A0(void *a1, void *a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14)
{
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;

  return sub_1D43DF7EC(a1, a2, a3, v14, a5, v15, v16, v17, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1D43E14B4()
{
  return sub_1D43E05F0((uint64_t)&STACK[0x218]);
}

uint64_t sub_1D43E14BC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1D42BE210(a1, v3, a3);
}

uint64_t sub_1D43E14C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 256) + 8))(v1, v2);
}

uint64_t sub_1D43E14D8()
{
  return sub_1D451B6F4();
}

uint64_t sub_1D43E14E0()
{
  uint64_t *v0;

  return sub_1D42B28FC(v0);
}

uint64_t sub_1D43E14E8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_1D43E1504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  sub_1D42B5CF4(a1, a2, a3, v4, v3, v6, v5);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D43E1544()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

void *sub_1D43E1568(void *a1, void *a2, char a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, __n128 a9, __n128 a10, __n128 a11)
{
  return sub_1D43DF924(a1, a2, a3, a4, a5, a6, a7, a8, a9.n128_i64[0], a9.n128_i64[1], a10.n128_i64[0], a10.n128_i64[1], a11.n128_i64[0], a11.n128_u64[1]);
}

__n128 sub_1D43E1578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, __int128 a17)
{
  return (__n128)a17;
}

uint64_t sub_1D43E1590()
{
  return swift_release_n();
}

__n128 sub_1D43E1598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,__int128 a37)
{
  return (__n128)a37;
}

uint64_t sub_1D43E15B8()
{
  return sub_1D451A17C();
}

unint64_t sub_1D43E15C8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 208) = 2;
  return sub_1D43E053C();
}

uint64_t sub_1D43E15D4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1D43D72EC(a1, a2, (uint64_t *)(v2 - 88));
}

unint64_t sub_1D43E15E0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 208) = 6;
  return sub_1D43E044C();
}

_QWORD *sub_1D43E15EC()
{
  _QWORD *v0;
  uint64_t v1;

  return sub_1D42B5528(v0, v1);
}

uint64_t sub_1D43E15F8()
{
  return swift_release_n();
}

unint64_t sub_1D43E1604()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 208) = 4;
  return sub_1D43E04C4();
}

unint64_t sub_1D43E1610()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 208) = 1;
  return sub_1D43E0578();
}

uint64_t sub_1D43E161C()
{
  return sub_1D451B964();
}

void sub_1D43E1624()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 264);
  *(_QWORD *)(v0 - 168) = *(_QWORD *)(v0 - 248);
  *(_QWORD *)(v0 - 160) = v1;
}

uint64_t sub_1D43E164C()
{
  return swift_task_dealloc();
}

uint64_t sub_1D43E1654@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_1D43E1660()
{
  return swift_weakLoadStrong();
}

uint64_t sub_1D43E1668()
{
  return sub_1D451B7C0();
}

uint64_t sub_1D43E1688()
{
  return swift_unknownObjectWeakInit();
}

unint64_t sub_1D43E1694()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 208) = 3;
  return sub_1D43E0500();
}

uint64_t type metadata accessor for UnsafeMemcpyNode()
{
  return objc_opt_self();
}

void *sub_1D43E16C0@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  id v3;
  void *result;
  _BYTE __src[88];
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_1EFE48ED0 != -1)
    swift_once();
  if ((byte_1EFEA78A8 & 1) != 0)
  {
    v3 = (id)xmmword_1EFEA7880;
    sub_1D42B28FC(&qword_1EFE49BB0);
    return (void *)swift_willThrowTypedImpl();
  }
  else
  {
    v6 = xmmword_1EFEA7880;
    v7 = DWORD2(xmmword_1EFEA7880);
    v8 = qword_1EFEA7890;
    v9 = qword_1EFEA7898;
    v10 = qword_1EFEA78A0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D43EE374((uint64_t)&v6, __src);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = (void *)swift_bridgeObjectRelease();
    if (!v1)
      return memcpy(a1, __src, 0x50uLL);
  }
  return result;
}

id sub_1D43E17D8()
{
  return sub_1D43E19FC(20, 0x80000001D4555DB0);
}

id sub_1D43E17F0()
{
  return sub_1D43E19FC(24, 0x80000001D4555D90);
}

id sub_1D43E1808(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v16;

  v4 = sub_1D4519D44();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D42B28FC((uint64_t *)&unk_1EFE51A90);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  sub_1D43E19AC(a1, a2, v11);
  sub_1D4519D50();
  v12 = sub_1D4519D68();
  v13 = 0;
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v10, 1, v12) != 1)
  {
    v13 = (void *)sub_1D4519D5C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  objc_msgSend(v11, sel_setTimeZone_, v13);

  sub_1D4519D2C();
  v14 = (void *)sub_1D4519D38();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  objc_msgSend(v11, sel_setLocale_, v14);

  return v11;
}

void sub_1D43E19AC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_1D451A6C8();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setDateFormat_, v4);

}

id sub_1D43E19FC(uint64_t a1, uint64_t a2)
{
  return sub_1D43E1808(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a2);
}

uint64_t sub_1D43E1A04()
{
  return swift_initClassMetadata2();
}

uint64_t *sub_1D43E1A48()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *v0;
  v2 = sub_1D4519D20();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v0[2];
  v7 = (char *)v0 + *(_QWORD *)(v1 + 96);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v7, v2);
  sub_1D43E1B30(v6, (uint64_t)v5, v8, v9);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v12 = type metadata accessor for ContextDictionary.Record(0, *(_QWORD *)(v1 + 80), v10, v11);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v7, v12);
  swift_release();
  return v0;
}

uint64_t sub_1D43E1B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v7 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v8 = type metadata accessor for ContextDictionary.Record(255, v7, a3, a4);
  type metadata accessor for ReservableSlot(255, v8, v9, v10);
  v11 = sub_1D451B160();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = &v16[-v13];
  v19 = a1;
  v17 = v7;
  v18 = a2;
  sub_1D44783B8();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1D43E1C00()
{
  sub_1D43E1A48();
  return swift_deallocClassInstance();
}

uint64_t sub_1D43E1C24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  char v20;
  uint64_t v21;
  uint64_t v22;

  v21 = a2;
  v22 = a5;
  v6 = type metadata accessor for ContextDictionary.Record(255, a3, a3, a4);
  v9 = type metadata accessor for ReservableSlot(255, v6, v7, v8);
  v10 = sub_1D451B160();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v21 - v13;
  v15 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v21 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v18(v14, a1, v10);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v14, 1, v9) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  else if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v14, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v14, v9);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v14, v6);
    v20 = sub_1D4519CFC();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v6);
    if ((v20 & 1) != 0)
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v22, 1, 1, v9);
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v18)(v22, a1, v10);
}

uint64_t type metadata accessor for ContextDictionary(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ContextDictionary);
}

uint64_t sub_1D43E1DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  result = type metadata accessor for ContextDictionary.Record(319, *(_QWORD *)(a1 + 80), a3, a4);
  if (v5 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for ContextDictionary.Registration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ContextDictionary.Registration);
}

uint64_t type metadata accessor for ContextDictionary.Record(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ContextDictionary.Record);
}

uint64_t sub_1D43E1E6C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D4519D20();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1D43E1EF4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1D4519D20();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10;
  v12 = *(_QWORD *)(v7 + 64) + v10;
  v13 = *(_DWORD *)(v7 + 80) | v10;
  v14 = v13;
  v15 = v13 & 0x100000;
  if (v14 > 7 || v15 != 0 || (v12 & (unint64_t)~v11) + *(_QWORD *)(v9 + 64) > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  else
  {
    v19 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v12) & v19, ((unint64_t)a2 + v12) & v19, v8);
  }
  return a1;
}

uint64_t sub_1D43E1FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1D4519D20();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((*(_QWORD *)(v5 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_1D43E2030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1D4519D20();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 16))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_1D43E20AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1D4519D20();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_1D43E2128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1D4519D20();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 32))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_1D43E21A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1D4519D20();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 40))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_1D43E2220(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  uint64_t v23;

  v6 = sub_1D4519D20();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8)
    v12 = *(_DWORD *)(v7 + 84);
  else
    v12 = *(_DWORD *)(v10 + 84);
  if (!a2)
    return 0;
  v13 = v6;
  v14 = *(_QWORD *)(v7 + 64);
  v15 = *(unsigned __int8 *)(v10 + 80);
  v16 = v14 + v15;
  if (a2 <= v12)
    goto LABEL_23;
  v17 = (v16 & ~v15) + *(_QWORD *)(v10 + 64);
  v18 = 8 * v17;
  if (v17 <= 3)
  {
    v20 = ((a2 - v12 + ~(-1 << v18)) >> v18) + 1;
    if (HIWORD(v20))
    {
      v19 = *(_DWORD *)(a1 + v17);
      if (!v19)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v20 > 0xFF)
    {
      v19 = *(unsigned __int16 *)(a1 + v17);
      if (!*(_WORD *)(a1 + v17))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v20 < 2)
    {
LABEL_23:
      if (v12)
      {
        if (v8 >= v11)
        {
          v23 = a1;
          v9 = v13;
        }
        else
        {
          v23 = (v16 + a1) & ~v15;
          v8 = v11;
        }
        return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v23, v8, v9);
      }
      return 0;
    }
  }
  v19 = *(unsigned __int8 *)(a1 + v17);
  if (!*(_BYTE *)(a1 + v17))
    goto LABEL_23;
LABEL_14:
  v21 = (v19 - 1) << v18;
  if (v17 > 3)
    v21 = 0;
  if ((_DWORD)v17)
  {
    if (v17 <= 3)
      v22 = v17;
    else
      v22 = 4;
    __asm { BR              X12 }
  }
  return v12 + v21 + 1;
}

void sub_1D43E23A8(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  size_t v11;
  char v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;

  v8 = *(_QWORD *)(sub_1D4519D20() - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v9 + 84) <= *(_DWORD *)(v8 + 84))
    v10 = *(_DWORD *)(v8 + 84);
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = ((*(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
      + *(_QWORD *)(v9 + 64);
  v12 = 8 * v11;
  if (a3 <= v10)
  {
    v13 = 0u;
  }
  else if (v11 <= 3)
  {
    v15 = ((a3 - v10 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      v13 = 4u;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = 1u;
  }
  if (v10 < a2)
  {
    v14 = ~v10 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v16 = v14 & ~(-1 << v12);
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if ((_DWORD)v11 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t sub_1D43E25B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1D43E1C24(a1, *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 16), a2, a3);
}

uint64_t storeEnumTagSinglePayload for CoerceUtils.DomainError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D43E2608 + 4 * byte_1D4537958[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D43E2628 + 4 * byte_1D453795D[v4]))();
}

_BYTE *sub_1D43E2608(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D43E2628(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D43E2630(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D43E2638(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D43E2640(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D43E2648(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CoerceUtils.DomainError()
{
  return &type metadata for CoerceUtils.DomainError;
}

unint64_t sub_1D43E2668()
{
  unint64_t result;

  result = qword_1EFE50110;
  if (!qword_1EFE50110)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45379BC, &type metadata for CoerceUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE50110);
  }
  return result;
}

uint64_t sub_1D43E26A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];

  v8 = sub_1D451B160();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v16 - v11;
  MEMORY[0x1E0C80A78](v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1D43965CC((uint64_t)v12, 0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a4, v12, a3);
  }
  else
  {
    sub_1D43965CC((uint64_t)v12, 1);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    sub_1D42FBCD0();
    swift_allocError();
    return swift_willThrow();
  }
}

void SNClassifySoundRequest.windowDurationConstraint.getter(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v3 = objc_msgSend(v1, sel_windowDurationConstraint);
  v4 = objc_msgSend(v3, sel_type);
  if (v4 == (id)2)
  {
    objc_msgSend(v3, sel_durationRange);

    *(_OWORD *)a1 = v16;
    *(_OWORD *)(a1 + 16) = v17;
    *(_OWORD *)(a1 + 32) = v18;
    *(_BYTE *)(a1 + 48) = 1;
    return;
  }
  if (v4 != (id)1)
    goto LABEL_19;
  v5 = objc_msgSend(v3, sel_enumeratedDurations);
  sub_1D42D6A2C();
  v6 = sub_1D451A92C();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1D451B5A4();
    sub_1D42CB208();
    if (v7)
      goto LABEL_6;
LABEL_16:
    sub_1D42CB208();

    v9 = MEMORY[0x1E0DEE9D8];
LABEL_17:
    *(_QWORD *)a1 = v9;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 33) = 0u;
    return;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v7)
    goto LABEL_16;
LABEL_6:
  v15 = MEMORY[0x1E0DEE9D8];
  sub_1D42C71BC();
  if ((v7 & 0x8000000000000000) == 0)
  {
    v14 = v3;
    v8 = 0;
    v9 = v15;
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x1D825CD78](v8, v6);
      else
        v10 = *(id *)(v6 + 8 * v8 + 32);
      v11 = v10;
      objc_msgSend(v10, sel_CMTimeValue);

      v12 = *(_QWORD *)(v15 + 16);
      if (v12 >= *(_QWORD *)(v15 + 24) >> 1)
        sub_1D42C71BC();
      *(_QWORD *)(v15 + 16) = v12 + 1;
      v13 = v15 + 24 * v12;
      *(_OWORD *)(v13 + 32) = v16;
      ++v8;
      *(_QWORD *)(v13 + 48) = v17;
    }
    while (v7 != v8);
    sub_1D42CB208();

    goto LABEL_17;
  }
  __break(1u);
LABEL_19:
  sub_1D451B55C();
  __break(1u);
}

void sub_1D43E2A9C(uint64_t a1)
{
  sub_1D43E2BA8(a1);
}

void sub_1D43E2AA8(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_1D43E2C30();
    sub_1D43E2C18();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      sub_1D42B28FC(&qword_1EFE50118);
      *(_QWORD *)(sub_1D43E2C48() + 16) = a1;
    }
    sub_1D43A2630();
  }
}

void sub_1D43E2B18(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_1D43E2C30();
    sub_1D43E2C18();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      type metadata accessor for CMTime(0);
      *(_QWORD *)(sub_1D43E2C48() + 16) = a1;
    }
    sub_1D43A2630();
  }
}

void sub_1D43E2B84(uint64_t a1)
{
  sub_1D43E2BA8(a1);
}

void sub_1D43E2B90(uint64_t a1)
{
  sub_1D43E2BA8(a1);
}

void sub_1D43E2B9C(uint64_t a1)
{
  sub_1D43E2BA8(a1);
}

void sub_1D43E2BA8(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_1D43E2C30();
    sub_1D43E2C18();
    __break(1u);
  }
  else
  {
    if (a1)
      *(_QWORD *)(sub_1D43E2C48() + 16) = a1;
    sub_1D43A2630();
  }
}

ValueMetadata *type metadata accessor for SNTimeDurationConstraint()
{
  return &type metadata for SNTimeDurationConstraint;
}

uint64_t sub_1D43E2C18()
{
  return sub_1D451B550();
}

uint64_t sub_1D43E2C48()
{
  return sub_1D451A9BC();
}

uint64_t sub_1D43E2C50()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1D43E2CD0(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1D43E2D0C(a1);
  return v2;
}

char *sub_1D43E2D0C(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = *(_QWORD *)v1;
  type metadata accessor for SafeRecursiveLock();
  v4 = swift_allocObject();
  v5 = (_QWORD *)swift_slowAlloc();
  *v5 = 0;
  *(_QWORD *)(v4 + 16) = v5;
  *((_QWORD *)v1 + 2) = v4;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 32))(&v1[*(_QWORD *)(*(_QWORD *)v1 + 104)], a1);
  return v1;
}

uint64_t sub_1D43E2D88()
{
  swift_retain();
  os_unfair_recursive_lock_lock_with_options();
  sub_1D43E2E04();
  os_unfair_recursive_lock_unlock();
  return swift_release();
}

uint64_t sub_1D43E2E04()
{
  return sub_1D451A2CC();
}

uint64_t *sub_1D43E2E48()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 104));
  return v0;
}

uint64_t sub_1D43E2E8C()
{
  sub_1D43E2E48();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SubscriptionSerializer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SubscriptionSerializer);
}

uint64_t sub_1D43E2EBC()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1D43E2ED8()
{
  return sub_1D43E2D88();
}

uint64_t sub_1D43E2EF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SubscriptionSerializer(0, a1, v6, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, a1);
  return sub_1D43E2CD0((uint64_t)v5);
}

void sub_1D43E2F88(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___SNFileServer_link);
  *(_QWORD *)(v1 + OBJC_IVAR___SNFileServer_link) = a1;

}

id sub_1D43E2F9C(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  objc_class *v14;
  id v15;
  id v16;
  uint64_t *v17;
  id v18;
  void *v19;
  unsigned int v20;
  id v21;
  id v22;
  void *v23;
  objc_super v25;
  id v26;
  unint64_t v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v5 = sub_1D451AFA4();
  MEMORY[0x1E0C80A78](v5);
  sub_1D43B9F74();
  v6 = sub_1D451A470();
  MEMORY[0x1E0C80A78](v6);
  sub_1D42CB210();
  v7 = sub_1D451AFB0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1D42CB210();
  v11 = v10 - v9;
  *(_QWORD *)&v2[OBJC_IVAR___SNFileServer_link] = 0;
  sub_1D43E5EF0();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v11, *MEMORY[0x1E0DEF8D8], v7);
  v12 = v2;
  sub_1D451A464();
  sub_1D43E5F2C();
  sub_1D42B28FC(&qword_1EFE479F0);
  sub_1D43E5F6C();
  sub_1D451B2EC();
  v13 = (void *)sub_1D451AFD4();
  *(_QWORD *)&v12[OBJC_IVAR___SNFileServer_queue] = v13;
  v14 = (objc_class *)type metadata accessor for SNFileServer();
  v15 = v13;
  v16 = sub_1D43E32BC(a1, a2, (uint64_t)v15);

  *(_QWORD *)&v12[OBJC_IVAR___SNFileServer_server] = v16;
  v17 = (uint64_t *)&v12[OBJC_IVAR___SNFileServer_rootDirectory];
  *v17 = a1;
  v17[1] = a2;
  swift_bridgeObjectRetain();

  v18 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v19 = (void *)sub_1D451A6C8();
  v26 = 0;
  v20 = objc_msgSend(v18, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v19, 1, 0, &v26);

  if (v20)
  {
    v21 = v26;
    sub_1D42BE8B4();
  }
  else
  {
    v22 = v26;
    v23 = (void *)sub_1D4519AA4();

    swift_willThrow();
    v26 = 0;
    v27 = 0xE000000000000000;
    sub_1D451B400();
    swift_bridgeObjectRelease();
    v26 = (id)0xD000000000000020;
    v27 = 0x80000001D4555FC0;
    sub_1D451A794();
    sub_1D42BE8B4();
    sub_1D44734B4((uint64_t)v26, v27);
    sub_1D42BE8B4();

  }
  v25.receiver = v12;
  v25.super_class = v14;
  return objc_msgSendSuper2(&v25, sel_init);
}

id sub_1D43E32BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;

  v4 = sub_1D4519BC4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB210();
  v8 = v7 - v6;
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D1B378]), sel_init);
  sub_1D43E5B7C(0xD000000000000017, 0x80000001D4555FF0, v9);
  sub_1D4519B10();
  v10 = (void *)sub_1D4519B28();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  objc_msgSend(v9, sel_setRootDirectoryURL_, v10);

  objc_msgSend(v9, sel_setDispatchQueue_, a3);
  return v9;
}

uint64_t sub_1D43E33EC(uint64_t a1, void (*a2)(void))
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t inited;
  uint64_t v8;

  if (qword_1EFE40338 != -1)
    swift_once();
  v3 = sub_1D430710C();
  v4 = sub_1D42CC880(v3, (uint64_t)qword_1EFEA7700);
  sub_1D4519FFC();
  v5 = sub_1D43C39B8();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)sub_1D42CC940();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_1D42A7000, v4, v5, "Received version request", v6, 2u);
    sub_1D42CC934();
  }

  sub_1D42B28FC((uint64_t *)&unk_1EFE4A580);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D45261D0;
  v8 = MEMORY[0x1E0DEA968];
  sub_1D451B3B8();
  *(_QWORD *)(inited + 96) = v8;
  *(_QWORD *)(inited + 72) = 3157553;
  *(_QWORD *)(inited + 80) = 0xE300000000000000;
  sub_1D451A5E4();
  sub_1D42B8EC8();
  a2();
  return swift_bridgeObjectRelease();
}

void sub_1D43E3568(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  os_log_type_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  id v19;
  NSString *v20;
  void *v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  uint64_t v58;
  _BYTE *v59;
  void *v60;
  void *v61;
  uint64_t v63;
  NSObject *v64;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;

  v76 = *MEMORY[0x1E0C80C00];
  v67 = sub_1D4519BC4();
  v12 = *(_QWORD *)(v67 - 8);
  MEMORY[0x1E0C80A78](v67);
  sub_1D42CB210();
  v66 = v14 - v13;
  if (qword_1EFE40338 != -1)
    swift_once();
  v15 = sub_1D451A014();
  v64 = sub_1D42CC880(v15, (uint64_t)qword_1EFEA7700);
  sub_1D4519FFC();
  v16 = sub_1D43C39B8();
  if (sub_1D43A19EC(v16))
  {
    v17 = (uint8_t *)sub_1D42CC940();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_1D42A7000, v64, v7, "Received file transfer request", v17, 2u);
    sub_1D42CC934();
  }

  sub_1D451A5E4();
  sub_1D42B8EC8();
  a2();
  sub_1D42BE8B4();
  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D83928]), sel_init);
  objc_msgSend(v18, sel_setDispatchQueue_, a7);
  v72 = 0;
  if (!objc_msgSend(v18, sel_prepareTemplateAndReturnError_, &v72))
  {
    v33 = v72;
    v34 = (void *)sub_1D4519AA4();

    swift_willThrow();
    return;
  }
  v19 = v72;
  v20 = NSTemporaryDirectory();
  sub_1D451A6EC();

  sub_1D4519B10();
  swift_bridgeObjectRelease();
  v21 = (void *)sub_1D4519B28();
  v22 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
  v23 = v22(v66, v67);
  sub_1D43E6118(v23, sel_setTemporaryDirectoryURL_);

  v74 = sub_1D43E3E38;
  v75 = 0;
  v24 = (void *)MEMORY[0x1E0C809B0];
  v72 = (id)MEMORY[0x1E0C809B0];
  v73 = 1107296256;
  v25 = sub_1D43E6264((uint64_t)sub_1D43E3FE8);
  sub_1D43E6118((uint64_t)v25, sel_setProgressHandler_);
  _Block_release(v25);
  sub_1D43E61C0();
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = a1;
  *(_QWORD *)(v26 + 24) = a6;
  v74 = sub_1D43E5B74;
  v75 = v26;
  v72 = v24;
  v73 = 1107296256;
  v27 = sub_1D43E6264((uint64_t)sub_1D43E48A4);
  swift_bridgeObjectRetain();
  v28 = a6;
  v29 = swift_release();
  sub_1D43E6118(v29, sel_setCompletionHandler_);
  _Block_release(v27);
  sub_1D43E6140();
  sub_1D43E60F4();
  v30 = sub_1D43E61CC();
  if (v71)
  {
    v31 = sub_1D43E60E0();
    if ((v31 & 1) != 0)
    {
      v32 = (void *)sub_1D4519C3C();
      v31 = sub_1D42B5420(0x7550746567726174, 0xEF79654B63696C62);
      goto LABEL_12;
    }
  }
  else
  {
    v31 = sub_1D43E62B8(v30, &qword_1EFE47160);
  }
  v32 = 0;
LABEL_12:
  sub_1D43E6118(v31, sel_setPeerPublicKey_);

  sub_1D43E6248();
  sub_1D43E6140();
  sub_1D43E60F4();
  v35 = sub_1D43E61CC();
  if (v71)
  {
    v36 = sub_1D43E60E0();
    if ((v36 & 1) != 0)
    {
      v37 = (void *)sub_1D451A6C8();
      v36 = swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  else
  {
    v36 = sub_1D43E62B8(v35, &qword_1EFE47160);
  }
  v37 = 0;
LABEL_17:
  sub_1D43E6118(v36, sel_setTargetID_);

  sub_1D43E617C();
  v68 = v38;
  sub_1D43E6140();
  sub_1D43E60F4();
  v39 = sub_1D43E61CC();
  if (!v71)
  {
    sub_1D43E62B8(v39, &qword_1EFE47160);
    goto LABEL_32;
  }
  sub_1D42B28FC((uint64_t *)&unk_1EFE51A80);
  if ((sub_1D43E60E0() & 1) == 0)
  {
LABEL_32:
    sub_1D43E58B4();
    v58 = sub_1D42B6D0C();
    sub_1D43E622C(v58, v59);

    return;
  }
  v40 = v68;
  sub_1D43E6204();
  v69 = v41;
  v70 = v42;
  sub_1D43E6140();
  sub_1D43E60F4();
  sub_1D43E61CC();
  if ((sub_1D43E60E0() & 1) == 0)
  {
    sub_1D42BE8B4();
    goto LABEL_32;
  }
  v60 = v18;
  v43 = *(_QWORD *)(v40 + 16);
  if (v43)
  {
    v61 = (void *)objc_opt_self();
    v44 = (unint64_t *)(v40 + 40);
    do
    {
      v46 = *(v44 - 1);
      v45 = *v44;
      sub_1D42B28FC(&qword_1EFE40520);
      v47 = sub_1D43E6284();
      *(_OWORD *)(v47 + 16) = xmmword_1D4526260;
      *(_QWORD *)(v47 + 32) = a4;
      *(_QWORD *)(v47 + 40) = a5;
      *(_QWORD *)(v47 + 48) = v69;
      *(_QWORD *)(v47 + 56) = v70;
      v63 = v46;
      *(_QWORD *)(v47 + 64) = v46;
      *(_QWORD *)(v47 + 72) = v45;
      sub_1D43E6278();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v48 = (void *)sub_1D451A908();
      sub_1D42BE8B4();
      v49 = objc_msgSend(v61, sel_pathWithComponents_, v48);

      sub_1D451A6EC();
      if (sub_1D43E48F8())
      {
        sub_1D43E6278();
        sub_1D4519FFC();
        v50 = sub_1D43C39B8();
        if (sub_1D43A19EC(v50))
        {
          v51 = sub_1D42CC940();
          v52 = sub_1D42CC940();
          *(_DWORD *)v51 = sub_1D43E629C(v52).n128_u32[0];
          sub_1D42D71EC();
          *(_QWORD *)(v51 + 4) = sub_1D43D72EC(v46, v45, (uint64_t *)&v72);
          sub_1D43E6270();
          sub_1D43CB120(&dword_1D42A7000, v64, (os_log_type_t)v49, "Requested file path %s", (uint8_t *)v51);
          swift_arrayDestroy();
          sub_1D42CC934();
        }
        sub_1D430729C();

        v56 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D83920]), sel_init);
        sub_1D43E5BC0(v46, v45, v56);
        sub_1D4519B10();
        swift_bridgeObjectRelease();
        v57 = (void *)sub_1D4519B28();
        v22(v66, v67);
        objc_msgSend(v56, sel_setItemURL_, v57);

        objc_msgSend(v60, sel_addItem_, v56);
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1D42D71EC();
        sub_1D4519FFC();
        v53 = sub_1D43C39B8();
        if (os_log_type_enabled(v64, v53))
        {
          v54 = sub_1D42CC940();
          v55 = sub_1D42CC940();
          *(_DWORD *)v54 = sub_1D43E629C(v55).n128_u32[0];
          sub_1D42D71EC();
          *(_QWORD *)(v54 + 4) = sub_1D43D72EC(v63, v45, (uint64_t *)&v72);
          sub_1D43E6270();
          sub_1D43CB120(&dword_1D42A7000, v64, v53, "Skipping transferring of file %s", (uint8_t *)v54);
          sub_1D43E625C();
          sub_1D42CC934();
        }
        sub_1D430729C();

      }
      v44 += 2;
      --v43;
    }
    while (v43);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_msgSend(v60, sel_activate);
  objc_msgSend(v60, sel_finish);

}

void sub_1D43E3E38(void *a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  id v7;
  id v8;

  if (qword_1EFE40338 != -1)
    swift_once();
  v2 = sub_1D451A014();
  sub_1D42CC880(v2, (uint64_t)qword_1EFEA7700);
  v8 = a1;
  v3 = sub_1D4519FFC();
  v4 = sub_1D451AF74();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v5 = 138412290;
    v7 = v8;
    sub_1D451B1A8();
    *v6 = v8;

    _os_log_impl(&dword_1D42A7000, v3, v4, "Progressing %@", v5, 0xCu);
    sub_1D42B28FC((uint64_t *)&unk_1EFE50850);
    swift_arrayDestroy();
    MEMORY[0x1D825E524](v6, -1, -1);
    MEMORY[0x1D825E524](v5, -1, -1);

  }
  else
  {

  }
}

void sub_1D43E3FE8(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_1D43E4038(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  _QWORD v22[2];

  v22[1] = *MEMORY[0x1E0C80C00];
  v6 = sub_1D42B28FC(&qword_1EFE4DC70);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFE40338 != -1)
    swift_once();
  v9 = sub_1D451A014();
  sub_1D42CC880(v9, (uint64_t)qword_1EFEA7700);
  v10 = a1;
  v11 = a1;
  v12 = sub_1D4519FFC();
  v13 = sub_1D451AF74();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v14 = 138412290;
    if (a1)
    {
      v16 = a1;
      v17 = _swift_stdlib_bridgeErrorToNSError();
      v22[0] = v17;
      sub_1D451B1A8();
    }
    else
    {
      v22[0] = 0;
      sub_1D451B1A8();
      v17 = 0;
    }
    *v15 = v17;

    _os_log_impl(&dword_1D42A7000, v12, v13, "Finished transferring files with error %@", v14, 0xCu);
    sub_1D42B28FC((uint64_t *)&unk_1EFE50850);
    swift_arrayDestroy();
    MEMORY[0x1D825E524](v15, -1, -1);
    MEMORY[0x1D825E524](v14, -1, -1);
  }
  else
  {

  }
  v18 = sub_1D451AAC4();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v8, 1, 1, v18);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = 0;
  v19[3] = 0;
  v19[4] = a2;
  v19[5] = a3;
  swift_bridgeObjectRetain();
  v20 = a3;
  sub_1D444D358();
  return swift_release();
}

uint64_t sub_1D43E42CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 128) = a4;
  *(_QWORD *)(v5 + 136) = a5;
  return swift_task_switch();
}

uint64_t sub_1D43E42E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _BYTE *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _DWORD *v12;
  uint64_t v13;
  _QWORD *v14;

  sub_1D43E6248();
  *(_QWORD *)(v0 + 88) = v1;
  v2 = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v0 + 96) = 0xE800000000000000;
  sub_1D451B3B8();
  sub_1D4364A70(v2, (_OWORD *)(v0 + 56));
  sub_1D42D6F98(v0 + 16);
  if (*(_QWORD *)(v0 + 80))
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v4 = *(_QWORD *)(v0 + 104);
      v3 = *(_QWORD *)(v0 + 112);
      *(_QWORD *)(v0 + 144) = v3;
      type metadata accessor for SNFileSharingUtils();
      v5 = sub_1D451A5E4();
      *(_QWORD *)(v0 + 152) = v5;
      v6 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 160) = v6;
      *v6 = v0;
      v6[1] = sub_1D43E45CC;
      return sub_1D4329850(0xD000000000000014, 0x80000001D4555FA0, v5, v4, v3, *(_QWORD *)(v0 + 136));
    }
  }
  else
  {
    sub_1D42BDFDC(v0 + 56, &qword_1EFE47160);
  }
  sub_1D43E58B4();
  swift_allocError();
  *v8 = 0;
  swift_willThrow();
  if (qword_1EFE40338 != -1)
    swift_once();
  v9 = sub_1D430710C();
  v10 = sub_1D42CC880(v9, (uint64_t)qword_1EFEA7700);
  sub_1D43E61D4();
  sub_1D43E61D4();
  sub_1D4519FFC();
  v11 = sub_1D43C39B8();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (_DWORD *)sub_1D42CC940();
    v14 = (_QWORD *)sub_1D42CC940();
    *v12 = 138412290;
    sub_1D43E61D4();
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 120) = v13;
    sub_1D451B1A8();
    *v14 = v13;
    sub_1D43E614C();
    sub_1D43E614C();
    sub_1D43C3A50(&dword_1D42A7000, v10, v11, "Message transmitted with error: %@");
    sub_1D42B28FC((uint64_t *)&unk_1EFE50850);
    swift_arrayDestroy();
    sub_1D42CC934();
  }
  sub_1D43E614C();
  sub_1D43E614C();
  sub_1D43E614C();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D43E45CC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    sub_1D42BE8B4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D42B7204();
  }
  sub_1D42B8EC8();
  return swift_task_switch();
}

uint64_t sub_1D43E4658()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if (qword_1EFE40338 != -1)
    swift_once();
  v1 = sub_1D430710C();
  v2 = sub_1D42CC880(v1, (uint64_t)qword_1EFEA7700);
  sub_1D4519FFC();
  v3 = sub_1D43C39B8();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)sub_1D42CC940();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1D42A7000, v2, v3, "Message transmitted successfully!", v4, 2u);
    sub_1D42CC934();
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D43E4720()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _DWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  sub_1D42B7204();
  if (qword_1EFE40338 != -1)
    swift_once();
  v1 = sub_1D430710C();
  v2 = sub_1D42CC880(v1, (uint64_t)qword_1EFEA7700);
  sub_1D4311FD8();
  sub_1D4311FD8();
  sub_1D4519FFC();
  v3 = sub_1D43C39B8();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (_DWORD *)sub_1D42CC940();
    v5 = (_QWORD *)sub_1D42CC940();
    *v4 = 138412290;
    sub_1D4311FD8();
    v6 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 120) = v6;
    sub_1D451B1A8();
    *v5 = v6;
    sub_1D4311F78();
    sub_1D4311F78();
    sub_1D43C3A50(&dword_1D42A7000, v2, v3, "Message transmitted with error: %@");
    sub_1D42B28FC((uint64_t *)&unk_1EFE50850);
    swift_arrayDestroy();
    sub_1D42CC934();
  }
  sub_1D4311F78();
  sub_1D4311F78();
  sub_1D4311F78();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1D43E48A4(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

BOOL sub_1D43E48F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  _BOOL8 v6;

  v1 = sub_1D4519BC4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  sub_1D43B9F74();
  sub_1D4519B10();
  if (sub_1D4519AE0() == 7758199 && v3 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v5 = sub_1D451B820();
  sub_1D42B7204();
  if ((v5 & 1) != 0)
  {
LABEL_8:
    type metadata accessor for SNAudioFileUtils();
    v6 = (uint64_t)sub_1D446897C() > 0;
    goto LABEL_9;
  }
  v6 = 1;
LABEL_9:
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  return v6;
}

void sub_1D43E49E8(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  id v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint8_t *v44;
  uint64_t v45;
  _BYTE *v46;
  id v47;
  unsigned int v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  _QWORD *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(void);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;

  v98 = *MEMORY[0x1E0C80C00];
  sub_1D43E6204();
  v83 = v9;
  v87 = v10;
  v11 = sub_1D43E6290();
  sub_1D43E61F4(v11, v12, v13, v14, v15, v16, v17, v18, v71, v74, v77, v80, v83, v87, (uint64_t)v91, v92, v93, v94, v95,
    v96);
  sub_1D42D6F98((uint64_t)&v91);
  if (!v97)
    goto LABEL_12;
  if ((sub_1D43E6168() & 1) == 0)
  {
LABEL_13:
    sub_1D43E58B4();
    v45 = sub_1D42B6D0C();
    sub_1D43E622C(v45, v46);
    return;
  }
  v19 = v84;
  v20 = v88;
  sub_1D43E617C();
  v85 = v21;
  v89 = v22;
  v23 = sub_1D43E6290();
  sub_1D43E61F4(v23, v24, v25, v26, v27, v28, v29, v30, v72, v75, v78, v81, v85, v89, (uint64_t)v91, v92, v93, v94, v95,
    v96);
  sub_1D42D6F98((uint64_t)&v91);
  if (!v97)
  {
    sub_1D42D3258();
LABEL_12:
    sub_1D42BDFDC((uint64_t)&v96, &qword_1EFE47160);
    goto LABEL_13;
  }
  if ((sub_1D43E6168() & 1) == 0)
  {
    sub_1D42D3258();
    goto LABEL_13;
  }
  v79 = a3;
  v82 = a2;
  v31 = (void *)objc_opt_self();
  sub_1D42B28FC(&qword_1EFE40520);
  v32 = sub_1D43E6284();
  *(_OWORD *)(v32 + 16) = xmmword_1D4526260;
  *(_QWORD *)(v32 + 32) = a4;
  *(_QWORD *)(v32 + 40) = a5;
  *(_QWORD *)(v32 + 48) = v19;
  *(_QWORD *)(v32 + 56) = v20;
  *(_QWORD *)(v32 + 64) = v86;
  *(_QWORD *)(v32 + 72) = v90;
  swift_bridgeObjectRetain();
  v33 = (void *)sub_1D451A908();
  swift_bridgeObjectRelease();
  v34 = objc_msgSend(v31, sel_pathWithComponents_, v33);

  v35 = v34;
  if (!v34)
  {
    sub_1D451A6EC();
    v35 = (void *)sub_1D451A6C8();
    sub_1D42D3258();
  }
  v36 = sub_1D451A6EC();
  v38 = v37;
  if (qword_1EFE40338 != -1)
    swift_once();
  v39 = sub_1D451A014();
  v40 = sub_1D42CC880(v39, (uint64_t)qword_1EFEA7700);
  swift_bridgeObjectRetain();
  v76 = v40;
  v41 = sub_1D4519FFC();
  v42 = sub_1D451AF74();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = v36;
    v44 = (uint8_t *)sub_1D42CC940();
    v91 = (id)sub_1D42CC940();
    *(_DWORD *)v44 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v96 = sub_1D43D72EC(v43, v38, (uint64_t *)&v91);
    sub_1D451B1A8();
    sub_1D43E6270();
    sub_1D43CB120(&dword_1D42A7000, v41, v42, "Received file deletion request on server for file path: %s", v44);
    sub_1D43E625C();
    sub_1D42CC934();
  }
  swift_bridgeObjectRelease_n();

  v47 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v91 = 0;
  v48 = objc_msgSend(v47, sel_removeItemAtPath_error_, v35, &v91);

  if (v48)
  {
    v49 = v91;
    sub_1D451A5E4();
    sub_1D42B8EC8();
    sub_1D43E623C(v50, v51, v52, v53, v54, v55, v56, v57, v73, v40, v79, v82);
    sub_1D42BE8B4();
  }
  else
  {
    v58 = v91;
    v59 = sub_1D4519AA4();

    swift_willThrow();
    sub_1D43E61D4();
    sub_1D43E61D4();
    v60 = sub_1D4519FFC();
    v61 = sub_1D451AF5C();
    if (os_log_type_enabled(v60, v61))
    {
      v62 = (uint8_t *)sub_1D42CC940();
      v63 = (_QWORD *)sub_1D42CC940();
      *(_DWORD *)v62 = 138412290;
      sub_1D43E61D4();
      v64 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v91 = v64;
      sub_1D451B1A8();
      *v63 = v64;
      sub_1D43E614C();
      sub_1D43E614C();
      sub_1D43CB120(&dword_1D42A7000, v60, v61, "File deletion request failed on the server: %@", v62);
      sub_1D42B28FC((uint64_t *)&unk_1EFE50850);
      sub_1D43E625C();
      sub_1D42CC934();
    }
    sub_1D43E614C();
    sub_1D43E614C();

    v65 = sub_1D451A5E4();
    sub_1D43E61D4();
    sub_1D43E623C(v65, 0, v59, v66, v67, v68, v69, v70, v73, v76, v79, v82);
    sub_1D43E614C();
    sub_1D42BE8B4();
    sub_1D43E614C();
  }
}

uint64_t sub_1D43E4F24()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 192) = v0;
  sub_1D42B8EC8();
  return swift_task_switch();
}

uint64_t sub_1D43E4F40()
{
  _QWORD *v0;
  char *v1;
  id v2;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v1 = (char *)v0[24];
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D83900]), sel_init);
  v0[25] = v2;
  v3 = v2;
  sub_1D43E2F88((uint64_t)v2);
  objc_msgSend(v3, sel_setDispatchQueue_, *(_QWORD *)&v1[OBJC_IVAR___SNFileServer_queue]);
  v4 = (void *)sub_1D43E621C();
  objc_msgSend(v3, sel_deregisterRequestID_, v4);

  v5 = (void *)sub_1D43E621C();
  v0[22] = sub_1D43E539C;
  v0[23] = 0;
  v6 = MEMORY[0x1E0C809B0];
  v0[18] = MEMORY[0x1E0C809B0];
  v0[19] = 1107296256;
  v7 = sub_1D43E6198((uint64_t)&unk_1E97B35E8);
  sub_1D43E6104((uint64_t)v7, sel_registerRequestID_options_handler_);
  sub_1D43E62B0();

  v8 = sub_1D43E6134();
  sub_1D43E6154(v8);

  v9 = (void *)sub_1D43E6134();
  sub_1D43E61C0();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v1;
  *(_QWORD *)(v10 + 24) = v3;
  v0[22] = sub_1D43E5880;
  v0[23] = v10;
  v0[18] = v6;
  v0[19] = 1107296256;
  sub_1D43E6198((uint64_t)&unk_1E97BCD30);
  v11 = (void *)v0[23];
  v12 = v3;
  v13 = v1;
  v14 = swift_release();
  sub_1D43E6104(v14, sel_registerRequestID_options_handler_);
  sub_1D43E62B0();

  v15 = sub_1D43E6134();
  sub_1D43E6154(v15);

  v16 = (void *)sub_1D43E6134();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v13;
  v0[22] = sub_1D43E58AC;
  v0[23] = v17;
  v0[18] = v6;
  v0[19] = 1107296256;
  sub_1D43E6198((uint64_t)&unk_1E97B3AE8);
  v18 = v13;
  v19 = swift_release();
  sub_1D43E6104(v19, sel_registerRequestID_options_handler_);
  sub_1D43E62B0();

  v0[2] = v0;
  v0[3] = sub_1D43E51EC;
  v20 = sub_1D43E62C0();
  v0[18] = v6;
  v0[19] = 0x40000000;
  v0[20] = sub_1D44C3644;
  v0[21] = &unk_1E97B37B8;
  v0[22] = v20;
  objc_msgSend(v12, sel_activateWithCompletion_, v0 + 18);
  return swift_continuation_await();
}

uint64_t sub_1D43E51EC()
{
  uint64_t v0;

  sub_1D43E61DC();
  *(_QWORD *)(v0 + 208) = *(_QWORD *)(v0 + 48);
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43E5230()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(void **)(v0[24] + OBJC_IVAR___SNFileServer_server);
  v0[10] = v0;
  v0[11] = sub_1D43E52C0;
  v2 = sub_1D43E62C0();
  v0[18] = MEMORY[0x1E0C809B0];
  v3 = v0 + 18;
  v3[1] = 0x40000000;
  v3[2] = sub_1D44C3644;
  v3[3] = &unk_1E97B37D0;
  v3[4] = v2;
  objc_msgSend(v1, sel_activateWithCompletion_, v3);
  return swift_continuation_await();
}

uint64_t sub_1D43E52C0()
{
  uint64_t v0;

  sub_1D43E61DC();
  *(_QWORD *)(v0 + 216) = *(_QWORD *)(v0 + 112);
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43E5304()
{
  uint64_t v0;

  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43E5330()
{
  uint64_t v0;

  swift_willThrow();

  return sub_1D43E6124(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43E5364()
{
  uint64_t v0;

  swift_willThrow();

  return sub_1D43E6124(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43E539C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;

  v4 = type metadata accessor for SNFileServer();
  return sub_1D43E33EC(v4, a3);
}

void sub_1D43E53CC(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, void *a6)
{
  type metadata accessor for SNFileServer();
  sub_1D43E3568(a1, a3, a4, *(_QWORD *)(a5 + OBJC_IVAR___SNFileServer_rootDirectory), *(_QWORD *)(a5 + OBJC_IVAR___SNFileServer_rootDirectory + 8), a6, *(_QWORD *)(a5 + OBJC_IVAR___SNFileServer_queue));
}

void sub_1D43E5474(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5)
{
  type metadata accessor for SNFileServer();
  sub_1D43E49E8(a1, a3, a4, *(_QWORD *)(a5 + OBJC_IVAR___SNFileServer_rootDirectory), *(_QWORD *)(a5 + OBJC_IVAR___SNFileServer_rootDirectory + 8));
}

uint64_t sub_1D43E5554(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_1D43E55B4;
  return sub_1D43E4F24();
}

uint64_t sub_1D43E55B4()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *(void **)(*v1 + 16);
  v3 = *v1;
  swift_task_dealloc();

  v4 = *(_QWORD *)(v3 + 24);
  if (v0)
  {
    v5 = (void *)sub_1D4519A98();

    (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 16))(*(_QWORD *)(v3 + 24), 0);
  }
  _Block_release(*(const void **)(v3 + 24));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1D43E5654(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v11;

  v4 = sub_1D42B28FC(&qword_1EFE4DC70);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D451AAC4();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v6, 1, 1, v7);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = a1;
  v8[5] = a2;
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = &unk_1EFE50178;
  v9[5] = v8;
  sub_1D43E5998((uint64_t)v6, (uint64_t)&unk_1EFE50188, (uint64_t)v9);
  return swift_release();
}

id SNFileServer.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SNFileServer.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SNFileServer.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SNFileServer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SNFileServer()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNFileServer()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1D43E5840(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D43E5850()
{
  return swift_release();
}

uint64_t sub_1D43E5858()
{
  uint64_t v0;

  sub_1D43E61C0();
  return swift_deallocObject();
}

void sub_1D43E5880(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v4;

  sub_1D43E53CC(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(void **)(v4 + 24));
}

uint64_t sub_1D43E5888()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1D43E58AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v4;

  sub_1D43E5474(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

unint64_t sub_1D43E58B4()
{
  unint64_t result;

  result = qword_1EFE50148;
  if (!qword_1EFE50148)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4537B9C, &type metadata for SNFileServer.DomainError);
    atomic_store(result, &qword_1EFE50148);
  }
  return result;
}

uint64_t sub_1D43E58F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_1D43E60BC;
  return v6();
}

uint64_t sub_1D43E5944(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_1D43E60BC;
  return v7();
}

uint64_t sub_1D43E5998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1D451AAC4();
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, 1, v6) == 1)
  {
    sub_1D42BDFDC(a1, &qword_1EFE4DC70);
  }
  else
  {
    sub_1D451AAB8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1D451AA70();
    swift_unknownObjectRelease();
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1D43E5ADC(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1D43E5B40;
  return v6(a1);
}

uint64_t sub_1D43E5B40()
{
  uint64_t v0;

  sub_1D42F9A68();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43E5B68()
{
  return sub_1D43E5CB4((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1D43E5B74(void *a1)
{
  uint64_t v1;

  return sub_1D43E4038(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_1D43E5B7C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_1D451A6C8();
  objc_msgSend(a3, sel_setServiceType_, v4);

}

void sub_1D43E5BC0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_1D451A6C8();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setFilename_, v4);

}

uint64_t sub_1D43E5C10()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1D43E5C44()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1D43C0F84;
  v2 = sub_1D43E61A4();
  return sub_1D43E42CC(v2, v3, v4, v5, v6);
}

uint64_t sub_1D43E5CA8()
{
  return sub_1D43E5CB4((void (*)(_QWORD))MEMORY[0x1E0C80958]);
}

uint64_t sub_1D43E5CB4(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));

  sub_1D43E61C0();
  return swift_deallocObject();
}

uint64_t sub_1D43E5CE0()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1D43E60BC;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1EFE50160 + dword_1EFE50160))(v2, v3);
}

uint64_t sub_1D43E5D48()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1D43E60BC;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1EFE50170 + dword_1EFE50170))(v2, v3, v4);
}

uint64_t sub_1D43E5DC4()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D43E5DF0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1D43E60BC;
  v2 = sub_1D43E61A4();
  return v3(v2);
}

uint64_t sub_1D43E5E60()
{
  swift_release();
  sub_1D43E61C0();
  return swift_deallocObject();
}

uint64_t sub_1D43E5E80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D42F92EC;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EFE50190 + dword_1EFE50190))(a1, v4);
}

unint64_t sub_1D43E5EF0()
{
  unint64_t result;

  result = qword_1EFE47A20;
  if (!qword_1EFE47A20)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFE47A20);
  }
  return result;
}

unint64_t sub_1D43E5F2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFE47A18;
  if (!qword_1EFE47A18)
  {
    v1 = sub_1D451AFA4();
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0DEF828], v1);
    atomic_store(result, (unint64_t *)&qword_1EFE47A18);
  }
  return result;
}

unint64_t sub_1D43E5F6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFE479F8;
  if (!qword_1EFE479F8)
  {
    v1 = sub_1D42B8B10(&qword_1EFE479F0);
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EFE479F8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SNFileServer.DomainError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D43E5FFC + 4 * byte_1D4537B05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D43E6030 + 4 * byte_1D4537B00[v4]))();
}

uint64_t sub_1D43E6030(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43E6038(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D43E6040);
  return result;
}

uint64_t sub_1D43E604C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D43E6054);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D43E6058(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43E6060(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SNFileServer.DomainError()
{
  return &type metadata for SNFileServer.DomainError;
}

unint64_t sub_1D43E6080()
{
  unint64_t result;

  result = qword_1EFE501A0;
  if (!qword_1EFE501A0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4537B74, &type metadata for SNFileServer.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE501A0);
  }
  return result;
}

uint64_t sub_1D43E60E0()
{
  return swift_dynamicCast();
}

void sub_1D43E60F4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D4364A70(v0, (_OWORD *)(v1 - 176));
}

id sub_1D43E6104(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  return objc_msgSend(v2, a2, v3, 0, v4);
}

id sub_1D43E6118(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;

  return objc_msgSend(v3, a2, v2);
}

uint64_t sub_1D43E6124(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D43E6134()
{
  return sub_1D451A6C8();
}

uint64_t sub_1D43E6140()
{
  return sub_1D451B3B8();
}

void sub_1D43E614C()
{
  void *v0;

}

id sub_1D43E6154(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  return objc_msgSend(v1, (SEL)(v2 + 1230), a1);
}

uint64_t sub_1D43E6168()
{
  return swift_dynamicCast();
}

void *sub_1D43E6198@<X0>(uint64_t a1@<X8>)
{
  const void *v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 160) = v3;
  *(_QWORD *)(v2 + 168) = a1;
  return _Block_copy(v1);
}

uint64_t sub_1D43E61A4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D43E61CC()
{
  uint64_t v0;

  return sub_1D42D6F98(v0 - 144);
}

id sub_1D43E61D4()
{
  void *v0;

  return v0;
}

void sub_1D43E61DC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 - 8);
  *v2 = *v0;
  *v2 = *v0;
}

void sub_1D43E61F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int128 a20)
{
  uint64_t v20;

  sub_1D4364A70(v20, &a20);
}

uint64_t sub_1D43E621C()
{
  return sub_1D451A6C8();
}

uint64_t sub_1D43E622C(uint64_t a1, _BYTE *a2)
{
  *a2 = 1;
  return swift_willThrow();
}

uint64_t sub_1D43E623C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(void))
{
  return a12();
}

uint64_t sub_1D43E625C()
{
  return swift_arrayDestroy();
}

void *sub_1D43E6264@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = a1;
  *(_QWORD *)(v2 - 120) = v1;
  return _Block_copy((const void *)(v2 - 144));
}

uint64_t sub_1D43E6270()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1D43E6278()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1D43E6284()
{
  return swift_allocObject();
}

uint64_t sub_1D43E6290()
{
  return sub_1D451B3B8();
}

__n128 sub_1D43E629C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 144) = a1;
  return *(__n128 *)(v1 - 336);
}

void sub_1D43E62B0()
{
  const void *v0;

  _Block_release(v0);
}

uint64_t sub_1D43E62B8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_1D42BDFDC(v2 - 176, a2);
}

uint64_t sub_1D43E62C0()
{
  return swift_continuation_init();
}

const char *static LogUtils.audioBufferProcessedSignpostName.getter()
{
  return "AudioBufferProcessed";
}

void sub_1D43E62E0()
{
  uint64_t v0;

  v0 = sub_1D4519FB4();
  sub_1D43E757C(v0, qword_1EFEA7728);
  sub_1D42CC880(v0, (uint64_t)qword_1EFEA7728);
  sub_1D4519FA8();
  sub_1D42B6E24();
}

uint64_t sub_1D43E6344()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v1 = sub_1D451AFA4();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1D451A470();
  MEMORY[0x1E0C80A78](v2);
  sub_1D43B9F74();
  v3 = sub_1D451AFB0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1D42D7108();
  sub_1D43E5EF0();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v0, *MEMORY[0x1E0DEF8D8], v3);
  sub_1D451A464();
  sub_1D43E5F2C();
  sub_1D42B28FC(&qword_1EFE479F0);
  sub_1D43E5F6C();
  sub_1D451B2EC();
  result = sub_1D451AFD4();
  qword_1EFEA7830 = result;
  return result;
}

uint64_t LogUtils.AudioBufferProcessedSignpostPayload.audioStreamID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D42CB6CC();
  return v1;
}

uint64_t LogUtils.AudioBufferProcessedSignpostPayload.hash(into:)()
{
  sub_1D42CB6CC();
  sub_1D451A74C();
  return swift_bridgeObjectRelease();
}

uint64_t static LogUtils.AudioBufferProcessedSignpostPayload.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1D451B820();
}

uint64_t sub_1D43E6544(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7274536F69647561 && a2 == 0xED000044496D6165)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1D451B820();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1D43E65EC()
{
  return 0x7274536F69647561;
}

uint64_t sub_1D43E6614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D43E6544(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D43E663C()
{
  sub_1D43E6744();
  return sub_1D451BA3C();
}

uint64_t sub_1D43E6664()
{
  sub_1D43E6744();
  return sub_1D451BA48();
}

void LogUtils.AudioBufferProcessedSignpostPayload.encode(to:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D42BE910();
  v1 = v0;
  v2 = sub_1D42B28FC(&qword_1EFE501A8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1D42F1ED4();
  sub_1D42B5528(v1, v1[3]);
  sub_1D43E6744();
  sub_1D451BA24();
  sub_1D451B724();
  sub_1D43C2340(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_1D42BE844();
}

unint64_t sub_1D43E6744()
{
  unint64_t result;

  result = qword_1EFE501B0;
  if (!qword_1EFE501B0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4537DB8, &type metadata for LogUtils.AudioBufferProcessedSignpostPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE501B0);
  }
  return result;
}

uint64_t LogUtils.AudioBufferProcessedSignpostPayload.hashValue.getter()
{
  sub_1D451B958();
  sub_1D42CB6CC();
  sub_1D451A74C();
  swift_bridgeObjectRelease();
  return sub_1D451B994();
}

void LogUtils.AudioBufferProcessedSignpostPayload.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1D42BE910();
  v2 = v1;
  v4 = v3;
  v5 = sub_1D42B28FC(&qword_1EFE501B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1D42F1ED4();
  sub_1D42B5528(v2, v2[3]);
  sub_1D43E6744();
  sub_1D451BA0C();
  if (!v0)
  {
    v7 = sub_1D451B64C();
    v9 = v8;
    sub_1D43C2340(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    *v4 = v7;
    v4[1] = v9;
  }
  sub_1D42B5400((uint64_t)v2);
  sub_1D42BE844();
}

void sub_1D43E68B4()
{
  LogUtils.AudioBufferProcessedSignpostPayload.init(from:)();
}

void sub_1D43E68C8()
{
  LogUtils.AudioBufferProcessedSignpostPayload.encode(to:)();
}

unint64_t sub_1D43E68E8()
{
  unint64_t result;

  result = qword_1EFE501C0;
  if (!qword_1EFE501C0)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for LogUtils.AudioBufferProcessedSignpostPayload, &type metadata for LogUtils.AudioBufferProcessedSignpostPayload);
    atomic_store(result, (unint64_t *)&qword_1EFE501C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for LogUtils()
{
  return &type metadata for LogUtils;
}

ValueMetadata *type metadata accessor for LogUtils.AudioBufferProcessedSignpostPayload()
{
  return &type metadata for LogUtils.AudioBufferProcessedSignpostPayload;
}

uint64_t storeEnumTagSinglePayload for LogUtils.AudioBufferProcessedSignpostPayload.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D43E6988 + 4 * byte_1D4537BE0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D43E69A8 + 4 * byte_1D4537BE5[v4]))();
}

_BYTE *sub_1D43E6988(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D43E69A8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D43E69B0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D43E69B8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D43E69C0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D43E69C8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LogUtils.AudioBufferProcessedSignpostPayload.CodingKeys()
{
  return &type metadata for LogUtils.AudioBufferProcessedSignpostPayload.CodingKeys;
}

unint64_t sub_1D43E69E8()
{
  unint64_t result;

  result = qword_1EFE501C8;
  if (!qword_1EFE501C8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4537D90, &type metadata for LogUtils.AudioBufferProcessedSignpostPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE501C8);
  }
  return result;
}

unint64_t sub_1D43E6A28()
{
  unint64_t result;

  result = qword_1EFE501D0;
  if (!qword_1EFE501D0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4537D00, &type metadata for LogUtils.AudioBufferProcessedSignpostPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE501D0);
  }
  return result;
}

unint64_t sub_1D43E6A68()
{
  unint64_t result;

  result = qword_1EFE501D8;
  if (!qword_1EFE501D8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4537D28, &type metadata for LogUtils.AudioBufferProcessedSignpostPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE501D8);
  }
  return result;
}

void sub_1D43E6AA4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v18;
  void (*v19)(uint64_t@<X0>, uint64_t@<X1>, uint64_t *@<X8>);
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  if (a5)
  {
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = a5;
    *(_QWORD *)(v18 + 24) = a6;
    v19 = sub_1D42E33C8;
  }
  else
  {
    v19 = sub_1D43E6EA0;
  }
  v26 = a4;
  if (a7)
  {
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = a7;
    *(_QWORD *)(v20 + 24) = a8;
    v21 = (void (*)(uint64_t, uint64_t))sub_1D43E75E0;
  }
  else
  {
    v21 = (void (*)(uint64_t, uint64_t))sub_1D43E6F08;
  }
  v23 = v21;
  v27 = a2;
  v28 = a3;
  v29 = v26;
  sub_1D42E33B0(a5);
  sub_1D42E33B0(a7);
  v19(a1, (uint64_t)&v27, &v30);
  if (v11)
  {

    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    v22 = v30;
    sub_1D42E72F0(a9, a10, a11);
    v27 = a2;
    v28 = a3;
    v29 = v26;
    v30 = v22;
    v23(a1, (uint64_t)&v27);

    swift_release();
    swift_release();

  }
}

void sub_1D43E6CBC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;

  v6 = a3(a1, *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned __int8 *)(a2 + 16));
  if (!v4)
    *a4 = v6;
  sub_1D42B6E24();
}

uint64_t sub_1D43E6CF4(uint64_t a1, const char *a2, uint64_t a3, char a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_signpost_type_t v14;
  uint64_t result;
  uint8_t *v16;
  os_signpost_id_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v6 = sub_1D4519F90();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v19 - v11;
  sub_1D4519F84();
  v13 = sub_1D4519F9C();
  v14 = sub_1D451AFF8();
  result = sub_1D451B148();
  if ((result & 1) == 0)
    goto LABEL_10;
  if ((a4 & 1) == 0)
  {
    if (a2)
    {
LABEL_9:
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      v17 = sub_1D4519F78();
      _os_signpost_emit_with_name_impl(&dword_1D42A7000, v13, v14, v17, a2, "", v16, 2u);
      MEMORY[0x1D825E524](v16, -1, -1);
LABEL_10:

      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
      sub_1D4519FE4();
      swift_allocObject();
      v18 = sub_1D4519FD8();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      return v18;
    }
    __break(1u);
  }
  if ((unint64_t)a2 >> 32)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (a2 >> 11 != 27)
  {
    if (a2 >> 16 <= 0x10)
    {
      a2 = &v20;
      goto LABEL_9;
    }
    goto LABEL_12;
  }
LABEL_13:
  __break(1u);
  return result;
}

void sub_1D43E6EA0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = sub_1D43E6CF4(a1, *(const char **)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
  sub_1D42B6E24();
}

void sub_1D43E6ED4(uint64_t a1, uint64_t a2, _QWORD *a3, void (*a4)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a4(a1, *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned __int8 *)(a2 + 16), *a3);
  sub_1D42B6E24();
}

uint64_t sub_1D43E6F08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  char v10;
  NSObject *v11;
  os_signpost_type_t v12;
  uint64_t result;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  uint8_t *v18;
  os_signpost_id_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v4 = sub_1D4519FC0();
  v21 = *(_QWORD *)(v4 - 8);
  v22 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D4519F90();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1D43B9F74();
  v9 = *(const char **)a2;
  v10 = *(_BYTE *)(a2 + 16);
  v11 = sub_1D4519F9C();
  sub_1D4519FCC();
  v12 = sub_1D451AFEC();
  result = sub_1D451B148();
  if ((result & 1) == 0)
  {
LABEL_13:

    return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v2, v7);
  }
  v20 = v8;
  if ((v10 & 1) == 0)
  {
    if (v9)
    {
      v14 = v9;
LABEL_9:
      swift_retain();
      sub_1D4519FF0();
      swift_release();
      v16 = v21;
      v15 = v22;
      if ((*(unsigned int (**)(char *, uint64_t))(v21 + 88))(v6, v22) == *MEMORY[0x1E0DF2190])
      {
        v17 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v15);
        v17 = "";
      }
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      v19 = sub_1D4519F78();
      _os_signpost_emit_with_name_impl(&dword_1D42A7000, v11, v12, v19, v14, v17, v18, 2u);
      MEMORY[0x1D825E524](v18, -1, -1);
      v8 = v20;
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_15;
  }
  if ((unint64_t)v9 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v9 >> 11 != 27)
  {
    if (v9 >> 16 <= 0x10)
    {
      v14 = &v23;
      goto LABEL_9;
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

void sub_1D43E7104()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D42BE910();
  v17 = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = sub_1D4519FB4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1D42D7108();
  v12 = qword_1EFE472E0;
  v13 = v5;
  v14 = v3;
  if (v12 != -1)
    swift_once();
  v15 = sub_1D42CC880(v10, (uint64_t)qword_1EFEA7728);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v0, v15, v10);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v9;
  *(_QWORD *)(v16 + 24) = v7;
  swift_bridgeObjectRetain();
  sub_1D43E6AA4(v0, (uint64_t)"AudioBufferProcessed", 20, 2, (uint64_t)sub_1D42E3398, v16, 0, 0, v13, v14, v17);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0, v10);

  swift_release();
  sub_1D42BE844();
}

uint64_t sub_1D43E7258()
{
  return sub_1D43E72A8();
}

uint64_t sub_1D43E7284()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D43E72A8()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  char v5;
  char v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  NSObject *v14;
  uint64_t result;
  uint64_t v16;
  uint8_t *v17;
  os_signpost_id_t v18;
  uint64_t v19;
  uint64_t (*v20[3])(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  int v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1D42BE910();
  v27 = v1;
  v28 = v2;
  v4 = v3;
  v6 = v5;
  v23 = v7;
  v8 = sub_1D4519F90();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v20 - v11;
  v13 = v4[1];
  v21 = *v4;
  swift_bridgeObjectRetain_n();
  sub_1D4519F84();
  v14 = sub_1D4519F9C();
  v22 = sub_1D451AFF8();
  result = sub_1D451B148();
  if ((result & 1) == 0)
    goto LABEL_5;
  v20[2] = v0;
  if ((v6 & 1) == 0)
  {
    if (!v23)
    {
      sub_1D43E7624();
      __break(1u);
LABEL_5:
      sub_1D43E7624();

      sub_1D43E7614(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
      sub_1D4519FE4();
      swift_allocObject();
      v19 = sub_1D4519FD8();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      return v19;
    }
LABEL_10:
    v20[0] = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    sub_1D43E7614(v20[0]);
    v16 = swift_slowAlloc();
    v20[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v9;
    v17 = (uint8_t *)v16;
    v25 = swift_slowAlloc();
    *(_DWORD *)v17 = 136315138;
    swift_bridgeObjectRetain();
    v24 = sub_1D43D72EC(v21, v13, &v25);
    sub_1D451B1A8();
    swift_bridgeObjectRelease_n();
    v18 = sub_1D4519F78();
    _os_signpost_emit_with_name_impl(&dword_1D42A7000, v14, (os_signpost_type_t)v22, v18, v23, "{\n  \"audioStreamID\": \"%s\"\n}", v17, 0xCu);
    swift_arrayDestroy();
    sub_1D42CC934();
  }
  if ((unint64_t)v23 >> 32)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v23 >> 11 != 27)
  {
    if (v23 >> 16 <= 0x10)
    {
      v23 = (const char *)&v26;
      goto LABEL_10;
    }
    goto LABEL_12;
  }
LABEL_13:
  __break(1u);
  return result;
}

void sub_1D43E7534()
{
  swift_retain();
  sub_1D43EC3C0();
}

uint64_t *sub_1D43E757C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1D43E75BC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1D43E75E0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;

  (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))(v3 + 16))(a1, *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned __int8 *)(a2 + 16), *a3);
  sub_1D42B6E24();
}

uint64_t sub_1D43E7614@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v2, v3, v1);
}

uint64_t sub_1D43E7624()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1D43E7630(void *a1, void *a2, int a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12;
  id v13;

  sub_1D42B28FC(&qword_1EFE501E0);
  swift_allocObject();
  v12 = sub_1D451A230();
  type metadata accessor for SNAudioRecordingQueue();
  swift_allocObject();
  swift_retain_n();
  v13 = a1;
  swift_retain();
  sub_1D444FD18((uint64_t)v13, a3, a4, a5, (uint64_t)a2, (uint64_t)a6, (uint64_t)sub_1D43E77EC, v12, (uint64_t)sub_1D43E7884, v12);
  sub_1D43E7894();
  swift_retain_n();
  sub_1D451A2FC();
  swift_release();
  return swift_release_n();
}

void sub_1D43E7798(void *a1, void *a2)
{
  id v3;
  id v4;

  v3 = a1;
  v4 = a2;
  sub_1D451A218();

}

void sub_1D43E77EC(void *a1, void *a2)
{
  sub_1D43E7798(a1, a2);
}

void sub_1D43E77F4()
{
  id v0;

  type metadata accessor for SNError();
  v0 = sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 2, 0, 0xD000000000000016, 0x80000001D4556060);
  sub_1D451A20C();

}

void sub_1D43E7884()
{
  sub_1D43E77F4();
}

unint64_t sub_1D43E7894()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFE501E8;
  if (!qword_1EFE501E8)
  {
    v1 = sub_1D42B8B10(&qword_1EFE501E0);
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0C95F48], v1);
    atomic_store(result, (unint64_t *)&qword_1EFE501E8);
  }
  return result;
}

unint64_t sub_1D43E78DC()
{
  unint64_t result;

  result = qword_1EFE501F0;
  if (!qword_1EFE501F0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4537F28, &type metadata for UnsafeAudioBufferListPointer);
    atomic_store(result, (unint64_t *)&qword_1EFE501F0);
  }
  return result;
}

void sub_1D43E7918()
{
  sub_1D43E80F8(&qword_1EFE501F8, MEMORY[0x1E0DEB890]);
}

unint64_t sub_1D43E793C()
{
  unint64_t result;

  result = qword_1EFE50200;
  if (!qword_1EFE50200)
  {
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0DEB440], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1EFE50200);
  }
  return result;
}

void sub_1D43E7978()
{
  sub_1D43E7FF0(&qword_1EFE50208, (uint64_t (*)(void))sub_1D43E79A4, MEMORY[0x1E0DEDE28]);
}

unint64_t sub_1D43E79A4()
{
  unint64_t result;

  result = qword_1EFE50218;
  if (!qword_1EFE50218)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4537E10, &type metadata for UnsafeAudioBufferListPointer);
    atomic_store(result, (unint64_t *)&qword_1EFE50218);
  }
  return result;
}

uint64_t sub_1D43E79E4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v10 = a4();
  result = swift_release();
  v21 = v10;
  v22 = a6;
  if (!a2)
  {
    a3 = 0;
    goto LABEL_14;
  }
  if (!a3)
  {
LABEL_14:
    *a1 = v10;
    a1[1] = a6;
    return a3;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    v12 = swift_retain();
    v13 = (void *)MEMORY[0x1D825DB34](v12);
    v14 = *(void **)(v10 + 16);
    if (v14)
    {
      v15 = 0;
      while (1)
      {
        v19 = v14;
        sub_1D4468C20(&v19, (uint64_t)&v21, &v20);
        v16 = v20;
        objc_autoreleasePoolPop(v13);
        swift_release();
        if (!v16)
          break;
        *(_QWORD *)(a2 + 8 * v15) = v16;
        if (a3 - 1 == v15)
          goto LABEL_14;
        v17 = swift_retain();
        v13 = (void *)MEMORY[0x1D825DB34](v17);
        v14 = *(void **)(v10 + 16);
        ++v15;
        if (!v14)
          goto LABEL_12;
      }
    }
    else
    {
      v15 = 0;
LABEL_12:
      sub_1D42B28FC(&qword_1EFE4A098);
      sub_1D42BE210((unint64_t *)&qword_1EFE4A0A0, &qword_1EFE4A098, (uint64_t)&unk_1D45447C0);
      v18 = (void *)swift_allocError();
      swift_willThrow();
      objc_autoreleasePoolPop(v13);
      swift_release();

    }
    v10 = v21;
    sub_1D446AF80();
    a6 = v22;
    a3 = v15;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D43E7BAC(uint64_t result, uint64_t a2, unsigned int *a3)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (*a3 < a2)
LABEL_5:
    __break(1u);
  return result;
}

BOOL sub_1D43E7BC8(_DWORD *a1)
{
  return *a1 == 0;
}

uint64_t sub_1D43E7BD8(uint64_t result, uint64_t a2, uint64_t a3)
{
  BOOL v3;
  BOOL v4;

  if (result >= a2)
  {
    v4 = __OFSUB__(result, a3);
    v3 = result - a3 < 0;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  if (v3 == v4)
    __break(1u);
  return result;
}

uint64_t sub_1D43E7BEC(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result < a2 || a3 < result)
    __break(1u);
  return result;
}

uint64_t sub_1D43E7C00(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result < a3 || a4 < a2)
    __break(1u);
  return result;
}

uint64_t sub_1D43E7C14()
{
  return 0;
}

uint64_t sub_1D43E7C20(unsigned int *a1)
{
  return *a1;
}

void sub_1D43E7C28(uint64_t *a1@<X8>)
{
  unsigned int **v1;

  *a1 = sub_1D43E7C20(*v1);
  sub_1D42B6E24();
}

_QWORD *sub_1D43E7C4C(_QWORD *result, unint64_t *a2)
{
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  if ((*a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v3 < *(unsigned int *)*v2)
  {
    v4 = *v2 + 16 * v3;
    v5 = *(_QWORD *)(v4 + 16);
    *result = *(_QWORD *)(v4 + 8);
    result[1] = v5;
    return nullsub_1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D43E7C94@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  unsigned int **v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1D43E7BAC(*a1, a1[1], *v2);
  *a2 = result;
  a2[1] = v5;
  a2[2] = v6;
  return result;
}

uint64_t sub_1D43E7CC8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1D43E7C14();
  *a1 = result;
  a1[1] = v3;
  return result;
}

BOOL sub_1D43E7CF0()
{
  _DWORD **v0;

  return sub_1D43E7BC8(*v0);
}

uint64_t sub_1D43E7CF8()
{
  unsigned int **v0;

  return sub_1D43E7C20(*v0);
}

void sub_1D43E7D00(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

unint64_t sub_1D43E7D10(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  BOOL v3;
  unint64_t result;

  v3 = __OFADD__(a1, a2);
  result = a1 + a2;
  if (v3)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (result > *a3)
LABEL_5:
    __break(1u);
  return result;
}

unint64_t sub_1D43E7D34(unint64_t result, uint64_t a2, unint64_t a3, unsigned int *a4)
{
  unint64_t v4;
  uint64_t v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;

  v4 = *a4;
  if (v4 < result || v4 < a3)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v6 = a3 - result;
  if (a2 < 1)
  {
    if (v6 <= 0)
    {
      v9 = __OFSUB__(v6, a2);
      v7 = v6 == a2;
      v8 = v6 - a2 < 0;
    }
    else
    {
      v9 = 0;
      v7 = 1;
      v8 = 0;
    }
    if (!(v8 ^ v9 | v7))
      return 0;
  }
  else if ((v6 & 0x8000000000000000) == 0 && v6 < (unint64_t)a2)
  {
    return 0;
  }
  v9 = __OFADD__(result, a2);
  result += a2;
  if (v9)
    goto LABEL_18;
  if (result > v4)
LABEL_19:
    __break(1u);
  return result;
}

unint64_t sub_1D43E7D98(unint64_t result, unint64_t a2, unsigned int *a3)
{
  unint64_t v3;

  v3 = *a3;
  if (v3 >= result && v3 >= a2)
    return a2 - result;
  __break(1u);
  return result;
}

uint64_t sub_1D43E7DB4(uint64_t *a1, uint64_t *a2)
{
  return sub_1D43E7BD8(*a1, *a2, a2[1]);
}

uint64_t sub_1D43E7DC8(uint64_t *a1, uint64_t *a2)
{
  return sub_1D43E7BEC(*a1, *a2, a2[1]);
}

uint64_t sub_1D43E7DDC(uint64_t *a1, uint64_t *a2)
{
  return sub_1D43E7C00(*a1, a1[1], *a2, a2[1]);
}

void sub_1D43E7DF4(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unsigned int **v2;

  *a2 = sub_1D43E7E1C(*a1, *v2);
  sub_1D42B6E24();
}

unint64_t sub_1D43E7E1C(unint64_t result, unsigned int *a2)
{
  if (*a2 <= result)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (__OFADD__(result++, 1))
LABEL_5:
    __break(1u);
  return result;
}

uint64_t *sub_1D43E7E3C(uint64_t *result)
{
  unsigned int **v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  v2 = *result;
  if (*result >= (unint64_t)**v1)
  {
    __break(1u);
  }
  else
  {
    v3 = __OFADD__(v2, 1);
    v4 = v2 + 1;
    if (!v3)
    {
      *result = v4;
      return result;
    }
  }
  __break(1u);
  return result;
}

void sub_1D43E7E68(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = 0;
}

uint64_t sub_1D43E7E74()
{
  _QWORD *v0;

  return sub_1D43E7E7C(*v0);
}

uint64_t sub_1D43E7E80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  return sub_1D43E79E0(a1, a2, a3, *v3);
}

unint64_t sub_1D43E7E88@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unsigned int **v2;
  unint64_t result;

  result = sub_1D43E7EB4(*a1, *v2);
  *a2 = result;
  return result;
}

unint64_t sub_1D43E7EB4(uint64_t a1, unsigned int *a2)
{
  BOOL v2;
  unint64_t result;

  v2 = __OFSUB__(a1, 1);
  result = a1 - 1;
  if (v2)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (result >= *a2)
LABEL_5:
    __break(1u);
  return result;
}

unint64_t *sub_1D43E7ED4(unint64_t *result)
{
  unsigned int **v1;
  unint64_t v2;

  v2 = *result - 1;
  if (__OFSUB__(*result, 1))
  {
    __break(1u);
  }
  else if (v2 < **v1)
  {
    *result = v2;
    return result;
  }
  __break(1u);
  return result;
}

unint64_t sub_1D43E7F00@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  unsigned int **v3;
  unint64_t result;

  result = sub_1D43E7D10(*a1, a2, *v3);
  *a3 = result;
  return result;
}

void sub_1D43E7F2C(unint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  unsigned int **v4;
  char v6;

  *(_QWORD *)a4 = sub_1D43E7D34(*a1, a2, *a3, *v4);
  *(_BYTE *)(a4 + 8) = v6 & 1;
  sub_1D42B6E24();
}

unint64_t sub_1D43E7F60(unint64_t *a1, unint64_t *a2)
{
  unsigned int **v2;

  return sub_1D43E7D98(*a1, *a2, *v2);
}

uint64_t sub_1D43E7F70()
{
  return sub_1D42BE210(&qword_1EFE50220, &qword_1EFE50228, MEMORY[0x1E0DEC908]);
}

void sub_1D43E7FA0()
{
  sub_1D43E80F8(&qword_1EFE50230, MEMORY[0x1E0DEB8B8]);
}

void sub_1D43E7FC4()
{
  sub_1D43E7FF0(&qword_1EFE50238, (uint64_t (*)(void))sub_1D43E804C, MEMORY[0x1E0DEDE40]);
}

void sub_1D43E7FF0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (!*a1)
  {
    v6 = sub_1D42B8B10(&qword_1EFE50210);
    v7 = a2();
    atomic_store(MEMORY[0x1D825E41C](a3, v6, &v7), a1);
  }
  sub_1D42CB758();
}

unint64_t sub_1D43E804C()
{
  unint64_t result;

  result = qword_1EFE50240;
  if (!qword_1EFE50240)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4537ED8, &type metadata for UnsafeAudioBufferListPointer);
    atomic_store(result, (unint64_t *)&qword_1EFE50240);
  }
  return result;
}

unint64_t sub_1D43E808C()
{
  unint64_t result;

  result = qword_1EFE50248;
  if (!qword_1EFE50248)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4537E70, &type metadata for UnsafeAudioBufferListPointer);
    atomic_store(result, (unint64_t *)&qword_1EFE50248);
  }
  return result;
}

uint64_t sub_1D43E80C8()
{
  return MEMORY[0x1E0DEB430];
}

void sub_1D43E80D4()
{
  sub_1D43E80F8(&qword_1EFE50250, MEMORY[0x1E0DEB8C0]);
}

void sub_1D43E80F8(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  if (!*a1)
  {
    v4 = sub_1D42B8B10(&qword_1EFE4DDA8);
    v5 = sub_1D43E793C();
    v6[0] = MEMORY[0x1E0DEB458];
    v6[1] = v5;
    atomic_store(MEMORY[0x1D825E41C](a2, v4, v6), a1);
  }
  sub_1D42CB758();
}

uint64_t sub_1D43E8158()
{
  return sub_1D42BE210(&qword_1EFE50258, &qword_1EFE50210, MEMORY[0x1E0DEDE48]);
}

ValueMetadata *type metadata accessor for UnsafeAudioBufferListPointer()
{
  return &type metadata for UnsafeAudioBufferListPointer;
}

uint64_t sub_1D43E81A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _DWORD *v3;

  v1 = MEMORY[0x1E0DEE9D8] + 32;
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 24) = v1;
  *(_OWORD *)(v0 + 32) = xmmword_1D4538030;
  type metadata accessor for SafeLock();
  v2 = swift_allocObject();
  v3 = (_DWORD *)swift_slowAlloc();
  *v3 = 0;
  *(_QWORD *)(v2 + 16) = v3;
  *(_QWORD *)(v0 + 48) = v2;
  return v0;
}

uint64_t sub_1D43E8208(void *a1, char a2)
{
  _QWORD *v2;
  os_unfair_lock_s *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(os_unfair_lock_s **)(v2[6] + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  swift_beginAccess();
  sub_1D43BB194(a1, a2);
  result = sub_1D43E87D4();
  v7 = v2[4];
  v8 = v2[5] >> 1;
  v9 = v8 - v7;
  if (__OFSUB__(v8, v7))
  {
    __break(1u);
  }
  else
  {
    sub_1D43E8834(v8 - v7);
    sub_1D43E89C4(v9 + 1);
    v10 = v2[3] + 16 * v2[4] + 16 * v9;
    *(_QWORD *)v10 = a1;
    *(_BYTE *)(v10 + 8) = a2;
    swift_endAccess();
    os_unfair_lock_unlock(v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D43E82DC(void *a1, char a2)
{
  return sub_1D43E8208(a1, a2);
}

uint64_t sub_1D43E82FC(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[216];
  _BYTE v37[128];
  _BYTE v38[216];
  _BYTE v39[224];
  uint64_t v40;

  v34 = a4;
  v5 = sub_1D42B28FC(&qword_1EFE50260);
  v29 = *(_QWORD *)(v5 - 8);
  v30 = v5;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v6);
  sub_1D42BE768();
  v28 = v7;
  v8 = sub_1D42B28FC(&qword_1EFE50268);
  v32 = *(_QWORD *)(v8 - 8);
  v33 = v8;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  sub_1D42BE768();
  v31 = v10;
  v11 = sub_1D42B28FC(&qword_1EFE50270);
  v27 = *(_QWORD *)(v11 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AccessibilitySoundRecognition.Session(0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42B28FC(&qword_1EFE50278);
  swift_allocObject();
  v40 = sub_1D43E81A0();
  sub_1D434936C(a1, v37);
  sub_1D440F2D0(v37, v36);
  sub_1D435C71C(v36, v38);
  sub_1D435C71C(v38, v39);
  memcpy(v36, v39, 0xD1uLL);
  v18 = v35;
  sub_1D440797C();
  sub_1D43E8764((uint64_t)v38);
  if (v18)
    return swift_release();
  v26 = v17;
  sub_1D43E91A4();
  sub_1D42CB9F8();
  sub_1D43E9198(&qword_1EFE50D00);
  sub_1D451A3A4();
  sub_1D42BE998();
  sub_1D42BE210(&qword_1EFE50280, &qword_1EFE50270, MEMORY[0x1E0C95B48]);
  sub_1D451A2E4();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v11);
  sub_1D43E91A4();
  sub_1D42CB9F8();
  sub_1D42B28FC(&qword_1EFE519B0);
  sub_1D43E9198(&qword_1EFE50290);
  v20 = v28;
  sub_1D451A308();
  sub_1D42BE998();
  sub_1D42CB9F8();
  sub_1D42BE210(&qword_1EFE502A0, &qword_1EFE50260, MEMORY[0x1E0C95950]);
  sub_1D42BE210(&qword_1EFE502A8, &qword_1EFE50298, MEMORY[0x1E0C960B0]);
  v22 = v30;
  v21 = v31;
  sub_1D451A350();
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v20, v22);
  sub_1D42BE210(&qword_1EFE502B0, &qword_1EFE50268, MEMORY[0x1E0C959F8]);
  v23 = v40;
  swift_retain();
  v24 = v33;
  v25 = sub_1D451A428();
  sub_1D42BE998();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v21, v24);
  sub_1D43E8EFC((uint64_t)v26);
  _s7SessionCMa();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v23;
  *(_QWORD *)(result + 24) = v25;
  return result;
}

uint64_t _s7SessionCMa()
{
  return objc_opt_self();
}

_BYTE *sub_1D43E86F4@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unsigned __int8 *sub_1D43E8700@<X0>(unsigned __int8 *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1D43E8710(id *a1)
{
  id v1;

  v1 = *a1;
  sub_1D42B28FC(&qword_1EFE519B0);
  return sub_1D451A284();
}

uint64_t sub_1D43E8764(uint64_t a1)
{
  sub_1D434A018(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_BYTE *)(a1 + 208));
  return a1;
}

uint64_t sub_1D43E87D4()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v1 = v0[3];
  if ((v1 & 1) == 0 || (v2 = *v0, result = swift_isUniquelyReferenced_nonNull(), *v0 = v2, (result & 1) == 0))
  {
    v4 = v0[2];
    result = (v1 >> 1) - v4;
    if (__OFSUB__(v1 >> 1, v4))
      __break(1u);
    else
      return sub_1D43E891C(result);
  }
  return result;
}

uint64_t sub_1D43E8834(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  BOOL v11;

  v4 = v2[2];
  v3 = v2[3];
  v5 = (v3 >> 1) - v4;
  if (__OFSUB__(v3 >> 1, v4))
  {
    __break(1u);
    return sub_1D43E891C(v1);
  }
  v1 = result;
  if ((v3 & 1) != 0)
  {
    v6 = v2[1];
    sub_1D451B874();
    swift_unknownObjectRetain();
    v7 = swift_dynamicCastClass();
    if (!v7)
    {
      swift_unknownObjectRelease();
      v7 = MEMORY[0x1E0DEE9D8];
    }
    v8 = *(_QWORD *)(v7 + 16);
    if (v6 + 16 * v4 + 16 * v5 == v7 + 16 * v8 + 32)
    {
      v9 = *(_QWORD *)(v7 + 24);
      result = swift_release();
      v10 = (v9 >> 1) - v8;
      v11 = __OFADD__(v5, v10);
      v5 += v10;
      if (v11)
      {
        __break(1u);
        return result;
      }
    }
    else
    {
      result = swift_release();
    }
  }
  if (v5 < v1 + 1)
    return sub_1D43E891C(v1);
  return result;
}

uint64_t sub_1D43E891C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v11;

  v3 = a1 + 1;
  v4 = *v1;
  v5 = v1[1];
  v6 = v1[2];
  v7 = v1[3];
  swift_unknownObjectRetain();
  v8 = sub_1D43E8A78(a1, v3, v4, v5, v6, v7);
  swift_unknownObjectRelease();
  v11 = v8;
  v9 = (void (*)(uint64_t, uint64_t))sub_1D43E8C74();
  sub_1D43E8C84((uint64_t)&v11, a1, 0, v9);
  swift_release();
  return swift_release();
}

uint64_t sub_1D43E89C4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = v3 >> 1;
  v5 = __OFSUB__(v3 >> 1, v2);
  v6 = (v3 >> 1) - v2;
  if (v5)
  {
    __break(1u);
    goto LABEL_12;
  }
  v7 = result - v6;
  if (__OFSUB__(result, v6))
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v7)
    return result;
  sub_1D451B874();
  swift_unknownObjectRetain();
  result = swift_dynamicCastClass();
  if (!result)
  {
    swift_unknownObjectRelease();
    result = MEMORY[0x1E0DEE9D8];
  }
  v8 = *(_QWORD *)(result + 16);
  v5 = __OFADD__(v8, v7);
  v9 = v8 + v7;
  if (v5)
    goto LABEL_13;
  *(_QWORD *)(result + 16) = v9;
  result = swift_release();
  v10 = v4 + v7;
  if (__OFADD__(v4, v7))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v10 < 0)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  *(_QWORD *)(v1 + 24) = v3 & 1 | (2 * v10);
  return result;
}

uint64_t sub_1D43E8A78(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  BOOL v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  size_t v28;

  v8 = (a6 >> 1) - a5;
  if (__OFSUB__(a6 >> 1, a5))
  {
    __break(1u);
LABEL_32:
    if (v8 >= v7)
      goto LABEL_21;
LABEL_18:
    if (v8 + 0x4000000000000000 >= 0)
    {
      v8 *= 2;
      goto LABEL_21;
    }
    __break(1u);
    goto LABEL_35;
  }
  v7 = a2;
  v6 = result;
  if ((a6 & 1) == 0)
    goto LABEL_32;
  sub_1D451B874();
  swift_unknownObjectRetain();
  v11 = swift_dynamicCastClass();
  if (!v11)
  {
    swift_unknownObjectRelease();
    v11 = MEMORY[0x1E0DEE9D8];
  }
  v12 = *(_QWORD *)(v11 + 16);
  v13 = a4 + 16 * a5 + 16 * v8;
  if (v13 == v11 + 16 * v12 + 32)
  {
    v15 = *(_QWORD *)(v11 + 24);
    result = swift_release();
    v16 = (v15 >> 1) - v12;
    v14 = v8 + v16;
    if (__OFADD__(v8, v16))
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
  }
  else
  {
    swift_release();
    v14 = v8;
  }
  swift_unknownObjectRetain();
  v17 = swift_dynamicCastClass();
  if (v14 < v7)
  {
    if (!v17)
    {
      swift_unknownObjectRelease();
      v17 = MEMORY[0x1E0DEE9D8];
    }
    v18 = *(_QWORD *)(v17 + 16);
    if (v13 == v17 + 16 * v18 + 32)
    {
      v20 = *(_QWORD *)(v17 + 24);
      result = swift_release();
      v21 = (v20 >> 1) - v18;
      v22 = __OFADD__(v8, v21);
      v8 += v21;
      if (v22)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
    }
    else
    {
      result = swift_release();
    }
    goto LABEL_18;
  }
  if (!v17)
  {
    swift_unknownObjectRelease();
    v17 = MEMORY[0x1E0DEE9D8];
  }
  v19 = *(_QWORD *)(v17 + 16);
  if (v13 == v17 + 16 * v19 + 32)
  {
    v23 = *(_QWORD *)(v17 + 24);
    result = swift_release();
    v24 = (v23 >> 1) - v19;
    v22 = __OFADD__(v8, v24);
    v8 += v24;
    if (!v22)
      goto LABEL_21;
LABEL_37:
    __break(1u);
    return result;
  }
  swift_release();
LABEL_21:
  if (v8 <= v7)
    v25 = v7;
  else
    v25 = v8;
  if (v25 <= v6)
    v26 = v6;
  else
    v26 = v25;
  if (!v26)
    return MEMORY[0x1E0DEE9D8];
  sub_1D42B28FC(&qword_1EFE502B8);
  v27 = (_QWORD *)swift_allocObject();
  v28 = j__malloc_size(v27);
  v27[2] = v6;
  v27[3] = 2 * ((uint64_t)(v28 - 32) / 16);
  return (uint64_t)v27;
}

uint64_t (*sub_1D43E8C74())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1D43E8C84(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v5 = v4[2];
  v6 = (unint64_t)v4[3] >> 1;
  v7 = v6 - v5;
  if (__OFSUB__(v6, v5))
  {
    __break(1u);
    goto LABEL_17;
  }
  v9 = *(_QWORD *)result;
  v10 = *(_QWORD *)(*(_QWORD *)result + 16);
  v11 = __OFSUB__(v10, a2);
  v12 = v10 - a2;
  if (v11)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v13 = v12 - a3;
  if (__OFSUB__(v12, a3))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v14 = v7 - a2;
  if (__OFSUB__(v7, a2))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v11 = __OFSUB__(v14, v13);
  v15 = v14 - v13;
  if (v11)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v31 = v15;
  v17 = (char *)(v9 + 32);
  v18 = v9 + 32 + 16 * a2;
  v29 = (char *)(v18 + 16 * a3);
  result = sub_1D43E8F80(v7);
  v30 = v9;
  if (result)
  {
    v19 = result;
    v28 = v4[2];
    v20 = (char *)(v4[1] + 16 * v28);
    sub_1D42B28FC(&qword_1EFE519B0);
    swift_arrayDestroy();
    sub_1D42C662C(v20, a2, v17);
    swift_arrayDestroy();
    a4(v18, a3);
    sub_1D42C662C(&v20[16 * a2 + 16 * v31], v13, v29);
    swift_arrayDestroy();
    *(_QWORD *)(v19 + 16) = 0;
    v21 = v28;
    swift_release();
LABEL_15:
    swift_retain();
    swift_unknownObjectRelease();
    result = sub_1D43E8F38(v30, v21);
    *v4 = result;
    v4[1] = v25;
    v4[2] = v26;
    v4[3] = v27;
    return result;
  }
  v21 = v4[2];
  v22 = v21 + a2;
  if (__OFADD__(v21, a2))
    goto LABEL_21;
  if (v22 < v21)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (__OFSUB__(v22, v21))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1D42B28FC(&qword_1EFE519B0);
  swift_arrayInitWithCopy();
  result = ((uint64_t (*)(char *, uint64_t))a4)(&v17[16 * a2], a3);
  v23 = v22 + v31;
  if (__OFADD__(v22, v31))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v24 = (unint64_t)v4[3] >> 1;
  if (v24 < v23)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (!__OFSUB__(v24, v23))
  {
    swift_arrayInitWithCopy();
    goto LABEL_15;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1D43E8EE0(uint64_t a1)
{
  return sub_1D43E82DC(*(void **)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_1D43E8EF4(uint64_t a1)
{
  return sub_1D43E8EE0(a1);
}

uint64_t sub_1D43E8EFC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AccessibilitySoundRecognition.Session(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D43E8F38(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  if (__OFSUB__(0, a2))
  {
    __break(1u);
    goto LABEL_7;
  }
  v2 = *(_QWORD *)(result + 16);
  v3 = __OFADD__(a2, v2);
  v4 = a2 + v2;
  if (v3)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v4 < a2)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
LABEL_9:
    __break(1u);
  return result;
}

uint64_t sub_1D43E8F80(uint64_t a1)
{
  _QWORD *v1;
  uint64_t isUniquelyReferenced_nonNull;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  isUniquelyReferenced_nonNull = swift_isUniquelyReferenced_nonNull();
  if (!(_DWORD)isUniquelyReferenced_nonNull)
    return 0;
  v6 = v1[2];
  v5 = v1[3];
  v7 = (v5 >> 1) - v6;
  if (__OFSUB__(v5 >> 1, v6))
  {
    __break(1u);
    goto LABEL_18;
  }
  v8 = v1[1];
  if ((v5 & 1) == 0)
    goto LABEL_8;
  sub_1D451B874();
  swift_unknownObjectRetain();
  v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    v9 = MEMORY[0x1E0DEE9D8];
  }
  v10 = *(_QWORD *)(v9 + 16);
  if (v8 + 16 * v6 + 16 * v7 != v9 + 16 * v10 + 32)
  {
    swift_release();
LABEL_8:
    v11 = v7;
    goto LABEL_10;
  }
  v12 = *(_QWORD *)(v9 + 24);
  result = swift_release();
  v14 = (v12 >> 1) - v10;
  v15 = __OFADD__(v7, v14);
  v11 = v7 + v14;
  if (!v15)
  {
LABEL_10:
    if (v11 < a1)
      return 0;
    sub_1D451B874();
    swift_unknownObjectRetain();
    a1 = swift_dynamicCastClass();
    if (!a1)
    {
      swift_unknownObjectRelease();
      a1 = MEMORY[0x1E0DEE9D8];
    }
    v16 = (v8 + 16 * v6 - a1 - 32) / 16;
    isUniquelyReferenced_nonNull = v7 + v16;
    if (!__OFADD__(v7, v16))
    {
      v4 = *(_QWORD *)(a1 + 16);
      if (isUniquelyReferenced_nonNull >= v4)
        return a1;
LABEL_19:
      sub_1D43E90E8(isUniquelyReferenced_nonNull, v4, 0);
      return a1;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D43E90E8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_10;
  }
  v7 = *v3;
  v8 = v7 + 32 + 16 * result;
  sub_1D42B28FC(&qword_1EFE519B0);
  result = swift_arrayDestroy();
  v9 = __OFSUB__(a3, v4);
  v10 = a3 - v4;
  if (v9)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (!v10)
    goto LABEL_7;
  v11 = *(_QWORD *)(v7 + 16);
  if (__OFSUB__(v11, a2))
    goto LABEL_11;
  result = (uint64_t)sub_1D42C662C((char *)(v7 + 32 + 16 * a2), v11 - a2, (char *)(v8 + 16 * a3));
  v12 = *(_QWORD *)(v7 + 16);
  v9 = __OFADD__(v12, v10);
  v13 = v12 + v10;
  if (v9)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  *(_QWORD *)(v7 + 16) = v13;
LABEL_7:
  if (a3 > 0)
LABEL_13:
    __break(1u);
  return result;
}

uint64_t sub_1D43E9198(unint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  return sub_1D42BE210(a1, v1, v2);
}

uint64_t sub_1D43E91A4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 80) = v1;
  return swift_retain();
}

ValueMetadata *type metadata accessor for SNSystemConfiguration()
{
  return &type metadata for SNSystemConfiguration;
}

uint64_t sub_1D43E91C0()
{
  sub_1D451B988();
  return sub_1D451B97C();
}

BOOL sub_1D43E91F8(int a1, int a2, double a3, double a4)
{
  return a3 == a4 && a1 == a2;
}

uint64_t sub_1D43E9208(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6152656C706D6173 && a2 == 0xEA00000000006574;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x436C656E6E616863 && a2 == 0xEC000000746E756FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D43E9318(char a1)
{
  if ((a1 & 1) != 0)
    return 0x436C656E6E616863;
  else
    return 0x6152656C706D6173;
}

uint64_t sub_1D43E935C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;

  v3 = sub_1D42B28FC(&qword_1EFE502D8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42B5528(a1, a1[3]);
  sub_1D43E97A4();
  sub_1D451BA24();
  v10 = 0;
  sub_1D451B73C();
  if (!v1)
  {
    v9 = 1;
    sub_1D451B790();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1D43E9478()
{
  sub_1D451B958();
  sub_1D451B988();
  sub_1D451B97C();
  return sub_1D451B994();
}

uint64_t sub_1D43E94DC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1D42B28FC(&qword_1EFE502C8);
  MEMORY[0x1E0C80A78](v3);
  v4 = (uint64_t)sub_1D42B5528(a1, a1[3]);
  sub_1D43E97A4();
  sub_1D451BA0C();
  if (!v1)
  {
    sub_1D451B664();
    v4 = sub_1D451B6B8();
    sub_1D43CB078();
  }
  sub_1D42B5400((uint64_t)a1);
  return v4;
}

uint64_t sub_1D43E9618()
{
  char *v0;

  return sub_1D43E9318(*v0);
}

uint64_t sub_1D43E9620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D43E9208(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D43E9644()
{
  sub_1D43E97A4();
  return sub_1D451BA3C();
}

uint64_t sub_1D43E966C()
{
  sub_1D43E97A4();
  return sub_1D451BA48();
}

uint64_t sub_1D43E9694()
{
  return sub_1D43E9478();
}

uint64_t sub_1D43E96A0()
{
  return sub_1D43E91C0();
}

uint64_t sub_1D43E96AC()
{
  sub_1D451B958();
  sub_1D451B988();
  sub_1D451B97C();
  return sub_1D451B994();
}

uint64_t sub_1D43E9708@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_1D43E94DC(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = v5;
    *(_DWORD *)(a2 + 8) = result;
  }
  return result;
}

uint64_t sub_1D43E9734(_QWORD *a1)
{
  return sub_1D43E935C(a1);
}

BOOL sub_1D43E9750(uint64_t a1, uint64_t a2)
{
  return sub_1D43E91F8(*(_DWORD *)(a1 + 8), *(_DWORD *)(a2 + 8), *(double *)a1, *(double *)a2);
}

unint64_t sub_1D43E9768()
{
  unint64_t result;

  result = qword_1EFE502C0;
  if (!qword_1EFE502C0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4538088, &type metadata for SNSystemConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EFE502C0);
  }
  return result;
}

unint64_t sub_1D43E97A4()
{
  unint64_t result;

  result = qword_1EFE502D0;
  if (!qword_1EFE502D0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4538204, &type metadata for SNSystemConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE502D0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SNSystemConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D43E982C + 4 * byte_1D4538065[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D43E9860 + 4 * asc_1D4538060[v4]))();
}

uint64_t sub_1D43E9860(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43E9868(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D43E9870);
  return result;
}

uint64_t sub_1D43E987C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D43E9884);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D43E9888(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43E9890(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SNSystemConfiguration.CodingKeys()
{
  return &type metadata for SNSystemConfiguration.CodingKeys;
}

unint64_t sub_1D43E98B0()
{
  unint64_t result;

  result = qword_1EFE502E0;
  if (!qword_1EFE502E0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45381DC, &type metadata for SNSystemConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE502E0);
  }
  return result;
}

unint64_t sub_1D43E98F0()
{
  unint64_t result;

  result = qword_1EFE502E8;
  if (!qword_1EFE502E8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453814C, &type metadata for SNSystemConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE502E8);
  }
  return result;
}

unint64_t sub_1D43E9930()
{
  unint64_t result;

  result = qword_1EFE502F0;
  if (!qword_1EFE502F0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4538174, &type metadata for SNSystemConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE502F0);
  }
  return result;
}

uint64_t sub_1D43E996C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v38 = sub_1D42B28FC(&qword_1EFE502F8);
  v36 = *(_QWORD *)(v38 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v6);
  sub_1D42BE768();
  v35 = v7;
  v8 = sub_1D42B28FC(&qword_1EFE50300);
  v39 = *(_QWORD *)(v8 - 8);
  v40 = v8;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  sub_1D42BE768();
  v37 = v10;
  v11 = sub_1D42B28FC(&qword_1EFE50308);
  v34 = *(_QWORD *)(v11 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AccessibilitySoundActions.Session();
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42B28FC(&qword_1EFE50310);
  v18 = sub_1D42D8CFC();
  v19 = v41;
  sub_1D43BE9E8(v18, a1, a2, a3, v20, v21, v22, v23, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45);
  if (v19)
    return swift_release();
  sub_1D43E9E70();
  sub_1D42B28FC((uint64_t *)&unk_1EFE4F720);
  sub_1D43E9D9C();
  v41 = v18;
  sub_1D451A3A4();
  sub_1D42BE93C();
  MEMORY[0x1D825E41C](MEMORY[0x1E0C95B48], v11);
  sub_1D451A2E4();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v11);
  sub_1D43E9E70();
  v25 = sub_1D42B28FC(&qword_1EFE50318);
  sub_1D42B28FC(&qword_1EFE50320);
  MEMORY[0x1D825E41C](MEMORY[0x1E0C95D90], v25);
  v26 = v35;
  sub_1D451A308();
  sub_1D42BE93C();
  v27 = sub_1D42B28FC(qword_1EFE50328);
  v28 = v38;
  MEMORY[0x1D825E41C](MEMORY[0x1E0C95950], v38);
  MEMORY[0x1D825E41C](MEMORY[0x1E0C960B0], v27);
  v29 = v37;
  sub_1D451A350();
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v26, v28);
  v30 = v40;
  v31 = MEMORY[0x1D825E41C](MEMORY[0x1E0C959F8], v40);
  v32 = v41;
  v33 = sub_1D42D8EEC(v41, v30, v31);
  sub_1D42BE93C();
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v29, v30);
  sub_1D43E9E34((uint64_t)v17);
  _s7SessionCMa_0();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v32;
  *(_QWORD *)(result + 24) = v33;
  return result;
}

uint64_t _s7SessionCMa_0()
{
  return objc_opt_self();
}

uint64_t sub_1D43E9CC4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  uint64_t result;
  _BYTE *v10;

  v4 = *a1;
  v3 = a1[1];
  if (qword_1EFE48F38 != -1)
    swift_once();
  v5 = qword_1EFEA7AB0;
  if (*(_QWORD *)(qword_1EFEA7AB0 + 16))
  {
    swift_bridgeObjectRetain();
    v6 = sub_1D4366B34(v4, v3);
    if ((v7 & 1) != 0)
    {
      v8 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v6);
      result = swift_bridgeObjectRelease();
      *a2 = v8;
      return result;
    }
    swift_bridgeObjectRelease();
  }
  sub_1D435D008();
  swift_allocError();
  *v10 = 2;
  return swift_willThrow();
}

unint64_t sub_1D43E9D9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFE4CF50;
  if (!qword_1EFE4CF50)
  {
    v1 = sub_1D42B8B10((uint64_t *)&unk_1EFE4F720);
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1EFE4CF50);
  }
  return result;
}

uint64_t sub_1D43E9DE0(id *a1)
{
  id v1;

  v1 = *a1;
  sub_1D42B28FC(&qword_1EFE50320);
  return sub_1D451A284();
}

uint64_t sub_1D43E9E34(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AccessibilitySoundActions.Session();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D43E9E70()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
  return swift_retain();
}

void sub_1D43E9E7C(CMTimeValue a1, unint64_t a2, CMTimeEpoch a3, void *a4, int32_t a5, void (*a6)(uint64_t), Float64 a7, uint64_t a8, uint64_t (*a9)(_QWORD *))
{
  CMTimeScale v13;
  unint64_t v15;
  id v16;
  unint64_t v17;
  CMTimeScale v18;
  CMTimeEpoch v19;
  CMTimeEpoch v20;
  unint64_t v21;
  CMTimeEpoch epoch;
  uint64_t v23;
  CMTimeValue v24;
  uint64_t v25;
  CMTimeEpoch v26;
  CMTimeValue v27;
  uint64_t v28;
  CMTimeEpoch v29;
  uint64_t v30;
  uint64_t v31;
  CMTime time2;
  CMTime time1;

  v13 = a2;
  v15 = HIDWORD(a2);
  type metadata accessor for SNTimeUtils();
  v16 = sub_1D42DAC78(a4);
  v18 = v17;
  v20 = v19;
  v21 = HIDWORD(v17);
  CMTimeMakeWithSeconds(&time1, a7, a5);
  epoch = time1.epoch;
  time1.value = a1;
  time1.timescale = v13;
  time1.flags = v15;
  time1.epoch = a3;
  time2.value = (CMTimeValue)v16;
  time2.timescale = v18;
  time2.flags = v21;
  time2.epoch = v20;
  if (CMTimeCompare(&time1, &time2) < 1 || (v23 = sub_1D43EA05C(), a6(v23), (sub_1D451B0AC() & 1) != 0))
  {
    v24 = sub_1D43EA05C();
    sub_1D42DB1B8(v24, v25, v26, v27, v28, v29, v30, v31, epoch, kCMTimeRoundingMethod_RoundTowardZero, a9);
  }
  else
  {
    type metadata accessor for SNError();
    sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD000000000000012, 0x80000001D4556120);
    swift_willThrow();
  }
}

unint64_t sub_1D43EA014(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  if ((sub_1D44FB0AC(*(unsigned __int8 **)(a1 + 16)) & 1) == 0)
    a2();
  return sub_1D44FB064(*(unint64_t **)(a4 + 16), a5);
}

uint64_t sub_1D43EA05C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D43EA078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D451A794();
  swift_bridgeObjectRetain();
  sub_1D451A794();
  swift_bridgeObjectRelease();
  return a3;
}

uint64_t sub_1D43EA104()
{
  sub_1D451B964();
  return sub_1D451A74C();
}

uint64_t sub_1D43EA144(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a3 & 1) != 0)
  {
    if ((a6 & 1) == 0)
      return 0;
  }
  else if ((a6 & 1) != 0)
  {
    return 0;
  }
  if (a1 == a4 && a2 == a5)
    return 1;
  else
    return sub_1D451B820();
}

uint64_t sub_1D43EA17C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6761726F74537772 && a2 == 0xED00006874615065;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6150656C646E7562 && a2 == 0xEA00000000006874)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D43EA298(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6150656C646E7562;
  else
    return 0x6761726F74537772;
}

uint64_t sub_1D43EA2E0(_QWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_1D42B28FC(&qword_1EFE50468);
  v20 = *(_QWORD *)(v6 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42CB210();
  v10 = v9 - v8;
  v11 = sub_1D42B28FC(&qword_1EFE50470);
  v19 = *(_QWORD *)(v11 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v12);
  sub_1D43383FC();
  v13 = sub_1D42B28FC(&qword_1EFE50478);
  v21 = *(_QWORD *)(v13 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v14);
  sub_1D42CB210();
  v17 = v16 - v15;
  sub_1D42B5528(a1, a1[3]);
  sub_1D43EB4A0();
  sub_1D451BA24();
  if ((a4 & 1) != 0)
  {
    sub_1D43EB960();
    sub_1D43EB940();
    sub_1D451B724();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v10, v6);
  }
  else
  {
    sub_1D43EB518();
    sub_1D43EB940();
    sub_1D451B724();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v4, v11);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v17, v13);
}

uint64_t sub_1D43EA4B0()
{
  sub_1D42BE9A8();
  sub_1D451B964();
  sub_1D451A74C();
  return sub_1D42CB230();
}

uint64_t sub_1D43EA508(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D42B28FC(&qword_1EFE50438);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v2);
  sub_1D42CB210();
  v25 = sub_1D42B28FC(&qword_1EFE50440);
  MEMORY[0x1E0C80A78](v25);
  sub_1D43383FC();
  v3 = sub_1D42B28FC(&qword_1EFE50448);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1D42CB210();
  v7 = v6 - v5;
  v8 = (uint64_t)sub_1D42B5528(a1, a1[3]);
  sub_1D43EB4A0();
  sub_1D451BA0C();
  if (v26)
    goto LABEL_9;
  v24 = (uint64_t)a1;
  v8 = v7;
  v9 = sub_1D451B6D0();
  v10 = *(_QWORD *)(v9 + 16);
  if (!v10)
  {
    v17 = v4;
LABEL_8:
    v18 = sub_1D451B460();
    sub_1D42B6D0C();
    v20 = v19;
    sub_1D42B28FC(&qword_1EFE49ED0);
    *v20 = &_s14descr1E97BD289C11FileAddressON;
    sub_1D451B61C();
    sub_1D451B454();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, *MEMORY[0x1E0DEC450], v18);
    swift_willThrow();
    sub_1D4371170();
    sub_1D43EB924(v8, *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
    a1 = (_QWORD *)v24;
LABEL_9:
    sub_1D42B5400((uint64_t)a1);
    return v8;
  }
  v23 = v7;
  v11 = *(_BYTE *)(v9 + 32);
  sub_1D43B7948(1, v10, v9, v9 + 32, 0, (2 * v10) | 1);
  v13 = v12;
  v15 = v14;
  swift_bridgeObjectRelease();
  if (v13 != v15 >> 1)
  {
    v17 = v4;
    v8 = v23;
    goto LABEL_8;
  }
  if ((v11 & 1) != 0)
  {
    sub_1D43EB960();
    v16 = v23;
    sub_1D451B610();
    v22 = v4;
    v8 = sub_1D451B64C();
    sub_1D43EB910();
  }
  else
  {
    sub_1D43EB518();
    sub_1D451B610();
    v8 = sub_1D451B64C();
    sub_1D43EB92C();
    v22 = v4;
    v16 = v23;
  }
  sub_1D4371170();
  sub_1D43EB924(v16, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  sub_1D42B5400(v24);
  return v8;
}

uint64_t sub_1D43EA8F0()
{
  sub_1D43EB4DC();
  return sub_1D451BA3C();
}

uint64_t sub_1D43EA918()
{
  sub_1D43EB4DC();
  return sub_1D451BA48();
}

uint64_t sub_1D43EA940()
{
  char *v0;

  return sub_1D43EA298(*v0);
}

uint64_t sub_1D43EA948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D43EA17C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D43EA96C()
{
  sub_1D43EB4A0();
  return sub_1D451BA3C();
}

uint64_t sub_1D43EA994()
{
  sub_1D43EB4A0();
  return sub_1D451BA48();
}

uint64_t sub_1D43EA9BC()
{
  sub_1D43EB518();
  return sub_1D451BA3C();
}

uint64_t sub_1D43EA9E4()
{
  sub_1D43EB518();
  return sub_1D451BA48();
}

uint64_t sub_1D43EAA0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t result;
  uint64_t v6;
  char v7;

  result = sub_1D43EA078(a1, a2, *v3);
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v6;
  *(_BYTE *)(a3 + 16) = v7 & 1;
  return result;
}

uint64_t sub_1D43EAA40@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  char v6;

  result = sub_1D43EA508(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_1D43EAA70(_QWORD *a1)
{
  uint64_t v1;

  return sub_1D43EA2E0(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
}

uint64_t sub_1D43EAA8C()
{
  return sub_1D43EA4B0();
}

uint64_t sub_1D43EAA98()
{
  return sub_1D43EA104();
}

uint64_t sub_1D43EAAA4()
{
  sub_1D451B958();
  sub_1D451B964();
  sub_1D451A74C();
  return sub_1D451B994();
}

uint64_t sub_1D43EAB00(uint64_t a1, uint64_t a2)
{
  return sub_1D43EA144(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t sub_1D43EAB1C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t ObjCClassFromMetadata;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v44 = a2;
  v43 = a1;
  v7 = sub_1D4519BC4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1D42CB210();
  v11 = v10 - v9;
  sub_1D42B28FC(qword_1EFE47450);
  sub_1D42BE838();
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)v41 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v24 = (char *)v41 - v23;
  if ((a3 & 1) != 0)
  {
    v41[1] = a4;
    v42 = v11;
    v41[0] = v8;
    type metadata accessor for SoundAnalysisBundleMarker();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v28 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v29 = (void *)sub_1D451A6C8();
    v30 = objc_msgSend(v28, sel_URLForResource_withExtension_, v29, 0);

    if (v30)
    {
      sub_1D4519B7C();

      v31 = 0;
    }
    else
    {
      v31 = 1;
    }
    v32 = v42;
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v18, v31, 1, v7);
    sub_1D43214E0((uint64_t)v18, (uint64_t)v24);
    sub_1D4321670((uint64_t)v24, (uint64_t)v15);
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v15, 1, v7) == 1)
    {
      v33 = sub_1D432AB6C((uint64_t)v15);
      v37 = sub_1D43EB96C(v33, v34, v35, v36);
      MEMORY[0x1D825E41C](&unk_1D4538468, v37);
      sub_1D42B6D0C();
      *v38 = 0;
      sub_1D4312028();

    }
    else
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v41[0] + 32))(v32, v15, v7);
      v39 = sub_1D4519BF4();
      if (!v4)
      {
        v8 = v39;

        sub_1D43EB950();
        sub_1D432AB6C((uint64_t)v24);
        return v8;
      }

      sub_1D43EB950();
    }
    sub_1D432AB6C((uint64_t)v24);
  }
  else
  {
    v25 = sub_1D43EB96C(v19, v20, v21, v22);
    MEMORY[0x1D825E41C](&unk_1D4538468, v25);
    sub_1D42B6D0C();
    *v26 = 3;
    sub_1D4312028();
  }
  return v8;
}

uint64_t sub_1D43EADCC(uint64_t a1, uint64_t a2)
{
  return sub_1D43EAB1C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), a2);
}

uint64_t sub_1D43EADF0(unsigned __int8 a1)
{
  uint64_t result;
  uint64_t v2;

  result = sub_1D445F2A4(a1);
  if (!v2)
    return 0;
  return result;
}

uint64_t sub_1D43EAE24@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  char v6;

  result = sub_1D43EADF0(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1D43EAE50(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  char v5;
  uint64_t ObjCClassFromMetadata;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v11;
  char *v12;

  if ((a3 & 1) != 0)
  {
    type metadata accessor for SoundAnalysisBundleMarker();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v7 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v8 = objc_msgSend(v7, sel_resourcePath);

    if (v8)
    {
      v9 = sub_1D451A6EC();

      swift_bridgeObjectRetain();
      sub_1D451A794();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1D451A794();
      swift_bridgeObjectRelease();
      return v9;
    }
    v5 = 2;
  }
  else
  {
    v5 = 1;
  }
  v11 = _s14descr1E97BD289C13FileInterfaceV11DomainErrorOMa(0, *(_QWORD *)(a4 + 16), *(_QWORD *)(a4 + 24), a4);
  MEMORY[0x1D825E41C](&unk_1D4538468, v11);
  sub_1D42B6D0C();
  *v12 = v5;
  return sub_1D4312028();
}

uint64_t sub_1D43EAF9C(uint64_t a1, uint64_t a2)
{
  return sub_1D43EAE50(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), a2);
}

_UNKNOWN **sub_1D43EAFC0()
{
  return &off_1E97A3BA8;
}

uint64_t _s14descr1E97BD289C13FileInterfaceV11DomainErrorOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&_s14descr1E97BD289C13FileInterfaceV11DomainErrorOMn);
}

uint64_t sub_1D43EAFD8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D43EB024 + 4 * byte_1D4538275[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D43EB058 + 4 * asc_1D4538270[v4]))();
}

uint64_t sub_1D43EB058(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43EB060(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D43EB068);
  return result;
}

uint64_t sub_1D43EB074(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D43EB07CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D43EB080(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43EB088(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t _s14descr1E97BD289C11FileAddressOwxx()
{
  return sub_1D43EB0A8();
}

uint64_t sub_1D43EB0A8()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s14descr1E97BD289C11FileAddressOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_1D4326750();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s14descr1E97BD289C11FileAddressOwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_1D4326750();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1D43EB0A8();
  return a1;
}

uint64_t _s14descr1E97BD289C11FileAddressOwta(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1D43EB0A8();
  return a1;
}

ValueMetadata *_s14descr1E97BD289C11FileAddressOMa()
{
  return &_s14descr1E97BD289C11FileAddressON;
}

uint64_t sub_1D43EB1A0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1D43EB250 + 4 * byte_1D453827A[(v8 - 1)]))();
}

void sub_1D43EB29C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0u;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t _s14descr1E97BD289C13FileInterfaceVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&_s14descr1E97BD289C13FileInterfaceVMn);
}

unint64_t sub_1D43EB454()
{
  unint64_t result;

  result = qword_1EFE50430;
  if (!qword_1EFE50430)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4538348, &_s14descr1E97BD289C11FileAddressON);
    atomic_store(result, (unint64_t *)&qword_1EFE50430);
  }
  return result;
}

void sub_1D43EB490()
{
  JUMPOUT(0x1D825E41CLL);
}

unint64_t sub_1D43EB4A0()
{
  unint64_t result;

  result = qword_1EFE50450;
  if (!qword_1EFE50450)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45387C0, &_s14descr1E97BD289C11FileAddressO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFE50450);
  }
  return result;
}

unint64_t sub_1D43EB4DC()
{
  unint64_t result;

  result = qword_1EFE50458;
  if (!qword_1EFE50458)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4538770, &_s14descr1E97BD289C11FileAddressO20BundlePathCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFE50458);
  }
  return result;
}

unint64_t sub_1D43EB518()
{
  unint64_t result;

  result = qword_1EFE50460;
  if (!qword_1EFE50460)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4538720, &_s14descr1E97BD289C11FileAddressO23RwStoragePathCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFE50460);
  }
  return result;
}

uint64_t _s14descr1E97BD289C11FileAddressO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D43EB5A0 + 4 * byte_1D453828D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D43EB5D4 + 4 * byte_1D4538288[v4]))();
}

uint64_t sub_1D43EB5D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43EB5DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D43EB5E4);
  return result;
}

uint64_t sub_1D43EB5F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D43EB5F8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D43EB5FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43EB604(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr1E97BD289C11FileAddressO10CodingKeysOMa()
{
  return &_s14descr1E97BD289C11FileAddressO10CodingKeysON;
}

ValueMetadata *_s14descr1E97BD289C11FileAddressO23RwStoragePathCodingKeysOMa()
{
  return &_s14descr1E97BD289C11FileAddressO23RwStoragePathCodingKeysON;
}

uint64_t _s14descr1E97BD289C11FileAddressO23RwStoragePathCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D43EB674 + 4 * byte_1D4538292[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D43EB694 + 4 * byte_1D4538297[v4]))();
}

_BYTE *sub_1D43EB674(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D43EB694(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D43EB69C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D43EB6A4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D43EB6AC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D43EB6B4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s14descr1E97BD289C11FileAddressO20BundlePathCodingKeysOMa()
{
  return &_s14descr1E97BD289C11FileAddressO20BundlePathCodingKeysON;
}

unint64_t sub_1D43EB6D4()
{
  unint64_t result;

  result = qword_1EFE50480;
  if (!qword_1EFE50480)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4538588, &_s14descr1E97BD289C11FileAddressO20BundlePathCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFE50480);
  }
  return result;
}

unint64_t sub_1D43EB714()
{
  unint64_t result;

  result = qword_1EFE50488;
  if (!qword_1EFE50488)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4538640, &_s14descr1E97BD289C11FileAddressO23RwStoragePathCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFE50488);
  }
  return result;
}

unint64_t sub_1D43EB754()
{
  unint64_t result;

  result = qword_1EFE50490;
  if (!qword_1EFE50490)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45386F8, &_s14descr1E97BD289C11FileAddressO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFE50490);
  }
  return result;
}

unint64_t sub_1D43EB794()
{
  unint64_t result;

  result = qword_1EFE50498;
  if (!qword_1EFE50498)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45385B0, &_s14descr1E97BD289C11FileAddressO23RwStoragePathCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFE50498);
  }
  return result;
}

unint64_t sub_1D43EB7D4()
{
  unint64_t result;

  result = qword_1EFE504A0;
  if (!qword_1EFE504A0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45385D8, &_s14descr1E97BD289C11FileAddressO23RwStoragePathCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFE504A0);
  }
  return result;
}

unint64_t sub_1D43EB814()
{
  unint64_t result;

  result = qword_1EFE504A8;
  if (!qword_1EFE504A8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45384F8, &_s14descr1E97BD289C11FileAddressO20BundlePathCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFE504A8);
  }
  return result;
}

unint64_t sub_1D43EB854()
{
  unint64_t result;

  result = qword_1EFE504B0;
  if (!qword_1EFE504B0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4538520, &_s14descr1E97BD289C11FileAddressO20BundlePathCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFE504B0);
  }
  return result;
}

unint64_t sub_1D43EB894()
{
  unint64_t result;

  result = qword_1EFE504B8;
  if (!qword_1EFE504B8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4538668, &_s14descr1E97BD289C11FileAddressO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFE504B8);
  }
  return result;
}

unint64_t sub_1D43EB8D4()
{
  unint64_t result;

  result = qword_1EFE504C0;
  if (!qword_1EFE504C0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4538690, &_s14descr1E97BD289C11FileAddressO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFE504C0);
  }
  return result;
}

uint64_t sub_1D43EB910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 120) + 8))(v1, v0);
}

uint64_t sub_1D43EB924@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_1D43EB92C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 152) + 8))(v1, v0);
}

uint64_t sub_1D43EB940()
{
  return sub_1D451B6F4();
}

uint64_t sub_1D43EB950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

unint64_t sub_1D43EB960()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_1D43EB4DC();
}

uint64_t sub_1D43EB96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return _s14descr1E97BD289C13FileInterfaceV11DomainErrorOMa(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

uint64_t sub_1D43EB978(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_1D42B28FC(&qword_1EFE504C8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB210();
  v8 = v7 - v6;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  swift_retain();
  sub_1D42B28FC(&qword_1EFE504E0);
  sub_1D451AAE8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1D43EBA48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;

  v0 = sub_1D42B28FC(&qword_1EFE4DC70);
  MEMORY[0x1E0C80A78](v0);
  sub_1D42CB210();
  v34 = v2 - v1;
  v3 = sub_1D42B28FC(&qword_1EFE504E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1D42CB210();
  v7 = v6 - v5;
  v33 = sub_1D42B28FC(&qword_1EFE504F0);
  v8 = *(_QWORD *)(v33 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = MEMORY[0x1E0C80A78](v33);
  v32 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v29 - v11;
  v13 = sub_1D42B28FC(&qword_1EFE504F8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v29 - v17;
  v19 = sub_1D42B28FC(&qword_1EFE504E0);
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v18, 1, 1, v19);
  v35 = v18;
  sub_1D42B28FC(qword_1EFE47050);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v7, *MEMORY[0x1E0DF07B8], v3);
  sub_1D451AB30();
  v20 = sub_1D451AAC4();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v34, 1, 1, v20);
  v21 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v22 = v32;
  v30 = v12;
  v23 = v12;
  v24 = v33;
  v21(v32, v23, v33);
  v25 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = 0;
  *(_QWORD *)(v26 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v26 + v25, v22, v24);
  sub_1D444D358();
  swift_release();
  sub_1D43EC338((uint64_t)v18, (uint64_t)v16);
  result = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v16, 1, v19);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v30, v24);
    v28 = v31;
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v31 + OBJC_IVAR____TtC13SoundAnalysis18AsyncDispatchQueue_queueContinuation, v16, v19);
    sub_1D43EC380((uint64_t)v18);
    return v28;
  }
  return result;
}

uint64_t sub_1D43EBD14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D43EC380(a2);
  v4 = sub_1D42B28FC(&qword_1EFE504E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a2, 0, 1, v4);
}

uint64_t sub_1D43EBD7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[4] = a4;
  v5 = sub_1D42B28FC((uint64_t *)&unk_1EFE50510);
  v4[5] = v5;
  v4[6] = *(_QWORD *)(v5 - 8);
  v4[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D43EBDE0()
{
  uint64_t v0;
  _QWORD *v1;

  sub_1D42B28FC(&qword_1EFE504F0);
  sub_1D451AB0C();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_1D43EBE68;
  return sub_1D451AB18();
}

uint64_t sub_1D43EBE68()
{
  sub_1D430C324();
  return swift_task_switch();
}

uint64_t sub_1D43EBEB0()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v1 = *(int **)(v0 + 16);
  *(_QWORD *)(v0 + 72) = v1;
  if (v1)
  {
    *(_QWORD *)(v0 + 80) = *(_QWORD *)(v0 + 24);
    v4 = (uint64_t (*)(void))((char *)v1 + *v1);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v2;
    *v2 = v0;
    v2[1] = sub_1D43EBF40;
    return v4();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
    swift_task_dealloc();
    return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_1D43EBF40()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 72);
  v3 = *v0;
  swift_task_dealloc();
  sub_1D42B7F68(v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 64) = v4;
  *v4 = v3;
  v4[1] = sub_1D43EBE68;
  return sub_1D451AB18();
}

uint64_t sub_1D43EBFDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC13SoundAnalysis18AsyncDispatchQueue_queueContinuation;
  v2 = sub_1D42B28FC(&qword_1EFE504E0);
  sub_1D451AAF4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1D43EC044()
{
  return type metadata accessor for AsyncDispatchQueue();
}

uint64_t type metadata accessor for AsyncDispatchQueue()
{
  uint64_t result;

  result = qword_1EFE47038;
  if (!qword_1EFE47038)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1D43EC084()
{
  unint64_t v0;

  sub_1D43EC0F0();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1D43EC0F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFE47048)
  {
    sub_1D42B8B10(qword_1EFE47050);
    v0 = sub_1D451AB00();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFE47048);
  }
}

uint64_t sub_1D43EC148(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v3;
  *v3 = v2;
  v3[1] = sub_1D431B308;
  return v5();
}

uint64_t sub_1D43EC19C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D43EC1C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D431B308;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EFE504D0 + dword_1EFE504D0))(a1, v4);
}

uint64_t sub_1D43EC230(uint64_t a1)
{
  uint64_t v1;

  return sub_1D43EBD14(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1D43EC238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1D42B28FC(&qword_1EFE504F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1D43EC2B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1D42B28FC(&qword_1EFE504F0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1D4319390;
  return sub_1D43EBD7C(a1, v5, v6, v7);
}

uint64_t sub_1D43EC338(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D42B28FC(&qword_1EFE504F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D43EC380(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D42B28FC(&qword_1EFE504F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1D43EC3C0()
{
  uint64_t (*v0)(void);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[8];

  sub_1D43ECFD8();
  v1 = v0();
  v14[3] = sub_1D42B28FC(&qword_1EFE4A590);
  v14[0] = v1;
  v8 = sub_1D43ECFA8((uint64_t)v14, v2, v3, v4, v5, v6, v7);
  sub_1D43ECF7C(v8, v9, v10, v11, v12, v13);
  sub_1D42B8F48();
  sub_1D42CB2D0();
}

void sub_1D43EC438(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[8];

  sub_1D43ECFD8();
  v5 = sub_1D42E9D88(0, (unint64_t *)&qword_1EFE47A08);
  sub_1D43ECFB0(v5, v6, v7, v8, v9, v10, v11, v12, v26, v27, v28[0], v28[1], v28[2], v28[3]);
  if (v2)
  {
    sub_1D4306718((uint64_t)v28);
    sub_1D43ECFCC();
    if (v3)
    {
      v19 = (void *)sub_1D43ECF90();
      sub_1D43ECF88(v19);
      *v3 = a2;
    }
    sub_1D42D71D8();
  }
  else
  {
    v20 = sub_1D43ECFA8((uint64_t)v28, v13, v14, v15, v16, v17, v18);
  }
  sub_1D43ECF7C(v20, v21, v22, v23, v24, v25);
  sub_1D42B8F48();
  sub_1D42CB2D0();
}

void sub_1D43EC4B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[8];

  sub_1D43ECFD8();
  v5 = sub_1D42B28FC(&qword_1EFE49D18);
  sub_1D43ECFB0(v5, v6, v7, v8, v9, v10, v11, v12, v26, v27, v28[0], v28[1], v28[2], v28[3]);
  if (v2)
  {
    sub_1D4306718((uint64_t)v28);
    sub_1D43ECFCC();
    if (v3)
    {
      v19 = (void *)sub_1D43ECF90();
      sub_1D43ECF88(v19);
      *v3 = a2;
    }
    sub_1D42D71D8();
  }
  else
  {
    v20 = sub_1D43ECFA8((uint64_t)v28, v13, v14, v15, v16, v17, v18);
  }
  sub_1D43ECF7C(v20, v21, v22, v23, v24, v25);
  sub_1D42B8F48();
  sub_1D42CB2D0();
}

void sub_1D43EC524()
{
  void (*v0)(_QWORD *__return_ptr);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[8];

  sub_1D43ECFD8();
  v13[3] = MEMORY[0x1E0DEE9C0] + 8;
  v0(v13);
  v7 = sub_1D43ECFA8((uint64_t)v13, v1, v2, v3, v4, v5, v6);
  sub_1D43ECF7C(v7, v8, v9, v10, v11, v12);
  sub_1D42B8F48();
  sub_1D42CB2D0();
}

id sub_1D43EC59C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, unint64_t a6)
{
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t inited;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  os_log_type_t type;
  uint64_t v36;

  if (a4)
  {
    v10 = qword_1EFE40338;
    v11 = a4;
    if (v10 != -1)
      swift_once();
    v12 = sub_1D451A014();
    sub_1D42CC880(v12, (uint64_t)qword_1EFEA7700);
    v13 = v11;
    sub_1D43ECF98();
    v14 = v11;
    v15 = sub_1D4519FFC();
    v16 = sub_1D451AF5C();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = sub_1D42CC940();
      v36 = sub_1D42CC940();
      *(_DWORD *)v17 = 136315394;
      sub_1D42D71EC();
      sub_1D43D72EC(a5, a6, &v36);
      sub_1D451B1A8();
      sub_1D43ECFC0();
      *(_WORD *)(v17 + 12) = 2080;
      type = v16;
      v18 = objc_msgSend(v14, sel_description);
      v19 = sub_1D451A6EC();
      v21 = v20;

      sub_1D43D72EC(v19, v21, &v36);
      sub_1D451B1A8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D42A7000, v15, type, "error: %s; underlying: %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      sub_1D42CC934();
    }

    sub_1D430729C();
    sub_1D42B28FC((uint64_t *)&unk_1EFE498B0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D45295F0;
    *(_QWORD *)(inited + 32) = sub_1D451A6EC();
    *(_QWORD *)(inited + 40) = v27;
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = a5;
    *(_QWORD *)(inited + 56) = a6;
    *(_QWORD *)(inited + 80) = sub_1D451A6EC();
    *(_QWORD *)(inited + 88) = v28;
    *(_QWORD *)(inited + 120) = sub_1D42E9D88(0, qword_1EFE4EF28);
    *(_QWORD *)(inited + 96) = v14;
  }
  else
  {
    if (qword_1EFE40338 != -1)
      swift_once();
    v22 = sub_1D451A014();
    sub_1D42CC880(v22, (uint64_t)qword_1EFEA7700);
    sub_1D43ECF98();
    v23 = sub_1D4519FFC();
    v24 = sub_1D451AF5C();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)sub_1D42CC940();
      v36 = sub_1D42CC940();
      *(_DWORD *)v25 = 136315138;
      sub_1D42D71EC();
      sub_1D43D72EC(a5, a6, &v36);
      sub_1D451B1A8();
      sub_1D43ECFC0();
      _os_log_impl(&dword_1D42A7000, v23, v24, "error: %s", v25, 0xCu);
      swift_arrayDestroy();
      sub_1D42CC934();
    }

    sub_1D430729C();
    sub_1D42B28FC((uint64_t *)&unk_1EFE498B0);
    v29 = swift_initStackObject();
    *(_OWORD *)(v29 + 16) = xmmword_1D45261D0;
    *(_QWORD *)(v29 + 32) = sub_1D451A6EC();
    *(_QWORD *)(v29 + 40) = v30;
    *(_QWORD *)(v29 + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v29 + 48) = a5;
    *(_QWORD *)(v29 + 56) = a6;
  }
  sub_1D42D71EC();
  v31 = sub_1D451A5E4();
  v32 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
  swift_bridgeObjectRetain();
  return sub_1D44C8708(a1, a2, a3, v31);
}

id sub_1D43ECAB8(uint64_t a1, void *a2, uint64_t a3, unint64_t a4)
{
  return sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, a1, a2, a3, a4);
}

_QWORD *sub_1D43ECB64(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, unint64_t a7)
{
  _QWORD *v7;
  id v8;

  if (result)
  {
    v7 = result;
    v8 = sub_1D43EC59C(a2, a3, a4, a5, a6, a7);
    result = v8;
    *v7 = v8;
  }
  return result;
}

void **sub_1D43ECC44(void **result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  void **v11;
  void *v12;

  if (result)
  {
    v11 = result;
    v12 = *result;
    if (*result)
      swift_unknownObjectRetain();
    sub_1D43ECB64(v11, a2, a3, a4, v12, a5, a6);
    return (void **)swift_unknownObjectRelease();
  }
  return result;
}

_QWORD *sub_1D43ECD40(_QWORD *a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5)
{
  return sub_1D43ECB64(a1, 0xD000000000000017, 0x80000001D4551120, a2, a3, a4, a5);
}

void sub_1D43ECDE8(_QWORD *a1, uint64_t a2, void (**a3)(_QWORD, _QWORD))
{
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = (void *)MEMORY[0x1D825DB34]();
  v9[0] = 0;
  ((void (**)(_QWORD, id *))a3)[2](a3, v9);
  v6 = v9[0];
  objc_autoreleasePoolPop(v5);
  if (a1)
  {
    v7 = v6;
    *a1 = v6;
    v8 = v7;
  }

  _Block_release(a3);
}

id sub_1D43ECEDC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SNError();
  return objc_msgSendSuper2(&v2, sel_init);
}

id sub_1D43ECF2C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SNError();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SNError()
{
  return objc_opt_self();
}

uint64_t sub_1D43ECF7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  va_list va;

  va_start(va, a6);
  return sub_1D42B54A4((uint64_t)va, v6);
}

id sub_1D43ECF88(id a1)
{
  return a1;
}

uint64_t sub_1D43ECF90()
{
  return sub_1D4519A98();
}

uint64_t sub_1D43ECF98()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1D43ECFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  return sub_1D42B54A4(a1, (uint64_t)va);
}

_QWORD *sub_1D43ECFB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  _QWORD *(*v14)(uint64_t *__return_ptr);

  a14 = a1;
  return v14(&a11);
}

uint64_t sub_1D43ECFC0()
{
  return swift_bridgeObjectRelease_n();
}

double sub_1D43ECFCC()
{
  return 0.0;
}

uint64_t sub_1D43ECFE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  if (qword_1EFE48EB0 != -1)
    swift_once();
  v9 = sub_1D4519BC4();
  v10 = sub_1D42CC880(v9, (uint64_t)qword_1EFEA7838);
  sub_1D42B28FC(&qword_1EFE40520);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1D4533EC0;
  *(_QWORD *)(v11 + 32) = 6715437;
  *(_QWORD *)(v11 + 40) = 0xE300000000000000;
  *(_QWORD *)(v11 + 48) = a1;
  *(_QWORD *)(v11 + 56) = a2;
  *(_QWORD *)(v11 + 64) = 17197;
  *(_QWORD *)(v11 + 72) = 0xE200000000000000;
  *(_QWORD *)(v11 + 80) = a3;
  *(_QWORD *)(v11 + 88) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D447D1CC(v10, v11, 0);
  result = swift_bridgeObjectRelease();
  if (!v4)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D43ED0F8()
{
  uint64_t v0;

  v0 = sub_1D4519BC4();
  sub_1D43E757C(v0, qword_1EFEA7838);
  sub_1D42CC880(v0, (uint64_t)qword_1EFEA7838);
  return sub_1D4519B10();
}

uint64_t sub_1D43ED15C(uint64_t a1, uint64_t (*a2)(id, uint64_t, uint64_t), uint64_t a3, void (*a4)(uint64_t *__return_ptr), uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  void (*v14)(unint64_t, char *, uint64_t);
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  uint64_t v27;
  void (*v28)(uint64_t *__return_ptr);
  uint64_t v29;
  uint64_t (*v30)(id, uint64_t, uint64_t);
  uint64_t v31;

  v27 = a5;
  v28 = a4;
  v29 = a3;
  v30 = a2;
  v5 = sub_1D42B28FC(&qword_1EFE50520);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v27 - v10;
  sub_1D43EDF68((uint64_t)&v27 - v10);
  v12 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v13 = sub_1D43EDF5C();
  v14 = *(void (**)(unint64_t, char *, uint64_t))(v6 + 32);
  v14(v13 + v12, v11, v5);
  sub_1D43EDF68((uint64_t)v9);
  v15 = sub_1D43EDF5C();
  v14(v15 + v12, v9, v5);
  v16 = objc_allocWithZone((Class)type metadata accessor for SNResultsForwarder());
  v17 = sub_1D43CBA78((uint64_t)sub_1D43EDAF4, v13, (uint64_t)sub_1D43EDB04, v15);
  v20 = (void *)v30(v17, v18, v19);
  v28(&v31);
  sub_1D42B28FC((uint64_t *)&unk_1EFE50528);
  v21 = swift_allocObject();
  v22 = v17;
  swift_defaultActor_initialize();
  *(_QWORD *)(v21 + 112) = v17;
  v23 = v31;
  v24 = (_QWORD *)sub_1D438C4E4();
  v24[2] = v23;
  v24[3] = v20;
  v24[4] = v21;
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1D451AB90();
  v25 = v22;
  sub_1D43FB1F4(v20, v25);
  swift_release();
  sub_1D42B6E6C();

  return swift_release();
}

void sub_1D43ED3C8(uint64_t a1, uint64_t (*a2)(id, uint64_t, uint64_t), uint64_t a3, void (*a4)(void **__return_ptr), uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, char *, uint64_t);
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  void *v25;
  _QWORD *v26;
  id v27;
  id v28;
  uint64_t v29;
  void (*v30)(void **__return_ptr);
  uint64_t v31;
  uint64_t (*v32)(id, uint64_t, uint64_t);
  void *v33;

  v29 = a5;
  v30 = a4;
  v31 = a3;
  v32 = a2;
  v6 = sub_1D42B28FC(&qword_1EFE50520);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v29 - v11;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v13((char *)&v29 - v11, a1, v6);
  v14 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v15 = swift_allocObject();
  v16 = *(void (**)(unint64_t, char *, uint64_t))(v7 + 32);
  v16(v15 + v14, v12, v6);
  v13(v10, a1, v6);
  v17 = swift_allocObject();
  v16(v17 + v14, v10, v6);
  v18 = objc_allocWithZone((Class)type metadata accessor for SNResultsForwarder());
  v19 = sub_1D43CBA78((uint64_t)sub_1D43EDAF4, v15, (uint64_t)sub_1D43EDF48, v17);
  v22 = (void *)v32(v19, v20, v21);
  v30(&v33);
  sub_1D42B28FC((uint64_t *)&unk_1EFE50528);
  v23 = swift_allocObject();
  v24 = v19;
  swift_defaultActor_initialize();
  *(_QWORD *)(v23 + 112) = v19;
  v25 = v33;
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = v25;
  v26[3] = v22;
  v26[4] = v23;
  v27 = v25;
  swift_unknownObjectRetain();
  swift_retain();
  sub_1D451AB90();
  v28 = v24;
  sub_1D43C2A08(v22, v28);
  swift_release();
  swift_unknownObjectRelease();

}

uint64_t sub_1D43ED660(int a1, id a2)
{
  id v2;

  if (a2)
    v2 = a2;
  sub_1D42B28FC(&qword_1EFE50520);
  return sub_1D451ABA8();
}

uint64_t sub_1D43ED6B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD v8[2];

  v3 = sub_1D42B28FC(&qword_1EFE50548);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[1] = a2;
  swift_unknownObjectRetain();
  sub_1D42B28FC(&qword_1EFE50520);
  sub_1D451AB9C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1D43ED760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v8 = sub_1D42B28FC(&qword_1EFE4DC70);
  MEMORY[0x1E0C80A78](v8);
  sub_1D42CB210();
  v11 = v10 - v9;
  a5(a3);
  v12 = sub_1D451AAC4();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v11, 1, 1, v12);
  v13 = (_QWORD *)sub_1D438C4E4();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = a4;
  swift_retain();
  sub_1D444D358();
  return swift_release();
}

uint64_t sub_1D43ED834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_1D43ED84C()
{
  uint64_t v0;

  sub_1D43EDBE8(0);
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t static AnalyzerUtils.systemAudioAnalyzerResultsStream(makeRequest:createAnalyzer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v8 = sub_1D42B6F40();
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  v9 = (_QWORD *)sub_1D42B6F40();
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = sub_1D43ED99C;
  v9[5] = v8;
  v10 = sub_1D42B6F40();
  *(_QWORD *)(v10 + 16) = sub_1D43ED9F4;
  *(_QWORD *)(v10 + 24) = v9;
  swift_retain();
  swift_retain();
  sub_1D42B28FC((uint64_t *)&unk_1EFE4A6A0);
  sub_1D42BE210(qword_1EFE568C0, (uint64_t *)&unk_1EFE4A6A0, (uint64_t)&unk_1D4532BA0);
  return sub_1D451A2C0();
}

uint64_t sub_1D43ED978()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D43ED99C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_1D43ED9C8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1D43ED9F4(uint64_t a1)
{
  uint64_t v1;

  sub_1D43ED3C8(a1, *(uint64_t (**)(id, uint64_t, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(void **__return_ptr))(v1 + 32), *(_QWORD *)(v1 + 40));
}

void sub_1D43EDA00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_1D42B28FC((uint64_t *)&unk_1EFE50550);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  sub_1D42CB210();
  v4 = v3 - v2;
  sub_1D42B28FC(&qword_1EFE4C690);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x1E0DF0A50], v0);
  sub_1D451ABB4();
  sub_1D42CB084();
}

ValueMetadata *type metadata accessor for AnalyzerUtils()
{
  return &type metadata for AnalyzerUtils;
}

uint64_t sub_1D43EDAC4()
{
  return sub_1D42BE210(&qword_1EFE4A6B0, &qword_1EFE568A0, MEMORY[0x1E0C96148]);
}

uint64_t sub_1D43EDAF4(uint64_t a1, uint64_t a2)
{
  return sub_1D43EDD30(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D43ED660);
}

uint64_t sub_1D43EDB04(uint64_t a1, uint64_t a2)
{
  return sub_1D43EDD30(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D43ED6B4);
}

void sub_1D43EDB10(uint64_t a1, uint64_t a2)
{
  sub_1D43EDB48(a1, a2, &qword_1EFE50570);
}

void sub_1D43EDB2C(uint64_t a1, uint64_t a2)
{
  sub_1D43EDB48(a1, a2, &qword_1EFE50568);
}

void sub_1D43EDB48(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = sub_1D42B28FC(a3);
  MEMORY[0x1E0C80A78](v3);
  sub_1D42CB210();
  (*(void (**)(uint64_t, _QWORD))(v6 + 104))(v5 - v4, *MEMORY[0x1E0DF0A50]);
  sub_1D451ABB4();
  sub_1D42CB084();
}

uint64_t sub_1D43EDBE8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = a1;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t sub_1D43EDC10(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D43ED760(a1, *a2, a3, a4, (void (*)(uint64_t))sub_1D43FCE5C);
}

uint64_t sub_1D43EDC40()
{
  swift_release();
  swift_unknownObjectRelease();
  sub_1D42E4010();
  sub_1D42E3F08();
  return swift_deallocObject();
}

uint64_t sub_1D43EDC68(uint64_t a1)
{
  uint64_t *v1;

  return sub_1D43EDC10(a1, v1 + 2, v1[3], v1[4]);
}

uint64_t sub_1D43EDC78()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D438E85C(v1);
  return sub_1D43EDF4C(v2, v3, v4, v5);
}

uint64_t sub_1D43EDCCC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1D42B28FC(&qword_1EFE50520);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1D43EDD30(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v6;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1D42B28FC(&qword_1EFE50520) - 8) + 80);
  return a3(a1, a2, v3 + ((v6 + 16) & ~v6));
}

uint64_t sub_1D43EDD90(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D43ED760(a1, *a2, a3, a4, sub_1D43C3104);
}

uint64_t sub_1D43EDDC0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  sub_1D42E4010();
  sub_1D42E3F08();
  return swift_deallocObject();
}

uint64_t sub_1D43EDDE8(uint64_t a1)
{
  uint64_t *v1;

  return sub_1D43EDD90(a1, v1 + 2, v1[3], v1[4]);
}

uint64_t sub_1D43EDDF8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D438E85C(v1);
  return sub_1D43EDF4C(v2, v3, v4, v5);
}

uint64_t sub_1D43EDE44()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t storeEnumTagSinglePayload for AnalyzerUtils.DomainError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D43EDEA4 + 4 * asc_1D4538830[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D43EDEC4 + 4 * byte_1D4538835[v4]))();
}

_BYTE *sub_1D43EDEA4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D43EDEC4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D43EDECC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D43EDED4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D43EDEDC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D43EDEE4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AnalyzerUtils.DomainError()
{
  return &type metadata for AnalyzerUtils.DomainError;
}

unint64_t sub_1D43EDF04()
{
  unint64_t result;

  result = qword_1EFE50578;
  if (!qword_1EFE50578)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45388A4, &type metadata for AnalyzerUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE50578);
  }
  return result;
}

uint64_t sub_1D43EDF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D43ED834(a1, a2, a3, a4);
}

uint64_t sub_1D43EDF5C()
{
  return swift_allocObject();
}

uint64_t sub_1D43EDF68(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v2, v3);
}

void type metadata accessor for EBankUtils()
{
  sub_1D42CB35C();
}

uint64_t sub_1D43EDF84(_QWORD *a1, uint64_t a2)
{
  return sub_1D43EF280(a1, a2, (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void sub_1D43EDF90(uint64_t *a1, uint64_t *a2)
{
  sub_1D43EF364(a1, a2);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1D42CB15C();
}

_QWORD *sub_1D43EDFC4(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

void sub_1D43EE038(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_1D43EF308(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x1E0DEEE30]);
}

void type metadata accessor for EBankUtils.CoefficientAllocations()
{
  sub_1D42CB35C();
}

uint64_t sub_1D43EE058(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  if (!a2)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (result == 0x8000000000000000 && a2 == -1)
    goto LABEL_12;
  v3 = result / a2;
  v4 = a2 * (result / a2);
  if ((unsigned __int128)(a2 * (__int128)(result / a2)) >> 64 != v4 >> 63)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  if (v4 != result)
  {
    sub_1D43EED44();
    swift_allocError();
    sub_1D4312028();
  }
  return v3;
}

uint64_t sub_1D43EE0DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v3 = sub_1D451B9D0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[3] = sub_1D42B28FC(&qword_1EFE50588);
  v7 = swift_allocObject();
  v14[0] = v7;
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)a1;
  *(_QWORD *)(v7 + 24) = v8;
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(v7 + 48) = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(v7 + 56) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(v7 + 72) = *(_OWORD *)(a1 + 56);
  v9 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(v7 + 88) = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(v7 + 96) = v9;
  v10 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(v7 + 104) = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(v7 + 112) = v10;
  v11 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(v7 + 120) = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(v7 + 128) = v11;
  *(_QWORD *)(v7 + 136) = *(_QWORD *)(a1 + 120);
  sub_1D451B9A0();
  sub_1D451B9C4();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v12 = sub_1D451B4FC();
  if (v1)
  {
    v14[0] = v1;
    sub_1D42B28FC(&qword_1EFE49BB0);
    swift_willThrowTypedImpl();
  }
  swift_release();
  return v12;
}

uint64_t sub_1D43EE240(uint64_t a1)
{
  uint64_t result;
  _BYTE *v2;
  uint64_t v3;

  sub_1D42B294C(a1 + 16, (uint64_t)&v3);
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
    sub_1D43705F8();
    swift_allocError();
    *v2 = 1;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1D43EE2E0(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;

  v2 = *(_QWORD *)(result + 16);
  if (!(v2 >> 61))
  {
    v3 = 4 * v2;
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      if (v3 == *(_QWORD *)(a2 + 24) - v4)
      {
LABEL_4:
        sub_1D451B1A8();
        return swift_release();
      }
    }
    else if (!v3)
    {
      goto LABEL_4;
    }
    sub_1D4370694();
    swift_allocError();
    *v5 = 0;
    swift_willThrow();
    return swift_release();
  }
  __break(1u);
  return result;
}

void *sub_1D43EE374@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[80];

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  result = (void *)sub_1D43EE97C(*(_QWORD *)(v7 + 16), *(_QWORD *)(v5 + 16), *(_QWORD *)(v6 + 16));
  if (!v2)
  {
    sub_1D43EE9E8((uint64_t)result);
    v10 = v9;
    sub_1D43EF398(v7);
    v12 = v11;
    sub_1D43EF398(v5);
    v14 = v13;
    sub_1D43EF398(v6);
    sub_1D43EEA84(v12, v14, v15, *(_QWORD *)a1, v10, (uint64_t)v16, *(float *)(a1 + 8));
    sub_1D42FC448();
    swift_release();
    swift_release();
    swift_release();
    return memcpy(a2, v16, 0x50uLL);
  }
  return result;
}

_QWORD *sub_1D43EE4A0(uint64_t a1)
{
  return sub_1D43EE5C0(a1, (_QWORD *(*)(uint64_t *__return_ptr, uint64_t *))sub_1D43EE4B8, &qword_1EFEA7850, &byte_1EFEA7858);
}

uint64_t sub_1D43EE4B8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  _OWORD v6[8];

  v6[0] = xmmword_1D454FDB0;
  v6[1] = unk_1D454FDC0;
  v6[2] = xmmword_1D454FDD0;
  v6[3] = unk_1D454FDE0;
  v6[4] = xmmword_1D454FDF0;
  v6[5] = unk_1D454FE00;
  v6[6] = xmmword_1D454FE10;
  v6[7] = unk_1D454FE20;
  result = sub_1D43EE0DC((uint64_t)v6);
  if (v2)
    *a1 = v2;
  else
    *a2 = result;
  return result;
}

_QWORD *sub_1D43EE524(uint64_t a1)
{
  return sub_1D43EE5C0(a1, (_QWORD *(*)(uint64_t *__return_ptr, uint64_t *))sub_1D43EE53C, &qword_1EFEA7860, &byte_1EFEA7868);
}

uint64_t sub_1D43EE53C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  _OWORD v6[8];

  v6[0] = xmmword_1D454FE30;
  v6[1] = unk_1D454FE40;
  v6[2] = xmmword_1D454FE50;
  v6[3] = unk_1D454FE60;
  v6[4] = xmmword_1D454FE70;
  v6[5] = unk_1D454FE80;
  v6[6] = xmmword_1D454FE90;
  v6[7] = unk_1D454FEA0;
  result = sub_1D43EE0DC((uint64_t)v6);
  if (v2)
    *a1 = v2;
  else
    *a2 = result;
  return result;
}

_QWORD *sub_1D43EE5A8(uint64_t a1)
{
  return sub_1D43EE5C0(a1, (_QWORD *(*)(uint64_t *__return_ptr, uint64_t *))sub_1D43EE620, &qword_1EFEA7870, &byte_1EFEA7878);
}

_QWORD *sub_1D43EE5C0(uint64_t a1, _QWORD *(*a2)(uint64_t *__return_ptr, uint64_t *), _QWORD *a3, _BYTE *a4)
{
  _QWORD *result;
  uint64_t v7;
  uint64_t v8;

  result = a2(&v8, &v7);
  *a3 = v8;
  *a4 = 0;
  return result;
}

uint64_t sub_1D43EE620@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  _OWORD v6[8];

  v6[0] = xmmword_1D454FD30;
  v6[1] = unk_1D454FD40;
  v6[2] = xmmword_1D454FD50;
  v6[3] = unk_1D454FD60;
  v6[4] = xmmword_1D454FD70;
  v6[5] = unk_1D454FD80;
  v6[6] = xmmword_1D454FD90;
  v6[7] = unk_1D454FDA0;
  result = sub_1D43EE0DC((uint64_t)v6);
  if (v2)
    *a1 = v2;
  else
    *a2 = result;
  return result;
}

void sub_1D43EE68C()
{
  uint64_t v0;
  _OWORD v1[2];
  uint64_t v2;

  sub_1D43EE6F4(&v0, (uint64_t)v1);
  xmmword_1EFEA7880 = v1[0];
  *(_OWORD *)&qword_1EFEA7890 = v1[1];
  qword_1EFEA78A0 = v2;
  byte_1EFEA78A8 = 0;
}

void sub_1D43EE6F4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  if (qword_1EFE48EB8 != -1)
    swift_once();
  v4 = (void *)qword_1EFEA7850;
  if ((byte_1EFEA7858 & 1) != 0)
  {
    v5 = (id)qword_1EFEA7850;
    sub_1D42B28FC(&qword_1EFE49BB0);
    swift_willThrowTypedImpl();
LABEL_13:
    *a1 = v4;
    return;
  }
  v6 = qword_1EFE48EC0;
  swift_bridgeObjectRetain();
  if (v6 != -1)
    swift_once();
  v7 = (void *)qword_1EFEA7860;
  if ((byte_1EFEA7868 & 1) != 0)
  {
    v8 = (id)qword_1EFEA7860;
    sub_1D42B28FC(&qword_1EFE49BB0);
    swift_willThrowTypedImpl();
    sub_1D431AE78(v4, 0);
    v4 = v7;
    goto LABEL_13;
  }
  v9 = qword_1EFE48EC8;
  swift_bridgeObjectRetain();
  if (v9 != -1)
    swift_once();
  v10 = qword_1EFEA7870;
  if ((byte_1EFEA7878 & 1) != 0)
  {
    v11 = (id)qword_1EFEA7870;
    sub_1D42B28FC(&qword_1EFE49BB0);
    swift_willThrowTypedImpl();
    sub_1D431AE78(v4, 0);
    sub_1D431AE78(v7, 0);
    v4 = (void *)v10;
    goto LABEL_13;
  }
  *(_QWORD *)a2 = 160;
  *(_DWORD *)(a2 + 8) = 1065101558;
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 32) = v10;
  swift_bridgeObjectRetain();
}

void sub_1D43EE8E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
    v7 = *(_QWORD *)(a1 + 24) - v6;
  else
    v7 = 0;
  v8 = sub_1D43EF37C(v7);
  if (!v3)
  {
    v9 = *(_QWORD *)(a2 + 16);
    if (v9)
      v10 = *(_QWORD *)(a2 + 24) - v9;
    else
      v10 = 0;
    v11 = sub_1D43EF37C(v10);
    v12 = *(_QWORD *)(a3 + 16);
    if (v12)
      v13 = *(_QWORD *)(a3 + 24) - v12;
    else
      v13 = 0;
    v14 = sub_1D43EF37C(v13);
    sub_1D43EE97C(v8, v11, v14);
  }
  sub_1D42BE888();
}

uint64_t sub_1D43EE97C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2 || a1 != a3)
  {
    sub_1D42DCEE8();
    sub_1D4342D78(0x80000001D4551120, 0xD000000000000026, (uint64_t)"inconsistent filter coefficient counts");
    sub_1D4312028();
  }
  return a1;
}

void sub_1D43EE9E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  if (a1 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (a1 > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    return;
  }
  v3 = sub_1D44E4D64(a1);
  type metadata accessor for FixedAddressMutableRawBuffer();
  sub_1D42B8DB4();
  v4 = sub_1D446D3D4(v3);
  sub_1D43EEC04(*(void **)(v4 + 16), *(_QWORD *)(v4 + 24), a1);
  if (v1)
    swift_release();
  sub_1D42BE888();
}

void sub_1D43EEA84(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, float a7@<S0>)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[3];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  sub_1D43EE8E0(a1, a2, a3);
  if (!v7)
  {
    memset(v22, 0, 44);
    if (v15 > 0x7FFFFFFF)
    {
      __break(1u);
    }
    else if (a4 >= (uint64_t)0xFFFFFFFF80000000 && v15 >= (uint64_t)0xFFFFFFFF80000000)
    {
      if (a4 <= 0x7FFFFFFF)
      {
        if (sub_1D44E4DEC((uint64_t)v22, *(_QWORD *)(a1 + 16), *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 + 16), v15, a4, *(_QWORD *)(a5 + 16), a7))
        {
          v17 = *(_QWORD *)&v22[1];
          v18 = DWORD2(v22[1]);
          v19 = *(_QWORD *)((char *)&v22[2] + 4);
          v20 = *(_QWORD *)((char *)&v22[1] + 12);
          *(_OWORD *)a6 = v22[0];
          *(_QWORD *)(a6 + 16) = v17;
          *(_DWORD *)(a6 + 24) = v18;
          *(_QWORD *)(a6 + 28) = v20;
          *(_QWORD *)(a6 + 36) = v19;
          *(_QWORD *)(a6 + 48) = a5;
          *(_QWORD *)(a6 + 56) = a1;
          *(_QWORD *)(a6 + 64) = a2;
          *(_QWORD *)(a6 + 72) = a3;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
        }
        else
        {
          sub_1D42DCEE8();
          sub_1D43EF384();
          sub_1D4342D78(0x80000001D4551120, v21, (uint64_t)"BOOL success status indicates failure");
          sub_1D4312028();
        }
        return;
      }
LABEL_14:
      __break(1u);
    }
    __break(1u);
    goto LABEL_14;
  }
}

uint64_t sub_1D43EEC04(void *a1, uint64_t a2, uint64_t a3)
{
  size_t v3;
  uint64_t result;
  uint64_t v5;
  size_t v6[2];

  v6[1] = *MEMORY[0x1E0C80C00];
  v3 = a2 - (_QWORD)a1;
  if (!a1)
    v3 = 0;
  v6[0] = v3;
  if (a3 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
LABEL_9:
    __break(1u);
  }
  if (a3 > 0x7FFFFFFF)
    goto LABEL_9;
  result = sub_1D44E4D70(a1, v6, a3);
  if ((result & 1) == 0)
  {
    sub_1D42DCEE8();
    sub_1D43EF384();
    sub_1D4342D78(0x80000001D4551120, v5, (uint64_t)"BOOL success status indicates failure");
    return sub_1D4312028();
  }
  return result;
}

void sub_1D43EECC0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >> 61)
  {
    __break(1u);
  }
  else
  {
    v4 = 4 * v2;
    type metadata accessor for FixedAddressMutableRawBuffer();
    sub_1D42B8DB4();
    v5 = sub_1D446D3D4(v4);
    swift_retain();
    sub_1D43EE2E0(a1, v5);
    if (v1)
      swift_release();
    sub_1D42BE888();
  }
}

unint64_t sub_1D43EED44()
{
  unint64_t result;

  result = qword_1EFE50580;
  if (!qword_1EFE50580)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4536A34, &type metadata for SNNumberUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE50580);
  }
  return result;
}

uint64_t sub_1D43EED80()
{
  return swift_deallocObject();
}

uint64_t sub_1D43EED90@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  int v5;
  _QWORD *v6;

  result = sub_1D43EE240(a1);
  if (v2)
  {
    sub_1D42B28FC(&qword_1EFE49BB0);
    result = swift_allocError();
    *v6 = v2;
  }
  else
  {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1D43EEDEC()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1D43EEE24(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1D43EEE88(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 36) = *(_QWORD *)(a2 + 36);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_retain();
  swift_release();
  return a1;
}

void *sub_1D43EEF4C(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t sub_1D43EEF54(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 28) = *(_QWORD *)(a2 + 28);
  *(_QWORD *)(a1 + 36) = *(_QWORD *)(a2 + 36);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  return a1;
}

uint64_t sub_1D43EEFD0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D43EF010(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for EBankUtils.StateWithAllocations()
{
  sub_1D42CB35C();
}

uint64_t sub_1D43EF070()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43EF0A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D43EF0FC(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D43EF180(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D43EF1DC(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D43EF21C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for EBankUtils.Configuration()
{
  sub_1D42CB35C();
}

uint64_t sub_1D43EF274(_QWORD *a1, uint64_t a2)
{
  return sub_1D43EF280(a1, a2, (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1D43EF280(_QWORD *a1, uint64_t a2, void (*a3)(_QWORD))
{
  a3(*a1);
  a3(a1[1]);
  return ((uint64_t (*)(_QWORD))a3)(a1[2]);
}

void sub_1D43EF2C8(uint64_t *a1, uint64_t *a2)
{
  sub_1D43EF364(a1, a2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D42CB15C();
}

void sub_1D43EF2FC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_1D43EF308(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x1E0DEEB08]);
}

void sub_1D43EF308(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v7;
  uint64_t v8;

  a4(*a1);
  v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a4(v7);
  v8 = a1[2];
  a1[2] = *(_QWORD *)(a2 + 16);
  a4(v8);
  sub_1D42CB15C();
}

void type metadata accessor for EBankUtils.Coefficients()
{
  sub_1D42CB35C();
}

uint64_t sub_1D43EF364(uint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  return result;
}

uint64_t sub_1D43EF37C(uint64_t a1)
{
  return sub_1D43EE058(a1, 4);
}

void sub_1D43EF398(uint64_t a1)
{
  sub_1D43EECC0(a1);
}

uint64_t sub_1D43EF3A0()
{
  sub_1D43F8904();
  sub_1D42CB7B8();
  sub_1D43F8974();
  sub_1D42BE8B4();
  sub_1D451B988();
  return sub_1D42CB230();
}

void sub_1D43EF408()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 64);
  sub_1D43F8904();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D42DCE84();
  sub_1D43332AC((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  sub_1D451B970();
  if (v2)
  {
    sub_1D42CB7B8();
    sub_1D43F8974();
    sub_1D42BE8B4();
  }
  sub_1D43F8A98();
  sub_1D43F88E8();
}

void sub_1D43EF500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  char v18;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1D434955C();
    sub_1D43F8974();
    v6 = sub_1D42CB230();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    sub_1D43F8924();
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      if ((*v11 != a1 || v11[1] != a2) && (sub_1D42F1F04() & 1) == 0)
      {
        v13 = ~v7;
        v14 = (v8 + 1) & v13;
        sub_1D43F8924();
        if ((v15 & 1) != 0)
        {
          do
          {
            v16 = (_QWORD *)(v10 + 16 * v14);
            if (*v16 == a1 && v16[1] == a2)
              break;
            if ((sub_1D42F1F04() & 1) != 0)
              break;
            v14 = (v14 + 1) & v13;
            sub_1D43F8924();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
}

void sub_1D43EF5FC(__int128 *a1, __int128 *a2)
{
  char v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  double v7;
  char v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v20;
  _QWORD *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  v2 = *((_BYTE *)a1 + 16);
  v3 = *((_QWORD *)a1 + 3);
  v4 = *((_DWORD *)a1 + 8);
  v5 = *((_DWORD *)a1 + 9);
  v6 = *((_QWORD *)a1 + 5);
  v7 = *((double *)a1 + 6);
  v32 = *((_QWORD *)a1 + 8);
  v33 = *((_QWORD *)a1 + 7);
  v30 = *((_QWORD *)a1 + 10);
  v31 = *((_QWORD *)a1 + 9);
  v28 = *((_QWORD *)a1 + 12);
  v29 = *((_QWORD *)a1 + 11);
  v27 = *((_BYTE *)a1 + 104);
  v8 = *((_BYTE *)a2 + 16);
  v9 = *((_QWORD *)a2 + 3);
  v10 = *((_DWORD *)a2 + 8);
  v11 = *((_DWORD *)a2 + 9);
  v12 = *((_QWORD *)a2 + 5);
  v13 = *((double *)a2 + 6);
  v26 = *((_QWORD *)a2 + 7);
  v25 = *((_QWORD *)a2 + 8);
  v24 = *((_QWORD *)a2 + 9);
  v14 = *((_QWORD *)a2 + 11);
  v23 = *((_QWORD *)a2 + 10);
  v15 = *((_QWORD *)a2 + 12);
  v22 = *((_BYTE *)a2 + 104);
  v20 = (_QWORD *)*((_QWORD *)a2 + 14);
  v21 = (_QWORD *)*((_QWORD *)a1 + 14);
  v40 = *a1;
  LOBYTE(v41) = v2;
  v34 = *a2;
  LOBYTE(v35) = v8;
  if ((sub_1D42CFD24((uint64_t)&v40, (uint64_t)&v34) & 1) != 0
    && v3 == v9
    && v4 == v10
    && v5 == v11
    && v6 == v12
    && v7 == v13)
  {
    *(_QWORD *)&v40 = v33;
    *((_QWORD *)&v40 + 1) = v32;
    v41 = v31;
    v42 = v30;
    v43 = v29;
    v44 = v28;
    v45 = v27;
    *(_QWORD *)&v34 = v26;
    *((_QWORD *)&v34 + 1) = v25;
    v35 = v24;
    v36 = v23;
    v37 = v14;
    v38 = v15;
    v39 = v22;
    if (sub_1D42D331C((uint64_t)&v40, (uint64_t)&v34))
      sub_1D42FE00C(v21, v20);
  }
}

uint64_t sub_1D43EF79C()
{
  void *v0;
  id v1;
  uint64_t v3;

  v1 = objc_msgSend(v0, sel_impl);
  sub_1D43F8A28();
  swift_unknownObjectRelease();
  type metadata accessor for _SNClassifySoundRequest();
  sub_1D43F8A1C();
  return v3;
}

uint64_t sub_1D43EF800()
{
  uint64_t v0;

  objc_opt_self();
  v0 = swift_dynamicCastObjCClass();
  if (v0)
  {
    swift_unknownObjectRetain();
  }
  else
  {
    sub_1D43F792C();
    swift_allocError();
    swift_willThrow();
  }
  return v0;
}

uint64_t sub_1D43EF884(uint64_t a1)
{
  return sub_1D43EF910(a1, (void (*)(_QWORD))type metadata accessor for SNSpeechUtteranceResult);
}

uint64_t sub_1D43EF8A0(uint64_t a1)
{
  return sub_1D43EF910(a1, (void (*)(_QWORD))type metadata accessor for SNSpeechEmotionResult);
}

uint64_t sub_1D43EF8BC(uint64_t a1)
{
  return sub_1D43EF910(a1, (void (*)(_QWORD))type metadata accessor for SNLKFSResult);
}

uint64_t sub_1D43EF8D8(uint64_t a1)
{
  return sub_1D43EF910(a1, (void (*)(_QWORD))type metadata accessor for SNShazamSignatureResult);
}

uint64_t sub_1D43EF8F4(uint64_t a1)
{
  return sub_1D43EF910(a1, (void (*)(_QWORD))type metadata accessor for SNDetectionResult);
}

uint64_t sub_1D43EF910(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v2;

  a2(0);
  v2 = swift_dynamicCastClass();
  if (v2)
  {
    swift_unknownObjectRetain();
  }
  else
  {
    sub_1D43F792C();
    sub_1D42B6D0C();
    sub_1D4312028();
  }
  return v2;
}

uint64_t sub_1D43EF984()
{
  uint64_t v0;
  void *v1;
  void *v2;
  char v3;
  char v5;

  v2 = *(void **)v0;
  v1 = *(void **)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  v5 = *(_BYTE *)(v0 + 104);
  sub_1D451B964();
  if ((v3 & 1) != 0)
  {
    sub_1D42DCE84();
    sub_1D451A74C();
  }
  else
  {
    objc_msgSend(v2, sel_hash);
    sub_1D451B964();
  }
  sub_1D42B5C3C(v2, v1, v3);
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B964();
  if ((v5 & 1) != 0)
  {
    sub_1D451B988();
    sub_1D451B97C();
    sub_1D451B97C();
    sub_1D451B988();
    sub_1D451B988();
    sub_1D451B97C();
    sub_1D451B97C();
    sub_1D451B988();
  }
  else
  {
    sub_1D42D6590();
  }
  sub_1D42CB7B8();
  sub_1D42D6090();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43EFB1C(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  char v7;

  if (a1 == 0xD000000000000011 && a2 == 0x80000001D4556680 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x7544776F646E6977 && a2 == 0xEE006E6F69746172;
    if (v5 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v6 = a1 == 0x4670616C7265766FLL && a2 == 0xED0000726F746361;
      if (v6 || (sub_1D451B820() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000018 && a2 == 0x80000001D45562A0 || (sub_1D451B820() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x80000001D45562F0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v7 = sub_1D451B820();
        swift_bridgeObjectRelease();
        if ((v7 & 1) != 0)
          return 4;
        else
          return 5;
      }
    }
  }
}

uint64_t sub_1D43EFD64(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1D43EFD9C
                                                                     + 4 * asc_1D4538970[a1]))(0xD000000000000011, 0x80000001D4556680);
}

uint64_t sub_1D43EFD9C()
{
  return 0x7544776F646E6977;
}

uint64_t sub_1D43EFDC0()
{
  return 0x4670616C7265766FLL;
}

uint64_t sub_1D43EFDE4(uint64_t a1)
{
  return a1 + 7;
}

void sub_1D43EFE0C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  sub_1D43F899C();
  v2 = v1;
  v3 = sub_1D42B28FC(&qword_1EFE50658);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1D42BE768();
  v5 = v2[3];
  v6 = v2;
  v8 = v7;
  sub_1D42B5528(v6, v5);
  sub_1D43F79E0();
  sub_1D42F8684();
  sub_1D43F7A58();
  sub_1D451B760();
  if (!v0)
  {
    sub_1D42F1FA8();
    sub_1D42CA054();
    sub_1D43F890C();
    sub_1D451B73C();
    sub_1D42B641C();
    sub_1D43F890C();
    sub_1D42B28FC((uint64_t *)&unk_1EFE51A80);
    sub_1D43F7A94(qword_1EFE56410);
    sub_1D451B760();
  }
  sub_1D42F1FA0(v8, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_1D43D669C();
}

uint64_t sub_1D43F0038()
{
  sub_1D43F8904();
  sub_1D43EF984();
  return sub_1D42CB230();
}

void sub_1D43F00CC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  sub_1D43F899C();
  v2 = v1;
  v4 = v3;
  v5 = sub_1D42B28FC(&qword_1EFE50630);
  MEMORY[0x1E0C80A78](v5);
  sub_1D42CB210();
  sub_1D42B5528(v2, v2[3]);
  sub_1D43F79E0();
  sub_1D451BA0C();
  if (v0)
  {
    sub_1D42CB9B4();
  }
  else
  {
    sub_1D43F7A1C();
    sub_1D43F8850();
    v10 = v4;
    v6 = v11;
    sub_1D42F1FA8();
    sub_1D42B5CE4(v11, v12, v13);
    sub_1D42C9FC0();
    sub_1D43F8850();
    v7 = v11;
    LOBYTE(v11) = 2;
    sub_1D451B664();
    v9 = v8;
    sub_1D42B64FC();
    sub_1D43F8850();
    sub_1D42B28FC((uint64_t *)&unk_1EFE51A80);
    sub_1D42B5CF4((uint64_t)v11, (uint64_t)v12, v13, v14, v15, v16, v17);
    sub_1D43F7A94(&qword_1EFE4D3D0);
    sub_1D43F8850();
    sub_1D43F88B8();
    sub_1D42B5CE4(v6, v12, v13);
    sub_1D42B5CF4((uint64_t)v11, (uint64_t)v12, v13, v14, v15, v16, v17);
    sub_1D42CB6CC();
    sub_1D42B5C4C((uint64_t)v11, (uint64_t)v12, v13, v14, v15, v16, v17);
    sub_1D43F89E8(v6);
    *(_QWORD *)v10 = v6;
    *(_QWORD *)(v10 + 8) = v12;
    *(_BYTE *)(v10 + 16) = v17;
    *(_QWORD *)(v10 + 24) = v7;
    *(_QWORD *)(v10 + 32) = v12;
    *(_QWORD *)(v10 + 40) = v13;
    *(_QWORD *)(v10 + 48) = v9;
    *(_QWORD *)(v10 + 56) = v11;
    *(_QWORD *)(v10 + 64) = v12;
    *(_QWORD *)(v10 + 72) = v13;
    *(_QWORD *)(v10 + 80) = v14;
    *(_QWORD *)(v10 + 88) = v15;
    *(_QWORD *)(v10 + 96) = v16;
    *(_BYTE *)(v10 + 104) = v17;
    *(_QWORD *)(v10 + 112) = v11;
    sub_1D42CB9B4();
    sub_1D42B5C3C(v6, v12, v13);
    sub_1D42B5C4C((uint64_t)v11, (uint64_t)v12, v13, v14, v15, v16, v17);
    swift_bridgeObjectRelease();
  }
  sub_1D43D669C();
}

uint64_t sub_1D43F047C()
{
  sub_1D43EF984();
  return AudioConfiguration.hash(into:)();
}

uint64_t sub_1D43F059C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  char v27;
  char v28;
  char v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  char v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  char v69;
  uint64_t v70;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_BYTE *)(a1 + 104);
  v6 = *(_QWORD *)(a1 + 112);
  v47 = *(_QWORD *)(a1 + 128);
  v48 = *(_QWORD *)(a1 + 120);
  v45 = *(_QWORD *)(a1 + 144);
  v46 = *(_QWORD *)(a1 + 136);
  v43 = *(_QWORD *)(a1 + 160);
  v44 = *(_QWORD *)(a1 + 152);
  v41 = *(_BYTE *)(a1 + 169);
  v42 = *(_BYTE *)(a1 + 168);
  v39 = *(_BYTE *)(a1 + 171);
  v40 = *(_BYTE *)(a1 + 170);
  v37 = *(_BYTE *)(a1 + 173);
  v38 = *(_BYTE *)(a1 + 172);
  v36 = *(_QWORD *)(a1 + 176);
  v35 = *(_BYTE *)(a1 + 184);
  v7 = *(_BYTE *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_BYTE *)(a2 + 104);
  v12 = *(_QWORD *)(a2 + 112);
  v13 = *(_QWORD *)(a2 + 120);
  LOBYTE(v61) = *(_BYTE *)(a1 + 16);
  v62 = v2;
  v14 = *(_QWORD *)(a2 + 128);
  v15 = *(_QWORD *)(a2 + 144);
  v33 = *(_QWORD *)(a2 + 136);
  v34 = v13;
  v60 = *(_OWORD *)a1;
  v66 = *(_OWORD *)(a1 + 56);
  v67 = *(_OWORD *)(a1 + 72);
  v68 = *(_OWORD *)(a1 + 88);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a2 + 160);
  v31 = *(_QWORD *)(a2 + 152);
  v32 = v14;
  v64 = v3;
  v69 = v5;
  v18 = *(_BYTE *)(a2 + 168);
  v70 = v6;
  v19 = *(_BYTE *)(a2 + 169);
  LOBYTE(v50) = v7;
  v20 = *(_BYTE *)(a2 + 170);
  v51 = v8;
  v21 = *(_BYTE *)(a2 + 171);
  v53 = v9;
  v22 = *(_BYTE *)(a2 + 172);
  v58 = v11;
  v23 = *(_BYTE *)(a2 + 173);
  v59 = v12;
  v24 = *(_QWORD *)(a2 + 176);
  v63 = v16;
  v65 = v4;
  v49 = *(_OWORD *)a2;
  v52 = *(_QWORD *)(a2 + 32);
  v54 = v10;
  v25 = *(_OWORD *)(a2 + 72);
  v26 = *(_OWORD *)(a2 + 88);
  v27 = *(_BYTE *)(a2 + 184);
  v55 = *(_OWORD *)(a2 + 56);
  v56 = v25;
  v57 = v26;
  sub_1D43EF5FC(&v60, &v49);
  if ((v28 & 1) != 0)
  {
    *(_QWORD *)&v60 = v48;
    *((_QWORD *)&v60 + 1) = v47;
    v61 = v46;
    v62 = v45;
    v63 = v44;
    v64 = v43;
    LOBYTE(v65) = v42;
    BYTE1(v65) = v41;
    BYTE2(v65) = v40;
    BYTE3(v65) = v39;
    BYTE4(v65) = v38;
    BYTE5(v65) = v37;
    *(_QWORD *)&v66 = v36;
    BYTE8(v66) = v35;
    *(_QWORD *)&v49 = v34;
    *((_QWORD *)&v49 + 1) = v32;
    v50 = v33;
    v51 = v15;
    v52 = v31;
    v53 = v17;
    LOBYTE(v54) = v18;
    BYTE1(v54) = v19;
    BYTE2(v54) = v20;
    BYTE3(v54) = v21;
    BYTE4(v54) = v22;
    BYTE5(v54) = v23;
    *(_QWORD *)&v55 = v24;
    BYTE8(v55) = v27;
    v29 = static AudioConfiguration.== infix(_:_:)((uint64_t)&v60, (uint64_t)&v49);
  }
  else
  {
    v29 = 0;
  }
  return v29 & 1;
}

void sub_1D43F07E0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D43F8960();
  v3 = v2;
  v5 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE50720) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB18C();
  sub_1D42B5528(v3, v3[3]);
  sub_1D43F8648();
  sub_1D42F8684();
  sub_1D42B5BBC();
  sub_1D43F8A48();
  sub_1D451B760();
  if (!v0)
  {
    sub_1D42B5ACC();
    sub_1D43F8A48();
    sub_1D451B760();
  }
  sub_1D42F1FA0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_1D42CB3F8();
}

uint64_t sub_1D43F0AE4()
{
  sub_1D43F8904();
  sub_1D43EF984();
  AudioConfiguration.hash(into:)();
  return sub_1D451B994();
}

void sub_1D43F0C5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  char v40;
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  uint64_t v66;
  char v67;
  void *v68;
  id v69;
  char v70;
  uint64_t v71;
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  char v91;
  char v92;
  char v93;
  char v94;
  char v95;
  uint64_t v96;
  char v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  char v106;
  char v107;
  char v108;
  char v109;
  char v110;
  uint64_t v111;
  char v112;
  char v113;
  char v114;
  char v115;
  uint64_t v116;
  uint64_t v117;

  sub_1D43F8960();
  v116 = v1;
  v117 = v2;
  v4 = v3;
  v6 = v5;
  v7 = sub_1D42B28FC(&qword_1EFE50730);
  MEMORY[0x1E0C80A78](v7);
  sub_1D43479B4();
  sub_1D42B5528(v4, v4[3]);
  sub_1D43F8648();
  sub_1D451BA0C();
  if (v0)
  {
    sub_1D43F8AC0();
  }
  else
  {
    LOBYTE(v39[0]) = 0;
    sub_1D42B5D00();
    sub_1D42CB1B4();
    v26 = v71;
    v24 = v73;
    v25 = v72;
    v23 = v74;
    v8 = v75;
    v29 = v78;
    v36 = v83;
    v37 = v79;
    v115 = v70;
    v114 = v82;
    v98 = 1;
    v34 = v68;
    v35 = v69;
    v32 = v70;
    sub_1D42B5CE4(v68, v69, v70);
    v30 = v77;
    v31 = v76;
    v9 = v78;
    v27 = v81;
    v28 = v80;
    v33 = v82;
    sub_1D42B5CF4(v76, v77, v78, v79, v80, v81, v82);
    v10 = sub_1D42B5B80();
    swift_bridgeObjectRetain();
    sub_1D42CB1B4();
    if (v10)
    {
      sub_1D43F88D4();
      sub_1D43F8AA0();
      sub_1D43F89F8(v76, v77, v78, v79);
      sub_1D42CB8F4();
      sub_1D43F8AC0();
      sub_1D43F8AA0();
      sub_1D43F89F8(v76, v77, v78, v79);
      sub_1D42CB8F4();
    }
    else
    {
      sub_1D43F88D4();
      v11 = v99;
      v38 = v100;
      v21 = v102;
      v22 = v101;
      v19 = v104;
      v20 = v103;
      v17 = v106;
      v18 = v105;
      v15 = v108;
      v16 = v107;
      v13 = v110;
      v14 = v109;
      v12 = v111;
      v113 = v112;
      v39[0] = v34;
      v39[1] = v35;
      v40 = v32;
      v41 = v26;
      v42 = v25;
      v43 = v24;
      v44 = v23;
      v45 = v8;
      v46 = v31;
      v47 = v30;
      v48 = v9;
      v49 = v37;
      v50 = v28;
      v51 = v27;
      v52 = v33;
      v53 = v36;
      v54 = v99;
      v55 = v100;
      v56 = v101;
      v57 = v102;
      v58 = v103;
      v59 = v104;
      v60 = v105;
      v61 = v106;
      v62 = v107;
      v63 = v108;
      v64 = v109;
      v65 = v110;
      v66 = v111;
      v67 = v112;
      sub_1D43E0354((uint64_t)v39);
      sub_1D42B5C3C(v34, v35, v32);
      sub_1D42B5C4C(v31, v30, v29, v37, v28, v27, v33);
      sub_1D42CB8F4();
      sub_1D435EBC0(v6, v39);
      sub_1D43F8AC0();
      v68 = v34;
      v69 = v35;
      v70 = v115;
      v71 = v26;
      v72 = v25;
      v73 = v24;
      v74 = v23;
      v75 = v8;
      v76 = v31;
      v77 = v30;
      v78 = v29;
      v79 = v37;
      v80 = v28;
      v81 = v27;
      v82 = v114;
      v83 = v36;
      v84 = v11;
      v85 = v38;
      v86 = v22;
      v87 = v21;
      v88 = v20;
      v89 = v19;
      v90 = v18;
      v91 = v17;
      v92 = v16;
      v93 = v15;
      v94 = v14;
      v95 = v13;
      v96 = v12;
      v97 = v113;
      sub_1D435C34C((uint64_t)&v68);
    }
  }
  sub_1D42CB3F8();
}

uint64_t sub_1D43F1080()
{
  swift_bridgeObjectRetain();
  sub_1D43F8974();
  sub_1D42BE8B4();
  return sub_1D451B988();
}

BOOL sub_1D43F10E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  char v9;
  _BOOL8 result;

  if (a1 == a3 && a2 == a4)
    return a5 == a6;
  v9 = sub_1D42F1F04();
  result = 0;
  if ((v9 & 1) != 0)
    return a5 == a6;
  return result;
}

uint64_t sub_1D43F1128(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v7;

  v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D43F1224(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E656469666E6F63;
  else
    return 0x696669746E656469;
}

void sub_1D43F1260()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D43F8960();
  v3 = v2;
  v4 = sub_1D42B28FC(&qword_1EFE506A0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB18C();
  sub_1D42B5528(v3, v3[3]);
  sub_1D43F7B74();
  sub_1D451BA24();
  sub_1D451B724();
  if (!v0)
    sub_1D451B73C();
  sub_1D42F1FA0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_1D42CB3F8();
}

double sub_1D43F1360()
{
  uint64_t v0;
  double v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  double v6;

  sub_1D43F8960();
  v3 = v2;
  v4 = sub_1D42B28FC(&qword_1EFE50690);
  MEMORY[0x1E0C80A78](v4);
  sub_1D42F1ED4();
  sub_1D42B5528(v3, v3[3]);
  sub_1D43F7B74();
  sub_1D451BA0C();
  if (v0)
  {
    sub_1D42BE944();
  }
  else
  {
    sub_1D451B64C();
    swift_bridgeObjectRetain();
    sub_1D451B664();
    v1 = v6;
    sub_1D42CFC04();
    sub_1D42B5400((uint64_t)v3);
    sub_1D42D3258();
  }
  return v1;
}

uint64_t sub_1D43F14B0()
{
  unsigned __int8 *v0;

  return sub_1D43EFD64(*v0);
}

uint64_t sub_1D43F14B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D43EFB1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D43F14DC()
{
  sub_1D43F79E0();
  return sub_1D451BA3C();
}

uint64_t sub_1D43F1504()
{
  sub_1D43F79E0();
  return sub_1D451BA48();
}

uint64_t sub_1D43F1534()
{
  sub_1D451B958();
  sub_1D43EF984();
  return sub_1D451B994();
}

void sub_1D43F15CC()
{
  sub_1D43F00CC();
}

void sub_1D43F15E0()
{
  sub_1D43EFE0C();
}

uint64_t sub_1D43F15F8()
{
  sub_1D43F8648();
  return sub_1D451BA3C();
}

uint64_t sub_1D43F1620()
{
  sub_1D43F8648();
  return sub_1D451BA48();
}

uint64_t sub_1D43F1650()
{
  sub_1D451B958();
  sub_1D43EF984();
  AudioConfiguration.hash(into:)();
  return sub_1D451B994();
}

void sub_1D43F17C8()
{
  sub_1D43F0C5C();
}

void sub_1D43F17DC()
{
  sub_1D43F07E0();
}

void sub_1D43F17F4()
{
  sub_1D43F4CBC();
}

uint64_t sub_1D43F180C()
{
  char *v0;

  return sub_1D43F1224(*v0);
}

uint64_t sub_1D43F1814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D43F1128(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D43F1838()
{
  sub_1D43F7B74();
  return sub_1D451BA3C();
}

uint64_t sub_1D43F1860()
{
  sub_1D43F7B74();
  return sub_1D451BA48();
}

uint64_t sub_1D43F1888()
{
  return sub_1D43EF3A0();
}

uint64_t sub_1D43F1894()
{
  return sub_1D43F1080();
}

uint64_t sub_1D43F18A0()
{
  sub_1D434955C();
  sub_1D42CB7F8();
  sub_1D451A74C();
  sub_1D42CB0C4();
  sub_1D451B988();
  return sub_1D42CB230();
}

void sub_1D43F1900(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  v5 = sub_1D43F1360();
  if (!v1)
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    *(double *)(a1 + 16) = v5;
  }
}

void sub_1D43F192C()
{
  sub_1D43F1260();
}

BOOL sub_1D43F1948(uint64_t a1, uint64_t a2)
{
  return sub_1D43F10E4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(double *)(a1 + 16), *(double *)(a2 + 16));
}

uint64_t sub_1D43F1964(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 64);
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D42CB7F8();
  sub_1D43332AC(a1, v4);
  sub_1D42CB0C4();
  if (!v5)
    return sub_1D451B970();
  sub_1D451B970();
  sub_1D42CB7B8();
  sub_1D43F8974();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43F1A60(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v14[2];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];
  __int128 v19;
  uint64_t v20;
  uint64_t v21;

  v2 = *a1;
  v3 = a1[5];
  v4 = a1[6];
  v5 = a1[7];
  v6 = a1[8];
  v7 = *a2;
  v8 = a2[6];
  v10 = a2[7];
  v9 = a2[8];
  v17 = a2[5];
  v18[0] = v2;
  v18[1] = a1[1];
  v19 = *((_OWORD *)a1 + 1);
  v20 = a1[4];
  v21 = v3;
  v14[0] = v7;
  v14[1] = a2[1];
  v15 = *((_OWORD *)a2 + 1);
  v16 = a2[4];
  if (static TimeRange.== infix(_:_:)((uint64_t)v18, (uint64_t)v14))
  {
    sub_1D432F4C8(v4, v8);
    if ((v11 & 1) != 0)
    {
      if (v6)
      {
        if (v9)
        {
          if (v5 == v10 && v6 == v9)
            return 1;
          sub_1D42F1F54();
          if ((sub_1D42F1F04() & 1) != 0)
            return 1;
        }
      }
      else if (!v9)
      {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1D43F1B3C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x676E6152656D6974 && a2 == 0xE900000000000065;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D4552B20 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D4550D80)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1D43F1C94(char a1)
{
  if (!a1)
    return 0x676E6152656D6974;
  if (a1 == 1)
    return 0xD000000000000018;
  return 0xD000000000000014;
}

void sub_1D43F1CFC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  sub_1D43F8960();
  v3 = v2;
  v6 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE50688) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB18C();
  sub_1D42B5528(v3, v3[3]);
  sub_1D43F7AE4();
  sub_1D451BA24();
  sub_1D42CA408();
  sub_1D451B760();
  if (v0)
  {
    v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  }
  else
  {
    sub_1D42F1FA8();
    sub_1D42B28FC(&qword_1EFE4BE50);
    sub_1D43F7B20(&qword_1EFE4BE58);
    sub_1D451B760();
    sub_1D451B700();
    v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  }
  sub_1D42F1FA0(v1, v5);
  sub_1D42BE844();
}

void sub_1D43F1EBC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D43F899C();
  v2 = v1;
  v4 = v3;
  v5 = sub_1D42B28FC(&qword_1EFE50670);
  MEMORY[0x1E0C80A78](v5);
  sub_1D42CB210();
  sub_1D42B5528(v2, v2[3]);
  sub_1D43F7AE4();
  sub_1D451BA0C();
  if (v0)
  {
    sub_1D42BE944();
  }
  else
  {
    sub_1D42CA3CC();
    sub_1D42CB1B4();
    sub_1D42B28FC(&qword_1EFE4BE50);
    sub_1D42F1FA8();
    sub_1D43F7B20(&qword_1EFE4BE70);
    sub_1D42CB1B4();
    swift_bridgeObjectRetain();
    v6 = sub_1D451B628();
    v8 = v7;
    sub_1D42F8674();
    sub_1D42CB6CC();
    swift_bridgeObjectRelease();
    *v4 = v9;
    v4[1] = v10;
    v4[2] = v11;
    v4[3] = v12;
    v4[4] = v13;
    v4[5] = v14;
    v4[6] = v9;
    v4[7] = v6;
    v4[8] = v8;
    sub_1D42BE944();
    sub_1D42B7204();
  }
  swift_bridgeObjectRelease();
  sub_1D43D669C();
}

uint64_t sub_1D43F20BC()
{
  char *v0;

  return sub_1D43F1C94(*v0);
}

uint64_t sub_1D43F20C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D43F1B3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D43F20E8()
{
  sub_1D43F7AE4();
  return sub_1D451BA3C();
}

uint64_t sub_1D43F2110()
{
  sub_1D43F7AE4();
  return sub_1D451BA48();
}

uint64_t sub_1D43F2140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 64);
  sub_1D451B958();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  swift_bridgeObjectRetain();
  sub_1D43332AC((uint64_t)v4, v1);
  swift_bridgeObjectRelease();
  sub_1D451B970();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_1D451A74C();
    swift_bridgeObjectRelease();
  }
  return sub_1D451B994();
}

void sub_1D43F2264()
{
  sub_1D43F1EBC();
}

void sub_1D43F2278()
{
  sub_1D43F1CFC();
}

uint64_t sub_1D43F2290(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1D43F22DC;
  return sub_1D43768A8();
}

uint64_t sub_1D43F22DC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v6)(void);

  sub_1D42F1E44();
  v2[4] = v0;
  v2[5] = v1;
  swift_task_dealloc();
  if (v1)
    return sub_1D42F1DEC();
  v6 = (uint64_t (*)(void))((char *)&dword_1EFE4E1D0 + dword_1EFE4E1D0);
  v5 = (_QWORD *)swift_task_alloc();
  v2[6] = v5;
  *v5 = v3;
  v5[1] = sub_1D42EC5A0;
  return sub_1D42E3A2C(v6);
}

uint64_t sub_1D43F235C(uint64_t a1, uint64_t a2)
{
  _QWORD v4[5];

  sub_1D447DAC4();
  v4[3] = sub_1D42B28FC(&qword_1EFE4FDA8);
  v4[4] = sub_1D43F85E4();
  v4[0] = a2;
  swift_retain();
  sub_1D447DAE0(v4);
  swift_release();
  return sub_1D42B5400((uint64_t)v4);
}

uint64_t sub_1D43F23E0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  swift_retain();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D42EC778;
  return sub_1D43F2290(a1);
}

uint64_t sub_1D43F2434(uint64_t a1)
{
  uint64_t *v1;

  return sub_1D43F235C(a1, *v1);
}

uint64_t sub_1D43F244C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_1D42EC834;
  return sub_1D43F23E0(a2);
}

void sub_1D43F249C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  id v8;
  id v9;
  uint64_t v10;
  _QWORD v11[2];
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v11[0] = *(_QWORD *)a1;
  v11[1] = *(_QWORD *)(a1 + 8);
  v12 = *(_OWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = v3;
  v15 = v4;
  v16 = v5;
  v17 = v6;
  v7 = (objc_class *)type metadata accessor for _SNClassificationResult();
  objc_allocWithZone(v7);
  sub_1D42CB7F8();
  sub_1D42CB6CC();
  v8 = sub_1D4331458((uint64_t)v11);
  *((_QWORD *)&v12 + 1) = v7;
  v11[0] = v8;
  v9 = objc_allocWithZone((Class)SNClassificationResult);
  sub_1D43F6E1C(v11);
  *a2 = v10;
}

void sub_1D43F254C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24[2];
  _BYTE v25[200];
  uint64_t v26;
  uint64_t v27;

  sub_1D43F8960();
  v26 = v2;
  v27 = v3;
  v5 = v4;
  v7 = v6;
  v8 = sub_1D42B28FC(&qword_1EFE568A0);
  v20 = *(_QWORD *)(v8 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  sub_1D42CB210();
  v12 = v11 - v10;
  v22 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE505E0) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v13);
  sub_1D43479B4();
  v21 = sub_1D42B28FC(&qword_1EFE505E8);
  v23 = *(_QWORD *)(v21 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v14);
  sub_1D42F1ED4();
  sub_1D435EBC0(v25, v7);
  v15 = sub_1D42B6F40();
  sub_1D435EBC0((void *)(v15 + 16), v7);
  sub_1D42E2D8C(v5, (uint64_t)v24);
  v16 = sub_1D42B6F40();
  sub_1D42E33E0(v24, v16 + 16);
  sub_1D435EBC0((void *)(v16 + 56), v25);
  v17 = (_QWORD *)sub_1D42B6F40();
  v17[2] = sub_1D43F7818;
  v17[3] = v15;
  v17[4] = sub_1D43F7894;
  v17[5] = v16;
  v18 = sub_1D42B6F40();
  *(_QWORD *)(v18 + 16) = sub_1D42F0F18;
  *(_QWORD *)(v18 + 24) = v17;
  sub_1D43E0354((uint64_t)v25);
  sub_1D43E0354((uint64_t)v25);
  swift_retain();
  swift_retain();
  sub_1D42B28FC((uint64_t *)&unk_1EFE4A6A0);
  sub_1D43F7BEC(qword_1EFE568C0, (uint64_t *)&unk_1EFE4A6A0);
  v19 = sub_1D451A2C0();
  sub_1D42EA3E0(v19, &qword_1EFE4E3E0);
  sub_1D43F7BEC(&qword_1EFE4A6B0, &qword_1EFE568A0);
  sub_1D451A3A4();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v12, v8);
  swift_release();
  swift_release();
  sub_1D43F7BEC(&qword_1EFE505F0, &qword_1EFE505E0);
  sub_1D451A308();
  sub_1D42F1FA0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  sub_1D43F7BEC(&qword_1EFE505F8, &qword_1EFE505E8);
  sub_1D451A2E4();
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v0, v21);
  sub_1D42BE844();
}

void sub_1D43F286C(const void *a1)
{
  uint64_t v2;
  id v3;
  id v4;
  _QWORD v5[15];
  _BYTE __dst[120];

  v2 = type metadata accessor for _SNClassifySoundRequest();
  memcpy(__dst, a1, sizeof(__dst));
  memcpy(v5, a1, sizeof(v5));
  sub_1D42B5C58((uint64_t)__dst);
  v3 = sub_1D43F28FC();
  v5[3] = v2;
  v5[0] = v3;
  v4 = objc_allocWithZone((Class)SNClassifySoundRequest);
  sub_1D43F6E1C(v5);
}

id sub_1D43F28FC()
{
  uint64_t v0;
  objc_class *v1;
  char *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char *v9;
  objc_super v11;

  v2 = (char *)sub_1D42B7238();
  v3 = *(_BYTE *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = *(_BYTE *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 112);
  v9 = &v2[OBJC_IVAR____SNClassifySoundRequest_impl];
  *(_OWORD *)v9 = *(_OWORD *)v0;
  v9[16] = v3;
  *((_QWORD *)v9 + 3) = v4;
  *((_QWORD *)v9 + 4) = *(_QWORD *)(v0 + 32);
  *((_QWORD *)v9 + 5) = v5;
  *((_QWORD *)v9 + 6) = v6;
  *(_OWORD *)(v9 + 56) = *(_OWORD *)(v0 + 56);
  *(_OWORD *)(v9 + 72) = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v9 + 88) = *(_OWORD *)(v0 + 88);
  v9[104] = v7;
  *((_QWORD *)v9 + 14) = v8;
  v11.receiver = v2;
  v11.super_class = v1;
  return objc_msgSendSuper2(&v11, sel_init);
}

uint64_t sub_1D43F2998@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE __dst[72];

  v6 = a1[3];
  v7 = a1[4];
  sub_1D42B5528(a1, v6);
  memcpy(__dst, (const void *)(a2 + 120), 0x41uLL);
  result = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v7 + 8))(__dst, v6, v7);
  if (!v3)
    *a3 = result;
  return result;
}

void sub_1D43F2A18(_QWORD *a1@<X8>)
{
  char *v2;
  void *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1D4332194();
  v3 = v2;
  v4 = &v2[OBJC_IVAR____SNClassificationResult_impl];
  swift_beginAccess();
  v5 = *(_QWORD *)v4;
  v6 = *((_QWORD *)v4 + 2);
  v7 = *((_QWORD *)v4 + 3);
  v9 = *((_QWORD *)v4 + 5);
  v8 = *((_QWORD *)v4 + 6);
  v11 = *((_QWORD *)v4 + 7);
  v10 = *((_QWORD *)v4 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = *((_QWORD *)v4 + 1);
  v13 = *((_QWORD *)v4 + 4);

  *a1 = v5;
  a1[1] = v12;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v13;
  a1[5] = v9;
  a1[6] = v8;
  a1[7] = v11;
  a1[8] = v10;
}

void sub_1D43F2AD8()
{
  sub_1D43F8904();
  sub_1D451B964();
  sub_1D42CB230();
  sub_1D42BE978();
}

void sub_1D43F2B0C()
{
  sub_1D43F2AD8();
}

void sub_1D43F2B24()
{
  sub_1D434955C();
  sub_1D42CB3DC();
  sub_1D42CB230();
  sub_1D42BE978();
}

void sub_1D43F2B4C(void *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;

  sub_1D42F2108();
  sub_1D44BE340(a1, 0);
  if (v2[2] != 1)
  {
    sub_1D42DCEE8();
    sub_1D451B400();
    sub_1D430740C();
    sub_1D4342D94();
    sub_1D42CB208();
    sub_1D451B7C0();
    sub_1D4342D94();
    sub_1D42CB208();
    v16 = sub_1D43F8944();
    sub_1D43EC59C(v16, v17, v18, v19, v20, 0xE000000000000000);
    sub_1D42CB208();
    swift_willThrow();
    return;
  }
  v3 = v2[4];
  v4 = v2[5];
  sub_1D438C74C();
  sub_1D42CB208();
  v5 = objc_msgSend(a1, sel_inputDescriptionsByName);
  sub_1D42EA3E0((uint64_t)v5, (unint64_t *)&qword_1EFE40360);
  v6 = sub_1D451A5CC();

  sub_1D4364898(v3, v4, v6);
  v8 = v7;
  sub_1D42D3258();
  sub_1D42CB338();
  if (!v8 || (v9 = objc_msgSend(v8, sel_multiArrayConstraint)) == 0)
  {
    sub_1D42DCEE8();
    sub_1D4311F68();
    sub_1D430740C();
    sub_1D43F8880(v21, v22, (uint64_t)"Invalid model, input feature must be a multi-array");
    sub_1D4312028();
    goto LABEL_8;
  }
  v10 = v9;
  v11 = sub_1D44BC6AC(a1);
  v12 = sub_1D44BC788(v11);
  sub_1D42D3258();
  if (v12 <= 2)
  {
    v23 = sub_1D44BC6AC(a1);
    v24 = sub_1D44BE0AC(v23, 1u);
    sub_1D42D3258();
    if (v24 < 2)
    {
      sub_1D42DCEE8();
      sub_1D4311F68();
      sub_1D430740C();
      v15 = "Invalid model, block size must be 2 or greater";
      goto LABEL_17;
    }
    sub_1D4442B24(a1);
    v26 = v25;
    swift_bridgeObjectRelease();
    if (!v26)
    {
      sub_1D42DCEE8();
      sub_1D4311F68();
      sub_1D430740C();
      v15 = "Invalid model, classification models must have 'predictedProbabilitesName' property";
      goto LABEL_17;
    }
    v27 = objc_msgSend(v10, sel_dataType);
    if (v27 == (id)65552 || v27 == (id)65568 || v27 == (id)65600)
    {

      return;
    }
    sub_1D42DCEE8();
    sub_1D4311F68();
    sub_1D430740C();
    sub_1D43F8880(v28, v29, (uint64_t)"Invalid model, expected input type to be floating point format (fixed-point audio formats are unsupported).");
    sub_1D4312028();

LABEL_8:
    return;
  }
  sub_1D42DCEE8();
  sub_1D4311F68();
  sub_1D430740C();
  v15 = "Invalid model, input feature must be one dimensional (for mono audio), or two dimensional (for multichannel audio).";
LABEL_17:
  sub_1D43F8880(v13, v14, (uint64_t)v15);
  sub_1D4312028();

}

void sub_1D43F2E7C()
{
  sub_1D451B55C();
  __break(1u);
}

id sub_1D43F2EE0(uint64_t a1)
{
  objc_class *v1;
  id v2;
  uint64_t v4[2];
  char v5;

  v4[0] = a1;
  v4[1] = 0;
  v5 = 0;
  v2 = objc_allocWithZone(v1);
  return sub_1D43F2F30(v4);
}

id sub_1D43F2F30(uint64_t *a1)
{
  void *v1;
  uint64_t v2;
  objc_class *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char *v8;
  void *v9;
  void *v10;
  id v11;
  id v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  _BYTE *v22;
  void *v23;
  id v24;
  CMTimeValue v25;
  uint64_t v26;
  CMTimeEpoch v27;
  CMTimeValue v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  CMTimeValue v42;
  id v43;
  id v44;
  unint64_t v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  objc_super v49;
  _QWORD v50[2];
  char v51;
  id v52;

  v4 = (objc_class *)sub_1D42B7104();
  v6 = *a1;
  v5 = a1[1];
  v7 = *((_BYTE *)a1 + 16);
  v50[0] = *a1;
  v50[1] = v5;
  v51 = v7;
  v8 = v1;
  sub_1D43F32E0((uint64_t)v50);
  if (v2)
  {

    sub_1D43F89B8();
    return (id)sub_1D43F8938();
  }
  v10 = v9;
  v11 = objc_msgSend(v9, sel_modelDescription);
  sub_1D43F2B4C(v11);

  sub_1D4394184();
  v13 = objc_msgSend(v10, sel_modelDescription);
  v46 = sub_1D44C962C(v13, 16000);

  sub_1D42F2108();
  v52 = v10;
  v14 = objc_msgSend(v10, sel_modelDescription);
  v15 = sub_1D44BC6AC(v14);

  if (v15 >> 62)
  {
    sub_1D43F8AC8();
    v16 = sub_1D451B5A4();
    sub_1D4347994();
  }
  else
  {
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v16)
  {
    sub_1D4347994();
    sub_1D42B7F2C();
    sub_1D42B6D0C();
    *v22 = 0;
    sub_1D4312028();

    sub_1D43F89C8();
    return (id)sub_1D43F8938();
  }
  v17 = __OFSUB__(v16, 1);
  v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
    goto LABEL_15;
  }
  sub_1D42D2E5C(v18, (v15 & 0xC000000000000001) == 0, v15);
  if ((v15 & 0xC000000000000001) != 0)
  {
LABEL_15:
    v19 = (id)MEMORY[0x1D825CD78](v18, v15);
    goto LABEL_11;
  }
  v19 = *(id *)(v15 + 8 * v18 + 32);
LABEL_11:
  v20 = v19;
  sub_1D4347994();
  objc_msgSend(v20, sel_integerValue);

  v21 = objc_msgSend(v52, sel_modelDescription);
  sub_1D44BC8E4(v21, v46);
  v43 = v23;

  v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedInt_, v46);
  sub_1D42DC694(v24);

  v25 = sub_1D451B0A0();
  v28 = sub_1D44BCA28(v25, v26, v27, v43);
  v41 = v29;
  v42 = v28;
  v45 = HIDWORD(v29);
  v47 = v30;
  v31 = sub_1D43F8A08(v28, sel_modelDescription);
  sub_1D44BCD48(v31);
  v48 = v32;

  v33 = (_BYTE *)sub_1D42D4D24();
  swift_unknownObjectRelease();

  v34 = *(_QWORD *)&v33[OBJC_IVAR____SNTimeDurationConstraint_impl];
  v35 = *(_QWORD *)&v33[OBJC_IVAR____SNTimeDurationConstraint_impl + 8];
  v36 = *(_QWORD *)&v33[OBJC_IVAR____SNTimeDurationConstraint_impl + 24];
  v52 = *(id *)&v33[OBJC_IVAR____SNTimeDurationConstraint_impl + 16];
  v44 = (id)v36;
  v39 = *(_QWORD *)&v33[OBJC_IVAR____SNTimeDurationConstraint_impl + 40];
  v40 = *(_QWORD *)&v33[OBJC_IVAR____SNTimeDurationConstraint_impl + 32];
  v38 = v33[OBJC_IVAR____SNTimeDurationConstraint_impl + 48];
  sub_1D42B5CF4(v34, v35, (uint64_t)v52, v36, v40, v39, v38);

  v37 = &v8[OBJC_IVAR____SNClassifySoundRequest_impl];
  *(_QWORD *)v37 = v6;
  *((_QWORD *)v37 + 1) = v5;
  v37[16] = v7;
  *((_QWORD *)v37 + 3) = v42;
  *((_DWORD *)v37 + 8) = v41;
  *((_DWORD *)v37 + 9) = v45;
  *((_QWORD *)v37 + 5) = v47;
  *((_QWORD *)v37 + 6) = 0x3FE0000000000000;
  *((_QWORD *)v37 + 7) = v34;
  *((_QWORD *)v37 + 8) = v35;
  *((_QWORD *)v37 + 9) = v52;
  *((_QWORD *)v37 + 10) = v44;
  *((_QWORD *)v37 + 11) = v40;
  *((_QWORD *)v37 + 12) = v39;
  v37[104] = v38;
  *((_QWORD *)v37 + 14) = v48;

  v49.receiver = v8;
  v49.super_class = v4;
  return objc_msgSendSuper2(&v49, sel_init);
}

void sub_1D43F32E0(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  id v4;

  v1 = *(void **)a1;
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    v2 = *(void **)(a1 + 8);
    sub_1D42DCE84();
    v3 = (void *)sub_1D451A6C8();
    sub_1D42B5C3C(v1, v2, 1);
    sub_1D43F33B4();

  }
  else
  {
    v4 = v1;
  }
  sub_1D4377BF8();
}

void sub_1D43F335C(uint64_t a1)
{
  void *v1;
  void *v2;

  if (*(_BYTE *)(a1 + 16) == 1)
  {
    v2 = *(void **)a1;
    v1 = *(void **)(a1 + 8);
    sub_1D42CB6CC();
    sub_1D451A6C8();
    sub_1D42B5C3C(v2, v1, 1);
  }
  sub_1D42CB15C();
}

void sub_1D43F33B4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char v15;

  v1 = sub_1D451A6EC();
  v3 = v2;
  if (v1 == sub_1D451A6EC() && v3 == v4)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_9;
  }
  v6 = sub_1D451B820();
  sub_1D42CB208();
  sub_1D42CB5C8();
  if ((v6 & 1) != 0)
  {
LABEL_9:
    sub_1D439CBCC(0x24u, 0);
    return;
  }
  v7 = sub_1D451A6EC();
  v9 = sub_1D439CEF0(v7, v8);
  if (v0)
  {
    sub_1D42CB5C8();
    sub_1D42DCEE8();
    sub_1D451B400();
    swift_bridgeObjectRelease();
    sub_1D451A6EC();
    sub_1D4342D94();
    swift_bridgeObjectRelease();
    v10 = sub_1D43F8944();
    sub_1D43EC59C(v10, v11, v12, v13, v14, 0x80000001D4556390);
    sub_1D42CB8F4();
    swift_willThrow();

  }
  else
  {
    v15 = v9;
    sub_1D42CB5C8();
    sub_1D439C424(v15, 0);
  }
}

uint64_t (*sub_1D43F353C(uint64_t a1, uint64_t (*a2)(uint64_t)))(uint64_t)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v5;
  _BYTE *v6;

  if (!a1)
  {
    sub_1D435C4AC();
    sub_1D42B6D0C();
    *v6 = 0;
    sub_1D4312028();
    goto LABEL_5;
  }
  v3 = a2;
  swift_getObjectType();
  v5 = v3(a1);
  if (v2)
  {
LABEL_5:
    swift_getObjectType();
    sub_1D43F8938();
    return v3;
  }
  v3 = (uint64_t (*)(uint64_t))v5;
  sub_1D43F8938();
  return v3;
}

id sub_1D43F35EC(void *a1)
{
  objc_class *v1;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v7[2];
  char v8;

  v7[0] = sub_1D451A6EC();
  v7[1] = v3;
  v8 = 1;
  v4 = objc_allocWithZone(v1);
  sub_1D42DCE84();
  v5 = sub_1D43F2F30(v7);
  sub_1D42CB208();

  return v5;
}

void sub_1D43F3670(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  id v7;

  v7 = a3;
  sub_1D43F353C((uint64_t)a3, a5);
  sub_1D42CB758();
}

double sub_1D43F3708()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl + 48);
}

void sub_1D43F371C(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;

  if (a1 >= 0.0 && a1 < 1.0)
  {
    *(double *)(v1 + OBJC_IVAR____SNClassifySoundRequest_impl + 48) = a1;
  }
  else
  {
    v3 = sub_1D451A6EC();
    v5 = v4;
    sub_1D43F7BB0();
    sub_1D42B6D0C();
    *v6 = v3;
    v6[1] = v5;
    v6[2] = 0xD00000000000003ELL;
    v6[3] = 0x80000001D45563C0;
    sub_1D4312028();
  }
}

uint64_t sub_1D43F3878()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl + 24);
}

void sub_1D43F38E4(CMTimeValue a1, uint64_t a2, CMTimeEpoch a3)
{
  uint64_t v3;
  uint64_t v4;
  id v8;
  CMTimeValue v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = v3;
  type metadata accessor for SNUtils();
  v8 = sub_1D43F397C();
  v9 = sub_1D44BCA28(a1, a2, a3, v8);
  v11 = v10;
  v13 = v12;

  v14 = (_QWORD *)(v4 + OBJC_IVAR____SNClassifySoundRequest_impl);
  v14[3] = v9;
  v14[4] = v11;
  v14[5] = v13;
}

id sub_1D43F397C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  id v9;
  uint64_t v11[3];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v1 = type metadata accessor for _SNTimeDurationConstraint();
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl + 64);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl + 72);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl + 80);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl + 88);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl + 96);
  v7 = *(_BYTE *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl + 104);
  v11[0] = *(_QWORD *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl + 56);
  v11[1] = v2;
  v11[2] = v3;
  v12 = v4;
  v13 = v5;
  v14 = v6;
  v15 = v7;
  sub_1D42B5CF4(v11[0], v2, v3, v4, v5, v6, v7);
  sub_1D42D4430((uint64_t)v11);
  v12 = v1;
  v11[0] = v8;
  v9 = objc_allocWithZone((Class)SNTimeDurationConstraint);
  return sub_1D4425BEC(v11);
}

uint64_t sub_1D43F3A74()
{
  return swift_bridgeObjectRetain();
}

double *sub_1D43F3A88()
{
  uint64_t v0;
  uint64_t v1;
  double *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  double v9;
  CMTimeValue v10;
  unint64_t v11;
  CMTimeEpoch v12;

  sub_1D42B7104();
  v2 = (double *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl);
  sub_1D43F8984();
  sub_1D43F32E0(v3);
  if (!v1)
  {
    v5 = v4;
    sub_1D43F8984();
    sub_1D43F335C(v6);
    if (!v7)
      v7 = sub_1D451A6C8();
    v8 = (void *)v7;
    v9 = v2[6];
    v10 = *((_QWORD *)v2 + 3);
    v11 = *((_QWORD *)v2 + 4);
    v12 = *((_QWORD *)v2 + 5);
    type metadata accessor for SNSoundClassifier();
    v2 = (double *)sub_1D42B6F40();
    sub_1D43F4D18(v5, v10, v11, v12, v8, v9);
  }
  return v2;
}

id _SNClassifySoundRequest.copy(with:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id result;
  uint64_t v12;

  v2 = v1;
  v4 = sub_1D42B7104();
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____SNClassifySoundRequest_impl + 64);
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____SNClassifySoundRequest_impl + 72);
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____SNClassifySoundRequest_impl + 80);
  v8 = *(_QWORD *)(v2 + OBJC_IVAR____SNClassifySoundRequest_impl + 88);
  v9 = *(_QWORD *)(v2 + OBJC_IVAR____SNClassifySoundRequest_impl + 96);
  v10 = *(_BYTE *)(v2 + OBJC_IVAR____SNClassifySoundRequest_impl + 104);
  v12 = *(_QWORD *)(v2 + OBJC_IVAR____SNClassifySoundRequest_impl + 56);
  sub_1D42B5CE4(*(void **)(v2 + OBJC_IVAR____SNClassifySoundRequest_impl), *(id *)(v2 + OBJC_IVAR____SNClassifySoundRequest_impl + 8), *(_BYTE *)(v2 + OBJC_IVAR____SNClassifySoundRequest_impl + 16));
  sub_1D42B5CF4(v12, v5, v6, v7, v8, v9, v10);
  sub_1D43F8AC8();
  result = sub_1D43F28FC();
  a1[3] = v4;
  *a1 = result;
  return result;
}

uint64_t _SNClassifySoundRequest.hash.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = *(void **)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl);
  v2 = *(void **)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl + 8);
  v3 = *(_BYTE *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl + 16);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl + 96);
  v16 = *(_QWORD *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl + 88);
  v5 = *(_BYTE *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl + 104);
  sub_1D43F8904();
  sub_1D42B5CE4(v1, v2, v3);
  v6 = sub_1D43F8A64();
  sub_1D42B5CF4(v6, v7, v8, v9, v16, v4, v5);
  sub_1D42CB6CC();
  sub_1D43EF984();
  v10 = sub_1D43F8A98();
  sub_1D42B5C3C(v1, v2, v3);
  v11 = sub_1D43F8A64();
  sub_1D42B5C4C(v11, v12, v13, v14, v16, v4, v5);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t _SNClassifySoundRequest.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  __int128 v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  char v28;
  uint64_t v29;
  __int128 v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  char v39;
  uint64_t v40;
  _OWORD v41[2];
  __int128 v42;
  uint64_t v43;

  sub_1D42B7104();
  sub_1D42B28B4(a1, (uint64_t)&v42);
  if (v43)
  {
    sub_1D42B293C(&v42, v41);
    sub_1D42B294C((uint64_t)v41, (uint64_t)&v30);
    if (swift_dynamicCast())
    {
      v3 = (void *)v19;
      v4 = *(_BYTE *)(v1 + OBJC_IVAR____SNClassifySoundRequest_impl + 16);
      v5 = *(_QWORD *)(v1 + OBJC_IVAR____SNClassifySoundRequest_impl + 24);
      v6 = *(_QWORD *)(v1 + OBJC_IVAR____SNClassifySoundRequest_impl + 40);
      v7 = *(_QWORD *)(v1 + OBJC_IVAR____SNClassifySoundRequest_impl + 48);
      v8 = *(_BYTE *)(v1 + OBJC_IVAR____SNClassifySoundRequest_impl + 104);
      v9 = *(_QWORD *)(v1 + OBJC_IVAR____SNClassifySoundRequest_impl + 112);
      v30 = *(_OWORD *)(v1 + OBJC_IVAR____SNClassifySoundRequest_impl);
      v31 = v4;
      v32 = v5;
      v33 = *(_QWORD *)(v1 + OBJC_IVAR____SNClassifySoundRequest_impl + 32);
      v34 = v6;
      v35 = v7;
      v36 = *(_OWORD *)(v1 + OBJC_IVAR____SNClassifySoundRequest_impl + 56);
      v37 = *(_OWORD *)(v1 + OBJC_IVAR____SNClassifySoundRequest_impl + 72);
      v38 = *(_OWORD *)(v1 + OBJC_IVAR____SNClassifySoundRequest_impl + 88);
      v39 = v8;
      v40 = v9;
      v10 = v19 + OBJC_IVAR____SNClassifySoundRequest_impl;
      v11 = *(_BYTE *)(v19 + OBJC_IVAR____SNClassifySoundRequest_impl + 16);
      v12 = *(_QWORD *)(v19 + OBJC_IVAR____SNClassifySoundRequest_impl + 24);
      v13 = *(_QWORD *)(v19 + OBJC_IVAR____SNClassifySoundRequest_impl + 40);
      v14 = *(_QWORD *)(v19 + OBJC_IVAR____SNClassifySoundRequest_impl + 48);
      LOBYTE(v5) = *(_BYTE *)(v19 + OBJC_IVAR____SNClassifySoundRequest_impl + 104);
      v15 = *(_QWORD *)(v19 + OBJC_IVAR____SNClassifySoundRequest_impl + 112);
      v19 = *(_OWORD *)(v19 + OBJC_IVAR____SNClassifySoundRequest_impl);
      v20 = v11;
      v21 = v12;
      v22 = *(_QWORD *)(v10 + 32);
      v23 = v13;
      v24 = v14;
      v25 = *(_OWORD *)(v10 + 56);
      v26 = *(_OWORD *)(v10 + 72);
      v27 = *(_OWORD *)(v10 + 88);
      v28 = v5;
      v29 = v15;
      sub_1D43EF5FC(&v30, &v19);
      v17 = v16;

    }
    else
    {
      v17 = 0;
    }
    sub_1D42B5400((uint64_t)v41);
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

void _SNClassifySoundRequest.__allocating_init(coder:)()
{
  void *v0;

  sub_1D42B7238();
  _SNClassifySoundRequest.init(coder:)(v0);
  sub_1D42B6E24();
}

id _SNClassifySoundRequest.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void *v20;
  void *v21;
  char v22;

  v3 = v1;
  sub_1D42B1C3C();
  swift_getObjectType();

  sub_1D42B5CE4(v20, v21, v22);
  sub_1D43F8A78();
  sub_1D43BDA7C();
  sub_1D42B5CF4(v4, v5, v6, v7, v8, v9, v10);
  sub_1D42CB7F8();
  v11 = sub_1D43F28FC();

  sub_1D42B5C3C(v20, v21, v22);
  sub_1D43F8A78();
  sub_1D43BDA7C();
  sub_1D42B5C4C(v12, v13, v14, v15, v16, v17, v18);
  sub_1D42CB0C4();
  sub_1D43F8938();
  return v11;
}

Swift::Void __swiftcall _SNClassifySoundRequest.encode(with:)(NSCoder with)
{
  uint64_t v1;
  _BYTE __dst[120];

  memcpy(__dst, (const void *)(v1 + OBJC_IVAR____SNClassifySoundRequest_impl), sizeof(__dst));
  sub_1D42B5C58((uint64_t)__dst);
  sub_1D42B0078(__dst, 1819307369, 0xE400000000000000, with.super.isa);
  sub_1D43F656C((uint64_t)__dst);
}

uint64_t static _SNClassifySoundRequest.supportsSecureCoding.getter()
{
  return 1;
}

void sub_1D43F42DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  const void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void (*v10)(_QWORD *__return_ptr, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  const void *v37;
  _QWORD v38[6];
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47[9];
  _QWORD v48[4];
  char v49[40];
  uint64_t v50;
  _BYTE v51[16];
  _BYTE v52[120];
  _QWORD v53[6];
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  sub_1D43F8960();
  v63 = v2;
  v64 = v3;
  v62 = v1;
  v37 = v4;
  sub_1D42B7104();
  v5 = sub_1D42B28FC(&qword_1EFE4FD28);
  v35 = *(_QWORD *)(v5 - 8);
  v36 = v5;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v6);
  sub_1D42BE768();
  v34 = v7;
  memcpy(v52, (const void *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl), sizeof(v52));
  sub_1D42B5C58((uint64_t)v52);
  v8 = MGGetProductType();
  sub_1D4380880(v8, v47);
  sub_1D42F1208((uint64_t)v47, (uint64_t)v49, &qword_1EFE506B0);
  if (v50)
  {
    v9 = v49[0];
    sub_1D42F11A4(v47);
    sub_1D4380388(v9);
    v10 = (void (*)(_QWORD *__return_ptr, uint64_t))v48[2];
    sub_1D42F1208((uint64_t)v48, (uint64_t)v51, &qword_1EFE4A7A0);
    v11 = sub_1D42F1244((uint64_t)v51);
    v10(v38, v11);
    swift_release();
    v12 = v38[0];
    v13 = v38[1];
    v14 = v38[2];
    v15 = v38[3];
    v16 = v38[4];
    v17 = v38[5];
    v18 = v39;
    v19 = v40;
    v20 = v41;
    v21 = v42;
    v22 = v43;
    v23 = v44;
    v24 = v45;
    v25 = v46;
  }
  else
  {
    if (qword_1EFE48EF0 != -1)
      swift_once();
    v13 = *(_QWORD *)algn_1EFEA7998;
    v15 = qword_1EFEA79A8;
    v32 = qword_1EFEA79A0;
    v33 = qword_1EFEA7990;
    v17 = qword_1EFEA79B8;
    v31 = qword_1EFEA79B0;
    v29 = byte_1EFEA79C1;
    v30 = byte_1EFEA79C0;
    v20 = byte_1EFEA79C2;
    v21 = byte_1EFEA79C3;
    v22 = byte_1EFEA79C4;
    v23 = byte_1EFEA79C5;
    v24 = qword_1EFEA79C8;
    v25 = byte_1EFEA79D0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D43F8AC8();
    v19 = v29;
    v18 = v30;
    v16 = v31;
    v14 = v32;
    v12 = v33;
  }
  v53[0] = v12;
  v53[1] = v13;
  v53[2] = v14;
  v53[3] = v15;
  v53[4] = v16;
  v53[5] = v17;
  v54 = v18;
  v55 = v19;
  v56 = v20;
  v57 = v21;
  v58 = v22;
  v59 = v23;
  v60 = v24;
  v61 = v25;
  v26 = v62;
  sub_1D43567CC((__n128 *)v52, (uint64_t)v53, v37);
  v28 = v27;
  sub_1D4347994();
  swift_bridgeObjectRelease();
  sub_1D42CB8F4();
  sub_1D43F656C((uint64_t)v52);
  if (!v26)
  {
    v38[0] = v28;
    swift_retain();
    sub_1D42B28FC(&qword_1EFE4FDA8);
    sub_1D42B28FC(&qword_1EFE4C690);
    sub_1D43F7BEC(&qword_1EFE4FDB0, &qword_1EFE4FDA8);
    sub_1D451A308();
    swift_release();
    sub_1D43F7BEC(&qword_1EFE4FDB8, &qword_1EFE4FD28);
    sub_1D451A2E4();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
  }
  sub_1D42BE844();
}

uint64_t sub_1D43F45CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  _BYTE *v3;

  sub_1D435C4AC();
  result = swift_allocError();
  *a1 = result;
  *v3 = 2;
  return result;
}

uint64_t sub_1D43F4610(uint64_t a1)
{
  uint64_t result;
  __int128 v2;
  __int128 v3;
  uint64_t v4;

  v2 = *(_OWORD *)(a1 + 16);
  v3 = *(_OWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 48);
  sub_1D43F4720();
  sub_1D42B28FC((uint64_t *)&unk_1EFE403A0);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1D4526260;
  *(_QWORD *)(result + 32) = 1;
  if ((uint64_t)v3 < *((uint64_t *)&v2 + 1))
  {
    __break(1u);
    goto LABEL_7;
  }
  if (__OFSUB__((_QWORD)v3, *((_QWORD *)&v2 + 1)))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  *(_QWORD *)(result + 40) = v3 - *((_QWORD *)&v2 + 1);
  if (v4 < *((uint64_t *)&v3 + 1))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (!__OFSUB__(v4, *((_QWORD *)&v3 + 1)))
  {
    *(_QWORD *)(result + 48) = v4 - *((_QWORD *)&v3 + 1);
    sub_1D42B28FC(&qword_1EFE4C9D0);
    sub_1D43F7BEC(qword_1EFE4A680, &qword_1EFE4C9D0);
    return sub_1D451A038();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1D43F4720()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;

  v1 = v0[2];
  v2 = v0[3];
  v3 = v2 * v1;
  if ((unsigned __int128)(v2 * (__int128)v1) >> 64 != (v2 * v1) >> 63)
  {
    __break(1u);
    goto LABEL_14;
  }
  v4 = v0[5];
  v5 = v3 + v4;
  if (__OFADD__(v3, v4))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v6 = v0[4];
  v7 = v6 - 1;
  if (__OFSUB__(v6, 1))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v8 = v7 * v1;
  if ((unsigned __int128)(v7 * (__int128)v1) >> 64 != (v7 * v1) >> 63)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v9 = v0[6];
  v10 = __OFADD__(v8, v9);
  v11 = v8 + v9;
  if (v10)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v11 < (uint64_t)v5)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if ((v5 & 0x8000000000000000) != 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v12 = *v0;
  v13 = *(_QWORD *)(*v0 + 16);
  if (v13 >= v5 && (uint64_t)v13 >= v11)
  {
    sub_1D42BE0D0((uint64_t)v0);
    return v12;
  }
LABEL_20:
  __break(1u);
  return result;
}

void sub_1D43F47F4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  double v5;
  char v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  sub_1D42F1EA4();
  if (v6)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v5 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v4 < 0)
  {
LABEL_11:
    __break(1u);
    return;
  }
  v7 = v3;
  sub_1D451B0A0();
  *(_QWORD *)v7 = sub_1D451B064();
  *(_DWORD *)(v7 + 8) = v8;
  *(_DWORD *)(v7 + 12) = v9;
  *(_QWORD *)(v7 + 16) = v10;
  type metadata accessor for SNSoundClassifier();
  sub_1D451B0A0();
  sub_1D43F4950();
  if (!v1)
  {
    *(_QWORD *)a1 = v11;
    *(_QWORD *)(a1 + 8) = v12;
    *(_OWORD *)(a1 + 16) = v13;
    *(_QWORD *)(a1 + 32) = v14;
    *(_QWORD *)(a1 + 40) = v15;
    *(_QWORD *)(a1 + 48) = v16;
    *(_OWORD *)(a1 + 56) = v17;
  }
}

void sub_1D43F4950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;

  sub_1D43F8960();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  sub_1D43F7750(objc_msgSend(v12, sel_modelDescription));
  if (v13)
  {
    v14 = (void *)sub_1D451A6C8();
    swift_bridgeObjectRelease();
    v15 = objc_msgSend(v9, sel_featureValueForName_, v14);

    if (v15
      && (v16 = objc_msgSend(v15, sel_dictionaryValue),
          v15,
          sub_1D42EA3E0(v17, (unint64_t *)&qword_1EFE404B0),
          v18 = sub_1D451A5CC(),
          v16,
          v19 = sub_1D43F59F4(v18),
          sub_1D4347994(),
          v19))
    {
      sub_1D438C74C();
      v20 = sub_1D43F6EB8(v19, v7);
      sub_1D42CB338();
      v21 = *(_QWORD *)(v5 + 40);
      *(_QWORD *)v11 = *(_QWORD *)v5;
      *(_QWORD *)(v11 + 8) = *(_QWORD *)(v5 + 8);
      *(_OWORD *)(v11 + 16) = *(_OWORD *)(v5 + 16);
      *(_QWORD *)(v11 + 32) = *(_QWORD *)(v5 + 32);
      *(_QWORD *)(v11 + 40) = v21;
      *(_QWORD *)(v11 + 48) = v20;
      *(_QWORD *)(v11 + 56) = v3;
      *(_QWORD *)(v11 + 64) = v1;
      sub_1D42CB7B8();
    }
    else
    {
      sub_1D42B7F2C();
      sub_1D42B6D0C();
      *v23 = 0;
      sub_1D4312028();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1D42B7F2C();
    sub_1D42B6D0C();
    *v22 = 0;
    sub_1D4312028();
  }
  sub_1D42BE844();
}

void sub_1D43F4AF8(double **a1@<X8>)
{
  uint64_t v1;
  void *v3;
  double *v4;
  double *v5;

  v3 = (void *)MEMORY[0x1D825DB34]();
  v4 = sub_1D43F3A88();
  if (v1)
  {
    objc_autoreleasePoolPop(v3);
  }
  else
  {
    v5 = v4;
    objc_autoreleasePoolPop(v3);
    a1[3] = (double *)sub_1D42B7104();
    *a1 = v5;
  }
}

id _SNClassifySoundRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1D42B7104();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D43F4CBC()
{
  sub_1D43F8904();
  sub_1D451B964();
  sub_1D42CB230();
  sub_1D42BE978();
}

void sub_1D43F4CF0()
{
  sub_1D43F42DC();
}

double *sub_1D43F4D04()
{
  return sub_1D43F3A88();
}

uint64_t sub_1D43F4D18(void *a1, CMTimeValue a2, unint64_t a3, CMTimeEpoch a4, void *a5, double a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  int v22;
  id v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  CMTimeEpoch v35;
  id v36;
  CMTime v37;
  CMTime time;

  v8 = v6;
  *(_QWORD *)(v8 + 16) = 0;
  type metadata accessor for _SNClassifySoundRequest();
  v15 = objc_msgSend(a1, sel_modelDescription);
  sub_1D43F2B4C(v15);

  if (v7)
  {
    swift_unknownObjectRelease();

    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)(v8 + 56) = a5;
    *(_QWORD *)(v8 + 64) = a1;
    *(double *)(v8 + 24) = a6;
    *(_QWORD *)(v8 + 32) = a2;
    *(_QWORD *)(v8 + 40) = a3;
    *(_QWORD *)(v8 + 48) = a4;
    sub_1D4394184();
    v35 = a4;
    swift_unknownObjectRetain();
    v36 = a5;
    v16 = sub_1D43F8A3C();
    sub_1D44C9714(v16);
    v18 = v17;

    *(_QWORD *)(v8 + 80) = 0;
    *(_QWORD *)(v8 + 88) = v18;
    v19 = sub_1D43F8A3C();
    v20 = sub_1D44C962C(v19, 16000);

    v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedInt_, v20);
    sub_1D42DC694(v21);
    LODWORD(v19) = v22;

    time.value = a2;
    *(_QWORD *)&time.timescale = a3;
    time.epoch = v35;
    CMTimeConvertScale(&v37, &time, (int32_t)v19, kCMTimeRoundingMethod_RoundTowardZero);
    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithLongLong_, v37.value);
    sub_1D44BD638(v23);
    LODWORD(v19) = v24;

    v25 = swift_unknownObjectRelease();
    sub_1D42F1F1C(v25, v26, v27, v28, v29, v30, v31, v32, v34, HIDWORD(a3), v35, v36);
    *(_DWORD *)(v8 + 72) = (_DWORD)v19;
  }
  return v8;
}

id sub_1D43F4F04(double a1, uint64_t a2, int a3)
{
  void *v3;
  void *v4;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  int v54;
  int v55;
  _BYTE *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 *v62;
  uint64_t v63;
  double v64;
  char v65;
  int v66;
  id v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  __int128 *v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  void *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  __int128 *v80;
  uint64_t v81;
  char v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  id v93;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  void *v107;
  void *v108;
  void *v109;
  id v110[8];

  v110[7] = *(id *)MEMORY[0x1E0C80C00];
  v7 = objc_opt_self();
  v110[0] = 0;
  v8 = sub_1D45001AC(v7, (uint64_t)v110);
  if (v8)
  {
    v9 = v110[0];
    v10 = (void *)sub_1D43F8864();
    v11 = sub_1D42F1F54();
    sub_1D44F5D78(v11, v12);

    sub_1D451A6C8();
    v13 = sub_1D43F889C();
    v17 = sub_1D44FD014(v13, v14, v15, v16);

    v18 = v110[0];
    if (!v17)
    {
      v50 = v110[0];
      sub_1D43F8A10();

      sub_1D42F1DA8();
      goto LABEL_31;
    }
    v19 = v110[0];
    sub_1D451A6C8();
    v20 = sub_1D43F889C();
    v24 = sub_1D44FEE98(v20, v21, v22, v23);

    if (!v24)
    {
      v51 = v110[0];
      sub_1D43F88C8();
      sub_1D43F897C();
      sub_1D42F1DA8();

      goto LABEL_31;
    }
    v25 = v110[0];
    sub_1D43F8864();
    v26 = sub_1D43F889C();
    v30 = sub_1D44FF500(v26, v27, v28, v29);
    sub_1D43F8A5C();
    v31 = v110[0];
    if (v4)
    {
      v108 = v24;
      v110[6] = &unk_1EFEAADC8;
      v32 = (void *)swift_dynamicCastObjCProtocolUnconditional();
      v110[0] = 0;
      v33 = v31;
      if (sub_1D44FF7D0(v7, v4, v32, (uint64_t)v110))
      {
        v107 = v4;
        v34 = v110[0];
        v35 = (void *)sub_1D451A6C8();
        v110[0] = 0;
        v36 = sub_1D44FD534(v7, v8, v35, 1, (uint64_t)v110);
        sub_1D43F8A5C();
        v37 = v110[0];
        v106 = v4;
        sub_1D4394184();
        v38 = sub_1D43F8A08((uint64_t)v37, sel_modelDescription);
        HIDWORD(v105) = sub_1D44C962C(v38, 16000);

        v40 = objc_msgSend(sub_1D43F8A08(v39, sel_modelDescription), sel_inputDescriptionsByName);
        sub_1D43F8A5C();
        sub_1D42EA3E0(v41, (unint64_t *)&qword_1EFE40360);
        v42 = sub_1D451A5CC();

        v43 = (void *)sub_1D4396600(v42);
        sub_1D42D3258();
        if (v43
          && (v44 = objc_msgSend(v43, sel_multiArrayConstraint),
              v43,
              v44))
        {
          v46 = sub_1D43F8A08(v45, sel_shape);

          sub_1D42EA3E0(v47, (unint64_t *)&qword_1EFE404B0);
          v48 = sub_1D451A92C();

        }
        else
        {
          v48 = MEMORY[0x1E0DEE9D8];
        }
        sub_1D42F2108();
        sub_1D44BC438(v48);
        v55 = v54;
        sub_1D4347994();
        if (a1 < 0.0 || a1 >= 1.0)
        {
          sub_1D43F7968();
          sub_1D42B6D0C();
          *v57 = 0;
          sub_1D4312028();

          return v8;
        }
        sub_1D450053C(HIDWORD(v105), 1, v55, (uint64_t)v110);
        v58 = sub_1D43F8818();
        if (!sub_1D42F1E90(v58, v59, v17, v108, v60, v61, v62, v63))
        {
          v92 = v109;
          sub_1D4519AA4();

          sub_1D42F1DA8();
          goto LABEL_30;
        }
        sub_1D42F1EA4();
        if (v65)
        {
          __break(1u);
        }
        else if (v64 > -1.0)
        {
          if (v64 < 4294967300.0)
          {
            v66 = v64;
            v67 = v109;
            LODWORD(v105) = v66;
            sub_1D4500620(HIDWORD(v105), v66, a3, v55, (uint64_t)v110);
            v68 = sub_1D43F8818();
            if (sub_1D42F1E90(v68, v69, v108, v107, v70, v71, v72, v73))
            {
              v74 = v109;
              sub_1D450053C(HIDWORD(v105), v66, 1, (uint64_t)v110);
              v75 = sub_1D43F8818();
              v76 = v106;
              v82 = sub_1D42F1E90(v75, v77, v107, v106, v78, v79, v80, v81);
              v83 = v109;
              if ((v82 & 1) != 0)
              {
                sub_1D44F3DE8((uint64_t)v8);
                sub_1D44F44A0((uint64_t)v8);

                sub_1D42F1F1C(v84, v85, v86, v87, v88, v89, v90, v91, v104, v105, (uint64_t)v106, v107);
                return v8;
              }
              v95 = v83;
              sub_1D4519AA4();

              sub_1D42F1DA8();
              sub_1D42F1F1C(v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, (uint64_t)v106, v107);

LABEL_31:
              return v8;
            }
            v93 = v109;
            sub_1D43F88C8();
            sub_1D43F897C();
            sub_1D42F1DA8();

LABEL_30:
            goto LABEL_31;
          }
LABEL_36:
          __break(1u);
        }
        __break(1u);
        goto LABEL_36;
      }
      v53 = v110[0];
      v24 = v4;
      sub_1D43F88C8();
      sub_1D43F897C();
      sub_1D42F1DA8();

    }
    else
    {
      v52 = v110[0];
      sub_1D43F88C8();
      sub_1D43F897C();
      sub_1D42F1DA8();

    }
    goto LABEL_31;
  }
  v49 = v110[0];
  sub_1D43F8A10();

  sub_1D42F1DA8();
  return v8;
}

uint64_t sub_1D43F5500(void *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  objc_class *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(void);
  _QWORD v28[2];
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  id v37[11];

  v37[9] = *(id *)MEMORY[0x1E0C80C00];
  v5 = *(_QWORD *)(v3 + 80);
  v6 = v5 < 1;
  v7 = v5 - 1;
  if (v6)
  {
    v10 = objc_opt_self();
    v37[0] = 0;
    v11 = sub_1D4500090(v10, a1, (uint64_t)v37);
    v12 = v37[0];
    if (v11)
    {
      v27 = a3;
      sub_1D451A6EC();
      v13 = v12;
      sub_1D43F4950();
      v14 = v4;
      if (!v4)
      {
        sub_1D42B7204();
        v16 = (objc_class *)type metadata accessor for _SNClassificationResult();
        v17 = objc_allocWithZone(v16);
        v18 = sub_1D4331458((uint64_t)v37);
        v37[3] = v16;
        v37[0] = v18;
        v19 = objc_allocWithZone((Class)SNClassificationResult);
        sub_1D43F6E1C(v37);
        v21 = v20;
        sub_1D43F587C(v20, a1, *(_DWORD *)(v3 + 72));
        objc_msgSend(v21, sel_timeRange);
        v27();
        v24 = sub_1D451AEE4();
        ((void (*)(uint64_t))v27)(v24);
        sub_1D43F8A78();
        sub_1D451AEF0();
        v28[0] = v32;
        v28[1] = v33;
        v29 = v34;
        v30 = v35;
        v31 = v36;
        objc_msgSend(v21, sel_setTimeRange_, v28);
        sub_1D42B28FC(&qword_1EFE40410);
        v25 = sub_1D42B6F40();
        *(_OWORD *)(v25 + 16) = xmmword_1D4525300;
        *(_QWORD *)(v25 + 32) = v21;
        v28[0] = v25;
        sub_1D451A950();
        v26 = v28[0];
        sub_1D42E3CCC();
        goto LABEL_10;
      }
      sub_1D42B7204();
      sub_1D42E3CCC();
    }
    else
    {
      v15 = v37[0];
      v14 = (void *)sub_1D4519AA4();

      swift_willThrow();
    }

  }
  else
  {
    *(_QWORD *)(v3 + 80) = v7;
  }
  v26 = MEMORY[0x1E0DEE9D8];
LABEL_10:
  sub_1D42D71EC();
  if (v26 >> 62)
  {
    sub_1D42B28FC(&qword_1EFE4C690);
    v22 = sub_1D451B568();
    sub_1D42CB5C8();
  }
  else
  {
    sub_1D451B868();
    v22 = v26;
  }
  sub_1D42CB5C8();
  return v22;
}

void sub_1D43F587C(void *a1, void *a2, unsigned int a3)
{
  uint64_t v3;
  double v7;
  char v8;
  uint64_t v9;
  id v10;
  int32_t v11;
  int32_t v12;
  CMTimeValue value;
  CMTimeEpoch epoch;
  uint64_t v15;
  id v16;
  int v17;
  CMTimeValue v18;
  CMTimeEpoch v19;
  uint64_t v20;
  CMTime v21;
  CMTimeValue v22;
  uint64_t v23;
  CMTimeEpoch v24;
  _QWORD v25[8];

  sub_1D44C87E0(a2, 0, (uint64_t)v25);
  if (!v3)
  {
    sub_1D42F1EA4();
    if (v8)
    {
      __break(1u);
    }
    else if (v7 > -9.22337204e18)
    {
      if (v7 < 9.22337204e18)
      {
        v9 = (uint64_t)v7;
        v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedInt_, sub_1D44F2078((uint64_t)a2));
        sub_1D42DC694(v10);
        v12 = v11;

        CMTimeMake(&v21, v9, v12);
        value = v21.value;
        epoch = v21.epoch;
        v15 = *(_QWORD *)&v21.timescale;
        v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedInt_, sub_1D44F2078((uint64_t)a2));
        sub_1D42DC694(v16);
        LODWORD(v9) = v17;

        CMTimeMake(&v21, a3, v9);
        v18 = v21.value;
        v19 = v21.epoch;
        v20 = *(_QWORD *)&v21.timescale;
        v21.value = value;
        *(_QWORD *)&v21.timescale = v15;
        v21.epoch = epoch;
        v22 = v18;
        v23 = v20;
        v24 = v19;
        objc_msgSend(a1, sel_setTimeRange_, &v21);
        return;
      }
LABEL_9:
      __break(1u);
      return;
    }
    __break(1u);
    goto LABEL_9;
  }
}

unint64_t sub_1D43F59F4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  unint64_t result;
  uint64_t v7;
  unint64_t v8;
  int64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _OWORD v31[2];
  __int128 v32;
  _OWORD v33[2];
  __int128 v34;
  _QWORD v35[6];

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1D42B28FC(&qword_1EFE4BF10);
    v2 = (_QWORD *)sub_1D451B5C8();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  sub_1D43F6E80(a1, v35);
  v3 = v35[0];
  v4 = v35[3];
  v5 = v35[4];
  v25 = (unint64_t)(v35[2] + 64) >> 6;
  v26 = v35[1];
  result = swift_bridgeObjectRetain();
  if (!v5)
    goto LABEL_6;
LABEL_5:
  v7 = (v5 - 1) & v5;
  v8 = __clz(__rbit64(v5)) | (v4 << 6);
  for (i = v4; ; v8 = __clz(__rbit64(v11)) + (i << 6))
  {
    sub_1D42D6F5C(*(_QWORD *)(v3 + 48) + 40 * v8, (uint64_t)v33);
    v13 = *(void **)(*(_QWORD *)(v3 + 56) + 8 * v8);
    *((_QWORD *)&v34 + 1) = v13;
    v31[0] = v33[0];
    v31[1] = v33[1];
    v32 = v34;
    sub_1D42D6F5C((uint64_t)v31, (uint64_t)&v29);
    v14 = v13;
    if (!swift_dynamicCast())
    {
      sub_1D42D7018((uint64_t)v31, (uint64_t *)&unk_1EFE505C0);
LABEL_32:
      swift_bridgeObjectRelease();
      sub_1D4367684();
      swift_release();
      return 0;
    }
    v15 = *((id *)&v32 + 1);
    sub_1D42D7018((uint64_t)v31, (uint64_t *)&unk_1EFE505C0);
    v29 = 0;
    v30 = 1;
    v16 = v15;
    MEMORY[0x1D825C508]();

    if ((v30 & 1) != 0)
      goto LABEL_32;
    v17 = v29;
    result = sub_1D4366B34(v27, v28);
    v18 = result;
    if ((v19 & 1) != 0)
    {
      v20 = (uint64_t *)(v2[6] + 16 * result);
      result = swift_bridgeObjectRelease();
      *v20 = v27;
      v20[1] = v28;
      *(_QWORD *)(v2[7] + 8 * v18) = v17;
      goto LABEL_29;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v21 = (uint64_t *)(v2[6] + 16 * result);
    *v21 = v27;
    v21[1] = v28;
    *(_QWORD *)(v2[7] + 8 * result) = v17;
    v22 = v2[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_36;
    v2[2] = v24;
LABEL_29:
    v4 = i;
    v5 = v7;
    if (v7)
      goto LABEL_5;
LABEL_6:
    v10 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_37;
    if (v10 >= v25)
      goto LABEL_33;
    v11 = *(_QWORD *)(v26 + 8 * v10);
    i = v4 + 1;
    if (!v11)
    {
      i = v4 + 2;
      if (v4 + 2 >= v25)
        goto LABEL_33;
      v11 = *(_QWORD *)(v26 + 8 * i);
      if (!v11)
      {
        i = v4 + 3;
        if (v4 + 3 >= v25)
          goto LABEL_33;
        v11 = *(_QWORD *)(v26 + 8 * i);
        if (!v11)
        {
          i = v4 + 4;
          if (v4 + 4 >= v25)
            goto LABEL_33;
          v11 = *(_QWORD *)(v26 + 8 * i);
          if (!v11)
          {
            i = v4 + 5;
            if (v4 + 5 >= v25)
              goto LABEL_33;
            v11 = *(_QWORD *)(v26 + 8 * i);
            if (!v11)
            {
              v12 = v4 + 6;
              while (v12 < v25)
              {
                v11 = *(_QWORD *)(v26 + 8 * v12++);
                if (v11)
                {
                  i = v12 - 1;
                  goto LABEL_21;
                }
              }
LABEL_33:
              sub_1D4367684();
              return (unint64_t)v2;
            }
          }
        }
      }
    }
LABEL_21:
    v7 = (v11 - 1) & v11;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

void sub_1D43F5D4C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32[40];
  _OWORD v33[2];
  __int128 v34;
  _OWORD v35[2];
  __int128 v36;
  _QWORD v37[6];

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1D42B28FC(&qword_1EFE4BF18);
    v2 = (_QWORD *)sub_1D451B5C8();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  sub_1D43F6E80(a1, v37);
  v3 = v37[0];
  v4 = v37[3];
  v5 = v37[4];
  v28 = (unint64_t)(v37[2] + 64) >> 6;
  v29 = v37[1];
  sub_1D42D71EC();
  v6 = MEMORY[0x1E0DEC198];
  if (!v5)
    goto LABEL_6;
LABEL_5:
  v7 = (v5 - 1) & v5;
  v8 = __clz(__rbit64(v5)) | (v4 << 6);
  for (i = v4; ; v8 = __clz(__rbit64(v11)) + (i << 6))
  {
    sub_1D42D6F5C(*(_QWORD *)(v3 + 48) + 40 * v8, (uint64_t)v35);
    v13 = *(void **)(*(_QWORD *)(v3 + 56) + 8 * v8);
    *((_QWORD *)&v36 + 1) = v13;
    v33[0] = v35[0];
    v33[1] = v35[1];
    v34 = v36;
    sub_1D42D6F5C((uint64_t)v33, (uint64_t)v32);
    v14 = v13;
    if (!swift_dynamicCast())
    {
      sub_1D42D7018((uint64_t)v33, (uint64_t *)&unk_1EFE505C0);
      swift_bridgeObjectRelease();
      sub_1D43F8AAC();
      sub_1D4367684();
      swift_release();
      return;
    }
    v15 = *((id *)&v34 + 1);
    sub_1D42D7018((uint64_t)v33, (uint64_t *)&unk_1EFE505C0);
    v16 = sub_1D43F8A78();
    v18 = sub_1D4366B34(v16, v17);
    v19 = v18;
    if ((v20 & 1) != 0)
    {
      v21 = v6;
      v22 = (_QWORD *)(v2[6] + 16 * v18);
      swift_bridgeObjectRelease();
      *v22 = v30;
      v22[1] = v31;
      v23 = v2[7];

      *(_QWORD *)(v23 + 8 * v19) = v15;
      v6 = v21;
      goto LABEL_28;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v18;
    v24 = (_QWORD *)(v2[6] + 16 * v18);
    *v24 = v30;
    v24[1] = v31;
    *(_QWORD *)(v2[7] + 8 * v18) = v15;
    v25 = v2[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
      goto LABEL_33;
    v2[2] = v27;
LABEL_28:
    v4 = i;
    v5 = v7;
    if (v7)
      goto LABEL_5;
LABEL_6:
    v10 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_34;
    if (v10 >= v28)
      goto LABEL_31;
    v11 = *(_QWORD *)(v29 + 8 * v10);
    i = v4 + 1;
    if (!v11)
    {
      i = v4 + 2;
      if (v4 + 2 >= v28)
        goto LABEL_31;
      v11 = *(_QWORD *)(v29 + 8 * i);
      if (!v11)
      {
        i = v4 + 3;
        if (v4 + 3 >= v28)
          goto LABEL_31;
        v11 = *(_QWORD *)(v29 + 8 * i);
        if (!v11)
        {
          i = v4 + 4;
          if (v4 + 4 >= v28)
            goto LABEL_31;
          v11 = *(_QWORD *)(v29 + 8 * i);
          if (!v11)
          {
            i = v4 + 5;
            if (v4 + 5 >= v28)
              goto LABEL_31;
            v11 = *(_QWORD *)(v29 + 8 * i);
            if (!v11)
            {
              v12 = v4 + 6;
              while (v12 < v28)
              {
                v11 = *(_QWORD *)(v29 + 8 * v12++);
                if (v11)
                {
                  i = v12 - 1;
                  goto LABEL_21;
                }
              }
LABEL_31:
              sub_1D43F8AAC();
              sub_1D4367684();
              return;
            }
          }
        }
      }
    }
LABEL_21:
    v7 = (v11 - 1) & v11;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

id sub_1D43F6060()
{
  uint64_t v0;
  void *v1;
  _BYTE *v3;

  v1 = *(void **)(v0 + 16);
  if (v1)
    return v1;
  sub_1D43F7968();
  sub_1D42B6D0C();
  *v3 = 1;
  return (id)sub_1D4312028();
}

void sub_1D43F60B4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *v0;
  v3 = sub_1D42B6F40();
  *(_QWORD *)(v3 + 16) = v0;
  *(_QWORD *)(v3 + 24) = v2;
  swift_retain();
  v4 = sub_1D42CEEA4();
  swift_release();
  if (!v1)
  {
    v5 = (void *)v0[2];
    v0[2] = v4;

  }
}

id sub_1D43F6134@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id result;

  result = sub_1D43F4F04(*(double *)(a1 + 24), *(_QWORD *)(a1 + 64), *(_DWORD *)(a1 + 72));
  if (!v2)
    *a2 = result;
  return result;
}

void sub_1D43F616C()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;

  v1 = sub_1D43F6060();
  if (!v0)
  {
    v2 = v1;
    v3 = (void *)sub_1D43F8864();
    sub_1D44F590C(v2, v3);

  }
  sub_1D4377BF8();
}

void sub_1D43F61C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  uint64_t v16;
  int v17;
  id v18;
  _QWORD *v19;
  void *v20;
  id v21;
  id v22[2];

  v22[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = *(unsigned int *)(v0 + 72);
  v3 = *(double *)(v0 + 24) * (double)v2;
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v4 = v2 - (uint64_t)v3;
  if (__OFSUB__(v2, (uint64_t)v3))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v5 = ceil((double)v2 / (double)v4);
  if ((~*(_QWORD *)&v5 & 0x7FF0000000000000) == 0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v5 >= 9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v6 = *(_QWORD *)(v0 + 80);
  if (__OFADD__(v6, (uint64_t)v5))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  *(_QWORD *)(v0 + 80) = v6 + (uint64_t)v5;
  if (!v4)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v7 = v2 % v4;
  v8 = __OFSUB__(v4, v7);
  v9 = v4 - v7;
  if (v8)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v4 == -1 && v9 == 0x8000000000000000)
LABEL_32:
    __break(1u);
  v11 = v9 % v4;
  v12 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  sub_1D43F616C();
  if (!v1)
  {
    v14 = v13;
    sub_1D44F23F4(v13, 1);

    v15 = sub_1D43F6060();
    v16 = objc_opt_self();
    v22[0] = 0;
    v17 = sub_1D45007AC(v16, v15, v12, (uint64_t)v22);

    if (v17)
    {
      v18 = v22[0];
      sub_1D43F616C();
      v20 = v19;
      sub_1D44F23F4(v19, 0);

    }
    else
    {
      v21 = v22[0];
      sub_1D4519AA4();

      swift_willThrow();
    }
  }
}

uint64_t sub_1D43F63C4()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D43F63F8()
{
  sub_1D43F63C4();
  return swift_deallocClassInstance();
}

uint64_t sub_1D43F6418(void *a1, uint64_t a2, void (*a3)(void))
{
  return sub_1D43F5500(a1, a2, a3);
}

void sub_1D43F642C()
{
  sub_1D43F61C4();
}

void sub_1D43F6440()
{
  sub_1D43F616C();
}

void sub_1D43F6454()
{
  sub_1D43F60B4();
}

id sub_1D43F6468()
{
  return sub_1D43F6060();
}

double *sub_1D43F647C()
{
  void *v0;
  double *v1;

  v0 = (void *)sub_1D43EF79C();
  v1 = sub_1D43F3A88();

  return v1;
}

uint64_t sub_1D43F64CC()
{
  void *v0;
  id v1;
  uint64_t v3;

  v1 = objc_msgSend(v0, sel_impl);
  sub_1D43F8A28();
  swift_unknownObjectRelease();
  sub_1D42B28FC((uint64_t *)&unk_1EFE40310);
  sub_1D43F8A1C();
  return v3;
}

uint64_t sub_1D43F6538()
{
  return sub_1D43F64CC();
}

double *sub_1D43F6558()
{
  return sub_1D43F647C();
}

uint64_t sub_1D43F656C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 80);
  v6 = *(_QWORD *)(a1 + 88);
  v7 = *(_QWORD *)(a1 + 96);
  v8 = *(_BYTE *)(a1 + 104);
  sub_1D42B5C3C(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
  sub_1D42B5C4C(v2, v3, v4, v5, v6, v7, v8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for _SNClassifySoundRequest()
{
  return objc_opt_self();
}

uint64_t method lookup function for _SNClassifySoundRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for SNSoundClassifier()
{
  return objc_opt_self();
}

uint64_t sub_1D43F6644(uint64_t a1)
{
  sub_1D42B5C3C(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
  sub_1D42B5C4C(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_BYTE *)(a1 + 104));
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43F6688(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1D42B5CE4(*(void **)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 72);
  v11 = *(_QWORD *)(a2 + 80);
  v12 = *(_QWORD *)(a2 + 88);
  v13 = *(_QWORD *)(a2 + 96);
  v14 = *(_BYTE *)(a2 + 104);
  sub_1D42B5CF4(v8, v9, v10, v11, v12, v13, v14);
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  *(_QWORD *)(a1 + 80) = v11;
  *(_QWORD *)(a1 + 88) = v12;
  *(_QWORD *)(a1 + 96) = v13;
  *(_BYTE *)(a1 + 104) = v14;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D43F6748(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  char v6;
  void *v7;
  void *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1D42B5CE4(*(void **)a2, v5, v6);
  v7 = *(void **)a1;
  v8 = *(void **)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_1D42B5C3C(v7, v8, v9);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = *(_QWORD *)(a2 + 80);
  v14 = *(_QWORD *)(a2 + 88);
  v15 = *(_QWORD *)(a2 + 96);
  v16 = *(_BYTE *)(a2 + 104);
  sub_1D42B5CF4(v10, v11, v12, v13, v14, v15, v16);
  v17 = *(_QWORD *)(a1 + 56);
  v18 = *(_QWORD *)(a1 + 64);
  v19 = *(_QWORD *)(a1 + 72);
  v20 = *(_QWORD *)(a1 + 80);
  v21 = *(_QWORD *)(a1 + 88);
  v22 = *(_QWORD *)(a1 + 96);
  v23 = *(_BYTE *)(a1 + 104);
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v12;
  *(_QWORD *)(a1 + 80) = v13;
  *(_QWORD *)(a1 + 88) = v14;
  *(_QWORD *)(a1 + 96) = v15;
  *(_BYTE *)(a1 + 104) = v16;
  sub_1D42B5C4C(v17, v18, v19, v20, v21, v22, v23);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D43F684C(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;
  void *v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(void **)a1;
  v6 = *(void **)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_1D42B5C3C(v5, v6, v7);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v8 = *(_BYTE *)(a2 + 104);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_QWORD *)(a1 + 96);
  v15 = *(_BYTE *)(a1 + 104);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = v8;
  sub_1D42B5C4C(v9, v10, v11, v12, v13, v14, v15);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D43F68F4(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 120))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 112);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D43F6934(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 112) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SoundClassification.AudioSourceAgnosticRequest()
{
  sub_1D42CB35C();
}

uint64_t sub_1D43F699C()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43F69C4(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D43F6A10(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D43F6AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D43F6B18(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D43F6B58(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SoundClassification.Result()
{
  sub_1D42CB35C();
}

void type metadata accessor for SoundClassification()
{
  sub_1D42CB35C();
}

void sub_1D43F6BC4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  sub_1D42B6E24();
}

_QWORD *sub_1D43F6BF4(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

_QWORD *sub_1D43F6C48(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for S3Path(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for S3Path(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SoundClassification.Classification()
{
  sub_1D42CB35C();
}

unint64_t sub_1D43F6D14()
{
  unint64_t result;

  result = qword_1EFE505A0;
  if (!qword_1EFE505A0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4538AF4, &unk_1E979A190);
    atomic_store(result, (unint64_t *)&qword_1EFE505A0);
  }
  return result;
}

unint64_t sub_1D43F6D50(uint64_t a1)
{
  unint64_t result;

  result = sub_1D43A9BC4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1D43F6D74(uint64_t a1)
{
  unint64_t result;

  result = sub_1D43AA910();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1D43F6D9C()
{
  unint64_t result;

  result = qword_1EFE505A8;
  if (!qword_1EFE505A8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4538C0C, &unk_1E979A470);
    atomic_store(result, (unint64_t *)&qword_1EFE505A8);
  }
  return result;
}

unint64_t sub_1D43F6DDC()
{
  unint64_t result;

  result = qword_1EFE505B0;
  if (!qword_1EFE505B0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4538CFC, &unk_1E979A2A0);
    atomic_store(result, (unint64_t *)&qword_1EFE505B0);
  }
  return result;
}

void sub_1D43F6E1C(_QWORD *a1)
{
  void *v1;

  sub_1D42B5528(a1, a1[3]);
  objc_msgSend(v1, sel_initWithImpl_, sub_1D451B814());
  swift_unknownObjectRelease();
  sub_1D42B5400((uint64_t)a1);
  sub_1D42CB15C();
}

uint64_t sub_1D43F6E80@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = -1;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  *a2 = a1;
  v6 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v5 = v6;
  if (-v3 < 64)
    v2 = ~(-1 << -(char)v3);
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

uint64_t sub_1D43F6EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t isStackAllocationSafe;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD v13[2];

  v4 = a1;
  v13[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v9 = (_QWORD *)((char *)v13 - ((8 * v7 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1D4491EBC(0, v7, v9);
    swift_bridgeObjectRetain();
    v10 = sub_1D43F7074((uint64_t)v9, v7, v4, a2);
    if (v2)
      swift_willThrow();
    else
      v4 = v10;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = (_QWORD *)swift_slowAlloc();
    sub_1D4491EBC(0, v7, v11);
    swift_bridgeObjectRetain();
    v4 = sub_1D43F7074((uint64_t)v11, v7, v4, a2);
    MEMORY[0x1D825E524](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1D43F7074(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v23;
  unint64_t *v25;
  uint64_t v26;

  v25 = (unint64_t *)result;
  v26 = 0;
  v6 = 0;
  v7 = a3 + 64;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v6 << 6);
      goto LABEL_20;
    }
    v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11)
      goto LABEL_24;
    v15 = *(_QWORD *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      v6 = v14 + 1;
      if (v14 + 1 >= v11)
        goto LABEL_24;
      v15 = *(_QWORD *)(v7 + 8 * v6);
      if (!v15)
      {
        v6 = v14 + 2;
        if (v14 + 2 >= v11)
          goto LABEL_24;
        v15 = *(_QWORD *)(v7 + 8 * v6);
        if (!v15)
          break;
      }
    }
LABEL_19:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_20:
    v17 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    swift_bridgeObjectRetain();
    sub_1D43EF500(v18, v19, a4);
    v21 = v20;
    result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
    {
      *(unint64_t *)((char *)v25 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v26++, 1))
      {
        __break(1u);
LABEL_24:
        v23 = sub_1D43F74AC(v25, a2, v26, a3);
        swift_bridgeObjectRelease();
        return v23;
      }
    }
  }
  v16 = v14 + 3;
  if (v16 >= v11)
    goto LABEL_24;
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v11)
      goto LABEL_24;
    v15 = *(_QWORD *)(v7 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
  return result;
}

void sub_1D43F723C(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t *v34;
  uint64_t v35;

  if (!a3)
    goto LABEL_36;
  v5 = a3;
  if (a4[2] == a3)
  {
    swift_retain();
LABEL_36:
    sub_1D43F88E8();
    return;
  }
  sub_1D42B28FC(&qword_1EFE50608);
  v8 = sub_1D451B5C8();
  v9 = v8;
  v34 = a1;
  v35 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = v8 + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_25;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= v35)
      goto LABEL_36;
    v16 = v34[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v35)
        goto LABEL_36;
      v16 = v34[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v35)
          goto LABEL_36;
        v16 = v34[v11];
        if (!v16)
          break;
      }
    }
LABEL_24:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_25:
    v18 = (uint64_t *)(a4[6] + 16 * v14);
    v20 = *v18;
    v19 = v18[1];
    v21 = *(void **)(a4[7] + 8 * v14);
    sub_1D451B958();
    sub_1D438C74C();
    v22 = v21;
    sub_1D451A74C();
    v23 = sub_1D43F8A98();
    v24 = -1 << *(_BYTE *)(v9 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) == 0)
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v29 || (v28 & 1) == 0)
      {
        v30 = v26 == v29;
        if (v26 == v29)
          v26 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v26);
        if (v31 != -1)
        {
          v27 = __clz(__rbit64(~v31)) + (v26 << 6);
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v27 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(_QWORD *)(v12 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    v32 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v27);
    *v32 = v20;
    v32[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v27) = v22;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      goto LABEL_38;
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= v35)
    goto LABEL_36;
  v16 = v34[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_24;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v35)
      goto LABEL_36;
    v16 = v34[v11];
    ++v17;
    if (v16)
      goto LABEL_24;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_1D43F74AC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v31;

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_1D42B28FC(&qword_1EFE4BF10);
  result = sub_1D451B5C8();
  v8 = result;
  v31 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v31)
        return v8;
      v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        v10 = v14 + 1;
        if (v14 + 1 >= v31)
          return v8;
        v15 = a1[v10];
        if (!v15)
        {
          v10 = v14 + 2;
          if (v14 + 2 >= v31)
            return v8;
          v15 = a1[v10];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v31)
              return v8;
            v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                v10 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_41;
                if (v10 >= v31)
                  return v8;
                v15 = a1[v10];
                ++v16;
                if (v15)
                  goto LABEL_24;
              }
            }
            v10 = v16;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v13);
    sub_1D451B958();
    swift_bridgeObjectRetain();
    sub_1D451A74C();
    result = sub_1D451B994();
    v21 = -1 << *(_BYTE *)(v8 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v11 + 8 * (v22 >> 6))) == 0)
      break;
    v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v11 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(_QWORD *)(v11 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    v29 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v24);
    *v29 = v19;
    v29[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v24) = v20;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      goto LABEL_39;
    if (!v5)
      return v8;
  }
  v25 = 0;
  v26 = (unint64_t)(63 - v21) >> 6;
  while (++v23 != v26 || (v25 & 1) == 0)
  {
    v27 = v23 == v26;
    if (v23 == v26)
      v23 = 0;
    v25 |= v27;
    v28 = *(_QWORD *)(v11 + 8 * v23);
    if (v28 != -1)
    {
      v24 = __clz(__rbit64(~v28)) + (v23 << 6);
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1D43F7750(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_predictedProbabilitiesName);

  if (!v2)
    return 0;
  v3 = sub_1D451A6EC();

  return v3;
}

uint64_t sub_1D43F77BC()
{
  uint64_t v0;

  sub_1D42B5C3C(*(void **)(v0 + 16), *(id *)(v0 + 24), *(_BYTE *)(v0 + 32));
  sub_1D42B5C4C(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_BYTE *)(v0 + 120));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1D43F7818()
{
  uint64_t v0;

  sub_1D43F286C((const void *)(v0 + 16));
}

uint64_t sub_1D43F7830()
{
  uint64_t v0;

  sub_1D42B5400(v0 + 16);
  sub_1D42B5C3C(*(void **)(v0 + 56), *(id *)(v0 + 64), *(_BYTE *)(v0 + 72));
  sub_1D42B5C4C(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_BYTE *)(v0 + 160));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D43F7894@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1D43F2998((_QWORD *)(v1 + 16), v1 + 56, a1);
}

uint64_t sub_1D43F78B0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D43F78DC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D43F7900@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1D43EF800();
  if (!v1)
    *a1 = result;
  return result;
}

unint64_t sub_1D43F792C()
{
  unint64_t result;

  result = qword_1EFE50600;
  if (!qword_1EFE50600)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45388CC, &type metadata for AnalyzerUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE50600);
  }
  return result;
}

unint64_t sub_1D43F7968()
{
  unint64_t result;

  result = qword_1EFE50628;
  if (!qword_1EFE50628)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45392B0, &unk_1E97A24D8);
    atomic_store(result, (unint64_t *)&qword_1EFE50628);
  }
  return result;
}

uint64_t sub_1D43F79A4()
{
  swift_release();
  return swift_deallocObject();
}

id sub_1D43F79C8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1D43F6134(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1D43F79E0()
{
  unint64_t result;

  result = qword_1EFE50638;
  if (!qword_1EFE50638)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4539260, &type metadata for SoundClassification.AudioSourceAgnosticRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50638);
  }
  return result;
}

unint64_t sub_1D43F7A1C()
{
  unint64_t result;

  result = qword_1EFE50640;
  if (!qword_1EFE50640)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45253E0, &type metadata for ClassifierVariant);
    atomic_store(result, (unint64_t *)&qword_1EFE50640);
  }
  return result;
}

unint64_t sub_1D43F7A58()
{
  unint64_t result;

  result = qword_1EFE50660;
  if (!qword_1EFE50660)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45253B8, &type metadata for ClassifierVariant);
    atomic_store(result, (unint64_t *)&qword_1EFE50660);
  }
  return result;
}

void sub_1D43F7A94(_QWORD *a1)
{
  if (!*a1)
  {
    sub_1D42B8B10((uint64_t *)&unk_1EFE51A80);
    sub_1D43F8A34();
  }
  sub_1D42CB758();
}

unint64_t sub_1D43F7AE4()
{
  unint64_t result;

  result = qword_1EFE50678;
  if (!qword_1EFE50678)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4539210, &type metadata for SoundClassification.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50678);
  }
  return result;
}

void sub_1D43F7B20(_QWORD *a1)
{
  if (!*a1)
  {
    sub_1D42B8B10(&qword_1EFE4BE50);
    sub_1D43F8A34();
  }
  sub_1D42CB758();
}

unint64_t sub_1D43F7B74()
{
  unint64_t result;

  result = qword_1EFE50698;
  if (!qword_1EFE50698)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45391C0, &type metadata for SoundClassification.Classification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50698);
  }
  return result;
}

unint64_t sub_1D43F7BB0()
{
  unint64_t result;

  result = qword_1EFE506A8;
  if (!qword_1EFE506A8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4545238, &_s9ExceptionVN);
    atomic_store(result, (unint64_t *)&qword_1EFE506A8);
  }
  return result;
}

void sub_1D43F7BEC(_QWORD *a1, uint64_t *a2)
{
  if (!*a1)
  {
    sub_1D42B8B10(a2);
    sub_1D43F8A34();
  }
  sub_1D42B6E24();
}

ValueMetadata *type metadata accessor for SoundClassification.Classification.CodingKeys()
{
  return &type metadata for SoundClassification.Classification.CodingKeys;
}

ValueMetadata *type metadata accessor for SoundClassification.Result.CodingKeys()
{
  return &type metadata for SoundClassification.Result.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SoundClassification.AudioSourceAgnosticRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D43F7C98 + 4 * byte_1D453897A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D43F7CCC + 4 * byte_1D4538975[v4]))();
}

uint64_t sub_1D43F7CCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43F7CD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D43F7CDCLL);
  return result;
}

uint64_t sub_1D43F7CE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D43F7CF0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D43F7CF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43F7CFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SoundClassification.AudioSourceAgnosticRequest.CodingKeys()
{
  return &type metadata for SoundClassification.AudioSourceAgnosticRequest.CodingKeys;
}

void type metadata accessor for SNSoundClassifier.DomainError()
{
  sub_1D42CB35C();
}

uint64_t _s13SoundAnalysis19SoundClassificationV6ResultV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D43F7D70 + 4 * byte_1D4538984[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D43F7DA4 + 4 * byte_1D453897F[v4]))();
}

uint64_t sub_1D43F7DA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43F7DAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D43F7DB4);
  return result;
}

uint64_t sub_1D43F7DC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D43F7DC8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D43F7DCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43F7DD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for _SNClassifySoundRequest.DomainError()
{
  sub_1D42CB35C();
}

void type metadata accessor for SoundClassification.Session()
{
  sub_1D42CB35C();
}

uint64_t sub_1D43F7DF8(uint64_t a1)
{
  sub_1D42B5C3C(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
  sub_1D42B5C4C(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_BYTE *)(a1 + 104));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43F7E54(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1D42B5CE4(*(void **)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 72);
  v11 = *(_QWORD *)(a2 + 80);
  v12 = *(_QWORD *)(a2 + 88);
  v13 = *(_QWORD *)(a2 + 96);
  v14 = *(_BYTE *)(a2 + 104);
  sub_1D42B5CF4(v8, v9, v10, v11, v12, v13, v14);
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  *(_QWORD *)(a1 + 80) = v11;
  *(_QWORD *)(a1 + 88) = v12;
  *(_QWORD *)(a1 + 96) = v13;
  *(_BYTE *)(a1 + 104) = v14;
  v15 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v15;
  v16 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v16;
  v17 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v17;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  *(_WORD *)(a1 + 172) = *(_WORD *)(a2 + 172);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D43F7F64(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  char v6;
  void *v7;
  void *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;

  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1D42B5CE4(*(void **)a2, v5, v6);
  v7 = *(void **)a1;
  v8 = *(void **)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_1D42B5C3C(v7, v8, v9);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = *(_QWORD *)(a2 + 80);
  v14 = *(_QWORD *)(a2 + 88);
  v15 = *(_QWORD *)(a2 + 96);
  v16 = *(_BYTE *)(a2 + 104);
  sub_1D42B5CF4(v10, v11, v12, v13, v14, v15, v16);
  v17 = *(_QWORD *)(a1 + 56);
  v18 = *(_QWORD *)(a1 + 64);
  v19 = *(_QWORD *)(a1 + 72);
  v20 = *(_QWORD *)(a1 + 80);
  v21 = *(_QWORD *)(a1 + 88);
  v22 = *(_QWORD *)(a1 + 96);
  v23 = *(_BYTE *)(a1 + 104);
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v12;
  *(_QWORD *)(a1 + 80) = v13;
  *(_QWORD *)(a1 + 88) = v14;
  *(_QWORD *)(a1 + 96) = v15;
  *(_BYTE *)(a1 + 104) = v16;
  sub_1D42B5C4C(v17, v18, v19, v20, v21, v22, v23);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_BYTE *)(a1 + 169) = *(_BYTE *)(a2 + 169);
  *(_BYTE *)(a1 + 170) = *(_BYTE *)(a2 + 170);
  *(_BYTE *)(a1 + 171) = *(_BYTE *)(a2 + 171);
  *(_BYTE *)(a1 + 172) = *(_BYTE *)(a2 + 172);
  *(_BYTE *)(a1 + 173) = *(_BYTE *)(a2 + 173);
  v24 = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = v24;
  return a1;
}

void *sub_1D43F8108(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB9uLL);
}

uint64_t sub_1D43F8110(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;
  void *v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(void **)a1;
  v6 = *(void **)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_1D42B5C3C(v5, v6, v7);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v8 = *(_BYTE *)(a2 + 104);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_QWORD *)(a1 + 96);
  v15 = *(_BYTE *)(a1 + 104);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = v8;
  sub_1D42B5C4C(v9, v10, v11, v12, v13, v14, v15);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v16;
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v17;
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v18;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_BYTE *)(a1 + 169) = *(_BYTE *)(a2 + 169);
  *(_BYTE *)(a1 + 170) = *(_BYTE *)(a2 + 170);
  *(_BYTE *)(a1 + 171) = *(_BYTE *)(a2 + 171);
  *(_BYTE *)(a1 + 172) = *(_BYTE *)(a2 + 172);
  *(_BYTE *)(a1 + 173) = *(_BYTE *)(a2 + 173);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  return a1;
}

uint64_t sub_1D43F8228(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 185))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 112);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D43F8268(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 184) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 185) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 112) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 185) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SoundClassification.Request()
{
  sub_1D42CB35C();
}

unint64_t sub_1D43F82E8()
{
  unint64_t result;

  result = qword_1EFE506B8;
  if (!qword_1EFE506B8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4538E00, &unk_1E979A588);
    atomic_store(result, (unint64_t *)&qword_1EFE506B8);
  }
  return result;
}

unint64_t sub_1D43F8328()
{
  unint64_t result;

  result = qword_1EFE506C0;
  if (!qword_1EFE506C0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4538EB8, &unk_1E9797848);
    atomic_store(result, (unint64_t *)&qword_1EFE506C0);
  }
  return result;
}

unint64_t sub_1D43F8368()
{
  unint64_t result;

  result = qword_1EFE506C8;
  if (!qword_1EFE506C8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4538F20, &unk_1E97A24D8);
    atomic_store(result, (unint64_t *)&qword_1EFE506C8);
  }
  return result;
}

unint64_t sub_1D43F83A8()
{
  unint64_t result;

  result = qword_1EFE506D0;
  if (!qword_1EFE506D0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4538FD8, &type metadata for SoundClassification.AudioSourceAgnosticRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE506D0);
  }
  return result;
}

unint64_t sub_1D43F83E8()
{
  unint64_t result;

  result = qword_1EFE506D8;
  if (!qword_1EFE506D8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4539090, &type metadata for SoundClassification.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE506D8);
  }
  return result;
}

unint64_t sub_1D43F8428()
{
  unint64_t result;

  result = qword_1EFE506E0;
  if (!qword_1EFE506E0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4539148, &type metadata for SoundClassification.Classification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE506E0);
  }
  return result;
}

unint64_t sub_1D43F8468()
{
  unint64_t result;

  result = qword_1EFE506E8;
  if (!qword_1EFE506E8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45390B8, &type metadata for SoundClassification.Classification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE506E8);
  }
  return result;
}

unint64_t sub_1D43F84A8()
{
  unint64_t result;

  result = qword_1EFE506F0;
  if (!qword_1EFE506F0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45390E0, &type metadata for SoundClassification.Classification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE506F0);
  }
  return result;
}

unint64_t sub_1D43F84E8()
{
  unint64_t result;

  result = qword_1EFE506F8;
  if (!qword_1EFE506F8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4539000, &type metadata for SoundClassification.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE506F8);
  }
  return result;
}

unint64_t sub_1D43F8528()
{
  unint64_t result;

  result = qword_1EFE50700;
  if (!qword_1EFE50700)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4539028, &type metadata for SoundClassification.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50700);
  }
  return result;
}

unint64_t sub_1D43F8568()
{
  unint64_t result;

  result = qword_1EFE50708;
  if (!qword_1EFE50708)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4538F48, &type metadata for SoundClassification.AudioSourceAgnosticRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50708);
  }
  return result;
}

unint64_t sub_1D43F85A8()
{
  unint64_t result;

  result = qword_1EFE50710;
  if (!qword_1EFE50710)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4538F70, &type metadata for SoundClassification.AudioSourceAgnosticRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50710);
  }
  return result;
}

unint64_t sub_1D43F85E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFE50718;
  if (!qword_1EFE50718)
  {
    v1 = sub_1D42B8B10(&qword_1EFE4FDA8);
    v2[0] = &off_1E979A3B0;
    v2[1] = &off_1E979A3C0;
    result = MEMORY[0x1D825E41C](&unk_1D45293A0, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFE50718);
  }
  return result;
}

unint64_t sub_1D43F8648()
{
  unint64_t result;

  result = qword_1EFE50728;
  if (!qword_1EFE50728)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45393F8, &type metadata for SoundClassification.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50728);
  }
  return result;
}

uint64_t _s13SoundAnalysis19SoundClassificationV14ClassificationV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D43F86D0 + 4 * byte_1D453898E[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D43F8704 + 4 * byte_1D4538989[v4]))();
}

uint64_t sub_1D43F8704(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43F870C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D43F8714);
  return result;
}

uint64_t sub_1D43F8720(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D43F8728);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D43F872C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43F8734(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SoundClassification.Request.CodingKeys()
{
  return &type metadata for SoundClassification.Request.CodingKeys;
}

unint64_t sub_1D43F8754()
{
  unint64_t result;

  result = qword_1EFE50738;
  if (!qword_1EFE50738)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45393D0, &type metadata for SoundClassification.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50738);
  }
  return result;
}

unint64_t sub_1D43F8794()
{
  unint64_t result;

  result = qword_1EFE50740;
  if (!qword_1EFE50740)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4539340, &type metadata for SoundClassification.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50740);
  }
  return result;
}

unint64_t sub_1D43F87D4()
{
  unint64_t result;

  result = qword_1EFE50748;
  if (!qword_1EFE50748)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4539368, &type metadata for SoundClassification.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50748);
  }
  return result;
}

uint64_t sub_1D43F8818()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D43F8850()
{
  return sub_1D451B688();
}

uint64_t sub_1D43F8864()
{
  return sub_1D451A6C8();
}

id sub_1D43F8880@<X0>(uint64_t a1@<X1>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  return sub_1D43EC59C(0xD000000000000017, a1, 4, 0, a2, (a3 - 32) | 0x8000000000000000);
}

uint64_t sub_1D43F889C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D43F88B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_1D43F88C8()
{
  return sub_1D4519AA4();
}

uint64_t sub_1D43F88D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 184) + 8))(v2, v1);
}

uint64_t sub_1D43F8904()
{
  return sub_1D451B958();
}

uint64_t sub_1D43F890C()
{
  return sub_1D451B760();
}

uint64_t sub_1D43F8938()
{
  return swift_deallocPartialClassInstance();
}

unint64_t sub_1D43F8944()
{
  return 0xD000000000000017;
}

uint64_t sub_1D43F8974()
{
  return sub_1D451A74C();
}

void sub_1D43F897C()
{
  void *v0;

}

__n128 sub_1D43F8984()
{
  uint64_t v0;

  return *(__n128 *)v0;
}

void sub_1D43F89B8()
{
  char v0;
  void *v1;
  void *v2;

  sub_1D42B5C3C(v2, v1, v0);
}

uint64_t sub_1D43F89C8()
{
  char v0;
  void *v1;
  void *v2;

  sub_1D42B5C3C(v2, v1, v0);
  return swift_unknownObjectRelease();
}

void sub_1D43F89E8(void *a1)
{
  void *v1;
  uint64_t v2;

  sub_1D42B5C3C(a1, v1, *(_DWORD *)(v2 - 72));
}

uint64_t sub_1D43F89F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return sub_1D42B5C4C(a1, a2, a3, a4, v6, v5, *(_DWORD *)(v4 + 140));
}

id sub_1D43F8A08(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_1D43F8A10()
{
  return sub_1D4519AA4();
}

uint64_t sub_1D43F8A1C()
{
  return swift_dynamicCast();
}

uint64_t sub_1D43F8A28()
{
  return sub_1D451B208();
}

void sub_1D43F8A34()
{
  JUMPOUT(0x1D825E41CLL);
}

id sub_1D43F8A3C()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 2782));
}

uint64_t sub_1D43F8A48()
{
  uint64_t v0;

  return v0 - 208;
}

void sub_1D43F8A5C()
{
  void *v0;

}

uint64_t sub_1D43F8A64()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D43F8A78()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D43F8A84()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D43F8A98()
{
  return sub_1D451B994();
}

void sub_1D43F8AA0()
{
  uint64_t v0;

  sub_1D42B5C3C(*(void **)(v0 + 144), *(id *)(v0 + 152), *(_DWORD *)(v0 + 136));
}

uint64_t sub_1D43F8AAC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D43F8AC0()
{
  uint64_t v0;

  return sub_1D42B5400(*(_QWORD *)(v0 + 192));
}

uint64_t sub_1D43F8AC8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D43F8AD0(uint64_t a1, unint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  void *v8;
  os_log_type_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  a3(&v16);
  if (!v3)
    return v16;
  if (qword_1EFE40338 != -1)
    swift_once();
  v7 = sub_1D451A014();
  sub_1D42CC880(v7, (uint64_t)qword_1EFEA7700);
  sub_1D42DCE84();
  sub_1D4311FD8();
  sub_1D42DCE84();
  sub_1D4311FD8();
  v8 = (void *)sub_1D4519FFC();
  v9 = sub_1D451AF5C();
  if (sub_1D432AE3C(v9))
  {
    sub_1D43FAC38();
    v15 = sub_1D43FAC08();
    *(_DWORD *)v4 = 136315394;
    sub_1D42DCE84();
    sub_1D43D72EC(a1, a2, &v15);
    sub_1D451B1A8();
    sub_1D43AFBE8();
    *(_WORD *)(v4 + 12) = 2080;
    sub_1D4311FD8();
    sub_1D42B28FC(&qword_1EFE49BB0);
    v10 = sub_1D451A728();
    sub_1D43D72EC(v10, v11, &v15);
    sub_1D451B1A8();
    swift_bridgeObjectRelease();
    sub_1D4311F78();
    sub_1D4311F78();
    sub_1D43FABEC(&dword_1D42A7000, v12, v13, "%serror logging: %s");
    swift_arrayDestroy();
    sub_1D42CC934();
  }
  sub_1D439E0A0();
  sub_1D4311F78();
  sub_1D4311F78();

  return sub_1D42B7124();
}

uint64_t sub_1D43F8CA4(uint64_t a1, unint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v8;
  void *v9;
  os_log_type_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = a3();
  if (v3)
  {
    if (qword_1EFE40338 != -1)
      swift_once();
    v8 = sub_1D451A014();
    sub_1D42CC880(v8, (uint64_t)qword_1EFEA7700);
    sub_1D42DCE84();
    sub_1D4311FD8();
    sub_1D42DCE84();
    sub_1D4311FD8();
    v9 = (void *)sub_1D4519FFC();
    v10 = sub_1D451AF5C();
    if (sub_1D432AE3C(v10))
    {
      sub_1D43FAC38();
      v15 = sub_1D43FAC08();
      *(_DWORD *)v4 = 136315394;
      sub_1D42DCE84();
      sub_1D43D72EC(a1, a2, &v15);
      sub_1D451B1A8();
      sub_1D43AFBE8();
      *(_WORD *)(v4 + 12) = 2080;
      sub_1D4311FD8();
      sub_1D42B28FC(&qword_1EFE49BB0);
      v11 = sub_1D451A728();
      sub_1D43D72EC(v11, v12, &v15);
      sub_1D451B1A8();
      swift_bridgeObjectRelease();
      sub_1D4311F78();
      sub_1D4311F78();
      sub_1D43FABEC(&dword_1D42A7000, v13, v14, "%serror logging: %s");
      swift_arrayDestroy();
      sub_1D42CC934();
    }
    sub_1D439E0A0();
    sub_1D4311F78();
    sub_1D4311F78();

    return sub_1D42B7124();
  }
  return result;
}

void sub_1D43F8E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t AssociatedTypeWitness;
  uint64_t v34;
  uint64_t v35;
  char *v36;

  sub_1D42BE910();
  a19 = v21;
  a20 = v22;
  a10 = v20;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v34 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v36 = (char *)&a9 - v35;
  (*(void (**)(uint64_t, uint64_t))(v26 + 16))(v28, v26);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 32))(v32, v30, AssociatedTypeWitness, v24);
  sub_1D42F1FA0((uint64_t)v36, *(uint64_t (**)(uint64_t, uint64_t))(v34 + 8));
  sub_1D42BE844();
}

void sub_1D43F8F3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D43FAC44();
  sub_1D4335864();
  sub_1D43358A4();
  sub_1D43358E4();
  sub_1D43FAC18();
  sub_1D431E728(v0, v1, v2);
}

void sub_1D43F8F8C()
{
  uint64_t v0;

  MEMORY[0x1D825E41C](&unk_1D452B800, v0);
  sub_1D43FAC2C();
}

void sub_1D43F8FD0()
{
  sub_1D43F8F3C();
}

void sub_1D43F8FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D825E41C](&unk_1D452B918, a3);
  _s14descr1E97B8181C21ServerEnvironmentImplVMa();
}

void sub_1D43F9034(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = MEMORY[0x1D825E41C](&unk_1D45395E4, a1);
  sub_1D43F8E6C(v3, v2, v1, v4, v6, v5, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20);
}

void sub_1D43F9078(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  _QWORD __src[6];
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;

  if (qword_1EFE48EE8 != -1)
    swift_once();
  v4 = *(_QWORD *)algn_1EFEA7948;
  v5 = unk_1EFEA7958;
  v6 = unk_1EFEA7968;
  sub_1D43FABD0();
  v8 = *(_QWORD *)(v7 + 56);
  LOBYTE(v7) = *(_BYTE *)(v7 + 64);
  __src[0] = v9;
  __src[1] = v4;
  __src[2] = v10;
  __src[3] = v5;
  __src[4] = v11;
  __src[5] = v6;
  v19 = v12;
  v20 = v13;
  v21 = v14;
  v22 = v15;
  v23 = v16;
  v24 = v17;
  v25 = v8;
  v26 = v7;
  v27 = a1;
  v28 = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D42DCE84();
  swift_bridgeObjectRetain();
  sub_1D434BB1C(__src);
}

void sub_1D43F9190(uint64_t a1, uint64_t a2)
{
  sub_1D43F9078(a1, a2);
}

void sub_1D43F91A4(uint64_t a1, uint64_t a2)
{
  sub_1D435712C(a1, a2);
}

void sub_1D43F91DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D43FAC44();
  sub_1D43D41A8();
  sub_1D43D41E4();
  sub_1D43D4220();
  sub_1D43FAC18();
  sub_1D431E728(v0, v1, v2);
}

void sub_1D43F9224()
{
  uint64_t v0;

  MEMORY[0x1D825E41C](&unk_1D45457F4, v0);
  sub_1D43FAC2C();
}

uint64_t sub_1D43F9260(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6576697463616E69 && a2 == 0xE800000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657669746361 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D43F9344(char a1)
{
  if ((a1 & 1) != 0)
    return 0x657669746361;
  else
    return 0x6576697463616E69;
}

uint64_t sub_1D43F9378()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  sub_1D42BE910();
  v19 = v1;
  v3 = v2;
  v4 = sub_1D42B28FC(&qword_1EFE50760);
  v17 = *(_QWORD *)(v4 - 8);
  v18 = v4;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42CB210();
  v8 = v7 - v6;
  v16 = sub_1D42B28FC(&qword_1EFE50768);
  v9 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  sub_1D437EC98();
  v10 = sub_1D42B28FC(&qword_1EFE50770);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1D42CB210();
  v14 = v13 - v12;
  sub_1D42B5528(v3, v3[3]);
  sub_1D43FA7DC();
  sub_1D451BA24();
  if ((v19 & 1) != 0)
  {
    sub_1D43FAC58();
    sub_1D437EC40();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v8, v18);
  }
  else
  {
    sub_1D43FA854();
    sub_1D437EC40();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0, v16);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v14, v10);
}

void sub_1D43F94FC()
{
  sub_1D451B958();
  sub_1D451B964();
  sub_1D451B994();
  sub_1D42BE978();
}

uint64_t sub_1D43F9538()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_1D42BE910();
  v3 = v2;
  v4 = sub_1D42B28FC(&qword_1EFE50790);
  v28 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42BE768();
  v27 = v6;
  v26 = sub_1D42B28FC(&qword_1EFE50798);
  v7 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  sub_1D42CB18C();
  v8 = sub_1D42B28FC(&qword_1EFE507A0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1D42CB210();
  v12 = v11 - v10;
  sub_1D42B5528(v3, v3[3]);
  sub_1D43FA7DC();
  sub_1D451BA0C();
  if (v0)
    return sub_1D42B5400((uint64_t)v3);
  v25 = v9;
  v13 = sub_1D451B6D0();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14
    || (v15 = *(unsigned __int8 *)(v13 + 32),
        sub_1D43B7948(1, v14, v13, v13 + 32, 0, (2 * v14) | 1),
        v17 = v16,
        v19 = v18,
        swift_bridgeObjectRelease(),
        v17 != v19 >> 1))
  {
    v21 = sub_1D451B460();
    sub_1D42B6D0C();
    v23 = v22;
    sub_1D42B28FC(&qword_1EFE49ED0);
    *v23 = &unk_1E9799B48;
    sub_1D451B61C();
    sub_1D451B454();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x1E0DEC450], v21);
    sub_1D42B7124();
    sub_1D4371170();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v12, v8);
    return sub_1D42B5400((uint64_t)v3);
  }
  if ((v15 & 1) != 0)
  {
    sub_1D43FAC58();
    sub_1D43FABB8();
    v20 = v25;
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
  }
  else
  {
    sub_1D43FA854();
    sub_1D43FABB8();
    v20 = v25;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v26);
  }
  sub_1D4371170();
  (*(void (**)(uint64_t, unint64_t))(v20 + 8))(v12, v19);
  sub_1D42B5400((uint64_t)v3);
  return v15;
}

void sub_1D43F983C()
{
  sub_1D43F91DC();
}

void sub_1D43F9850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D825E41C](&unk_1D4545650, a3);
  type metadata accessor for AudioStreamAnalyzerEnvironmentImpl();
}

void sub_1D43F98A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = MEMORY[0x1D825E41C](&unk_1D453958C, a1);
  sub_1D43F8E6C(v3, v2, v1, v4, v6, v5, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20);
}

void sub_1D43F98E4()
{
  sub_1D43F94FC();
}

uint64_t sub_1D43F9900()
{
  sub_1D43FA818();
  return sub_1D451BA3C();
}

uint64_t sub_1D43F9928()
{
  sub_1D43FA818();
  return sub_1D451BA48();
}

uint64_t sub_1D43F9950()
{
  char *v0;

  return sub_1D43F9344(*v0);
}

uint64_t sub_1D43F9958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D43F9260(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D43F997C()
{
  sub_1D43FA7DC();
  return sub_1D451BA3C();
}

uint64_t sub_1D43F99A4()
{
  sub_1D43FA7DC();
  return sub_1D451BA48();
}

uint64_t sub_1D43F99CC()
{
  sub_1D43FA854();
  return sub_1D451BA3C();
}

uint64_t sub_1D43F99F4()
{
  sub_1D43FA854();
  return sub_1D451BA48();
}

uint64_t sub_1D43F9A1C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1D43F9538();
  if (!v1)
    *a1 = result & 1;
  return result;
}

uint64_t sub_1D43F9A48()
{
  return sub_1D43F9378();
}

void sub_1D43F9A60()
{
  uint64_t v0;
  uint64_t (**v1)@<X0>(uint64_t *@<X8>);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  sub_1D42BE910();
  v70 = v2;
  v4 = v3;
  v6 = v5;
  v67 = v7;
  v68 = v8;
  v65 = v9;
  v60 = sub_1D42B28FC(&qword_1EFE4CB40);
  v57 = *(_QWORD *)(v60 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v10);
  sub_1D42BE768();
  v54 = v11;
  v59 = sub_1D42B28FC(&qword_1EFE4CB48);
  v56 = *(_QWORD *)(v59 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v12);
  sub_1D42BE768();
  v53 = v13;
  v58 = sub_1D42B28FC(&qword_1EFE4CB50);
  v55 = *(_QWORD *)(v58 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v14);
  sub_1D42BE768();
  v52 = v15;
  v16 = sub_1D42B28FC(&qword_1EFE4CB58);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  sub_1D42CB210();
  v20 = v19 - v18;
  v21 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v63 = *(_QWORD *)(v21 - 8);
  v64 = v21;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v22);
  sub_1D437EC98();
  v23 = sub_1D451A0B0();
  v61 = *(_QWORD *)(v23 - 8);
  v62 = v23;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v24);
  sub_1D42CB210();
  v27 = v26 - v25;
  v28 = sub_1D42B28FC(&qword_1EFE4C9C0);
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  sub_1D42BE768();
  v66 = v30;
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 32);
  v32 = v68;
  v68 = v6;
  v69 = v4;
  v31(v67, v32, v70, v4);
  if (!v0)
  {
    v51 = v29;
    v67 = v28;
    v48 = v20;
    v49 = v17;
    v47 = v16;
    v50 = 0;
    sub_1D431EBEC();
    swift_release();
    v34 = v61;
    v33 = v62;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v61 + 104))(v27, *MEMORY[0x1E0C958B0], v62);
    *v1 = sub_1D43F9F38;
    v1[1] = 0;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), _QWORD, uint64_t))(v63 + 104))(v1, *MEMORY[0x1E0C958F0], v64);
    sub_1D42B28FC((uint64_t *)&unk_1EFE4C9F0);
    sub_1D42BE210((unint64_t *)&unk_1EFE4F850, (uint64_t *)&unk_1EFE4C9F0, MEMORY[0x1E0C95D90]);
    v35 = v66;
    sub_1D451A380();
    sub_1D42F1FA0((uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t))(v63 + 8));
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v27, v33);
    v36 = swift_release();
    MEMORY[0x1E0C80A78](v36);
    v37 = v69;
    *(&v46 - 6) = v70;
    *(&v46 - 5) = v37;
    v38 = v68;
    *(&v46 - 4) = v65;
    *(&v46 - 3) = v38;
    *(&v46 - 2) = v35;
    v39 = v50;
    sub_1D43F8AD0(0xD000000000000021, 0x80000001D4553690, (void (*)(uint64_t *__return_ptr))sub_1D43FA740);
    if (v39)
    {
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v35, v67);
    }
    else
    {
      sub_1D42B28FC(&qword_1EFE4CB60);
      sub_1D42B28FC(&qword_1EFE4CB68);
      sub_1D42BE210(&qword_1EFE4CB70, &qword_1EFE4CB60, MEMORY[0x1E0C95D90]);
      v40 = v35;
      v41 = v54;
      sub_1D451A3A4();
      sub_1D42B28FC((uint64_t *)&unk_1EFE4A660);
      v42 = v53;
      sub_1D451A110();
      sub_1D42F1FA0(v41, *(uint64_t (**)(uint64_t, uint64_t))(v57 + 8));
      v43 = v52;
      sub_1D451A110();
      sub_1D42F1FA0(v42, *(uint64_t (**)(uint64_t, uint64_t))(v56 + 8));
      v44 = v48;
      sub_1D451A110();
      sub_1D42F1FA0(v43, *(uint64_t (**)(uint64_t, uint64_t))(v55 + 8));
      sub_1D42BE210(&qword_1EFE4CB78, &qword_1EFE4CB58, MEMORY[0x1E0C95B48]);
      v45 = v47;
      sub_1D451A2E4();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v44, v45);
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v40, v67);
    }
  }
  sub_1D42BE844();
}

uint64_t sub_1D43F9F38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  _BYTE *v3;

  sub_1D43FA7A0();
  result = swift_allocError();
  *a1 = result;
  *v3 = 1;
  return result;
}

uint64_t sub_1D43F9F7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v19[0] = a5;
  v19[1] = a2;
  v21 = a1;
  v7 = sub_1D42B28FC(&qword_1EFE4CB80);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a4 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v20 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v14 = (char *)v19 - v13;
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(a3, v11);
  sub_1D42B28FC(&qword_1EFE4C9C0);
  sub_1D42BE210(&qword_1EFE4CA00, &qword_1EFE4C9C0, MEMORY[0x1E0C95AB8]);
  sub_1D451A308();
  sub_1D42BE210((unint64_t *)&unk_1EFE4CB88, &qword_1EFE4CB80, MEMORY[0x1E0C95950]);
  sub_1D451A2E4();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  v15 = v22;
  sub_1D4495CF8();
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v14, AssociatedTypeWitness);
    return swift_release();
  }
  else
  {
    v18 = v16;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v14, AssociatedTypeWitness);
    result = swift_release();
    *(_QWORD *)v19[0] = v18;
  }
  return result;
}

uint64_t sub_1D43FA1C8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  a2[3] = sub_1D42B28FC((uint64_t *)&unk_1EFE4A660);
  *a2 = v3;
  return sub_1D43FAC00();
}

void sub_1D43FA1FC(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  if (a1)
    sub_1D44AD12C(a1, (a2 - a1) / 4);
  else
    v4 = MEMORY[0x1E0DEE9D8];
  *a3 = v4;
}

uint64_t sub_1D43FA244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v4;
  __int128 v5[2];
  uint64_t v6;
  _BYTE v7[32];

  sub_1D42B294C(a1, (uint64_t)v7);
  sub_1D42B28FC(&qword_1EFE4CB68);
  if ((swift_dynamicCast() & 1) != 0)
    return sub_1D42E33E0(v5, a2);
  v6 = 0;
  memset(v5, 0, sizeof(v5));
  sub_1D43FA760((uint64_t)v5);
  sub_1D43FA7A0();
  sub_1D42B6D0C();
  *v4 = 0;
  return swift_willThrow();
}

_QWORD *sub_1D43FA2F0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *(*v5)(uint64_t *__return_ptr, void (*)(uint64_t@<X0>, uint64_t@<X1>, _QWORD *@<X8>), _QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;

  v3 = a1[3];
  v4 = a1[4];
  sub_1D42B5528(a1, v3);
  v5 = *(_QWORD *(**)(uint64_t *__return_ptr, void (*)(uint64_t@<X0>, uint64_t@<X1>, _QWORD *@<X8>), _QWORD, uint64_t, uint64_t, uint64_t))(v4 + 8);
  v6 = sub_1D42B28FC((uint64_t *)&unk_1EFE4A660);
  result = v5(&v8, sub_1D43FA1FC, 0, v6, v3, v4);
  *a2 = v8;
  return result;
}

uint64_t sub_1D43FA370@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  if (*(_QWORD *)(*(_QWORD *)result + 16))
    *a2 = *(float *)(*(_QWORD *)result + 32) > 0.5;
  else
    __break(1u);
  return result;
}

void sub_1D43FA398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D42BE910();
  v3 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE4CB28) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v2);
  sub_1D42CB18C();
  sub_1D43F9A60();
  if (!v0)
  {
    sub_1D42B28FC(&qword_1EFE4CB10);
    sub_1D42BE210(&qword_1EFE4CB18, &qword_1EFE4CB10, MEMORY[0x1E0C95D90]);
    sub_1D435C964();
    sub_1D451A410();
    swift_release();
    sub_1D42BE210(&qword_1EFE4CB38, &qword_1EFE4CB28, MEMORY[0x1E0C958E0]);
    sub_1D451A2E4();
    sub_1D42F1FA0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  }
  sub_1D42BE844();
}

unint64_t sub_1D43FA4D4(uint64_t a1)
{
  unint64_t result;

  result = sub_1D43AA54C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1D43FA4F8(uint64_t a1)
{
  unint64_t result;

  result = sub_1D43AA510();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1D43FA51C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1D825E41C](&unk_1D454574C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D43FA548(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1D825E41C](&unk_1D452B6AC);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

double sub_1D43FA574()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  v0 = sub_1D451A6EC();
  v2 = v1;
  v3 = sub_1D451A6EC();
  qword_1EFEA78B0 = v0;
  *(_QWORD *)algn_1EFEA78B8 = v2;
  qword_1EFEA78C0 = v3;
  unk_1EFEA78C8 = v4;
  qword_1EFEA78D0 = 0;
  unk_1EFEA78D8 = 0;
  byte_1EFEA78E0 = 0;
  *(_QWORD *)&result = 65793;
  *(_DWORD *)&byte_1EFEA78E1 = 65793;
  byte_1EFEA78E5 = 0;
  qword_1EFEA78E8 = 0;
  byte_1EFEA78F0 = 1;
  return result;
}

uint64_t sub_1D43FA5E8()
{
  if (qword_1EFE48ED8 != -1)
    swift_once();
  qword_1EFEA78F8 = qword_1EFEA78B0;
  unk_1EFEA7900 = *(_QWORD *)algn_1EFEA78B8;
  qword_1EFEA7908 = qword_1EFEA78C0;
  unk_1EFEA7910 = unk_1EFEA78C8;
  qword_1EFEA7918 = qword_1EFEA78D0;
  unk_1EFEA7920 = unk_1EFEA78D8;
  byte_1EFEA7928 = byte_1EFEA78E0;
  byte_1EFEA7929 = byte_1EFEA78E1;
  byte_1EFEA792A = byte_1EFEA78E2;
  byte_1EFEA792B = byte_1EFEA78E3;
  byte_1EFEA792C = byte_1EFEA78E4;
  byte_1EFEA792D = byte_1EFEA78E5;
  qword_1EFEA7930 = qword_1EFEA78E8;
  byte_1EFEA7938 = byte_1EFEA78F0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D43FA6A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;

  if (qword_1EFE48EE0 != -1)
    swift_once();
  v0 = unk_1EFEA7900;
  v1 = unk_1EFEA7910;
  sub_1D43FABD0();
  v3 = *(_QWORD *)(v2 + 56);
  LOBYTE(v2) = *(_BYTE *)(v2 + 64);
  qword_1EFEA7940 = v4;
  *(_QWORD *)algn_1EFEA7948 = v0;
  qword_1EFEA7950 = v5;
  unk_1EFEA7958 = v1;
  qword_1EFEA7960 = v7;
  unk_1EFEA7968 = v6;
  byte_1EFEA7970 = v8;
  byte_1EFEA7971 = v9;
  byte_1EFEA7972 = v10;
  byte_1EFEA7973 = v11;
  byte_1EFEA7974 = v12;
  byte_1EFEA7975 = v13;
  qword_1EFEA7978 = v3;
  byte_1EFEA7980 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1D43FAC00();
}

uint64_t sub_1D43FA740@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1D43F9F7C(v1[4], v1[6], v1[2], v1[3], a1);
}

uint64_t sub_1D43FA760(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D42B28FC(&qword_1EFE50750);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D43FA7A0()
{
  unint64_t result;

  result = qword_1EFE50758;
  if (!qword_1EFE50758)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453995C, &unk_1E9799938);
    atomic_store(result, (unint64_t *)&qword_1EFE50758);
  }
  return result;
}

unint64_t sub_1D43FA7DC()
{
  unint64_t result;

  result = qword_1EFE50778;
  if (!qword_1EFE50778)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453990C, &type metadata for SoundRecognition.Detection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50778);
  }
  return result;
}

unint64_t sub_1D43FA818()
{
  unint64_t result;

  result = qword_1EFE50780;
  if (!qword_1EFE50780)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45398BC, &type metadata for SoundRecognition.Detection.ActiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50780);
  }
  return result;
}

unint64_t sub_1D43FA854()
{
  unint64_t result;

  result = qword_1EFE50788;
  if (!qword_1EFE50788)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453986C, &type metadata for SoundRecognition.Detection.InactiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50788);
  }
  return result;
}

ValueMetadata *type metadata accessor for SoundRecognition.Detection.CodingKeys()
{
  return &type metadata for SoundRecognition.Detection.CodingKeys;
}

ValueMetadata *type metadata accessor for SoundRecognition.Detection.InactiveCodingKeys()
{
  return &type metadata for SoundRecognition.Detection.InactiveCodingKeys;
}

ValueMetadata *type metadata accessor for SoundRecognition.Detection.ActiveCodingKeys()
{
  return &type metadata for SoundRecognition.Detection.ActiveCodingKeys;
}

void type metadata accessor for SoundRecognition.DomainError()
{
  sub_1D42CB35C();
}

void type metadata accessor for SoundRecognition()
{
  sub_1D42CB35C();
}

uint64_t _s13SoundAnalysis16SoundRecognitionV9DetectionO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D43FA928 + 4 * byte_1D4539455[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D43FA95C + 4 * byte_1D4539450[v4]))();
}

uint64_t sub_1D43FA95C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43FA964(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D43FA96CLL);
  return result;
}

uint64_t sub_1D43FA978(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D43FA980);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D43FA984(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43FA98C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SoundRecognition.Detection()
{
  sub_1D42CB35C();
}

unint64_t sub_1D43FA9AC()
{
  unint64_t result;

  result = qword_1EFE507A8;
  if (!qword_1EFE507A8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45396EC, &unk_1E9799938);
    atomic_store(result, (unint64_t *)&qword_1EFE507A8);
  }
  return result;
}

unint64_t sub_1D43FA9EC()
{
  unint64_t result;

  result = qword_1EFE507B0;
  if (!qword_1EFE507B0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4539844, &type metadata for SoundRecognition.Detection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE507B0);
  }
  return result;
}

unint64_t sub_1D43FAA2C()
{
  unint64_t result;

  result = qword_1EFE507B8;
  if (!qword_1EFE507B8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4539764, &type metadata for SoundRecognition.Detection.InactiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE507B8);
  }
  return result;
}

unint64_t sub_1D43FAA6C()
{
  unint64_t result;

  result = qword_1EFE507C0;
  if (!qword_1EFE507C0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453978C, &type metadata for SoundRecognition.Detection.InactiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE507C0);
  }
  return result;
}

unint64_t sub_1D43FAAAC()
{
  unint64_t result;

  result = qword_1EFE507C8;
  if (!qword_1EFE507C8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4539714, &type metadata for SoundRecognition.Detection.ActiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE507C8);
  }
  return result;
}

unint64_t sub_1D43FAAEC()
{
  unint64_t result;

  result = qword_1EFE507D0;
  if (!qword_1EFE507D0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453973C, &type metadata for SoundRecognition.Detection.ActiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE507D0);
  }
  return result;
}

unint64_t sub_1D43FAB2C()
{
  unint64_t result;

  result = qword_1EFE507D8;
  if (!qword_1EFE507D8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45397B4, &type metadata for SoundRecognition.Detection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE507D8);
  }
  return result;
}

unint64_t sub_1D43FAB6C()
{
  unint64_t result;

  result = qword_1EFE507E0;
  if (!qword_1EFE507E0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45397DC, &type metadata for SoundRecognition.Detection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE507E0);
  }
  return result;
}

uint64_t sub_1D43FABB8()
{
  return sub_1D451B610();
}

void sub_1D43FABEC(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t sub_1D43FAC00()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D43FAC08()
{
  return swift_slowAlloc();
}

void sub_1D43FAC2C()
{
  sub_1D431E188();
}

uint64_t sub_1D43FAC38()
{
  return swift_slowAlloc();
}

unint64_t sub_1D43FAC58()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_1D43FA818();
}

uint64_t sub_1D43FAC68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = 0;
    v4 = (_QWORD *)(a1 + 32);
    while (*v4 != a2)
    {
      ++v3;
      v4 += 2;
      if (v2 == v3)
      {
        v3 = 0;
        break;
      }
    }
  }
  else
  {
    v3 = 0;
  }
  swift_unknownObjectRelease();
  return v3;
}

void sub_1D43FACE0(unint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if ((sub_1D43FE914() & 1) == 0)
  {
    sub_1D43830D4();
    v1 = v6;
  }
  v4 = *(_QWORD *)(v1 + 16);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    sub_1D42C689C(v1 + 24 * a1 + 56, v4 - 1 - a1);
    *(_QWORD *)(v1 + 16) = v5;
    *v2 = v1;
  }
}

void sub_1D43FAD68(unint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((sub_1D43FE914() & 1) == 0)
  {
    sub_1D4383170();
    v2 = v8;
  }
  v6 = *(_QWORD *)(v2 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v2 + 160 * a1;
    memcpy(a2, (const void *)(v7 + 32), 0xA0uLL);
    sub_1D42C708C((char *)(v7 + 192), v6 - 1 - a1, (char *)(v7 + 32));
    *(_QWORD *)(v2 + 16) = v6 - 1;
    *v3 = v2;
  }
}

void sub_1D43FAE00(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1D4383180();
    v3 = v6;
  }
  v4 = *(_QWORD *)(v3 + 16);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    sub_1D42C68F4((char *)(v3 + 16 * a1 + 48), v4 - 1 - a1, (char *)(v3 + 16 * a1 + 32));
    *(_QWORD *)(v3 + 16) = v5;
    *v1 = v3;
  }
}

uint64_t sub_1D43FAE88(char a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;

  v3 = v2;
  v36 = sub_1D42EA2A8();
  v34 = *(_QWORD *)(v36 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42BE768();
  v33 = v6;
  sub_1D451AFA4();
  v7 = (void (*)(uint64_t))MEMORY[0x1E0DEF810];
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v8);
  sub_1D42BE768();
  sub_1D43FE90C();
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  sub_1D42CB210();
  v10 = sub_1D451AFB0();
  v11 = *(_QWORD *)(v10 - 8);
  v20 = v10;
  MEMORY[0x1E0C80A78](v10);
  sub_1D42CB210();
  v14 = v13 - v12;
  v31 = a2[1];
  v32 = *a2;
  v29 = *((_QWORD *)a2 + 5);
  v30 = *((_QWORD *)a2 + 4);
  v27 = *((_BYTE *)a2 + 49);
  v28 = *((_BYTE *)a2 + 48);
  v25 = *((_BYTE *)a2 + 51);
  v26 = *((_BYTE *)a2 + 50);
  v23 = *((_BYTE *)a2 + 53);
  v24 = *((_BYTE *)a2 + 52);
  v22 = *((_QWORD *)a2 + 7);
  v21 = *((_BYTE *)a2 + 64);
  v15 = v3 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_recordingCancellable;
  *(_OWORD *)v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  *(_QWORD *)(v15 + 32) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_streamAnalyzer) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioSession) = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioIsRunning) = 0;
  sub_1D43E5EF0();
  v18 = *MEMORY[0x1E0DEF8D8];
  v19 = *(void (**)(uint64_t))(v11 + 104);
  v19(v14);
  sub_1D451A464();
  sub_1D43287AC(&qword_1EFE47A18, v7);
  sub_1D42CB9F8();
  sub_1D42E3F8C(&qword_1EFE479F8);
  sub_1D43FE8BC();
  sub_1D43FE8E0();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_dispatchQueue) = sub_1D451AFD4();
  ((void (*)(uint64_t, _QWORD, uint64_t))v19)(v14, v18, v20);
  sub_1D451A464();
  sub_1D43FE8BC();
  sub_1D43FE8E0();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_analysisQueue) = sub_1D451AFD4();
  v16 = v3 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioConfiguration;
  *(_OWORD *)v16 = v32;
  *(_OWORD *)(v16 + 16) = v31;
  *(_QWORD *)(v16 + 32) = v30;
  *(_QWORD *)(v16 + 40) = v29;
  *(_BYTE *)(v16 + 48) = v28;
  *(_BYTE *)(v16 + 49) = v27;
  *(_BYTE *)(v16 + 50) = v26;
  *(_BYTE *)(v16 + 51) = v25;
  *(_BYTE *)(v16 + 52) = v24;
  *(_BYTE *)(v16 + 53) = v23;
  *(_QWORD *)(v16 + 56) = v22;
  *(_BYTE *)(v16 + 64) = v21;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_requestsAndObservers) = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(v3 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_allowSuppressionOfMicrophoneUsageIndicator) = a1;
  sub_1D4519D14();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v3 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_id, v33, v36);
  return v3;
}

uint64_t sub_1D43FB1F4(void *a1, void *a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;

  if (qword_1EFE40338 != -1)
    swift_once();
  v4 = sub_1D451A014();
  sub_1D42CC880(v4, (uint64_t)qword_1EFEA7700);
  sub_1D4307010();
  sub_1D4311FD0();
  sub_1D4311FD0();
  v5 = sub_1D4519FFC();
  v6 = sub_1D451AF74();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    *(_DWORD *)v7 = 136315650;
    sub_1D4519D20();
    sub_1D43287AC(&qword_1EFE4CB00, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v8 = sub_1D451B7C0();
    sub_1D43D72EC(v8, v9, &v21);
    sub_1D43E13B0();
    sub_1D43FE92C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v10 = objc_msgSend(a1, sel_description);
    v11 = sub_1D451A6EC();
    v12 = a2;
    v14 = v13;

    sub_1D43D72EC(v11, v14, &v21);
    sub_1D43E13B0();
    sub_1D43C39EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 22) = 2080;
    v15 = objc_msgSend(v12, sel_description);
    v16 = sub_1D451A6EC();
    v18 = v17;

    sub_1D43D72EC(v16, v18, &v21);
    sub_1D451B1A8();
    sub_1D43C39EC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D42A7000, v5, v6, "(SNSystemAudioAnalyzerLocal: %s) addRequest:%s withObserver:%s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    sub_1D42CC934();
  }

  sub_1D43C39EC();
  sub_1D43C39EC();
  v19 = sub_1D43FE92C();
  MEMORY[0x1E0C80A78](v19);
  return sub_1D451AFBC();
}

void sub_1D43FB510(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  uint64_t inited;
  id v25;
  void *v26;
  char *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id aBlock[17];

  v4 = v2;
  aBlock[15] = *(id *)MEMORY[0x1E0C80C00];
  v7 = sub_1D451A44C();
  v33 = *(_QWORD *)(v7 - 8);
  v34 = v7;
  MEMORY[0x1E0C80A78](v7);
  v32 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1D451A470();
  v30 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = &v2[OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_requestsAndObservers];
  swift_beginAccess();
  v12 = *(_QWORD *)(*(_QWORD *)v11 + 16);
  if (v12)
  {
    v13 = (_QWORD *)(*(_QWORD *)v11 + 32);
    while (*v13 != a1)
    {
      v13 += 2;
      if (!--v12)
        goto LABEL_7;
    }
    sub_1D43FC834(a1);
  }
LABEL_7:
  v35 = v3;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = nullsub_1;
  v17[3] = 0;
  v17[4] = sub_1D43FE624;
  v17[5] = v15;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = sub_1D43FE600;
  v18[3] = v14;
  v18[4] = sub_1D43FE62C;
  v18[5] = v16;
  v19 = objc_allocWithZone((Class)type metadata accessor for SNResultsForwarder());
  swift_unknownObjectRetain();
  swift_retain();
  v20 = sub_1D43CBA78((uint64_t)sub_1D43FE638, (uint64_t)v18, (uint64_t)sub_1D43FE638, (uint64_t)v17);
  swift_release();
  v21 = *(void **)&v4[OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_streamAnalyzer];
  if (!v21)
    goto LABEL_10;
  aBlock[0] = 0;
  v22 = v21;
  if (objc_msgSend(v22, sel_addRequest_withObserver_error_, a1, v20, aBlock))
  {
    v23 = aBlock[0];

LABEL_10:
    sub_1D42B28FC((uint64_t *)&unk_1EFE51940);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D45261D0;
    *(_QWORD *)(inited + 32) = a1;
    *(_QWORD *)(inited + 40) = v20;
    swift_beginAccess();
    swift_unknownObjectRetain();
    v25 = v20;
    swift_bridgeObjectRetain();
    sub_1D44B53B4();
    swift_endAccess();
    swift_setDeallocating();
    sub_1D4347738();
    aBlock[4] = sub_1D43FE8B8;
    aBlock[5] = v4;
    aBlock[0] = (id)MEMORY[0x1E0C809B0];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_1D444D4E8;
    aBlock[3] = &unk_1E97B3610;
    v26 = _Block_copy(aBlock);
    swift_retain();
    sub_1D451A464();
    v36 = MEMORY[0x1E0DEE9D8];
    sub_1D43287AC(qword_1EFE4A4B0, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
    sub_1D42B28FC((uint64_t *)&unk_1EFE4B310);
    sub_1D42E33F8(&qword_1EFE4A4C0, (uint64_t *)&unk_1EFE4B310);
    v27 = v32;
    v28 = v34;
    sub_1D451B2EC();
    MEMORY[0x1D825C904](0, v10, v27, v26);
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v27, v28);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v31);
    swift_release();
    return;
  }
  v29 = aBlock[0];
  sub_1D4519AA4();

  swift_willThrow();
}

uint64_t sub_1D43FB99C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = v0 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_requestsAndObservers;
  result = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioIsRunning) & 1) != 0)
      return result;
    swift_retain();
    sub_1D43FBA20();
  }
  else
  {
    if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioIsRunning) & 1) == 0)
      return result;
    swift_retain();
    sub_1D43FC7F4();
  }
  return swift_release();
}

void sub_1D43FBA20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  char v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  char v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  _QWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  void **v37;
  void *v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  void *v44;
  uint64_t v45;
  id v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  id v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint64_t v68;
  unint64_t v69;
  void *v70;
  id v71;
  void *v72;
  void *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *log;
  os_log_type_t type[8];
  os_log_type_t typea;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  void *v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  char v91;
  uint64_t v92;
  char v93;
  char v94;
  char v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99[3];
  uint64_t v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  char v107;
  char v108;
  char v109;
  char v110;
  char v111;
  uint64_t v112;
  char v113;
  uint64_t v114;

  v1 = v0;
  v114 = *MEMORY[0x1E0C80C00];
  if (qword_1EFE478B8 != -1)
    swift_once();
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioConfiguration);
  v3 = *(_BYTE *)(v0 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioConfiguration + 49);
  if (byte_1EFEA7A60 == 1)
  {
    if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioConfiguration + 49) & 1) != 0
      || *((_BYTE *)v2 + 48) == 1)
    {
      if ((*(_BYTE *)(v0
                     + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_allowSuppressionOfMicrophoneUsageIndicator) & 1) == 0)
      {
        type metadata accessor for SNError();
        v4 = sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD000000000000035, 0x80000001D4556820);
        swift_willThrow();
LABEL_14:
        if (qword_1EFE40338 != -1)
          swift_once();
        v16 = sub_1D451A014();
        sub_1D42CC880(v16, (uint64_t)qword_1EFEA7700);
        v17 = v4;
        v18 = v4;
        v19 = sub_1D4519FFC();
        v20 = sub_1D451AF5C();
        if (os_log_type_enabled(v19, v20))
        {
          v21 = (uint8_t *)swift_slowAlloc();
          v22 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v21 = 138412290;
          v23 = v4;
          v24 = _swift_stdlib_bridgeErrorToNSError();
          *(_QWORD *)&v101 = v24;
          sub_1D451B1A8();
          *v22 = v24;

          _os_log_impl(&dword_1D42A7000, v19, v20, "failed to start audio with error %@", v21, 0xCu);
          sub_1D42B28FC((uint64_t *)&unk_1EFE50850);
          swift_arrayDestroy();
          MEMORY[0x1D825E524](v22, -1, -1);
          MEMORY[0x1D825E524](v21, -1, -1);
        }
        else
        {

        }
        sub_1D43FD760();
        v26 = (void *)v25;
        sub_1D43FD7C0(v25);
        sub_1D43FD540();

        return;
      }
    }
    else
    {
      v3 = 0;
    }
  }
  v6 = *v2;
  v5 = v2[1];
  v8 = v2[2];
  v7 = v2[3];
  v9 = v2[5];
  v97 = v2[4];
  v95 = *((_BYTE *)v2 + 51);
  v96 = *((_BYTE *)v2 + 50);
  v93 = *((_BYTE *)v2 + 53);
  v94 = *((_BYTE *)v2 + 52);
  v92 = v2[7];
  v90 = *((_BYTE *)v2 + 48);
  v91 = *((_BYTE *)v2 + 64);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v10 = sub_1D44577D8();
  v11 = v9;
  if ((v12 & 1) == 0)
  {
    v13 = v10;
    sub_1D42B28FC((uint64_t *)&unk_1EFE403A0);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1D45261D0;
    *(_QWORD *)(v11 + 32) = v13;
    swift_bridgeObjectRelease();
  }
  sub_1D44578B4();
  v15 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
    swift_bridgeObjectRelease();
    v11 = v15;
  }
  *(_QWORD *)&v101 = v6;
  *((_QWORD *)&v101 + 1) = v5;
  v102 = v8;
  v103 = v7;
  v104 = v97;
  v105 = v11;
  v106 = v90;
  v107 = v3;
  v108 = v96;
  v109 = v95;
  v110 = v94;
  v111 = v93;
  v112 = v92;
  v113 = v91;
  v27 = (void *)sub_1D44B1144(&v100, &v101);
  v83 = v8;
  v84 = v6;
  v85 = v3;
  v88 = v11;
  v89 = v100;
  v87 = v28;
  v29 = objc_msgSend(objc_allocWithZone((Class)SNAudioStreamAnalyzer), sel_initWithFormat_, v28);
  v30 = *(void **)(v1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_streamAnalyzer);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_streamAnalyzer) = v29;
  v31 = v29;

  v32 = *(void **)(v1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioSession);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioSession) = v27;
  v33 = v27;

  if ((v2[6] & 1) == 0)
  {
    *(_QWORD *)&v101 = 0;
    if (!objc_msgSend(v33, sel_setActive_error_, 1, &v101))
    {
      v71 = (id)v101;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v72 = (void *)sub_1D4519AA4();

      swift_willThrow();
      type metadata accessor for SNError();
      v73 = (void *)sub_1D4519A98();
      *(_QWORD *)&v101 = 0;
      *((_QWORD *)&v101 + 1) = 0xE000000000000000;
      sub_1D451B400();
      sub_1D451A794();
      v100 = (uint64_t)v72;
      sub_1D42B28FC(&qword_1EFE49BB0);
      sub_1D451B514();
      v4 = sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, v73, v101, *((unint64_t *)&v101 + 1));

      swift_bridgeObjectRelease();
      swift_willThrow();

      swift_release();
      goto LABEL_14;
    }
    v34 = (id)v101;
  }
  v35 = v1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_requestsAndObservers;
  swift_beginAccess();
  v36 = *(_QWORD *)(*(_QWORD *)v35 + 16);
  v86 = v33;
  if (v36)
  {
    *(_QWORD *)type = v7;
    v37 = (void **)(swift_bridgeObjectRetain() + 40);
    do
    {
      v39 = (uint64_t)*(v37 - 1);
      v38 = *v37;
      *(_QWORD *)&v101 = 0;
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      if (objc_msgSend(v31, sel_addRequest_withObserver_error_, v39, v38, &v101))
      {
        v40 = (id)v101;
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
      }
      else
      {
        v41 = v31;
        v42 = (id)v101;
        v43 = (void *)sub_1D4519AA4();

        swift_willThrow();
        if ((objc_msgSend(v38, sel_respondsToSelector_, sel_request_didFailWithError_) & 1) != 0)
        {
          swift_unknownObjectRetain();
          v44 = (void *)sub_1D4519A98();
          objc_msgSend(v38, sel_request_didFailWithError_, v39, v44);
          swift_unknownObjectRelease();
          swift_unknownObjectRelease_n();

        }
        else
        {
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
        }

        v31 = v41;
      }
      v37 += 2;
      --v36;
    }
    while (v36);
    swift_bridgeObjectRelease();
    v7 = *(_QWORD *)type;
  }
  if (qword_1EFE40338 != -1)
    swift_once();
  v45 = sub_1D451A014();
  sub_1D42CC880(v45, (uint64_t)qword_1EFEA7700);
  swift_bridgeObjectRetain();
  v46 = v87;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v47 = sub_1D4519FFC();
  v48 = sub_1D451AF74();
  if (os_log_type_enabled(v47, v48))
  {
    v82 = v31;
    v49 = swift_slowAlloc();
    v81 = swift_slowAlloc();
    v99[0] = v81;
    *(_DWORD *)v49 = 136315394;
    typea = v48;
    v50 = v46;
    v51 = objc_msgSend(v46, sel_description);
    log = v47;
    v52 = v7;
    v53 = sub_1D451A6EC();
    v55 = v54;

    v46 = v50;
    *(_QWORD *)&v101 = sub_1D43D72EC(v53, v55, v99);
    sub_1D451B1A8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 12) = 2080;
    *(_QWORD *)&v101 = v84;
    *((_QWORD *)&v101 + 1) = v5;
    v102 = v83;
    v103 = v52;
    v104 = v97;
    v105 = v88;
    v106 = v90;
    v107 = v85;
    v108 = v96;
    v109 = v95;
    v110 = v94;
    v111 = v93;
    v112 = v92;
    v113 = v91;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v56 = sub_1D451A728();
    *(_QWORD *)&v101 = sub_1D43D72EC(v56, v57, v99);
    sub_1D451B1A8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D42A7000, log, typea, "Starting audio input. %s, %s", (uint8_t *)v49, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D825E524](v81, -1, -1);
    v58 = v49;
    v31 = v82;
    MEMORY[0x1D825E524](v58, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

  }
  v59 = swift_allocObject();
  swift_weakInit();
  if (qword_1EFE472D0 != -1)
    swift_once();
  v60 = v1;
  if (byte_1EFEA7718 == 1 && byte_1EFEA7A60 == 1)
  {
    v61 = swift_allocObject();
    *(_QWORD *)(v61 + 16) = 0;
    *(_QWORD *)(v61 + 24) = 0;
    v62 = swift_allocObject();
    *(_QWORD *)(v62 + 16) = 0;
    v63 = (_QWORD *)swift_allocObject();
    v63[2] = sub_1D43FD9BC;
    v63[3] = 0;
    v63[4] = v61;
    v63[5] = v62;
    v63[6] = v46;
    v63[7] = sub_1D43FE6C4;
    v63[8] = v59;
    swift_retain_n();
    v64 = v46;
    swift_retain();
    v65 = sub_1D4519FFC();
    v66 = sub_1D451AF74();
    if (os_log_type_enabled(v65, v66))
    {
      v67 = (uint8_t *)swift_slowAlloc();
      v98 = swift_slowAlloc();
      *(_DWORD *)v67 = 136315138;
      *(_QWORD *)&v101 = v98;
      sub_1D4519D20();
      sub_1D43287AC(&qword_1EFE4CB00, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
      v68 = sub_1D451B7C0();
      v99[0] = sub_1D43D72EC(v68, v69, (uint64_t *)&v101);
      sub_1D451B1A8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D42A7000, v65, v66, "Analyzer capable of injection (%s).", v67, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D825E524](v98, -1, -1);
      MEMORY[0x1D825E524](v67, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v70 = sub_1D43FE784;
  }
  else
  {
    swift_retain();
    v70 = sub_1D43FE6C4;
    v63 = (_QWORD *)v59;
  }
  *(_QWORD *)&v101 = v89;
  swift_allocObject();
  swift_weakInit();
  v74 = swift_allocObject();
  swift_weakInit();
  v75 = (_QWORD *)swift_allocObject();
  v75[2] = v74;
  v75[3] = v70;
  v75[4] = v63;
  swift_retain();
  sub_1D42B28FC(&qword_1EFE50860);
  sub_1D42E33F8(qword_1EFE55670, &qword_1EFE50860);
  v76 = sub_1D451A344();
  swift_release();
  swift_release();
  v103 = sub_1D451A200();
  v104 = MEMORY[0x1E0C95DF8];
  swift_release();
  swift_release();

  swift_release();
  *(_QWORD *)&v101 = v76;
  v77 = v60 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_recordingCancellable;
  swift_beginAccess();
  sub_1D43FE660((uint64_t)&v101, v77);
  swift_endAccess();
  *(_BYTE *)(v60 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioIsRunning) = 1;
}

void sub_1D43FC7F4()
{
  uint64_t v0;
  void *v1;

  v1 = (void *)MEMORY[0x1D825DB34]();
  sub_1D43FDD54(v0);
  objc_autoreleasePoolPop(v1);
}

uint64_t sub_1D43FC834(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  char v12;
  void *v13;
  void *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[7];

  v3 = sub_1D451A44C();
  v18 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1D451A470();
  v6 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_unknownObjectRetain();
  v9 = swift_bridgeObjectRetain();
  v10 = sub_1D43FAC68(v9, a1);
  v12 = v11;
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
    swift_beginAccess();
    sub_1D43FAE00(v10);
    swift_endAccess();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v13 = *(void **)(v1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_streamAnalyzer);
    if (v13)
      objc_msgSend(v13, sel_removeRequest_, a1);
  }
  aBlock[4] = sub_1D43FE8B8;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D444D4E8;
  aBlock[3] = &unk_1E97B37E8;
  v14 = _Block_copy(aBlock);
  swift_retain();
  sub_1D451A464();
  v19 = MEMORY[0x1E0DEE9D8];
  sub_1D43287AC(qword_1EFE4A4B0, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  sub_1D42B28FC((uint64_t *)&unk_1EFE4B310);
  sub_1D42E33F8(&qword_1EFE4A4C0, (uint64_t *)&unk_1EFE4B310);
  sub_1D451B2EC();
  MEMORY[0x1D825C904](0, v8, v5, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v17);
  return swift_release();
}

void sub_1D43FCAC4(void *a1, void *a2, void *a3)
{
  uint64_t v6;
  id v7;
  id v8;
  os_log_type_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  NSObject *oslog;
  uint64_t v24[2];

  v24[1] = *MEMORY[0x1E0C80C00];
  if (qword_1EFE40338 != -1)
    swift_once();
  v6 = sub_1D451A014();
  sub_1D42CC880(v6, (uint64_t)qword_1EFEA7700);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v7 = a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v8 = a2;
  oslog = sub_1D4519FFC();
  v9 = sub_1D451AF74();
  if (os_log_type_enabled(oslog, v9))
  {
    v10 = swift_slowAlloc();
    v21 = (_QWORD *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v24[0] = v22;
    *(_DWORD *)v10 = 136315650;
    v11 = objc_msgSend(a3, sel_description);
    v12 = sub_1D451A6EC();
    v14 = v13;

    sub_1D43D72EC(v12, v14, v24);
    sub_1D451B1A8();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    v15 = objc_msgSend(a1, sel_description);
    v16 = sub_1D451A6EC();
    v18 = v17;

    sub_1D43D72EC(v16, v18, v24);
    sub_1D451B1A8();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 22) = 2112;
    if (a2)
    {
      v19 = a2;
      v20 = _swift_stdlib_bridgeErrorToNSError();
      sub_1D451B1A8();
    }
    else
    {
      sub_1D451B1A8();
      v20 = 0;
    }
    *v21 = v20;

    _os_log_impl(&dword_1D42A7000, oslog, v9, "Observer %s for request %s completed with error: %@", (uint8_t *)v10, 0x20u);
    sub_1D42B28FC((uint64_t *)&unk_1EFE50850);
    swift_arrayDestroy();
    MEMORY[0x1D825E524](v21, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1D825E524](v22, -1, -1);
    MEMORY[0x1D825E524](v10, -1, -1);

  }
  else
  {
    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();

  }
}

void sub_1D43FCE5C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[6];

  v2 = v1;
  v4 = sub_1D451A44C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB210();
  v8 = v7 - v6;
  v9 = sub_1D43FE90C();
  v25 = *(_QWORD *)(v9 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v10);
  sub_1D42BE768();
  v24 = v11;
  if (qword_1EFE40338 != -1)
    swift_once();
  v12 = sub_1D451A014();
  sub_1D42CC880(v12, (uint64_t)qword_1EFEA7700);
  sub_1D4307010();
  sub_1D4311FD0();
  v13 = sub_1D4519FFC();
  v14 = sub_1D451AF74();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = sub_1D42CC940();
    v26[0] = sub_1D42CC940();
    *(_DWORD *)v15 = 136315394;
    sub_1D42EA2A8();
    sub_1D43287AC(&qword_1EFE4CB00, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v16 = sub_1D43FE900();
    sub_1D43FE920(v16, v17);
    sub_1D451B1A8();
    sub_1D43E1590();
    sub_1D42BE8B4();
    *(_WORD *)(v15 + 12) = 2080;
    v18 = objc_msgSend(a1, sel_description);
    v19 = sub_1D451A6EC();
    v21 = v20;

    sub_1D43D72EC(v19, v21, v26);
    sub_1D451B1A8();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D42A7000, v13, v14, "(SNSystemAudioAnalyzerLocal:%s) removeRequest:%s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    sub_1D42CC934();
  }

  sub_1D43FE8F4();
  sub_1D43E1590();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v2;
  *(_QWORD *)(v22 + 24) = a1;
  v26[4] = (uint64_t)sub_1D43FE850;
  v26[5] = v22;
  v26[0] = MEMORY[0x1E0C809B0];
  v26[1] = 1107296256;
  v23 = sub_1D42EA51C((uint64_t)sub_1D444D4E8);
  swift_retain();
  swift_unknownObjectRetain();
  sub_1D451A464();
  sub_1D43287AC(qword_1EFE4A4B0, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  sub_1D42CB9F8();
  sub_1D42E3F8C(&qword_1EFE4A4C0);
  sub_1D451B2EC();
  MEMORY[0x1D825C904](0, v24, v8, v23);
  _Block_release(v23);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v9);
  swift_release();
  sub_1D42CB520();
}

void sub_1D43FD238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;

  v0 = sub_1D451A44C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  sub_1D42CB210();
  v4 = v3 - v2;
  v5 = sub_1D43FE90C();
  v17 = *(_QWORD *)(v5 - 8);
  v18 = v5;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v6);
  sub_1D42CB210();
  v9 = v8 - v7;
  if (qword_1EFE40338 != -1)
    swift_once();
  v10 = sub_1D451A014();
  sub_1D42CC880(v10, (uint64_t)qword_1EFEA7700);
  sub_1D4307010();
  v11 = sub_1D4519FFC();
  v12 = sub_1D451AF74();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)sub_1D42CC940();
    sub_1D42CC940();
    *(_DWORD *)v13 = 136315138;
    sub_1D42EA2A8();
    sub_1D43287AC(&qword_1EFE4CB00, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v14 = sub_1D43FE900();
    sub_1D43FE920(v14, v15);
    sub_1D451B1A8();
    sub_1D43E1590();
    sub_1D42BE8B4();
    _os_log_impl(&dword_1D42A7000, v11, v12, "(SNSystemAudioAnalyzerLocal:%s) removeAllRequests", v13, 0xCu);
    swift_arrayDestroy();
    sub_1D42CC934();
  }

  sub_1D43E1590();
  v16 = sub_1D42EA51C((uint64_t)sub_1D444D4E8);
  swift_retain();
  sub_1D451A464();
  sub_1D43287AC(qword_1EFE4A4B0, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  sub_1D42CB9F8();
  sub_1D42E3F8C(&qword_1EFE4A4C0);
  sub_1D451B2EC();
  MEMORY[0x1D825C904](0, v9, v4, v16);
  _Block_release(v16);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v0);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v9, v18);
  swift_release();
  sub_1D42CB520();
}

uint64_t sub_1D43FD540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD aBlock[6];

  v1 = sub_1D451A44C();
  v14 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D451A470();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (_QWORD *)(v0 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_requestsAndObservers);
  swift_beginAccess();
  v9 = MEMORY[0x1E0DEE9D8];
  *v8 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  v10 = *(void **)(v0 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_streamAnalyzer);
  if (v10)
    objc_msgSend(v10, sel_removeAllRequests);
  aBlock[4] = sub_1D43FE824;
  aBlock[5] = v0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D444D4E8;
  aBlock[3] = &unk_1E97BDBB8;
  v11 = _Block_copy(aBlock);
  swift_retain();
  sub_1D451A464();
  v15 = v9;
  sub_1D43287AC(qword_1EFE4A4B0, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  sub_1D42B28FC((uint64_t *)&unk_1EFE4B310);
  sub_1D42E33F8(&qword_1EFE4A4C0, (uint64_t *)&unk_1EFE4B310);
  sub_1D451B2EC();
  MEMORY[0x1D825C904](0, v7, v3, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return swift_release();
}

void sub_1D43FD760()
{
  type metadata accessor for SNError();
  sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD00000000000001DLL, 0x80000001D4556880);
  sub_1D42B6E24();
}

void sub_1D43FD7C0(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_streamAnalyzer);
  if (v3)
  {
    v4 = v3;
    v12 = (id)sub_1D42E792C();
    sub_1D42E7208(a1);

  }
  else
  {
    v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_requestsAndObservers);
    swift_beginAccess();
    v6 = *v5;
    v7 = *(_QWORD *)(v6 + 16);
    if (v7)
    {
      swift_bridgeObjectRetain();
      v8 = (id *)(v6 + 40);
      do
      {
        v10 = (uint64_t)*(v8 - 1);
        v9 = *v8;
        if ((objc_msgSend(*v8, sel_respondsToSelector_, sel_request_didFailWithError_) & 1) != 0)
        {
          sub_1D4311FD0();
          swift_unknownObjectRetain();
          v11 = (void *)sub_1D4519A98();
          objc_msgSend(v9, sel_request_didFailWithError_, v10, v11);
          swift_unknownObjectRelease();
          sub_1D43FE8F4();

        }
        v8 += 2;
        --v7;
      }
      while (v7);
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1D43FD90C(uint64_t a1, void *a2)
{
  uint64_t Strong;
  void *v5;
  id v6;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v5 = *(void **)(Strong + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_streamAnalyzer);
    if (v5)
    {
      v6 = v5;
      swift_release();
      objc_msgSend(v6, sel_analyzeAudioBuffer_atAudioFramePosition_, a1, objc_msgSend(a2, sel_sampleTime));

    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_1D43FD9C0()
{
  uint64_t result;
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  void *v4;
  _QWORD aBlock[6];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    v2 = *(NSObject **)(result + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_dispatchQueue);
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = sub_1D43FE814;
    *(_QWORD *)(v3 + 24) = v1;
    aBlock[4] = sub_1D43FE874;
    aBlock[5] = v3;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D42E69CC;
    aBlock[3] = &unk_1E97BDB68;
    v4 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v2, v4);
    swift_release();
    _Block_release(v4);
    LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((v2 & 1) != 0)
      __break(1u);
  }
  return result;
}

uint64_t sub_1D43FDB00()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  if (qword_1EFE40338 != -1)
    swift_once();
  v0 = sub_1D451A014();
  sub_1D42CC880(v0, (uint64_t)qword_1EFEA7700);
  v1 = sub_1D4519FFC();
  v2 = sub_1D451AF74();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1D42A7000, v1, v2, "SNAudioRecordingQueue interrupted", v3, 2u);
    MEMORY[0x1D825E524](v3, -1, -1);
  }

  return sub_1D43FE128();
}

uint64_t sub_1D43FDBD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  void *v7;
  uint64_t result;
  NSObject *v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];

  v7 = *(void **)a1;
  v6 = *(void **)(a1 + 8);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v9 = *(NSObject **)(result + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_dispatchQueue);
    v10 = (_QWORD *)swift_allocObject();
    v10[2] = a3;
    v10[3] = a4;
    v10[4] = v7;
    v10[5] = v6;
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = sub_1D43FE7E4;
    *(_QWORD *)(v11 + 24) = v10;
    aBlock[4] = sub_1D43FE80C;
    aBlock[5] = v11;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D42E69CC;
    aBlock[3] = &unk_1E97BDB18;
    v12 = _Block_copy(aBlock);
    v13 = v7;
    v14 = v6;
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v9, v12);
    swift_release();
    _Block_release(v12);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
  return result;
}

void sub_1D43FDD54(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  void *v20;
  _QWORD *v21;
  __int128 aBlock;
  __int128 v23;
  uint64_t (*v24)(_QWORD);
  uint64_t v25;
  uint64_t v26;

  v2 = v1;
  v26 = *MEMORY[0x1E0C80C00];
  v4 = OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioSession;
  v5 = *(void **)(a1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioSession);
  if (!v5)
    goto LABEL_11;
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioConfiguration + 48) & 1) == 0)
  {
    *(_QWORD *)&aBlock = 0;
    v6 = v5;
    if (!objc_msgSend(v6, sel_setActive_error_, 0, &aBlock))
    {
      v8 = (id)aBlock;
      v2 = (void *)sub_1D4519AA4();

      swift_willThrow();
      if (qword_1EFE40338 == -1)
        goto LABEL_6;
      goto LABEL_16;
    }
    v7 = (id)aBlock;

  }
  while (1)
  {
    v17 = *(void **)(a1 + v4);
    *(_QWORD *)(a1 + v4) = 0;

LABEL_11:
    v18 = a1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_recordingCancellable;
    swift_beginAccess();
    if (*(_QWORD *)(v18 + 24))
    {
      sub_1D42E2D8C(v18, (uint64_t)&aBlock);
      sub_1D42B5528(&aBlock, *((uint64_t *)&v23 + 1));
      sub_1D451A17C();
      sub_1D42B5400((uint64_t)&aBlock);
    }
    v24 = 0;
    aBlock = 0u;
    v23 = 0u;
    swift_beginAccess();
    sub_1D43FE660((uint64_t)&aBlock, v18);
    swift_endAccess();
    *(_BYTE *)(a1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioIsRunning) = 0;
    v19 = *(NSObject **)(a1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_analysisQueue);
    v24 = j_nullsub_1;
    v25 = 0;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v23 = sub_1D42E69CC;
    *((_QWORD *)&v23 + 1) = &unk_1E97BD9D8;
    v6 = _Block_copy(&aBlock);
    swift_release();
    dispatch_sync(v19, v6);
    _Block_release(v6);
    if ((swift_isEscapingClosureAtFileLocation() & 1) == 0)
      break;
    __break(1u);
LABEL_16:
    swift_once();
LABEL_6:
    v9 = sub_1D451A014();
    sub_1D42CC880(v9, (uint64_t)qword_1EFEA7700);
    v10 = v2;
    v11 = v2;
    v12 = sub_1D4519FFC();
    v13 = sub_1D451AF5C();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v21 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v14 = 138412290;
      v15 = v2;
      v16 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)&aBlock = v16;
      sub_1D451B1A8();
      *v21 = v16;

      _os_log_impl(&dword_1D42A7000, v12, v13, "Failed to deactivate AVAudioSession with error %@", v14, 0xCu);
      sub_1D42B28FC((uint64_t *)&unk_1EFE50850);
      swift_arrayDestroy();
      MEMORY[0x1D825E524](v21, -1, -1);
      MEMORY[0x1D825E524](v14, -1, -1);

    }
    else
    {

    }
    v2 = 0;
  }
  v20 = *(void **)(a1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_streamAnalyzer);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_streamAnalyzer) = 0;

}

uint64_t sub_1D43FE128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v13[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_1D451A44C();
  v3 = (void (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D451A470();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = *(_QWORD *)(v1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_dispatchQueue);
  aBlock[4] = sub_1D43FE81C;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D444D4E8;
  aBlock[3] = &unk_1E97BDB90;
  v11 = _Block_copy(aBlock);
  swift_retain();
  sub_1D451A464();
  v13[1] = MEMORY[0x1E0DEE9D8];
  sub_1D43287AC(qword_1EFE4A4B0, v3);
  sub_1D42B28FC((uint64_t *)&unk_1EFE4B310);
  sub_1D42E33F8(&qword_1EFE4A4C0, (uint64_t *)&unk_1EFE4B310);
  sub_1D451B2EC();
  MEMORY[0x1D825C904](0, v10, v6, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

void sub_1D43FE304()
{
  id v0;

  type metadata accessor for SNError();
  v0 = sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 6, 0, 0xD000000000000018, 0x80000001D4556860);
  sub_1D43FD7C0((uint64_t)v0);
  sub_1D43FD540();

}

uint64_t sub_1D43FE388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_id;
  v2 = sub_1D42EA2A8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1D43FE8D8(OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_dispatchQueue);
  sub_1D43FE8D8(OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_analysisQueue);
  sub_1D43E0008(v0 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_recordingCancellable);
  sub_1D43FE8D8(OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_streamAnalyzer);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D42BE8B4();
  swift_bridgeObjectRelease();
  sub_1D43FE8D8(OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioSession);
  return v0;
}

uint64_t sub_1D43FE448()
{
  sub_1D43FE388();
  return swift_deallocClassInstance();
}

uint64_t sub_1D43FE46C()
{
  return type metadata accessor for SNSystemAudioAnalyzerLocal();
}

uint64_t type metadata accessor for SNSystemAudioAnalyzerLocal()
{
  uint64_t result;

  result = qword_1EFE50840;
  if (!qword_1EFE50840)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D43FE4AC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D4519D20();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1D43FE560(void *a1, void *a2)
{
  return sub_1D43FB1F4(a1, a2);
}

void sub_1D43FE580(void *a1)
{
  sub_1D43FCE5C(a1);
  sub_1D42B6E24();
}

void sub_1D43FE59C()
{
  sub_1D43FD238();
}

void sub_1D43FE5BC()
{
  uint64_t v0;

  sub_1D43FB510(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1D43FE5E4()
{
  swift_unknownObjectRelease();
  sub_1D42EA3B0();
  return swift_deallocObject();
}

void sub_1D43FE600(void *a1, void *a2)
{
  uint64_t v2;

  sub_1D43FCAC4(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1D43FE608()
{
  swift_unknownObjectWeakDestroy();
  sub_1D42EA3B0();
  return swift_deallocObject();
}

void *sub_1D43FE624(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D43CBE68(a1, a2, v2);
}

void *sub_1D43FE62C(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1D43CBD7C(a1, a2, v2);
}

uint64_t sub_1D43FE638(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  return sub_1D43CBD28(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1D43FE648(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D43FE658()
{
  return swift_release();
}

uint64_t sub_1D43FE660(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D42B28FC(&qword_1EFE4FCC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D43FE6A8()
{
  swift_weakDestroy();
  sub_1D42EA3B0();
  return swift_deallocObject();
}

void sub_1D43FE6C4(uint64_t a1, void *a2)
{
  sub_1D43FD90C(a1, a2);
}

uint64_t sub_1D43FE6CC()
{
  return sub_1D43FD9C0();
}

uint64_t sub_1D43FE6D4()
{
  sub_1D42EA528();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D43FE6FC(uint64_t a1)
{
  uint64_t *v1;

  return sub_1D43FDBD0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1D43FE708()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D43FE72C()
{
  sub_1D42EA528();
  sub_1D42EA3B0();
  return swift_deallocObject();
}

uint64_t sub_1D43FE744()
{
  uint64_t v0;

  sub_1D42B8F98();
  swift_release();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D43FE784(void *a1, void *a2)
{
  uint64_t v2;

  return sub_1D443D904(a1, a2, *(uint64_t (**)(uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(void **)(v2 + 48), *(void (**)(void *, id))(v2 + 56), *(_QWORD *)(v2 + 64));
}

uint64_t sub_1D43FE7B4()
{
  uint64_t v0;

  sub_1D42B8F98();

  return swift_deallocObject();
}

void sub_1D43FE7E4()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  sub_1D42B6E24();
}

void sub_1D43FE80C()
{
  uint64_t v0;

  sub_1D42E69B0(*(void (**)(void))(v0 + 16));
}

void sub_1D43FE81C()
{
  sub_1D43FE304();
}

uint64_t sub_1D43FE828()
{
  sub_1D42EA528();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1D43FE850()
{
  uint64_t v0;

  sub_1D43FC834(*(_QWORD *)(v0 + 24));
  sub_1D42B6E24();
}

uint64_t sub_1D43FE8BC()
{
  return sub_1D451B2EC();
}

void sub_1D43FE8D8(uint64_t a1@<X8>)
{
  uint64_t v1;

}

uint64_t sub_1D43FE8F4()
{
  return swift_unknownObjectRelease_n();
}

uint64_t sub_1D43FE900()
{
  return sub_1D451B7C0();
}

uint64_t sub_1D43FE90C()
{
  return sub_1D451A470();
}

uint64_t sub_1D43FE914()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1D43FE920(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1D43D72EC(a1, a2, (uint64_t *)(v2 - 128));
}

uint64_t sub_1D43FE92C()
{
  return swift_release_n();
}

uint64_t sub_1D43FE938(uint64_t a1, double a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  void *v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id aBlock[7];

  v4 = v2;
  aBlock[6] = *(id *)MEMORY[0x1E0C80C00];
  v7 = (void *)v4[2];
  v8 = v4[3];
  ObjectType = swift_getObjectType();
  result = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, double))(*(_QWORD *)(v8 + 8) + 8))(a1, ObjectType, *(_QWORD *)(v8 + 8), a2);
  if (!v3)
  {
    v11 = qword_1EFE472D0;
    swift_unknownObjectRetain();
    if (v11 != -1)
      swift_once();
    if (byte_1EFEA7718 == 1)
    {
      if (qword_1EFE478B8 != -1)
        swift_once();
      if (byte_1EFEA7A60 == 1)
      {
        sub_1D43FF3C8();
        if (v11)
          return swift_unknownObjectRelease();
        v12 = sub_1D43FF3DC();
        v13 = sub_1D44FC83C(v12, v7);

        if ((v13 & 1) == 0)
        {
          v19 = (void *)sub_1D43FF3C8();
          v20 = objc_allocWithZone((Class)SNTunableDSPGraphHost);
          v21 = sub_1D43FF2D4(v19);
          v22 = (void *)v4[9];
          v4[9] = v21;

        }
      }
    }
    (*(void (**)(uint64_t, uint64_t))(v8 + 40))(ObjectType, v8);
    v14 = sub_1D43FF3DC();
    v15 = (void *)swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_1D43FF2B4;
    aBlock[5] = v15;
    aBlock[0] = (id)MEMORY[0x1E0C809B0];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_1D43FEF00;
    aBlock[3] = &unk_1E97B3638;
    v16 = _Block_copy(aBlock);
    swift_release();
    aBlock[0] = 0;
    LOBYTE(v14) = sub_1D4501228(v14, v7, v16, (uint64_t)aBlock);
    _Block_release(v16);

    v17 = aBlock[0];
    if ((v14 & 1) == 0)
    {
      v18 = v17;
      sub_1D4519AA4();

      swift_willThrow();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1D43FEBD8()
{
  uint64_t v0;

  if (!*(_BYTE *)(v0 + 80))
  {
    *(_BYTE *)(v0 + 80) = 1;
    (*(void (**)(_QWORD))(v0 + 56))(0);
  }
  sub_1D42B6E24();
}

void sub_1D43FEC08()
{
  uint64_t v0;

  if (!*(_BYTE *)(v0 + 80))
  {
    *(_BYTE *)(v0 + 80) = 2;
    (*(void (**)(void))(v0 + 56))();
  }
  sub_1D42B6E24();
}

unint64_t sub_1D43FEC34(unint64_t result)
{
  if (result >= 3)
    return 3;
  return result;
}

uint64_t sub_1D43FEC44(uint64_t result)
{
  return result;
}

void sub_1D43FEC4C()
{
  sub_1D43486E8();
}

void sub_1D43FEC54()
{
  sub_1D4348828();
}

unint64_t sub_1D43FEC5C@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1D43FEC34(*a1);
  *a2 = result;
  return result;
}

void sub_1D43FEC84(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = sub_1D43FEC44(*v1);
  sub_1D42B6E24();
}

uint64_t sub_1D43FECA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 32) = a7;
  *(_QWORD *)(v7 + 40) = a5;
  *(_QWORD *)(v7 + 48) = a6;
  *(_QWORD *)(v7 + 56) = a3;
  *(_BYTE *)(v7 + 80) = 0;
  *(_QWORD *)(v7 + 64) = a4;
  *(_QWORD *)(v7 + 72) = 0;
  return v7;
}

uint64_t sub_1D43FECC4(uint64_t a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D43FED6C((unint64_t)sub_1D43FF394, result, a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D43FED2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(a1 + 24);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 40))(ObjectType, v1);
}

unint64_t sub_1D43FED6C(unint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v5;
  uint64_t v6;
  uint64_t ObjectType;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;

  if (*(unsigned __int8 *)(v3 + 80) - 1 < 2)
    return result;
  v5 = (void *)((uint64_t (*)(void))result)();
  v6 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  MEMORY[0x1E0C80A78](ObjectType);
  result = (*(uint64_t (**)(void *, uint64_t, _QWORD))(v6 + 16))(v5, a3, sub_1D43FF3AC);
  v8 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = sub_1D451B5A4();
    result = swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_6;
LABEL_12:

    return swift_bridgeObjectRelease();
  }
  v9 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v9)
    goto LABEL_12;
LABEL_6:
  if (v9 >= 1)
  {
    v10 = 0;
    v11 = *(void (**)(uint64_t))(v3 + 40);
    do
    {
      if ((v8 & 0xC000000000000001) != 0)
      {
        v12 = MEMORY[0x1D825CD78](v10, v8);
      }
      else
      {
        v12 = *(_QWORD *)(v8 + 8 * v10 + 32);
        swift_unknownObjectRetain();
      }
      ++v10;
      v11(v12);
      swift_unknownObjectRelease();
    }
    while (v9 != v10);
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D43FEF00(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_1D43FEF3C(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  result = sub_1D43FEF64(a1, a2, a3, a4, *(id *)(a5 + 32));
  if (v5)
    return v7;
  return result;
}

uint64_t sub_1D43FEF64(uint64_t a1, int a2, int a3, uint64_t a4, id a5)
{
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v15;
  id v16[2];

  v16[1] = *(id *)MEMORY[0x1E0C80C00];
  v16[0] = 0;
  v6 = objc_msgSend(a5, sel_clientSampleTimeFromSampleTime_fromBox_error_, a1, a4, v16);
  v7 = v16[0];
  if (v6)
  {
    v8 = v6;
    v9 = v16[0];
    sub_1D43FF3E8();

    v16[0] = 0;
    v10 = objc_msgSend(a5, sel_clientSampleRateWithError_, v16);
    v7 = v16[0];
    if (v10)
    {
      v11 = v10;
      v12 = v16[0];
      v13 = (uint64_t)sub_1D43FF3E8();

      if (v13 < (uint64_t)0xFFFFFFFF80000000)
      {
        __break(1u);
      }
      else if (v13 <= 0x7FFFFFFF)
      {
        return sub_1D451B0A0();
      }
      __break(1u);
    }
  }
  v15 = v7;
  sub_1D4519AA4();

  return swift_willThrow();
}

uint64_t sub_1D43FF09C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v1 + 8) + 16))(ObjectType);
}

uint64_t sub_1D43FF0E0()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  swift_release();

  return v0;
}

uint64_t sub_1D43FF11C()
{
  sub_1D43FF0E0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SNAnalyzerHost()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for SNAnalyzerHost.SNAnalysisState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D43FF1A8 + 4 * byte_1D4539A65[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D43FF1DC + 4 * byte_1D4539A60[v4]))();
}

uint64_t sub_1D43FF1DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43FF1E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D43FF1ECLL);
  return result;
}

uint64_t sub_1D43FF1F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D43FF200);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D43FF204(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43FF20C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SNAnalyzerHost.SNAnalysisState()
{
  return &type metadata for SNAnalyzerHost.SNAnalysisState;
}

unint64_t sub_1D43FF22C()
{
  unint64_t result;

  result = qword_1EFE50868;
  if (!qword_1EFE50868)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4539B40, &type metadata for SNAnalyzerHost.SNAnalysisState);
    atomic_store(result, &qword_1EFE50868);
  }
  return result;
}

uint64_t sub_1D43FF268(uint64_t a1, double a2)
{
  return sub_1D43FE938(a1, a2);
}

uint64_t sub_1D43FF27C()
{
  return sub_1D43FF09C();
}

uint64_t sub_1D43FF290()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D43FF2B4(uint64_t a1)
{
  return sub_1D43FECC4(a1);
}

uint64_t sub_1D43FF2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D43FF2CC()
{
  return swift_release();
}

id sub_1D43FF2D4(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x1E0C80C00];
  v7[0] = 0;
  v3 = objc_msgSend(v1, sel_initWithGraph_error_, a1, v7);
  if (v3)
  {
    v4 = v7[0];
  }
  else
  {
    v5 = v7[0];
    sub_1D4519AA4();

    swift_willThrow();
  }

  return v3;
}

uint64_t sub_1D43FF394()
{
  uint64_t v0;

  return sub_1D43FED2C(v0);
}

uint64_t sub_1D43FF3AC(uint64_t a1, int a2, int a3)
{
  uint64_t v3;

  return sub_1D43FEF3C(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_1D43FF3C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_1D43FF3DC()
{
  return objc_opt_self();
}

id sub_1D43FF3E8()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 3016));
}

uint64_t sub_1D43FF3F4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D42B740C();
  v2 = *v0;
  v3 = v0[1];
  v4 = sub_1D42B8DB4();
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v3;
  v5 = sub_1D42B8DB4();
  *(_QWORD *)(v5 + 16) = &unk_1EFE50920;
  *(_QWORD *)(v5 + 24) = v4;
  v17 = sub_1D42B28FC(&qword_1EFE50938);
  v18 = sub_1D4401164(&qword_1EFE50940, &qword_1EFE50938, (uint64_t)&off_1E97AEF20);
  v15 = &unk_1EFE50930;
  v16 = v5;
  sub_1D42BE934();
  sub_1D430C608();
  swift_retain();
  swift_retain();
  sub_1D44014B0();
  swift_release();
  sub_1D42B5400((uint64_t)&v15);
  if (v1)
  {
    sub_1D4368C0C();
    return swift_release();
  }
  else
  {
    swift_release();
    swift_release();
    v6 = v0[2];
    v7 = v0[3];
    v8 = sub_1D42B8DB4();
    *(_QWORD *)(v8 + 16) = v6;
    *(_QWORD *)(v8 + 24) = v7;
    v9 = sub_1D42B28FC(&qword_1EFE50950);
    v17 = v9;
    v10 = sub_1D4401164(&qword_1EFE50958, &qword_1EFE50950, (uint64_t)&off_1E97ACAD0);
    v18 = v10;
    v15 = &unk_1EFE50948;
    v16 = v8;
    sub_1D42BE934();
    sub_1D430C608();
    swift_retain();
    sub_1D44014B0();
    swift_release();
    sub_1D42B5400((uint64_t)&v15);
    swift_release();
    v13 = v0[4];
    v12 = v0[5];
    v14 = sub_1D42B8DB4();
    *(_QWORD *)(v14 + 16) = v13;
    *(_QWORD *)(v14 + 24) = v12;
    v17 = v9;
    v18 = v10;
    v15 = &unk_1EFE50960;
    v16 = v14;
    sub_1D42BE934();
    swift_retain();
    sub_1D430C608();
    sub_1D44014B0();
    swift_release();
    sub_1D42B5400((uint64_t)&v15);
    return sub_1D4368C0C();
  }
}

uint64_t sub_1D43FF600(uint64_t *a1, int *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v3 = *a1;
  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1D431B308;
  return v6(v3);
}

uint64_t sub_1D43FF660(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 64) = a1;
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 72) = v2;
  v3 = sub_1D43AC280(v2);
  return sub_1D43FF71C(v3, v4);
}

uint64_t sub_1D43FF6C4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  uint64_t v7;

  v2 = *v1;
  v7 = *v1;
  sub_1D42E3E84(&v7);
  swift_task_dealloc();
  if (!v0)
  {
    v3 = *(_OWORD **)(v2 + 64);
    v4 = *(_OWORD *)(v2 + 16);
    v5 = *(_OWORD *)(v2 + 48);
    v3[1] = *(_OWORD *)(v2 + 32);
    v3[2] = v5;
    *v3 = v4;
  }
  return sub_1D42B8ED4((uint64_t (*)(void))v1[1]);
}

uint64_t sub_1D43FF71C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v2[2] = a1;
  v2[3] = a2;
  v3 = (_QWORD *)swift_task_alloc();
  v2[4] = v3;
  *v3 = v2;
  v3[1] = sub_1D43FF768;
  return sub_1D4367B88();
}

uint64_t sub_1D43FF768(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 40) = a1;
  *(_QWORD *)(v3 + 48) = v1;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43FF7C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  char *v4;

  v4 = (char *)&dword_1EFE4B260 + dword_1EFE4B260;
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  v2 = (uint64_t (*)(void))sub_1D4401488(v1, (uint64_t)sub_1D43FF81C, (uint64_t)v4);
  return sub_1D42B8DC0(v2);
}

uint64_t sub_1D43FF81C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1D42E3EE0();
  sub_1D42E3E84(v4);
  v3[8] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v3[9] = v0;
    v3[10] = v2;
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D43FF878()
{
  uint64_t v0;
  int8x16_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v4)(void);
  char *v6;

  v1 = (int8x16_t *)sub_1D42B6F40();
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 72), *(int8x16_t *)(v0 + 72), 8uLL);
  sub_1D42B8F48();
  v2 = sub_1D42B6F40();
  *(_QWORD *)(v0 + 88) = v2;
  *(_QWORD *)(v2 + 16) = &unk_1EFE508F0;
  *(_QWORD *)(v2 + 24) = v1;
  v6 = (char *)&dword_1EFE4B230 + dword_1EFE4B230;
  sub_1D42BE934();
  sub_1D42B8F24();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v3;
  v4 = (uint64_t (*)(void))sub_1D4401488(v3, (uint64_t)sub_1D43FF91C, (uint64_t)v6);
  return sub_1D42E3A2C(v4);
}

uint64_t sub_1D43FF91C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1D42E3EE0();
  sub_1D42E3E84(v4);
  v3[13] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v3[14] = v0;
    v3[15] = v2;
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D43FF978()
{
  uint64_t v0;

  sub_1D43E1590();
  sub_1D43AC294();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43FF9A8()
{
  int8x16_t *v0;
  int8x16_t *v1;
  _QWORD *v2;
  uint64_t (*v3)(void);
  char *v5;

  v1 = (int8x16_t *)sub_1D42B6F40();
  v0[8].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[7], v0[7], 8uLL);
  sub_1D42B8F48();
  v5 = (char *)&dword_1EFE4B230 + dword_1EFE4B230;
  sub_1D42BE934();
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[8].i64[1] = (uint64_t)v2;
  v3 = (uint64_t (*)(void))sub_1D4401488(v2, (uint64_t)sub_1D43FFA30, (uint64_t)v5);
  return sub_1D42E3A2C(v3);
}

uint64_t sub_1D43FFA30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1D42E3EE0();
  sub_1D42E3E84(v4);
  v3[18] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v3[19] = v0;
    v3[20] = v2;
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D43FFA8C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D43AC294();
  sub_1D42B8F48();
  v1 = *(_QWORD *)(v0 + 104);
  swift_release();
  sub_1D43E1590();
  if (!v1)
    swift_release();
  return sub_1D42B8ED4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43FFADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int8x16_t *v4;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD **)(v0 + 16);
  v4 = (int8x16_t *)sub_1D42B6F40();
  v4[1] = vextq_s8(*(int8x16_t *)(v0 + 152), *(int8x16_t *)(v0 + 152), 8uLL);
  sub_1D42BE93C();
  sub_1D42B8F48();
  sub_1D43E1590();
  swift_release();
  *v3 = &unk_1EFE50900;
  v3[1] = v2;
  v3[2] = &unk_1EFE50908;
  v3[3] = v1;
  v3[4] = &unk_1EFE50910;
  v3[5] = v4;
  return sub_1D42B8ED4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43FFB80()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  sub_1D42BE93C();
  sub_1D42B8F48();
  v1 = *(_QWORD *)(v0 + 104);
  swift_release();
  sub_1D42CFC14();
  sub_1D42BE93C();
  if (!v1)
    sub_1D42BE93C();
  return sub_1D42B8ED4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43FFBEC(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_1D43FFC50;
  return v5(v2 + 16);
}

uint64_t sub_1D43FFC50()
{
  uint64_t v0;

  sub_1D430C324();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43FFC84(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 64) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 72) = v2;
  v3 = sub_1D43AC280(v2);
  return sub_1D43FF660(v3);
}

uint64_t sub_1D43FFCD4()
{
  return sub_1D43FF3F4();
}

uint64_t sub_1D43FFCE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __int128 v13[2];

  sub_1D42B28FC(&qword_1EFE4DC70);
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42CB210();
  swift_defaultActor_initialize();
  sub_1D42E2D8C(a1, v3 + 112);
  sub_1D44014F4();
  sub_1D44014D0();
  v8 = (_QWORD *)sub_1D42B6F40();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = a2;
  v8[5] = a3;
  sub_1D42B8F24();
  sub_1D444D41C();
  v10 = v9;
  *(_QWORD *)(v3 + 152) = v9;
  sub_1D44014D0();
  sub_1D42E2D8C(a1, (uint64_t)v13);
  v11 = (_QWORD *)sub_1D42B6F40();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = v10;
  sub_1D42E33E0(v13, (uint64_t)(v11 + 5));
  sub_1D4307010();
  sub_1D444D358();
  swift_release();
  sub_1D42CFC14();
  swift_release();
  sub_1D42B5400(a1);
  return v3;
}

uint64_t sub_1D43FFE28(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  *(_QWORD *)(v4 + 16) = a1;
  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v5;
  *v5 = v4;
  v5[1] = sub_1D43FFE80;
  return v7();
}

uint64_t sub_1D43FFE80(uint64_t a1)
{
  sub_1D440141C(a1);
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43FFEAC()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 32);
  return sub_1D431B360();
}

uint64_t sub_1D43FFEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  *(_QWORD *)(v5 + 24) = a5;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 32) = v6;
  sub_1D42B28FC(&qword_1EFE4B750);
  *v6 = v5;
  v6[1] = sub_1D43FFF34;
  return sub_1D451AB48();
}

uint64_t sub_1D43FFF34()
{
  sub_1D430C324();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43FFF70()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);

  if (v1)
  {
    sub_1D42B5528(*(_QWORD **)(v0 + 24), *(_QWORD *)(*(_QWORD *)(v0 + 24) + 24));
    sub_1D451A17C();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D43FFFC8()
{
  uint64_t v0;

  sub_1D42B28FC(&qword_1EFE4B750);
  sub_1D451AB3C();
  sub_1D42B5528((_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
  sub_1D451A17C();
  sub_1D42B5400(v0 + 112);
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1D4400058()
{
  sub_1D43FFFC8();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for CombineSubscriptionToXPCAdapterImpl()
{
  return objc_opt_self();
}

uint64_t sub_1D4400090(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return sub_1D438E840();
}

_QWORD *sub_1D44000A4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *result;

  v1 = *(_QWORD *)(v0 + 16);
  result = sub_1D44014E4(*(_QWORD *)(v0 + 24));
  if (v1 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1D4401518();
    return (_QWORD *)sub_1D42B8ED4(*(uint64_t (**)(void))(v0 + 8));
  }
  return result;
}

uint64_t sub_1D44000F0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return sub_1D438E840();
}

uint64_t sub_1D4400104()
{
  uint64_t v0;

  sub_1D44014E4(*(_QWORD *)(v0 + 16));
  sub_1D451A1B8();
  sub_1D4401518();
  return sub_1D42E3A2C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4400140()
{
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_1D440015C(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  sub_1D42B28FC(&qword_1EFE4DC70);
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v10);
  sub_1D42CB210();
  type metadata accessor for AsyncDispatchQueue();
  swift_allocObject();
  *(_QWORD *)(v5 + 64) = sub_1D43EBA48();
  v11 = a1[1];
  *(_OWORD *)(v5 + 16) = *a1;
  *(_OWORD *)(v5 + 32) = v11;
  *(_OWORD *)(v5 + 48) = a1[2];
  type metadata accessor for CombineSubscriptionFromXPCAdapter.AsyncState();
  v12 = swift_allocObject();
  sub_1D42BE934();
  sub_1D430C608();
  swift_retain();
  swift_defaultActor_initialize();
  *(_BYTE *)(v12 + 112) = 0;
  *(_QWORD *)(v5 + 80) = v12;
  sub_1D44014F4();
  sub_1D44014BC();
  v13 = (_QWORD *)sub_1D42B6F40();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = a2;
  v13[5] = a3;
  sub_1D42B8F24();
  sub_1D444D41C();
  v15 = v14;
  *(_QWORD *)(v5 + 72) = v14;
  v16 = *(_QWORD *)(v5 + 80);
  sub_1D44014BC();
  v17 = (_QWORD *)sub_1D42B6F40();
  v17[2] = 0;
  v17[3] = 0;
  v17[4] = v15;
  v17[5] = v16;
  v17[6] = a4;
  v17[7] = a5;
  sub_1D4307010();
  sub_1D4307010();
  sub_1D444D358();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1D42B8F48();
  sub_1D42CFC14();
  return v5;
}

uint64_t sub_1D4400314(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  *(_QWORD *)(v4 + 16) = a1;
  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v5;
  *v5 = v4;
  v5[1] = sub_1D440036C;
  return v7();
}

uint64_t sub_1D440036C(uint64_t a1)
{
  sub_1D440141C(a1);
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4400398()
{
  uint64_t v0;
  char v1;
  void *v2;

  v1 = sub_1D451AB54();
  v2 = *(void **)(v0 + 32);
  if ((v1 & 1) != 0)
  {

    v2 = 0;
  }
  **(_QWORD **)(v0 + 16) = v2;
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D44003D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v8;

  v7[4] = a6;
  v7[5] = a7;
  v7[3] = a5;
  v8 = (_QWORD *)swift_task_alloc();
  v7[6] = v8;
  sub_1D42B28FC(&qword_1EFE4B750);
  *v8 = v7;
  v8[1] = sub_1D4400454;
  return sub_1D451AB48();
}

uint64_t sub_1D4400454()
{
  sub_1D430C324();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4400490()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 56) = v1;
  if (v1)
    return sub_1D438E840();
  else
    return sub_1D431B360();
}

uint64_t sub_1D44004B4()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 72) = *(_BYTE *)(*(_QWORD *)(v0 + 24) + 112);
  return sub_1D438E840();
}

uint64_t sub_1D44004D0()
{
  uint64_t v0;
  void *v1;
  int *v3;
  id v4;
  _QWORD *v5;
  uint64_t (*v6)(void);

  v1 = *(void **)(v0 + 56);
  if ((*(_BYTE *)(v0 + 72) & 1) != 0)
  {

    return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v3 = *(int **)(v0 + 32);
    v4 = v1;
    v6 = (uint64_t (*)(void))((char *)v3 + *v3);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v5;
    *v5 = v0;
    v5[1] = sub_1D4400548;
    return sub_1D438C464(*(_QWORD *)(v0 + 56), v6);
  }
}

uint64_t sub_1D4400548()
{
  void *v0;
  uint64_t v1;
  void *v2;

  v2 = *(void **)(*(_QWORD *)v1 + 56);
  sub_1D430C324();

  if (v0)
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D44005A8()
{
  uint64_t v0;

  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D44005D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;

  sub_1D42B28FC(&qword_1EFE4DC70);
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v1);
  sub_1D42CB210();
  v4 = v3 - v2;
  v5 = *(_QWORD *)(v0 + 16);
  v6 = *(_QWORD *)(v0 + 56);
  sub_1D42B28FC(&qword_1EFE4B750);
  v10 = *(_OWORD *)(v0 + 24);
  v11 = *(_OWORD *)(v0 + 40);
  sub_1D451AB3C();
  v7 = sub_1D44014F4();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v4, 1, 1, v7);
  v8 = sub_1D42B6F40();
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v8 + 24) = 0;
  *(_QWORD *)(v8 + 32) = v5;
  *(_OWORD *)(v8 + 40) = v10;
  *(_OWORD *)(v8 + 56) = v11;
  *(_QWORD *)(v8 + 72) = v6;
  swift_retain();
  sub_1D44014A8();
  sub_1D42B8F24();
  sub_1D44C3524(v4, (uint64_t)&unk_1EFE50990, v8);
  swift_release();
  sub_1D4401504();
  sub_1D42CFC14();
  sub_1D42BE93C();
  sub_1D44014FC();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1D4400704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))(**(int **)(a4 + 32) + *(_QWORD *)(a4 + 32));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_1D431B308;
  return v7();
}

uint64_t sub_1D4400758()
{
  sub_1D44005D0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CombineSubscriptionFromXPCAdapter()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for CombineSubscriptionFromXPCAdapter.AsyncState()
{
  return objc_opt_self();
}

uint64_t destroy for XPCSubscription()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for XPCSubscription(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for XPCSubscription(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for XPCSubscription(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for XPCSubscription()
{
  return &type metadata for XPCSubscription;
}

uint64_t sub_1D4400928(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 56);
  v5 = sub_1D42B6F40();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(v5 + 32) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(v5 + 48) = v6;
  *(_QWORD *)(v5 + 64) = v4;
  sub_1D44014A8();
  sub_1D44014A8();
  sub_1D42B8F24();
  sub_1D4401524((uint64_t)&unk_1EFE508A0);
  return swift_release();
}

uint64_t sub_1D44009B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1D44009C8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t (*v5)(void);

  sub_1D451A1B8();
  result = sub_1D440150C();
  v2 = *(_QWORD *)(v0 + 16);
  if ((result & 1) == 0)
  {
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    if (v2)
    {
      v3 = (_QWORD *)sub_1D4401444();
      *(_QWORD *)(v0 + 32) = v3;
      *v3 = v0;
      v3[1] = sub_1D4400A74;
      return sub_1D438C464(*(_QWORD *)(v0 + 16), v5);
    }
  }
  sub_1D451A1B8();
  if ((sub_1D440150C() & 1) == 0)
    return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
  v4 = (_QWORD *)sub_1D4401444();
  *(_QWORD *)(v0 + 48) = v4;
  *v4 = v0;
  v4[1] = sub_1D4400AD8;
  return sub_1D42B8DC0(v5);
}

uint64_t sub_1D4400A74()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D4401458();
  if (!v0)
    return sub_1D42B8DC0(*(uint64_t (**)(void))(v1 + 8));
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4400AB0()
{
  uint64_t v0;

  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4400AD8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    return sub_1D42B8DC0(*(uint64_t (**)(void))(v2 + 8));
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4400B30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = sub_1D42B6F40();
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  v6 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v4 + 48) = v6;
  *(_QWORD *)(v4 + 64) = v3;
  swift_retain();
  sub_1D44014A8();
  sub_1D44014A8();
  sub_1D42B8F24();
  sub_1D4401524((uint64_t)&unk_1EFE508B0);
  return swift_release();
}

uint64_t sub_1D4400BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1D4400BE0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 112) = 1;
  v1 = (_QWORD *)sub_1D4401444();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_1D4400A74;
  return sub_1D42B8DC0(v3);
}

uint64_t sub_1D4400C28(uint64_t a1)
{
  return sub_1D4400928(a1);
}

uint64_t sub_1D4400C48()
{
  return sub_1D4400B30();
}

uint64_t sub_1D4400C68()
{
  return sub_1D4400CB0(&qword_1EFE50888, (uint64_t)&unk_1D4539CBC);
}

uint64_t sub_1D4400C8C()
{
  return sub_1D4400CB0(&qword_1EFE50890, (uint64_t)&unk_1D4539C94);
}

uint64_t sub_1D4400CB0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for CombineSubscriptionFromXPCAdapter();
    result = MEMORY[0x1D825E41C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D4400CEC()
{
  sub_1D42E4010();
  swift_release();
  sub_1D44014FC();
  return swift_deallocObject();
}

uint64_t sub_1D4400D18()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D430C490(v1, (uint64_t)sub_1D431B308);
  return sub_1D44009B0(v2, v3);
}

uint64_t sub_1D4400D60()
{
  swift_release();
  sub_1D42E4010();
  swift_release();
  sub_1D44014FC();
  return swift_deallocObject();
}

uint64_t sub_1D4400D94()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D430C490(v1, (uint64_t)sub_1D431B308);
  return sub_1D4400BC4(v2, v3);
}

uint64_t sub_1D4400DE0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D44013FC(v1);
  return sub_1D43FFE28(v2, v3, v4, v5);
}

uint64_t sub_1D4400E3C()
{
  uint64_t v0;

  sub_1D431B468();
  sub_1D42E4010();
  sub_1D42B5400(v0 + 40);
  return swift_deallocObject();
}

uint64_t sub_1D4400E68()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D44013FC(v1);
  return sub_1D43FFEBC(v2, v3, v4, v5, v6);
}

uint64_t sub_1D4400EC8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a2;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1D4319390;
  return sub_1D44541A8(v3);
}

uint64_t sub_1D4400F2C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D431B308;
  return sub_1D43095B0(v2);
}

uint64_t sub_1D4400F90()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D4400FB4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)sub_1D430C650();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D430C3F8(v1, (uint64_t)sub_1D431B308);
  return sub_1D430C3D0(v2, v3, v4, v5);
}

uint64_t sub_1D4400FF8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)sub_1D430C650();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D430C3F8(v1, (uint64_t)sub_1D431B308);
  return sub_1D430C3D0(v2, v3, v4, v5);
}

uint64_t sub_1D440103C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  sub_1D430C490(v1, (uint64_t)sub_1D431B308);
  return sub_1D440149C();
}

uint64_t sub_1D4401078()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)sub_1D430C650();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D430C3F8(v1, (uint64_t)sub_1D431B308);
  return sub_1D430C3D0(v2, v3, v4, v5);
}

uint64_t sub_1D44010BC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  sub_1D42E3BE8();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_1D42B8F00(v1);
  *v2 = v0;
  v2[1] = sub_1D431B308;
  v3 = sub_1D430C5BC();
  return v4(v3);
}

uint64_t sub_1D4401120()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1D42E3BE8();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_1D42B8F00(v1);
  *v2 = v0;
  v2[1] = sub_1D431B308;
  sub_1D430C5BC();
  return sub_1D4401478();
}

uint64_t sub_1D4401164(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = sub_1D42B8B10(a2);
    v7[0] = a3;
    v7[1] = &off_1E97ACAE0;
    result = MEMORY[0x1D825E41C](&unk_1D45287F8, v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D44011C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1D42E3BE8();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_1D42B8F00(v1);
  *v2 = v0;
  v2[1] = sub_1D4319390;
  sub_1D430C5BC();
  return sub_1D4401478();
}

uint64_t sub_1D4401208()
{
  sub_1D431B468();
  sub_1D42B8F2C();
  return swift_deallocObject();
}

uint64_t sub_1D440122C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D44013FC(v1);
  return sub_1D4400314(v2, v3, v4, v5);
}

uint64_t sub_1D4401288()
{
  sub_1D431B468();
  sub_1D42E4010();
  sub_1D42B8F2C();
  sub_1D4401504();
  return swift_deallocObject();
}

uint64_t sub_1D44012B4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = swift_task_alloc();
  v11 = (_QWORD *)sub_1D42B8F00(v10);
  *v11 = v2;
  v11[1] = sub_1D431B308;
  return sub_1D44003D8(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1D440133C()
{
  sub_1D431B468();
  sub_1D42B8F2C();
  sub_1D4401504();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D440136C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = swift_task_alloc();
  v7 = (_QWORD *)sub_1D42B8F00(v6);
  *v7 = v2;
  v7[1] = sub_1D431B308;
  return sub_1D4400704(a1, v4, v5, v1 + 32);
}

uint64_t sub_1D44013FC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_1D440141C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 - 8) = *v1;
  *(_QWORD *)(v2 - 8) = *v1;
  *(_QWORD *)(v3 + 32) = a1;
  return swift_task_dealloc();
}

uint64_t sub_1D4401444()
{
  return swift_task_alloc();
}

uint64_t sub_1D4401458()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 40) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1D4401478()
{
  return sub_1D42F98BC();
}

uint64_t sub_1D4401488@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return a3;
}

uint64_t sub_1D440149C()
{
  return sub_1D42F9938();
}

uint64_t sub_1D44014A8()
{
  return swift_retain();
}

void sub_1D44014B0()
{
  sub_1D42B7A94();
}

uint64_t sub_1D44014BC()
{
  uint64_t v0;
  uint64_t v1;

  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v0, 1, 1, v1);
}

uint64_t sub_1D44014D0()
{
  uint64_t v0;
  uint64_t v1;

  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v0, 1, 1, v1);
}

_QWORD *sub_1D44014E4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D42B5528((_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 136));
}

uint64_t sub_1D44014F4()
{
  return sub_1D451AAC4();
}

uint64_t sub_1D44014FC()
{
  return swift_release();
}

uint64_t sub_1D4401504()
{
  return swift_release();
}

uint64_t sub_1D440150C()
{
  return sub_1D451A1A0();
}

uint64_t sub_1D4401518()
{
  return sub_1D451A1DC();
}

uint64_t sub_1D4401524(uint64_t a1)
{
  uint64_t v1;

  return sub_1D43EB978(a1, v1);
}

uint64_t sub_1D4401530()
{
  unint64_t v0;

  v0 = sub_1D451B604();
  swift_bridgeObjectRelease();
  if (v0 >= 9)
    return 9;
  else
    return v0;
}

void sub_1D4401578(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  id v29;
  id v30;
  double v31;
  id v32;
  id v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _BYTE *v40;
  id v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  unsigned int v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53[16];
  unint64_t *v54;
  _QWORD *v55;
  unint64_t v56;
  unint64_t v57;

  v5 = sub_1D451B13C();
  v6 = *(_QWORD *)(v5 - 8);
  v50 = v5;
  v51 = v6;
  MEMORY[0x1E0C80A78](v5);
  v49 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = 44;
  v57 = 0xE100000000000000;
  v54 = &v56;
  swift_bridgeObjectRetain();
  v8 = sub_1D4403EFC(0x7FFFFFFFFFFFFFFFLL, 1u, sub_1D4404654, (uint64_t)v53, a1, a2);
  v9 = *(_QWORD *)(v8 + 16);
  v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v46[0] = v2;
  if (v9)
  {
    v56 = MEMORY[0x1E0DEE9D8];
    sub_1D451B49C();
    v48 = sub_1D42E9D88(0, (unint64_t *)&qword_1EFE4BE00);
    v47 = *MEMORY[0x1E0CB2398];
    v46[1] = v8;
    v11 = (uint64_t *)(v8 + 56);
    v13 = v49;
    v12 = v50;
    while (1)
    {
      v52 = v9;
      v15 = *(v11 - 3);
      v14 = *(v11 - 2);
      v16 = *(v11 - 1);
      v17 = *v11;
      sub_1D43F8AC8();
      MEMORY[0x1D825C07C](v15, v14, v16, v17);
      swift_bridgeObjectRetain();
      v18 = sub_1D432E03C();
      v19 = v51;
      (*(void (**)(char *, _QWORD, uint64_t))(v51 + 104))(v13, v47, v12);
      v20 = sub_1D451B130();
      v22 = v21;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v13, v12);
      if ((v22 & 1) != 0 || !objc_msgSend(v18, sel_isAtEnd))
        break;
      v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, *(double *)&v20);
      sub_1D42BE8B4();

      if (!v23)
        goto LABEL_25;
      sub_1D4347994();
      sub_1D451B484();
      v24 = *(_QWORD *)(v56 + 16);
      sub_1D451B4A8();
      sub_1D451B4B4();
      sub_1D451B490();
      v11 += 4;
      v9 = v52 - 1;
      if (v52 == 1)
      {
        sub_1D4404858();
        v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        goto LABEL_9;
      }
    }
    sub_1D42BE8B4();

LABEL_25:
    sub_1D42B7F2C();
    sub_1D42B6D0C();
    *v40 = 0;
    sub_1D4312028();
    sub_1D4347994();
    sub_1D4404858();
    swift_release();
    goto LABEL_31;
  }
  sub_1D42BE8B4();
  v24 = MEMORY[0x1E0DEE9D8];
LABEL_9:
  if (v24 >> 62)
    goto LABEL_29;
  v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v25)
  {
LABEL_30:
    sub_1D42BE8B4();
LABEL_31:
    sub_1D42CB3F8();
    return;
  }
  while (1)
  {
    v55 = v10;
    v10 = &v55;
    sub_1D42C7654();
    if (v25 < 0)
      break;
    v26 = 0;
    v27 = v55;
    v28 = v24 & 0xC000000000000001;
    v52 = v24;
    while (v25 != v26)
    {
      if (v28)
        v29 = (id)MEMORY[0x1D825CD78](v26, v24);
      else
        v29 = *(id *)(v24 + 8 * v26 + 32);
      v30 = v29;
      objc_msgSend(v30, sel_doubleValue);
      v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v31);
      v33 = objc_msgSend(v30, sel_longLongValue);
      if (v33 != objc_msgSend(v32, sel_longLongValue)
        || (sub_1D4404840(), v35 = v34, objc_msgSend(v32, sel_doubleValue), v35 != v36))
      {

LABEL_27:
        sub_1D42DCEE8();
        v56 = 0;
        v57 = 0xE000000000000000;
        sub_1D451B400();
        swift_bridgeObjectRelease();
        v56 = 0xD000000000000015;
        v57 = 0x80000001D4551CC0;
        v41 = objc_msgSend(v30, sel_description);
        sub_1D451A6EC();

        sub_1D451A794();
        sub_1D42CB338();
        v42 = v57;
        sub_1D430740C();
        sub_1D43EC59C(v43, v44, 1, 0, v45, v42);
        sub_1D42CB8F4();
        swift_willThrow();
        swift_bridgeObjectRelease();
        sub_1D42BE998();

        goto LABEL_31;
      }
      v10 = objc_msgSend(v30, sel_isEqual_, v32);

      if (!(_DWORD)v10)
        goto LABEL_27;
      sub_1D4404840();
      v38 = v37;

      v55 = v27;
      v39 = v27[2];
      if (v39 >= v27[3] >> 1)
      {
        v10 = &v55;
        sub_1D42C7654();
        v27 = v55;
      }
      ++v26;
      v27[2] = v39 + 1;
      v27[v39 + 4] = v38;
      v24 = v52;
      if (v25 == v26)
        goto LABEL_30;
    }
    __break(1u);
LABEL_29:
    swift_bridgeObjectRetain();
    v25 = sub_1D451B5A4();
    sub_1D42BE8B4();
    if (!v25)
      goto LABEL_30;
  }
  __break(1u);
}

uint64_t sub_1D4401A80(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  double v9;
  float v10;
  uint64_t v12;

  sub_1D4401578(a1, a2);
  if (!v3)
  {
    v5 = v4;
    v6 = *(_QWORD *)(v4 + 16);
    if (v6)
    {
      v12 = MEMORY[0x1E0DEE9D8];
      sub_1D42C7688();
      v7 = 0;
      v2 = v12;
      v8 = *(_QWORD *)(v12 + 16);
      do
      {
        v9 = *(double *)(v5 + 8 * v7 + 32);
        if (v8 >= *(_QWORD *)(v12 + 24) >> 1)
          sub_1D42C7688();
        ++v7;
        v10 = v9;
        *(_QWORD *)(v12 + 16) = v8 + 1;
        *(float *)(v12 + 4 * v8++ + 32) = v10;
      }
      while (v6 != v7);
      sub_1D42CB208();
    }
    else
    {
      sub_1D42CB208();
      return MEMORY[0x1E0DEE9D8];
    }
  }
  return v2;
}

void sub_1D4401B80(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D4401BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  sub_1D44046D8(a1, a2, a3, a4, a5);
  if (sub_1D44046A4())
  {
    result = swift_bridgeObjectRelease();
    *v5 = v7;
    v5[1] = v8;
  }
  else
  {
    sub_1D42FBCD0();
    sub_1D42B6D0C();
    return sub_1D4312028();
  }
  return result;
}

uint64_t sub_1D4401DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  char v17;
  int64_t v18;
  uint64_t v19;
  __int128 v20;
  _OWORD v21[2];
  _QWORD v22[2];
  __int128 v23;
  uint64_t v24;

  v24 = a1;
  v19 = a2 + 64;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  if (!v6)
    goto LABEL_6;
LABEL_4:
  v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v11 = v10 | (v9 << 6);
LABEL_5:
  v12 = *(_QWORD *)(a2 + 56);
  v13 = (_QWORD *)(*(_QWORD *)(a2 + 48) + 16 * v11);
  v14 = v13[1];
  *(_QWORD *)&v20 = *v13;
  *((_QWORD *)&v20 + 1) = v14;
  sub_1D42B294C(v12 + 32 * v11, (uint64_t)v21);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1D44045E4((uint64_t)&v20, (uint64_t)v22);
    if (!v22[1])
      return sub_1D42B8F48();
    sub_1D42B293C(&v23, &v20);
    v17 = sub_1D4401530();
    if (v17 != 9)
    {
      sub_1D4401B80(v24, v17);
      if (v2)
      {
        sub_1D42B5400((uint64_t)&v20);
        return sub_1D42B8F48();
      }
    }
    result = sub_1D42B5400((uint64_t)&v20);
    if (v6)
      goto LABEL_4;
LABEL_6:
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v15 < v7)
    {
      v16 = *(_QWORD *)(v19 + 8 * v15);
      if (v16)
        goto LABEL_9;
      v9 += 2;
      if (v15 + 1 >= v7)
      {
        v9 = v15;
        goto LABEL_14;
      }
      v16 = *(_QWORD *)(v19 + 8 * v9);
      if (v16)
      {
        ++v15;
LABEL_9:
        v6 = (v16 - 1) & v16;
        v11 = __clz(__rbit64(v16)) + (v15 << 6);
        v9 = v15;
        goto LABEL_5;
      }
      if (v15 + 2 < v7)
        break;
    }
LABEL_14:
    v6 = 0;
    memset(v21, 0, sizeof(v21));
    v20 = 0u;
  }
  v16 = *(_QWORD *)(v19 + 8 * (v15 + 2));
  if (v16)
  {
    v15 += 2;
    goto LABEL_9;
  }
  v18 = v15 + 3;
  if (v15 + 3 >= v7)
  {
    v9 = v15 + 2;
    goto LABEL_14;
  }
  v16 = *(_QWORD *)(v19 + 8 * v18);
  if (v16)
  {
    v15 += 3;
    goto LABEL_9;
  }
  while (1)
  {
    v15 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v15 >= v7)
    {
      v9 = v7 - 1;
      goto LABEL_14;
    }
    v16 = *(_QWORD *)(v19 + 8 * v15);
    ++v18;
    if (v16)
      goto LABEL_9;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1D440201C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  id v3;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  if (qword_1EFE48ED0 != -1)
    swift_once();
  v2 = xmmword_1EFEA7880;
  if ((byte_1EFEA78A8 & 1) != 0)
  {
    v3 = (id)xmmword_1EFEA7880;
    sub_1D42B28FC(&qword_1EFE49BB0);
    return swift_willThrowTypedImpl();
  }
  else
  {
    v6 = DWORD2(xmmword_1EFEA7880);
    v5 = qword_1EFEA7890;
    v7 = qword_1EFEA7898;
    v8 = qword_1EFEA78A0;
    *(_QWORD *)a1 = 0x6F696475615F6E69;
    *(_QWORD *)(a1 + 8) = 0xE800000000000000;
    *(_QWORD *)(a1 + 16) = 0x65746174735F6E69;
    *(_QWORD *)(a1 + 24) = 0xE800000000000000;
    strcpy((char *)(a1 + 32), "out_features");
    *(_BYTE *)(a1 + 45) = 0;
    *(_WORD *)(a1 + 46) = -5120;
    *(_QWORD *)(a1 + 48) = 0x746174735F74756FLL;
    *(_QWORD *)(a1 + 56) = 0xE900000000000065;
    *(_QWORD *)(a1 + 64) = v2;
    *(_DWORD *)(a1 + 72) = v6;
    *(_QWORD *)(a1 + 80) = v5;
    *(_QWORD *)(a1 + 88) = v7;
    *(_QWORD *)(a1 + 96) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1D4402154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  __int128 v12;
  _BYTE v13[104];
  _BYTE __src[104];

  result = sub_1D440201C((uint64_t)__src);
  if (!v2)
  {
    memcpy(v13, __src, sizeof(v13));
    result = sub_1D4401DD8((uint64_t)v13, a1);
    v6 = *(_OWORD *)&v13[16];
    v7 = *(_OWORD *)&v13[32];
    v8 = *(_OWORD *)&v13[48];
    v9 = *(_QWORD *)&v13[64];
    v10 = *(_DWORD *)&v13[72];
    v11 = *(_QWORD *)&v13[96];
    v12 = *(_OWORD *)&v13[80];
    *(_OWORD *)a2 = *(_OWORD *)v13;
    *(_OWORD *)(a2 + 16) = v6;
    *(_OWORD *)(a2 + 32) = v7;
    *(_OWORD *)(a2 + 48) = v8;
    *(_QWORD *)(a2 + 64) = v9;
    *(_DWORD *)(a2 + 72) = v10;
    *(_OWORD *)(a2 + 80) = v12;
    *(_QWORD *)(a2 + 96) = v11;
  }
  return result;
}

uint64_t sub_1D4402238(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  unsigned __int8 v26;
  uint64_t v27[3];
  uint64_t v28[2];
  uint64_t v29;
  char v30;

  v2 = sub_1D437CD10((__int128 *)(a1 + 24), (uint64_t)&v23);
  v10 = sub_1D4404834(v2, v3, v4, v5, v6, v7, v8, v9, v23, v24, v25);
  if (v26 > 0xFDu
    || (sub_1D4404750(v10, v11, v12, v13, v14, v15, v16, v17, v23, *((uint64_t *)&v23 + 1), v24, v25), !v20)
    || (sub_1D437D768(v27, (uint64_t)v28), sub_1D437D768(v28, (uint64_t)&v29), v30)
    || *(_QWORD *)(v29 + 16) != 2)
  {
LABEL_13:
    sub_1D42DCEE8();
    sub_1D4311F68();
    sub_1D430740C();
    sub_1D4342D78(v21, v22, (uint64_t)"expected constraint: <NCHAN>x<NSAMPLES> (NCHAN is in range [1, 1])");
    return sub_1D4312028();
  }
  result = sub_1D4483D2C(v29, 0);
  if (v1)
    return result;
  if (result == v19)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (__OFSUB__(v19, 1))
  {
LABEL_16:
    __break(1u);
    return result;
  }
  v20 = result == 1 && v19 == 2;
  if (!v20)
    goto LABEL_13;
  return result;
}

uint64_t sub_1D440231C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  unsigned __int8 v30;
  uint64_t v31[3];
  uint64_t v32[2];
  uint64_t v33;
  char v34;

  v4 = sub_1D437CD10((__int128 *)(a2 + 24), (uint64_t)&v27);
  v12 = sub_1D4404834(v4, v5, v6, v7, v8, v9, v10, v11, v27, v28, v29);
  if (v30 > 0xFDu
    || (sub_1D4404750(v12, v13, v14, v15, v16, v17, v18, v19, v27, *((uint64_t *)&v27 + 1), v28, v29), !v22)
    || (sub_1D437D768(v31, (uint64_t)v32), sub_1D437D768(v32, (uint64_t)&v33), v34)
    || *(_QWORD *)(v33 + 16) != 3)
  {
LABEL_13:
    sub_1D42DCEE8();
    sub_1D4311F68();
    sub_1D430740C();
    sub_1D4342D78(v23, v24, (uint64_t)"expected constraint: <NCHAN>x<FILTERS>x<NHOPS> where NCHAN is in range [1, 1], FILTERS is in range [32, 32]");
    return sub_1D4312028();
  }
  result = sub_1D440478C();
  if (v2)
    return result;
  if (result == v21)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (__OFSUB__(v21, 1))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v22 = result == 1 && v21 == 2;
  if (!v22)
    goto LABEL_13;
  result = sub_1D440477C();
  if (result == v25)
    goto LABEL_25;
  if (__OFSUB__(v25, 1))
  {
LABEL_26:
    __break(1u);
    return result;
  }
  if (result != a1 || v25 - 1 != a1)
    goto LABEL_13;
  return result;
}

uint64_t sub_1D4402438(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  unsigned __int8 v14;
  __int128 v15;
  unsigned __int8 v16;
  uint64_t v17[2];
  uint64_t v18;
  char v19;

  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v4 = sub_1D44E4D64(result);
  result = sub_1D43EE058(v4, 4);
  if (v2)
    return result;
  v5 = result;
  sub_1D437CD10((__int128 *)(a2 + 24), (uint64_t)&v12);
  sub_1D437CD10(&v12, (uint64_t)&v13);
  if (v14 > 0xFDu)
    goto LABEL_14;
  v15 = v13;
  v16 = v14;
  if (v13 != 1)
    goto LABEL_14;
  sub_1D437D768((uint64_t *)&v15 + 1, (uint64_t)v17);
  sub_1D437D768(v17, (uint64_t)&v18);
  if (v19 || *(_QWORD *)(v18 + 16) != 2)
    goto LABEL_14;
  result = sub_1D440477C();
  if (result == v6)
    goto LABEL_26;
  if (__OFSUB__(v6, 1))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (result != v5 || v6 - 1 != v5)
    goto LABEL_14;
  result = sub_1D440478C();
  if (result == v10)
    goto LABEL_28;
  if (__OFSUB__(v10, 1))
  {
LABEL_29:
    __break(1u);
    return result;
  }
  if (result != 1 || v10 != 2)
  {
LABEL_14:
    sub_1D42DCEE8();
    sub_1D451B400();
    sub_1D430740C();
    sub_1D4342414();
    sub_1D44047CC();
    sub_1D4342414();
    sub_1D42D3258();
    sub_1D451A794();
    sub_1D44047CC();
    sub_1D4342414();
    sub_1D42BE8B4();
    sub_1D451A794();
    sub_1D430740C();
    sub_1D43EC59C(0xD000000000000017, v8, 1, 0, v9, 0xE000000000000000);
    sub_1D42BE8B4();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1D440265C(uint64_t *a1, void *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned __int8 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unsigned __int8 v125;
  unsigned __int8 v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD v131[2];
  char v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  _QWORD v136[2];
  char v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  _QWORD v141[2];
  char v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  _QWORD v146[2];
  char v147;
  uint64_t v148;
  uint64_t v149;
  char v150;
  int v151;
  int v152;

  result = sub_1D437C1B8(a2);
  if (v2)
    return result;
  v6 = result;
  v7 = v5;
  v8 = sub_1D43EE97C(*(_QWORD *)(a1[12] + 16), *(_QWORD *)(a1[10] + 16), *(_QWORD *)(a1[11] + 16));
  if (*(_QWORD *)(v6 + 16) != 2 || *(_QWORD *)(v7 + 16) != 2)
  {
    sub_1D42CB208();
    sub_1D42B7204();
    sub_1D42DCEE8();
    sub_1D4311F68();
    sub_1D430740C();
    sub_1D4342D78(v23, v24, (uint64_t)"expected 2 input features, 2 output features");
    return sub_1D4312028();
  }
  v114 = v8;
  v127 = v7;
  v9 = 0;
  v10 = 0;
  v130 = v6;
  v11 = v6 + 32;
  v13 = *a1;
  v12 = a1[1];
  while (1)
  {
    v14 = v9;
    v15 = v11 + v10;
    v16 = *(_QWORD *)(v11 + v10);
    v17 = *(_QWORD *)(v11 + v10 + 8);
    v18 = *(_BYTE *)(v11 + v10 + 16);
    v20 = *(_QWORD *)(v15 + 24);
    v19 = *(_QWORD *)(v15 + 32);
    LODWORD(v15) = *(unsigned __int8 *)(v15 + 40);
    v146[0] = v16;
    v146[1] = v17;
    v147 = v18;
    v148 = v20;
    v149 = v19;
    v152 = v15;
    v150 = v15;
    v21 = v16 == v13 && v17 == v12;
    if (v21 || (sub_1D451B820() & 1) != 0)
      break;
    v9 = 1;
    v10 = 48;
    if ((v14 & 1) != 0)
    {
      sub_1D42BE058();
      sub_1D42B6D0C();
      *v22 = 4;
      sub_1D4312028();
      sub_1D44047DC();
      return swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRetain();
  v116 = v19;
  sub_1D43477C8(v20, v19, v152);
  v25 = *(_QWORD *)(v130 + 16);
  if (!v25)
  {
LABEL_24:
    sub_1D42BE058();
    sub_1D42B6D0C();
    *v36 = 4;
    swift_bridgeObjectRetain();
    sub_1D42B7124();
    v37 = sub_1D42CB208();
    sub_1D440476C(v37, v38, v39, v40, v41, v42, v43, v44, v104, v107, v110, v112, v114, v116);
    swift_bridgeObjectRelease();
    return sub_1D4404810();
  }
  v26 = 0;
  v28 = a1[2];
  v27 = a1[3];
  while (1)
  {
    v29 = *(_QWORD *)(v130 + v26 + 40);
    sub_1D440479C();
    v141[0] = v30;
    v141[1] = v29;
    v142 = v31;
    v128 = v33;
    v129 = v32;
    v143 = v33;
    v144 = v32;
    v151 = v34;
    v145 = v34;
    if (v30 == v28 && v29 == v27)
      break;
    if ((sub_1D4404718() & 1) != 0)
      goto LABEL_26;
    v26 += 48;
    if (!--v25)
      goto LABEL_24;
  }
  v29 = v27;
LABEL_26:
  v108 = v29;
  sub_1D42F20E8();
  sub_1D43477C8(v128, v129, v151);
  v45 = *(_QWORD *)(v127 + 16);
  if (!v45)
  {
LABEL_34:
    sub_1D42BE058();
    v56 = sub_1D42B6D0C();
    sub_1D44046EC(v56, v57);
    sub_1D42B7124();
    sub_1D42CB208();
    sub_1D437CD58(v20, v116, v152);
    sub_1D4404704();
    v58 = v128;
    v59 = v129;
    v60 = v151;
LABEL_45:
    sub_1D437CD58(v58, v59, v60);
    sub_1D4404810();
    return swift_bridgeObjectRelease();
  }
  v46 = 0;
  v48 = a1[4];
  v47 = a1[5];
  while (1)
  {
    v49 = *(_QWORD *)(v127 + v46 + 40);
    sub_1D440479C();
    v136[0] = v50;
    v136[1] = v49;
    v137 = v51;
    v118 = v53;
    v121 = v52;
    v138 = v53;
    v139 = v52;
    HIDWORD(v124) = v54;
    v140 = v54;
    if (v50 == v48 && v49 == v47)
      break;
    if ((sub_1D4404718() & 1) != 0)
      goto LABEL_36;
    v46 += 48;
    if (!--v45)
      goto LABEL_34;
  }
  v49 = v47;
LABEL_36:
  v105 = v49;
  sub_1D42F20E8();
  sub_1D43477C8(v118, v121, BYTE4(v124));
  v61 = *(_QWORD *)(v127 + 16);
  if (!v61)
  {
LABEL_44:
    sub_1D42BE058();
    v73 = sub_1D42B6D0C();
    sub_1D44046EC(v73, v74);
    sub_1D42B7124();
    sub_1D42CB208();
    sub_1D437CD58(v20, v116, v152);
    v75 = sub_1D4404704();
    sub_1D440470C(v75, v76, v77, v78, v79, v80, v81, v82, v105, v108, v110, v112, v114, v116, v118, v121, v124, v127, v128,
      v129);
    swift_bridgeObjectRelease();
    v58 = v119;
    v59 = v122;
    v60 = v125;
    goto LABEL_45;
  }
  v62 = 0;
  while (1)
  {
    v63 = *(_QWORD *)(v127 + v62 + 40);
    sub_1D440479C();
    v131[0] = v65;
    v131[1] = v63;
    v132 = v66;
    v68 = v67;
    v133 = v67;
    v134 = v69;
    v112 = v69;
    HIDWORD(v110) = v70;
    v135 = v70;
    v72 = v65 == v71 && v63 == v64;
    if (v72 || (sub_1D451B820() & 1) != 0)
      break;
    v62 += 48;
    if (!--v61)
      goto LABEL_44;
  }
  swift_bridgeObjectRetain();
  v83 = v112;
  v84 = BYTE4(v110);
  sub_1D43477C8(v68, v112, BYTE4(v110));
  swift_bridgeObjectRelease();
  sub_1D44047DC();
  sub_1D4402238((uint64_t)v146);
  v85 = sub_1D42CB208();
  v93 = sub_1D440476C(v85, v86, v87, v88, v89, v90, v91, v92, v105, v108, v110, v112, v114, v116);
  v94 = v115;
  sub_1D440481C(v93, (uint64_t)v141);
  v95 = sub_1D4404704();
  sub_1D440470C(v95, v96, v97, v98, v99, v100, v101, v102, v106, v109, v111, v113, v115, v117, v118, v121, v124, v127, v128,
    v129);
  sub_1D440231C(v94, (uint64_t)v136);
  swift_bridgeObjectRelease();
  v103 = sub_1D437CD58(v120, v123, v126);
  sub_1D440481C(v103, (uint64_t)v131);
  sub_1D42CB338();
  return sub_1D437CD58(v68, v83, v84);
}

uint64_t type metadata accessor for EBankCustomModelUtils()
{
  return objc_opt_self();
}

objc_class *sub_1D4402B84(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  objc_class *v7;
  id v8;
  id v9;
  uint64_t v11[13];

  v5 = v2;
  v7 = (objc_class *)sub_1D4404828();
  type metadata accessor for EBankCustomModelUtils();
  v8 = v5;
  sub_1D4402154(a2, (uint64_t)v11);
  sub_1D42CB8F4();
  if (v3)
  {

  }
  else
  {
    sub_1D440265C(v11, v4);

    v9 = objc_allocWithZone(v7);
    v7 = (objc_class *)sub_1D4402D38();

  }
  swift_getObjectType();
  sub_1D4404738();
  return v7;
}

id sub_1D4402D38()
{
  char *v0;
  uint64_t v1;
  _QWORD *v2;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  objc_super v16;
  objc_class *v17;

  v3 = (objc_class *)sub_1D4404828();
  memcpy(&v0[OBJC_IVAR____SNEBankCustomModel_configuration], v2, 0x68uLL);
  v4 = v2[10];
  v5 = v2[11];
  v6 = v0;
  sub_1D4404560((uint64_t)v2);
  swift_bridgeObjectRetain();
  sub_1D42F20E8();
  v7 = swift_bridgeObjectRetain();
  sub_1D4404808(v7);
  v17 = v3;
  if (v1)
  {
    sub_1D435EB80();
    sub_1D42CB338();
    sub_1D42D3258();
    sub_1D44044DC((uint64_t)v2);

    sub_1D42CB8F4();
    sub_1D42BE8B4();
    sub_1D4347994();
    sub_1D435EB80();
    sub_1D42CB338();
    sub_1D42D3258();
    swift_bridgeObjectRelease();
    return (id)sub_1D4404738();
  }
  else
  {
    v9 = v8;
    sub_1D4404808(v4);
    v15 = v10;
    sub_1D4404808(v5);
    v13 = v12;
    sub_1D44044DC((uint64_t)v2);
    sub_1D42D3258();
    sub_1D435EB80();
    sub_1D42CB338();
    v14 = &v6[OBJC_IVAR____SNEBankCustomModel_coefAllocations];
    *(_QWORD *)v14 = v9;
    *((_QWORD *)v14 + 1) = v15;
    *((_QWORD *)v14 + 2) = v13;

    v16.receiver = v6;
    v16.super_class = v3;
    return objc_msgSendSuper2(&v16, sel_init);
  }
}

void sub_1D4402EDC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  float v19;
  id v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  BOOL v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t inited;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  id v69;
  void *v70;
  __int128 v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD __dst[10];
  _BYTE __src[80];
  uint64_t v83;

  v3 = v1;
  v83 = *MEMORY[0x1E0C80C00];
  v5 = v3 + OBJC_IVAR____SNEBankCustomModel_configuration;
  sub_1D437C144(a1);
  if (v2)
    goto LABEL_5;
  v7 = v6;
  sub_1D437C144(a1);
  v9 = v8;
  sub_1D4434BAC(v7);
  sub_1D4434BAC(v9);
  v10 = sub_1D43EE97C(*(_QWORD *)(*(_QWORD *)(v5 + 96) + 16), *(_QWORD *)(*(_QWORD *)(v5 + 80) + 16), *(_QWORD *)(*(_QWORD *)(v5 + 88) + 16));
  v11 = v10;
  if (v10 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_40;
  }
  if (v10 > 0x7FFFFFFF)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    sub_1D42B28FC((uint64_t *)&unk_1EFE40390);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v71;
    v66 = *(_QWORD *)(v5 + 40);
    *(_QWORD *)(inited + 32) = *(_QWORD *)(v5 + 32);
    *(_QWORD *)(inited + 40) = v66;
    v67 = (void *)objc_opt_self();
    sub_1D43F8AC8();
    *(_QWORD *)(inited + 48) = objc_msgSend(v67, sel_featureValueWithMultiArray_, v72);
    v68 = *(_QWORD *)(v5 + 56);
    *(_QWORD *)(inited + 56) = *(_QWORD *)(v5 + 48);
    *(_QWORD *)(inited + 64) = v68;
    swift_bridgeObjectRetain();
    *(_QWORD *)(inited + 72) = objc_msgSend(v67, sel_featureValueWithMultiArray_, v70);
    sub_1D42E9D88(0, (unint64_t *)&qword_1EFE4D470);
    sub_1D451A5E4();
    sub_1D4364B70();
    sub_1D42B7204();
    v69 = objc_allocWithZone(MEMORY[0x1E0C9E8F8]);
    sub_1D4392954();

    sub_1D44046E4();
    swift_release();
    swift_release();
    swift_release();
    sub_1D42BE998();
LABEL_5:
    sub_1D42CB3F8();
    return;
  }
  v12 = sub_1D44E4D64(v10);
  type metadata accessor for FixedAddressMutableRawBuffer();
  swift_allocObject();
  v13 = sub_1D446D3D4(v12);
  sub_1D451AF08();
  v14 = v3 + OBJC_IVAR____SNEBankCustomModel_coefAllocations;
  v15 = *(_QWORD *)(v3 + OBJC_IVAR____SNEBankCustomModel_coefAllocations);
  v16 = *(_QWORD *)(v3 + OBJC_IVAR____SNEBankCustomModel_coefAllocations + 8);
  v17 = v13;
  v18 = *(_QWORD *)(v14 + 16);
  v19 = *(float *)(v5 + 72);
  v79 = *(_QWORD *)(v5 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1D43EEA84(v15, v16, v18, v79, v17, (uint64_t)__src, v19);
  swift_release();
  swift_release();
  sub_1D42B8F48();
  memcpy(__dst, __src, sizeof(__dst));
  v20 = sub_1D4404864();
  sub_1D42E9D88(0, (unint64_t *)&qword_1EFE404B0);
  v76 = sub_1D451A92C();

  v21 = sub_1D4404864();
  v22 = sub_1D451A92C();

  if (v22 >> 62)
  {
    sub_1D42F20E8();
    v23 = sub_1D451B5A4();
    sub_1D435EB80();
  }
  else
  {
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  sub_1D435EB80();
  v24 = v23 - 1;
  if (__OFSUB__(v23, 1))
  {
    __break(1u);
  }
  else
  {
    v23 = v76;
    sub_1D42D2E5C(v24, (v76 & 0xC000000000000001) == 0, v76);
    if ((v76 & 0xC000000000000001) == 0)
    {
      v25 = *(id *)(v76 + 8 * v24 + 32);
      goto LABEL_11;
    }
  }
  v25 = (id)MEMORY[0x1D825CD78](v24, v23);
LABEL_11:
  v26 = v25;
  sub_1D4347994();
  v27 = (uint64_t)objc_msgSend(v26, sel_integerValue);

  if (v27 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_46;
  }
  if (v27 > 0x7FFFFFFF)
  {
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v28 = (int)sub_1D44E4E48((uint64_t)__dst, v27);
  v77 = v11 * v28;
  sub_1D42B28FC((uint64_t *)&unk_1EFE403A0);
  v29 = swift_initStackObject();
  *(_OWORD *)(v29 + 16) = xmmword_1D4526260;
  *(_QWORD *)(v29 + 32) = 1;
  *(_QWORD *)(v29 + 40) = v11;
  *(_QWORD *)(v29 + 48) = v28;
  v30 = sub_1D44047E4();
  *(_OWORD *)(v30 + 16) = xmmword_1D4526260;
  *(_QWORD *)(v30 + 32) = v77;
  *(_QWORD *)(v30 + 40) = 1;
  *(_QWORD *)(v30 + 48) = v11;
  v31 = sub_1D44E4D64(v11);
  v32 = sub_1D43EE058(v31, 4);
  sub_1D4436950(v30, v29);
  sub_1D44047F4();
  if (!v57)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v34 = sub_1D44047B4(v33);
  sub_1D4434AD0(v34, v35, v36, v37, v30);
  v72 = v38;
  sub_1D4347994();
  sub_1D42B7204();
  v39 = sub_1D44047E4();
  v71 = xmmword_1D45295F0;
  *(_OWORD *)(v39 + 16) = xmmword_1D45295F0;
  *(_QWORD *)(v39 + 32) = 1;
  *(_QWORD *)(v39 + 40) = v32;
  v40 = sub_1D44047E4();
  *(_OWORD *)(v40 + 16) = xmmword_1D45295F0;
  *(_QWORD *)(v40 + 32) = v32;
  *(_QWORD *)(v40 + 40) = 1;
  sub_1D4436950(v40, v39);
  sub_1D44047F4();
  if (v57)
  {
    v42 = sub_1D44047B4(v41);
    sub_1D4434AD0(v42, v43, v44, v45, v40);
    v70 = v46;
    swift_setDeallocating();
    v47 = sub_1D430C648();
    MEMORY[0x1E0C80A78](v47);
    sub_1D42B28FC((uint64_t *)&unk_1EFE557D0);
    sub_1D451AF08();
    v73 = *(_QWORD *)(v80 + 16);
    if (v73)
    {
      swift_bridgeObjectRetain();
      v48 = 0;
      v49 = MEMORY[0x1E0DEE9D8];
      while (1)
      {
        v50 = v49;
        v74 = v48;
        v51 = v80 + 8 * v48;
        v52 = *(_QWORD *)(*(_QWORD *)(v51 + 32) + 16);
        v53 = *(_QWORD *)(v49 + 16);
        if (__OFADD__(v53, v52))
          goto LABEL_47;
        v78 = *(_QWORD *)(v51 + 32);
        swift_bridgeObjectRetain();
        sub_1D43F8AC8();
        if (!swift_isUniquelyReferenced_nonNull_native()
          || (v75 = v50, v53 + v52 > *(_QWORD *)(v50 + 24) >> 1))
        {
          sub_1D442F36C();
          v75 = v54;
        }
        if (*(_QWORD *)(v78 + 16))
        {
          v49 = v75;
          v55 = *(_QWORD *)(v75 + 16);
          if ((*(_QWORD *)(v75 + 24) >> 1) - v55 < v52)
            goto LABEL_50;
          v56 = (void *)(v75 + 4 * v55 + 32);
          v57 = v78 + 32 >= (unint64_t)v56 + 4 * v52 || (unint64_t)v56 >= v78 + 32 + 4 * v52;
          if (!v57)
            goto LABEL_54;
          memcpy(v56, (const void *)(v78 + 32), 4 * v52);
          if (v52)
          {
            v58 = *(_QWORD *)(v75 + 16);
            v59 = __OFADD__(v58, v52);
            v60 = v58 + v52;
            if (v59)
              goto LABEL_51;
            *(_QWORD *)(v75 + 16) = v60;
          }
        }
        else
        {
          v49 = v75;
          if (v52)
            goto LABEL_48;
        }
        swift_bridgeObjectRelease();
        sub_1D4347994();
        v48 = v74 + 1;
        if (v73 == v74 + 1)
        {
          swift_bridgeObjectRelease();
          goto LABEL_37;
        }
      }
    }
    v75 = MEMORY[0x1E0DEE9D8];
LABEL_37:
    v61 = swift_bridgeObjectRelease();
    if (*(_QWORD *)(v75 + 16) >> 61)
      goto LABEL_53;
    v62 = MEMORY[0x1E0C80A78](v61);
    MEMORY[0x1E0C80A78](v62);
    sub_1D451AF14();
    v63 = swift_bridgeObjectRelease();
    v64 = MEMORY[0x1E0C80A78](v63);
    MEMORY[0x1E0C80A78](v64);
    sub_1D451AF14();
    goto LABEL_41;
  }
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  sub_1D451B5D4();
  __break(1u);
}

uint64_t sub_1D44038A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v8;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(a3 + 24);
  v6 = a2 - a1;
  if (!a1)
    v6 = 0;
  if (v4)
  {
    if (v6 == v5 - v4)
      return sub_1D451B1A8();
  }
  else if (!v6)
  {
    return sub_1D451B1A8();
  }
  sub_1D4370694();
  swift_allocError();
  *v8 = 0;
  return swift_willThrow();
}

void sub_1D4403924(float32x4_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  if (a1)
    v6 = (a2 - (uint64_t)a1) / 4;
  else
    v6 = 0;
  sub_1D44960C4(a1, v6, a3);
  if (!v4)
    *a4 = v7;
}

uint64_t sub_1D4403964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = MEMORY[0x1D825C1E4](*(_QWORD *)(*(_QWORD *)(a3 + 48) + 16), *(_QWORD *)(*(_QWORD *)(a3 + 48) + 24));
  return sub_1D446CFD0(v5, v6, a1, a2);
}

void sub_1D4403A68()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for EBankCustomModel()
{
  return objc_opt_self();
}

uint64_t destroy for EBankCustomModelUtils.Configuration()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EBankCustomModelUtils.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EBankCustomModelUtils.Configuration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for EBankCustomModelUtils.Configuration(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x68uLL);
}

uint64_t assignWithTake for EBankCustomModelUtils.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EBankCustomModelUtils.Configuration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 104))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EBankCustomModelUtils.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EBankCustomModelUtils.Configuration()
{
  return &type metadata for EBankCustomModelUtils.Configuration;
}

uint64_t sub_1D4403EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1D451B820() & 1;
}

uint64_t sub_1D4403EFC(uint64_t a1, unsigned __int8 a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t result;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  unint64_t v49;
  _QWORD v51[4];

  v51[3] = a4;
  if (a1 < 0)
    goto LABEL_38;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = MEMORY[0x1E0DEE9D8];
  v43 = (uint64_t *)(v10 + 16);
  v48 = swift_allocObject();
  *(_QWORD *)(v48 + 16) = 15;
  v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v12 = HIBYTE(a6) & 0xF) : (v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v11 = a5 & 0xFFFFFFFFFFFFLL;
    v31 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0)
      v31 = 11;
    sub_1D4404344(v31 | (v11 << 16), v48, a2 & 1, v10);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_36;
  }
  v42 = a1;
  v49 = 4 * v12;
  v13 = MEMORY[0x1E0DEE9D8];
  v14 = 15;
  v15 = 15;
  v16 = 15;
  while (1)
  {
    v51[0] = sub_1D451A800();
    v51[1] = v17;
    v18 = a3(v51);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v13;
    }
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      v14 = sub_1D451A764();
      goto LABEL_21;
    }
    v20 = (v15 >> 14 == v14 >> 14) & a2;
    if (v20 != 1)
    {
      if (v14 >> 14 < v15 >> 14)
        goto LABEL_38;
      v21 = sub_1D451A80C();
      v44 = v23;
      v45 = v22;
      v46 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D442FFC8(0, *(_QWORD *)(v13 + 16) + 1, 1, v13);
        v13 = v29;
      }
      v26 = *(_QWORD *)(v13 + 16);
      v25 = *(_QWORD *)(v13 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_1D442FFC8(v25 > 1, v26 + 1, 1, v13);
        v13 = v30;
      }
      *(_QWORD *)(v13 + 16) = v26 + 1;
      v27 = (_QWORD *)(v13 + 32 * v26);
      v27[4] = v21;
      v27[5] = v46;
      v27[6] = v45;
      v27[7] = v44;
      *v43 = v13;
    }
    v28 = sub_1D451A764();
    v14 = v28;
    *(_QWORD *)(v48 + 16) = v28;
    if ((v20 & 1) == 0 && *(_QWORD *)(v13 + 16) == v42)
      break;
    v15 = v28;
    v16 = v28;
LABEL_21:
    if (v49 == v14 >> 14)
      goto LABEL_30;
  }
  v16 = v28;
  v15 = v28;
LABEL_30:
  if (v49 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  if (v49 < v16 >> 14)
  {
LABEL_38:
    result = sub_1D451B550();
    __break(1u);
    return result;
  }
  v32 = sub_1D451A80C();
  v34 = v33;
  v36 = v35;
  v38 = v37;
  swift_bridgeObjectRelease();
  sub_1D43A2444();
  v39 = *(_QWORD *)(*v43 + 16);
  sub_1D43A253C(v39);
  v13 = *v43;
  *(_QWORD *)(v13 + 16) = v39 + 1;
  v40 = (_QWORD *)(v13 + 32 * v39);
  v40[4] = v32;
  v40[5] = v34;
  v40[6] = v36;
  v40[7] = v38;
  *v43 = v13;
LABEL_35:
  swift_bridgeObjectRetain();
  swift_release();
LABEL_36:
  swift_release();
  return v13;
}

uint64_t sub_1D4404344(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = sub_1D451A80C();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    sub_1D43A2444();
    v14 = *(_QWORD *)(*(_QWORD *)(a4 + 16) + 16);
    sub_1D43A253C(v14);
    v15 = *(_QWORD *)(a4 + 16);
    *(_QWORD *)(v15 + 16) = v14 + 1;
    v16 = (_QWORD *)(v15 + 32 * v14);
    v16[4] = v7;
    v16[5] = v9;
    v16[6] = v11;
    v16[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_1D451B550();
  __break(1u);
  return result;
}

uint64_t sub_1D4404448(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D44038A4(a1, a2, v2);
}

void sub_1D4404460(float32x4_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  sub_1D4403924(a1, a2, *(_QWORD *)(v3 + 16), a3);
}

uint64_t sub_1D4404478(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D446D5BC(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1D4404490()
{
  return sub_1D44044BC();
}

uint64_t sub_1D44044A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D4403964(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1D44044BC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1D44044DC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D4404560(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D44045E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D42B28FC((uint64_t *)&unk_1EFE40340);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D440462C(uint64_t *a1, uint64_t *a2)
{
  return sub_1D4403EBC(*a1, a1[1], *a2, a2[1]) & 1;
}

uint64_t sub_1D4404654(uint64_t *a1)
{
  uint64_t v1;

  return sub_1D440462C(a1, *(uint64_t **)(v1 + 16)) & 1;
}

uint64_t sub_1D4404670()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D4404694()
{
  return swift_deallocObject();
}

uint64_t sub_1D44046A4()
{
  return swift_dynamicCast();
}

uint64_t sub_1D44046B8()
{
  uint64_t v0;
  unsigned __int8 v1;
  uint64_t v2;

  sub_1D437CD58(v2, v0, v1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D44046D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  return sub_1D42B294C(a3, (uint64_t)va);
}

uint64_t sub_1D44046E4()
{
  return swift_release();
}

uint64_t sub_1D44046EC(uint64_t a1, _BYTE *a2)
{
  *a2 = 4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D4404704()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D440470C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;

  return sub_1D437CD58(a19, a20, *(_DWORD *)(v20 - 72));
}

uint64_t sub_1D4404718()
{
  return sub_1D451B820();
}

uint64_t sub_1D440472C(uint64_t a1, unint64_t a2)
{
  return sub_1D4401A80(a1, a2);
}

uint64_t sub_1D4404738()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1D4404744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D42FAE6C(a3);
}

__n128 sub_1D4404750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, __int128 a12)
{
  return (__n128)a12;
}

uint64_t sub_1D440476C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;

  return sub_1D437CD58(v14, a14, *(_DWORD *)(v15 - 68));
}

uint64_t sub_1D440477C()
{
  uint64_t v0;

  return sub_1D4483D2C(v0, 1);
}

uint64_t sub_1D440478C()
{
  uint64_t v0;

  return sub_1D4483D2C(v0, 0);
}

void sub_1D44047AC()
{
  uint64_t v0;

}

uint64_t sub_1D44047B4(uint64_t a1)
{
  return 4 * a1;
}

uint64_t sub_1D44047CC()
{
  return sub_1D451B7C0();
}

uint64_t sub_1D44047DC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D44047E4()
{
  return swift_initStackObject();
}

void sub_1D44047EC()
{
  uint64_t v0;

}

void sub_1D4404808(uint64_t a1)
{
  sub_1D43EECC0(a1);
}

uint64_t sub_1D4404810()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1D440481C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D4402438(v2, a2);
}

uint64_t sub_1D4404828()
{
  return swift_getObjectType();
}

uint64_t sub_1D4404834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10, char a11)
{
  return sub_1D437CD10(&a9, (uint64_t)&a11);
}

id sub_1D4404840()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 3144));
}

uint64_t sub_1D440484C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D42FAEE0(a3);
}

uint64_t sub_1D4404858()
{
  return swift_bridgeObjectRelease();
}

id sub_1D4404864()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, (SEL)(v0 + 3272));
}

void sub_1D4404870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  double *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  double v21;
  uint64_t v22;
  double v23;
  BOOL v24;
  double v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  double *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  double v41;
  double v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a2 + 16);
  if (v6 >= v5)
    v7 = *(_QWORD *)(a1 + 16);
  else
    v7 = *(_QWORD *)(a2 + 16);
  v55 = MEMORY[0x1E0DEE9D8];
  sub_1D42C79FC();
  v8 = v55;
  v49 = v6;
  v50 = v5;
  v45 = v7;
  v47 = a2;
  v48 = a1;
  if (!v7)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = a3;
LABEL_26:
    v29 = v49;
    v28 = v50;
    if (v50 <= v49)
    {
LABEL_44:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    v30 = v45;
    v31 = (double *)(v48 + 32 * v45 + 56);
    while (1)
    {
      if (v30 >= v28)
        goto LABEL_48;
      if (v29 == v30)
        goto LABEL_44;
      if (v30 >= v29)
        goto LABEL_49;
      v32 = v8;
      v34 = *((_QWORD *)v31 - 3);
      v33 = *((_QWORD *)v31 - 2);
      v35 = *(v31 - 1);
      v36 = *v31;
      v37 = *(_QWORD *)(v47 + 32 + 8 * v30);
      v38 = *(_QWORD *)(v13 + 16);
      swift_bridgeObjectRetain();
      if (v38)
      {
        swift_bridgeObjectRetain();
        v39 = sub_1D4366B34(v34, v33);
        if ((v40 & 1) != 0)
        {
          v41 = *(double *)(*(_QWORD *)(v13 + 56) + 8 * v39);
          swift_bridgeObjectRelease();
          if (v35 < v41)
            goto LABEL_38;
          goto LABEL_34;
        }
        swift_bridgeObjectRelease();
      }
      v41 = 0.0;
      if (v35 < 0.0)
      {
LABEL_38:
        v24 = __OFADD__(v37, 1);
        *(_QWORD *)&v42 = v37 + 1;
        if (v24)
          goto LABEL_50;
        if (*(_QWORD *)&v42 != *(_QWORD *)&v36)
        {
          swift_bridgeObjectRelease();
          v34 = 0;
          v33 = 0;
          v41 = 0.0;
          v36 = v42;
        }
        goto LABEL_41;
      }
LABEL_34:
      if (v36 != 0.0)
      {
        swift_bridgeObjectRelease();
        v34 = 0;
        v33 = 0;
        v36 = 0.0;
        v41 = 0.0;
      }
LABEL_41:
      v8 = v32;
      v43 = *(_QWORD *)(v32 + 16);
      if (v43 >= *(_QWORD *)(v32 + 24) >> 1)
      {
        sub_1D42C79FC();
        v13 = a3;
        v8 = v32;
      }
      ++v30;
      *(_QWORD *)(v8 + 16) = v43 + 1;
      v44 = v8 + 32 * v43;
      *(_QWORD *)(v44 + 32) = v34;
      *(_QWORD *)(v44 + 40) = v33;
      *(double *)(v44 + 48) = v41;
      *(double *)(v44 + 56) = v36;
      v31 += 4;
      v29 = v49;
      v28 = v50;
      if (v50 == v30)
        goto LABEL_44;
    }
  }
  v9 = (uint64_t *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = (double *)(a1 + 56);
  v11 = v5;
  v12 = v7;
  v13 = a3;
  while (v11)
  {
    if (!v6)
      goto LABEL_46;
    v14 = *((_QWORD *)v10 - 2);
    v51 = v8;
    v53 = *((_QWORD *)v10 - 3);
    v15 = *(v10 - 1);
    v16 = *v10;
    v17 = *v9;
    v18 = *(_QWORD *)(v13 + 16);
    swift_bridgeObjectRetain();
    if (v18)
    {
      swift_bridgeObjectRetain();
      v19 = sub_1D4366B34(v53, v14);
      if ((v20 & 1) != 0)
      {
        v21 = *(double *)(*(_QWORD *)(v13 + 56) + 8 * v19);
        swift_bridgeObjectRelease();
        if (v15 < v21)
          goto LABEL_15;
        goto LABEL_11;
      }
      swift_bridgeObjectRelease();
    }
    v21 = 0.0;
    if (v15 < 0.0)
    {
LABEL_15:
      v24 = __OFADD__(v17, 1);
      *(_QWORD *)&v25 = v17 + 1;
      if (v24)
        goto LABEL_47;
      v23 = v16;
      if (*(_QWORD *)&v25 == *(_QWORD *)&v16)
        goto LABEL_20;
      swift_bridgeObjectRelease();
      v22 = 0;
      v14 = 0;
      v21 = 0.0;
      v23 = v25;
      goto LABEL_18;
    }
LABEL_11:
    if (v16 == 0.0)
    {
      v23 = 0.0;
LABEL_20:
      v8 = v51;
      v22 = v53;
      goto LABEL_21;
    }
    swift_bridgeObjectRelease();
    v22 = 0;
    v14 = 0;
    v23 = 0.0;
    v21 = 0.0;
LABEL_18:
    v8 = v51;
LABEL_21:
    v26 = *(_QWORD *)(v8 + 16);
    if (v26 >= *(_QWORD *)(v8 + 24) >> 1)
    {
      v52 = v23;
      v54 = v22;
      sub_1D42C79FC();
      v23 = v52;
      v22 = v54;
      v13 = a3;
    }
    *(_QWORD *)(v8 + 16) = v26 + 1;
    v27 = v8 + 32 * v26;
    *(_QWORD *)(v27 + 32) = v22;
    *(_QWORD *)(v27 + 40) = v14;
    --v6;
    *(double *)(v27 + 48) = v21;
    *(double *)(v27 + 56) = v23;
    --v11;
    v10 += 4;
    ++v9;
    if (!--v12)
      goto LABEL_26;
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
}

uint64_t sub_1D4404C18(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a4)
  {
    v4 = a4;
    v5 = a2;
    do
    {
      v6 = v4;
      v7 = v4 == -1;
      if (v4 == -1 && v5 == 0x8000000000000000)
      {
        __break(1u);
        goto LABEL_24;
      }
      v4 = v5 % v4;
      v5 = v6;
    }
    while (v4);
    if (a4 == 0x8000000000000000 && v6 == -1)
    {
      __break(1u);
      goto LABEL_14;
    }
  }
  else
  {
LABEL_14:
    if (!a2)
    {
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v7 = a2 == -1;
    v6 = a2;
  }
  if (a2 == 0x8000000000000000 && v7)
    goto LABEL_29;
  v10 = a4 / v6;
  if ((unsigned __int128)(a2 * (__int128)(a4 / v6)) >> 64 != (a2 * (a4 / v6)) >> 63)
    goto LABEL_25;
  v11 = result * v10;
  if ((unsigned __int128)(result * (__int128)v10) >> 64 != (result * v10) >> 63)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v12 = a2 / v6;
  v13 = a3 * (a2 / v6);
  if ((unsigned __int128)(a3 * (__int128)v12) >> 64 != v13 >> 63)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  result = v11 + v13;
  if (__OFADD__(v11, v13))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
  }
  return result;
}

uint64_t sub_1D4404CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  BOOL v8;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = 0;
    v7 = (_QWORD *)(a1 + 40);
    while (1)
    {
      v8 = *(v7 - 1) == a2 && *v7 == a3;
      if (v8 || (sub_1D451B820() & 1) != 0)
        break;
      v7 += 4;
      if (v4 == ++v6)
        goto LABEL_9;
    }
  }
  else
  {
LABEL_9:
    v6 = 0;
  }
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1D4404D88()
{
  swift_bridgeObjectRetain();
  sub_1D4406CEC();
  sub_1D42B7204();
  sub_1D451B988();
  return sub_1D42F86C8();
}

BOOL sub_1D4404DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8)
{
  char v13;
  _BOOL8 result;

  if (a1 == a4 && a2 == a5)
  {
    if (a7 != a8)
      return 0;
    return a3 == a6;
  }
  v13 = sub_1D451B820();
  result = 0;
  if ((v13 & 1) != 0 && a7 == a8)
    return a3 == a6;
  return result;
}

uint64_t sub_1D4404E6C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D4556CC0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D4556CE0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1D4404FA4(char a1)
{
  if (!a1)
    return 1701667182;
  if (a1 == 1)
    return 0xD000000000000013;
  return 0xD000000000000011;
}

uint64_t sub_1D4405000(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1D42B28FC(&qword_1EFE50A18);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1D42D7108();
  sub_1D42B5528(a1, a1[3]);
  sub_1D4406950();
  sub_1D451BA24();
  sub_1D451B724();
  if (!v1)
  {
    sub_1D451B73C();
    sub_1D4406CB8();
  }
  return sub_1D4406CF8(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
}

uint64_t sub_1D440513C()
{
  sub_1D42BE9A8();
  sub_1D42CB6CC();
  sub_1D4406CEC();
  sub_1D42B7204();
  sub_1D451B988();
  sub_1D42F86C8();
  return sub_1D42CB230();
}

double sub_1D44051B0(_QWORD *a1)
{
  uint64_t v1;
  double v2;
  uint64_t v4;
  double v6;

  sub_1D42B28FC(&qword_1EFE50A08);
  sub_1D4406CD8();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42B5528(a1, a1[3]);
  sub_1D4406950();
  sub_1D451BA0C();
  if (v1)
  {
    sub_1D42B5400((uint64_t)a1);
  }
  else
  {
    sub_1D4406CC8();
    sub_1D451B64C();
    swift_bridgeObjectRetain();
    sub_1D4406CC8();
    sub_1D451B664();
    v2 = v6;
    sub_1D4406CC8();
    sub_1D451B67C();
    sub_1D4406CA8();
    sub_1D42B5400((uint64_t)a1);
    sub_1D42CB8F4();
  }
  return v2;
}

uint64_t sub_1D440531C()
{
  swift_bridgeObjectRetain();
  sub_1D42D60DC();
  sub_1D42B7204();
  return sub_1D451B964();
}

uint64_t sub_1D440536C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42FE0C4(a1, a3) & (a2 == a4);
}

uint64_t sub_1D44053A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x736E6F69746361 && a2 == 0xE700000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D4556CA0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D440548C(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000017;
  else
    return 0x736E6F69746361;
}

uint64_t sub_1D44054C8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1D42B28FC(&qword_1EFE509F0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1D42D7108();
  sub_1D42B5528(a1, a1[3]);
  sub_1D4406834();
  sub_1D451BA24();
  sub_1D42B28FC(&qword_1EFE509D8);
  sub_1D44068AC(&qword_1EFE509F8, (uint64_t (*)(void))sub_1D4406914, MEMORY[0x1E0DEAF10]);
  sub_1D451B760();
  if (!v1)
    sub_1D4406CB8();
  return sub_1D4406CF8(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
}

void sub_1D44055FC()
{
  sub_1D42BE9A8();
  sub_1D42CB6CC();
  sub_1D42D60DC();
  sub_1D42B7204();
  sub_1D42F86C8();
  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t sub_1D4405640(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  sub_1D42B28FC(&qword_1EFE509C8);
  sub_1D4406CD8();
  MEMORY[0x1E0C80A78](v3);
  v4 = a1[3];
  sub_1D42B5528(a1, v4);
  sub_1D4406834();
  sub_1D451BA0C();
  if (v1)
  {
    sub_1D42B5400((uint64_t)a1);
  }
  else
  {
    sub_1D42B28FC(&qword_1EFE509D8);
    sub_1D44068AC(&qword_1EFE509E0, (uint64_t (*)(void))sub_1D4406870, MEMORY[0x1E0DEAF40]);
    sub_1D451B688();
    v4 = v6;
    sub_1D438C74C();
    sub_1D451B67C();
    sub_1D42CFC04();
    sub_1D42B5400((uint64_t)a1);
    sub_1D42D3258();
  }
  return v4;
}

uint64_t sub_1D44057C0()
{
  char *v0;

  return sub_1D4404FA4(*v0);
}

uint64_t sub_1D44057C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D4404E6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D44057EC()
{
  sub_1D4406950();
  return sub_1D451BA3C();
}

uint64_t sub_1D4405814()
{
  sub_1D4406950();
  return sub_1D451BA48();
}

uint64_t sub_1D440583C()
{
  return sub_1D440513C();
}

uint64_t sub_1D440584C()
{
  return sub_1D4404D88();
}

uint64_t sub_1D440585C()
{
  sub_1D451B958();
  swift_bridgeObjectRetain();
  sub_1D451A74C();
  swift_bridgeObjectRelease();
  sub_1D451B988();
  sub_1D451B964();
  return sub_1D451B994();
}

void sub_1D44058E0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;

  v7 = sub_1D44051B0(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
    *(double *)(a2 + 16) = v7;
    *(_QWORD *)(a2 + 24) = v6;
  }
}

uint64_t sub_1D4405910(_QWORD *a1)
{
  return sub_1D4405000(a1);
}

BOOL sub_1D4405930(uint64_t a1, uint64_t a2)
{
  return sub_1D4404DF0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 24), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 24), *(double *)(a1 + 16), *(double *)(a2 + 16));
}

uint64_t sub_1D4405954()
{
  char *v0;

  return sub_1D440548C(*v0);
}

uint64_t sub_1D440595C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D44053A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D4405980()
{
  sub_1D4406834();
  return sub_1D451BA3C();
}

uint64_t sub_1D44059A8()
{
  sub_1D4406834();
  return sub_1D451BA48();
}

void sub_1D44059D0()
{
  sub_1D44055FC();
}

uint64_t sub_1D44059D8()
{
  return sub_1D440531C();
}

uint64_t sub_1D44059E0()
{
  sub_1D451B958();
  swift_bridgeObjectRetain();
  sub_1D42D60DC();
  swift_bridgeObjectRelease();
  sub_1D451B964();
  return sub_1D451B994();
}

uint64_t sub_1D4405A44@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_1D4405640(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1D4405A6C(_QWORD *a1)
{
  return sub_1D44054C8(a1);
}

uint64_t sub_1D4405A84(uint64_t *a1, uint64_t *a2)
{
  return sub_1D440536C(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_1D4405A98(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  double v33;
  double *v34;
  double v35;
  uint64_t v36;
  uint64_t *v38;
  uint64_t v39;

  v6 = *a3;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(*a3 + 16))
  {
    sub_1D440645C();
    swift_allocError();
    swift_willThrow();
    return v5;
  }
  swift_bridgeObjectRetain();
  sub_1D42CB6CC();
  sub_1D42CB9DC();
  sub_1D4404870(a1, v6, a5);
  v12 = v11;
  sub_1D42CB338();
  sub_1D42B7204();
  v13 = v12[2];
  v38 = a4;
  if (v13)
  {
    v39 = MEMORY[0x1E0DEE9D8];
    sub_1D42C73B0();
    v14 = v39;
    v15 = *(_QWORD *)(v39 + 16);
    v16 = v12 + 7;
    do
    {
      v18 = *v16;
      v16 += 4;
      v17 = v18;
      if (v15 >= *(_QWORD *)(v39 + 24) >> 1)
        sub_1D42C73B0();
      *(_QWORD *)(v39 + 16) = v15 + 1;
      *(_QWORD *)(v39 + 8 * v15++ + 32) = v17;
      --v13;
    }
    while (v13);
    sub_1D42CB338();
    a4 = v38;
  }
  else
  {
    sub_1D42CB338();
    v14 = MEMORY[0x1E0DEE9D8];
  }
  *a3 = v14;
  v19 = v12[2];
  if (v19)
  {
    swift_bridgeObjectRetain();
    v20 = v12 + 6;
    v21 = MEMORY[0x1E0DEE9D8];
    do
    {
      v22 = *(v20 - 1);
      if (v22)
      {
        v23 = *(v20 - 2);
        v24 = *v20;
        sub_1D438C74C();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D4406D04();
          v21 = v27;
        }
        v25 = *(_QWORD *)(v21 + 16);
        if (v25 >= *(_QWORD *)(v21 + 24) >> 1)
        {
          sub_1D4406D04();
          v21 = v28;
        }
        *(_QWORD *)(v21 + 16) = v25 + 1;
        v26 = (_QWORD *)(v21 + 24 * v25);
        v26[4] = v23;
        v26[5] = v22;
        v26[6] = v24;
      }
      v20 += 4;
      --v19;
    }
    while (v19);
    sub_1D42CB8F4();
    a4 = v38;
  }
  else
  {
    v21 = MEMORY[0x1E0DEE9D8];
  }
  sub_1D42CB8F4();
  v29 = *(_QWORD *)(v21 + 16);
  if (v29)
  {
    v5 = *(_QWORD *)(v21 + 32);
    v30 = v29 - 1;
    if (v29 == 1)
    {
      sub_1D438C74C();
    }
    else
    {
      v33 = *(double *)(v21 + 48);
      sub_1D42CB6CC();
      sub_1D438C74C();
      v34 = (double *)(v21 + 72);
      do
      {
        v35 = *v34;
        if (v33 <= *v34)
        {
          v5 = *((_QWORD *)v34 - 2);
          sub_1D42CB9DC();
          sub_1D42D3258();
          v33 = v35;
        }
        v34 += 3;
        --v30;
      }
      while (v30);
      sub_1D42B7204();
    }
    sub_1D42B7204();
    v36 = *a4;
    if (*a4 >= a2)
    {
      *a4 = 0;
      return v5;
    }
    sub_1D42D3258();
    v5 = 0;
    v32 = v36 + 1;
    goto LABEL_33;
  }
  result = sub_1D42B7204();
  v32 = *a4 + 1;
  if (!__OFADD__(*a4, 1))
  {
    v5 = 0;
LABEL_33:
    *a4 = v32;
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D4405D8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v51 = *(_QWORD *)a6;
  v48 = *(unsigned int *)(a6 + 12);
  v49 = *(_QWORD *)(a6 + 16);
  v50 = *(int *)(a6 + 8);
  v46 = *(int *)(a6 + 32);
  v47 = *(_QWORD *)(a6 + 24);
  v11 = *(_QWORD *)(a6 + 40);
  v12 = *a7;
  v13 = *((int *)a7 + 2);
  v14 = a7[2];
  result = sub_1D4405A98(a1, a2, a3, a4, a5);
  if (!v8)
  {
    v17 = v16;
    if (!v16)
    {
      v36 = 0;
      v23 = 0;
      v32 = 0;
      v37 = 0;
      v35 = 0;
      result = 0;
      v38 = 0;
      v39 = 0;
LABEL_28:
      *a8 = v36;
      a8[1] = v17;
      a8[2] = v23;
      a8[3] = v32;
      a8[4] = v37;
      a8[5] = v35;
      a8[6] = result;
      a8[7] = v38;
      a8[8] = v39;
      return result;
    }
    v18 = result;
    sub_1D42CB9DC();
    v19 = swift_bridgeObjectRetain();
    v44 = v18;
    v45 = v17;
    v20 = sub_1D4404CEC(v19, v18, v17);
    LOBYTE(v18) = v21;
    swift_bridgeObjectRelease();
    if ((v18 & 1) != 0)
      goto LABEL_42;
    if ((v20 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v20 < *(_QWORD *)(*a3 + 16))
    {
      v22 = *(_QWORD *)(*a3 + 8 * v20 + 32);
      swift_bridgeObjectRetain();
      v23 = sub_1D4364A30(v44, v45, a5);
      v25 = v24;
      swift_bridgeObjectRelease();
      if ((v25 & 1) == 0)
      {
        v26 = v22 - 1;
        if (!__OFSUB__(v22, 1))
        {
          v27 = v12 * v26;
          if ((unsigned __int128)(v12 * (__int128)v26) >> 64 == (v12 * v26) >> 63)
          {
            v28 = v48;
            v29 = v49;
            if (v49 != v14)
            {
              v32 = 0;
              v34 = 0;
              v33 = 0;
              v35 = 0;
LABEL_16:
              if (v49 != v11)
              {
                v40 = 0;
                v41 = 0;
                v28 = 0;
                v29 = 0;
LABEL_21:
                if (v29 != v35)
                {
                  result = 0;
                  v43 = 0;
                  v28 = 0;
                  v39 = 0;
                  goto LABEL_27;
                }
                if (!__OFSUB__(0, v32))
                {
                  result = sub_1D4404C18(v40, v41, -v32, (int)v34);
                  if (v42 >= (uint64_t)0xFFFFFFFF80000000)
                  {
                    if (v42 <= 0x7FFFFFFF)
                    {
                      v43 = v42;
                      v39 = v35;
LABEL_27:
                      v37 = v33 | v34;
                      v38 = v43 | (v28 << 32);
                      v36 = v44;
                      v17 = v45;
                      goto LABEL_28;
                    }
                    goto LABEL_41;
                  }
LABEL_40:
                  __break(1u);
LABEL_41:
                  __break(1u);
                  goto LABEL_42;
                }
                goto LABEL_38;
              }
              v40 = sub_1D4404C18(v51, v50, v47, v46);
              if (v41 >= (uint64_t)0xFFFFFFFF80000000)
              {
                if (v41 > 0x7FFFFFFF)
                {
LABEL_39:
                  __break(1u);
                  goto LABEL_40;
                }
                goto LABEL_21;
              }
              goto LABEL_36;
            }
            if (!__OFSUB__(0, v27))
            {
              v30 = sub_1D4404C18(v51, v50, -v27, v13);
              if (v31 >= (uint64_t)0xFFFFFFFF80000000)
              {
                if (v31 > 0x7FFFFFFF)
                {
LABEL_37:
                  __break(1u);
LABEL_38:
                  __break(1u);
                  goto LABEL_39;
                }
                v32 = v30;
                v33 = v48 << 32;
                v34 = v31;
                v35 = v49;
                goto LABEL_16;
              }
LABEL_35:
              __break(1u);
LABEL_36:
              __break(1u);
              goto LABEL_37;
            }
LABEL_34:
            __break(1u);
            goto LABEL_35;
          }
LABEL_33:
          __break(1u);
          goto LABEL_34;
        }
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
LABEL_42:
      result = sub_1D451B55C();
      __break(1u);
      return result;
    }
    __break(1u);
    goto LABEL_32;
  }
  return result;
}

double (*sub_1D4406090(uint64_t a1, uint64_t a2, uint64_t *a3))@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v5 = *a3;
  v6 = a3[1];
  v7 = a3[2];
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v15 = a3[2];
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1D42C73B0();
    v9 = v16;
    v10 = *(_QWORD *)(v16 + 16);
    do
    {
      if (v10 >= *(_QWORD *)(v16 + 24) >> 1)
        sub_1D42C73B0();
      *(_QWORD *)(v16 + 16) = v10 + 1;
      *(_QWORD *)(v16 + 8 * v10++ + 32) = 0;
      --v8;
    }
    while (v8);
    v7 = v15;
  }
  v11 = sub_1D42B6F40();
  *(_QWORD *)(v11 + 16) = v9;
  v12 = sub_1D42B6F40();
  *(_QWORD *)(v12 + 16) = a2;
  v13 = (_QWORD *)sub_1D42B6F40();
  v13[2] = a1;
  v13[3] = a2;
  v13[4] = v11;
  v13[5] = v12;
  v13[6] = v5;
  v13[7] = v6;
  v13[8] = v7;
  swift_bridgeObjectRetain();
  return sub_1D4406500;
}

double sub_1D44061E8@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v10;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  double result;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24[3];
  _QWORD v25[2];
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[4];
  uint64_t v30;

  v15 = *a2;
  v16 = a2[5];
  v24[2] = a10;
  v25[0] = v15;
  v17 = (uint64_t *)(a5 + 16);
  v18 = (uint64_t *)(a6 + 16);
  v25[1] = a2[1];
  v26 = *((_OWORD *)a2 + 1);
  v27 = a2[4];
  v28 = v16;
  v24[0] = a7;
  v24[1] = a8;
  swift_beginAccess();
  swift_beginAccess();
  sub_1D4405D8C(a3, a4, v17, v18, a1, (uint64_t)v25, v24, (uint64_t *)v29);
  swift_endAccess();
  swift_endAccess();
  if (!v10)
  {
    v20 = v30;
    result = *(double *)v29;
    v21 = v29[1];
    v22 = v29[2];
    v23 = v29[3];
    *(_OWORD *)a9 = v29[0];
    *(_OWORD *)(a9 + 16) = v21;
    *(_OWORD *)(a9 + 32) = v22;
    *(_OWORD *)(a9 + 48) = v23;
    *(_QWORD *)(a9 + 64) = v20;
  }
  return result;
}

char *sub_1D4406300(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr), char *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;

  sub_1D42FAF94();
  if (!v4)
  {
    a3(&v20);
    swift_bridgeObjectRelease();
    v8 = v21;
    if (v21)
    {
      v9 = v20;
      v10 = v22;
      v11 = v23;
      v12 = v24;
      v13 = v27;
      v17 = v26;
      v18 = v25;
      v19 = v28;
      v14 = HIDWORD(v24);
      v15 = HIDWORD(v27);
      a4 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SNSoundActionsResult()), sel_init);
      swift_bridgeObjectRetain();
      SNSoundActionsResult.name.setter(v9, v8);
      v16 = &a4[OBJC_IVAR___SNSoundActionsResult_impl];
      *(_QWORD *)&a4[OBJC_IVAR___SNSoundActionsResult_impl + 48] = v10;
      swift_bridgeObjectRelease();
      *(_QWORD *)v16 = v11;
      *((_DWORD *)v16 + 2) = v12;
      *((_DWORD *)v16 + 3) = v14;
      *((_QWORD *)v16 + 2) = v18;
      *((_QWORD *)v16 + 3) = v17;
      *((_DWORD *)v16 + 8) = v13;
      *((_DWORD *)v16 + 9) = v15;
      *((_QWORD *)v16 + 5) = v19;
    }
    else
    {
      return 0;
    }
  }
  return a4;
}

unint64_t sub_1D440645C()
{
  unint64_t result;

  result = qword_1EFE509A8;
  if (!qword_1EFE509A8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4539FE4, &unk_1E9799BF8);
    atomic_store(result, (unint64_t *)&qword_1EFE509A8);
  }
  return result;
}

uint64_t sub_1D4406498()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D44064BC()
{
  return swift_deallocObject();
}

uint64_t sub_1D44064CC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

double sub_1D4406500@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;

  return sub_1D44061E8(a1, a2, v3[2], v3[3], v3[4], v3[5], v3[6], v3[7], a3, v3[8]);
}

void type metadata accessor for SoundActionsUtils()
{
  sub_1D42CB35C();
}

_QWORD *sub_1D440653C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1D4406568(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

_QWORD *sub_1D44065B4(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void type metadata accessor for SoundActionsUtils.PostProcessingBlueprint()
{
  sub_1D42CB35C();
}

uint64_t initializeWithCopy for SoundActionsCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1D4406630(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

_QWORD *sub_1D440668C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

void type metadata accessor for SoundActionsUtils.PostProcessingBlueprint.Action()
{
  sub_1D42CB35C();
}

uint64_t sub_1D44066DC(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D440671C + 4 * asc_1D4539DA0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D440673C + 4 * byte_1D4539DA5[v4]))();
}

_BYTE *sub_1D440671C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D440673C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4406744(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D440674C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4406754(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D440675C(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for SoundActionsUtils.DomainError()
{
  sub_1D42CB35C();
}

unint64_t sub_1D4406778()
{
  unint64_t result;

  result = qword_1EFE509B0;
  if (!qword_1EFE509B0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4539E4C, &unk_1E9799BF8);
    atomic_store(result, (unint64_t *)&qword_1EFE509B0);
  }
  return result;
}

unint64_t sub_1D44067B8()
{
  unint64_t result;

  result = qword_1EFE509B8;
  if (!qword_1EFE509B8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4539E74, &unk_1E9799DA8);
    atomic_store(result, (unint64_t *)&qword_1EFE509B8);
  }
  return result;
}

unint64_t sub_1D44067F8()
{
  unint64_t result;

  result = qword_1EFE509C0;
  if (!qword_1EFE509C0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4539F2C, &unk_1E9799E30);
    atomic_store(result, (unint64_t *)&qword_1EFE509C0);
  }
  return result;
}

unint64_t sub_1D4406834()
{
  unint64_t result;

  result = qword_1EFE509D0;
  if (!qword_1EFE509D0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453A1F0, &type metadata for SoundActionsUtils.PostProcessingBlueprint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE509D0);
  }
  return result;
}

unint64_t sub_1D4406870()
{
  unint64_t result;

  result = qword_1EFE509E8;
  if (!qword_1EFE509E8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4539EC4, &unk_1E9799DA8);
    atomic_store(result, (unint64_t *)&qword_1EFE509E8);
  }
  return result;
}

uint64_t sub_1D44068AC(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_1D42B8B10(&qword_1EFE509D8);
    v8 = a2();
    result = MEMORY[0x1D825E41C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D4406914()
{
  unint64_t result;

  result = qword_1EFE50A00;
  if (!qword_1EFE50A00)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4539E9C, &unk_1E9799DA8);
    atomic_store(result, (unint64_t *)&qword_1EFE50A00);
  }
  return result;
}

unint64_t sub_1D4406950()
{
  unint64_t result;

  result = qword_1EFE50A10;
  if (!qword_1EFE50A10)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453A1A0, &type metadata for SoundActionsUtils.PostProcessingBlueprint.Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50A10);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SoundActionsUtils.PostProcessingBlueprint.Action.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D44069D8 + 4 * byte_1D4539DAF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D4406A0C + 4 * byte_1D4539DAA[v4]))();
}

uint64_t sub_1D4406A0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4406A14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4406A1CLL);
  return result;
}

uint64_t sub_1D4406A28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4406A30);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D4406A34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4406A3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SoundActionsUtils.PostProcessingBlueprint.Action.CodingKeys()
{
  return &type metadata for SoundActionsUtils.PostProcessingBlueprint.Action.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SoundActionsUtils.PostProcessingBlueprint.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D4406AA4 + 4 * byte_1D4539DB9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D4406AD8 + 4 * byte_1D4539DB4[v4]))();
}

uint64_t sub_1D4406AD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4406AE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4406AE8);
  return result;
}

uint64_t sub_1D4406AF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4406AFCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D4406B00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4406B08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SoundActionsUtils.PostProcessingBlueprint.CodingKeys()
{
  return &type metadata for SoundActionsUtils.PostProcessingBlueprint.CodingKeys;
}

unint64_t sub_1D4406B28()
{
  unint64_t result;

  result = qword_1EFE50A20;
  if (!qword_1EFE50A20)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453A0C0, &type metadata for SoundActionsUtils.PostProcessingBlueprint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50A20);
  }
  return result;
}

unint64_t sub_1D4406B68()
{
  unint64_t result;

  result = qword_1EFE50A28;
  if (!qword_1EFE50A28)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453A178, &type metadata for SoundActionsUtils.PostProcessingBlueprint.Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50A28);
  }
  return result;
}

unint64_t sub_1D4406BA8()
{
  unint64_t result;

  result = qword_1EFE50A30;
  if (!qword_1EFE50A30)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453A0E8, &type metadata for SoundActionsUtils.PostProcessingBlueprint.Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50A30);
  }
  return result;
}

unint64_t sub_1D4406BE8()
{
  unint64_t result;

  result = qword_1EFE50A38;
  if (!qword_1EFE50A38)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453A110, &type metadata for SoundActionsUtils.PostProcessingBlueprint.Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50A38);
  }
  return result;
}

unint64_t sub_1D4406C28()
{
  unint64_t result;

  result = qword_1EFE50A40;
  if (!qword_1EFE50A40)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453A030, &type metadata for SoundActionsUtils.PostProcessingBlueprint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50A40);
  }
  return result;
}

unint64_t sub_1D4406C68()
{
  unint64_t result;

  result = qword_1EFE50A48;
  if (!qword_1EFE50A48)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453A058, &type metadata for SoundActionsUtils.PostProcessingBlueprint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50A48);
  }
  return result;
}

uint64_t sub_1D4406CA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1D4406CB8()
{
  return sub_1D451B754();
}

uint64_t sub_1D4406CEC()
{
  return sub_1D451A74C();
}

uint64_t sub_1D4406CF8@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

void sub_1D4406D04()
{
  sub_1D442FFE4();
}

void sub_1D4406D10()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D42CB740();
  sub_1D4419194();
  sub_1D4419324();
  sub_1D42F86A4();
  MEMORY[0x1E0C80A78](v0);
  sub_1D4418F00();
  sub_1D44A476C();
  v1 = sub_1D42B8DB4();
  sub_1D44195F4(v1);
  sub_1D441931C(&qword_1EFE50FE0);
  sub_1D42D71EC();
  sub_1D44195D0();
  sub_1D4418E88();
  sub_1D4419138();
  sub_1D4418F48();
  sub_1D42CB520();
}

void sub_1D4406DA0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D42CB740();
  sub_1D4419194();
  sub_1D4419324();
  sub_1D42F86A4();
  MEMORY[0x1E0C80A78](v0);
  sub_1D4418F00();
  sub_1D44A48AC();
  v1 = sub_1D42B8DB4();
  sub_1D44195F4(v1);
  sub_1D441931C(&qword_1EFE51198);
  sub_1D42D71EC();
  sub_1D44195D0();
  sub_1D4418E88();
  sub_1D4419138();
  sub_1D4418F48();
  sub_1D42CB520();
}

void sub_1D4406E30()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D42CB740();
  sub_1D4419194();
  sub_1D4419324();
  sub_1D42F86A4();
  MEMORY[0x1E0C80A78](v0);
  sub_1D4418F00();
  sub_1D44A49EC();
  v1 = sub_1D42B8DB4();
  sub_1D44195F4(v1);
  sub_1D441931C(qword_1EFE51218);
  sub_1D42D71EC();
  sub_1D44195D0();
  sub_1D4418E88();
  sub_1D4419138();
  sub_1D4418F48();
  sub_1D42CB520();
}

void sub_1D4406EC0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D42CB740();
  sub_1D4419194();
  sub_1D4419324();
  sub_1D42F86A4();
  MEMORY[0x1E0C80A78](v0);
  sub_1D4418F00();
  sub_1D44A494C();
  v1 = sub_1D42B8DB4();
  sub_1D44195F4(v1);
  sub_1D441931C(&qword_1EFE51230);
  sub_1D42D71EC();
  sub_1D44195D0();
  sub_1D4418E88();
  sub_1D4419138();
  sub_1D4418F48();
  sub_1D42CB520();
}

void sub_1D4406F50()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D42CB740();
  sub_1D4419194();
  sub_1D4419324();
  sub_1D42F86A4();
  MEMORY[0x1E0C80A78](v0);
  sub_1D4418F00();
  sub_1D44A4CEC();
  v1 = sub_1D42B8DB4();
  sub_1D44195F4(v1);
  sub_1D441931C(qword_1EFE511E0);
  sub_1D42D71EC();
  sub_1D44195D0();
  sub_1D4418E88();
  sub_1D4419138();
  sub_1D4418F48();
  sub_1D42CB520();
}

void sub_1D4406FE0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D42CB740();
  sub_1D42B28FC(&qword_1EFE51118);
  sub_1D42F86A4();
  MEMORY[0x1E0C80A78](v0);
  sub_1D43B9F74();
  sub_1D42E33F8(qword_1EFE4CE30, (uint64_t *)&unk_1EFE4CDC0);
  sub_1D451A38C();
  sub_1D451A1B8();
  v1 = sub_1D42B8DB4();
  *(_QWORD *)(v1 + 16) = sub_1D4417CDC;
  *(_QWORD *)(v1 + 24) = 0;
  sub_1D4419324();
  sub_1D42E33F8(&qword_1EFE51128, &qword_1EFE51118);
  sub_1D441931C(qword_1EFE51130);
  sub_1D451A3C8();
  swift_release();
  sub_1D4418F48();
  sub_1D42CB520();
}

void sub_1D4407110(char a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  LOBYTE(v13) = a1 & 1;
  v5 = sub_1D451A728();
  v7 = v6;
  if (qword_1EFE40338 != -1)
    swift_once();
  v8 = sub_1D451A014();
  sub_1D42CC880(v8, (uint64_t)qword_1EFEA7700);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v9 = sub_1D4519FFC();
  v10 = sub_1D451AF74();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v13 = v12;
    *(_DWORD *)v11 = 136446466;
    swift_bridgeObjectRetain();
    sub_1D43D72EC(a2, a3, &v13);
    sub_1D451B1A8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1D43D72EC(v5, v7, &v13);
    sub_1D451B1A8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D42A7000, v9, v10, "%{public}sreceive value %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D825E524](v12, -1, -1);
    MEMORY[0x1D825E524](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

void sub_1D440732C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[2];

  v14[0] = a1;
  v14[1] = a2;
  swift_bridgeObjectRetain();
  v6 = sub_1D451A728();
  v8 = v7;
  if (qword_1EFE40338 != -1)
    swift_once();
  v9 = sub_1D451A014();
  sub_1D42CC880(v9, (uint64_t)qword_1EFEA7700);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v10 = sub_1D4519FFC();
  v11 = sub_1D451AF74();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v14[0] = v13;
    *(_DWORD *)v12 = 136446466;
    swift_bridgeObjectRetain();
    sub_1D43D72EC(a3, a4, v14);
    sub_1D451B1A8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1D43D72EC(v6, v8, v14);
    sub_1D451B1A8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D42A7000, v10, v11, "%{public}sreceive value %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D825E524](v13, -1, -1);
    MEMORY[0x1D825E524](v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1D440754C(void *a1, uint64_t a2, unint64_t a3)
{
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v15;

  v15 = (uint64_t)a1;
  sub_1D438B75C();
  v6 = a1;
  v7 = sub_1D451A728();
  v9 = v8;
  if (qword_1EFE40338 != -1)
    swift_once();
  v10 = sub_1D451A014();
  sub_1D42CC880(v10, (uint64_t)qword_1EFEA7700);
  swift_bridgeObjectRetain_n();
  sub_1D42CB7B8();
  v11 = sub_1D4519FFC();
  v12 = sub_1D451AF74();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = sub_1D42CC940();
    v15 = sub_1D42CC940();
    *(_DWORD *)v13 = 136446466;
    sub_1D42CB7F8();
    sub_1D43D72EC(a2, a3, &v15);
    sub_1D451B1A8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2080;
    sub_1D42CB7B8();
    sub_1D43D72EC(v7, v9, &v15);
    sub_1D451B1A8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D42A7000, v11, v12, "%{public}sreceive value %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    sub_1D42CC934();
  }

  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease_n();
}

void sub_1D4407750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16[4];

  v16[0] = a1;
  v16[1] = a2;
  v16[2] = a3;
  v16[3] = a4;
  swift_bridgeObjectRetain();
  sub_1D42B28FC(&qword_1EFE4AFD0);
  v8 = sub_1D451A728();
  v10 = v9;
  if (qword_1EFE40338 != -1)
    swift_once();
  v11 = sub_1D451A014();
  sub_1D42CC880(v11, (uint64_t)qword_1EFEA7700);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v12 = sub_1D4519FFC();
  v13 = sub_1D451AF74();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    v16[0] = v15;
    *(_DWORD *)v14 = 136446466;
    swift_bridgeObjectRetain();
    sub_1D43D72EC(a5, a6, v16);
    sub_1D451B1A8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1D43D72EC(v8, v10, v16);
    sub_1D451B1A8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D42A7000, v12, v13, "%{public}sreceive value %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D825E524](v15, -1, -1);
    MEMORY[0x1D825E524](v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

void sub_1D440797C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  const void *v4;
  const void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  _BYTE v82[216];
  _BYTE v83[216];
  _BYTE v84[224];

  sub_1D42BE910();
  v76 = v1;
  v74 = v2;
  v75 = v3;
  v5 = v4;
  v71 = v6;
  v68 = sub_1D42B28FC(&qword_1EFE4CA80);
  v66 = *(_QWORD *)(v68 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42BE768();
  v65 = v8;
  v9 = sub_1D42B28FC(&qword_1EFE4CA88);
  v69 = *(_QWORD *)(v9 - 8);
  v70 = v9;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v10);
  sub_1D441946C(v11, v60);
  v79 = sub_1D42EA2A8();
  v12 = *(_QWORD *)(v79 - 8);
  v13 = MEMORY[0x1E0C80A78](v79);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v60 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v60 - v19;
  sub_1D435EB08(v82, v5);
  sub_1D4519D14();
  sub_1D435C71C(v82, v83);
  sub_1D435C71C(v83, v84);
  LODWORD(v5) = sub_1D435C758((uint64_t)v84);
  nullsub_1(v84);
  if ((_DWORD)v5 == 1)
  {
    sub_1D4419344();
    v80 = v21;
    v81 = v22;
    sub_1D451A794();
  }
  else
  {
    v80 = 0;
    v81 = 0xE000000000000000;
    sub_1D451B514();
  }
  v23 = v81;
  v78 = v80;
  if (qword_1EFE40338 != -1)
    swift_once();
  v24 = sub_1D451A014();
  v25 = sub_1D42CC880(v24, (uint64_t)qword_1EFEA7700);
  v63 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v63(v18, v20, v79);
  swift_bridgeObjectRetain_n();
  v64 = v25;
  v26 = v12;
  v27 = sub_1D4519FFC();
  v28 = sub_1D451AF74();
  LODWORD(v73) = v28;
  v29 = os_log_type_enabled(v27, v28);
  v72 = v15;
  if (v29)
  {
    v30 = sub_1D42CC940();
    v62 = v20;
    v31 = v30;
    v61 = sub_1D42CC940();
    v80 = v61;
    *(_DWORD *)v31 = 136446466;
    v60 = v31 + 4;
    sub_1D43287AC(&qword_1EFE4CB00, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v32 = v79;
    v33 = sub_1D451B7C0();
    sub_1D4419740(v33, v34);
    sub_1D451B1A8();
    sub_1D42B7204();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v18, v32);
    *(_WORD *)(v31 + 12) = 2080;
    sub_1D42D71EC();
    sub_1D43D72EC(v78, v23, &v80);
    sub_1D451B1A8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D42A7000, v27, (os_log_type_t)v73, "Started Creating Accessibility Sound Recognition Session %{public}s (%s)", (uint8_t *)v31, 0x16u);
    sub_1D441981C();
    sub_1D42CC934();
  }
  v35 = *(void (**)(char *, uint64_t))(v26 + 8);
  v35(v18, v79);

  swift_bridgeObjectRelease_n();
  v36 = sub_1D4411334(v82, v74, v75, v76);
  if (v0)
  {
    v35(v20, v79);
    sub_1D42CB5C8();
  }
  else
  {
    v37 = v36;
    v77 = v35;
    v38 = (_QWORD *)sub_1D42B6F40();
    v38[2] = sub_1D440E708;
    v38[3] = 0;
    v38[4] = v37;
    sub_1D42CB9F8();
    v39 = v23;
    sub_1D42E3F8C(&qword_1EFE50D00);
    v40 = v65;
    sub_1D451A2C0();
    v80 = 0;
    v81 = 0xE000000000000000;
    sub_1D451B400();
    sub_1D4419334();
    sub_1D4419058();
    v80 = v41;
    v81 = v42;
    sub_1D43287AC(&qword_1EFE4CB00, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v43 = v79;
    v75 = v44;
    sub_1D451B7C0();
    sub_1D451A794();
    sub_1D42CB208();
    sub_1D44196C4();
    sub_1D451A794();
    sub_1D44194E0();
    v45 = v67;
    sub_1D4406D10();
    sub_1D42CB208();
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v40, v68);
    sub_1D42E33F8(&qword_1EFE50FB0, &qword_1EFE4CA88);
    v46 = (char *)sub_1D43072A8();
    sub_1D4307058(v45, *(uint64_t (**)(uint64_t, uint64_t))(v69 + 8));
    v47 = v71;
    v48 = sub_1D4419394();
    v49 = v63;
    ((void (*)(uint64_t))v63)(v48);
    *(_QWORD *)(v47 + *(int *)(type metadata accessor for AccessibilitySoundRecognition.Session(0) + 20)) = v46;
    v50 = v72;
    v49(v72, v20, v43);
    v76 = v39;
    sub_1D42CB8FC();
    swift_retain();
    v51 = (uint64_t)v20;
    v52 = sub_1D4519FFC();
    v53 = sub_1D451AF74();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = sub_1D42CC940();
      v62 = (char *)v51;
      v55 = v54;
      v73 = sub_1D42CC940();
      v80 = v73;
      *(_DWORD *)v55 = 136446466;
      v74 = v46;
      v56 = v79;
      v57 = sub_1D451B7C0();
      sub_1D4419740(v57, v58);
      v75 = 0;
      sub_1D451B1A8();
      sub_1D42B7204();
      v77(v50, v56);
      *(_WORD *)(v55 + 12) = 2080;
      v59 = v76;
      sub_1D438C74C();
      sub_1D43D72EC(v78, v59, &v80);
      sub_1D451B1A8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D42A7000, v52, v53, "Finished Creating Accessibility Sound Recognition Session %{public}s (%s)", (uint8_t *)v55, 0x16u);
      sub_1D441981C();
      sub_1D42CC934();
    }
    swift_bridgeObjectRelease_n();

    v77(v50, v79);
    sub_1D42E3F48();
    sub_1D4419064(v51);
  }
  sub_1D42BE844();
}

uint64_t sub_1D4408074@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = v1[1];
  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v9 = v1[7];
  v8 = v1[8];
  v11 = v1[9];
  v10 = v1[10];
  v13 = v1[11];
  v12 = v1[12];
  v15 = v1[13];
  v16 = v1[14];
  v17 = v1[15];
  *a1 = *(int *)v1;
  a1[1] = &unk_1E97AB800;
  a1[2] = v2;
  a1[3] = &unk_1E97AB660;
  a1[4] = v3;
  a1[5] = v4;
  a1[6] = &unk_1E97AB6A0;
  a1[7] = v5;
  a1[8] = v6;
  a1[9] = &unk_1E97AB6E0;
  a1[10] = v7;
  a1[11] = v9;
  a1[12] = &unk_1E97AB720;
  a1[13] = v8;
  a1[14] = v11;
  a1[15] = &unk_1E97AB760;
  a1[16] = v10;
  a1[17] = v13;
  a1[18] = &unk_1E97AB7A0;
  a1[19] = v12;
  a1[20] = v15;
  a1[21] = &unk_1E97AB7D0;
  a1[22] = v16;
  a1[23] = v17;
  swift_bridgeObjectRetain();
  sub_1D42CB7F8();
  sub_1D42DCE84();
  sub_1D42D71EC();
  sub_1D42CB7B8();
  sub_1D43F8AC8();
  sub_1D42F20E8();
  sub_1D42CB9DC();
  sub_1D438C74C();
  sub_1D42CB8FC();
  sub_1D42CB6CC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t *sub_1D440819C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (*result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (*result <= 0x7FFFFFFF)
  {
    v18 = result[2];
    v15 = result[4];
    v16 = result[5];
    v3 = result[13];
    v4 = result[14];
    v5 = result[16];
    v6 = result[17];
    v7 = result[11];
    v8 = result[19];
    v9 = result[10];
    v10 = result[20];
    v11 = result[8];
    v12 = result[22];
    v13 = result[7];
    v14 = result[23];
    v17 = *result;
    swift_bridgeObjectRetain();
    sub_1D42CB8FC();
    sub_1D42D71EC();
    sub_1D438C74C();
    sub_1D42CB9DC();
    sub_1D42F20E8();
    sub_1D43F8AC8();
    sub_1D42CB7F8();
    sub_1D42DCE84();
    sub_1D42CB7F8();
    sub_1D42CB8FC();
    sub_1D42D71EC();
    sub_1D438C74C();
    sub_1D42CB9DC();
    sub_1D42F20E8();
    result = (uint64_t *)sub_1D4419814();
    *(_DWORD *)a2 = v17;
    *(_QWORD *)(a2 + 8) = v18;
    *(_QWORD *)(a2 + 16) = v15;
    *(_QWORD *)(a2 + 24) = v16;
    *(_QWORD *)(a2 + 32) = v13;
    *(_QWORD *)(a2 + 40) = v11;
    *(_QWORD *)(a2 + 48) = v9;
    *(_QWORD *)(a2 + 56) = v7;
    *(_QWORD *)(a2 + 64) = v3;
    *(_QWORD *)(a2 + 72) = v4;
    *(_QWORD *)(a2 + 80) = v5;
    *(_QWORD *)(a2 + 88) = v6;
    *(_QWORD *)(a2 + 96) = v8;
    *(_QWORD *)(a2 + 104) = v10;
    *(_QWORD *)(a2 + 112) = v12;
    *(_QWORD *)(a2 + 120) = v14;
    return result;
  }
  __break(1u);
  return result;
}

void sub_1D44082F8()
{
  _QWORD *v0;

  MEMORY[0x1D825E41C](&unk_1D452B88C, *v0);
  sub_1D4408364();
}

void sub_1D4408364()
{
  sub_1D42BE910();
  swift_getAssociatedTypeWitness();
  sub_1D4419124();
  sub_1D4419124();
  sub_1D4419124();
  type metadata accessor for SharedSoundPrintK.Configuration();
}

void sub_1D44083FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v11);
  sub_1D440EBDC(*(_QWORD *)(v10 - 144), v9, (uint64_t)&a9 - v12);
}

void sub_1D4408444()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 40))(v1, v2, v0);
  sub_1D437ED90(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_1D42BE844();
}

void sub_1D4408488()
{
  sub_1D44082F8();
}

uint64_t sub_1D44084A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  _QWORD v6[5];

  v6[3] = &unk_1E979AD08;
  v6[4] = &off_1E979AC68;
  v2 = sub_1D42B6F40();
  v6[0] = v2;
  v3 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 48) = *(_QWORD *)(v0 + 32);
  swift_retain();
  sub_1D42BE9A0();
  swift_retain();
  v4 = sub_1D444BFE4(v6, 0xD000000000000035, 0x80000001D4556E70);
  if (!v1)
    LOBYTE(v0) = v4 & 1;
  sub_1D43C2400(v4);
  return v0 & 1;
}

void sub_1D4408574(uint64_t a1, uint64_t a2)
{
  _QWORD __src[6];
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  if (qword_1EFE48EE8 != -1)
    swift_once();
  __src[0] = qword_1EFEA7940;
  __src[1] = *(_QWORD *)algn_1EFEA7948;
  __src[2] = qword_1EFEA7950;
  __src[3] = unk_1EFEA7958;
  __src[4] = qword_1EFEA7960;
  __src[5] = unk_1EFEA7968;
  v5 = byte_1EFEA7970;
  v6 = byte_1EFEA7971;
  v7 = byte_1EFEA7972;
  v8 = byte_1EFEA7973;
  v9 = byte_1EFEA7974;
  v10 = byte_1EFEA7975;
  v11 = qword_1EFEA7978;
  v12 = byte_1EFEA7980;
  v13 = a1;
  v14 = a2;
  sub_1D42CB8FC();
  swift_retain();
  sub_1D4307398();
  swift_retain();
  sub_1D42DCE84();
  sub_1D42D71EC();
  sub_1D4390310(__src);
}

void sub_1D44086A0(uint64_t a1, uint64_t a2)
{
  sub_1D4408574(a1, a2);
}

void sub_1D44086B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D825E41C](&unk_1D4545688, a3);
  sub_1D4408364();
}

void sub_1D4408710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D44086B4(a1, a2, a3);
}

void static AccessibilitySoundRecognition.isSupported.getter()
{
  void *v0;
  id v1;
  char v2;
  char v3;
  id v4;
  void *v5;
  int exclaveCapability;
  uint64_t v7;

  if (qword_1EFE47240 != -1)
    swift_once();
  v1 = objc_msgSend((id)qword_1EFE47238, sel_dictionaryRepresentation);
  sub_1D451A5CC();

  sub_1D430740C();
  sub_1D43C241C();
  if (v0)
  {

    sub_1D42BE8B4();
  }
  else
  {
    v3 = v2;
    sub_1D42BE8B4();
    if ((v3 & 1) == 0)
    {
LABEL_9:
      sub_1D42CB758();
      return;
    }
  }
  v4 = (id)MobileGestalt_get_current_device();
  if (v4)
  {
    v5 = v4;
    exclaveCapability = MobileGestalt_get_exclaveCapability();

    if (exclaveCapability)
    {
      v7 = MGGetProductType();
      sub_1D4380234(v7);
      return;
    }
    goto LABEL_9;
  }
  __break(1u);
}

void sub_1D440883C()
{
  void *v0;
  char v1;
  id v2;

  static AccessibilitySoundRecognition.isSupported.getter();
  if ((v1 & 1) != 0)
  {
    if (qword_1EFE47240 != -1)
      swift_once();
    v2 = objc_msgSend((id)qword_1EFE47238, sel_dictionaryRepresentation);
    sub_1D451A5CC();

    sub_1D43C241C();
    if (v0)

    sub_1D42BE8B4();
  }
  sub_1D42CB758();
}

BOOL static AccessibilitySoundRecognition.BuiltInDetectorIdentifier.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void AccessibilitySoundRecognition.BuiltInDetectorIdentifier.hash(into:)()
{
  sub_1D4419548();
  sub_1D42B6E24();
}

uint64_t sub_1D440895C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  char v22;

  v2 = a1 == 0x616C41656B6F6D73 && a2 == 0xEA00000000006D72;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7373657274736964 && a2 == 0xEE00796261426465;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 1885693282 && a2 == 0xE400000000000000;
      if (v7 || (sub_1D451B820() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x72657A7A7562 && a2 == 0xE600000000000000;
        if (v8 || (sub_1D451B820() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x6E726F48726163 && a2 == 0xE700000000000000;
          if (v9 || (sub_1D451B820() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x776F654D746163 && a2 == 0xE700000000000000;
            if (v10 || (sub_1D451B820() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x6867756F63 && a2 == 0xE500000000000000;
              if (v11 || (sub_1D451B820() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                v12 = a1 == 0x6C6C6542676E6964 && a2 == 0xE800000000000000;
                if (v12 || (sub_1D451B820() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else
                {
                  v13 = a1 == 0x6B726142676F64 && a2 == 0xE700000000000000;
                  if (v13 || (sub_1D451B820() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 8;
                  }
                  else
                  {
                    v14 = a1 == 0x6C6C6542726F6F64 && a2 == 0xE800000000000000;
                    if (v14 || (sub_1D451B820() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 9;
                    }
                    else
                    {
                      v15 = a1 == 0x636F6E4B726F6F64 && a2 == 0xE90000000000006BLL;
                      if (v15 || (sub_1D451B820() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 10;
                      }
                      else
                      {
                        v16 = a1 == 0x72616C4165726966 && a2 == 0xE90000000000006DLL;
                        if (v16 || (sub_1D451B820() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 11;
                        }
                        else
                        {
                          v17 = a1 == 0x6572427373616C67 && a2 == 0xED0000676E696B61;
                          if (v17 || (sub_1D451B820() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 12;
                          }
                          else
                          {
                            v18 = a1 == 0x6857656C7474656BLL && a2 == 0xEF676E696C747369;
                            if (v18 || (sub_1D451B820() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 13;
                            }
                            else
                            {
                              v19 = a1 == 0x74756F6873 && a2 == 0xE500000000000000;
                              if (v19 || (sub_1D451B820() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 14;
                              }
                              else
                              {
                                v20 = a1 == 0x616C416E65726973 && a2 == 0xEA00000000006D72;
                                if (v20 || (sub_1D451B820() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 15;
                                }
                                else if (a1 == 0x6E75527265746177 && a2 == 0xEC000000676E696ELL)
                                {
                                  swift_bridgeObjectRelease();
                                  return 16;
                                }
                                else
                                {
                                  v22 = sub_1D451B820();
                                  swift_bridgeObjectRelease();
                                  if ((v22 & 1) != 0)
                                    return 16;
                                  else
                                    return 17;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1D4409064()
{
  return 17;
}

uint64_t sub_1D440906C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D44090A4 + 4 * byte_1D453A240[a1]))(0x616C41656B6F6D73, 0xEA00000000006D72);
}

uint64_t sub_1D44090A4()
{
  return 0x7373657274736964;
}

uint64_t sub_1D44090C8()
{
  return 1885693282;
}

uint64_t sub_1D44090D8()
{
  return 0x72657A7A7562;
}

uint64_t sub_1D44090EC()
{
  return 0x6E726F48726163;
}

uint64_t sub_1D4409104()
{
  return 0x776F654D746163;
}

uint64_t sub_1D440911C()
{
  return 0x6867756F63;
}

uint64_t sub_1D4409130()
{
  return 0x6C6C6542676E6964;
}

uint64_t sub_1D4409170()
{
  return 0x636F6E4B726F6F64;
}

uint64_t sub_1D440918C()
{
  return 0x72616C4165726966;
}

uint64_t sub_1D44091AC()
{
  return 0x6572427373616C67;
}

uint64_t sub_1D44091D0()
{
  return 0x6857656C7474656BLL;
}

uint64_t sub_1D44091F4()
{
  return 0x74756F6873;
}

uint64_t sub_1D4409208()
{
  return 0x616C416E65726973;
}

uint64_t sub_1D440921C()
{
  return 0x6E75527265746177;
}

uint64_t sub_1D440923C()
{
  sub_1D4414B54();
  return sub_1D451BA3C();
}

uint64_t sub_1D4409264()
{
  sub_1D4414B54();
  return sub_1D451BA48();
}

uint64_t sub_1D440928C()
{
  sub_1D4414B18();
  return sub_1D451BA3C();
}

uint64_t sub_1D44092B4()
{
  sub_1D4414B18();
  return sub_1D451BA48();
}

uint64_t sub_1D44092DC()
{
  sub_1D4414ADC();
  return sub_1D451BA3C();
}

uint64_t sub_1D4409304()
{
  sub_1D4414ADC();
  return sub_1D451BA48();
}

uint64_t sub_1D440932C()
{
  sub_1D4414AA0();
  return sub_1D451BA3C();
}

uint64_t sub_1D4409354()
{
  sub_1D4414AA0();
  return sub_1D451BA48();
}

uint64_t sub_1D440937C()
{
  unsigned __int8 *v0;

  return sub_1D440906C(*v0);
}

uint64_t sub_1D4409384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D440895C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D44093A8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D4409064();
  *a1 = result;
  return result;
}

uint64_t sub_1D44093CC()
{
  sub_1D44147D0();
  return sub_1D451BA3C();
}

uint64_t sub_1D44093F4()
{
  sub_1D44147D0();
  return sub_1D451BA48();
}

uint64_t sub_1D440941C()
{
  sub_1D4414A64();
  return sub_1D451BA3C();
}

uint64_t sub_1D4409444()
{
  sub_1D4414A64();
  return sub_1D451BA48();
}

uint64_t sub_1D440946C()
{
  sub_1D4414A28();
  return sub_1D451BA3C();
}

uint64_t sub_1D4409494()
{
  sub_1D4414A28();
  return sub_1D451BA48();
}

uint64_t sub_1D44094BC()
{
  sub_1D4414B90();
  return sub_1D451BA3C();
}

uint64_t sub_1D44094E4()
{
  sub_1D4414B90();
  return sub_1D451BA48();
}

uint64_t sub_1D440950C()
{
  sub_1D44149EC();
  return sub_1D451BA3C();
}

uint64_t sub_1D4409534()
{
  sub_1D44149EC();
  return sub_1D451BA48();
}

uint64_t sub_1D440955C()
{
  sub_1D44149B0();
  return sub_1D451BA3C();
}

uint64_t sub_1D4409584()
{
  sub_1D44149B0();
  return sub_1D451BA48();
}

uint64_t sub_1D44095AC()
{
  sub_1D4414974();
  return sub_1D451BA3C();
}

uint64_t sub_1D44095D4()
{
  sub_1D4414974();
  return sub_1D451BA48();
}

uint64_t sub_1D44095FC()
{
  sub_1D4414938();
  return sub_1D451BA3C();
}

uint64_t sub_1D4409624()
{
  sub_1D4414938();
  return sub_1D451BA48();
}

uint64_t sub_1D440964C()
{
  sub_1D44148FC();
  return sub_1D451BA3C();
}

uint64_t sub_1D4409674()
{
  sub_1D44148FC();
  return sub_1D451BA48();
}

uint64_t sub_1D440969C()
{
  sub_1D44148C0();
  return sub_1D451BA3C();
}

uint64_t sub_1D44096C4()
{
  sub_1D44148C0();
  return sub_1D451BA48();
}

uint64_t sub_1D44096EC()
{
  sub_1D4414884();
  return sub_1D451BA3C();
}

uint64_t sub_1D4409714()
{
  sub_1D4414884();
  return sub_1D451BA48();
}

uint64_t sub_1D440973C()
{
  sub_1D4414848();
  return sub_1D451BA3C();
}

uint64_t sub_1D4409764()
{
  sub_1D4414848();
  return sub_1D451BA48();
}

uint64_t sub_1D440978C()
{
  sub_1D4414BCC();
  return sub_1D451BA3C();
}

uint64_t sub_1D44097B4()
{
  sub_1D4414BCC();
  return sub_1D451BA48();
}

uint64_t sub_1D44097DC()
{
  sub_1D441480C();
  return sub_1D451BA3C();
}

uint64_t sub_1D4409804()
{
  sub_1D441480C();
  return sub_1D451BA48();
}

void *static AccessibilitySoundRecognition.BuiltInDetectorIdentifier.allCases.getter()
{
  return &unk_1E9798778;
}

void AccessibilitySoundRecognition.BuiltInDetectorIdentifier.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD v94[6];
  _QWORD v95[6];
  uint64_t v96;
  uint64_t v97;

  sub_1D42BE910();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v25 = sub_1D42B28FC(&qword_1EFE50A50);
  v95[3] = *(_QWORD *)(v25 - 8);
  v95[4] = v25;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v26);
  sub_1D44190B4(v27, v75);
  v28 = sub_1D42B28FC(&qword_1EFE50A58);
  v95[0] = *(_QWORD *)(v28 - 8);
  v95[1] = v28;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v29);
  sub_1D441907C(v30, v75);
  v31 = sub_1D42B28FC(&qword_1EFE50A60);
  v94[3] = *(_QWORD *)(v31 - 8);
  v94[4] = v31;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v32);
  sub_1D4340A24(v33, v75);
  v34 = sub_1D42B28FC(&qword_1EFE50A68);
  v94[0] = *(_QWORD *)(v34 - 8);
  v94[1] = v34;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v35);
  sub_1D43C2368(v36, v75);
  v37 = sub_1D42B28FC(&qword_1EFE50A70);
  v92 = *(_QWORD *)(v37 - 8);
  v93 = v37;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v38);
  sub_1D4419434(v39, v75);
  v40 = sub_1D42B28FC(&qword_1EFE50A78);
  v90 = *(_QWORD *)(v40 - 8);
  v91 = v40;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v41);
  sub_1D42BA180((uint64_t)&v75 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  v43 = sub_1D42B28FC(&qword_1EFE50A80);
  sub_1D42BA240(v43, (uint64_t)&a17);
  v89 = v44;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v45);
  sub_1D42BE768();
  sub_1D42BA180(v46);
  v88 = sub_1D42B28FC(&qword_1EFE50A88);
  v87 = *(_QWORD *)(v88 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v47);
  sub_1D42BE768();
  sub_1D42BA180(v48);
  v49 = sub_1D42B28FC(&qword_1EFE50A90);
  sub_1D42BA240(v49, (uint64_t)&a11);
  v86 = v50;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v51);
  sub_1D42BE768();
  sub_1D42BA180(v52);
  v85 = sub_1D42B28FC(&qword_1EFE50A98);
  v84 = *(_QWORD *)(v85 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v53);
  sub_1D42BE768();
  sub_1D42BA180(v54);
  v55 = sub_1D42B28FC(&qword_1EFE50AA0);
  sub_1D42BA240(v55, (uint64_t)&v96);
  v83 = v56;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v57);
  sub_1D42BE768();
  sub_1D42BA180(v58);
  v82 = sub_1D42B28FC(&qword_1EFE50AA8);
  v81 = *(_QWORD *)(v82 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v59);
  sub_1D42BE768();
  sub_1D42BA180(v60);
  v61 = sub_1D42B28FC(&qword_1EFE50AB0);
  sub_1D42BA240(v61, (uint64_t)v95);
  v80 = v62;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v63);
  sub_1D42BE768();
  sub_1D42BA180(v64);
  v79 = sub_1D42B28FC(&qword_1EFE50AB8);
  v78 = *(_QWORD *)(v79 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v65);
  sub_1D42BE768();
  sub_1D42BA180(v66);
  v67 = sub_1D42B28FC(&qword_1EFE50AC0);
  sub_1D42BA240(v67, (uint64_t)v94);
  v77 = v68;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v69);
  sub_1D42BE768();
  sub_1D42BA180(v70);
  v76 = sub_1D42B28FC(&qword_1EFE50AC8);
  v75 = *(_QWORD *)(v76 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v71);
  sub_1D437EC98();
  sub_1D42B28FC(&qword_1EFE50AD0);
  sub_1D4396480();
  MEMORY[0x1E0C80A78](v72);
  sub_1D43479B4();
  v97 = sub_1D42B28FC(&qword_1EFE50AD8);
  v96 = *(_QWORD *)(v97 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v73);
  sub_1D42D7108();
  v74 = *v20;
  sub_1D44195DC(v24);
  sub_1D44147D0();
  sub_1D451BA24();
  __asm { BR              X9 }
}

void sub_1D4409C38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 - 65) = 0;
  sub_1D4414BCC();
  sub_1D4418E78();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v3, v2);
  sub_1D42F1FA0(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 112) + 8));
  sub_1D42BE844();
}

void AccessibilitySoundRecognition.BuiltInDetectorIdentifier.hashValue.getter()
{
  sub_1D42BE9A8();
  sub_1D42CB3DC();
  sub_1D42CB230();
  sub_1D42BE978();
}

void AccessibilitySoundRecognition.BuiltInDetectorIdentifier.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD v97[2];
  _QWORD v98[4];
  uint64_t v99;
  _QWORD v100[3];
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;

  sub_1D42BE910();
  a19 = v23;
  a20 = v24;
  v104 = v21;
  v26 = v25;
  v100[2] = v27;
  sub_1D42B28FC(&qword_1EFE50B70);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v28);
  sub_1D44190B4(v29, v83);
  v30 = sub_1D42B28FC(&qword_1EFE50B78);
  sub_1D42BA240(v30, (uint64_t)&a18);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v31);
  sub_1D4419098(v32, v84);
  v33 = sub_1D42B28FC(&qword_1EFE50B80);
  sub_1D42BA240(v33, (uint64_t)&a16);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v34);
  sub_1D4419418(v35, v85);
  sub_1D42B28FC(&qword_1EFE50B88);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v36);
  sub_1D441907C(v37, v86);
  v38 = sub_1D42B28FC(&qword_1EFE50B90);
  sub_1D42BA240(v38, (uint64_t)&a12);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v39);
  sub_1D42BE768();
  v98[3] = v40;
  v41 = sub_1D42B28FC(&qword_1EFE50B98);
  sub_1D42BA240(v41, (uint64_t)&a10);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v42);
  sub_1D42BE768();
  v98[2] = v43;
  sub_1D42B28FC(&qword_1EFE50BA0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v44);
  sub_1D437ED74(v45, v87);
  sub_1D42B28FC(&qword_1EFE50BA8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v46);
  sub_1D4340A24(v47, v88);
  v48 = sub_1D42B28FC(&qword_1EFE50BB0);
  sub_1D42BA240(v48, (uint64_t)&v102);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v49);
  sub_1D437EC50(v50, v89);
  v51 = sub_1D42B28FC(&qword_1EFE50BB8);
  sub_1D42BA240(v51, (uint64_t)&v101);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v52);
  sub_1D4321160(v53, v90);
  v54 = sub_1D42B28FC(&qword_1EFE50BC0);
  sub_1D42BA240(v54, (uint64_t)v100);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v55);
  sub_1D4419450(v56, v91);
  v57 = sub_1D42B28FC(&qword_1EFE50BC8);
  sub_1D42BA240(v57, (uint64_t)&v99);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v58);
  sub_1D42BE768();
  v97[1] = v59;
  sub_1D42B28FC(&qword_1EFE50BD0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v60);
  sub_1D43C2368(v61, v92);
  v62 = sub_1D42B28FC(&qword_1EFE50BD8);
  sub_1D42BA240(v62, (uint64_t)v98);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v63);
  sub_1D44193FC(v64, v93);
  v65 = sub_1D42B28FC(&qword_1EFE50BE0);
  sub_1D42BA240(v65, (uint64_t)v97);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v66);
  sub_1D4419488(v67, v94);
  sub_1D42B28FC(&qword_1EFE50BE8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v68);
  sub_1D4419434(v69, v95);
  sub_1D42B28FC(&qword_1EFE50BF0);
  sub_1D42CB4F8();
  MEMORY[0x1E0C80A78](v70);
  sub_1D42D7108();
  sub_1D42B28FC(&qword_1EFE50BF8);
  sub_1D42F86A4();
  MEMORY[0x1E0C80A78](v71);
  sub_1D43383FC();
  v103 = v26;
  sub_1D4419144(v26);
  sub_1D44147D0();
  v72 = v104;
  sub_1D451BA0C();
  if (!v72)
  {
    v104 = v22;
    v96 = v20;
    v73 = sub_1D451B6D0();
    v74 = *(_QWORD *)(v73 + 16);
    if (v74)
    {
      v75 = *(unsigned __int8 *)(v73 + 32);
      sub_1D43B7948(1, v74, v73, v73 + 32, 0, (2 * v74) | 1);
      v77 = v76;
      v79 = v78;
      sub_1D435EB80();
      if (v77 == v79 >> 1)
        __asm { BR              X9 }
    }
    v80 = sub_1D437EE80();
    sub_1D42B6D0C();
    v82 = v81;
    sub_1D42B28FC(&qword_1EFE49ED0);
    *v82 = &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier;
    sub_1D451B61C();
    sub_1D437ECB0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v80 - 8) + 104))(v82, *MEMORY[0x1E0DEC450], v80);
    swift_willThrow();
    sub_1D44191B0();
    sub_1D43211E8(v96, *(uint64_t (**)(uint64_t, uint64_t))(v104 + 8));
  }
  sub_1D42B5400((uint64_t)v103);
  sub_1D42BE844();
}

void sub_1D440A4DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD);

  sub_1D4419780();
  sub_1D4418E4C();
  if (v0)
  {
    sub_1D44191B0();
    JUMPOUT(0x1D440A4BCLL);
  }
  v2 = sub_1D44191A4();
  v3(v2, *(_QWORD *)(v1 - 488));
  sub_1D44191B0();
  JUMPOUT(0x1D440A818);
}

void sub_1D440A510()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  sub_1D4419718();
  sub_1D4418E4C();
  if (!v1)
  {
    v4 = sub_1D4418EF0();
    v5(v4, *(_QWORD *)(v3 - 472));
    sub_1D44191B0();
    sub_1D43211E8(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8));
    **(_BYTE **)(v3 - 136) = v2;
    JUMPOUT(0x1D440A4C4);
  }
  JUMPOUT(0x1D440A4B0);
}

void sub_1D440A548()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  sub_1D441970C();
  sub_1D4418E4C();
  if (!v1)
  {
    v4 = sub_1D4418EF0();
    v5(v4, *(_QWORD *)(v3 - 456));
    sub_1D44191B0();
    sub_1D43211E8(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8));
    **(_BYTE **)(v3 - 136) = v2;
    JUMPOUT(0x1D440A4C4);
  }
  JUMPOUT(0x1D440A4B0);
}

void sub_1D440A580()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, _QWORD);

  sub_1D4419700();
  sub_1D4418E4C();
  if (!v1)
  {
    v4 = sub_1D4419508();
    v6(v4, *(_QWORD *)(v5 - 256));
    sub_1D44191B0();
    sub_1D43211E8(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8));
    **(_BYTE **)(v3 - 136) = v2;
    JUMPOUT(0x1D440A4C4);
  }
  JUMPOUT(0x1D440A4B0);
}

void sub_1D440A5B0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  sub_1D44196F4();
  sub_1D4418E4C();
  if (!v1)
  {
    v4 = sub_1D4418EF0();
    v5(v4, *(_QWORD *)(v3 - 424));
    sub_1D44191B0();
    sub_1D43211E8(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8));
    **(_BYTE **)(v3 - 136) = v2;
    JUMPOUT(0x1D440A4C4);
  }
  JUMPOUT(0x1D440A4B0);
}

void sub_1D440A5E8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  sub_1D44196E8();
  sub_1D4418E4C();
  if (!v1)
  {
    v4 = sub_1D4418EF0();
    v5(v4, *(_QWORD *)(v3 - 408));
    sub_1D44191B0();
    sub_1D43211E8(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8));
    **(_BYTE **)(v3 - 136) = v2;
    JUMPOUT(0x1D440A4C4);
  }
  JUMPOUT(0x1D440A4B0);
}

void sub_1D440A620()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  sub_1D44196DC();
  sub_1D4418E4C();
  if (!v1)
  {
    v4 = sub_1D4418EF0();
    v5(v4, *(_QWORD *)(v3 - 384));
    sub_1D44191B0();
    sub_1D43211E8(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8));
    **(_BYTE **)(v3 - 136) = v2;
    JUMPOUT(0x1D440A4C4);
  }
  JUMPOUT(0x1D440A4B0);
}

void sub_1D440A654()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  sub_1D44196D0();
  sub_1D4418E4C();
  if (!v1)
  {
    v4 = sub_1D44191A4();
    v5(v4, *(_QWORD *)(v3 - 376));
    sub_1D44191B0();
    sub_1D43211E8(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8));
    **(_BYTE **)(v3 - 136) = v2;
    JUMPOUT(0x1D440A4C4);
  }
  JUMPOUT(0x1D440A4B0);
}

void sub_1D440A68C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  sub_1D44196B8();
  sub_1D4418E4C();
  if (!v1)
  {
    v4 = sub_1D44191A4();
    v5(v4, *(_QWORD *)(v3 - 360));
    sub_1D44191B0();
    sub_1D43211E8(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8));
    **(_BYTE **)(v3 - 136) = v2;
    JUMPOUT(0x1D440A4C4);
  }
  JUMPOUT(0x1D440A4B0);
}

void sub_1D440A6C8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, _QWORD);

  sub_1D44196AC();
  sub_1D4418E4C();
  if (!v1)
  {
    v4 = sub_1D44194F0();
    v6(v4, *(_QWORD *)(v5 - 256));
    sub_1D44191B0();
    sub_1D43211E8(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8));
    **(_BYTE **)(v3 - 136) = v2;
    JUMPOUT(0x1D440A4C4);
  }
  JUMPOUT(0x1D440A4B0);
}

void sub_1D440A6F8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  sub_1D4419680();
  sub_1D4418E4C();
  if (!v1)
  {
    v4 = sub_1D4418EF0();
    v5(v4, *(_QWORD *)(v3 - 328));
    sub_1D44191B0();
    sub_1D43211E8(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8));
    **(_BYTE **)(v3 - 136) = v2;
    JUMPOUT(0x1D440A4C4);
  }
  JUMPOUT(0x1D440A4B0);
}

void sub_1D440A730()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  sub_1D4419668();
  sub_1D4418E4C();
  if (!v1)
  {
    v4 = sub_1D4418EF0();
    v5(v4, *(_QWORD *)(v3 - 312));
    sub_1D44191B0();
    sub_1D43211E8(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8));
    **(_BYTE **)(v3 - 136) = v2;
    JUMPOUT(0x1D440A4C4);
  }
  JUMPOUT(0x1D440A4B0);
}

void sub_1D440A768()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, _QWORD);

  sub_1D441965C();
  sub_1D4418E4C();
  if (!v1)
  {
    v4 = sub_1D44194C8();
    v6(v4, *(_QWORD *)(v5 - 256));
    sub_1D44191B0();
    sub_1D43211E8(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8));
    **(_BYTE **)(v3 - 136) = v2;
    JUMPOUT(0x1D440A4C4);
  }
  JUMPOUT(0x1D440A4B0);
}

void sub_1D440A798()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  sub_1D4419650();
  sub_1D4418E4C();
  if (!v1)
  {
    v4 = sub_1D4418EF0();
    v5(v4, *(_QWORD *)(v3 - 280));
    sub_1D44191B0();
    sub_1D43211E8(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8));
    **(_BYTE **)(v3 - 136) = v2;
    JUMPOUT(0x1D440A4C4);
  }
  JUMPOUT(0x1D440A4B0);
}

void sub_1D440A7D0()
{
  uint64_t v0;

  sub_1D4419644();
  sub_1D4418E4C();
  if (!v0)
  {
    sub_1D4418EF0();
    JUMPOUT(0x1D440A804);
  }
  JUMPOUT(0x1D440A4B0);
}

void sub_1D440A82C()
{
  uint64_t v0;

  sub_1D4419638();
  sub_1D4418E4C();
  if (!v0)
    JUMPOUT(0x1D440A808);
  JUMPOUT(0x1D440A4B0);
}

void sub_1D440A88C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E9798778;
}

#error "1D440A8A4: call analysis failed (funcsize=5)"

#error "1D440A8B8: call analysis failed (funcsize=5)"

void AccessibilitySoundRecognition.DetectorIdentifier.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);

  v2 = sub_1D42EA2A8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1D441922C();
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB18C();
  v5 = sub_1D4419870();
  sub_1D43AF844(v5, v6, v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v0, v1, v2);
    sub_1D437ECC8();
    sub_1D43287AC(&qword_1EFE4A518, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    sub_1D451A614();
    sub_1D42F1FA0(v0, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  }
  else
  {
    sub_1D451B964();
    sub_1D451B964();
  }
  sub_1D42CB0F8();
}

uint64_t static AccessibilitySoundRecognition.DetectorIdentifier.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  uint64_t v18;
  char v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(_QWORD);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_1D42CB740();
  v28 = v3;
  v29 = v4;
  v6 = v5;
  v8 = v7;
  v9 = sub_1D42EA2A8();
  v27 = *(_QWORD *)(v9 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v10);
  sub_1D441922C();
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v11);
  sub_1D44194A4();
  MEMORY[0x1E0C80A78](v12);
  v14 = (unsigned __int8 *)&v26 - v13;
  sub_1D42B28FC(&qword_1EFE50C00);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v15);
  sub_1D42BE8F8();
  v17 = (unsigned __int8 *)(v0 + *(int *)(v16 + 48));
  sub_1D43AF844(v8, v0, type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier);
  sub_1D43AF844(v6, (uint64_t)v17, type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier);
  if (sub_1D43B9FA4() != 1)
  {
    v22 = sub_1D4419394();
    sub_1D43AF844(v22, v23, v24);
    v21 = sub_1D43B9FA4();
    if ((_DWORD)v21 != 1)
    {
      v19 = *v14 == *v17;
      goto LABEL_6;
    }
LABEL_8:
    sub_1D4328A1C(v0, &qword_1EFE50C00);
    v19 = 0;
    return v19 & 1;
  }
  sub_1D43AF844(v0, v2, type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier);
  if (sub_1D43B9FA4() != 1)
  {
    sub_1D42F1FA0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
    goto LABEL_8;
  }
  v18 = v27;
  (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v27 + 32))(v1, v17, v9);
  sub_1D44197B0();
  v19 = sub_1D4519CFC();
  v20 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v20(v1, v9);
  v21 = ((uint64_t (*)(uint64_t, uint64_t))v20)(v2, v9);
LABEL_6:
  sub_1D44195B0(v21, type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier);
  return v19 & 1;
}

uint64_t sub_1D440AB8C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6D6F74737563;
  else
    return 0x6E49746C697562;
}

uint64_t sub_1D440ABC4()
{
  sub_1D4414D58();
  return sub_1D451BA3C();
}

uint64_t sub_1D440ABEC()
{
  sub_1D4414D58();
  return sub_1D451BA48();
}

uint64_t sub_1D440AC14()
{
  char *v0;

  return sub_1D440AB8C(*v0);
}

void sub_1D440AC1C(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_1D440B600(a1, a2);
  *a3 = v4;
}

uint64_t sub_1D440AC40()
{
  sub_1D4414CE0();
  return sub_1D451BA3C();
}

uint64_t sub_1D440AC68()
{
  sub_1D4414CE0();
  return sub_1D451BA48();
}

void sub_1D440AC90(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_1D440B5A4(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_1D440ACB8()
{
  sub_1D4414D1C();
  return sub_1D451BA3C();
}

uint64_t sub_1D440ACE0()
{
  sub_1D4414D1C();
  return sub_1D451BA48();
}

void AccessibilitySoundRecognition.DetectorIdentifier.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1D42BE910();
  v19 = v1;
  v6 = v5;
  sub_1D42B28FC(&qword_1EFE50C08);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42BE768();
  v18 = *(_QWORD *)(sub_1D42EA2A8() - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v8);
  sub_1D4419098(v9, v15);
  v16 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE50C10) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v10);
  sub_1D43383FC();
  type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier(0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v11);
  sub_1D42D7108();
  v20 = sub_1D42B28FC(&qword_1EFE50C18);
  sub_1D4396480();
  MEMORY[0x1E0C80A78](v12);
  sub_1D434799C();
  sub_1D4419144(v6);
  sub_1D4414CE0();
  sub_1D44191C8();
  sub_1D43AF844(v19, v3, type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1D4393144(v17, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32));
    sub_1D4419768();
    sub_1D4419828();
    sub_1D43287AC(&qword_1EFE4EE60, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    sub_1D451B760();
    v13 = sub_1D441968C();
    sub_1D42F1FA0(v13, v14);
    sub_1D4419100(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  }
  else
  {
    sub_1D4414D58();
    sub_1D4419828();
    sub_1D4414D94();
    sub_1D451B760();
    sub_1D437ED90(v0, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  }
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v4, v20);
  sub_1D42BE844();
}

void AccessibilitySoundRecognition.DetectorIdentifier.hashValue.getter()
{
  sub_1D42BE9A8();
  AccessibilitySoundRecognition.DetectorIdentifier.hash(into:)();
  sub_1D42CB230();
  sub_1D42BE978();
}

void AccessibilitySoundRecognition.DetectorIdentifier.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, char a12)
{
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  _BYTE *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;

  sub_1D42BE910();
  v69 = v12;
  v16 = v15;
  v60 = v17;
  v18 = sub_1D42B28FC(&qword_1EFE50C48);
  v63 = *(_QWORD *)(v18 - 8);
  v64 = v18;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v19);
  sub_1D437ED74(v20, (uint64_t)v56);
  v21 = sub_1D42B28FC(&qword_1EFE50C50);
  v61 = *(_QWORD *)(v21 - 8);
  v62 = v21;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v22);
  sub_1D437EC50(v23, (uint64_t)v56);
  v24 = sub_1D42B28FC(&qword_1EFE50C58);
  v67 = *(_QWORD *)(v24 - 8);
  v68 = v24;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v25);
  sub_1D42F1ED4();
  v26 = type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier(0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v27);
  sub_1D44194A4();
  v29 = MEMORY[0x1E0C80A78](v28);
  v31 = (char *)&v56 - v30;
  MEMORY[0x1E0C80A78](v29);
  v33 = (char *)&v56 - v32;
  sub_1D42B5528(v16, v16[3]);
  sub_1D4414CE0();
  v34 = v69;
  sub_1D451BA0C();
  if (v34)
    goto LABEL_8;
  v56 = v31;
  v57 = v33;
  v58 = v13;
  v59 = v26;
  v69 = v16;
  v35 = sub_1D451B6D0();
  v36 = *(_QWORD *)(v35 + 16);
  if (!v36
    || (v37 = *(_BYTE *)(v35 + 32),
        sub_1D43B7948(1, v36, v35, v35 + 32, 0, (2 * v36) | 1),
        v39 = v38,
        v41 = v40,
        sub_1D4347994(),
        v39 != v41 >> 1))
  {
    v45 = v67;
    v46 = v59;
    sub_1D437EE80();
    sub_1D42B6D0C();
    v48 = v47;
    sub_1D42B28FC(&qword_1EFE49ED0);
    *v48 = v46;
    sub_1D451B61C();
    sub_1D44195A0();
    v49 = sub_1D437ECB0();
    sub_1D43B9F58(v49, *MEMORY[0x1E0DEC450]);
    swift_willThrow();
    sub_1D4371170();
    sub_1D42F1FA0(v14, *(uint64_t (**)(uint64_t, uint64_t))(v45 + 8));
    v16 = v69;
LABEL_8:
    v52 = (uint64_t)v16;
    goto LABEL_9;
  }
  if ((v37 & 1) != 0)
  {
    sub_1D4419768();
    v42 = v66;
    sub_1D43B9DF8();
    sub_1D42EA2A8();
    sub_1D43287AC(&qword_1EFE50C60, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v43 = v58;
    sub_1D4419674();
    v44 = v67;
    sub_1D4307058(v42, *(uint64_t (**)(uint64_t, uint64_t))(v63 + 8));
    sub_1D4371170();
    sub_1D42F1FA0(v14, *(uint64_t (**)(uint64_t, uint64_t))(v44 + 8));
    swift_storeEnumTagMultiPayload();
    v53 = v43;
  }
  else
  {
    sub_1D4414D58();
    v50 = v65;
    sub_1D43B9DF8();
    sub_1D4414DD0();
    sub_1D4419674();
    v51 = v67;
    sub_1D4307058(v50, *(uint64_t (**)(uint64_t, uint64_t))(v61 + 8));
    sub_1D4371170();
    sub_1D42F1FA0(v14, *(uint64_t (**)(uint64_t, uint64_t))(v51 + 8));
    v54 = v56;
    *v56 = a12;
    swift_storeEnumTagMultiPayload();
    v53 = (uint64_t)v54;
  }
  v55 = (uint64_t)v57;
  sub_1D43AF870(v53, (uint64_t)v57, type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier);
  sub_1D43AF870(v55, v60, type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier);
  v52 = (uint64_t)v69;
LABEL_9:
  sub_1D42B5400(v52);
  sub_1D42BE844();
}

void sub_1D440B38C()
{
  const void *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v4[216];
  _BYTE v5[216];

  sub_1D435C71C(v0, v4);
  sub_1D435C71C(v4, v5);
  v1 = sub_1D435C758((uint64_t)v5);
  v2 = nullsub_1(v5);
  if (v1 == 1)
  {
    sub_1D441911C(&v3, (const void *)(v2 + 16));
    sub_1D42D708C();
    sub_1D4419570();
    sub_1D44197A4();
  }
  else
  {
    sub_1D42D708C();
    sub_1D451B964();
  }
  sub_1D44191D8();
}

BOOL sub_1D440B420(const void *a1, const void *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  BOOL v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 *v25;
  int v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58[216];
  _BYTE v59[192];
  _BYTE v60[216];
  _BYTE v61[216];
  _BYTE v62[216];
  uint64_t v63;
  _BYTE v64[216];

  sub_1D435C71C(a1, v60);
  sub_1D435C71C(a2, v61);
  sub_1D435C71C(v60, v62);
  sub_1D435C71C(v61, &v63);
  sub_1D435C71C(v60, v64);
  if (sub_1D435C758((uint64_t)v64) != 1)
  {
    v15 = *(unsigned __int8 *)sub_1D4419560();
    sub_1D435C71C(v61, v58);
    v16 = sub_1D435C758((uint64_t)v58);
    v17 = v16;
    v25 = (unsigned __int8 *)sub_1D441979C(v16, v18, v19, v20, v21, v22, v23, v24, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40,
                               v41,
                               v42,
                               v43,
                               v44,
                               v45,
                               v46,
                               v47,
                               v48,
                               v49,
                               v50,
                               v51,
                               v52,
                               v53,
                               v54,
                               v55,
                               v56,
                               v57,
                               v58[0]);
    if (v17 != 1)
    {
      v26 = *v25;
      sub_1D441978C();
      return v15 == v26;
    }
    goto LABEL_12;
  }
  v3 = (_QWORD *)sub_1D4419560();
  sub_1D435C71C(v61, v58);
  v4 = sub_1D435C758((uint64_t)v58);
  if ((_DWORD)v4 != 1)
  {
    sub_1D441979C(v4, v5, v6, v7, v8, v9, v10, v11, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40,
      v41,
      v42,
      v43,
      v44,
      v45,
      v46,
      v47,
      v48,
      v49,
      v50,
      v51,
      v52,
      v53,
      v54,
      v55,
      v56,
      v57,
      v58[0]);
    sub_1D435C71C(v60, &v31);
    v27 = nullsub_1(&v31);
    sub_1D4414EC0(v27);
LABEL_12:
    v28 = v61;
LABEL_13:
    sub_1D44181E0((uint64_t)v28);
    sub_1D441978C();
    return 0;
  }
  v12 = (_QWORD *)sub_1D441979C(v4, v5, v6, v7, v8, v9, v10, v11, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40,
                    v41,
                    v42,
                    v43,
                    v44,
                    v45,
                    v46,
                    v47,
                    v48,
                    v49,
                    v50,
                    v51,
                    v52,
                    v53,
                    v54,
                    v55,
                    v56,
                    v57,
                    v58[0]);
  v13 = *v3 == *v12 && v3[1] == v12[1];
  if (!v13 && (sub_1D451B820() & 1) == 0)
  {
    sub_1D44181E0((uint64_t)v61);
    v28 = v60;
    goto LABEL_13;
  }
  sub_1D441911C(v59, v3 + 2);
  sub_1D441911C(&v31, v12 + 2);
  v14 = sub_1D4410254((uint64_t)v59, (uint64_t)&v31);
  sub_1D44181E0((uint64_t)v61);
  sub_1D44181E0((uint64_t)v60);
  sub_1D441978C();
  return v14;
}

void sub_1D440B5A4(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D42D1158();
    sub_1D42BE8B4();
  }
  sub_1D42B6E24();
}

void sub_1D440B600(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v5;

  v2 = a1 == 0x6E49746C697562 && a2 == 0xE700000000000000;
  if (v2 || (sub_1D42D1158() & 1) != 0 || (a1 == 0x6D6F74737563 ? (v5 = a2 == 0xE600000000000000) : (v5 = 0), v5))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D42D1158();
    sub_1D42BE8B4();
  }
  sub_1D42B6E24();
}

uint64_t sub_1D440B6CC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73726F736E6574 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D440B7A0(char a1)
{
  if ((a1 & 1) != 0)
    return 0x73726F736E6574;
  else
    return 25705;
}

void sub_1D440B7CC()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  char v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[192];
  _BYTE v19[216];
  _BYTE v20[224];

  sub_1D42BE910();
  v5 = v0;
  v7 = v6;
  sub_1D42B28FC(&qword_1EFE50F48);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v8);
  sub_1D43479B4();
  v16 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE50F50) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  sub_1D437EC98();
  v17 = sub_1D42B28FC(&qword_1EFE50F58);
  sub_1D4396480();
  MEMORY[0x1E0C80A78](v10);
  sub_1D42D7108();
  sub_1D435C71C(v5, v19);
  sub_1D42B5528(v7, v7[3]);
  sub_1D441752C();
  sub_1D451BA24();
  sub_1D435C71C(v19, v20);
  LODWORD(v7) = sub_1D435C758((uint64_t)v20);
  v11 = (_BYTE *)nullsub_1(v20);
  v12 = v11;
  if ((_DWORD)v7 == 1)
  {
    sub_1D4417568();
    sub_1D42D722C();
    v18[0] = 0;
    sub_1D451B724();
    if (!v1)
    {
      sub_1D441911C(v18, v12 + 16);
      sub_1D43AA798();
      sub_1D451B760();
    }
    v13 = sub_1D441968C();
    sub_1D43EB924(v13, v14);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v17);
  }
  else
  {
    v15 = *v11;
    sub_1D44175A4();
    sub_1D42D722C();
    v18[0] = v15;
    sub_1D4414D94();
    sub_1D451B760();
    sub_1D43EB924(v4, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v17);
  }
  sub_1D42BE844();
}

void sub_1D440BA10()
{
  const void *v0;
  uint64_t v1;
  char v2;
  _BYTE v3[192];
  _BYTE v4[432];

  sub_1D435C71C(v0, v4);
  sub_1D42BE9A8();
  v1 = sub_1D4419368(v4);
  if (v2)
  {
    sub_1D441911C(v3, (const void *)(v1 + 16));
    sub_1D437ECC8();
    sub_1D4419590();
    sub_1D44197D8();
  }
  else
  {
    sub_1D42D1094();
    sub_1D42CB3DC();
  }
  sub_1D42CB230();
  sub_1D42CB15C();
}

void sub_1D440BA80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  _QWORD v26[2];
  uint64_t v27;
  _BYTE v28[192];
  _BYTE v29[224];
  char v30;

  sub_1D42BE910();
  v4 = v3;
  v24 = v5;
  sub_1D42B28FC(&qword_1EFE50F78);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v6);
  sub_1D441946C(v7, v23);
  sub_1D42B28FC(&qword_1EFE50F80);
  sub_1D437EDFC();
  MEMORY[0x1E0C80A78](v8);
  sub_1D42F1ED4();
  v9 = sub_1D42B28FC(&qword_1EFE50F88);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  sub_1D438E8B8();
  sub_1D42B5528(v4, v4[3]);
  sub_1D441752C();
  sub_1D451BA0C();
  if (v0)
    goto LABEL_7;
  v11 = sub_1D451B6D0();
  v12 = *(_QWORD *)(v11 + 16);
  if (!v12
    || (v30 = *(_BYTE *)(v11 + 32),
        sub_1D43B7948(1, v12, v11, v11 + 32, 0, (2 * v12) | 1),
        v14 = v13,
        v16 = v15,
        sub_1D435EB80(),
        v14 != v16 >> 1))
  {
    v17 = sub_1D437EE80();
    sub_1D42B6D0C();
    v19 = v18;
    sub_1D42B28FC(&qword_1EFE49ED0);
    *v19 = &unk_1E9797F88;
    sub_1D451B61C();
    sub_1D44195A0();
    sub_1D437ECB0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x1E0DEC450], v17);
    swift_willThrow();
    sub_1D44191B0();
    sub_1D43211E8(v2, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
LABEL_7:
    sub_1D42B5400((uint64_t)v4);
    goto LABEL_8;
  }
  if ((v30 & 1) != 0)
  {
    sub_1D4417568();
    sub_1D44192F0();
    LOBYTE(v26[0]) = 0;
    v20 = sub_1D451B64C();
    v22 = v21;
    v25 = v20;
    sub_1D43AA8A4();
    sub_1D451B688();
    sub_1D44190E4();
    swift_unknownObjectRelease();
    sub_1D4307058(v9, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    sub_1D441911C(&v27, v28);
    v26[0] = v25;
    v26[1] = v22;
    sub_1D4415038((uint64_t)v26);
  }
  else
  {
    LOBYTE(v26[0]) = 0;
    sub_1D44175A4();
    sub_1D44192F0();
    sub_1D4414DD0();
    sub_1D451B688();
    sub_1D4419100(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    sub_1D44191B0();
    sub_1D4307058(v9, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    LOBYTE(v26[0]) = v28[0];
    sub_1D4415030((uint64_t)v26);
  }
  sub_1D435C71C(v26, v29);
  sub_1D435C71C(v29, v24);
  sub_1D42B5400((uint64_t)v4);
LABEL_8:
  sub_1D42CBA44();
  sub_1D42BE844();
}

void sub_1D440BE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _BYTE vars8[6];

  AccessibilitySoundRecognition.DetectorIdentifier.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, vars8[4], vars8[5]);
}

void sub_1D440BEA8()
{
  AccessibilitySoundRecognition.DetectorIdentifier.encode(to:)();
}

uint64_t sub_1D440BEC4()
{
  sub_1D451B958();
  AccessibilitySoundRecognition.DetectorIdentifier.hash(into:)();
  return sub_1D451B994();
}

uint64_t sub_1D440BF00()
{
  sub_1D44175A4();
  return sub_1D451BA3C();
}

uint64_t sub_1D440BF28()
{
  sub_1D44175A4();
  return sub_1D451BA48();
}

uint64_t sub_1D440BF50()
{
  sub_1D441752C();
  return sub_1D451BA3C();
}

uint64_t sub_1D440BF78()
{
  sub_1D441752C();
  return sub_1D451BA48();
}

uint64_t sub_1D440BFA0()
{
  char *v0;

  return sub_1D440B7A0(*v0);
}

uint64_t sub_1D440BFA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D440B6CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D440BFCC()
{
  sub_1D4417568();
  return sub_1D451BA3C();
}

uint64_t sub_1D440BFF4()
{
  sub_1D4417568();
  return sub_1D451BA48();
}

void sub_1D440C01C()
{
  sub_1D440BA80();
}

void sub_1D440C030()
{
  sub_1D440B7CC();
}

uint64_t sub_1D440C04C()
{
  const void *v0;
  int v1;
  uint64_t v2;
  _BYTE __dst[192];
  _BYTE v5[216];
  _BYTE v6[216];

  sub_1D435C71C(v0, v5);
  sub_1D451B958();
  sub_1D435C71C(v5, v6);
  v1 = sub_1D435C758((uint64_t)v6);
  v2 = nullsub_1(v6);
  if (v1 == 1)
  {
    memcpy(__dst, (const void *)(v2 + 16), sizeof(__dst));
    sub_1D451B964();
    sub_1D451A74C();
    sub_1D4410194();
  }
  else
  {
    sub_1D451B964();
    sub_1D451B964();
  }
  return sub_1D451B994();
}

BOOL static AccessibilitySoundRecognition.Detection.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void AccessibilitySoundRecognition.Detection.hash(into:)()
{
  sub_1D4419548();
  sub_1D42B6E24();
}

uint64_t sub_1D440C150()
{
  sub_1D4414E48();
  return sub_1D451BA3C();
}

uint64_t sub_1D440C178()
{
  sub_1D4414E48();
  return sub_1D451BA48();
}

uint64_t sub_1D440C1A0()
{
  sub_1D4414E0C();
  return sub_1D451BA3C();
}

uint64_t sub_1D440C1C8()
{
  sub_1D4414E0C();
  return sub_1D451BA48();
}

uint64_t sub_1D440C1F0()
{
  sub_1D4414E84();
  return sub_1D451BA3C();
}

uint64_t sub_1D440C218()
{
  sub_1D4414E84();
  return sub_1D451BA48();
}

void AccessibilitySoundRecognition.Detection.encode(to:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1D42BE910();
  v4 = v3;
  v5 = sub_1D42B28FC(&qword_1EFE50C70);
  v13 = *(_QWORD *)(v5 - 8);
  v14 = v5;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v6);
  sub_1D434799C();
  sub_1D42B28FC(&qword_1EFE50C78);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v7);
  sub_1D438E8B8();
  v15 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE50C80) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v8);
  sub_1D42F1ED4();
  v9 = *v0;
  sub_1D42B5528(v4, v4[3]);
  sub_1D4414E0C();
  sub_1D451BA24();
  if ((v9 & 1) != 0)
  {
    sub_1D4419774();
    sub_1D437EC40();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v2, v14);
  }
  else
  {
    sub_1D4414E84();
    sub_1D437EC40();
    v10 = sub_1D432117C();
    v12(v10, v11);
  }
  sub_1D4307058(v1, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
  sub_1D42BE844();
}

void AccessibilitySoundRecognition.Detection.hashValue.getter()
{
  sub_1D42BE9A8();
  sub_1D42CB3DC();
  sub_1D42CB230();
  sub_1D42BE978();
}

void AccessibilitySoundRecognition.Detection.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _BYTE *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;

  sub_1D42BE910();
  v4 = v3;
  v30 = v5;
  v28 = sub_1D42B28FC(&qword_1EFE50CA0);
  v32 = *(_QWORD *)(v28 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v6);
  sub_1D42BE768();
  v31 = v7;
  v29 = sub_1D42B28FC(&qword_1EFE50CA8);
  sub_1D437EDFC();
  MEMORY[0x1E0C80A78](v8);
  sub_1D43383FC();
  sub_1D42B28FC(&qword_1EFE50CB0);
  sub_1D42CB4F8();
  MEMORY[0x1E0C80A78](v9);
  sub_1D42CB18C();
  sub_1D4419144(v4);
  sub_1D4414E0C();
  sub_1D451BA0C();
  if (v0)
    goto LABEL_7;
  v27 = v4;
  v10 = sub_1D451B6D0();
  v11 = *(_QWORD *)(v10 + 16);
  if (!v11
    || (v12 = *(_BYTE *)(v10 + 32),
        sub_1D43B7948(1, v11, v10, v10 + 32, 0, (2 * v11) | 1),
        v14 = v13,
        v16 = v15,
        sub_1D4347994(),
        v14 != v16 >> 1))
  {
    sub_1D437EE80();
    sub_1D42B6D0C();
    v19 = v18;
    sub_1D42B28FC(&qword_1EFE49ED0);
    *v19 = &type metadata for AccessibilitySoundRecognition.Detection;
    sub_1D451B61C();
    sub_1D44195A0();
    v20 = sub_1D437ECB0();
    sub_1D43B9F58(v20, *MEMORY[0x1E0DEC450]);
    swift_willThrow();
    sub_1D4371170();
    v21 = sub_1D4419394();
    v23(v21, v22);
    v4 = v27;
LABEL_7:
    v24 = (uint64_t)v4;
    goto LABEL_8;
  }
  if ((v12 & 1) != 0)
  {
    sub_1D4419774();
    sub_1D451B610();
    v17 = v30;
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v28);
    sub_1D4371170();
    sub_1D4307058(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  else
  {
    sub_1D4414E84();
    sub_1D451B610();
    v17 = v30;
    v25 = sub_1D44191A4();
    v26(v25, v29);
    sub_1D4371170();
    sub_1D43211E8(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  *v17 = v12;
  v24 = (uint64_t)v27;
LABEL_8:
  sub_1D42B5400(v24);
  sub_1D42BE844();
}

void sub_1D440C6C8()
{
  AccessibilitySoundRecognition.Detection.init(from:)();
}

void sub_1D440C6DC()
{
  AccessibilitySoundRecognition.Detection.encode(to:)();
}

uint64_t AccessibilitySoundRecognition.Request.description.getter()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[216];
  _BYTE v7[216];

  sub_1D435C71C(v0, v6);
  sub_1D435C71C(v6, v7);
  if (sub_1D435C758((uint64_t)v7) == 1)
  {
    nullsub_1(v7);
    sub_1D435C71C(v6, &v5);
    v1 = nullsub_1(&v5);
    sub_1D4414EC0(v1);
    sub_1D4419814();
    sub_1D451B400();
    swift_bridgeObjectRelease();
    sub_1D4419058();
    v4 = v2;
    sub_1D451A794();
    swift_bridgeObjectRelease();
    return v4;
  }
  else
  {
    nullsub_1(v7);
    sub_1D451B400();
    sub_1D430740C();
    sub_1D451A794();
    sub_1D451B514();
    return 0;
  }
}

void AccessibilitySoundRecognition.Request.init(detectorIdentifier:)(uint64_t a1@<X0>, void *a2@<X8>)
{
  _BYTE *v2;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t EnumCaseMultiPayload;
  _BYTE v8[216];

  type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier(0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D43B9F74();
  sub_1D43AF844(a1, (uint64_t)v2, v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    sub_1D4325D80((uint64_t)v2, type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier);
    sub_1D451B55C();
    __break(1u);
  }
  else
  {
    sub_1D44195B0(EnumCaseMultiPayload, type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier);
    v8[0] = *v2;
    sub_1D4415030((uint64_t)v8);
    sub_1D435C71C(v8, a2);
    sub_1D44191D8();
  }
}

void AccessibilitySoundRecognition.Request.init(customModel:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[72];
  _QWORD v12[2];
  uint64_t v13;
  uint64_t v14;

  sub_1D42BE910();
  v4 = v3;
  v6 = v5;
  sub_1D4519BC4();
  sub_1D42F86A4();
  MEMORY[0x1E0C80A78](v7);
  sub_1D434799C();
  sub_1D4393144(v1, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  sub_1D440CA1C();
  if (v0)
  {
    sub_1D42CB44C(v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  else
  {
    sub_1D441911C(v11, &v14);
    v8 = sub_1D4519B1C();
    v10 = v9;
    sub_1D42CB44C(v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    sub_1D441911C(&v13, v11);
    v12[0] = v8;
    v12[1] = v10;
    sub_1D4415038((uint64_t)v12);
    sub_1D435C71C(v12, v6);
  }
  sub_1D42F1F94();
  sub_1D42BE844();
}

void sub_1D440CA1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(_QWORD);
  void (*v77)(uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(_QWORD);
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t, uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(uint64_t, uint64_t);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void (*v155)(void);
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void (*v166)(_QWORD);
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void (*v177)(uint64_t, uint64_t, uint64_t);
  uint64_t v178;
  uint64_t v179;
  void (*v180)(uint64_t, uint64_t, uint64_t);
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(uint64_t);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  void (*v198)(uint64_t);
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  void (*v203)(uint64_t, uint64_t, uint64_t);
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  void *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  void (*v236)(_QWORD);
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  _QWORD v241[24];
  _QWORD v242[25];
  uint64_t v243;

  sub_1D42BE910();
  v5 = v4;
  v210 = v6;
  v238 = sub_1D4519EAC();
  v236 = *(void (**)(_QWORD))(v238 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42BE768();
  v237 = v8;
  sub_1D42B28FC((uint64_t *)&unk_1EFE51200);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  sub_1D42BA15C();
  v219 = v10;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v11);
  sub_1D432D3D4();
  v222 = v12;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v13);
  sub_1D432D3D4();
  v224 = v14;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v15);
  sub_1D432D3D4();
  v226 = v16;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v17);
  sub_1D432D3D4();
  v228 = v18;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v19);
  sub_1D432D3D4();
  v230 = v20;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v21);
  sub_1D432D3D4();
  v232 = v22;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v23);
  v235 = (uint64_t)&v200 - v24;
  v239 = sub_1D4519ED0();
  v233 = *(_QWORD *)(v239 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v25);
  sub_1D42BA15C();
  v211 = v26;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v27);
  sub_1D432D3D4();
  v212 = v28;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v29);
  sub_1D432D3D4();
  v213 = v30;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v31);
  sub_1D432D3D4();
  v214 = v32;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v33);
  sub_1D432D3D4();
  v215 = v34;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v35);
  sub_1D432D3D4();
  v216 = v36;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v37);
  sub_1D432D3D4();
  v217 = v38;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v39);
  sub_1D432D3D4();
  v218 = v40;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v41);
  sub_1D432D3D4();
  v220 = v42;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v43);
  sub_1D432D3D4();
  v221 = v44;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v45);
  sub_1D432D3D4();
  v223 = v46;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v47);
  sub_1D432D3D4();
  v225 = v48;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v49);
  sub_1D432D3D4();
  v227 = v50;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v51);
  sub_1D432D3D4();
  v229 = v52;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v53);
  sub_1D432D3D4();
  v231 = v54;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v55);
  v234 = (uint64_t)&v200 - v56;
  sub_1D42B28FC(&qword_1EFE4E8E8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v57);
  sub_1D42BE768();
  v240 = v58;
  v59 = sub_1D4519DB0();
  v60 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  sub_1D44193E0();
  v61 = sub_1D4519BC4();
  sub_1D42CB4F8();
  MEMORY[0x1E0C80A78](v62);
  type metadata accessor for ModelFeatureExtractor(0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v63);
  sub_1D42BE8F8();
  v64 = sub_1D4419870();
  v65(v64);
  sub_1D43946E0();
  if (v1)
  {
    sub_1D43EB924(v5, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    goto LABEL_14;
  }
  v208 = v3;
  v209 = v61;
  v243 = v5;
  v206 = v60;
  v207 = v2;
  v66 = v240;
  sub_1D43947CC(0x6F696475615F6474, 0xE800000000000000, v240);
  v67 = sub_1D4340834(v66, 1, v59);
  v68 = v0;
  if (v91)
  {
    sub_1D44197BC(v67, &qword_1EFE4E8E8);
    sub_1D42DCEE8();
    sub_1D4311F68();
    sub_1D430740C();
    sub_1D4342D78(v69, v70, (uint64_t)"shaped array input feature missing from custom model");
    sub_1D4418FBC();
    (*(void (**)(uint64_t, uint64_t))(v208 + 8))(v243, v209);
LABEL_12:
    v83 = v68;
LABEL_13:
    sub_1D4325D80(v83, type metadata accessor for ModelFeatureExtractor);
    goto LABEL_14;
  }
  v205 = 0;
  v71 = v206;
  v72 = v207;
  sub_1D4393144(v207, v66, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v206 + 32));
  v73 = *(_QWORD *)(sub_1D4519DA4() + 16);
  swift_bridgeObjectRelease();
  if (v73 != 3)
  {
    sub_1D42DCEE8();
    sub_1D4311F68();
    sub_1D430740C();
    sub_1D4342D78(v81, v82, (uint64_t)"shaped array input feature has unexpected size");
    sub_1D4418FBC();
    sub_1D4418EE0();
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v72, v59);
    goto LABEL_12;
  }
  v74 = v237;
  sub_1D4519EA0();
  v75 = v235;
  sub_1D4394A74(v68, 0x72616C706D657865, 0xE800000000000000, v74, v235);
  v76 = v236;
  v77 = (void (*)(uint64_t))*((_QWORD *)v236 + 1);
  sub_1D441927C(v74);
  v78 = sub_1D4340834(v75, 1, v239);
  if (v91)
  {
    sub_1D441974C(v78, (uint64_t *)&unk_1EFE51200);
    sub_1D42DCEE8();
    sub_1D4311F68();
    sub_1D430740C();
    sub_1D4342D78(v79, v80, (uint64_t)"exemplar layer missing from custom model");
    sub_1D4418FBC();
    sub_1D4418EE0();
    (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v207, v59);
    goto LABEL_12;
  }
  v204 = v59;
  v85 = v233;
  v84 = v234;
  v86 = v75;
  v87 = v239;
  v203 = *(void (**)(uint64_t, uint64_t, uint64_t))(v233 + 32);
  v203(v234, v86, v239);
  sub_1D44194C0();
  v88 = (void (*)(_QWORD))*((_QWORD *)v76 + 13);
  LODWORD(v235) = *MEMORY[0x1E0D46398];
  v236 = v88;
  v88(v74);
  v89 = v232;
  v240 = v68;
  sub_1D4394A74(v68, 0xD000000000000010, 0x80000001D45573A0, v74, v232);
  v90 = sub_1D4419394();
  v77(v90);
  v92 = sub_1D4340834(v89, 1, v87);
  if (v91)
  {
    sub_1D44197BC(v92, (uint64_t *)&unk_1EFE51200);
    sub_1D42DCEE8();
    sub_1D4311F68();
    sub_1D430740C();
    sub_1D4342D78(v93, v94, (uint64_t)"feature reduction layer missing from custom model");
    sub_1D4312028();
    sub_1D4306F6C(v243, *(uint64_t (**)(uint64_t, uint64_t))(v208 + 8));
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v84, v239);
LABEL_29:
    sub_1D4418FC8();
    v83 = v240;
    goto LABEL_13;
  }
  v95 = v89;
  v96 = v231;
  v97 = v239;
  v98 = v203;
  v203(v231, v95, v239);
  sub_1D44194C0();
  sub_1D4418FA8();
  v99 = v230;
  sub_1D441906C(v240, 0x31766E6F635F3163, v230);
  v100 = sub_1D4419394();
  v77(v100);
  v102 = sub_1D4340834(v99, 1, v97);
  if (v101)
  {
    sub_1D441974C(v102, (uint64_t *)&unk_1EFE51200);
    sub_1D42DCEE8();
    sub_1D4419308();
    sub_1D430740C();
    sub_1D4342D78(v103, v104, (uint64_t)"c1_conv1d layer missing from custom model");
    sub_1D4312028();
    sub_1D4418EE0();
    v105 = *(void (**)(uint64_t, uint64_t))(v233 + 8);
    sub_1D4419808(v96);
    v105(v234, v96);
    goto LABEL_29;
  }
  v106 = v99;
  v107 = v229;
  sub_1D44197FC(v229, v106);
  sub_1D44194C0();
  sub_1D4418FA8();
  sub_1D44192C4();
  v109 = v228;
  v110 = v240;
  sub_1D441906C(v240, v108 + 256, v228);
  sub_1D441927C(v74);
  v112 = sub_1D4340834(v109, 1, (uint64_t)v77);
  if (v111)
  {
    sub_1D44197BC(v112, (uint64_t *)&unk_1EFE51200);
    sub_1D42DCEE8();
    sub_1D4419308();
    sub_1D430740C();
    sub_1D4342D78(v113, v114, (uint64_t)"c2_conv1d layer missing from custom model");
    sub_1D4418FBC();
    sub_1D4418EE0();
    v115 = v107;
LABEL_33:
    sub_1D441933C(v115);
    sub_1D441933C(v231);
    sub_1D441933C(v234);
    sub_1D4418FC8();
    v83 = v110;
    goto LABEL_13;
  }
  v116 = v227;
  sub_1D4419840(v227, v109);
  sub_1D44194C0();
  sub_1D4418FA8();
  sub_1D44192C4();
  v118 = v110;
  v119 = v226;
  sub_1D441906C(v118, v117 + 512, v226);
  sub_1D441927C(v74);
  sub_1D4340834(v119, 1, v107);
  if (v120)
  {
    sub_1D4328A1C(v119, (uint64_t *)&unk_1EFE51200);
    sub_1D42DCEE8();
    sub_1D4419308();
    sub_1D430740C();
    sub_1D4342D78(v121, v122, (uint64_t)"c3_conv1d layer missing from custom model");
    sub_1D4418FBC();
    sub_1D4418EE0();
    v123 = *(void (**)(uint64_t, uint64_t))(v233 + 8);
    v124 = v116;
    v125 = v239;
    goto LABEL_27;
  }
  v126 = v225;
  sub_1D44197FC(v225, v119);
  sub_1D44194C0();
  sub_1D4418FA8();
  sub_1D44192C4();
  v128 = v224;
  v110 = v240;
  sub_1D441906C(v240, v127 + 768, v224);
  sub_1D441927C(v74);
  v130 = sub_1D4340834(v128, 1, v116);
  if (v129)
  {
    sub_1D441974C(v130, (uint64_t *)&unk_1EFE51200);
    sub_1D42DCEE8();
    sub_1D430740C();
    sub_1D4342D78(v131, v132, (uint64_t)"c4_conv1d layer missing from custom model");
    sub_1D4418FBC();
    sub_1D4418EE0();
    sub_1D441933C(v126);
    sub_1D441933C(v227);
    v115 = v229;
    goto LABEL_33;
  }
  v133 = v223;
  sub_1D4419840(v223, v128);
  sub_1D4519E88();
  v134 = v74;
  v135 = *MEMORY[0x1E0D463A0];
  sub_1D4418FF8(v134, v135);
  v136 = v110;
  v137 = v222;
  sub_1D44197CC(v136, 12644, v222);
  sub_1D441927C(v134);
  sub_1D4340834(v137, 1, v128);
  if (v138)
  {
    sub_1D4328A1C(v137, (uint64_t *)&unk_1EFE51200);
    sub_1D42DCEE8();
    sub_1D4419884();
    sub_1D430740C();
    sub_1D4342D78(v139, v140, (uint64_t)"d1 layer missing from custom model");
    sub_1D4312028();
    sub_1D4418EE0();
    v141 = *(void (**)(uint64_t, uint64_t))(v233 + 8);
    v142 = v239;
    sub_1D441901C(v133);
    sub_1D441901C(v225);
    sub_1D441901C(v227);
    sub_1D441901C(v229);
    sub_1D441901C(v231);
    v141(v234, v142);
    goto LABEL_29;
  }
  v143 = v221;
  v144 = v137;
  v145 = v239;
  v98(v221, v144, v239);
  sub_1D4519E88();
  sub_1D4418FF8(v134, v135);
  v146 = v219;
  sub_1D44197CC(v240, 12900, v219);
  sub_1D441927C(v134);
  sub_1D4340834(v146, 1, v145);
  if (v147)
  {
    sub_1D4328A1C(v146, (uint64_t *)&unk_1EFE51200);
    sub_1D42DCEE8();
    sub_1D4419884();
    sub_1D430740C();
    sub_1D4342D78(v148, v149, (uint64_t)"d2 layer missing from custom model");
    sub_1D4418FBC();
    sub_1D4418EE0();
    v123 = *(void (**)(uint64_t, uint64_t))(v233 + 8);
    v125 = v239;
    sub_1D441901C(v143);
    sub_1D441901C(v223);
    sub_1D441901C(v225);
    v124 = v227;
LABEL_27:
    sub_1D441901C(v124);
    sub_1D441901C(v229);
    sub_1D441901C(v231);
    v123(v234, v125);
    goto LABEL_29;
  }
  v98(v220, v146, v239);
  v150 = sub_1D4519DA4();
  v153 = v233;
  v154 = v234;
  if (*(_QWORD *)(v150 + 16) < 3uLL)
  {
    __break(1u);
  }
  else
  {
    v143 = *(_QWORD *)(v150 + 48);
    swift_bridgeObjectRelease();
    v155 = *(void (**)(void))(v153 + 16);
    v156 = v218;
    ((void (*)(uint64_t, uint64_t, uint64_t))v155)(v218, v154, v239);
    v157 = v205;
    v158 = sub_1D4395378();
    v160 = v240;
    if (v157)
    {
      sub_1D4419064(v156);
      sub_1D4418EE0();
      sub_1D4419064(v220);
      sub_1D4419064(v221);
      sub_1D4419064(v223);
      sub_1D4419064(v225);
      sub_1D4419064(v227);
      sub_1D4419064(v229);
      sub_1D4419064(v231);
      sub_1D4419064(v154);
      sub_1D4418FC8();
      sub_1D4325D80(v160, type metadata accessor for ModelFeatureExtractor);
      goto LABEL_14;
    }
    v161 = MEMORY[0x1E0DEE9D8];
    if (v159)
      v162 = v159;
    else
      v162 = MEMORY[0x1E0DEE9D8];
    v163 = v158;
    sub_1D4418F40(v156);
    v164 = v217;
    v155();
    v238 = v163;
    sub_1D42CB8FC();
    v237 = v162;
    sub_1D42CB9DC();
    sub_1D4394FEC();
    v235 = v167;
    v236 = v166;
    v233 = 0;
    if (v165)
      v168 = v165;
    else
      v168 = v161;
    sub_1D4419808(v164);
    ((void (*)(uint64_t, uint64_t, uint64_t))v155)(v216, v229, v161);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v224 = v168;
    sub_1D42CB8FC();
    sub_1D4394FEC();
    v228 = v170;
    v226 = v171;
    v205 = 0;
    if (v169)
      v172 = v169;
    else
      v172 = MEMORY[0x1E0DEE9D8];
    sub_1D4307464(v216);
    sub_1D44193A0(v215, v227);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v222 = v172;
    sub_1D438C74C();
    sub_1D44197C4();
    v218 = v175;
    v219 = v174;
    v205 = 0;
    if (v173)
      v176 = v173;
    else
      v176 = MEMORY[0x1E0DEE9D8];
    sub_1D4307464(v215);
    sub_1D44193A0(v214, v225);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v217 = v176;
    sub_1D438C74C();
    sub_1D44197C4();
    v215 = v179;
    v216 = v178;
    v205 = 0;
    if (v177)
      v180 = v177;
    else
      v180 = (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEE9D8];
    sub_1D4307464(v214);
    sub_1D44193A0(v213, v223);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v203 = v180;
    sub_1D42CB9DC();
    sub_1D44197C4();
    v214 = v182;
    v202 = v183;
    v205 = 0;
    if (v181)
      v184 = v181;
    else
      v184 = MEMORY[0x1E0DEE9D8];
    sub_1D4307464(v213);
    sub_1D44193A0(v212, v221);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v213 = v184;
    sub_1D42D71EC();
    sub_1D44198A0();
    v205 = 0;
    v154 = v186;
    v77 = v187;
    if (v185)
      v188 = v185;
    else
      v188 = MEMORY[0x1E0DEE9D8];
    sub_1D4307464(v212);
    sub_1D44193A0(v211, v220);
    sub_1D42CB9DC();
    sub_1D42D71EC();
    v212 = v188;
    sub_1D42F20E8();
    sub_1D44198A0();
    v205 = 0;
  }
  v189 = v150;
  v190 = v151;
  v191 = MEMORY[0x1E0DEE9D8];
  if (v152)
    v191 = v152;
  v233 = v191;
  sub_1D4307464(v211);
  sub_1D4418EE0();
  sub_1D4307464(v220);
  sub_1D4307464(v221);
  sub_1D4307464(v223);
  sub_1D4307464(v225);
  sub_1D4307464(v227);
  sub_1D4307464(v229);
  sub_1D4307464(v231);
  sub_1D4307464(v234);
  sub_1D4418FC8();
  sub_1D4325D80(v240, type metadata accessor for ModelFeatureExtractor);
  v232 = v143;
  v241[0] = v143;
  v241[1] = v238;
  v241[2] = v237;
  v241[3] = v236;
  v241[4] = v235;
  v241[5] = v224;
  v241[6] = v228;
  v241[7] = v226;
  v241[8] = v222;
  v241[9] = v219;
  v241[10] = v218;
  v241[11] = v217;
  v241[12] = v216;
  v241[13] = v215;
  v241[14] = v203;
  v241[15] = v214;
  v241[16] = v202;
  v241[17] = v213;
  v241[18] = v154;
  v200 = v154;
  v201 = v190;
  v192 = v212;
  v241[19] = v77;
  v241[20] = v212;
  v230 = v189;
  v241[21] = v189;
  v241[22] = v190;
  v241[23] = v233;
  sub_1D435CE08((uint64_t)v241);
  sub_1D42B7204();
  sub_1D4347994();
  sub_1D435EB80();
  sub_1D42CB8F4();
  sub_1D4419200();
  sub_1D4418FF0();
  sub_1D4419298();
  sub_1D44192A0();
  sub_1D4419208();
  sub_1D44191B8();
  sub_1D441915C();
  sub_1D4419360();
  v193 = v215;
  sub_1D435EB80();
  v194 = v216;
  sub_1D42B7204();
  v195 = v213;
  sub_1D42D3258();
  v196 = v202;
  sub_1D42CB208();
  v197 = v214;
  sub_1D4347994();
  sub_1D42CB338();
  v198 = v77;
  sub_1D42CB5C8();
  v199 = v200;
  sub_1D42CB5C8();
  v242[0] = v232;
  v242[1] = v238;
  v242[2] = v237;
  v242[3] = v236;
  v242[4] = v235;
  v242[5] = v224;
  v242[6] = v228;
  v242[7] = v226;
  v242[8] = v222;
  v242[9] = v219;
  v242[10] = v218;
  v242[11] = v217;
  v242[12] = v194;
  v242[13] = v193;
  v242[14] = v203;
  v242[15] = v197;
  v242[16] = v196;
  v242[17] = v195;
  v242[18] = v199;
  v242[19] = v198;
  v242[20] = v192;
  v242[21] = v230;
  v242[22] = v201;
  v242[23] = v233;
  sub_1D435C804((uint64_t)v242);
  sub_1D441911C(v210, v241);
LABEL_14:
  sub_1D42F1F94();
  sub_1D42BE844();
}

void sub_1D440DD98()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void (**v8)(uint64_t *@<X8>);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (**v69)(uint64_t *@<X8>);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  uint64_t (*v86)@<X0>(uint64_t *@<X8>);
  uint64_t v87;
  uint64_t v88;
  _BYTE v89[216];
  _BYTE v90[216];
  _BYTE v91[224];

  sub_1D42BE910();
  v5 = v4;
  v73 = v6;
  v70 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v80 = *(_QWORD *)(v70 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42BE768();
  v69 = v8;
  v9 = sub_1D451A0B0();
  v78 = *(_QWORD *)(v9 - 8);
  v79 = v9;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v10);
  sub_1D42BE768();
  v72 = v11;
  v71 = sub_1D42B28FC(&qword_1EFE55840);
  v66 = *(_QWORD *)(v71 - 8);
  v12 = *(_QWORD *)(v66 + 64);
  v13 = MEMORY[0x1E0C80A78](v71);
  v65 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v64 = (char *)&v57 - v14;
  v15 = sub_1D42B28FC(&qword_1EFE4CA80);
  v75 = *(_QWORD *)(v15 - 8);
  v76 = v15;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v16);
  sub_1D42BE768();
  v74 = v17;
  v18 = sub_1D42B28FC(&qword_1EFE4CA88);
  v67 = *(_QWORD *)(v18 - 8);
  v68 = v18;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v19);
  sub_1D42BE768();
  v77 = v20;
  v21 = sub_1D42B28FC(&qword_1EFE50F90);
  sub_1D42F86A4();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_1D42EA2A8();
  sub_1D4396480();
  MEMORY[0x1E0C80A78](v25);
  sub_1D42BE768();
  v83 = v26;
  sub_1D435EB08(v89, v0);
  v28 = v5[3];
  v27 = v5[4];
  v63 = v5;
  sub_1D42B5528(v5, v28);
  (*(void (**)(uint64_t))(*(_QWORD *)(v27 + 8) + 8))(v28);
  if (!v1)
  {
    v58 = v12;
    v59 = 0;
    v60 = v2;
    v61 = v24;
    v62 = v3;
    v82 = v21;
    v29 = sub_1D4471100();
    sub_1D42B8F48();
    sub_1D43C1CA4((uint64_t)v63, (uint64_t)&v84);
    v30 = sub_1D42B6F40();
    sub_1D435EB08((void *)(v30 + 16), v89);
    sub_1D43C1D0C(&v84, (_OWORD *)(v30 + 232));
    sub_1D44181E0((uint64_t)v89);
    sub_1D4519D14();
    sub_1D435C71C(v89, v90);
    sub_1D435C71C(v90, v91);
    v31 = sub_1D435C758((uint64_t)v91);
    nullsub_1(v91);
    v32 = v65;
    v33 = v66;
    v34 = v64;
    if (v31 == 1)
    {
      sub_1D4419344();
      *(_QWORD *)&v84 = v35;
      *((_QWORD *)&v84 + 1) = v36;
      sub_1D451A794();
    }
    else
    {
      *(_QWORD *)&v84 = 0;
      *((_QWORD *)&v84 + 1) = 0xE000000000000000;
      sub_1D451B514();
    }
    v57 = v84;
    *(_QWORD *)&v84 = v29;
    *((_QWORD *)&v84 + 1) = sub_1D440E414;
    v85 = 0;
    v86 = sub_1D4417640;
    v87 = v30;
    v88 = 1;
    sub_1D42BE9A0();
    sub_1D4307398();
    sub_1D42CB9F8();
    v63 = (_QWORD *)v30;
    sub_1D42E3F8C(qword_1EFE50FA0);
    sub_1D451A308();
    sub_1D42EA438();
    swift_release();
    v37 = v34;
    v38 = (uint64_t)v34;
    v39 = v71;
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v32, v37, v71);
    v40 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    v41 = swift_allocObject();
    *(_QWORD *)(v41 + 16) = sub_1D440E708;
    *(_QWORD *)(v41 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v33 + 32))(v41 + v40, v32, v39);
    v65 = (char *)v29;
    sub_1D4419868();
    sub_1D4419898(&qword_1EFE50D00);
    sub_1D451A2C0();
    sub_1D437ED90(v38, *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
    *(_QWORD *)&v84 = 0;
    *((_QWORD *)&v84 + 1) = 0xE000000000000000;
    sub_1D451B400();
    swift_bridgeObjectRelease();
    sub_1D4419058();
    *(_QWORD *)&v84 = v42;
    *((_QWORD *)&v84 + 1) = v43;
    sub_1D43287AC(&qword_1EFE4CB00, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    sub_1D451B7C0();
    sub_1D451A794();
    sub_1D42CB208();
    sub_1D44196C4();
    sub_1D451A794();
    sub_1D42CB208();
    sub_1D44194E0();
    v44 = v77;
    sub_1D4406D10();
    sub_1D42CB208();
    v45 = sub_1D44191A4();
    v46(v45);
    sub_1D42E33F8(&qword_1EFE50FB0, &qword_1EFE4CA88);
    v47 = sub_1D451A374();
    v76 = sub_1D4419868();
    sub_1D42B6F40();
    v48 = sub_1D43AEFD8(v47);
    sub_1D4307058(v44, *(uint64_t (**)(uint64_t, uint64_t))(v67 + 8));
    *(_QWORD *)&v84 = v48;
    v49 = v78;
    v50 = v72;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v78 + 104))(v72, *MEMORY[0x1E0C958B0], v79);
    v51 = (uint64_t)v69;
    v52 = v70;
    *v69 = sub_1D440E71C;
    *(_QWORD *)(v51 + 8) = 0;
    v53 = v80;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v80 + 104))(v51, *MEMORY[0x1E0C958F0], v52);
    sub_1D4419898(&qword_1EFE50FC0);
    v54 = (uint64_t)v61;
    sub_1D451A380();
    sub_1D43EB924(v51, *(uint64_t (**)(uint64_t, uint64_t))(v53 + 8));
    sub_1D43211E8(v50, *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8));
    swift_release();
    sub_1D42E33F8(&qword_1EFE50FC8, &qword_1EFE50F90);
    v55 = sub_1D43072A8();
    swift_release();
    swift_release();
    sub_1D4307058(v54, *(uint64_t (**)(uint64_t, uint64_t))(v62 + 8));
    v56 = v73;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 32))(v73, v83, v81);
    *(_QWORD *)(v56 + *(int *)(type metadata accessor for AccessibilitySoundRecognition.Session(0) + 20)) = v55;
  }
  sub_1D42BE844();
}

uint64_t sub_1D440E414@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  char v8;
  void *v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = sub_1D42B28FC(&qword_1EFE50FE8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D43771C8();
  if (v1)
    return swift_bridgeObjectRelease();
  v10 = v7;
  v11 = v8;
  v20[1] = a1;
  v21 = v4;
  v22 = v3;
  v12 = MEMORY[0x1E0DEE9D8];
  while (v11 != -1)
  {
    sub_1D43BB194(v10, v11);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1D4430098();
      v12 = v17;
    }
    v13 = *(_QWORD *)(v12 + 16);
    if (v13 >= *(_QWORD *)(v12 + 24) >> 1)
    {
      sub_1D4430098();
      v12 = v18;
    }
    *(_QWORD *)(v12 + 16) = v13 + 1;
    v14 = v12 + 16 * v13;
    *(_QWORD *)(v14 + 32) = v10;
    *(_BYTE *)(v14 + 40) = v11;
    sub_1D43BB16C(v10, v11);
    sub_1D43771C8();
    v10 = v15;
    v11 = v16;
  }
  v23 = v12;
  sub_1D42B28FC(&qword_1EFE50FF0);
  sub_1D42E33F8(&qword_1EFE50FF8, &qword_1EFE50FF0);
  sub_1D451A830();
  swift_bridgeObjectRelease();
  sub_1D42B28FC(&qword_1EFE49BB0);
  v19 = v22;
  sub_1D451A140();
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v6, v19);
}

uint64_t sub_1D440E618@<X0>(const void *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12[27];
  uint64_t v13[16];
  _BYTE v14[216];
  _BYTE __dst[128];
  _BYTE v16[128];
  _BYTE __src[128];

  sub_1D435C71C(a1, v14);
  sub_1D435C71C(v14, v12);
  sub_1D440F188(v12, v13);
  sub_1D434936C(v13, v16);
  sub_1D434936C(v16, __src);
  memcpy(__dst, __src, sizeof(__dst));
  v6 = a2[3];
  v7 = a2[5];
  v8 = sub_1D42B5528(a2, v6);
  v12[3] = v6;
  v12[4] = v7;
  v9 = sub_1D430BBF0(v12);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v9, v8, v6);
  v10 = sub_1D437749C((uint64_t)__dst, v12);
  sub_1D43493C4(v13);
  result = sub_1D42B5400((uint64_t)v12);
  if (!v3)
    *a3 = v10;
  return result;
}

uint64_t sub_1D440E708@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D4411D68(a1);
}

void sub_1D440E71C(uint64_t *a1@<X8>)
{
  sub_1D44131AC(6, a1);
}

void AccessibilitySoundRecognition.Request.hash(into:)()
{
  const void *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v4[216];
  _BYTE v5[216];

  sub_1D435C71C(v0, v4);
  sub_1D435C71C(v4, v5);
  v1 = sub_1D435C758((uint64_t)v5);
  v2 = nullsub_1(v5);
  if (v1 == 1)
  {
    sub_1D441911C(&v3, (const void *)(v2 + 16));
    sub_1D42D708C();
    sub_1D4419570();
    sub_1D44197A4();
  }
  else
  {
    sub_1D42D708C();
    sub_1D451B964();
  }
  sub_1D44191D8();
}

void static AccessibilitySoundRecognition.Request.== infix(_:_:)(const void *a1, const void *a2)
{
  _BYTE v3[216];
  _BYTE v4[216];
  _BYTE v5[216];
  _BYTE v6[216];

  sub_1D435C71C(a1, v5);
  sub_1D435C71C(a2, v6);
  sub_1D435C71C(v5, v4);
  sub_1D435C71C(v6, v3);
  sub_1D440B420(v4, v3);
  sub_1D42B6E24();
}

uint64_t sub_1D440E814(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000015 && a2 == 0x80000001D4556E50)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D451B820();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1D440E898()
{
  return 0xD000000000000015;
}

void sub_1D440E8B4()
{
  sub_1D434955C();
  sub_1D42D1094();
  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t sub_1D440E8DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D440E814(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D440E904()
{
  sub_1D4415044();
  return sub_1D451BA3C();
}

uint64_t sub_1D440E92C()
{
  sub_1D4415044();
  return sub_1D451BA48();
}

void AccessibilitySoundRecognition.Request.encode(to:)()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[224];

  sub_1D42BE910();
  v4 = v3;
  sub_1D42B28FC(&qword_1EFE50CB8);
  sub_1D42CB4F8();
  MEMORY[0x1E0C80A78](v5);
  sub_1D434799C();
  sub_1D435C71C(v0, v7);
  sub_1D4419144(v4);
  sub_1D4415044();
  sub_1D44191C8();
  sub_1D435C71C(v7, &v6);
  sub_1D4415080();
  sub_1D451B760();
  sub_1D4306F6C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_1D42BE844();
}

void AccessibilitySoundRecognition.Request.hashValue.getter()
{
  const void *v0;
  uint64_t v1;
  char v2;
  _BYTE v3[192];
  _BYTE v4[432];

  sub_1D435C71C(v0, v4);
  sub_1D42BE9A8();
  v1 = sub_1D4419368(v4);
  if (v2)
  {
    sub_1D441911C(v3, (const void *)(v1 + 16));
    sub_1D437ECC8();
    sub_1D4419590();
    sub_1D44197D8();
  }
  else
  {
    sub_1D42D1094();
    sub_1D42CB3DC();
  }
  sub_1D42CB230();
  sub_1D42CB15C();
}

void AccessibilitySoundRecognition.Request.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  _BYTE v7[80];
  _BYTE v8[216];
  uint64_t v9;
  void *v10;

  sub_1D42BE910();
  v4 = v3;
  v10 = v5;
  sub_1D42B28FC(&qword_1EFE50CD0);
  sub_1D437EDFC();
  MEMORY[0x1E0C80A78](v6);
  sub_1D43479B4();
  sub_1D42B5528(v4, v4[3]);
  sub_1D4415044();
  sub_1D451BA0C();
  if (!v0)
  {
    sub_1D44150BC();
    sub_1D451B688();
    sub_1D43211E8(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    sub_1D435C71C(&v9, v7);
    sub_1D435C71C(v7, v8);
    sub_1D435EB08(v10, v8);
  }
  sub_1D42B5400((uint64_t)v4);
  sub_1D43CB140();
  sub_1D42BE844();
}

void sub_1D440EBA4()
{
  AccessibilitySoundRecognition.Request.init(from:)();
}

void sub_1D440EBB8()
{
  AccessibilitySoundRecognition.Request.encode(to:)();
}

void sub_1D440EBDC(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  MEMORY[0x1E0C80A78](a1);
  sub_1D43479B4();
  (*(void (**)(uint64_t))(v6 + 16))(v3);
  sub_1D4390824(v3, a2, a3);
}

void sub_1D440EC64()
{
  sub_1D42CB0F8();
}

_QWORD *sub_1D440EC70(uint64_t a1, uint64_t a2, const void *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = v3;
  v4[26] = a1;
  v4[27] = a2;
  sub_1D441911C(v4 + 2, a3);
  swift_retain();
  swift_retain();
  sub_1D435CE08((uint64_t)a3);
  sub_1D440ED84();
  v7 = v6;
  sub_1D4419814();
  v4[28] = v7;
  v8 = sub_1D451A9BC();
  *(_QWORD *)(v8 + 16) = 2;
  *(_QWORD *)(v8 + 32) = 0;
  sub_1D42B28FC(&qword_1EFE498F8);
  v9 = sub_1D4419794();
  *(_OWORD *)(v9 + 16) = xmmword_1D45261D0;
  *(_QWORD *)(v9 + 32) = 0x74757074756FLL;
  *(_QWORD *)(v9 + 40) = 0xE600000000000000;
  *(_QWORD *)(v9 + 48) = v8;
  sub_1D42B28FC((uint64_t *)&unk_1EFE4A660);
  v10 = sub_1D451A5E4();
  swift_release();
  swift_release();
  v4[29] = v10;
  return v4;
}

void sub_1D440ED84()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_1D42B28FC(&qword_1EFE498F8);
  *(_OWORD *)(sub_1D4419794() + 16) = xmmword_1D453C820;
  sub_1D4419618();
  v1[4] = v2;
  v1[5] = v3;
  v4 = v0[10];
  v39 = v0[11];
  v40 = v4;
  v1[6] = v4;
  v1[7] = v5;
  sub_1D4419618();
  *(_QWORD *)(v6 + 64) = v7;
  *(_QWORD *)(v6 + 72) = v8;
  sub_1D4419618();
  v9[10] = v10;
  v9[11] = v11;
  v38 = v0[8];
  v9[12] = v38;
  v9[13] = v12;
  sub_1D4419618();
  v14 = v0[14];
  v36 = v0[13];
  v13 = v36;
  v15[14] = v16;
  v15[15] = v13;
  v15[16] = v17 - 10;
  v15[17] = 0x80000001D4556FF0;
  v18 = v0[22];
  v34 = v0[23];
  v35 = v14;
  v15[18] = v34;
  v15[19] = v17 | 4;
  v19 = v0[4];
  v32 = v0[5];
  v20 = v32;
  v15[20] = 0x80000001D4557030;
  v15[21] = v20;
  v15[22] = v17;
  v15[23] = 0x80000001D4557080;
  v15[24] = v14;
  v15[25] = v21;
  v23 = v0[17];
  v30 = v0[16];
  v22 = v30;
  v15[26] = 0x80000001D45570D0;
  v15[27] = v22;
  v24 = v17 - 8;
  v15[28] = v17 - 8;
  v15[29] = 0x80000001D4557120;
  v33 = v18;
  v15[30] = v18;
  v15[31] = v21;
  v37 = v25;
  v15[32] = 0x80000001D4557160;
  v15[33] = v25;
  v15[34] = v17;
  v15[35] = 0x80000001D45571B0;
  v15[36] = v23;
  v15[37] = v17 | 6;
  v31 = v19;
  v15[38] = 0x80000001D4557200;
  v15[39] = v19;
  v15[40] = v17 - 10;
  v15[41] = 0x80000001D4557250;
  v26 = v0[19];
  v28 = v0[20];
  v29 = v23;
  v15[42] = v28;
  v15[43] = v24;
  v27 = v26;
  v15[44] = 0x80000001D4557290;
  v15[45] = v26;
  sub_1D42BE0D0((uint64_t)&v40);
  sub_1D42BE0D0((uint64_t)&v39);
  sub_1D42BE0D0((uint64_t)&v38);
  sub_1D42BE0D0((uint64_t)&v36);
  sub_1D42BE0D0((uint64_t)&v34);
  sub_1D42BE0D0((uint64_t)&v32);
  sub_1D42BE0D0((uint64_t)&v35);
  sub_1D42BE0D0((uint64_t)&v30);
  sub_1D42BE0D0((uint64_t)&v33);
  sub_1D42BE0D0((uint64_t)&v37);
  sub_1D42BE0D0((uint64_t)&v29);
  sub_1D42BE0D0((uint64_t)&v31);
  sub_1D42BE0D0((uint64_t)&v28);
  sub_1D42BE0D0((uint64_t)&v27);
  sub_1D42B28FC((uint64_t *)&unk_1EFE4A660);
  sub_1D451A5E4();
  sub_1D42B6E24();
}

uint64_t sub_1D440EFE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  float v7;
  float v8;
  uint64_t result;

  v3 = v1;
  sub_1D4312004();
  v5 = sub_1D42CB6CC();
  sub_1D441798C(v5, 0x7475706E69, 0xE500000000000000);
  swift_endAccess();
  v6 = *(_QWORD *)(v1 + 32);
  sub_1D42CB6CC();
  sub_1D4383644(a1, v6);
  v8 = v7;
  result = sub_1D42B7204();
  if (!v2 && v8 >= 0.75)
  {
    sub_1D4312004();
    sub_1D42DCE84();
    sub_1D436F858();
    swift_endAccess();
    sub_1D42CB208();
    result = sub_1D4396758(*(_QWORD *)(v3 + 232));
    if (result)
    {
      if (*(_QWORD *)(result + 16) >= 2uLL)
        return swift_bridgeObjectRelease();
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1D440F110()
{
  uint64_t v0;
  _BYTE v2[192];

  sub_1D441911C(v2, (const void *)(v0 + 16));
  sub_1D435C804((uint64_t)v2);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D440F168()
{
  sub_1D440F110();
  return swift_deallocClassInstance();
}

void sub_1D440F188(const void *a1@<X0>, void *a2@<X8>)
{
  const void *v3;
  char *v4;
  _BYTE v5[128];
  uint64_t v6[24];
  _BYTE v7[128];
  _BYTE v8[216];
  _BYTE v9[216];

  sub_1D435C71C(a1, v8);
  sub_1D435C71C(v8, v9);
  if (sub_1D435C758((uint64_t)v9) != 1)
  {
    v4 = (char *)&loc_1D440F21C + 4 * byte_1D453A284[*(unsigned __int8 *)sub_1D4419560()];
    __asm { BR              X10 }
  }
  v3 = (const void *)(sub_1D4419560() + 16);
  sub_1D441911C(v6, v3);
  sub_1D435CE08((uint64_t)v3);
  sub_1D440819C(v6, (uint64_t)v5);
  sub_1D4417C54((uint64_t)v5);
  sub_1D434936C(v5, v7);
  sub_1D434936C(v7, a2);
  sub_1D43495D8();
}

void sub_1D440F2D0(const void *a1@<X0>, void *a2@<X8>)
{
  _QWORD *v3;
  char *v4;
  _QWORD v5[2];
  _QWORD v6[25];
  _QWORD v7[16];
  _BYTE __dst[128];
  _BYTE v9[216];

  sub_1D434936C(a1, v7);
  if (sub_1D43493A8(v7) != 1)
  {
    v4 = (char *)&loc_1D440F374 + 4 * byte_1D453A295[*(unsigned __int8 *)sub_1D43493B4(v7)];
    __asm { BR              X10 }
  }
  v3 = sub_1D43493B4(v7);
  memcpy(__dst, v3, sizeof(__dst));
  sub_1D4408074(v6);
  v5[0] = 0x6E776F6E6B6E753CLL;
  v5[1] = 0xE90000000000003ELL;
  sub_1D4415038((uint64_t)v5);
  sub_1D435C71C(v5, v9);
  sub_1D435C71C(v9, a2);
  sub_1D43495D8();
}

uint64_t sub_1D440F428(char *a1)
{
  return byte_1D453C806[*a1];
}

void sub_1D440F43C(char *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  char v8;

  v8 = *a1;
  v7 = sub_1D440F428(&v8);
  sub_1D445A168(v7, a2, a3, a4);
}

void sub_1D440F4A0()
{
  sub_1D42D61F0();
  sub_1D437EC8C();
  sub_1D42D6264();
}

void sub_1D440F4C8(_QWORD *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;

  if ((sub_1D42FE3B8(a1, a3) & 1) != 0)
  {
    v3 = sub_1D437EC8C();
    sub_1D42FE41C(v3, v4);
  }
  else
  {
    sub_1D42B6E24();
  }
}

uint64_t sub_1D440F504(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6570616873 && a2 == 0xE500000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365756C6176 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D440F5E0(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7365756C6176;
  else
    return 0x6570616873;
}

void sub_1D440F610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1D42BE910();
  v4 = v3;
  sub_1D42B28FC(&qword_1EFE512B0);
  sub_1D42CB4F8();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42CB18C();
  sub_1D4419144(v4);
  sub_1D4418A94();
  sub_1D44191C8();
  sub_1D42CB9F8();
  sub_1D43B9EB0((unint64_t *)&unk_1EFE512C0, v6, MEMORY[0x1E0DEB420], MEMORY[0x1E0DEAF10]);
  sub_1D4419260();
  sub_1D4338480();
  if (!v0)
  {
    sub_1D42CB9F8();
    sub_1D43B9EB0(qword_1EFE4E7E8, v7, MEMORY[0x1E0DEB198], MEMORY[0x1E0DEAF10]);
    sub_1D4419260();
    sub_1D4338480();
  }
  sub_1D42F1FA0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_1D43CB140();
  sub_1D42BE844();
}

void sub_1D440F728()
{
  sub_1D42BE9A8();
  sub_1D42D61F0();
  sub_1D44197E4();
  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t sub_1D440F760(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1D42B28FC((uint64_t *)&unk_1EFE512E0);
  sub_1D42F86A4();
  MEMORY[0x1E0C80A78](v3);
  v4 = a1[3];
  sub_1D44195DC(a1);
  sub_1D4418A94();
  sub_1D44192D8();
  if (v1)
  {
    sub_1D42B5400((uint64_t)a1);
  }
  else
  {
    sub_1D42CB9F8();
    sub_1D43B9EB0(&qword_1EFE4DD80, v5, MEMORY[0x1E0DEB448], MEMORY[0x1E0DEAF40]);
    sub_1D42CB1B4();
    v4 = v9;
    sub_1D42CB9F8();
    v8 = sub_1D43B9EB0(&qword_1EFE512F0, v7, MEMORY[0x1E0DEB1C0], MEMORY[0x1E0DEAF40]);
    sub_1D438C74C();
    sub_1D42CB1B4();
    sub_1D42CFC04();
    if (v8)
    {
      sub_1D42D3258();
      sub_1D42B5400((uint64_t)a1);
    }
    else
    {
      sub_1D42CB6CC();
      sub_1D42B5400((uint64_t)a1);
      sub_1D42B7204();
    }
    sub_1D42D3258();
  }
  return v4;
}

void sub_1D440F908()
{
  sub_1D42D61F0();
  sub_1D42D6264();
  sub_1D441928C();
}

void sub_1D440F944(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if ((sub_1D42FE3B8(a1, a4) & 1) != 0 && (v4 = sub_1D44197B0(), (sub_1D42FE41C(v4, v5) & 1) != 0))
  {
    v6 = sub_1D437EC8C();
    sub_1D42FE41C(v6, v7);
  }
  else
  {
    sub_1D42CB15C();
  }
}

uint64_t sub_1D440F99C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x5373746867696577 && a2 == 0xEC00000065706168;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x73746867696577 && a2 == 0xE700000000000000;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x736573616962 && a2 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1D451B820();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1D440FAF8(char a1)
{
  if (!a1)
    return 0x5373746867696577;
  if (a1 == 1)
    return 0x73746867696577;
  return 0x736573616962;
}

void sub_1D440FB54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1D42BE910();
  sub_1D42B28FC(&qword_1EFE512D0);
  sub_1D437EDFC();
  MEMORY[0x1E0C80A78](v3);
  sub_1D42CB18C();
  v4 = (_QWORD *)sub_1D4419394();
  sub_1D42B5528(v4, v5);
  sub_1D4418AD0();
  sub_1D451BA24();
  sub_1D42CB9F8();
  sub_1D43B9EB0((unint64_t *)&unk_1EFE512C0, v6, MEMORY[0x1E0DEB420], MEMORY[0x1E0DEAF10]);
  sub_1D4419260();
  sub_1D4338480();
  if (!v0)
  {
    sub_1D42CB9F8();
    sub_1D43B9EB0(qword_1EFE4E7E8, v7, MEMORY[0x1E0DEB198], MEMORY[0x1E0DEAF10]);
    sub_1D4338480();
    sub_1D4338480();
  }
  sub_1D42F1FA0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_1D43CB140();
  sub_1D42BE844();
}

uint64_t sub_1D440FCC4()
{
  sub_1D42BE9A8();
  sub_1D42D61F0();
  sub_1D42D6264();
  sub_1D44197E4();
  return sub_1D42CB230();
}

void sub_1D440FD1C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D42BE910();
  v2 = v1;
  sub_1D42B28FC(&qword_1EFE512F8);
  sub_1D42F86A4();
  MEMORY[0x1E0C80A78](v3);
  sub_1D44195DC(v2);
  sub_1D4418AD0();
  sub_1D44192D8();
  if (v0)
  {
    sub_1D42B5400((uint64_t)v2);
  }
  else
  {
    sub_1D42CB9F8();
    sub_1D43B9EB0(&qword_1EFE4DD80, v4, MEMORY[0x1E0DEB448], MEMORY[0x1E0DEAF40]);
    sub_1D42CB1B4();
    sub_1D42CB9F8();
    sub_1D43B9EB0(&qword_1EFE512F0, v5, MEMORY[0x1E0DEB1C0], MEMORY[0x1E0DEAF40]);
    sub_1D438C74C();
    sub_1D4419520();
    sub_1D42CB1B4();
    sub_1D42CB9DC();
    sub_1D4419520();
    sub_1D451B688();
    sub_1D42CFC04();
    sub_1D42CB6CC();
    sub_1D42B5400((uint64_t)v2);
    sub_1D42B7204();
    sub_1D42CB338();
    sub_1D42D3258();
  }
  sub_1D42CBA44();
}

uint64_t sub_1D440FF0C()
{
  char *v0;

  return sub_1D440F5E0(*v0);
}

uint64_t sub_1D440FF14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D440F504(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D440FF38()
{
  sub_1D4418A94();
  return sub_1D451BA3C();
}

uint64_t sub_1D440FF60()
{
  sub_1D4418A94();
  return sub_1D451BA48();
}

uint64_t sub_1D440FF88@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_1D440F760(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

void sub_1D440FFB0()
{
  sub_1D440F610();
}

void sub_1D440FFC8()
{
  sub_1D440F728();
}

void sub_1D440FFD0()
{
  sub_1D440F4A0();
}

uint64_t sub_1D440FFD8()
{
  sub_1D451B958();
  sub_1D42D61F0();
  sub_1D42D6264();
  return sub_1D451B994();
}

void sub_1D4410024(uint64_t a1, _QWORD **a2)
{
  sub_1D440F4C8(*(_QWORD **)a1, *(_QWORD *)(a1 + 8), *a2);
}

uint64_t sub_1D4410038()
{
  char *v0;

  return sub_1D440FAF8(*v0);
}

uint64_t sub_1D4410040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D440F99C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D4410064()
{
  sub_1D4418AD0();
  return sub_1D451BA3C();
}

uint64_t sub_1D441008C()
{
  sub_1D4418AD0();
  return sub_1D451BA48();
}

void sub_1D44100B4(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D440FD1C();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
    a1[2] = v5;
  }
}

void sub_1D44100E0()
{
  sub_1D440FB54();
}

uint64_t sub_1D44100FC()
{
  return sub_1D440FCC4();
}

void sub_1D4410108()
{
  sub_1D440F908();
}

uint64_t sub_1D4410114()
{
  sub_1D451B958();
  sub_1D42D61F0();
  sub_1D42D6264();
  sub_1D42D6264();
  return sub_1D451B994();
}

void sub_1D4410178(uint64_t a1, _QWORD **a2)
{
  sub_1D440F944(*(_QWORD **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *a2);
}

void sub_1D4410194()
{
  sub_1D451B964();
  sub_1D441918C();
  sub_1D4418F58();
  sub_1D441918C();
  sub_1D4418F58();
  sub_1D4419004();
  sub_1D441918C();
  sub_1D4418F58();
  sub_1D4419004();
  sub_1D441918C();
  sub_1D4418F58();
  sub_1D4419004();
  sub_1D441918C();
  sub_1D4418F58();
  sub_1D4419004();
  sub_1D441918C();
  sub_1D4418F58();
  sub_1D4419004();
  sub_1D441918C();
  sub_1D4418F58();
  sub_1D4419004();
  sub_1D441918C();
  sub_1D4418F58();
  sub_1D437EC8C();
  sub_1D441928C();
}

BOOL sub_1D4410254(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BOOL8 result;

  result = 0;
  if (*(_QWORD *)a1 == *(_QWORD *)a2
    && (sub_1D42FE3B8(*(_QWORD **)(a1 + 8), *(_QWORD **)(a2 + 8)) & 1) != 0
    && (sub_1D4418F64() & 1) != 0
    && (sub_1D42FE3B8(*(_QWORD **)(a1 + 24), *(_QWORD **)(a2 + 24)) & 1) != 0
    && (sub_1D4419010() & 1) != 0
    && (sub_1D4418F64() & 1) != 0
    && (sub_1D42FE3B8(*(_QWORD **)(a1 + 48), *(_QWORD **)(a2 + 48)) & 1) != 0
    && (sub_1D4419010() & 1) != 0
    && (sub_1D4418F64() & 1) != 0
    && (sub_1D42FE3B8(*(_QWORD **)(a1 + 72), *(_QWORD **)(a2 + 72)) & 1) != 0
    && (sub_1D4419010() & 1) != 0
    && (sub_1D4418F64() & 1) != 0
    && (sub_1D42FE3B8(*(_QWORD **)(a1 + 96), *(_QWORD **)(a2 + 96)) & 1) != 0
    && (sub_1D4419010() & 1) != 0
    && (sub_1D4418F64() & 1) != 0
    && (sub_1D42FE3B8(*(_QWORD **)(a1 + 120), *(_QWORD **)(a2 + 120)) & 1) != 0
    && (sub_1D4419010() & 1) != 0
    && (sub_1D4418F64() & 1) != 0
    && (sub_1D42FE3B8(*(_QWORD **)(a1 + 144), *(_QWORD **)(a2 + 144)) & 1) != 0
    && (sub_1D4419010() & 1) != 0
    && (sub_1D4418F64() & 1) != 0
    && (sub_1D42FE3B8(*(_QWORD **)(a1 + 168), *(_QWORD **)(a2 + 168)) & 1) != 0
    && (sub_1D4418F64() & 1) != 0)
  {
    v4 = sub_1D437EC8C();
    if ((sub_1D42FE41C(v4, v5) & 1) != 0)
      return 1;
  }
  return result;
}

uint64_t sub_1D44103DC(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  BOOL v7;
  char v9;

  v3 = a1 == 0x7A69537475706E69 && a2 == 0xE900000000000065;
  if (v3 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x72616C706D657865 && a2 == 0xEE00726F736E6554;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000017 && a2 == 0x80000001D4557520 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x80000001D4557540 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x80000001D4557560 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x80000001D4557580 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x80000001D45575A0 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 6;
    }
    else
    {
      v7 = a1 == 0x726F736E65543164 && a2 == 0xE900000000000073;
      if (v7 || (sub_1D451B820() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 7;
      }
      else if (a1 == 0x726F736E65543264 && a2 == 0xE900000000000073)
      {
        swift_bridgeObjectRelease();
        return 8;
      }
      else
      {
        v9 = sub_1D451B820();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 8;
        else
          return 9;
      }
    }
  }
}

uint64_t sub_1D4410750()
{
  return 9;
}

uint64_t sub_1D4410758(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D4410794 + 4 * byte_1D453A2A6[a1]))(0x7A69537475706E69, 0xE900000000000065);
}

uint64_t sub_1D4410794()
{
  return 0x72616C706D657865;
}

unint64_t sub_1D44107B8()
{
  return 0xD000000000000017;
}

unint64_t sub_1D44107D8()
{
  return 0xD000000000000010;
}

uint64_t sub_1D4410818()
{
  return 0x726F736E65543164;
}

uint64_t sub_1D441084C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_1D42B28FC(&qword_1EFE511A0);
  sub_1D42F86A4();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42CB18C();
  sub_1D44195DC(a1);
  sub_1D4418030();
  sub_1D451BA24();
  sub_1D451B754();
  if (!v1)
  {
    sub_1D441806C();
    sub_1D451B760();
    sub_1D44180A8();
    sub_1D4418EB0();
    sub_1D4418EB0();
    sub_1D4418EB0();
    sub_1D4418EB0();
    sub_1D4418EB0();
    sub_1D4418EB0();
    sub_1D4418EB0();
  }
  return sub_1D42F1FA0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
}

void sub_1D4410A90()
{
  sub_1D42BE9A8();
  sub_1D4410194();
  sub_1D42CB230();
  sub_1D42BE978();
}

void sub_1D4410AB8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[24];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  sub_1D42BE910();
  v2 = v1;
  v4 = v3;
  sub_1D42B28FC(&qword_1EFE511C0);
  sub_1D42F86A4();
  MEMORY[0x1E0C80A78](v5);
  sub_1D434799C();
  sub_1D4419144(v2);
  sub_1D4418030();
  sub_1D451BA0C();
  if (v0)
  {
    v6 = 0;
    v7 = 0;
  }
  else
  {
    LOBYTE(v31) = 0;
    v8 = sub_1D451B67C();
    sub_1D44180E4();
    sub_1D4419724();
    sub_1D42CB1B4();
    v9 = sub_1D4418120();
    sub_1D42CB9DC();
    sub_1D43F8AC8();
    sub_1D4418F24();
    v21 = v32;
    v22 = v31;
    swift_bridgeObjectRetain();
    sub_1D42CB9DC();
    sub_1D43F8AC8();
    sub_1D4418F24();
    v19 = v32;
    v20 = v31;
    v18 = v33;
    v17 = v31;
    swift_bridgeObjectRetain();
    sub_1D42CB9DC();
    sub_1D43F8AC8();
    sub_1D4418F24();
    v15 = v32;
    v16 = v33;
    v10 = v31;
    LOBYTE(v30[0]) = 5;
    sub_1D43F8AC8();
    v12 = v32;
    sub_1D42CB7F8();
    v28 = v33;
    sub_1D42CB9DC();
    sub_1D4418F24();
    if (v32)
    {
      sub_1D4418ECC();
      sub_1D441910C();
      sub_1D42CB338();
      sub_1D4419250();
      sub_1D4419258();
      sub_1D4419284();
      sub_1D4419248();
      sub_1D4419274();
      sub_1D44191C0();
      sub_1D4419568();
      swift_bridgeObjectRelease();
      sub_1D4347994();
      v6 = 0;
      v7 = 30;
    }
    else
    {
      v26 = v31;
      swift_bridgeObjectRetain();
      sub_1D42CB7F8();
      v27 = v33;
      sub_1D43F8AC8();
      sub_1D4418F24();
      LOBYTE(v30[0]) = 7;
      v14 = v31;
      swift_bridgeObjectRetain();
      sub_1D43F8AC8();
      v25 = v33;
      sub_1D42CB8FC();
      sub_1D4419724();
      sub_1D42CB1B4();
      if (!v9)
      {
        v13 = v31;
        swift_bridgeObjectRetain();
        sub_1D42CB7F8();
        v24 = v33;
        sub_1D43F8AC8();
        sub_1D42CB1B4();
        sub_1D4418ECC();
        v29 = v55;
        v23 = v56;
        v11 = v57;
        v30[0] = v8;
        v30[1] = v22;
        v30[2] = v21;
        v30[3] = v20;
        v30[4] = v19;
        v30[5] = v18;
        v30[6] = v17;
        v30[7] = v15;
        v30[8] = v16;
        v30[9] = v10;
        v30[10] = v12;
        v30[11] = v28;
        v30[12] = v26;
        v30[13] = 0;
        v30[14] = v27;
        v30[15] = v14;
        v30[16] = 0;
        v30[17] = v25;
        v30[18] = v13;
        v30[19] = 0;
        v30[20] = v24;
        v30[21] = v55;
        v30[22] = v56;
        v30[23] = v57;
        sub_1D435CE08((uint64_t)v30);
        sub_1D42B7204();
        sub_1D42CB8F4();
        sub_1D4347994();
        sub_1D435EB80();
        sub_1D42D3258();
        sub_1D4419248();
        sub_1D4419274();
        sub_1D44191C0();
        sub_1D42CB338();
        swift_bridgeObjectRelease();
        sub_1D4418FF0();
        sub_1D4419334();
        sub_1D435EC28();
        sub_1D42D3258();
        sub_1D4347994();
        sub_1D435EB80();
        sub_1D42CB8F4();
        sub_1D441932C();
        sub_1D42CB338();
        sub_1D42B7204();
        sub_1D441987C();
        v31 = v8;
        v32 = v22;
        v33 = v21;
        v34 = v20;
        v35 = v19;
        v36 = v18;
        v37 = v17;
        v38 = v15;
        v39 = v16;
        v40 = v10;
        v41 = v12;
        v42 = v28;
        v43 = v26;
        v44 = 0;
        v45 = v27;
        v46 = v14;
        v47 = 0;
        v48 = v25;
        v49 = v13;
        v50 = 0;
        v51 = v24;
        v52 = v29;
        v53 = v23;
        v54 = v11;
        sub_1D435C804((uint64_t)&v31);
        sub_1D441911C(v4, v30);
        goto LABEL_17;
      }
      sub_1D4418ECC();
      sub_1D441910C();
      sub_1D4419114();
      sub_1D4419250();
      sub_1D4419258();
      sub_1D4419284();
      sub_1D4419248();
      sub_1D4419274();
      sub_1D44191C0();
      sub_1D4419568();
      sub_1D42CB338();
      sub_1D4418FF0();
      sub_1D4419334();
      sub_1D435EC28();
      sub_1D441915C();
      sub_1D44191B8();
      sub_1D4347994();
      sub_1D4419738();
      v7 = 126;
      v6 = 1;
    }
  }
  sub_1D441987C();
  if ((v7 & 2) != 0)
  {
    sub_1D441910C();
    sub_1D4419114();
    if (((v7 >> 2) & 1) == 0)
    {
LABEL_6:
      if (((v7 >> 3) & 1) != 0)
        goto LABEL_7;
      goto LABEL_13;
    }
  }
  else if ((v7 & 4) == 0)
  {
    goto LABEL_6;
  }
  sub_1D4419250();
  sub_1D4419258();
  sub_1D4419284();
  if (((v7 >> 3) & 1) != 0)
  {
LABEL_7:
    sub_1D4419248();
    sub_1D4419274();
    sub_1D44191C0();
    if (((v7 >> 4) & 1) == 0)
      goto LABEL_8;
    goto LABEL_14;
  }
LABEL_13:
  if (((v7 >> 4) & 1) == 0)
  {
LABEL_8:
    if (((v7 >> 5) & 1) != 0)
      goto LABEL_9;
    goto LABEL_15;
  }
LABEL_14:
  swift_bridgeObjectRelease();
  sub_1D42CB338();
  sub_1D435EB80();
  if (((v7 >> 5) & 1) != 0)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    sub_1D42D3258();
    sub_1D42CB338();
    if ((v6 & 1) == 0)
      goto LABEL_17;
    goto LABEL_16;
  }
LABEL_15:
  if (!v6)
    goto LABEL_17;
LABEL_16:
  sub_1D435EB80();
  sub_1D4347994();
  sub_1D4419738();
LABEL_17:
  sub_1D42CBA44();
  sub_1D42BE844();
}

uint64_t sub_1D44111F4()
{
  unsigned __int8 *v0;

  return sub_1D4410758(*v0);
}

uint64_t sub_1D44111FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D44103DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D4411220@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D4410750();
  *a1 = result;
  return result;
}

uint64_t sub_1D4411244()
{
  sub_1D4418030();
  return sub_1D451BA3C();
}

uint64_t sub_1D441126C()
{
  sub_1D4418030();
  return sub_1D451BA48();
}

uint64_t sub_1D441129C()
{
  sub_1D451B958();
  sub_1D4410194();
  return sub_1D451B994();
}

uint64_t sub_1D44112D8(_QWORD *a1)
{
  return sub_1D441084C(a1);
}

void sub_1D44112EC(void *a1@<X8>)
{
  uint64_t v1;
  _BYTE v3[192];

  sub_1D4410AB8();
  if (!v1)
    memcpy(a1, v3, 0xC0uLL);
}

char *sub_1D4411334(const void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const void *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char v32[208];
  _BYTE v33[216];
  _BYTE v34[192];
  _QWORD v35[30];

  v31 = a2;
  v26 = *(_QWORD *)(*(_QWORD *)(a4 + 8) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = (char *)&v23 - v9;
  v30 = a3;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v12 = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v27 = (uint64_t)a1;
  v28 = (uint64_t)&v23 - v14;
  sub_1D435C71C(a1, v33);
  sub_1D435C71C(v33, v35);
  if (sub_1D435C758((uint64_t)v35) == 1)
  {
    v15 = (const void *)nullsub_1(v35);
    memcpy(v32, v15, sizeof(v32));
    sub_1D44181E0(v27);
    swift_bridgeObjectRelease();
    v16 = &v32[16];
    memcpy(v34, &v32[16], sizeof(v34));
    v17 = v29;
    sub_1D4411784();
    v19 = v18;
    sub_1D435C804((uint64_t)&v32[16]);
    if (!v17)
    {
      v35[29] = v19;
      sub_1D42B28FC((uint64_t *)&unk_1EFE4CAF0);
      sub_1D42E33F8(&qword_1EFE50D00, (uint64_t *)&unk_1EFE4CAF0);
      v16 = (char *)sub_1D451A2E4();
      swift_release();
    }
  }
  else
  {
    v24 = v13;
    v25 = v12;
    v27 = a4;
    v32[0] = *(_BYTE *)nullsub_1(v35);
    v16 = v31;
    (*(void (**)(uint64_t))(v26 + 16))(v30);
    v21 = v28;
    v20 = v29;
    sub_1D440F43C(v32, AssociatedTypeWitness, AssociatedConformanceWitness, v28);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
    if (!v20)
    {
      v16 = (char *)sub_1D441160C();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v21, v25);
    }
  }
  return v16;
}

uint64_t sub_1D441160C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0;
  v2 = sub_1D42B28FC(&qword_1EFE4CB08);
  v8 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D43FA398();
  if (!v0)
  {
    v9 = v5;
    sub_1D42B28FC(&qword_1EFE4CB10);
    sub_1D42E33F8(&qword_1EFE4CB18, &qword_1EFE4CB10);
    sub_1D451A308();
    swift_release();
    sub_1D42E33F8(&qword_1EFE4CB20, &qword_1EFE4CB08);
    v1 = sub_1D451A2E4();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v4, v2);
  }
  return v1;
}

void sub_1D4411784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  const void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  sub_1D42BE910();
  v67 = v0;
  v68 = v2;
  v69 = v4;
  v70 = v3;
  v6 = v5;
  v55 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v5);
  v53 = v7;
  v54 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D42B28FC(&qword_1EFE4CD78);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  sub_1D42BE768();
  v52 = v10;
  v11 = sub_1D42B28FC(&qword_1EFE4CD80);
  v57 = *(_QWORD *)(v11 - 8);
  v58 = v11;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v12);
  sub_1D44190B4(v13, v51);
  v14 = sub_1D42B28FC(&qword_1EFE4CD88);
  v60 = *(_QWORD *)(v14 - 8);
  v61 = v14;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v15);
  sub_1D4340A24(v16, v51);
  v17 = sub_1D42B28FC(&qword_1EFE4CD90);
  v62 = *(_QWORD *)(v17 - 8);
  v63 = v17;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v18);
  sub_1D441907C(v19, v51);
  v65 = *(_QWORD **)(sub_1D42B28FC(&qword_1EFE4CD98) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v20);
  sub_1D43479B4();
  v66 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE4CDA0) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v21);
  sub_1D438E8B8();
  sub_1D42B28FC(&qword_1EFE4CDA8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v22);
  sub_1D42CB18C();
  sub_1D42B28FC(&qword_1EFE4CDB0);
  sub_1D42B6F40();
  v23 = sub_1D4413C94(20, 0, MEMORY[0x1E0DEE9D8]);
  v56 = v6;
  v24 = *v6 - 512;
  if (!__OFSUB__(*v6, 512))
  {
    v51 = v8;
    v25 = v23;
    v26 = v67;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 40))(v24 / 160 + 1, 46, v70);
    if (!v26)
    {
      sub_1D43910F8();
      v67 = 0;
      sub_1D42B8F48();
      sub_1D4412388();
      swift_release();
      sub_1D4419898(&qword_1EFE4CDB8);
      v27 = sub_1D451A374();
      sub_1D42B28FC((uint64_t *)&unk_1EFE4CDC0);
      sub_1D42B6F40();
      v28 = sub_1D43AEFD8(v27);
      sub_1D4328A1C(v1, &qword_1EFE4CDA8);
      sub_1D42B28FC(&qword_1EFE49BB0);
      sub_1D42CB9F8();
      sub_1D42E3F8C(qword_1EFE51000);
      sub_1D451A830();
      sub_1D451A140();
      v29 = sub_1D441968C();
      sub_1D42CB44C(v29, v30);
      sub_1D42E33F8(qword_1EFE4CDE0, &qword_1EFE4CDA0);
      v31 = sub_1D451A2E4();
      v32 = sub_1D432117C();
      sub_1D42F1FA0(v32, v33);
      v34 = v67;
      sub_1D441260C();
      if (!v34)
      {
        v65 = v25;
        v66 = v31;
        v35 = v52;
        sub_1D4406FE0();
        sub_1D42CB9F8();
        v67 = 0;
        sub_1D42E3F8C(qword_1EFE4CDF0);
        sub_1D42E33F8(qword_1EFE51020, &qword_1EFE4CD78);
        sub_1D451A35C();
        sub_1D4328A1C(v35, &qword_1EFE4CD78);
        sub_1D42FC448();
        v36 = v54;
        v37 = v55;
        v38 = v70;
        (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v54, v68, v70);
        v39 = (*(unsigned __int8 *)(v37 + 80) + 240) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
        v40 = (v53 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
        v41 = (char *)swift_allocObject();
        v42 = v69;
        *((_QWORD *)v41 + 2) = v38;
        *((_QWORD *)v41 + 3) = v42;
        *((_QWORD *)v41 + 4) = v28;
        *((_QWORD *)v41 + 5) = v65;
        v43 = (uint64_t)v56;
        sub_1D441911C(v41 + 48, v56);
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(&v41[v39], v36, v38);
        *(_QWORD *)&v41[v40] = v66;
        swift_retain();
        swift_retain();
        sub_1D435CE08(v43);
        sub_1D4307398();
        sub_1D4419868();
        sub_1D42E33F8(qword_1EFE4CE00, &qword_1EFE4CD80);
        v44 = v59;
        v45 = v64;
        sub_1D451A3A4();
        sub_1D42FC448();
        sub_1D43211E8(v45, *(uint64_t (**)(uint64_t, uint64_t))(v57 + 8));
        sub_1D42E33F8(qword_1EFE51030, &qword_1EFE4CD88);
        v47 = v46;
        sub_1D42E33F8(&qword_1EFE50D00, (uint64_t *)&unk_1EFE4CAF0);
        MEMORY[0x1D825BC14](v61, v47, v48);
        sub_1D42F1FA0(v44, *(uint64_t (**)(uint64_t, uint64_t))(v60 + 8));
        sub_1D42E33F8(&qword_1EFE4CE10, &qword_1EFE4CD90);
        sub_1D43072A8();
        swift_release();
        sub_1D43070B8();
        sub_1D42EA438();
        v49 = sub_1D44191A4();
        sub_1D4307058(v49, v50);
        goto LABEL_6;
      }
      sub_1D42B8F48();
      sub_1D42E3F48();
    }
    swift_release();
LABEL_6:
    sub_1D42F1F94();
    sub_1D42BE844();
    return;
  }
  __break(1u);
}

uint64_t sub_1D4411D68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = os_transaction_create();
  if (result)
    *a1 = result;
  else
    __break(1u);
  return result;
}

uint64_t sub_1D4411DA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1D42B28FC((uint64_t *)&unk_1EFE510E0);
  v2 = sub_1D4419794();
  *(_OWORD *)(v2 + 16) = xmmword_1D453C830;
  *(_QWORD *)(v2 + 32) = 0x7475706E69;
  *(_QWORD *)(v2 + 40) = 0xE500000000000000;
  sub_1D42B28FC((uint64_t *)&unk_1EFE403A0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1D4533EC0;
  *(int64x2_t *)(v3 + 32) = vdupq_n_s64(1uLL);
  *(_QWORD *)(v3 + 48) = 1024;
  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v2 + 48) = v3;
  *(_QWORD *)(v2 + 56) = 0xD000000000000040;
  sub_1D4419058();
  *(_QWORD *)(v2 + 64) = v5;
  *(_QWORD *)(v2 + 72) = &unk_1E9798390;
  *(_QWORD *)(v2 + 80) = v4 | 2;
  *(_QWORD *)(v2 + 88) = 0x80000001D4557160;
  sub_1D4419058();
  *(_QWORD *)(v2 + 96) = v7;
  *(_QWORD *)(v2 + 104) = v6;
  *(_QWORD *)(v2 + 112) = v8;
  *(_QWORD *)(v2 + 120) = &unk_1E97981E0;
  *(_QWORD *)(v2 + 128) = v9;
  *(_QWORD *)(v2 + 136) = 0x80000001D4556EB0;
  sub_1D4419058();
  *(_QWORD *)(v2 + 144) = v11;
  *(_QWORD *)(v2 + 152) = v10;
  *(_QWORD *)(v2 + 160) = v12;
  *(_QWORD *)(v2 + 168) = &unk_1E9798240;
  *(_QWORD *)(v2 + 176) = v13;
  *(_QWORD *)(v2 + 184) = 0x80000001D4556FA0;
  sub_1D4419058();
  *(_QWORD *)(v2 + 192) = v15;
  *(_QWORD *)(v2 + 200) = v14;
  *(_QWORD *)(v2 + 208) = v16;
  *(_QWORD *)(v2 + 216) = &unk_1E97982A0;
  *(_QWORD *)(v2 + 224) = v17;
  *(_QWORD *)(v2 + 232) = 0x80000001D45570D0;
  sub_1D4419058();
  *(_QWORD *)(v2 + 240) = v18;
  *(_QWORD *)(v2 + 248) = v19;
  *(_QWORD *)(v2 + 256) = v20;
  *(_QWORD *)(v2 + 264) = &unk_1E9798300;
  sub_1D4419058();
  *(_QWORD *)(v2 + 272) = v22;
  *(_QWORD *)(v2 + 280) = v21;
  *(_QWORD *)(v2 + 288) = &unk_1E9798328;
  *(_QWORD *)(v2 + 296) = v23 - 10;
  *(_QWORD *)(v2 + 304) = 0x80000001D4557250;
  *(_QWORD *)(v2 + 312) = &unk_1E9798368;
  sub_1D4419058();
  *(_QWORD *)(v2 + 320) = v24;
  *(_QWORD *)(v2 + 328) = v25;
  *(_QWORD *)(v2 + 336) = &unk_1E9798158;
  *(_QWORD *)(v2 + 344) = v26;
  *(_QWORD *)(v2 + 352) = 0x80000001D4556FF0;
  *(_QWORD *)(v2 + 360) = &unk_1E9798188;
  sub_1D4419058();
  *(_QWORD *)(v2 + 368) = v27;
  *(_QWORD *)(v2 + 376) = v28;
  *(_QWORD *)(v2 + 384) = &unk_1E97981B0;
  sub_1D42B28FC(&qword_1EFE510F0);
  return sub_1D451A5E4();
}

uint64_t sub_1D4412004()
{
  int v0;
  int v1;
  uint64_t v2;
  _BYTE *v4;

  v0 = e5rt_tensor_desc_dtype_create();
  if (v0)
  {
    v1 = v0;
    sub_1D43705BC();
    swift_allocError();
    *(_DWORD *)v2 = v1;
    *(_BYTE *)(v2 + 4) = 0;
  }
  else
  {
    sub_1D43705F8();
    swift_allocError();
    *v4 = 0;
  }
  return swift_willThrow();
}

uint64_t sub_1D44121EC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  if (__OFSUB__(result, 512))
  {
    __break(1u);
  }
  else
  {
    v1 = sub_1D4411DA4((result - 512) / 5120 + 1);
    v2 = sub_1D441765C(v1);
    sub_1D42B7204();
    return v2;
  }
  return result;
}

void sub_1D441224C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];
  uint64_t v21;

  sub_1D42BE910();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v20 - v14;
  v16 = sub_1D44121EC(*v10);
  if (!v0)
  {
    v21 = v16;
    v20[0] = v12;
    v20[1] = AssociatedTypeWitness;
    sub_1D445A168(39, v6, v4, (uint64_t)v15);
    v17 = sub_1D436A7EC((uint64_t)v15, v8, v21, v6, v2);
    v19 = v18;
    swift_bridgeObjectRelease();
    type metadata accessor for AccessibilitySoundRecognition.CustomModel();
    sub_1D42B6F40();
    sub_1D435CE08((uint64_t)v10);
    sub_1D440EC70(v17, v19, v10);
    sub_1D44195C0();
  }
  sub_1D42F1F94();
  sub_1D42BE844();
}

void sub_1D4412388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1D42CB740();
  v5 = v4;
  v23 = v6;
  v7 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v20 = *(_QWORD *)(v7 - 8);
  v8 = v7;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  sub_1D434799C();
  v10 = sub_1D451A0B0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1D438E8B8();
  v18 = sub_1D42B28FC(&qword_1EFE51170);
  v22 = *(_QWORD *)(v18 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v12);
  sub_1D43B9F74();
  v21 = sub_1D42B28FC(&qword_1EFE51178);
  v19 = *(_QWORD *)(v21 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v13);
  sub_1D42F1ED4();
  swift_retain();
  sub_1D42B28FC((uint64_t *)&unk_1EFE4CE90);
  sub_1D42E33F8(qword_1EFE510A0, (uint64_t *)&unk_1EFE4CE90);
  sub_1D451A308();
  swift_release();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 104))(v3, *MEMORY[0x1E0C958B0], v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v20 + 104))(v2, *MEMORY[0x1E0C958E8], v8);
  sub_1D42E33F8(&qword_1EFE51180, &qword_1EFE51170);
  sub_1D451A380();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v2, v8);
  v14 = sub_1D432117C();
  v15(v14, v10);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v0, v18);
  sub_1D4340870(v23, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 16));
  v16 = v23 + *(int *)(sub_1D42B28FC(&qword_1EFE4CDA8) + 36);
  *(_OWORD *)(v16 + 48) = 0u;
  *(_OWORD *)(v16 + 64) = 0u;
  *(_OWORD *)(v16 + 16) = 0u;
  *(_OWORD *)(v16 + 32) = 0u;
  *(_OWORD *)v16 = 0u;
  *(_QWORD *)(v16 + 80) = sub_1D4417FEC;
  *(_QWORD *)(v16 + 88) = v5;
  *(_OWORD *)(v16 + 96) = 0u;
  *(_OWORD *)(v16 + 112) = 0u;
  *(_OWORD *)(v16 + 128) = 0u;
  *(_QWORD *)(v16 + 144) = sub_1D4417FF4;
  *(_QWORD *)(v16 + 152) = v5;
  v17 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
  swift_retain_n();
  v17(v1, v21);
  sub_1D42CB520();
}

void sub_1D441260C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t AssociatedConformanceWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)@<X0>(uint64_t@<X8>);
  uint64_t v44;
  void (*v45)(char *@<X0>, uint64_t *@<X1>, _BYTE *@<X8>);
  uint64_t v46;
  uint64_t v47;

  sub_1D42BE910();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = sub_1D42B28FC((uint64_t *)&unk_1EFE4CEC0);
  v35 = *(_QWORD *)(v7 - 8);
  v36 = v7;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v8);
  sub_1D4419418(v9, v33[0]);
  v34 = sub_1D42B28FC((uint64_t *)&unk_1EFE51140);
  v37 = *(_QWORD *)(v34 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v10);
  sub_1D4419450(v11, v33[0]);
  v38 = *(_QWORD *)(v2 + 8);
  v12 = *(_QWORD *)(v38 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v41 = *(_QWORD *)(AssociatedTypeWitness - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v33 - v15;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v18 = swift_getAssociatedTypeWitness();
  v19 = *(_QWORD *)(v18 - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v33 - v21;
  v23 = *(void (**)(uint64_t, uint64_t))(v12 + 16);
  v39 = v6;
  v40 = v4;
  v23(v4, v12);
  sub_1D445A168(3, AssociatedTypeWitness, AssociatedConformanceWitness, (uint64_t)v22);
  if (v0)
  {
    (*(void (**)(char *, uint64_t))(v41 + 8))(v16, AssociatedTypeWitness);
  }
  else
  {
    v33[0] = v19;
    v47 = v18;
    sub_1D4306F6C((uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t))(v41 + 8));
    sub_1D43F9A60();
    v25 = v24;
    v26 = sub_1D42B6F40();
    *(_QWORD *)(v26 + 16) = sub_1D42BE6C4;
    *(_QWORD *)(v26 + 24) = 0;
    *(_OWORD *)(v26 + 32) = xmmword_1D452E700;
    v27 = sub_1D42B6F40();
    *(_QWORD *)(v27 + 16) = 0;
    *(_BYTE *)(v27 + 24) = 0;
    v42 = v25;
    v43 = sub_1D435CFC0;
    v44 = v27;
    v45 = sub_1D435CFA8;
    v46 = v26;
    swift_retain();
    sub_1D42CB9F8();
    sub_1D42E3F8C(qword_1EFE51150);
    sub_1D451A308();
    sub_1D42BE93C();
    sub_1D42FC448();
    sub_1D43070B8();
    sub_1D42E33F8(qword_1EFE4CEE0, (uint64_t *)&unk_1EFE4CEC0);
    sub_1D435CFCC();
    v28 = v33[1];
    sub_1D451A410();
    v29 = sub_1D432117C();
    sub_1D4307058(v29, v30);
    sub_1D43070B8();
    sub_1D42E33F8(qword_1EFE4CEF0, (uint64_t *)&unk_1EFE51140);
    sub_1D43072A8();
    sub_1D4307058(v28, *(uint64_t (**)(uint64_t, uint64_t))(v37 + 8));
    v31 = sub_1D441968C();
    v32(v31, v47);
  }
  sub_1D43CB140();
  sub_1D42BE844();
}

uint64_t sub_1D4412974@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X5>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v7;

  if ((*a1 & 1) != 0)
  {
    result = swift_retain();
  }
  else
  {
    sub_1D42B28FC((uint64_t *)&unk_1EFE4CDC0);
    sub_1D42E33F8(qword_1EFE4CE30, (uint64_t *)&unk_1EFE4CDC0);
    sub_1D451A2E4();
    sub_1D4412A5C();
    a2 = v7;
    result = swift_release();
    if (v3)
      return result;
  }
  *a3 = a2;
  return result;
}

void sub_1D4412A5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  sub_1D42BE910();
  v7 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE4CE18) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v2);
  sub_1D434799C();
  sub_1D42B28FC(&qword_1EFE4CE20);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v3);
  sub_1D42D7108();
  v8 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE4CE28) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D437EC98();
  swift_retain();
  swift_retain();
  sub_1D42CB9F8();
  sub_1D42B28FC((uint64_t *)&unk_1EFE4CE40);
  sub_1D42E3F8C(qword_1EFE51050);
  sub_1D451A2F0();
  sub_1D42BE93C();
  swift_release();
  sub_1D42E33F8(qword_1EFE4CE50, &qword_1EFE4CE18);
  sub_1D4419698();
  sub_1D451A32C();
  sub_1D4307058(v0, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  sub_1D42E33F8(qword_1EFE51060, &qword_1EFE4CE20);
  sub_1D451A3A4();
  v5 = sub_1D44191A4();
  sub_1D42F1FA0(v5, v6);
  sub_1D42E33F8(qword_1EFE4CE60, &qword_1EFE4CE28);
  sub_1D451A2E4();
  sub_1D4307058(v1, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  sub_1D4412CA8();
  sub_1D42BE93C();
  sub_1D42CBA44();
  sub_1D42BE844();
}

void sub_1D4412CA8()
{
  uint64_t v0;
  void (**v1)(uint64_t *@<X8>);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  sub_1D42BE910();
  v62 = v2;
  v63 = v0;
  v4 = v3;
  v6 = v5;
  v41 = v7;
  v48 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v45 = *(_QWORD *)(v48 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v8);
  sub_1D44193E0();
  v9 = sub_1D451A0B0();
  v43 = *(_QWORD *)(v9 - 8);
  v44 = v9;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v10);
  sub_1D42BA180((uint64_t)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v53 = sub_1D42B28FC((uint64_t *)&unk_1EFE51070);
  v50 = *(_QWORD *)(v53 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v12);
  sub_1D44193FC(v13, v41);
  v52 = sub_1D42B28FC((uint64_t *)&unk_1EFE4CE70);
  v49 = *(_QWORD *)(v52 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v14);
  sub_1D4419488(v15, v41);
  v16 = sub_1D42B28FC((uint64_t *)&unk_1EFE51080);
  v54 = *(_QWORD *)(v16 - 8);
  v55 = v16;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v17);
  sub_1D4340A24(v18, v41);
  v19 = sub_1D42B28FC((uint64_t *)&unk_1EFE4CE80);
  v57 = *(_QWORD *)(v19 - 8);
  v58 = v19;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v20);
  sub_1D4419098(v21, v41);
  v22 = sub_1D42B28FC((uint64_t *)&unk_1EFE51090);
  v60 = *(_QWORD *)(v22 - 8);
  v61 = v22;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v23);
  sub_1D4321160(v24, v41);
  v25 = *(_QWORD *)(*(_QWORD *)(v4 + 8) + 8);
  v26 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v27);
  (*(void (**)(uint64_t, uint64_t))(v25 + 16))(v6, v25);
  sub_1D4419834();
  sub_1D4419834();
  v28 = v63;
  sub_1D441224C();
  if (v28)
  {
    sub_1D4419100(*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
  }
  else
  {
    v30 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8);
    v62 = v29;
    sub_1D4419100(v30);
    v31 = *MEMORY[0x1E0C958B0];
    v32 = v43;
    v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 104);
    v63 = 0;
    v34 = v42;
    v33(v42, v31, v44);
    *v1 = sub_1D44131A4;
    v1[1] = 0;
    v35 = v45;
    (*(void (**)(void (**)(uint64_t *@<X8>), _QWORD, uint64_t))(v45 + 104))(v1, *MEMORY[0x1E0C958F0], v48);
    sub_1D42CB9F8();
    sub_1D42E3F8C(qword_1EFE510A0);
    v36 = v47;
    sub_1D451A380();
    sub_1D4307058((uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t))(v35 + 8));
    sub_1D437ED90(v34, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
    sub_1D42E33F8(qword_1EFE4CEA0, (uint64_t *)&unk_1EFE51070);
    sub_1D4307398();
    v37 = v46;
    sub_1D451A3A4();
    sub_1D42EA438();
    sub_1D4307058(v36, *(uint64_t (**)(uint64_t, uint64_t))(v50 + 8));
    v38 = v51;
    sub_1D4419698();
    sub_1D451A110();
    sub_1D4307058(v37, *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8));
    sub_1D42E33F8(qword_1EFE510B0, (uint64_t *)&unk_1EFE51080);
    v39 = v56;
    sub_1D451A410();
    sub_1D4307058(v38, *(uint64_t (**)(uint64_t, uint64_t))(v54 + 8));
    sub_1D42E33F8(qword_1EFE4CEB0, (uint64_t *)&unk_1EFE4CE80);
    v40 = v59;
    sub_1D451A308();
    sub_1D4307058(v39, *(uint64_t (**)(uint64_t, uint64_t))(v57 + 8));
    sub_1D42E33F8(&qword_1EFE510C0, (uint64_t *)&unk_1EFE51090);
    sub_1D43072A8();
    sub_1D42EA438();
    sub_1D4307058(v40, *(uint64_t (**)(uint64_t, uint64_t))(v60 + 8));
  }
  sub_1D42BE844();
}

BOOL sub_1D4413134(_QWORD *a1)
{
  return *a1 == 0;
}

uint64_t sub_1D4413144@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v6;

  v3 = *a1;
  if (v3)
  {
    v4 = a1[1];
    *a2 = v3;
    a2[1] = v4;
    swift_bridgeObjectRetain();
    return sub_1D42CB7B8();
  }
  else
  {
    sub_1D435C6E0();
    sub_1D42B6D0C();
    *v6 = 5;
    return sub_1D4312028();
  }
}

void sub_1D44131A4(uint64_t *a1@<X8>)
{
  sub_1D44131AC(5, a1);
}

void sub_1D44131AC(char a1@<W0>, uint64_t *a2@<X8>)
{
  _BYTE *v4;

  sub_1D435C6E0();
  *a2 = swift_allocError();
  *v4 = a1;
  sub_1D42B6E24();
}

uint64_t sub_1D44131EC@<X0>(uint64_t *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  int v5;

  result = sub_1D440EFE0(*a1);
  if (!v2)
    *a2 = v5;
  return result;
}

float *sub_1D4413220@<X0>(float *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result > 0.5;
  return result;
}

uint64_t sub_1D44132A4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(_QWORD, _QWORD);

  v0[32] = &unk_1E979AC10;
  v0[33] = &off_1E979ABF0;
  sub_1D42B5528(v0 + 29, (uint64_t)&unk_1E979AC10);
  sub_1D4419580();
  swift_storeEnumTagMultiPayload();
  sub_1D44181E0((uint64_t)(v0 + 2));
  v1 = (_QWORD *)sub_1D42E3968();
  v0[38] = v1;
  *v1 = v0;
  v1[1] = sub_1D4413340;
  return v3(v0[35], v0[37]);
}

uint64_t sub_1D4413340()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 312) = v0;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4413398()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 296);
  sub_1D43AF870(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 272), type metadata accessor for AccessibilitySoundRecognition.Session);
  sub_1D4325D80(v1, (uint64_t (*)(_QWORD))type metadata accessor for RemoteRequest);
  sub_1D42B5400(v0 + 232);
  sub_1D42E3E54();
  swift_task_dealloc();
  return sub_1D42E3A2C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4413400()
{
  uint64_t v0;

  sub_1D4325D80(*(_QWORD *)(v0 + 296), (uint64_t (*)(_QWORD))type metadata accessor for RemoteRequest);
  sub_1D42B5400(v0 + 232);
  sub_1D42E3E54();
  swift_task_dealloc();
  return sub_1D42E3A2C(*(uint64_t (**)(void))(v0 + 8));
}

void AccessibilitySoundRecognition.Session.detectionResults.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t);
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;

  sub_1D42CB740();
  v26 = v1;
  v2 = sub_1D441984C();
  v23 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v23 + 64);
  MEMORY[0x1E0C80A78](v2);
  v25 = sub_1D42B28FC(&qword_1EFE50CE8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D437EC98();
  v5 = sub_1D42B28FC((uint64_t *)&unk_1EFE50CF0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x1E0C80A78](v5);
  v24 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v27 = *(_QWORD *)(v0 + *(int *)(v2 + 20));
  v9 = sub_1D42B28FC((uint64_t *)&unk_1EFE4CAF0);
  sub_1D42E33F8(&qword_1EFE50D00, (uint64_t *)&unk_1EFE4CAF0);
  MEMORY[0x1D825BCEC](v9, v10);
  sub_1D43AF844(v0, (uint64_t)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for AccessibilitySoundRecognition.Session);
  v11 = (*(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v12 = swift_allocObject();
  sub_1D43AF870((uint64_t)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, type metadata accessor for AccessibilitySoundRecognition.Session);
  sub_1D42E33F8(&qword_1EFE50D18, &qword_1EFE50CE8);
  sub_1D451B520();
  v13 = (uint64_t)v24;
  v14 = sub_1D4419870();
  sub_1D4340870(v14, v15, v16);
  v17 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v18 = swift_allocObject();
  sub_1D4340870(v18 + v17, v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
  v19 = v26;
  *v26 = sub_1D4415238;
  v19[1] = v18;
  v20 = sub_1D44197B0();
  v21(v20);
  sub_1D42CB520();
}

uint64_t sub_1D4413680(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;

  *(_QWORD *)(v3 + 24) = a1;
  *(_QWORD *)(v3 + 32) = a3;
  v5 = sub_1D4519F90();
  *(_QWORD *)(v3 + 40) = v5;
  *(_QWORD *)(v3 + 48) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 56) = swift_task_alloc();
  *(_QWORD *)(v3 + 64) = swift_task_alloc();
  type metadata accessor for AccessibilitySoundRecognition.Session(0);
  *(_QWORD *)(v3 + 72) = swift_task_alloc();
  *(_BYTE *)(v3 + 84) = *a2;
  return swift_task_switch();
}

uint64_t sub_1D441371C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_signpost_type_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  os_signpost_id_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  if (qword_1EFE472E0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = sub_1D4519FB4();
  sub_1D42CC880(v3, (uint64_t)qword_1EFEA7728);
  sub_1D43AF844(v2, v1, type metadata accessor for AccessibilitySoundRecognition.Session);
  sub_1D4519F84();
  v4 = sub_1D4519F9C();
  v5 = sub_1D451B004();
  if ((sub_1D451B148() & 1) != 0)
  {
    v6 = *(unsigned __int8 *)(v0 + 84);
    (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 48) + 16))(*(_QWORD *)(v0 + 56));
    v7 = sub_1D42CC940();
    v17 = sub_1D42CC940();
    *(_DWORD *)v7 = 67109378;
    *(_DWORD *)(v0 + 80) = v6;
    sub_1D451B1A8();
    *(_WORD *)(v7 + 8) = 2080;
    sub_1D42EA2A8();
    sub_1D43287AC(&qword_1EFE4CB00, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    v8 = sub_1D451B7C0();
    *(_QWORD *)(v0 + 16) = sub_1D43D72EC(v8, v9, &v17);
    sub_1D451B1A8();
    v10 = swift_bridgeObjectRelease();
    sub_1D44195B0(v10, type metadata accessor for AccessibilitySoundRecognition.Session);
    v11 = sub_1D4519F78();
    _os_signpost_emit_with_name_impl(&dword_1D42A7000, v4, v5, v11, "ClientReadResult_AccessibilitySoundRecognition", "{\"active\":%{BOOL}d,\"workloadID\":\"%s\"}", (uint8_t *)v7, 0x12u);
    swift_arrayDestroy();
    sub_1D42CC934();
  }
  v12 = *(_QWORD *)(v0 + 64);
  v13 = *(_QWORD *)(v0 + 40);
  v14 = *(_QWORD *)(v0 + 48);

  sub_1D44195B0(v15, type metadata accessor for AccessibilitySoundRecognition.Session);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  **(_BYTE **)(v0 + 24) = *(_BYTE *)(v0 + 84);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1D42E3E54();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D44139A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10[3];
  uint64_t v11;
  _UNKNOWN **v12;

  sub_1D447DE84();
  v2 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccessibilitySoundRecognition.Session(0) + 20));
  v11 = sub_1D42B28FC((uint64_t *)&unk_1EFE4CAF0);
  v12 = (_UNKNOWN **)sub_1D441817C();
  v10[0] = v2;
  v3 = sub_1D42BE9A0();
  sub_1D43C2470(v3);
  if (!v1)
  {
    sub_1D43C2400(v4);
    v5 = sub_1D42EA2A8();
    v11 = v5;
    v12 = &off_1E9797798;
    v6 = sub_1D430BBF0(v10);
    v7 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v6, v0, v5);
    sub_1D43C2470(v7);
  }
  v8 = sub_1D42B8F48();
  return sub_1D43C2400(v8);
}

uint64_t sub_1D4413A68(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_1D42EA2A8();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = sub_1D42F9B80();
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc();
  v2[7] = v4;
  *v4 = v2;
  v4[1] = sub_1D4413AD8;
  return sub_1D4376978();
}

uint64_t sub_1D4413AD8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v7;
  uint64_t (*v8)(void);

  sub_1D430C4B8();
  v4 = *v3;
  *v5 = v4;
  v2[8] = v0;
  v2[9] = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42F1DEC();
  }
  else
  {
    v7 = (_QWORD *)sub_1D42E3968();
    v2[10] = v7;
    *v7 = v4;
    v7[1] = sub_1D4413B50;
    return sub_1D42E3A2C(v8);
  }
}

uint64_t sub_1D4413B50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1D430C4B8();
  *v4 = *v3;
  *(_QWORD *)(v2 + 88) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 96) = v0;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D4413BA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD);

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(int *)(sub_1D441984C() + 20);
  *(_DWORD *)(v0 + 120) = v3;
  *(_QWORD *)(v2 + v3) = v1;
  v6 = (uint64_t (*)(_QWORD))((char *)&dword_1EFE54158 + dword_1EFE54158);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v4;
  *v4 = v0;
  v4[1] = sub_1D43C0BD4;
  return v6(*(_QWORD *)(v0 + 48));
}

uint64_t sub_1D4413C28()
{
  return sub_1D44139A8();
}

uint64_t sub_1D4413C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D43C0F84;
  return sub_1D4413A68(a1, a2);
}

_QWORD *sub_1D4413C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  _DWORD *v8;

  type metadata accessor for SafeLock();
  v7 = swift_allocObject();
  v8 = (_DWORD *)sub_1D42CC940();
  *v8 = 0;
  *(_QWORD *)(v7 + 16) = v8;
  v3[2] = v7;
  v3[3] = a1;
  v3[4] = a3;
  v3[5] = a2;
  return v3;
}

uint64_t sub_1D4413CFC(uint64_t a1)
{
  _QWORD *v1;
  os_unfair_lock_s *v3;

  v3 = *(os_unfair_lock_s **)(v1[2] + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_1D4413D64(v1, a1);
  os_unfair_lock_unlock(v3);
  return swift_release();
}

uint64_t sub_1D4413D64(_QWORD *a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v4 = a1 + 4;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1D44B4C60();
  swift_endAccess();
  v6 = a1[3];
  result = a1[4];
  v7 = *(_QWORD *)(result + 16);
  if (v6 >= v7)
    goto LABEL_6;
  v8 = v7 - v6;
  if (__OFSUB__(v7, v6))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v7 < v8)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((v8 & 0x8000000000000000) == 0)
  {
    v9 = result + 32;
    v10 = (2 * v7) | 1;
    v11 = swift_bridgeObjectRetain();
    *v4 = sub_1D44AF544(v11, v9, v8, v10);
    result = swift_bridgeObjectRelease();
LABEL_6:
    v12 = *(_QWORD *)(a2 + 16);
    v13 = a1[5];
    v14 = __OFADD__(v13, v12);
    v15 = v13 + v12;
    if (!v14)
    {
      a1[5] = v15;
      return result;
    }
    __break(1u);
    goto LABEL_9;
  }
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D4413E48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v6;
  unint64_t v7;

  v3 = v2;
  v6 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  v7 = sub_1D4413EE8(v3, a1, a2);
  os_unfair_lock_unlock(v6);
  swift_release();
  return v7;
}

unint64_t sub_1D4413EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a1 + 40);
  swift_beginAccess();
  result = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(result + 16);
  v9 = a2 - (v6 - v8);
  v10 = a3 + a2 - (v6 - v8);
  if (v9 <= 0)
  {
    v11 = 0;
    v12 = 0;
    if (v10 <= 0)
      goto LABEL_11;
  }
  else
  {
    if (v8 >= v9)
      v11 = a2 - (v6 - v8);
    else
      v11 = *(_QWORD *)(result + 16);
    if (v10 < 1)
    {
      v12 = 0;
      goto LABEL_11;
    }
  }
  if (v8 >= v10)
    v12 = a3 + a2 - (v6 - v8);
  else
    v12 = *(_QWORD *)(result + 16);
LABEL_11:
  v13 = v11 - v9;
  if (__OFSUB__(v11, v9))
  {
    __break(1u);
    goto LABEL_16;
  }
  if (__OFSUB__(v10, v12))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v12 >= v11)
  {
    v14 = result + 32;
    v15 = (2 * v12) | 1;
    v16 = swift_bridgeObjectRetain();
    sub_1D44AF544(v16, v14, v11, v15);
    return v13;
  }
LABEL_17:
  __break(1u);
  return result;
}

_QWORD *sub_1D4413FE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;
  BOOL v5;
  uint64_t v6;

  v1 = sub_1D441405C();
  v3 = *(_QWORD *)(v2 + 16);
  swift_retain();
  result = (_QWORD *)swift_bridgeObjectRelease();
  v5 = __OFSUB__(v1, v3);
  v6 = v1 - v3;
  if (v5)
  {
    __break(1u);
  }
  else
  {
    sub_1D42B28FC(&qword_1EFE510F8);
    swift_allocObject();
    return sub_1D4414150(v0, v6);
  }
  return result;
}

uint64_t sub_1D441405C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v1);
  v2 = *(_QWORD *)(v0 + 40);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v1);
  swift_release();
  return v2;
}

uint64_t sub_1D44140D8()
{
  uint64_t v0;
  os_unfair_lock_s *v1;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v1);
  swift_beginAccess();
  *(_QWORD *)(v0 + 32) = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v1);
  return swift_release();
}

_QWORD *sub_1D4414150(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _DWORD *v4;

  v2[3] = a1;
  v2[4] = a2;
  type metadata accessor for SafeLock();
  v3 = swift_allocObject();
  v4 = (_DWORD *)swift_slowAlloc();
  *v4 = 0;
  *(_QWORD *)(v3 + 16) = v4;
  v2[2] = v3;
  return v2;
}

unint64_t sub_1D44141A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v4;
  unint64_t v5;

  v2 = v1;
  v4 = *(os_unfair_lock_s **)(*(_QWORD *)(v1 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  v5 = sub_1D4413E48(*(_QWORD *)(v1 + 32), a1);
  *(_QWORD *)(v2 + 32) += a1;
  os_unfair_lock_unlock(v4);
  swift_release();
  return v5;
}

uint64_t sub_1D4414234()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v1);
  v2 = *(_QWORD *)(v0 + 32);
  os_unfair_lock_unlock(v1);
  swift_release();
  return v2;
}

uint64_t sub_1D4414284()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t result;

  v0 = sub_1D441405C();
  swift_bridgeObjectRelease();
  v1 = sub_1D4414234();
  v2 = __OFSUB__(v0, v1);
  result = v0 - v1;
  if (v2)
    __break(1u);
  return result;
}

uint64_t sub_1D44142D0(uint64_t a1, uint64_t a2)
{
  uint64_t inited;

  sub_1D42B28FC(&qword_1EFE51188);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D45261D0;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D4413CFC(inited);
  swift_setDeallocating();
  return sub_1D4347790();
}

uint64_t sub_1D4414354()
{
  return sub_1D44140D8();
}

uint64_t sub_1D4414374@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;

  v42 = a1;
  v2 = sub_1D42B28FC(&qword_1EFE51100);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D4414284();
  v7 = sub_1D44141A0(v6);
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    sub_1D442FA64();
    v30 = v37;
    v29 = *(_QWORD *)(v37 + 24) >> 1;
    goto LABEL_26;
  }
  v10 = v7;
  v1 = v8;
  v11 = v9;
  v40 = v3;
  v41 = v2;
  v12 = MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v44 = MEMORY[0x1E0DEE9D8];
    sub_1D42C74E8();
    v3 = v44;
    v13 = *(_QWORD *)(v44 + 16);
    v14 = 16 * v13 + 32;
    do
    {
      v44 = v3;
      v15 = v13 + 1;
      if (v13 >= *(_QWORD *)(v3 + 24) >> 1)
      {
        sub_1D42C74E8();
        v3 = v44;
      }
      *(_QWORD *)(v3 + 16) = v15;
      v16 = (_QWORD *)(v3 + v14);
      *v16 = 0;
      v16[1] = 0;
      v14 += 16;
      v13 = v15;
      --v10;
    }
    while (v10);
  }
  else
  {
    v3 = MEMORY[0x1E0DEE9D8];
  }
  v17 = *(_QWORD *)(v1 + 16);
  if (v17)
  {
    v44 = v12;
    sub_1D42C74E8();
    v18 = 0;
    v19 = v44;
    do
    {
      v43 = *(_OWORD *)(v1 + 16 * v18 + 32);
      v44 = v19;
      v20 = *(_QWORD *)(v19 + 16);
      v21 = *(_QWORD *)(v19 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v20 >= v21 >> 1)
      {
        sub_1D42C74E8();
        v19 = v44;
      }
      ++v18;
      *(_QWORD *)(v19 + 16) = v20 + 1;
      *(_OWORD *)(v19 + 16 * v20 + 32) = v43;
    }
    while (v17 != v18);
  }
  swift_bridgeObjectRelease();
  v44 = v3;
  sub_1D44B4CF4();
  if (v11 < 0)
    goto LABEL_30;
  v22 = v44;
  if (v11)
  {
    v44 = MEMORY[0x1E0DEE9D8];
    sub_1D42C74E8();
    v23 = v44;
    v24 = *(_QWORD *)(v44 + 16);
    v25 = 16 * v24 + 32;
    do
    {
      v44 = v23;
      v1 = v24 + 1;
      if (v24 >= *(_QWORD *)(v23 + 24) >> 1)
      {
        sub_1D42C74E8();
        v23 = v44;
      }
      *(_QWORD *)(v23 + 16) = v1;
      v26 = (_QWORD *)(v23 + v25);
      *v26 = 0;
      v26[1] = 0;
      v25 += 16;
      v24 = v1;
      --v11;
    }
    while (v11);
  }
  v44 = v22;
  sub_1D44B4CF4();
  v27 = v44;
  v28 = *(_QWORD *)(v44 + 16);
  v3 = v28 + 2;
  if (__OFADD__(v28, 2))
    goto LABEL_31;
  swift_bridgeObjectRetain();
  if (swift_isUniquelyReferenced_nonNull_native()
    && (v29 = *(_QWORD *)(v27 + 24) >> 1, v29 >= (uint64_t)v3))
  {
    v30 = v27;
  }
  else
  {
    sub_1D442FA64();
    v30 = v31;
    v29 = *(_QWORD *)(v31 + 24) >> 1;
  }
  v3 = *(_QWORD *)(v30 + 16);
  v1 = v3 + 1;
  if (v29 <= v3)
    goto LABEL_32;
LABEL_26:
  *(_QWORD *)(v30 + 16) = v1;
  v32 = xmmword_1D4537840;
  *(_OWORD *)(v30 + 16 * v3 + 32) = xmmword_1D4537840;
  v33 = v3 + 2;
  if (v29 < (uint64_t)(v3 + 2))
  {
    v43 = xmmword_1D4537840;
    sub_1D442FA64();
    v32 = v43;
    v30 = v38;
  }
  v35 = v40;
  v34 = v41;
  *(_QWORD *)(v30 + 16) = v33;
  *(_OWORD *)(v30 + 16 * v1 + 32) = v32;
  swift_bridgeObjectRelease();
  v44 = v30;
  sub_1D42B28FC(&qword_1EFE51108);
  sub_1D42E33F8(&qword_1EFE51110, &qword_1EFE51108);
  sub_1D451A830();
  swift_bridgeObjectRelease();
  sub_1D42B28FC(&qword_1EFE49BB0);
  sub_1D451A140();
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v5, v34);
}

_QWORD *sub_1D4414784()
{
  return sub_1D4413FE4();
}

uint64_t sub_1D44147A4(uint64_t a1)
{
  sub_1D4417F50(a1);
  return a1;
}

unint64_t sub_1D44147D0()
{
  unint64_t result;

  result = qword_1EFE50AE0;
  if (!qword_1EFE50AE0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453BF10, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50AE0);
  }
  return result;
}

unint64_t sub_1D441480C()
{
  unint64_t result;

  result = qword_1EFE50AE8;
  if (!qword_1EFE50AE8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453BEC0, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.WaterRunningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50AE8);
  }
  return result;
}

unint64_t sub_1D4414848()
{
  unint64_t result;

  result = qword_1EFE50AF0;
  if (!qword_1EFE50AF0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453BE70, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.SirenAlarmCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50AF0);
  }
  return result;
}

unint64_t sub_1D4414884()
{
  unint64_t result;

  result = qword_1EFE50AF8;
  if (!qword_1EFE50AF8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453BE20, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.ShoutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50AF8);
  }
  return result;
}

unint64_t sub_1D44148C0()
{
  unint64_t result;

  result = qword_1EFE50B00;
  if (!qword_1EFE50B00)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453BDD0, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.KettleWhistlingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50B00);
  }
  return result;
}

unint64_t sub_1D44148FC()
{
  unint64_t result;

  result = qword_1EFE50B08;
  if (!qword_1EFE50B08)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453BD80, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.GlassBreakingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50B08);
  }
  return result;
}

unint64_t sub_1D4414938()
{
  unint64_t result;

  result = qword_1EFE50B10;
  if (!qword_1EFE50B10)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453BD30, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.FireAlarmCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50B10);
  }
  return result;
}

unint64_t sub_1D4414974()
{
  unint64_t result;

  result = qword_1EFE50B18;
  if (!qword_1EFE50B18)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453BCE0, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DoorKnockCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50B18);
  }
  return result;
}

unint64_t sub_1D44149B0()
{
  unint64_t result;

  result = qword_1EFE50B20;
  if (!qword_1EFE50B20)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453BC90, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DoorBellCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50B20);
  }
  return result;
}

unint64_t sub_1D44149EC()
{
  unint64_t result;

  result = qword_1EFE50B28;
  if (!qword_1EFE50B28)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453BC40, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DogBarkCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50B28);
  }
  return result;
}

unint64_t sub_1D4414A28()
{
  unint64_t result;

  result = qword_1EFE50B30;
  if (!qword_1EFE50B30)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453BBF0, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DingBellCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50B30);
  }
  return result;
}

unint64_t sub_1D4414A64()
{
  unint64_t result;

  result = qword_1EFE50B38;
  if (!qword_1EFE50B38)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453BBA0, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CoughCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50B38);
  }
  return result;
}

unint64_t sub_1D4414AA0()
{
  unint64_t result;

  result = qword_1EFE50B40;
  if (!qword_1EFE50B40)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453BB50, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CatMeowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50B40);
  }
  return result;
}

unint64_t sub_1D4414ADC()
{
  unint64_t result;

  result = qword_1EFE50B48;
  if (!qword_1EFE50B48)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453BB00, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CarHornCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50B48);
  }
  return result;
}

unint64_t sub_1D4414B18()
{
  unint64_t result;

  result = qword_1EFE50B50;
  if (!qword_1EFE50B50)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453BAB0, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.BuzzerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50B50);
  }
  return result;
}

unint64_t sub_1D4414B54()
{
  unint64_t result;

  result = qword_1EFE50B58;
  if (!qword_1EFE50B58)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453BA60, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.BeepCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50B58);
  }
  return result;
}

unint64_t sub_1D4414B90()
{
  unint64_t result;

  result = qword_1EFE50B60;
  if (!qword_1EFE50B60)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453BA10, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DistressedBabyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50B60);
  }
  return result;
}

unint64_t sub_1D4414BCC()
{
  unint64_t result;

  result = qword_1EFE50B68;
  if (!qword_1EFE50B68)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B9C0, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.SmokeAlarmCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50B68);
  }
  return result;
}

uint64_t sub_1D4414C08(char a1, uint64_t *a2, uint64_t (*a3)(char *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v9;
  uint64_t v10;
  int v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  int v15;
  char v16;

  v9 = a1 & 1;
  v16 = a1 & 1;
  v10 = *a2;
  v11 = *((unsigned __int8 *)a2 + 8);
  result = a3(&v16);
  if (v11 == (result & 1))
  {
    *a2 = 0;
    goto LABEL_11;
  }
  v13 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v11)
      v14 = a5;
    else
      v14 = a6;
    if (v14 < v13)
    {
      *a2 = 0;
      *((_BYTE *)a2 + 8) = v11 ^ 1;
      if ((v11 & 1) == 0)
      {
LABEL_8:
        v15 = 0;
        return v15 | v9;
      }
LABEL_12:
      v15 = 256;
      return v15 | v9;
    }
    *a2 = v13;
LABEL_11:
    *((_BYTE *)a2 + 8) = v11;
    if ((v11 & 1) != 0)
      goto LABEL_8;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D4414CC4(unsigned int a1)
{
  return (a1 >> 8) & 1;
}

uint64_t type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier(uint64_t a1)
{
  return sub_1D42BFA18(a1, (uint64_t *)&unk_1EFE50D58);
}

unint64_t sub_1D4414CE0()
{
  unint64_t result;

  result = qword_1EFE50C20;
  if (!qword_1EFE50C20)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B970, &type metadata for AccessibilitySoundRecognition.DetectorIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50C20);
  }
  return result;
}

unint64_t sub_1D4414D1C()
{
  unint64_t result;

  result = qword_1EFE50C28;
  if (!qword_1EFE50C28)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B920, &type metadata for AccessibilitySoundRecognition.DetectorIdentifier.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50C28);
  }
  return result;
}

unint64_t sub_1D4414D58()
{
  unint64_t result;

  result = qword_1EFE50C38;
  if (!qword_1EFE50C38)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B8D0, &type metadata for AccessibilitySoundRecognition.DetectorIdentifier.BuiltInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50C38);
  }
  return result;
}

unint64_t sub_1D4414D94()
{
  unint64_t result;

  result = qword_1EFE50C40;
  if (!qword_1EFE50C40)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EFE50C40);
  }
  return result;
}

unint64_t sub_1D4414DD0()
{
  unint64_t result;

  result = qword_1EFE50C68;
  if (!qword_1EFE50C68)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EFE50C68);
  }
  return result;
}

unint64_t sub_1D4414E0C()
{
  unint64_t result;

  result = qword_1EFE50C88;
  if (!qword_1EFE50C88)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B880, &type metadata for AccessibilitySoundRecognition.Detection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50C88);
  }
  return result;
}

unint64_t sub_1D4414E48()
{
  unint64_t result;

  result = qword_1EFE50C90;
  if (!qword_1EFE50C90)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B830, &type metadata for AccessibilitySoundRecognition.Detection.ActiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50C90);
  }
  return result;
}

unint64_t sub_1D4414E84()
{
  unint64_t result;

  result = qword_1EFE50C98;
  if (!qword_1EFE50C98)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B7E0, &type metadata for AccessibilitySoundRecognition.Detection.InactiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50C98);
  }
  return result;
}

uint64_t sub_1D4414EC0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D4415030(uint64_t result)
{
  *(_BYTE *)(result + 208) = 0;
  return result;
}

uint64_t sub_1D4415038(uint64_t result)
{
  *(_BYTE *)(result + 208) = 1;
  return result;
}

unint64_t sub_1D4415044()
{
  unint64_t result;

  result = qword_1EFE50CC0;
  if (!qword_1EFE50CC0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B790, &type metadata for AccessibilitySoundRecognition.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50CC0);
  }
  return result;
}

unint64_t sub_1D4415080()
{
  unint64_t result;

  result = qword_1EFE50CC8;
  if (!qword_1EFE50CC8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B768, &unk_1E9797F88);
    atomic_store(result, (unint64_t *)&qword_1EFE50CC8);
  }
  return result;
}

unint64_t sub_1D44150BC()
{
  unint64_t result;

  result = qword_1EFE50CD8;
  if (!qword_1EFE50CD8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B740, &unk_1E9797F88);
    atomic_store(result, (unint64_t *)&qword_1EFE50CD8);
  }
  return result;
}

uint64_t type metadata accessor for AccessibilitySoundRecognition.Session(uint64_t a1)
{
  return sub_1D42BFA18(a1, (uint64_t *)&unk_1EFE50D68);
}

uint64_t sub_1D441510C()
{
  uint64_t v0;
  void (*v1)(uint64_t);

  sub_1D441984C();
  sub_1D43C247C();
  sub_1D42EA2A8();
  v0 = sub_1D44191A4();
  v1(v0);
  swift_release();
  return sub_1D43C2314();
}

uint64_t sub_1D4415170(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  type metadata accessor for AccessibilitySoundRecognition.Session(0);
  sub_1D43AFBD4();
  v7 = v2 + v6;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_1D43C0F84;
  return sub_1D4413680(a1, a2, v7);
}

uint64_t sub_1D44151E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D42B28FC((uint64_t *)&unk_1EFE50CF0);
  sub_1D43C247C();
  (*(void (**)(uint64_t))(v2 + 8))(v0 + v1);
  sub_1D437EC8C();
  return swift_deallocObject();
}

void sub_1D4415238(_QWORD *a1@<X8>)
{
  sub_1D42B28FC((uint64_t *)&unk_1EFE50CF0);
  sub_1D43AFBD4();
  sub_1D43C1D3C(a1);
}

void sub_1D441526C()
{
  sub_1D42E33F8(&qword_1EFE50D20, &qword_1EFE50D28);
}

unint64_t sub_1D441529C()
{
  unint64_t result;

  result = qword_1EFE50D30;
  if (!qword_1EFE50D30)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EFE50D30);
  }
  return result;
}

void sub_1D44152D8()
{
  sub_1D43287AC(&qword_1EFE50D38, (void (*)(uint64_t))type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier);
}

unint64_t sub_1D4415308()
{
  unint64_t result;

  result = qword_1EFE50D40;
  if (!qword_1EFE50D40)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for AccessibilitySoundRecognition.Detection, &type metadata for AccessibilitySoundRecognition.Detection);
    atomic_store(result, (unint64_t *)&qword_1EFE50D40);
  }
  return result;
}

unint64_t sub_1D4415348()
{
  unint64_t result;

  result = qword_1EFE50D48;
  if (!qword_1EFE50D48)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for AccessibilitySoundRecognition.Request, &type metadata for AccessibilitySoundRecognition.Request);
    atomic_store(result, (unint64_t *)&qword_1EFE50D48);
  }
  return result;
}

unint64_t sub_1D4415384(uint64_t a1)
{
  unint64_t result;

  result = sub_1D43AAA34();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1D44153A8(uint64_t a1)
{
  unint64_t result;

  result = sub_1D43AA9F8();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

void type metadata accessor for AccessibilitySoundRecognition()
{
  sub_1D42CB35C();
}

void type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier()
{
  sub_1D42CB35C();
}

uint64_t *initializeBufferWithCopyOfBuffer for AccessibilitySoundRecognition.DetectorIdentifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_1D4519D20();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for AccessibilitySoundRecognition.DetectorIdentifier(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = sub_1D4519D20();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *initializeWithCopy for AccessibilitySoundRecognition.DetectorIdentifier(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1D4519D20();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithCopy for AccessibilitySoundRecognition.DetectorIdentifier(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1D4325D80((uint64_t)a1, type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1D4519D20();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *initializeWithTake for AccessibilitySoundRecognition.DetectorIdentifier(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1D4519D20();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for AccessibilitySoundRecognition.DetectorIdentifier(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1D4325D80((uint64_t)a1, type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1D4519D20();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1D441574C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D4519D20();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void type metadata accessor for AccessibilitySoundRecognition.Detection()
{
  sub_1D42CB35C();
}

void *initializeWithTake for AccessibilitySoundRecognition.Request(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xD1uLL);
}

void type metadata accessor for AccessibilitySoundRecognition.Request()
{
  sub_1D42CB35C();
}

uint64_t getEnumTagSinglePayload for AccessibilitySoundRecognition.Session()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1D4415804(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D42EA2A8();
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, a2, v4);
  else
    sub_1D42CB15C();
}

uint64_t storeEnumTagSinglePayload for AccessibilitySoundRecognition.Session()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D441587C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_1D42EA2A8();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for AccessibilitySoundRecognition.CustomModel()
{
  return objc_opt_self();
}

uint64_t sub_1D441590C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1D44159DC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  v13 = a2[21];
  a1[20] = a2[20];
  a1[21] = v13;
  v14 = a2[23];
  a1[22] = a2[22];
  a1[23] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1D4415B6C(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[21] = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[23] = a2[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1D4415DC8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC0uLL);
}

uint64_t sub_1D4415DD0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D4415F14(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 192))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D4415F54(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 192) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 192) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AccessibilitySoundRecognition.CustomModelTensors()
{
  sub_1D42CB35C();
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.Request.CodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.Request.CodingKeys;
}

uint64_t _s13SoundAnalysis29AccessibilitySoundRecognitionV7RequestVwxx_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v28 = *(_BYTE *)(a1 + 208);
  v26 = *(_QWORD *)(a1 + 192);
  v27 = *(_QWORD *)(a1 + 200);
  sub_1D4419624();
  return sub_1D434A018(v8, v1, v2, v3, v4, v5, v6, v7, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20,
           v21,
           v22,
           v23,
           v24,
           v25,
           v26,
           v27,
           v28);
}

void _s13SoundAnalysis29AccessibilitySoundRecognitionV7RequestVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;

  v3 = sub_1D4419024(a1, a2);
  v5 = *(_QWORD *)(v4 + 144);
  v6 = *(_QWORD *)(v4 + 152);
  v7 = *(_QWORD *)(v4 + 160);
  v8 = *(_QWORD *)(v4 + 168);
  v9 = *(_QWORD *)(v4 + 176);
  v10 = *(_QWORD *)(v4 + 184);
  v11 = *(_QWORD *)(v4 + 192);
  v12 = *(_QWORD *)(v4 + 200);
  v92 = *(_BYTE *)(v4 + 208);
  v22 = sub_1D4418F70(v3, v13, v14, v15, v16, v17, v18, v19, v39, v42, v45, v48, v51, v54, v20, v21, *(_QWORD *)(v4 + 128), *(_QWORD *)(v4 + 136), v5,
          v6,
          v7,
          v8,
          v9,
          v10,
          v11,
          v12,
          v92);
  *(_QWORD *)v2 = v5;
  *(_QWORD *)(v2 + 8) = v6;
  *(_QWORD *)(v2 + 16) = v7;
  *(_QWORD *)(v2 + 24) = v8;
  *(_QWORD *)(v2 + 32) = v9;
  *(_QWORD *)(v2 + 40) = v10;
  *(_QWORD *)(v2 + 48) = v11;
  *(_QWORD *)(v2 + 56) = v12;
  sub_1D4419600(v22, v23, v24, v25, v26, v27, v28, v29, v40, v43, v46, v49, v52, v55, v57, v59, v61, v63, v65,
    v67,
    v69,
    v71,
    v73,
    v75,
    v77,
    v79,
    v81,
    v83,
    v85,
    v87);
  sub_1D44193C4(v30, v31, v32, v33, v34, v35, v36, v37, v41, v44, v47, v50, v53, v56, v58, v60, v62, v64, v66,
    v68,
    v70,
    v72,
    v74,
    v76,
    v78,
    v80,
    v82,
    v84,
    v86,
    v88,
    v89,
    v90,
    v91);
  sub_1D44193A8();
  sub_1D4419854();
  *(_QWORD *)(v2 + 176) = v38;
  *(_QWORD *)(v2 + 184) = v10;
  *(_QWORD *)(v2 + 192) = v11;
  *(_QWORD *)(v2 + 200) = v12;
  *(_BYTE *)(v2 + 208) = v92;
  sub_1D4419210();
}

void _s13SoundAnalysis29AccessibilitySoundRecognitionV7RequestVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  __n128 v51;
  __n128 v52;
  __n128 v53;
  __n128 v54;
  __n128 v55;
  __n128 v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127;

  v3 = sub_1D4419024(a1, a2);
  v5 = *(_QWORD *)(v4 + 144);
  v6 = *(_QWORD *)(v4 + 152);
  v7 = *(_QWORD *)(v4 + 160);
  v8 = *(_QWORD *)(v4 + 168);
  v9 = *(_QWORD *)(v4 + 176);
  v10 = *(_QWORD *)(v4 + 184);
  v11 = *(_QWORD *)(v4 + 192);
  v12 = *(_QWORD *)(v4 + 200);
  v127 = *(_BYTE *)(v4 + 208);
  sub_1D4418F70(v3, v13, v14, v15, v16, v17, v18, v19, v58, v62, v66, v70, v74, v78, v20, v21, *(_QWORD *)(v4 + 128), *(_QWORD *)(v4 + 136), v5,
    v6,
    v7,
    v8,
    v9,
    v10,
    v11,
    v12,
    v127);
  v22 = *(_QWORD *)v2;
  v23 = *(_QWORD *)(v2 + 8);
  *(_QWORD *)v2 = v5;
  *(_QWORD *)(v2 + 8) = v6;
  v24 = *(_QWORD *)(v2 + 16);
  v25 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v2 + 16) = v7;
  *(_QWORD *)(v2 + 24) = v8;
  v26 = *(_QWORD *)(v2 + 32);
  v27 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v2 + 32) = v9;
  *(_QWORD *)(v2 + 40) = v10;
  v28 = *(_QWORD *)(v2 + 48);
  v29 = *(_QWORD *)(v2 + 56);
  *(_QWORD *)(v2 + 48) = v11;
  *(_QWORD *)(v2 + 56) = v12;
  sub_1D4419600(v22, v23, v24, v25, v26, v27, v28, v29, v59, v63, v67, v71, v75, v79, v82, v85, v88, v91, v94,
    v97,
    v100,
    v103,
    v106,
    v109,
    v112,
    v114,
    v116,
    v118,
    v120,
    v122);
  sub_1D44193C4(v30, v31, v32, v33, v34, v35, v36, v37, v60, v64, v68, v72, v76, v80, v83, v86, v89, v92, v95,
    v98,
    v101,
    v104,
    v107,
    v110,
    v113,
    v115,
    v117,
    v119,
    v121,
    v123,
    v124,
    v125,
    v126);
  sub_1D44193A8();
  sub_1D4419854();
  *(_QWORD *)(v2 + 176) = v38;
  *(_QWORD *)(v2 + 184) = v10;
  v39 = *(_QWORD *)(v2 + 192);
  v40 = *(_QWORD *)(v2 + 200);
  *(_QWORD *)(v2 + 192) = v11;
  *(_QWORD *)(v2 + 200) = v12;
  v41 = *(_BYTE *)(v2 + 208);
  *(_BYTE *)(v2 + 208) = v127;
  sub_1D44190D0(v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v61, v65, v69,
    v73,
    v77,
    v81,
    v84,
    v87,
    v90,
    v93,
    v96,
    v99,
    v102,
    v105,
    v108,
    v111,
    v39,
    v40,
    v41);
  sub_1D4419210();
}

void _s13SoundAnalysis29AccessibilitySoundRecognitionV7RequestVwta_0(uint64_t a1)
{
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = sub_1D4419164();
  v3 = *(_QWORD *)(a1 + 192);
  v4 = *(_QWORD *)(a1 + 200);
  v5 = *(_BYTE *)(a1 + 208);
  v7 = v6[1];
  *(_OWORD *)a1 = *v6;
  *(_OWORD *)(a1 + 16) = v7;
  v8 = v6[3];
  *(_OWORD *)(a1 + 32) = v6[2];
  *(_OWORD *)(a1 + 48) = v8;
  v9 = v6[5];
  *(_OWORD *)(a1 + 64) = v6[4];
  *(_OWORD *)(a1 + 80) = v9;
  v10 = v6[7];
  *(_OWORD *)(a1 + 96) = v6[6];
  *(_OWORD *)(a1 + 112) = v10;
  v11 = v6[9];
  *(_OWORD *)(a1 + 128) = v6[8];
  *(_OWORD *)(a1 + 144) = v11;
  v12 = v6[11];
  *(_OWORD *)(a1 + 160) = v6[10];
  *(_OWORD *)(a1 + 176) = v12;
  *(_OWORD *)(a1 + 192) = v6[12];
  *(_BYTE *)(a1 + 208) = v13;
  sub_1D44190D0(v14, v15, v16, v17, v18, v19, v20, v21, v2, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v3,
    v4,
    v5);
  sub_1D44197F0();
}

uint64_t _s13SoundAnalysis29AccessibilitySoundRecognitionV7RequestVwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return sub_1D42CB898(-1);
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 209))
    return sub_1D42CB898(*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 208);
  if (v3 > 1)
    return sub_1D42CB898(v3 ^ 0xFF);
  else
    return sub_1D42CB898(-1);
}

uint64_t _s13SoundAnalysis29AccessibilitySoundRecognitionV7RequestVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 208) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 209) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 209) = 0;
    if (a2)
      *(_BYTE *)(result + 208) = -(char)a2;
  }
  return result;
}

uint64_t sub_1D4416320(uint64_t result, char a2)
{
  *(_BYTE *)(result + 208) = a2 & 1;
  return result;
}

void type metadata accessor for AccessibilitySoundRecognition.DetectorSpecification()
{
  sub_1D42CB35C();
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.Detection.CodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.Detection.CodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.Detection.InactiveCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.Detection.InactiveCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.Detection.ActiveCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.Detection.ActiveCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier.CodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.DetectorIdentifier.CodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier.BuiltInCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.DetectorIdentifier.BuiltInCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier.CustomCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.DetectorIdentifier.CustomCodingKeys;
}

uint64_t _s13SoundAnalysis29AccessibilitySoundRecognitionV25BuiltInDetectorIdentifierOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_1D42CB898(-1);
  if (a2 < 0xF0)
    goto LABEL_17;
  if (a2 + 16 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 16) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_1D42CB898((*a1 | (v4 << 8)) - 17);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_1D42CB898((*a1 | (v4 << 8)) - 17);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_1D42CB898((*a1 | (v4 << 8)) - 17);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x11;
  v8 = v6 - 17;
  if (!v7)
    v8 = -1;
  return sub_1D42CB898(v8);
}

uint64_t _s13SoundAnalysis29AccessibilitySoundRecognitionV25BuiltInDetectorIdentifierOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 16 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 16) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEF)
    return ((uint64_t (*)(void))((char *)&loc_1D4416468 + 4 * byte_1D453A2B4[v4]))();
  *a1 = a2 + 16;
  return ((uint64_t (*)(void))((char *)sub_1D441649C + 4 * byte_1D453A2AF[v4]))();
}

uint64_t sub_1D441649C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D44164A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D44164ACLL);
  return result;
}

uint64_t sub_1D44164B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D44164C0);
  *(_BYTE *)result = a2 + 16;
  return result;
}

uint64_t sub_1D44164C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D44164CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.SmokeAlarmCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.SmokeAlarmCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DistressedBabyCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DistressedBabyCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.BeepCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.BeepCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.BuzzerCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.BuzzerCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CarHornCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CarHornCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CatMeowCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CatMeowCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CoughCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CoughCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DingBellCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DingBellCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DogBarkCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DogBarkCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DoorBellCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DoorBellCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DoorKnockCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DoorKnockCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.FireAlarmCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.FireAlarmCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.GlassBreakingCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.GlassBreakingCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.KettleWhistlingCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.KettleWhistlingCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.ShoutCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.ShoutCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.SirenAlarmCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.SirenAlarmCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.WaterRunningCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.WaterRunningCodingKeys;
}

unint64_t sub_1D44165FC()
{
  unint64_t result;

  result = qword_1EFE50D78;
  if (!qword_1EFE50D78)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B0C8, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50D78);
  }
  return result;
}

unint64_t sub_1D441663C()
{
  unint64_t result;

  result = qword_1EFE50D80;
  if (!qword_1EFE50D80)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B180, &type metadata for AccessibilitySoundRecognition.DetectorIdentifier.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50D80);
  }
  return result;
}

unint64_t sub_1D441667C()
{
  unint64_t result;

  result = qword_1EFE50D88;
  if (!qword_1EFE50D88)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B238, &type metadata for AccessibilitySoundRecognition.DetectorIdentifier.BuiltInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50D88);
  }
  return result;
}

unint64_t sub_1D44166BC()
{
  unint64_t result;

  result = qword_1EFE50D90;
  if (!qword_1EFE50D90)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B2F0, &type metadata for AccessibilitySoundRecognition.DetectorIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50D90);
  }
  return result;
}

unint64_t sub_1D44166FC()
{
  unint64_t result;

  result = qword_1EFE50D98;
  if (!qword_1EFE50D98)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B448, &type metadata for AccessibilitySoundRecognition.Detection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50D98);
  }
  return result;
}

unint64_t sub_1D441673C()
{
  unint64_t result;

  result = qword_1EFE50DA0;
  if (!qword_1EFE50DA0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B470, &unk_1E9797F88);
    atomic_store(result, (unint64_t *)&qword_1EFE50DA0);
  }
  return result;
}

unint64_t sub_1D441677C()
{
  unint64_t result;

  result = qword_1EFE50DA8;
  if (!qword_1EFE50DA8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B568, &type metadata for AccessibilitySoundRecognition.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50DA8);
  }
  return result;
}

unint64_t sub_1D44167B8(uint64_t a1)
{
  unint64_t result;

  result = sub_1D43AA8A4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1D44167DC(uint64_t a1)
{
  unint64_t result;

  result = sub_1D43AA798();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1D4416804()
{
  unint64_t result;

  result = qword_1EFE50DB0;
  if (!qword_1EFE50DB0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B640, &unk_1E9797B88);
    atomic_store(result, (unint64_t *)&qword_1EFE50DB0);
  }
  return result;
}

uint64_t sub_1D4416840(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1D825E41C](&unk_1D4539570);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_1D441686C()
{
  return &off_1E97A6960;
}

uint64_t sub_1D4416878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(_QWORD *)(a3 - 8);
}

uint64_t sub_1D4416880(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1D825E41C](&unk_1D45395C8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1D44168B0()
{
  unint64_t result;

  result = qword_1EFE50DB8;
  if (!qword_1EFE50DB8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B4D8, &type metadata for AccessibilitySoundRecognition.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50DB8);
  }
  return result;
}

unint64_t sub_1D44168F0()
{
  unint64_t result;

  result = qword_1EFE50DC0;
  if (!qword_1EFE50DC0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B500, &type metadata for AccessibilitySoundRecognition.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50DC0);
  }
  return result;
}

unint64_t sub_1D4416930()
{
  unint64_t result;

  result = qword_1EFE50DC8;
  if (!qword_1EFE50DC8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B368, &type metadata for AccessibilitySoundRecognition.Detection.InactiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50DC8);
  }
  return result;
}

unint64_t sub_1D4416970()
{
  unint64_t result;

  result = qword_1EFE50DD0;
  if (!qword_1EFE50DD0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B390, &type metadata for AccessibilitySoundRecognition.Detection.InactiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50DD0);
  }
  return result;
}

unint64_t sub_1D44169B0()
{
  unint64_t result;

  result = qword_1EFE50DD8;
  if (!qword_1EFE50DD8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B318, &type metadata for AccessibilitySoundRecognition.Detection.ActiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50DD8);
  }
  return result;
}

unint64_t sub_1D44169F0()
{
  unint64_t result;

  result = qword_1EFE50DE0;
  if (!qword_1EFE50DE0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B340, &type metadata for AccessibilitySoundRecognition.Detection.ActiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50DE0);
  }
  return result;
}

unint64_t sub_1D4416A30()
{
  unint64_t result;

  result = qword_1EFE50DE8;
  if (!qword_1EFE50DE8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B3B8, &type metadata for AccessibilitySoundRecognition.Detection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50DE8);
  }
  return result;
}

unint64_t sub_1D4416A70()
{
  unint64_t result;

  result = qword_1EFE50DF0;
  if (!qword_1EFE50DF0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B3E0, &type metadata for AccessibilitySoundRecognition.Detection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50DF0);
  }
  return result;
}

unint64_t sub_1D4416AB0()
{
  unint64_t result;

  result = qword_1EFE50DF8;
  if (!qword_1EFE50DF8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B1A8, &type metadata for AccessibilitySoundRecognition.DetectorIdentifier.BuiltInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50DF8);
  }
  return result;
}

unint64_t sub_1D4416AF0()
{
  unint64_t result;

  result = qword_1EFE50E00;
  if (!qword_1EFE50E00)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B1D0, &type metadata for AccessibilitySoundRecognition.DetectorIdentifier.BuiltInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50E00);
  }
  return result;
}

unint64_t sub_1D4416B30()
{
  unint64_t result;

  result = qword_1EFE50E08;
  if (!qword_1EFE50E08)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B0F0, &type metadata for AccessibilitySoundRecognition.DetectorIdentifier.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50E08);
  }
  return result;
}

unint64_t sub_1D4416B70()
{
  unint64_t result;

  result = qword_1EFE50E10;
  if (!qword_1EFE50E10)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B118, &type metadata for AccessibilitySoundRecognition.DetectorIdentifier.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50E10);
  }
  return result;
}

unint64_t sub_1D4416BB0()
{
  unint64_t result;

  result = qword_1EFE50E18;
  if (!qword_1EFE50E18)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B260, &type metadata for AccessibilitySoundRecognition.DetectorIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50E18);
  }
  return result;
}

unint64_t sub_1D4416BF0()
{
  unint64_t result;

  result = qword_1EFE50E20;
  if (!qword_1EFE50E20)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B288, &type metadata for AccessibilitySoundRecognition.DetectorIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50E20);
  }
  return result;
}

unint64_t sub_1D4416C30()
{
  unint64_t result;

  result = qword_1EFE50E28;
  if (!qword_1EFE50E28)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453AFE8, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.SmokeAlarmCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50E28);
  }
  return result;
}

unint64_t sub_1D4416C70()
{
  unint64_t result;

  result = qword_1EFE50E30;
  if (!qword_1EFE50E30)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B010, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.SmokeAlarmCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50E30);
  }
  return result;
}

unint64_t sub_1D4416CB0()
{
  unint64_t result;

  result = qword_1EFE50E38;
  if (!qword_1EFE50E38)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453AF98, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DistressedBabyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50E38);
  }
  return result;
}

unint64_t sub_1D4416CF0()
{
  unint64_t result;

  result = qword_1EFE50E40;
  if (!qword_1EFE50E40)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453AFC0, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DistressedBabyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50E40);
  }
  return result;
}

unint64_t sub_1D4416D30()
{
  unint64_t result;

  result = qword_1EFE50E48;
  if (!qword_1EFE50E48)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453AF48, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.BeepCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50E48);
  }
  return result;
}

unint64_t sub_1D4416D70()
{
  unint64_t result;

  result = qword_1EFE50E50;
  if (!qword_1EFE50E50)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453AF70, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.BeepCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50E50);
  }
  return result;
}

unint64_t sub_1D4416DB0()
{
  unint64_t result;

  result = qword_1EFE50E58;
  if (!qword_1EFE50E58)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453AEF8, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.BuzzerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50E58);
  }
  return result;
}

unint64_t sub_1D4416DF0()
{
  unint64_t result;

  result = qword_1EFE50E60;
  if (!qword_1EFE50E60)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453AF20, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.BuzzerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50E60);
  }
  return result;
}

unint64_t sub_1D4416E30()
{
  unint64_t result;

  result = qword_1EFE50E68;
  if (!qword_1EFE50E68)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453AEA8, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CarHornCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50E68);
  }
  return result;
}

unint64_t sub_1D4416E70()
{
  unint64_t result;

  result = qword_1EFE50E70;
  if (!qword_1EFE50E70)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453AED0, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CarHornCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50E70);
  }
  return result;
}

unint64_t sub_1D4416EB0()
{
  unint64_t result;

  result = qword_1EFE50E78;
  if (!qword_1EFE50E78)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453AE58, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CatMeowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50E78);
  }
  return result;
}

unint64_t sub_1D4416EF0()
{
  unint64_t result;

  result = qword_1EFE50E80;
  if (!qword_1EFE50E80)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453AE80, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CatMeowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50E80);
  }
  return result;
}

unint64_t sub_1D4416F30()
{
  unint64_t result;

  result = qword_1EFE50E88;
  if (!qword_1EFE50E88)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453AE08, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CoughCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50E88);
  }
  return result;
}

unint64_t sub_1D4416F70()
{
  unint64_t result;

  result = qword_1EFE50E90;
  if (!qword_1EFE50E90)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453AE30, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CoughCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50E90);
  }
  return result;
}

unint64_t sub_1D4416FB0()
{
  unint64_t result;

  result = qword_1EFE50E98;
  if (!qword_1EFE50E98)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453ADB8, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DingBellCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50E98);
  }
  return result;
}

unint64_t sub_1D4416FF0()
{
  unint64_t result;

  result = qword_1EFE50EA0;
  if (!qword_1EFE50EA0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453ADE0, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DingBellCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50EA0);
  }
  return result;
}

unint64_t sub_1D4417030()
{
  unint64_t result;

  result = qword_1EFE50EA8;
  if (!qword_1EFE50EA8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453AD68, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DogBarkCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50EA8);
  }
  return result;
}

unint64_t sub_1D4417070()
{
  unint64_t result;

  result = qword_1EFE50EB0;
  if (!qword_1EFE50EB0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453AD90, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DogBarkCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50EB0);
  }
  return result;
}

unint64_t sub_1D44170B0()
{
  unint64_t result;

  result = qword_1EFE50EB8;
  if (!qword_1EFE50EB8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453AD18, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DoorBellCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50EB8);
  }
  return result;
}

unint64_t sub_1D44170F0()
{
  unint64_t result;

  result = qword_1EFE50EC0;
  if (!qword_1EFE50EC0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453AD40, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DoorBellCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50EC0);
  }
  return result;
}

unint64_t sub_1D4417130()
{
  unint64_t result;

  result = qword_1EFE50EC8;
  if (!qword_1EFE50EC8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453ACC8, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DoorKnockCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50EC8);
  }
  return result;
}

unint64_t sub_1D4417170()
{
  unint64_t result;

  result = qword_1EFE50ED0;
  if (!qword_1EFE50ED0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453ACF0, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DoorKnockCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50ED0);
  }
  return result;
}

unint64_t sub_1D44171B0()
{
  unint64_t result;

  result = qword_1EFE50ED8;
  if (!qword_1EFE50ED8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453AC78, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.FireAlarmCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50ED8);
  }
  return result;
}

unint64_t sub_1D44171F0()
{
  unint64_t result;

  result = qword_1EFE50EE0;
  if (!qword_1EFE50EE0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453ACA0, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.FireAlarmCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50EE0);
  }
  return result;
}

unint64_t sub_1D4417230()
{
  unint64_t result;

  result = qword_1EFE50EE8;
  if (!qword_1EFE50EE8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453AC28, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.GlassBreakingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50EE8);
  }
  return result;
}

unint64_t sub_1D4417270()
{
  unint64_t result;

  result = qword_1EFE50EF0;
  if (!qword_1EFE50EF0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453AC50, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.GlassBreakingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50EF0);
  }
  return result;
}

unint64_t sub_1D44172B0()
{
  unint64_t result;

  result = qword_1EFE50EF8;
  if (!qword_1EFE50EF8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453ABD8, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.KettleWhistlingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50EF8);
  }
  return result;
}

unint64_t sub_1D44172F0()
{
  unint64_t result;

  result = qword_1EFE50F00;
  if (!qword_1EFE50F00)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453AC00, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.KettleWhistlingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50F00);
  }
  return result;
}

unint64_t sub_1D4417330()
{
  unint64_t result;

  result = qword_1EFE50F08;
  if (!qword_1EFE50F08)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453AB88, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.ShoutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50F08);
  }
  return result;
}

unint64_t sub_1D4417370()
{
  unint64_t result;

  result = qword_1EFE50F10;
  if (!qword_1EFE50F10)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453ABB0, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.ShoutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50F10);
  }
  return result;
}

unint64_t sub_1D44173B0()
{
  unint64_t result;

  result = qword_1EFE50F18;
  if (!qword_1EFE50F18)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453AB38, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.SirenAlarmCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50F18);
  }
  return result;
}

unint64_t sub_1D44173F0()
{
  unint64_t result;

  result = qword_1EFE50F20;
  if (!qword_1EFE50F20)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453AB60, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.SirenAlarmCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50F20);
  }
  return result;
}

unint64_t sub_1D4417430()
{
  unint64_t result;

  result = qword_1EFE50F28;
  if (!qword_1EFE50F28)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453AAE8, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.WaterRunningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50F28);
  }
  return result;
}

unint64_t sub_1D4417470()
{
  unint64_t result;

  result = qword_1EFE50F30;
  if (!qword_1EFE50F30)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453AB10, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.WaterRunningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50F30);
  }
  return result;
}

unint64_t sub_1D44174B0()
{
  unint64_t result;

  result = qword_1EFE50F38;
  if (!qword_1EFE50F38)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B038, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50F38);
  }
  return result;
}

unint64_t sub_1D44174F0()
{
  unint64_t result;

  result = qword_1EFE50F40;
  if (!qword_1EFE50F40)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453B060, &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50F40);
  }
  return result;
}

unint64_t sub_1D441752C()
{
  unint64_t result;

  result = qword_1EFE50F60;
  if (!qword_1EFE50F60)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C5A4, &type metadata for AccessibilitySoundRecognition.DetectorSpecification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50F60);
  }
  return result;
}

unint64_t sub_1D4417568()
{
  unint64_t result;

  result = qword_1EFE50F68;
  if (!qword_1EFE50F68)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C554, &type metadata for AccessibilitySoundRecognition.DetectorSpecification.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50F68);
  }
  return result;
}

unint64_t sub_1D44175A4()
{
  unint64_t result;

  result = qword_1EFE50F70;
  if (!qword_1EFE50F70)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C504, &type metadata for AccessibilitySoundRecognition.DetectorSpecification.BuiltInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE50F70);
  }
  return result;
}

uint64_t sub_1D44175E0()
{
  __n128 *v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D44190D0(v0[1].n128_i64[0], v0[1].n128_i64[1], v0[2].n128_i64[0], v0[2].n128_i64[1], v0[3].n128_i64[0], v0[3].n128_i64[1], v0[4].n128_i64[0], v0[4].n128_i64[1], v0[5], v0[6], v0[7], v0[8], v0[9], v0[10], v0[11], v0[12], v2, v3, v4,
    v5,
    v6,
    v7,
    v8,
    v9,
    v10,
    v11,
    v12,
    v13,
    v14,
    v15,
    v16,
    v17,
    v0[13].n128_i64[0],
    v0[13].n128_i64[1],
    v0[14].n128_i8[0]);
  sub_1D42B5400((uint64_t)&v0[14].n128_i64[1]);
  return swift_deallocObject();
}

uint64_t sub_1D4417640@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1D440E618((const void *)(v1 + 16), (_QWORD *)(v1 + 232), a1);
}

uint64_t sub_1D441765C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t i;
  BOOL v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1D42B28FC(&qword_1EFE510C8);
  result = sub_1D451B5B0();
  v4 = (_QWORD *)result;
  v5 = 0;
  v26 = a1;
  v8 = *(_QWORD *)(a1 + 64);
  v7 = a1 + 64;
  v6 = v8;
  v9 = 1 << *(_BYTE *)(v7 - 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v6;
  v24 = v7;
  v25 = (unint64_t)(v9 + 63) >> 6;
  v12 = result + 64;
  if ((v10 & v6) == 0)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (i = v13 | (v5 << 6); ; i = __clz(__rbit64(v16)) + (v5 << 6))
  {
    v18 = (uint64_t *)(*(_QWORD *)(v26 + 48) + 16 * i);
    v19 = *v18;
    v20 = v18[1];
    sub_1D42D71EC();
    sub_1D42CB8FC();
    sub_1D4412004();
    result = sub_1D42CB8F4();
    if (v1)
    {
      sub_1D42CB5C8();
      sub_1D42B8F48();
      return (uint64_t)v4;
    }
    *(_QWORD *)(v12 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v21 = (_QWORD *)(v4[6] + 16 * i);
    *v21 = v19;
    v21[1] = v20;
    *(_QWORD *)(v4[7] + 8 * i) = v27;
    v22 = v4[2];
    v15 = __OFADD__(v22, 1);
    v23 = v22 + 1;
    if (v15)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v4[2] = v23;
    if (v11)
      goto LABEL_4;
LABEL_5:
    v15 = __OFADD__(v5++, 1);
    if (v15)
      goto LABEL_27;
    if (v5 >= v25)
      return (uint64_t)v4;
    v16 = *(_QWORD *)(v24 + 8 * v5);
    if (!v16)
      break;
LABEL_15:
    v11 = (v16 - 1) & v16;
  }
  v17 = v5 + 1;
  if (v5 + 1 >= v25)
    return (uint64_t)v4;
  v16 = *(_QWORD *)(v24 + 8 * v17);
  if (v16)
    goto LABEL_14;
  v17 = v5 + 2;
  if (v5 + 2 >= v25)
    return (uint64_t)v4;
  v16 = *(_QWORD *)(v24 + 8 * v17);
  if (v16)
    goto LABEL_14;
  v17 = v5 + 3;
  if (v5 + 3 >= v25)
    return (uint64_t)v4;
  v16 = *(_QWORD *)(v24 + 8 * v17);
  if (v16)
  {
LABEL_14:
    v5 = v17;
    goto LABEL_15;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v25)
      return (uint64_t)v4;
    v16 = *(_QWORD *)(v24 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1D4417870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  sub_1D44195B8();
  sub_1D4418FD8();
  sub_1D44197B0();
  v0 = sub_1D42E8648();
  sub_1D4419538(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  return sub_1D44190F8();
}

uint64_t sub_1D44178C8(uint64_t a1, uint64_t a2)
{
  return sub_1D44178E0(a1, a2, (void (*)(uint64_t))sub_1D42E8868);
}

uint64_t sub_1D44178D4(uint64_t a1, uint64_t a2)
{
  return sub_1D44178E0(a1, a2, (void (*)(uint64_t))sub_1D42E8874);
}

uint64_t sub_1D44178E0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v7;

  sub_1D44195B8();
  sub_1D4418FD8();
  v5 = sub_1D4419870();
  a3(v5);
  *v3 = v7;
  return sub_1D44190F8();
}

uint64_t sub_1D441793C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  sub_1D44195B8();
  sub_1D4418FD8();
  sub_1D42E8948();
  sub_1D4419538(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D441798C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v8;

  swift_isUniquelyReferenced_nonNull_native();
  v8 = *v3;
  *v3 = 0x8000000000000000;
  sub_1D42E8A44(a1, a2, a3);
  *v3 = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4417A08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  sub_1D44195B8();
  sub_1D4418FD8();
  sub_1D42E8B14();
  sub_1D4419538(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  return sub_1D44190F8();
}

uint64_t sub_1D4417A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v4;

  v0 = e5rt_tensor_desc_create();
  if ((_DWORD)v0)
  {
    v1 = v0;
    sub_1D43705BC();
    swift_allocError();
    *(_DWORD *)v2 = v1;
    *(_BYTE *)(v2 + 4) = 0;
  }
  else
  {
    v1 = 0;
    sub_1D43705F8();
    swift_allocError();
    *v4 = 0;
  }
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

void sub_1D4417B78(char *a1, uint64_t a2, unint64_t a3)
{
  sub_1D4407110(*a1, a2, a3);
}

uint64_t sub_1D4417B80()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE55840) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1D42B8F98();
  sub_1D42F1FA0(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return sub_1D43C2314();
}

void sub_1D4417BE4()
{
  sub_1D42B28FC(&qword_1EFE55840);
  sub_1D44A587C();
}

void sub_1D4417C1C(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  sub_1D42B6E24();
}

uint64_t sub_1D4417C28()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1D4417C4C(char *a1)
{
  uint64_t v1;

  sub_1D4417B78(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1D4417C54(uint64_t result)
{
  *(_DWORD *)(result + 4) = 0x80000000;
  return result;
}

_QWORD *sub_1D4417C60(_QWORD *result)
{
  *result = *(unsigned int *)result;
  return result;
}

void sub_1D4417C6C(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  int v2;

  if (a1[1])
    v2 = 256;
  else
    v2 = 0;
  *a2 = sub_1D4414CC4(v2 | *a1) & 1;
  sub_1D42B6E24();
}

void sub_1D4417CA8(char *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(char *)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _BYTE *a7@<X8>)
{
  __int16 v8;

  v8 = sub_1D4414C08(*a1, a2, a3, a4, a5, a6);
  *a7 = v8 & 1;
  a7[1] = HIBYTE(v8) & 1;
  sub_1D42B6E24();
}

uint64_t sub_1D4417CE0(uint64_t *a1)
{
  return sub_1D44142D0(*a1, a1[1]);
}

uint64_t sub_1D4417CF0()
{
  return sub_1D4414354();
}

uint64_t sub_1D4417CF8()
{
  sub_1D42B8F98();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D4417D20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 240) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D4417E68@<X0>(_BYTE *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1D4412974(a1, *(_QWORD *)(v2+ ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 16) - 8) + 64)+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v2 + 16) - 8) + 80) + 240) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v2 + 16) - 8) + 80))+ 7) & 0xFFFFFFFFFFFFF8)), a2);
}

void sub_1D4417EB0(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  sub_1D440732C(*a1, a1[1], a2, a3);
}

uint64_t sub_1D4417EC4(void **a1, uint64_t a2, unint64_t a3)
{
  return sub_1D440754C(*a1, a2, a3);
}

uint64_t sub_1D4417EDC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D4414374(a1);
}

void sub_1D4417EE4(_QWORD *a1@<X8>)
{
  *a1 = sub_1D4414784();
  sub_1D42B6E24();
}

void sub_1D4417F04(_QWORD *a1@<X8>)
{
  *a1 = sub_1D4414784();
  sub_1D42B6E24();
}

void sub_1D4417F28(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;

  *a2 = sub_1D44147A4(*a1);
  a2[1] = v3;
  sub_1D42B6E24();
}

uint64_t sub_1D4417F50(uint64_t result)
{
  if (result != 1)
    return sub_1D4417F60(result);
  return result;
}

uint64_t sub_1D4417F60(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D4417F8C()
{
  sub_1D42B8F98();
  return swift_deallocObject();
}

void sub_1D4417FAC()
{
  sub_1D44B06F0();
}

uint64_t sub_1D4417FB4()
{
  sub_1D42B8F98();
  return swift_deallocObject();
}

uint64_t sub_1D4417FD4()
{
  return swift_deallocObject();
}

uint64_t sub_1D4417FE4(uint64_t *a1)
{
  return sub_1D4417CE0(a1);
}

uint64_t sub_1D4417FEC()
{
  return sub_1D4417CF0();
}

uint64_t sub_1D4417FF8()
{
  sub_1D42B8F98();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1D4418028(uint64_t *a1)
{
  uint64_t v1;

  sub_1D4417EB0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1D4418030()
{
  unint64_t result;

  result = qword_1EFE511A8;
  if (!qword_1EFE511A8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C474, &type metadata for AccessibilitySoundRecognition.CustomModelTensors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE511A8);
  }
  return result;
}

unint64_t sub_1D441806C()
{
  unint64_t result;

  result = qword_1EFE511B0;
  if (!qword_1EFE511B0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C44C, &unk_1E9798458);
    atomic_store(result, (unint64_t *)&qword_1EFE511B0);
  }
  return result;
}

unint64_t sub_1D44180A8()
{
  unint64_t result;

  result = qword_1EFE511B8;
  if (!qword_1EFE511B8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C424, &unk_1E97980A8);
    atomic_store(result, (unint64_t *)&qword_1EFE511B8);
  }
  return result;
}

unint64_t sub_1D44180E4()
{
  unint64_t result;

  result = qword_1EFE511C8;
  if (!qword_1EFE511C8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C3FC, &unk_1E9798458);
    atomic_store(result, (unint64_t *)&qword_1EFE511C8);
  }
  return result;
}

unint64_t sub_1D4418120()
{
  unint64_t result;

  result = qword_1EFE511D0;
  if (!qword_1EFE511D0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C3D4, &unk_1E97980A8);
    atomic_store(result, (unint64_t *)&qword_1EFE511D0);
  }
  return result;
}

void sub_1D441815C(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  sub_1D4407750(*a1, a1[1], a1[2], a1[3], a2, a3);
}

void sub_1D4418174(uint64_t *a1)
{
  uint64_t v1;

  sub_1D441815C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1D441817C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFE511F8;
  if (!qword_1EFE511F8)
  {
    v1 = sub_1D42B8B10((uint64_t *)&unk_1EFE4CAF0);
    v2[0] = &off_1E9798A40;
    v2[1] = &off_1E9798A50;
    result = MEMORY[0x1D825E41C](&unk_1D45293A0, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFE511F8);
  }
  return result;
}

void sub_1D44181E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  sub_1D4419164();
  v28 = *(_BYTE *)(a1 + 208);
  v26 = *(_QWORD *)(a1 + 192);
  v27 = *(_QWORD *)(a1 + 200);
  sub_1D4419624();
  sub_1D4349CB0(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20,
    v21,
    v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28);
  sub_1D44197F0();
}

uint64_t sub_1D441821C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;

  v2 = *(_QWORD *)(a1 + 232);
  v20 = *(_QWORD *)(a1 + 224);
  v21 = *(_QWORD *)(a1 + 216);
  v3 = *(_QWORD *)(a1 + 240);
  v4 = *(_QWORD *)(a1 + 248);
  v5 = *(_QWORD *)(a1 + 256);
  v6 = *(_QWORD *)(a1 + 264);
  v7 = *(_QWORD *)(a1 + 272);
  v18 = *(_OWORD *)(a1 + 296);
  v19 = *(_OWORD *)(a1 + 280);
  v16 = *(_OWORD *)(a1 + 328);
  v17 = *(_OWORD *)(a1 + 312);
  v15 = *(_OWORD *)(a1 + 344);
  v13 = *(_OWORD *)(a1 + 376);
  v14 = *(_OWORD *)(a1 + 360);
  v12 = *(_OWORD *)(a1 + 392);
  v9 = *(_QWORD *)(a1 + 408);
  v8 = *(_QWORD *)(a1 + 416);
  v10 = *(_BYTE *)(a1 + 424);
  sub_1D434A018(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_BYTE *)(a1 + 208));
  sub_1D434A018(v21, v20, v2, v3, v4, v5, v6, v7, v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v17, *((uint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v9,
    v8,
    v10);
  return a1;
}

uint64_t sub_1D441836C(void **a1)
{
  uint64_t v1;

  return sub_1D4417EC4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t getEnumTagSinglePayload for AccessibilitySoundRecognition.CustomModelTensors.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 8) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v5 = v6 - 9;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessibilitySoundRecognition.CustomModelTensors.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1D4418448 + 4 * byte_1D453A2BE[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1D441847C + 4 * byte_1D453A2B9[v4]))();
}

uint64_t sub_1D441847C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4418484(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D441848CLL);
  return result;
}

uint64_t sub_1D4418498(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D44184A0);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1D44184A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D44184AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.CustomModelTensors.CodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.CustomModelTensors.CodingKeys;
}

uint64_t sub_1D44184C8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1D4418514 + 4 * byte_1D453A2C8[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1D4418548 + 4 * byte_1D453A2C3[v4]))();
}

uint64_t sub_1D4418548(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4418550(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4418558);
  return result;
}

uint64_t sub_1D4418564(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D441856CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1D4418570(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4418578(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AccessibilitySoundRecognition.DomainError()
{
  sub_1D42CB35C();
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.DetectorSpecification.CodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.DetectorSpecification.CodingKeys;
}

uint64_t _s13SoundAnalysis29AccessibilitySoundRecognitionV7RequestV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D44185E0 + 4 * byte_1D453A2CD[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D4418600 + 4 * byte_1D453A2D2[v4]))();
}

_BYTE *sub_1D44185E0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D4418600(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4418608(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4418610(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4418618(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4418620(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.DetectorSpecification.BuiltInCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.DetectorSpecification.BuiltInCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.DetectorSpecification.CustomCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.DetectorSpecification.CustomCodingKeys;
}

void sub_1D4418650(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  sub_1D42CB6CC();
  sub_1D42CB7F8();
  sub_1D42CB15C();
}

void type metadata accessor for AccessibilitySoundRecognition.WeightsAndBiasTensors()
{
  sub_1D42CB35C();
}

void sub_1D441869C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  sub_1D42CB6CC();
  sub_1D42B6E24();
}

void type metadata accessor for AccessibilitySoundRecognition.ConstantParametersTensor()
{
  sub_1D42CB35C();
}

unint64_t sub_1D44186D8()
{
  unint64_t result;

  result = qword_1EFE51238;
  if (!qword_1EFE51238)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453BFBC, &unk_1E9798458);
    atomic_store(result, (unint64_t *)&qword_1EFE51238);
  }
  return result;
}

unint64_t sub_1D4418718()
{
  unint64_t result;

  result = qword_1EFE51240;
  if (!qword_1EFE51240)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C024, &unk_1E97980A8);
    atomic_store(result, (unint64_t *)&qword_1EFE51240);
  }
  return result;
}

unint64_t sub_1D4418758()
{
  unint64_t result;

  result = qword_1EFE51248;
  if (!qword_1EFE51248)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C11C, &type metadata for AccessibilitySoundRecognition.DetectorSpecification.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51248);
  }
  return result;
}

unint64_t sub_1D4418798()
{
  unint64_t result;

  result = qword_1EFE51250;
  if (!qword_1EFE51250)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C1D4, &type metadata for AccessibilitySoundRecognition.DetectorSpecification.BuiltInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51250);
  }
  return result;
}

unint64_t sub_1D44187D8()
{
  unint64_t result;

  result = qword_1EFE51258;
  if (!qword_1EFE51258)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C28C, &type metadata for AccessibilitySoundRecognition.DetectorSpecification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51258);
  }
  return result;
}

unint64_t sub_1D4418818()
{
  unint64_t result;

  result = qword_1EFE51260;
  if (!qword_1EFE51260)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C2F4, &unk_1E97979D0);
    atomic_store(result, (unint64_t *)&qword_1EFE51260);
  }
  return result;
}

unint64_t sub_1D4418858()
{
  unint64_t result;

  result = qword_1EFE51268;
  if (!qword_1EFE51268)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C3AC, &type metadata for AccessibilitySoundRecognition.CustomModelTensors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51268);
  }
  return result;
}

unint64_t sub_1D4418898()
{
  unint64_t result;

  result = qword_1EFE51270;
  if (!qword_1EFE51270)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C31C, &type metadata for AccessibilitySoundRecognition.CustomModelTensors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51270);
  }
  return result;
}

unint64_t sub_1D44188D8()
{
  unint64_t result;

  result = qword_1EFE51278;
  if (!qword_1EFE51278)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C344, &type metadata for AccessibilitySoundRecognition.CustomModelTensors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51278);
  }
  return result;
}

unint64_t sub_1D4418918()
{
  unint64_t result;

  result = qword_1EFE51280;
  if (!qword_1EFE51280)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C144, &type metadata for AccessibilitySoundRecognition.DetectorSpecification.BuiltInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51280);
  }
  return result;
}

unint64_t sub_1D4418958()
{
  unint64_t result;

  result = qword_1EFE51288;
  if (!qword_1EFE51288)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C16C, &type metadata for AccessibilitySoundRecognition.DetectorSpecification.BuiltInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51288);
  }
  return result;
}

unint64_t sub_1D4418998()
{
  unint64_t result;

  result = qword_1EFE51290;
  if (!qword_1EFE51290)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C08C, &type metadata for AccessibilitySoundRecognition.DetectorSpecification.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51290);
  }
  return result;
}

unint64_t sub_1D44189D8()
{
  unint64_t result;

  result = qword_1EFE51298;
  if (!qword_1EFE51298)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C0B4, &type metadata for AccessibilitySoundRecognition.DetectorSpecification.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51298);
  }
  return result;
}

unint64_t sub_1D4418A18()
{
  unint64_t result;

  result = qword_1EFE512A0;
  if (!qword_1EFE512A0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C1FC, &type metadata for AccessibilitySoundRecognition.DetectorSpecification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE512A0);
  }
  return result;
}

unint64_t sub_1D4418A58()
{
  unint64_t result;

  result = qword_1EFE512A8;
  if (!qword_1EFE512A8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C224, &type metadata for AccessibilitySoundRecognition.DetectorSpecification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE512A8);
  }
  return result;
}

unint64_t sub_1D4418A94()
{
  unint64_t result;

  result = qword_1EFE512B8;
  if (!qword_1EFE512B8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C7B4, &type metadata for AccessibilitySoundRecognition.ConstantParametersTensor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE512B8);
  }
  return result;
}

unint64_t sub_1D4418AD0()
{
  unint64_t result;

  result = qword_1EFE512D8;
  if (!qword_1EFE512D8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C764, &type metadata for AccessibilitySoundRecognition.WeightsAndBiasTensors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE512D8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AccessibilitySoundRecognition.WeightsAndBiasTensors.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D4418B58 + 4 * byte_1D453A2DC[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D4418B8C + 4 * byte_1D453A2D7[v4]))();
}

uint64_t sub_1D4418B8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4418B94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4418B9CLL);
  return result;
}

uint64_t sub_1D4418BA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4418BB0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D4418BB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4418BBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.WeightsAndBiasTensors.CodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.WeightsAndBiasTensors.CodingKeys;
}

uint64_t _s13SoundAnalysis29AccessibilitySoundRecognitionV9DetectionOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D4418C24 + 4 * byte_1D453A2E6[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D4418C58 + 4 * byte_1D453A2E1[v4]))();
}

uint64_t sub_1D4418C58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4418C60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4418C68);
  return result;
}

uint64_t sub_1D4418C74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4418C7CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D4418C80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4418C88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.ConstantParametersTensor.CodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.ConstantParametersTensor.CodingKeys;
}

unint64_t sub_1D4418CA8()
{
  unint64_t result;

  result = qword_1EFE51300;
  if (!qword_1EFE51300)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C684, &type metadata for AccessibilitySoundRecognition.ConstantParametersTensor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51300);
  }
  return result;
}

unint64_t sub_1D4418CE8()
{
  unint64_t result;

  result = qword_1EFE51308;
  if (!qword_1EFE51308)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C73C, &type metadata for AccessibilitySoundRecognition.WeightsAndBiasTensors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51308);
  }
  return result;
}

unint64_t sub_1D4418D28()
{
  unint64_t result;

  result = qword_1EFE51310;
  if (!qword_1EFE51310)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C6AC, &type metadata for AccessibilitySoundRecognition.WeightsAndBiasTensors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51310);
  }
  return result;
}

unint64_t sub_1D4418D68()
{
  unint64_t result;

  result = qword_1EFE51318;
  if (!qword_1EFE51318)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C6D4, &type metadata for AccessibilitySoundRecognition.WeightsAndBiasTensors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51318);
  }
  return result;
}

unint64_t sub_1D4418DA8()
{
  unint64_t result;

  result = qword_1EFE51320;
  if (!qword_1EFE51320)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C5F4, &type metadata for AccessibilitySoundRecognition.ConstantParametersTensor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51320);
  }
  return result;
}

unint64_t sub_1D4418DE8()
{
  unint64_t result;

  result = qword_1EFE51328;
  if (!qword_1EFE51328)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453C61C, &type metadata for AccessibilitySoundRecognition.ConstantParametersTensor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51328);
  }
  return result;
}

uint64_t sub_1D4418E4C()
{
  return sub_1D451B610();
}

uint64_t sub_1D4418E64()
{
  return sub_1D451B6F4();
}

uint64_t sub_1D4418E78()
{
  return sub_1D451B6F4();
}

uint64_t sub_1D4418E88()
{
  return sub_1D451A2FC();
}

uint64_t sub_1D4418EB0()
{
  return sub_1D451B760();
}

uint64_t sub_1D4418ECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 112) + 8))(v1, v2);
}

uint64_t sub_1D4418EE0()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v1 - 72), *(_QWORD *)(v0 + 72));
}

uint64_t sub_1D4418EF0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4418F00()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4418F24()
{
  return sub_1D451B688();
}

uint64_t sub_1D4418F40(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_1D4418F48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void sub_1D4418F58()
{
  sub_1D42D6264();
}

uint64_t sub_1D4418F64()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1D42FE41C(v0, v1);
}

uint64_t sub_1D4418F70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  return sub_1D4349CB0(a1, v28, a2, a3, a4, a5, a6, a7, v27, a8, v29, v30, v31, v32, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_1D4418FA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v0 + 288))(v1, *(unsigned int *)(v0 + 280), v2);
}

uint64_t sub_1D4418FBC()
{
  return swift_willThrow();
}

uint64_t sub_1D4418FC8()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[6] + 8))(v0[7], v0[4]);
}

void sub_1D4418FD8()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t sub_1D4418FF0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4418FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 288))(a1, a2, v3);
}

void sub_1D4419004()
{
  sub_1D42D6264();
}

uint64_t sub_1D4419010()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1D42FE41C(v0, v1);
}

uint64_t sub_1D441901C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_1D4419024(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)a2;
}

uint64_t sub_1D4419064(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void sub_1D441906C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_1D4394A74(a1, a2, 0xE900000000000064, v3, a3);
}

void sub_1D441907C(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 168) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1D4419098(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1D44190B4(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1D44190D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9, __n128 a10, __n128 a11, __n128 a12, __n128 a13, __n128 a14, __n128 a15, __n128 a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  return sub_1D434A018(a1, a2, a3, a4, a5, a6, a7, a8, a9.n128_i64[0], a9.n128_i64[1], a10.n128_i64[0], a10.n128_i64[1], a11.n128_i64[0], a11.n128_i64[1], a12.n128_i64[0], a12.n128_i64[1], a13.n128_i64[0], a13.n128_i64[1], a14.n128_i64[0],
           a14.n128_i64[1],
           a15.n128_i64[0],
           a15.n128_i64[1],
           a16.n128_i64[0],
           a16.n128_i64[1],
           a33,
           a34,
           a35);
}

uint64_t sub_1D44190E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 48) + 8))(v1, v2);
}

uint64_t sub_1D44190F8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4419100@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_1D441910C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4419114()
{
  return swift_bridgeObjectRelease();
}

void *sub_1D441911C(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC0uLL);
}

uint64_t sub_1D4419124()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1D4419138()
{
  return swift_release();
}

_QWORD *sub_1D4419144(_QWORD *a1)
{
  uint64_t v1;

  return sub_1D42B5528(a1, v1);
}

uint64_t sub_1D441915C()
{
  return swift_bridgeObjectRelease();
}

__n128 sub_1D4419164()
{
  __n128 *v0;

  return v0[4];
}

void sub_1D441918C()
{
  sub_1D42D61F0();
}

uint64_t sub_1D44191A4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D44191B0()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1D44191B8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D44191C0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D44191C8()
{
  return sub_1D451BA24();
}

uint64_t sub_1D44191E8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D44191F0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D44191F8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4419200()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4419208()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D441922C()
{
  return type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier(0);
}

uint64_t sub_1D4419248()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4419250()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4419258()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4419260()
{
  uint64_t v0;

  return v0 - 72;
}

uint64_t sub_1D4419274()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D441927C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_1D4419284()
{
  return swift_bridgeObjectRelease();
}

void sub_1D441928C()
{
  sub_1D42D6264();
}

uint64_t sub_1D4419298()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D44192A0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D44192A8()
{
  return swift_bridgeObjectRelease();
}

void sub_1D44192B0()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 240) = 0;
  *(_DWORD *)(v0 + 256) = 0;
}

uint64_t sub_1D44192D8()
{
  return sub_1D451BA0C();
}

uint64_t sub_1D44192F0()
{
  return sub_1D451B610();
}

void sub_1D441931C(_QWORD *a1)
{
  uint64_t *v1;

  sub_1D42E33F8(a1, v1);
}

uint64_t sub_1D4419324()
{
  uint64_t *v0;

  return sub_1D42B28FC(v0);
}

uint64_t sub_1D441932C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4419334()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D441933C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_1D4419360()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4419368(const void *a1)
{
  uint64_t v1;

  sub_1D435C71C(a1, (void *)(v1 - 248));
  sub_1D435C758(v1 - 248);
  return nullsub_1(v1 - 248);
}

uint64_t sub_1D4419394()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D44193A0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

void sub_1D44193A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 - 168);
  v0[16] = *(_QWORD *)(v1 - 176);
  v0[17] = v2;
  v3 = *(_QWORD *)(v1 - 152);
  v0[18] = *(_QWORD *)(v1 - 160);
  v0[19] = v3;
}

void sub_1D44193C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;

  v33[12] = a31;
  v33[13] = a32;
  v35 = *(_QWORD *)(v34 - 184);
  v33[14] = a33;
  v33[15] = v35;
}

uint64_t sub_1D44193E0()
{
  return 0;
}

void sub_1D44193FC(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 224) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1D4419418(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1D4419434(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 240) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1D4419450(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 200) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1D441946C(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1D4419488(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 232) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1D44194C0()
{
  return sub_1D4519E4C();
}

uint64_t sub_1D44194C8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D44194E0()
{
  return sub_1D451A794();
}

uint64_t sub_1D44194F0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4419508()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4419520()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4419538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t *v10;
  uint64_t result;

  result = *v10;
  *v10 = a10;
  return result;
}

uint64_t sub_1D4419548()
{
  return sub_1D451B964();
}

uint64_t sub_1D4419558()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4419560()
{
  uint64_t v0;

  return nullsub_1(v0 - 248);
}

uint64_t sub_1D4419568()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4419570()
{
  return sub_1D451A74C();
}

void *sub_1D4419580()
{
  void *v0;
  const void *v1;

  return memcpy(v0, v1, 0xD1uLL);
}

uint64_t sub_1D4419590()
{
  return sub_1D451A74C();
}

void sub_1D44195B0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_1D4325D80(v2, a2);
}

uint64_t sub_1D44195B8()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1D44195C0()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 96) + 8))(v0, *(_QWORD *)(v1 - 88));
}

_QWORD *sub_1D44195DC(_QWORD *a1)
{
  uint64_t v1;

  return sub_1D42B5528(a1, v1);
}

uint64_t sub_1D44195F4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(result + 16) = v2;
  *(_QWORD *)(result + 24) = v1;
  return result;
}

void sub_1D4419600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  _QWORD *v30;
  uint64_t v31;

  v30[8] = v31;
  v30[9] = a28;
  v30[10] = a29;
  v30[11] = a30;
}

unint64_t sub_1D4419638()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 16;
  return sub_1D441480C();
}

unint64_t sub_1D4419644()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 15;
  return sub_1D4414848();
}

unint64_t sub_1D4419650()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 14;
  return sub_1D4414884();
}

unint64_t sub_1D441965C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 13;
  return sub_1D44148C0();
}

unint64_t sub_1D4419668()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 12;
  return sub_1D44148FC();
}

uint64_t sub_1D4419674()
{
  return sub_1D451B688();
}

unint64_t sub_1D4419680()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 11;
  return sub_1D4414938();
}

uint64_t sub_1D441968C()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_1D44196AC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 10;
  return sub_1D4414974();
}

unint64_t sub_1D44196B8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 9;
  return sub_1D44149B0();
}

uint64_t sub_1D44196C4()
{
  return sub_1D451A794();
}

unint64_t sub_1D44196D0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 8;
  return sub_1D44149EC();
}

unint64_t sub_1D44196DC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 7;
  return sub_1D4414A28();
}

unint64_t sub_1D44196E8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 6;
  return sub_1D4414A64();
}

unint64_t sub_1D44196F4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 5;
  return sub_1D4414AA0();
}

unint64_t sub_1D4419700()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 4;
  return sub_1D4414ADC();
}

unint64_t sub_1D441970C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 3;
  return sub_1D4414B18();
}

unint64_t sub_1D4419718()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_1D4414B54();
}

uint64_t sub_1D4419738()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4419740(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1D43D72EC(a1, a2, (uint64_t *)(v2 + 160));
}

void sub_1D441974C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1D4328A1C(v2, a2);
}

void sub_1D4419754()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 240) = 1;
}

unint64_t sub_1D4419768()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_1D4414D1C();
}

unint64_t sub_1D4419774()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_1D4414E48();
}

unint64_t sub_1D4419780()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_1D4414B90();
}

uint64_t sub_1D441978C()
{
  return sub_1D441821C((uint64_t)&STACK[0x428]);
}

uint64_t sub_1D4419794()
{
  return swift_initStackObject();
}

uint64_t sub_1D441979C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  return nullsub_1(&a37);
}

void sub_1D44197A4()
{
  sub_1D4410194();
}

uint64_t sub_1D44197B0()
{
  uint64_t v0;

  return v0;
}

void sub_1D44197BC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1D4328A1C(v2, a2);
}

void sub_1D44197C4()
{
  sub_1D4394FEC();
}

void sub_1D44197CC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_1D4394A74(a1, a2, 0xE200000000000000, v3, a3);
}

void sub_1D44197D8()
{
  sub_1D4410194();
}

void sub_1D44197E4()
{
  sub_1D42D6264();
}

uint64_t sub_1D44197FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, _QWORD);

  return v3(a1, a2, *(_QWORD *)(v2 + 312));
}

uint64_t sub_1D4419808(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, _QWORD);

  return v2(a1, *(_QWORD *)(v1 + 312));
}

uint64_t sub_1D4419814()
{
  uint64_t v0;

  return sub_1D435C804(v0);
}

uint64_t sub_1D441981C()
{
  return swift_arrayDestroy();
}

uint64_t sub_1D4419828()
{
  return sub_1D451B6F4();
}

uint64_t sub_1D4419834()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1D4419840(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, _QWORD);

  return v3(a1, a2, *(_QWORD *)(v2 + 312));
}

uint64_t sub_1D441984C()
{
  return type metadata accessor for AccessibilitySoundRecognition.Session(0);
}

void sub_1D4419854()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 - 136);
  *(_QWORD *)(v0 + 160) = *(_QWORD *)(v1 - 144);
  *(_QWORD *)(v0 + 168) = v2;
}

uint64_t sub_1D4419868()
{
  uint64_t *v0;

  return sub_1D42B28FC(v0);
}

uint64_t sub_1D4419870()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D441987C()
{
  uint64_t v0;

  return sub_1D42B5400(v0);
}

void sub_1D4419898(_QWORD *a1)
{
  uint64_t *v1;

  sub_1D42E33F8(a1, v1);
}

void sub_1D44198A0()
{
  sub_1D4395188();
}

_QWORD *AudioConfiguration.init(category:mode:options:channelMap:useSiriAudioRouting:prefersNoMicrophoneUsageIndicator:prefersNoInterruptions:allowHapticsAndSystemSoundsDuringRecording:preferDecoupledIO:smartRoutingConsideration:audioHWControlFlags:)@<X0>(_QWORD *result@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, char a10, char a11, uint64_t *a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v12 = result[1];
  v13 = *a2;
  v14 = a2[1];
  v15 = *a3;
  v16 = *a12;
  v17 = *((_BYTE *)a12 + 8);
  *(_QWORD *)a9 = *result;
  *(_QWORD *)(a9 + 8) = v12;
  *(_QWORD *)(a9 + 16) = v13;
  *(_QWORD *)(a9 + 24) = v14;
  *(_QWORD *)(a9 + 32) = v15;
  *(_QWORD *)(a9 + 40) = a4;
  *(_BYTE *)(a9 + 48) = a5;
  *(_BYTE *)(a9 + 49) = a6;
  *(_BYTE *)(a9 + 50) = a7;
  *(_BYTE *)(a9 + 51) = a8;
  *(_BYTE *)(a9 + 52) = a10;
  *(_BYTE *)(a9 + 53) = a11;
  *(_QWORD *)(a9 + 56) = v16;
  *(_BYTE *)(a9 + 64) = v17;
  return result;
}

uint64_t AudioSessionAudioHardwareControlFlags.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t AudioSessionAudioHardwareControlFlags.init(rawValue:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void AudioSessionAudioHardwareControlFlags.hash(into:)()
{
  sub_1D451B964();
  sub_1D42B6E24();
}

BOOL static AudioSessionAudioHardwareControlFlags.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1D4419948(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 1819307369 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1D451B820();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1D44199BC()
{
  return 1819307369;
}

uint64_t sub_1D44199D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D4419948(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D44199F8()
{
  sub_1D4419B3C();
  return sub_1D451BA3C();
}

uint64_t sub_1D4419A20()
{
  sub_1D4419B3C();
  return sub_1D451BA48();
}

void AudioSessionAudioHardwareControlFlags.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D42BE910();
  v2 = v1;
  v3 = sub_1D42B28FC(&qword_1EFE51330);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1D42D7108();
  sub_1D42B5528(v2, v2[3]);
  sub_1D4419B3C();
  sub_1D451BA24();
  sub_1D42CB9F8();
  sub_1D43B9EB0(&qword_1EFE51348, v5, MEMORY[0x1E0DEBBA0], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
  sub_1D451B760();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0, v3);
  sub_1D42BE844();
}

unint64_t sub_1D4419B3C()
{
  unint64_t result;

  result = qword_1EFE51338;
  if (!qword_1EFE51338)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453CC94, &type metadata for AudioSessionAudioHardwareControlFlags.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51338);
  }
  return result;
}

uint64_t AudioSessionAudioHardwareControlFlags.hashValue.getter()
{
  sub_1D43F8904();
  sub_1D451B964();
  return sub_1D451B994();
}

void AudioSessionAudioHardwareControlFlags.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;

  sub_1D42BE910();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v26 = v25;
  v27 = sub_1D42B28FC(&qword_1EFE51350);
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&a9 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42B5528(v24, v24[3]);
  sub_1D4419B3C();
  sub_1D451BA0C();
  if (!v20)
  {
    sub_1D42CB9F8();
    sub_1D43B9EB0(&qword_1EFE51358, v31, MEMORY[0x1E0DEBBC8], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
    sub_1D451B688();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
    *v26 = a10;
  }
  sub_1D42B5400((uint64_t)v24);
  sub_1D42BE844();
}

#error "1D4419CE4: call analysis failed (funcsize=5)"

void sub_1D4419CF0()
{
  AudioSessionAudioHardwareControlFlags.encode(to:)();
}

uint64_t AudioConfiguration.category.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1D441CA04(*(_QWORD *)(v1 + 8), a1);
}

void AudioConfiguration.category.setter(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRelease();
  *v1 = v2;
  v1[1] = v3;
  sub_1D42CB15C();
}

uint64_t (*AudioConfiguration.category.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t AudioConfiguration.mode.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1D441CA04(*(_QWORD *)(v1 + 24), a1);
}

void AudioConfiguration.mode.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v3;
  sub_1D42CB15C();
}

uint64_t (*AudioConfiguration.mode.modify())(_QWORD)
{
  return nullsub_1;
}

void AudioConfiguration.options.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 32);
}

_QWORD *AudioConfiguration.options.setter(_QWORD *result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = *result;
  return result;
}

uint64_t (*AudioConfiguration.options.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t AudioConfiguration.channelMap.getter()
{
  return swift_bridgeObjectRetain();
}

void AudioConfiguration.channelMap.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = a1;
  sub_1D42B6E24();
}

uint64_t (*AudioConfiguration.channelMap.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t AudioConfiguration.useSiriAudioRouting.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t AudioConfiguration.useSiriAudioRouting.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = result;
  return result;
}

uint64_t (*AudioConfiguration.useSiriAudioRouting.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t AudioConfiguration.prefersNoMicrophoneUsageIndicator.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t AudioConfiguration.prefersNoMicrophoneUsageIndicator.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 49) = result;
  return result;
}

uint64_t (*AudioConfiguration.prefersNoMicrophoneUsageIndicator.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t AudioConfiguration.prefersNoInterruptions.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 50);
}

uint64_t AudioConfiguration.prefersNoInterruptions.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 50) = result;
  return result;
}

uint64_t (*AudioConfiguration.prefersNoInterruptions.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t AudioConfiguration.allowHapticsAndSystemSoundsDuringRecording.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 51);
}

uint64_t AudioConfiguration.allowHapticsAndSystemSoundsDuringRecording.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 51) = result;
  return result;
}

uint64_t (*AudioConfiguration.allowHapticsAndSystemSoundsDuringRecording.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t AudioConfiguration.preferDecoupledIO.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 52);
}

uint64_t AudioConfiguration.preferDecoupledIO.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 52) = result;
  return result;
}

uint64_t (*AudioConfiguration.preferDecoupledIO.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t AudioConfiguration.smartRoutingConsideration.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 53);
}

uint64_t AudioConfiguration.smartRoutingConsideration.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 53) = result;
  return result;
}

uint64_t (*AudioConfiguration.smartRoutingConsideration.modify())(_QWORD)
{
  return nullsub_1;
}

void AudioConfiguration.audioHWControlFlags.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 64);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 56);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t AudioConfiguration.audioHWControlFlags.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 56) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 64) = v2;
  return result;
}

uint64_t (*AudioConfiguration.audioHWControlFlags.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t static AudioConfiguration.create(category:mode:options:channelMap:useSiriAudioRouting:prefersNoMicrophoneUsageIndicator:prefersNoInterruptions:allowHapticsAndSystemSoundsDuringRecording:preferDecoupledIO:smartRoutingConsideration:audioHWControlFlags:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, char a10, char a11, uint64_t *a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v12 = a1[1];
  v13 = *a2;
  v14 = a2[1];
  v15 = *a3;
  v16 = *a12;
  v17 = *((_BYTE *)a12 + 8);
  *(_QWORD *)a9 = *a1;
  *(_QWORD *)(a9 + 8) = v12;
  *(_QWORD *)(a9 + 16) = v13;
  *(_QWORD *)(a9 + 24) = v14;
  *(_QWORD *)(a9 + 32) = v15;
  *(_QWORD *)(a9 + 40) = a4;
  *(_BYTE *)(a9 + 48) = a5;
  *(_BYTE *)(a9 + 49) = a6;
  *(_BYTE *)(a9 + 50) = a7;
  *(_BYTE *)(a9 + 51) = a8;
  *(_BYTE *)(a9 + 52) = a10;
  *(_BYTE *)(a9 + 53) = a11;
  *(_QWORD *)(a9 + 56) = v16;
  *(_BYTE *)(a9 + 64) = v17;
  swift_bridgeObjectRetain();
  sub_1D42CB7B8();
  return swift_bridgeObjectRetain();
}

void sub_1D4419F60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_1D451A6EC();
  v2 = v1;
  v3 = sub_1D451A6EC();
  qword_1EFEA7990 = v0;
  *(_QWORD *)algn_1EFEA7998 = v2;
  qword_1EFEA79A0 = v3;
  qword_1EFEA79A8 = v4;
  qword_1EFEA79C8 = 0;
  qword_1EFEA79B0 = 1;
  qword_1EFEA79B8 = 0;
  *(uint64_t *)((char *)&qword_1EFEA79B8 + 6) = 0;
  byte_1EFEA79D0 = 1;
  sub_1D42B6E24();
}

uint64_t AudioConfiguration.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  int v3;

  v1 = *(_QWORD *)(v0 + 40);
  v3 = *(unsigned __int8 *)(v0 + 64);
  sub_1D42CB7B8();
  sub_1D451A74C();
  sub_1D42BE8B4();
  sub_1D42DCE84();
  sub_1D451A74C();
  sub_1D42CB208();
  sub_1D451B964();
  sub_1D451B970();
  if (v1)
    sub_1D42D61F0();
  sub_1D451B970();
  sub_1D451B970();
  sub_1D451B970();
  sub_1D451B970();
  sub_1D451B970();
  sub_1D451B970();
  if (v3)
    return sub_1D451B970();
  sub_1D451B970();
  return sub_1D451B964();
}

uint64_t static AudioConfiguration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  BOOL v12;
  char v13;
  uint64_t result;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD **)(a1 + 40);
  v31 = *(unsigned __int8 *)(a1 + 49);
  v32 = *(unsigned __int8 *)(a1 + 48);
  v28 = *(unsigned __int8 *)(a1 + 51);
  v26 = *(unsigned __int8 *)(a1 + 52);
  v24 = *(unsigned __int8 *)(a1 + 53);
  v22 = *(_BYTE *)(a1 + 64);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD **)(a2 + 40);
  v10 = *(unsigned __int8 *)(a2 + 48);
  v11 = *(unsigned __int8 *)(a2 + 49);
  v29 = *(unsigned __int8 *)(a2 + 50);
  v30 = *(unsigned __int8 *)(a1 + 50);
  v27 = *(unsigned __int8 *)(a2 + 51);
  v25 = *(unsigned __int8 *)(a2 + 52);
  v23 = *(unsigned __int8 *)(a2 + 53);
  v19 = *(_QWORD *)(a2 + 56);
  v20 = *(_QWORD *)(a1 + 56);
  v12 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  v21 = *(_BYTE *)(a2 + 64);
  if (v12 || (v13 = sub_1D451B820(), result = 0, (v13 & 1) != 0))
  {
    if (v2 == v6 && v3 == v7)
    {
      if (v4 != v9)
        return 0;
    }
    else
    {
      v16 = sub_1D451B820();
      result = 0;
      if ((v16 & 1) == 0 || v4 != v9)
        return result;
    }
    if (v5)
    {
      if (v8)
      {
        v17 = sub_1D42FE3B8(v5, v8);
        result = 0;
        if ((v17 & 1) == 0 || ((v32 ^ v10) & 1) != 0)
          return result;
LABEL_21:
        if (((v31 ^ v11) & 1) != 0
          || ((v30 ^ v29) & 1) != 0
          || ((v28 ^ v27) & 1) != 0
          || ((v26 ^ v25) & 1) != 0
          || ((v24 ^ v23) & 1) != 0)
        {
          return result;
        }
        if ((v22 & 1) != 0)
        {
          if ((v21 & 1) == 0)
            return 0;
        }
        else
        {
          v18 = v21;
          if (v20 != v19)
            v18 = 1;
          if ((v18 & 1) != 0)
            return 0;
        }
        return 1;
      }
    }
    else if (!v8)
    {
      result = 0;
      if (v32 != v10)
        return result;
      goto LABEL_21;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1D441A2D4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v9;

  v2 = a1 == 0x79726F6765746163 && a2 == 0xE800000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1701080941 && a2 == 0xE400000000000000;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000;
      if (v7 || (sub_1D451B820() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x4D6C656E6E616863 && a2 == 0xEA00000000007061;
        if (v8 || (sub_1D451B820() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000013 && a2 == 0x80000001D4557720 || (sub_1D451B820() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD000000000000021 && a2 == 0x80000001D4557740 || (sub_1D451B820() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else if (a1 == 0xD000000000000016 && a2 == 0x80000001D4557770 || (sub_1D451B820() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else if (a1 == 0xD00000000000002ALL && a2 == 0x80000001D4557790 || (sub_1D451B820() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 7;
        }
        else if (a1 == 0xD000000000000011 && a2 == 0x80000001D45577C0 || (sub_1D451B820() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 8;
        }
        else if (a1 == 0xD000000000000019 && a2 == 0x80000001D45577E0 || (sub_1D451B820() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 9;
        }
        else if (a1 == 0xD000000000000013 && a2 == 0x80000001D4557800)
        {
          swift_bridgeObjectRelease();
          return 10;
        }
        else
        {
          v9 = sub_1D451B820();
          swift_bridgeObjectRelease();
          if ((v9 & 1) != 0)
            return 10;
          else
            return 11;
        }
      }
    }
  }
}

uint64_t sub_1D441A6F0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D441A724 + 4 * a2[a1]))(0x79726F6765746163, 0xE800000000000000);
}

uint64_t sub_1D441A724()
{
  return 1701080941;
}

uint64_t sub_1D441A734()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_1D441A74C()
{
  return 0x4D6C656E6E616863;
}

unint64_t sub_1D441A768()
{
  return 0xD000000000000013;
}

void sub_1D441A7F0()
{
  JUMPOUT(0x1D441A804);
}

uint64_t sub_1D441A810()
{
  unsigned __int8 *v0;

  return sub_1D441A6F0(*v0);
}

uint64_t sub_1D441A818@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D441A2D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D441A83C()
{
  sub_1D441C23C();
  return sub_1D451BA3C();
}

uint64_t sub_1D441A864()
{
  sub_1D441C23C();
  return sub_1D451BA48();
}

void AudioConfiguration.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1D42BE910();
  v3 = v2;
  v4 = sub_1D42B28FC(&qword_1EFE51360);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1D42D7108();
  sub_1D42B5528(v3, v3[3]);
  sub_1D441C23C();
  sub_1D451BA24();
  sub_1D42CB9F8();
  sub_1D43B9EB0(&qword_1EFE51378, v6, MEMORY[0x1E0DEA970], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
  sub_1D451B760();
  if (!v0)
  {
    sub_1D42CB9F8();
    sub_1D43B9EB0(&qword_1EFE51388, v7, MEMORY[0x1E0DEA970], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
    sub_1D441C99C();
    sub_1D42CB9F8();
    sub_1D43B9EB0(&qword_1EFE51398, v8, MEMORY[0x1E0DEBBA0], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
    sub_1D441C99C();
    sub_1D42CB9F8();
    sub_1D43B9EB0((unint64_t *)&unk_1EFE512C0, v9, MEMORY[0x1E0DEB420], MEMORY[0x1E0DEAF10]);
    sub_1D441CA60();
    sub_1D441C9EC(4);
    sub_1D441C95C();
    sub_1D441C9EC(5);
    sub_1D441C95C();
    sub_1D441C9EC(6);
    sub_1D441C95C();
    sub_1D441C9EC(7);
    sub_1D441C95C();
    sub_1D441C9EC(8);
    sub_1D441C95C();
    sub_1D441C9EC(9);
    sub_1D441C95C();
    sub_1D441C278();
    sub_1D441CA60();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
  sub_1D42BE844();
}

uint64_t AudioConfiguration.hashValue.getter()
{
  sub_1D43F8904();
  sub_1D441CA6C();
  return sub_1D451B994();
}

void AudioConfiguration.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void (*v22)(char *, uint64_t);
  char v23;
  uint64_t v24;
  char v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  sub_1D42BE910();
  v2 = v1;
  v4 = v3;
  v5 = sub_1D42B28FC(&qword_1EFE513A8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42B5528(v2, v2[3]);
  sub_1D441C23C();
  sub_1D451BA0C();
  if (v0)
  {
    v10 = 8;
  }
  else
  {
    sub_1D42CB9F8();
    sub_1D43B9EB0(&qword_1EFE513B0, v9, MEMORY[0x1E0DEA9A0], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
    sub_1D441C9F8();
    v11 = v39;
    v37 = v38;
    sub_1D42CB9F8();
    v13 = sub_1D43B9EB0(&qword_1EFE513B8, v12, MEMORY[0x1E0DEA9A0], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
    swift_bridgeObjectRetain();
    sub_1D441C9F8();
    if (v13)
    {
      sub_1D441C96C();
      swift_bridgeObjectRelease();
      v10 = 9;
    }
    else
    {
      v35 = v4;
      v36 = v11;
      v14 = v38;
      v15 = v39;
      sub_1D42CB9F8();
      v17 = sub_1D43B9EB0((unint64_t *)&unk_1EFE513C0, v16, MEMORY[0x1E0DEBBC8], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
      swift_bridgeObjectRetain();
      sub_1D441CA0C();
      sub_1D441C9F8();
      if (!v17)
      {
        v34 = v14;
        v18 = v38;
        sub_1D42CB9F8();
        sub_1D43B9EB0(&qword_1EFE4DD80, v19, MEMORY[0x1E0DEB448], MEMORY[0x1E0DEAF40]);
        sub_1D441CA0C();
        sub_1D441CA54();
        v20 = v38;
        LOBYTE(v38) = 4;
        swift_bridgeObjectRetain();
        v40 = sub_1D451B658();
        v33 = sub_1D441C944(5);
        v32 = sub_1D441C944(6);
        v31 = sub_1D441C944(7);
        v30 = sub_1D441C944(8);
        v29 = sub_1D441C944(9);
        sub_1D441C2B4();
        sub_1D441CA54();
        v32 &= 1u;
        v33 &= 1u;
        v31 &= 1u;
        v21 = v30 & 1;
        v22 = *(void (**)(char *, uint64_t))(v6 + 8);
        v23 = v29 & 1;
        v22(v8, v5);
        v24 = v38;
        v25 = v39;
        v26 = v35;
        v27 = v36;
        *v35 = v37;
        v26[1] = v27;
        v26[2] = v34;
        v26[3] = v15;
        v26[4] = v18;
        v26[5] = v20;
        *((_BYTE *)v26 + 48) = v40 & 1;
        *((_BYTE *)v26 + 49) = v33;
        *((_BYTE *)v26 + 50) = v32;
        *((_BYTE *)v26 + 51) = v31;
        *((_BYTE *)v26 + 52) = v21;
        *((_BYTE *)v26 + 53) = v23;
        v26[7] = v24;
        *((_BYTE *)v26 + 64) = v25;
        sub_1D42CB9B4();
        sub_1D42D3258();
        sub_1D42CB8F4();
        goto LABEL_9;
      }
      sub_1D441C96C();
      sub_1D441C9E0();
      sub_1D42CB8F4();
      v10 = 11;
    }
  }
  sub_1D42CB9B4();
  if ((v10 & 1) == 0)
  {
    if ((v10 & 2) == 0)
      goto LABEL_9;
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  if (((v10 >> 1) & 1) != 0)
LABEL_8:
    sub_1D42CB8F4();
LABEL_9:
  swift_bridgeObjectRelease();
  sub_1D42BE844();
}

uint64_t sub_1D441B058()
{
  sub_1D451B958();
  AudioConfiguration.hash(into:)();
  return sub_1D451B994();
}

void sub_1D441B0EC()
{
  AudioConfiguration.init(from:)();
}

void sub_1D441B100()
{
  AudioConfiguration.encode(to:)();
}

void sub_1D441B148()
{
  sub_1D42CB6CC();
  sub_1D441CA3C();
  sub_1D42F2028();
  sub_1D42B6E24();
}

uint64_t sub_1D441B1C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_1D451A6EC();
  sub_1D441CA48();
  v3 = (_QWORD *)(v0 + OBJC_IVAR___SNAudioConfiguration_impl);
  *v3 = v1;
  v3[1] = v2;
  return sub_1D42CB514();
}

void sub_1D441B22C()
{
  sub_1D42CB6CC();
  sub_1D441CA3C();
  sub_1D42F2028();
  sub_1D42B6E24();
}

uint64_t sub_1D441B2A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D451A6EC();
  sub_1D441CA48();
  v3 = v0 + OBJC_IVAR___SNAudioConfiguration_impl;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  return sub_1D42CB514();
}

uint64_t sub_1D441B300()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___SNAudioConfiguration_impl + 32);
}

uint64_t sub_1D441B338(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 32) = result;
  return result;
}

uint64_t sub_1D441B360()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D441B3D4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D441B414()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___SNAudioConfiguration_impl + 48);
}

uint64_t sub_1D441B44C(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 48) = result;
  return result;
}

uint64_t sub_1D441B484()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___SNAudioConfiguration_impl + 49);
}

uint64_t sub_1D441B4BC(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 49) = result;
  return result;
}

uint64_t sub_1D441B4F4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___SNAudioConfiguration_impl + 50);
}

uint64_t sub_1D441B52C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___SNAudioConfiguration_impl + 51);
}

uint64_t sub_1D441B564()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___SNAudioConfiguration_impl + 52);
}

uint64_t sub_1D441B59C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___SNAudioConfiguration_impl + 53);
}

id sub_1D441B5C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), void *a4)
{
  if (a3())
  {
    sub_1D451A908();
    sub_1D42F2028();
  }
  else
  {
    a4 = 0;
  }
  return a4;
}

void sub_1D441B608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((*(_BYTE *)(v0 + OBJC_IVAR___SNAudioConfiguration_impl + 64) & 1) == 0)
  {
    v1 = *(_QWORD *)(v0 + OBJC_IVAR___SNAudioConfiguration_impl + 56);
    sub_1D42B28FC(qword_1EFE51438);
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1D45261D0;
    *(_QWORD *)(v2 + 32) = v1;
  }
  sub_1D42B6E24();
}

id sub_1D441B664()
{
  uint64_t v0;
  objc_class *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  char *v13;
  objc_super v15;

  v2 = (char *)sub_1D42B7238();
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_BYTE *)(v0 + 48);
  v6 = *(_BYTE *)(v0 + 49);
  v7 = *(_BYTE *)(v0 + 50);
  v8 = *(_BYTE *)(v0 + 51);
  v9 = *(_BYTE *)(v0 + 52);
  v10 = *(_BYTE *)(v0 + 53);
  v11 = *(_QWORD *)(v0 + 56);
  v12 = *(_BYTE *)(v0 + 64);
  v13 = &v2[OBJC_IVAR___SNAudioConfiguration_impl];
  *(_OWORD *)v13 = *(_OWORD *)v0;
  *((_QWORD *)v13 + 2) = v3;
  *((_QWORD *)v13 + 3) = v4;
  *((_OWORD *)v13 + 2) = *(_OWORD *)(v0 + 32);
  v13[48] = v5;
  v13[49] = v6;
  v13[50] = v7;
  v13[51] = v8;
  v13[52] = v9;
  v13[53] = v10;
  *((_QWORD *)v13 + 7) = v11;
  v13[64] = v12;
  v15.receiver = v2;
  v15.super_class = v1;
  return objc_msgSendSuper2(&v15, sel_init);
}

void sub_1D441B700()
{
  sub_1D42B7104();
  if (qword_1EFE48EF0 != -1)
    swift_once();
  sub_1D43FABD0();
  sub_1D441CA30();
  swift_bridgeObjectRetain();
  sub_1D42DCE84();
  sub_1D441B664();
  sub_1D441C9D4();
  sub_1D42CB708();
}

uint64_t SNAudioConfiguration.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0;
  sub_1D451B400();
  sub_1D441B148();
  v3 = v2;
  type metadata accessor for Category(0);
  sub_1D441C988();

  sub_1D451A794();
  sub_1D441B22C();
  v5 = v4;
  type metadata accessor for Mode(0);
  sub_1D441C988();

  sub_1D4311FA8();
  v6 = v1 + OBJC_IVAR___SNAudioConfiguration_impl;
  type metadata accessor for CategoryOptions(0);
  sub_1D441C988();
  sub_1D4311FA8();
  sub_1D441C97C();
  sub_1D42CB208();
  sub_1D4311FA8();
  sub_1D441CA24(*(unsigned __int8 *)(v6 + 50));
  sub_1D441C97C();
  sub_1D42CB208();
  sub_1D4311FA8();
  sub_1D441CA24(*(unsigned __int8 *)(v6 + 51));
  sub_1D441C97C();
  sub_1D42CB208();
  sub_1D4311FA8();
  sub_1D441CA24(*(unsigned __int8 *)(v6 + 52));
  sub_1D441C97C();
  sub_1D42CB208();
  sub_1D4311FA8();
  sub_1D441CA24(*(unsigned __int8 *)(v6 + 53));
  sub_1D441C97C();
  sub_1D42CB208();
  sub_1D441C9BC();
  sub_1D441B608();
  sub_1D42B28FC((uint64_t *)&unk_1EFE513E0);
  sub_1D451A728();
  sub_1D451A794();
  sub_1D42BE8B4();
  sub_1D441C9BC();
  sub_1D441CA24(*(unsigned __int8 *)(v6 + 48));
  sub_1D451A794();
  sub_1D42BE8B4();
  sub_1D451A794();
  if (*(_QWORD *)(v6 + 40))
  {
    v7 = sub_1D42CB6CC();
    MEMORY[0x1D825C280](v7, MEMORY[0x1E0DEB418]);
    swift_bridgeObjectRelease();
  }
  sub_1D451A794();
  swift_bridgeObjectRelease();
  return 0;
}

void SNAudioConfiguration.copy(with:)(_QWORD *a1@<X8>)
{
  uint64_t v2;
  id v3;

  v2 = sub_1D42B7104();
  sub_1D43FABD0();
  sub_1D441CA30();
  sub_1D42CB6CC();
  sub_1D42DCE84();
  v3 = sub_1D441B664();
  a1[3] = v2;
  *a1 = v3;
  sub_1D42CB708();
}

uint64_t SNAudioConfiguration.hash.getter()
{
  uint64_t v0;

  sub_1D43FABD0();
  sub_1D43F8904();
  sub_1D42DCE84();
  sub_1D42CB7B8();
  swift_bridgeObjectRetain();
  sub_1D441CA6C();
  v0 = sub_1D451B994();
  sub_1D42CB208();
  swift_bridgeObjectRelease();
  sub_1D42BE8B4();
  return v0;
}

uint64_t SNAudioConfiguration.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  char v23;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  uint64_t v47;
  char v48;
  _OWORD v49[2];
  __int128 v50;
  uint64_t v51;

  sub_1D42B7104();
  sub_1D42B28B4(a1, (uint64_t)&v50);
  if (v51)
  {
    sub_1D42B293C(&v50, v49);
    sub_1D42B294C((uint64_t)v49, (uint64_t)&v37);
    if (swift_dynamicCast())
    {
      v3 = (void *)v25;
      v4 = *(_QWORD *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 16);
      v5 = *(_QWORD *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 24);
      v6 = *(_BYTE *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 48);
      v7 = *(_BYTE *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 49);
      v8 = *(_BYTE *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 50);
      v9 = *(_BYTE *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 51);
      v10 = *(_BYTE *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 52);
      v11 = *(_BYTE *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 53);
      v12 = *(_QWORD *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 56);
      v13 = *(_BYTE *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 64);
      v37 = *(_OWORD *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl);
      v38 = v4;
      v39 = v5;
      v40 = *(_OWORD *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 32);
      v41 = v6;
      v42 = v7;
      v43 = v8;
      v44 = v9;
      v45 = v10;
      v46 = v11;
      v47 = v12;
      v48 = v13;
      v14 = v25 + OBJC_IVAR___SNAudioConfiguration_impl;
      v15 = *(_QWORD *)(v25 + OBJC_IVAR___SNAudioConfiguration_impl + 16);
      v16 = *(_QWORD *)(v25 + OBJC_IVAR___SNAudioConfiguration_impl + 24);
      LOBYTE(v5) = *(_BYTE *)(v25 + OBJC_IVAR___SNAudioConfiguration_impl + 48);
      v17 = *(_BYTE *)(v25 + OBJC_IVAR___SNAudioConfiguration_impl + 49);
      v18 = *(_BYTE *)(v25 + OBJC_IVAR___SNAudioConfiguration_impl + 50);
      v19 = *(_BYTE *)(v25 + OBJC_IVAR___SNAudioConfiguration_impl + 51);
      v20 = *(_BYTE *)(v25 + OBJC_IVAR___SNAudioConfiguration_impl + 52);
      v21 = *(_BYTE *)(v25 + OBJC_IVAR___SNAudioConfiguration_impl + 53);
      v22 = *(_QWORD *)(v25 + OBJC_IVAR___SNAudioConfiguration_impl + 56);
      LOBYTE(v12) = *(_BYTE *)(v25 + OBJC_IVAR___SNAudioConfiguration_impl + 64);
      v25 = *(_OWORD *)(v25 + OBJC_IVAR___SNAudioConfiguration_impl);
      v26 = v15;
      v27 = v16;
      v28 = *(_OWORD *)(v14 + 32);
      v29 = v5;
      v30 = v17;
      v31 = v18;
      v32 = v19;
      v33 = v20;
      v34 = v21;
      v35 = v22;
      v36 = v12;
      v23 = static AudioConfiguration.== infix(_:_:)((uint64_t)&v37, (uint64_t)&v25);

    }
    else
    {
      v23 = 0;
    }
    sub_1D42B5400((uint64_t)v49);
  }
  else
  {
    v23 = 0;
  }
  return v23 & 1;
}

void SNAudioConfiguration.__allocating_init(coder:)()
{
  void *v0;

  sub_1D42B7238();
  SNAudioConfiguration.init(coder:)(v0);
  sub_1D42B6E24();
}

id SNAudioConfiguration.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  id v4;

  v3 = v1;
  sub_1D42B1D64();
  swift_getObjectType();

  v4 = sub_1D441B664();
  sub_1D441C9D4();
  return v4;
}

Swift::Void __swiftcall SNAudioConfiguration.encode(with:)(NSCoder with)
{
  uint64_t v1;
  _BYTE __dst[72];

  memcpy(__dst, (const void *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl), 0x41uLL);
  sub_1D42B5B38((uint64_t)__dst);
  sub_1D42B01C4(__dst, 1819307369, 0xE400000000000000, with.super.isa);
  sub_1D42BDEAC((uint64_t)__dst);
  sub_1D42CB708();
}

uint64_t static SNAudioConfiguration.supportsSecureCoding.getter()
{
  return 1;
}

id SNAudioConfiguration.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1D42B7104();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D441C1A0()
{
  sub_1D451A6EC();
  sub_1D451A6EC();
  sub_1D441B664();
  sub_1D42CB708();
}

unint64_t sub_1D441C23C()
{
  unint64_t result;

  result = qword_1EFE51368;
  if (!qword_1EFE51368)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453CC44, &type metadata for AudioConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51368);
  }
  return result;
}

unint64_t sub_1D441C278()
{
  unint64_t result;

  result = qword_1EFE513A0;
  if (!qword_1EFE513A0)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for AudioSessionAudioHardwareControlFlags, &type metadata for AudioSessionAudioHardwareControlFlags);
    atomic_store(result, (unint64_t *)&qword_1EFE513A0);
  }
  return result;
}

unint64_t sub_1D441C2B4()
{
  unint64_t result;

  result = qword_1EFE513D0;
  if (!qword_1EFE513D0)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for AudioSessionAudioHardwareControlFlags, &type metadata for AudioSessionAudioHardwareControlFlags);
    atomic_store(result, (unint64_t *)&qword_1EFE513D0);
  }
  return result;
}

unint64_t sub_1D441C2F4()
{
  unint64_t result;

  result = qword_1EFE513F0;
  if (!qword_1EFE513F0)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for AudioSessionAudioHardwareControlFlags, &type metadata for AudioSessionAudioHardwareControlFlags);
    atomic_store(result, (unint64_t *)&qword_1EFE513F0);
  }
  return result;
}

unint64_t sub_1D441C334()
{
  unint64_t result;

  result = qword_1EFE513F8;
  if (!qword_1EFE513F8)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for AudioConfiguration, &type metadata for AudioConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EFE513F8);
  }
  return result;
}

