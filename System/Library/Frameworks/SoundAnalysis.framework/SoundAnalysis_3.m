ValueMetadata *type metadata accessor for AudioSessionAudioHardwareControlFlags()
{
  return &type metadata for AudioSessionAudioHardwareControlFlags;
}

uint64_t destroy for AudioConfiguration()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AudioConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_WORD *)(a1 + 52) = *(_WORD *)(a2 + 52);
  v6 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AudioConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_BYTE *)(a1 + 51) = *(_BYTE *)(a2 + 51);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  *(_BYTE *)(a1 + 53) = *(_BYTE *)(a2 + 53);
  v4 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v4;
  return a1;
}

void *initializeWithTake for AudioConfiguration(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x41uLL);
}

uint64_t assignWithTake for AudioConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_BYTE *)(a1 + 51) = *(_BYTE *)(a2 + 51);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  *(_BYTE *)(a1 + 53) = *(_BYTE *)(a2 + 53);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 65))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioConfiguration()
{
  return &type metadata for AudioConfiguration;
}

uint64_t type metadata accessor for SNAudioConfiguration()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNAudioConfiguration()
{
  return swift_lookUpClassMethod();
}

uint64_t storeEnumTagSinglePayload for AudioConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1D441C6A8 + 4 * byte_1D453C890[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1D441C6DC + 4 * byte_1D453C88B[v4]))();
}

uint64_t sub_1D441C6DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D441C6E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D441C6ECLL);
  return result;
}

uint64_t sub_1D441C6F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D441C700);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1D441C704(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D441C70C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioConfiguration.CodingKeys()
{
  return &type metadata for AudioConfiguration.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for AudioSessionAudioHardwareControlFlags.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D441C768 + 4 * byte_1D453C895[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D441C788 + 4 * byte_1D453C89A[v4]))();
}

_BYTE *sub_1D441C768(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D441C788(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D441C790(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D441C798(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D441C7A0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D441C7A8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AudioSessionAudioHardwareControlFlags.CodingKeys()
{
  return &type metadata for AudioSessionAudioHardwareControlFlags.CodingKeys;
}

unint64_t sub_1D441C7C8()
{
  unint64_t result;

  result = qword_1EFE51408;
  if (!qword_1EFE51408)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453CB64, &type metadata for AudioSessionAudioHardwareControlFlags.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51408);
  }
  return result;
}

unint64_t sub_1D441C808()
{
  unint64_t result;

  result = qword_1EFE51410;
  if (!qword_1EFE51410)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453CC1C, &type metadata for AudioConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51410);
  }
  return result;
}

unint64_t sub_1D441C848()
{
  unint64_t result;

  result = qword_1EFE51418;
  if (!qword_1EFE51418)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453CB8C, &type metadata for AudioConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51418);
  }
  return result;
}

unint64_t sub_1D441C888()
{
  unint64_t result;

  result = qword_1EFE51420;
  if (!qword_1EFE51420)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453CBB4, &type metadata for AudioConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51420);
  }
  return result;
}

unint64_t sub_1D441C8C8()
{
  unint64_t result;

  result = qword_1EFE51428;
  if (!qword_1EFE51428)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453CAD4, &type metadata for AudioSessionAudioHardwareControlFlags.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51428);
  }
  return result;
}

unint64_t sub_1D441C908()
{
  unint64_t result;

  result = qword_1EFE51430;
  if (!qword_1EFE51430)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453CAFC, &type metadata for AudioSessionAudioHardwareControlFlags.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51430);
  }
  return result;
}

uint64_t sub_1D441C944@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 96) = a1;
  return sub_1D451B658();
}

uint64_t sub_1D441C95C()
{
  return sub_1D451B730();
}

uint64_t sub_1D441C96C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1D441C97C()
{
  return sub_1D451A794();
}

uint64_t sub_1D441C988()
{
  return sub_1D451B514();
}

uint64_t sub_1D441C99C()
{
  return sub_1D451B760();
}

uint64_t sub_1D441C9BC()
{
  return sub_1D451A794();
}

uint64_t sub_1D441C9D4()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1D441C9E0()
{
  return swift_bridgeObjectRelease();
}

void sub_1D441C9EC(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 96) = a1;
}

uint64_t sub_1D441C9F8()
{
  return sub_1D451B688();
}

uint64_t sub_1D441CA04@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  *a2 = v2;
  a2[1] = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D441CA0C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D441CA24@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  if (a1)
    return v1;
  else
    return v2;
}

uint64_t sub_1D441CA30()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D441CA3C()
{
  return sub_1D451A6C8();
}

void sub_1D441CA48()
{
  void *v0;

}

uint64_t sub_1D441CA54()
{
  return sub_1D451B640();
}

uint64_t sub_1D441CA60()
{
  return sub_1D451B718();
}

uint64_t sub_1D441CA6C()
{
  return AudioConfiguration.hash(into:)();
}

uint64_t sub_1D441CA78()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1D441CAFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

void sub_1D441CB14(uint64_t a1)
{
  MEMORY[0x1E0C80A78](a1);
  sub_1D42CB210();
  type metadata accessor for ExpandResult.Inner();
}

uint64_t sub_1D441CB80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v2, v1);
  *(_QWORD *)(v5 - 112) = sub_1D441CC00(v3);
  MEMORY[0x1D825E41C](&unk_1D453CEF8, a1);
  sub_1D451A3F8();
  return swift_release();
}

uint64_t sub_1D441CC00(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1D441CD60(a1);
  return v2;
}

uint64_t sub_1D441CC3C(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1D42E33E0(a1, v2 + 16);
  return v2;
}

uint64_t sub_1D441CC7C()
{
  uint64_t v0;

  sub_1D42B5528((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  return sub_1D451A1DC();
}

uint64_t sub_1D441CCC4()
{
  uint64_t v0;

  sub_1D42B5528((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  return sub_1D451A17C();
}

uint64_t sub_1D441CCFC()
{
  uint64_t v0;

  sub_1D42B5400(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1D441CD20()
{
  return sub_1D441CC7C();
}

uint64_t sub_1D441CD40()
{
  return sub_1D441CCC4();
}

uint64_t *sub_1D441CD60(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_weakInit();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 104) - 8) + 32))((uint64_t)v1 + *(_QWORD *)(*v1 + 128), a1);
  swift_weakAssign();
  *((_BYTE *)v1 + *(_QWORD *)(*v1 + 144)) = 0;
  return v1;
}

void sub_1D441CDDC()
{
  type metadata accessor for ExpandResult.Inner.WrappedSubscription();
}

uint64_t sub_1D441CE2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;

  sub_1D42E2D8C(v1, (uint64_t)&v5);
  v3 = sub_1D441CC3C(&v5);
  swift_weakAssign();
  v6 = a1;
  v7 = MEMORY[0x1D825E41C](&unk_1D453CE98, a1);
  *(_QWORD *)&v5 = v3;
  swift_retain();
  sub_1D451A164();
  swift_release();
  return sub_1D42B5400((uint64_t)&v5);
}

uint64_t sub_1D441CECC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = v1;
  v32 = a1;
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 96);
  swift_getAssociatedConformanceWitness();
  v5 = sub_1D451A188();
  v30 = *(_QWORD *)(v5 - 8);
  v31 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v29 = (char *)&v29 - v7;
  v8 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1D42CB210();
  v11 = v10 - v9;
  v12 = *(_QWORD *)(v3 + 88);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v14);
  sub_1D42CB210();
  v17 = v16 - v15;
  v18 = sub_1D451B9E8();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v29 - v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))((char *)&v29 - v19, v32, v18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v23 = (uint64_t)v29;
    v22 = v30;
    v24 = v31;
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v11, v20, v4);
    v25 = *(_QWORD *)(*v2 + 144);
    v26 = v11;
    if ((*((_BYTE *)v2 + v25) & 1) == 0)
    {
      *((_BYTE *)v2 + v25) = 1;
      if (swift_weakLoadStrong())
      {
        sub_1D441CCC4();
        swift_release();
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v23, v11, v4);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v23, 0, 1, v4);
      sub_1D451A158();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v24);
    }
    v27 = sub_1D451A1AC();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v26, v4);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v17, v20, v12);
    v27 = sub_1D451A170();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v17, v12);
  }
  return v27;
}

uint64_t sub_1D441D148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 144);
  if ((*(_BYTE *)(v0 + v1) & 1) == 0)
  {
    *(_BYTE *)(v0 + v1) = 1;
    return sub_1D451A158();
  }
  return result;
}

uint64_t sub_1D441D190()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 104) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128));
  swift_weakDestroy();
  return v0;
}

uint64_t sub_1D441D1D0()
{
  sub_1D441D190();
  return swift_deallocClassInstance();
}

void type metadata accessor for ExpandResult.Inner()
{
  JUMPOUT(0x1D825E3A4);
}

uint64_t sub_1D441D200()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for ExpandResult.Inner.WrappedSubscription()
{
  JUMPOUT(0x1D825E3A4);
}

uint64_t sub_1D441D24C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1D441D2FC + 4 * byte_1D453CD00[(v8 - 1)]))();
}

void sub_1D441D348(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0u;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

void type metadata accessor for ExpandResult()
{
  JUMPOUT(0x1D825E3A4);
}

uint64_t sub_1D441D4FC()
{
  return swift_getAssociatedConformanceWitness();
}

void sub_1D441D51C()
{
  sub_1D441CDDC();
}

uint64_t sub_1D441D53C(uint64_t a1)
{
  return sub_1D441CECC(a1);
}

uint64_t sub_1D441D55C()
{
  return sub_1D441D148();
}

void sub_1D441D57C(uint64_t a1)
{
  sub_1D441CB14(a1);
}

void sub_1D441D590()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D441D5A0()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D441D5B0()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D441D5C0()
{
  return swift_getAssociatedConformanceWitness();
}

double SNSpeechEmotionResult.timeRange.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = v1 + OBJC_IVAR___SNSpeechEmotionResult_impl;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 40);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(v2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 + 16);
  result = *(double *)(v2 + 32);
  *(double *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v3;
  return result;
}

double SNSpeechEmotionResult.timeRange.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = v1 + OBJC_IVAR___SNSpeechEmotionResult_impl;
  *(_QWORD *)v3 = *(_QWORD *)a1;
  *(_QWORD *)(v3 + 8) = *(_QWORD *)(a1 + 8);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a1 + 16);
  result = *(double *)(a1 + 32);
  *(double *)(v3 + 32) = result;
  *(_QWORD *)(v3 + 40) = v2;
  return result;
}

double (*SNSpeechEmotionResult.timeRange.modify(_QWORD *a1))(void **a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  SNSpeechEmotionResult.timeRange.getter((uint64_t)v3);
  return sub_1D441D74C;
}

double sub_1D441D74C(void **a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  double result;

  v1 = *a1;
  v2 = v1[5];
  v3 = v1[6] + OBJC_IVAR___SNSpeechEmotionResult_impl;
  v4 = v1[1];
  v5 = v1[4];
  v6 = *((_OWORD *)v1 + 1);
  *(_QWORD *)v3 = *v1;
  *(_QWORD *)(v3 + 8) = v4;
  *(_OWORD *)(v3 + 16) = v6;
  *(_QWORD *)(v3 + 32) = v5;
  *(_QWORD *)(v3 + 40) = v2;
  free(v1);
  return result;
}

double SNSpeechEmotionResult.confidence.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___SNSpeechEmotionResult_impl + 48);
}

void SNSpeechEmotionResult.confidence.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 48) = a1;
}

double (*SNSpeechEmotionResult.confidence.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR___SNSpeechEmotionResult_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(_QWORD *)(v1 + v2 + 48);
  return sub_1D4315264;
}

double SNSpeechEmotionResult.mood.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___SNSpeechEmotionResult_impl + 56);
}

void SNSpeechEmotionResult.mood.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 56) = a1;
}

double (*SNSpeechEmotionResult.mood.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR___SNSpeechEmotionResult_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(_QWORD *)(v1 + v2 + 56);
  return sub_1D439EED0;
}

double SNSpeechEmotionResult.valence.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___SNSpeechEmotionResult_impl + 64);
}

void SNSpeechEmotionResult.valence.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 64) = a1;
}

double (*SNSpeechEmotionResult.valence.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR___SNSpeechEmotionResult_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(_QWORD *)(v1 + v2 + 64);
  return sub_1D441D938;
}

double sub_1D441D938(uint64_t a1)
{
  double result;

  result = *(double *)a1;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + *(_QWORD *)(a1 + 16) + 64) = *(_QWORD *)a1;
  return result;
}

double SNSpeechEmotionResult.arousal.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___SNSpeechEmotionResult_impl + 72);
}

void SNSpeechEmotionResult.arousal.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 72) = a1;
}

double (*SNSpeechEmotionResult.arousal.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR___SNSpeechEmotionResult_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(_QWORD *)(v1 + v2 + 72);
  return sub_1D441D9DC;
}

double sub_1D441D9DC(uint64_t a1)
{
  double result;

  result = *(double *)a1;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + *(_QWORD *)(a1 + 16) + 72) = *(_QWORD *)a1;
  return result;
}

double SNSpeechEmotionResult.dominance.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___SNSpeechEmotionResult_impl + 80);
}

void SNSpeechEmotionResult.dominance.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 80) = a1;
}

double (*SNSpeechEmotionResult.dominance.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR___SNSpeechEmotionResult_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(_QWORD *)(v1 + v2 + 80);
  return sub_1D441DA80;
}

double sub_1D441DA80(uint64_t a1)
{
  double result;

  result = *(double *)a1;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + *(_QWORD *)(a1 + 16) + 80) = *(_QWORD *)a1;
  return result;
}

void SNSpeechEmotionResult.modelIdentifier.getter()
{
  swift_bridgeObjectRetain();
  sub_1D42B6E24();
}

uint64_t SNSpeechEmotionResult.modelIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR___SNSpeechEmotionResult_impl;
  *(_QWORD *)(v3 + 88) = a1;
  *(_QWORD *)(v3 + 96) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D441DB78(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return SNSpeechEmotionResult.modelIdentifier.setter(v1, v2);
}

void SNSpeechEmotionResult.modelIdentifier.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 96);
  *a1 = *(_QWORD *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 88);
  a1[1] = v3;
  swift_bridgeObjectRetain();
  sub_1D42B6E24();
}

uint64_t sub_1D441DBF8(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
    return sub_1D441F0FC();
  swift_bridgeObjectRetain();
  sub_1D441F0FC();
  return swift_bridgeObjectRelease();
}

id sub_1D441DC48()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v11;

  sub_1D42B7104();
  sub_1D441F070(MEMORY[0x1E0CA2E40]);
  *(_QWORD *)(v2 + 40) = v1;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_QWORD *)(v2 + 96) = 0xE000000000000000;
  v11.receiver = v0;
  v11.super_class = v3;
  return sub_1D42CB364((uint64_t)v3, sel_init, v4, v5, v6, v7, v8, v9, v11);
}

id sub_1D441DCC8(double a1, double a2, double a3, double a4)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  objc_super v19;

  sub_1D42B7104();
  sub_1D441F070(MEMORY[0x1E0CA2E40]);
  *(_QWORD *)(v10 + 40) = v9;
  *(_QWORD *)(v10 + 48) = 0;
  *(double *)(v10 + 56) = a1;
  *(double *)(v10 + 64) = a2;
  *(double *)(v10 + 72) = a3;
  *(double *)(v10 + 80) = a4;
  *(_QWORD *)(v10 + 88) = 0;
  *(_QWORD *)(v10 + 96) = 0xE000000000000000;
  v19.receiver = v4;
  v19.super_class = v11;
  return sub_1D42CB364((uint64_t)v11, sel_init, v12, v13, v14, v15, v16, v17, v19);
}

id sub_1D441DD64()
{
  uint64_t v0;
  objc_class *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  objc_super v16;

  v2 = (char *)sub_1D42B7238();
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 96);
  v7 = &v2[OBJC_IVAR___SNSpeechEmotionResult_impl];
  *(_QWORD *)v7 = *(_QWORD *)v0;
  *((_QWORD *)v7 + 1) = *(_QWORD *)(v0 + 8);
  *((_OWORD *)v7 + 1) = *(_OWORD *)(v0 + 16);
  *((_QWORD *)v7 + 4) = *(_QWORD *)(v0 + 32);
  *((_QWORD *)v7 + 5) = v3;
  v8 = *(_OWORD *)(v0 + 64);
  *((_OWORD *)v7 + 3) = *(_OWORD *)(v0 + 48);
  *((_OWORD *)v7 + 4) = v8;
  *((_QWORD *)v7 + 10) = v4;
  *((_QWORD *)v7 + 11) = v5;
  *((_QWORD *)v7 + 12) = v6;
  v16.receiver = v2;
  v16.super_class = v1;
  return sub_1D42CB364((uint64_t)v2, sel_init, v9, v10, v11, v12, v13, v14, v16);
}

id SNSpeechEmotionResult.copy(with:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  id result;

  v3 = sub_1D42B7104();
  sub_1D441F0C4(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl);
  swift_bridgeObjectRetain();
  result = sub_1D441DD64();
  a1[3] = v3;
  *a1 = result;
  return result;
}

uint64_t SNSpeechEmotionResult.hash.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D441F0C4(v0 + OBJC_IVAR___SNSpeechEmotionResult_impl);
  sub_1D451B958();
  swift_bridgeObjectRetain();
  sub_1D44CF744();
  v1 = sub_1D451B994();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t SNSpeechEmotionResult.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  float64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  float64_t v13;
  uint64_t v14;
  char v15;
  float64x2_t v17[2];
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  float64x2_t v25[2];
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD v33[2];
  __int128 v34;
  uint64_t v35;

  sub_1D42B7104();
  sub_1D42B28B4(a1, (uint64_t)&v34);
  if (v35)
  {
    sub_1D42B293C(&v34, v33);
    sub_1D42B294C((uint64_t)v33, (uint64_t)v25);
    if (swift_dynamicCast())
    {
      v3 = v17[0].f64[0];
      v4 = *(_QWORD *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 40);
      v5 = *(_QWORD *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 80);
      v6 = *(_QWORD *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 88);
      v7 = *(_QWORD *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 96);
      v25[0] = *(float64x2_t *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl);
      v25[1] = *(float64x2_t *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 16);
      v26 = *(_QWORD *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 32);
      v27 = v4;
      v8 = *(_OWORD *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 64);
      v28 = *(_OWORD *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 48);
      v29 = v8;
      v30 = v5;
      v31 = v6;
      v32 = v7;
      v9 = sub_1D441F0C4(*(_QWORD *)&v17[0].f64[0] + OBJC_IVAR___SNSpeechEmotionResult_impl);
      v11 = *(_QWORD *)(v10 + 88);
      v12 = *(_QWORD *)(v10 + 96);
      v17[0].f64[0] = v13;
      v17[0].f64[1] = *(float64_t *)(v10 + 8);
      v17[1] = *(float64x2_t *)(v10 + 16);
      v18 = *(_QWORD *)(v10 + 32);
      v19 = v14;
      v20 = *(_OWORD *)(v10 + 48);
      v21 = *(_OWORD *)(v10 + 64);
      v22 = v9;
      v23 = v11;
      v24 = v12;
      v15 = sub_1D44CF848(v25, v17);

    }
    else
    {
      v15 = 0;
    }
    sub_1D42B5400((uint64_t)v33);
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

id SNSpeechEmotionResult.__allocating_init(coder:)()
{
  void *v0;

  sub_1D42B7238();
  return SNSpeechEmotionResult.init(coder:)(v0);
}

id SNSpeechEmotionResult.init(coder:)(void *a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  char *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  __int128 v32;
  objc_super v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1D42CB340((uint64_t)ObjectType, (unint64_t *)&qword_1EFE47310);
  v5 = v2;
  v6 = sub_1D451B0D0();
  if (v6)
  {
    v7 = (void *)v6;
    v8 = (void *)sub_1D441F0D4();
    sub_1D441F044();
    v10 = v9;

    v11 = (void *)sub_1D441F0AC();
    sub_1D441F044();
    v13 = v12;

    v14 = (void *)sub_1D441F094();
    sub_1D441F044();
    v16 = v15;

    v17 = (void *)sub_1D441F054();
    sub_1D441F044();
    v19 = v18;

    v20 = (void *)sub_1D43340DC();
    sub_1D441F044();
    v22 = v21;

    sub_1D42CB340(v23, &qword_1EFE4BE88);
    v24 = (void *)sub_1D451B0D0();
    if (v24)
    {
      v34 = 0;
      v35 = 0;
      sub_1D451A6E0();

    }
    objc_msgSend(v7, sel_CMTimeRangeValue);
    v26 = v34;
    v27 = v38;
    v28 = v35;
    v29 = v37;
    v32 = v36;

    v30 = &v5[OBJC_IVAR___SNSpeechEmotionResult_impl];
    *(_QWORD *)v30 = v26;
    *((_QWORD *)v30 + 1) = v28;
    *((_OWORD *)v30 + 1) = v32;
    *((_QWORD *)v30 + 4) = v29;
    *((_QWORD *)v30 + 5) = v27;
    *((_QWORD *)v30 + 6) = v22;
    *((_QWORD *)v30 + 7) = v10;
    *((_QWORD *)v30 + 8) = v13;
    *((_QWORD *)v30 + 9) = v16;
    *((_QWORD *)v30 + 10) = v19;
    *((_QWORD *)v30 + 11) = 0;
    *((_QWORD *)v30 + 12) = 0xE000000000000000;

    v33.receiver = v5;
    v33.super_class = ObjectType;
    v25 = objc_msgSendSuper2(&v33, sel_init);

  }
  else
  {

    sub_1D4334124();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v25;
}

Swift::Void __swiftcall SNSpeechEmotionResult.encode(with:)(NSCoder with)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  _QWORD v16[6];
  _QWORD v17[6];

  SNSpeechEmotionResult.timeRange.getter((uint64_t)v17);
  v2 = v17[0];
  v3 = v17[2];
  v4 = v17[3];
  v5 = v17[5];
  v6 = (void *)objc_opt_self();
  v16[0] = v2;
  v16[1] = v17[1];
  v16[2] = v3;
  v16[3] = v4;
  v16[4] = v17[4];
  v16[5] = v5;
  v7 = objc_msgSend(v6, sel_valueWithCMTimeRange_, v16);
  v8 = (void *)sub_1D451A6C8();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v7, v8);

  v9 = (void *)sub_1D441F0D4();
  sub_1D441F030();

  v10 = (void *)sub_1D441F0AC();
  sub_1D441F030();

  v11 = (void *)sub_1D441F094();
  sub_1D441F030();

  v12 = (void *)sub_1D441F054();
  sub_1D441F030();

  v13 = (void *)sub_1D43340DC();
  sub_1D441F030();

  sub_1D42CB7F8();
  v14 = (void *)sub_1D451A6C8();
  swift_bridgeObjectRelease();
  v15 = (void *)sub_1D451A6C8();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v14, v15);

}

uint64_t static SNSpeechEmotionResult.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t SNSpeechEmotionResult.description.getter()
{
  void *v0;
  objc_class *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  _QWORD v11[6];
  objc_super v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = (objc_class *)sub_1D42B7104();
  v15 = 0;
  v16 = 0xE000000000000000;
  sub_1D451B400();
  v13 = 0;
  v14 = 0xE000000000000000;
  v12.receiver = v0;
  v12.super_class = v1;
  v2 = objc_msgSendSuper2(&v12, sel_description);
  sub_1D451A6EC();
  sub_1D42B722C();
  sub_1D42B7190();
  swift_bridgeObjectRelease();
  sub_1D451A794();
  sub_1D4360578();
  sub_1D441F0E4();
  sub_1D451A794();
  sub_1D4360578();
  sub_1D441F0E4();
  sub_1D451A794();
  sub_1D4360578();
  sub_1D441F0E4();
  sub_1D451A794();
  sub_1D4360578();
  sub_1D441F0E4();
  sub_1D451A794();
  sub_1D4360578();
  sub_1D441F0E4();
  sub_1D451A794();
  SNSpeechEmotionResult.timeRange.getter((uint64_t)&v15);
  v3 = v15;
  v4 = v17;
  v5 = v18;
  v6 = v20;
  v7 = (void *)objc_opt_self();
  v11[0] = v3;
  v11[1] = v16;
  v11[2] = v4;
  v11[3] = v5;
  v11[4] = v19;
  v11[5] = v6;
  v8 = objc_msgSend(v7, sel_valueWithCMTimeRange_, v11);
  v9 = objc_msgSend(v8, sel_description);
  sub_1D451A6EC();
  sub_1D42B722C();
  sub_1D42B7190();

  swift_bridgeObjectRelease();
  sub_1D451A794();
  sub_1D42CB7F8();
  sub_1D451A794();
  swift_bridgeObjectRelease();
  return v13;
}

void sub_1D441E8AC()
{
  objc_class *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;

  v1 = objc_allocWithZone(v0);
  v2 = sub_1D4334124();
  sub_1D441E8E0(v2, v3);
  sub_1D42CB15C();
}

id sub_1D441E8E0(uint64_t a1, unint64_t a2)
{
  void *v2;
  objc_class *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  void *v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  objc_super v31;

  v5 = (objc_class *)sub_1D42B7104();
  sub_1D42CB340((uint64_t)v5, (unint64_t *)&unk_1EFE4BEF0);
  v6 = v2;
  v7 = sub_1D451AF98();
  v14 = (void *)v7;
  if (v7)
  {
    v15 = v7 + OBJC_IVAR___SNSpeechEmotionResult_impl;
    v16 = *(_QWORD *)(v7 + OBJC_IVAR___SNSpeechEmotionResult_impl);
    v18 = *(_QWORD *)(v7 + OBJC_IVAR___SNSpeechEmotionResult_impl + 16);
    v17 = *(_QWORD *)(v7 + OBJC_IVAR___SNSpeechEmotionResult_impl + 24);
    v30 = *(_QWORD *)(v7 + OBJC_IVAR___SNSpeechEmotionResult_impl + 40);
    v28 = *(_OWORD *)(v7 + OBJC_IVAR___SNSpeechEmotionResult_impl + 64);
    v29 = *(_OWORD *)(v7 + OBJC_IVAR___SNSpeechEmotionResult_impl + 48);
    v19 = *(_QWORD *)(v7 + OBJC_IVAR___SNSpeechEmotionResult_impl + 80);
    v20 = *(_QWORD *)(v7 + OBJC_IVAR___SNSpeechEmotionResult_impl + 96);
    v27 = *(_QWORD *)(v7 + OBJC_IVAR___SNSpeechEmotionResult_impl + 88);
    sub_1D42CB7F8();
    v21 = *(_QWORD *)(v15 + 8);
    v22 = *(_QWORD *)(v15 + 32);

    v23 = &v6[OBJC_IVAR___SNSpeechEmotionResult_impl];
    *(_QWORD *)v23 = v16;
    *((_QWORD *)v23 + 1) = v21;
    *((_QWORD *)v23 + 2) = v18;
    *((_QWORD *)v23 + 3) = v17;
    *((_QWORD *)v23 + 4) = v22;
    *((_QWORD *)v23 + 5) = v30;
    *((_OWORD *)v23 + 3) = v29;
    *((_OWORD *)v23 + 4) = v28;
    *((_QWORD *)v23 + 10) = v19;
    *((_QWORD *)v23 + 11) = v27;
    *((_QWORD *)v23 + 12) = v20;
  }
  else
  {
    sub_1D441EF18();
    v26 = (void *)swift_allocError();
    swift_willThrow();
    sub_1D44734B4(0xD000000000000046, 0x80000001D4557890);
    v8 = MEMORY[0x1E0CA2E40];
    v9 = *MEMORY[0x1E0CA2E40];
    v10 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 16);
    v11 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 24);
    v12 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 40);

    v13 = &v6[OBJC_IVAR___SNSpeechEmotionResult_impl];
    *(_QWORD *)v13 = v9;
    *((_QWORD *)v13 + 1) = *(_QWORD *)(v8 + 8);
    *((_QWORD *)v13 + 2) = v10;
    *((_QWORD *)v13 + 3) = v11;
    *((_QWORD *)v13 + 4) = *(_QWORD *)(v8 + 32);
    *((_QWORD *)v13 + 5) = v12;
    *((_OWORD *)v13 + 3) = 0u;
    *((_OWORD *)v13 + 4) = 0u;
    *((_OWORD *)v13 + 5) = 0u;
    *((_QWORD *)v13 + 12) = 0xE000000000000000;
  }

  v31.receiver = v6;
  v31.super_class = v5;
  v24 = objc_msgSendSuper2(&v31, sel_init);
  sub_1D42B5420(a1, a2);
  return v24;
}

uint64_t sub_1D441EB2C()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x1E0C80C00];
  v7[0] = 0;
  v1 = objc_msgSend((id)objc_opt_self(), sel_archivedDataWithRootObject_requiringSecureCoding_error_, v0, 1, v7);
  v2 = v7[0];
  if (v1)
  {
    v3 = sub_1D4519C54();

  }
  else
  {
    v4 = v2;
    v5 = (void *)sub_1D4519AA4();

    swift_willThrow();
    sub_1D44734B4(0xD000000000000042, 0x80000001D45578E0);

    return 0;
  }
  return v3;
}

id SNSpeechEmotionResult.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1D42B7104();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D441ED5C(uint64_t a1@<X8>)
{
  SNSpeechEmotionResult.timeRange.getter(a1);
  sub_1D42B6E24();
}

void sub_1D441ED78(uint64_t a1)
{
  SNSpeechEmotionResult.timeRange.setter(a1);
  sub_1D42B6E24();
}

void sub_1D441ED94()
{
  double *v0;

  sub_1D42CB12C();
  *v0 = SNSpeechEmotionResult.confidence.getter();
  sub_1D42B6E24();
}

void sub_1D441EDB4(uint64_t a1)
{
  double v1;

  v1 = sub_1D441F0F0(a1);
  SNSpeechEmotionResult.confidence.setter(v1);
  sub_1D42B6E24();
}

void sub_1D441EDD0()
{
  double *v0;

  sub_1D42CB12C();
  *v0 = SNSpeechEmotionResult.mood.getter();
  sub_1D42B6E24();
}

void sub_1D441EDF0(uint64_t a1)
{
  double v1;

  v1 = sub_1D441F0F0(a1);
  SNSpeechEmotionResult.mood.setter(v1);
  sub_1D42B6E24();
}

void sub_1D441EE0C()
{
  double *v0;

  sub_1D42CB12C();
  *v0 = SNSpeechEmotionResult.valence.getter();
  sub_1D42B6E24();
}

void sub_1D441EE2C(uint64_t a1)
{
  double v1;

  v1 = sub_1D441F0F0(a1);
  SNSpeechEmotionResult.valence.setter(v1);
  sub_1D42B6E24();
}

void sub_1D441EE48()
{
  double *v0;

  sub_1D42CB12C();
  *v0 = SNSpeechEmotionResult.arousal.getter();
  sub_1D42B6E24();
}

void sub_1D441EE68(uint64_t a1)
{
  double v1;

  v1 = sub_1D441F0F0(a1);
  SNSpeechEmotionResult.arousal.setter(v1);
  sub_1D42B6E24();
}

void sub_1D441EE84()
{
  double *v0;

  sub_1D42CB12C();
  *v0 = SNSpeechEmotionResult.dominance.getter();
  sub_1D42B6E24();
}

void sub_1D441EEA4(uint64_t a1)
{
  double v1;

  v1 = sub_1D441F0F0(a1);
  SNSpeechEmotionResult.dominance.setter(v1);
  sub_1D42B6E24();
}

void sub_1D441EEC0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D42CB12C();
  SNSpeechEmotionResult.modelIdentifier.getter();
  *v0 = v1;
  v0[1] = v2;
  sub_1D42B6E24();
}

uint64_t type metadata accessor for SNSpeechEmotionResult()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNSpeechEmotionResult()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SNSpeechEmotionResult.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

unint64_t sub_1D441EF18()
{
  unint64_t result;

  result = qword_1EFE515D0;
  if (!qword_1EFE515D0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453D02C, &type metadata for SNSpeechEmotionResult.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE515D0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SNSpeechEmotionResult.DomainError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D441EF94 + 4 * byte_1D453CF57[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D441EFB4 + 4 * byte_1D453CF5C[v4]))();
}

_BYTE *sub_1D441EF94(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D441EFB4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D441EFBC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D441EFC4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D441EFCC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D441EFD4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SNSpeechEmotionResult.DomainError()
{
  return &type metadata for SNSpeechEmotionResult.DomainError;
}

unint64_t sub_1D441EFF4()
{
  unint64_t result;

  result = qword_1EFE515D8;
  if (!qword_1EFE515D8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453D004, &type metadata for SNSpeechEmotionResult.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE515D8);
  }
  return result;
}

id sub_1D441F030()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;

  return objc_msgSend(v0, (SEL)(v2 + 3016), v1, v3);
}

id sub_1D441F044()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(v0, (SEL)(v2 + 2376), v1);
}

uint64_t sub_1D441F054()
{
  return sub_1D451A6C8();
}

double sub_1D441F070@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  v4 = v3 + v2;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = *(_QWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(a1 + 16);
  result = *(double *)(a1 + 32);
  *(double *)(v4 + 32) = result;
  return result;
}

uint64_t sub_1D441F094()
{
  return sub_1D451A6C8();
}

uint64_t sub_1D441F0AC()
{
  return sub_1D451A6C8();
}

double sub_1D441F0C4@<D0>(uint64_t a1@<X8>)
{
  return *(double *)(a1 + 80);
}

uint64_t sub_1D441F0D4()
{
  return sub_1D451A6C8();
}

uint64_t sub_1D441F0E4()
{
  return 8251;
}

double sub_1D441F0F0(uint64_t a1)
{
  return *(double *)a1;
}

uint64_t sub_1D441F0FC()
{
  uint64_t v0;
  uint64_t v1;

  return SNSpeechEmotionResult.modelIdentifier.setter(v1, v0);
}

ValueMetadata *type metadata accessor for CredentialManager()
{
  return &type metadata for CredentialManager;
}

void sub_1D441F118()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  char v3;
  _BYTE *v4;

  sub_1D42B5528((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  sub_1D44D559C();
  if (!v1 && v2 <= 0xEFu && v2 >> 6 && v2 >> 6 == 1)
  {
    v3 = v2 & 0x3F;
    sub_1D43778D4();
    swift_allocError();
    *v4 = v3;
  }
}

uint64_t sub_1D441F1C4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  char v15;
  _QWORD v16[7];

  v2 = a1[3];
  v3 = a1[4];
  sub_1D42B5528(a1, v2);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v3 + 8))(&v13, v2, v3);
  if ((v15 & 1) != 0)
  {
    v16[6] = v13;
    sub_1D42B28FC(&qword_1EFE49BB0);
    swift_willThrowTypedImpl();
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_1D42E33E0(&v13, (uint64_t)v16);
    v4 = *sub_1D42B5528(v16, v16[3]);
    sub_1D44D50B4();
    if (v1)
    {
      sub_1D42B5400((uint64_t)v16);
    }
    else
    {
      v6 = v5;
      sub_1D42E2D8C((uint64_t)v16, (uint64_t)&v13);
      v7 = sub_1D42CAEF0((uint64_t)&v13, v14);
      MEMORY[0x1E0C80A78](v7);
      v9 = (uint64_t *)((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v10 + 16))(v9);
      v4 = sub_1D441F7B4(*v9, v6);
      sub_1D42B5400((uint64_t)&v13);
      sub_1D42B5400((uint64_t)v16);
    }
    return v4;
  }
  return result;
}

uint64_t sub_1D441F334()
{
  uint64_t v0;

  sub_1D441F35C();
  sub_1D42B5400(v0 + 16);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D441F35C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v10;

  v1 = v0;
  v10 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  v2 = sub_1D451A728();
  v4 = v3;
  if (qword_1EFE40338 != -1)
    swift_once();
  v5 = sub_1D451A014();
  sub_1D42CC880(v5, (uint64_t)qword_1EFEA7700);
  swift_bridgeObjectRetain();
  v6 = sub_1D4519FFC();
  v7 = sub_1D451AF74();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    *(_DWORD *)v8 = 136315138;
    swift_bridgeObjectRetain();
    sub_1D43D72EC(v2, v4, &v10);
    sub_1D451B1A8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D42A7000, v6, v7, "accessibility sound actions, cancelling Exclave proxy session %s)", v8, 0xCu);
    swift_arrayDestroy();
    sub_1D42CC934();
  }

  swift_bridgeObjectRelease_n();
  sub_1D42B5528((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  return sub_1D44D5450();
}

uint64_t sub_1D441F584()
{
  sub_1D441F334();
  return swift_deallocClassInstance();
}

uint64_t _s12ProxySessionCMa_0()
{
  return objc_opt_self();
}

uint64_t sub_1D441F5C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  _UNKNOWN **v18;

  v17 = type metadata accessor for SoundAnalysisService.Service();
  v18 = &off_1E979B228;
  v15 = a2;
  *(_QWORD *)&v16 = a1;
  swift_bridgeObjectRetain();
  v6 = sub_1D451A728();
  v8 = v7;
  if (qword_1EFE40338 != -1)
    swift_once();
  v9 = sub_1D451A014();
  sub_1D42CC880(v9, (uint64_t)qword_1EFEA7700);
  swift_bridgeObjectRetain();
  v10 = sub_1D4519FFC();
  v11 = sub_1D451AF74();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v15 = v13;
    *(_DWORD *)v12 = 136315138;
    swift_bridgeObjectRetain();
    sub_1D43D72EC(v6, v8, &v15);
    sub_1D451B1A8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D42A7000, v10, v11, "accessibility sound actions, creating Exclave proxy session %s)", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D825E524](v13, -1, -1);
    MEMORY[0x1D825E524](v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1D42E33E0(&v16, a3 + 16);
  *(_QWORD *)(a3 + 56) = a2;
  return a3;
}

uint64_t sub_1D441F7B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v12[3];
  uint64_t v13;
  _UNKNOWN **v14;

  v13 = type metadata accessor for SoundAnalysisService.Service();
  v14 = &off_1E979B228;
  v12[0] = a1;
  _s12ProxySessionCMa_0();
  v4 = swift_allocObject();
  v5 = sub_1D42CAEF0((uint64_t)v12, v13);
  MEMORY[0x1E0C80A78](v5);
  v7 = (_QWORD *)((char *)&v12[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v8 + 16))(v7);
  v9 = sub_1D441F5C4(*v7, a2, v4);
  sub_1D42B5400((uint64_t)v12);
  return v9;
}

uint64_t sub_1D441F880()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;

  if (qword_1EFE40338 != -1)
    swift_once();
  v1 = sub_1D451A014();
  sub_1D42CC880(v1, (uint64_t)qword_1EFEA7700);
  v2 = sub_1D4519FFC();
  v3 = sub_1D451AF74();
  if (os_log_type_enabled(v2, v3))
  {
    *(_WORD *)sub_1D42CC940() = 0;
    sub_1D441FBF0(&dword_1D42A7000, v2, v4, "Starting conclave...");
    sub_1D441FBE0();
  }

  type metadata accessor for SoundAnalysisService.Service();
  sub_1D441FBA0();
  sub_1D451A590();
  if (v0)
  {
    sub_1D4311FD8();
    v5 = sub_1D42B28FC(&qword_1EFE49BB0);
    type metadata accessor for TransportError(0);
    if (swift_dynamicCast())
    {
      v6 = sub_1D4519FFC();
      v7 = sub_1D451AF5C();
      v5 = v7;
      if (os_log_type_enabled(v6, v7))
      {
        v8 = (uint8_t *)sub_1D42CC940();
        *(_DWORD *)v8 = 67109120;
        sub_1D451B1A8();
        _os_log_impl(&dword_1D42A7000, v6, (os_log_type_t)v5, "Conclave.service failed with tb_error_t = %u", v8, 8u);
        MEMORY[0x1D825E524](v8, -1, -1);
      }
    }
    else
    {
      sub_1D4311FD8();
      sub_1D4311FD8();
      v6 = sub_1D4519FFC();
      v12 = sub_1D451AF5C();
      if (sub_1D43B3B88(v12))
      {
        v13 = (uint8_t *)sub_1D42CC940();
        v14 = (_QWORD *)sub_1D42CC940();
        *(_DWORD *)v13 = 138412290;
        sub_1D4311FD8();
        v17 = _swift_stdlib_bridgeErrorToNSError();
        sub_1D451B1A8();
        *v14 = v17;
        sub_1D4311F78();
        sub_1D4311F78();
        _os_log_impl(&dword_1D42A7000, v6, v3, "Conclave.service failed: %@", v13, 0xCu);
        sub_1D42B28FC((uint64_t *)&unk_1EFE50850);
        swift_arrayDestroy();
        sub_1D441FBE0();
      }
      sub_1D4311F78();
      sub_1D4311F78();
    }

    swift_willThrow();
  }
  else
  {
    v5 = v16;
    v9 = sub_1D4519FFC();
    v10 = sub_1D451AF74();
    if (sub_1D43B3B88(v10))
    {
      *(_WORD *)sub_1D42CC940() = 0;
      sub_1D441FBF0(&dword_1D42A7000, v9, v11, "Created SoundAnalysis Tightbeam client");
      sub_1D441FBE0();
    }

  }
  return v5;
}

unint64_t sub_1D441FBA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFE515E0;
  if (!qword_1EFE515E0)
  {
    v1 = type metadata accessor for SoundAnalysisService.Service();
    result = MEMORY[0x1D825E41C](&unk_1D454F830, v1);
    atomic_store(result, (unint64_t *)&qword_1EFE515E0);
  }
  return result;
}

void sub_1D441FBE0()
{
  JUMPOUT(0x1D825E524);
}

void sub_1D441FBF0(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  os_log_type_t v4;
  uint8_t *v5;

  _os_log_impl(a1, a2, v4, a4, v5, 2u);
}

_OWORD *sub_1D441FC00@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  _BYTE *v4;
  __int128 v5;
  uint64_t v6;

  sub_1D431A96C(a1, (uint64_t)&v5, &qword_1EFE47160);
  if (v6)
    return sub_1D42B293C(&v5, a2);
  sub_1D42D7018((uint64_t)&v5, &qword_1EFE47160);
  sub_1D42B7F2C();
  sub_1D42B6D0C();
  *v4 = 0;
  return (_OWORD *)sub_1D4312028();
}

uint64_t sub_1D441FC84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v4;
  __int128 v5;
  uint64_t v6;

  sub_1D431A96C(a1, (uint64_t)&v5, &qword_1EFE51638);
  if (v6)
    return sub_1D42E33E0(&v5, a2);
  sub_1D42D7018((uint64_t)&v5, &qword_1EFE51638);
  sub_1D42B7F2C();
  swift_allocError();
  *v4 = 0;
  return swift_willThrow();
}

void sub_1D441FD14()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1D451B964();
  sub_1D451B970();
  if (v1 != 1)
    sub_1D451B964();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D42CB0F8();
}

BOOL sub_1D441FDA8(uint64_t a1, uint64_t a2)
{
  float v2;
  char v3;
  float v4;

  if (*(_QWORD *)a1 != *(_QWORD *)a2)
    return 0;
  v2 = *(float *)(a1 + 20);
  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(float *)(a2 + 20);
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    if (v2 != v4)
      v3 = 0;
    if ((v3 & 1) != 0)
      return *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
          && *(_DWORD *)(a1 + 32) == *(_DWORD *)(a2 + 32)
          && *(_DWORD *)(a1 + 36) == *(_DWORD *)(a2 + 36)
          && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40);
    return 0;
  }
  if ((*(_BYTE *)(a2 + 16) & 1) != 0)
    return 0;
  if (*(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8) || v2 != v4)
    return 0;
  return *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      && *(_DWORD *)(a1 + 32) == *(_DWORD *)(a2 + 32)
      && *(_DWORD *)(a1 + 36) == *(_DWORD *)(a2 + 36)
      && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40);
}

uint64_t sub_1D441FE2C(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  char v8;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001D4557B80 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
    if (v5 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v6 = a1 == 0x4670616C7265766FLL && a2 == 0xED0000726F746361;
      if (v6 || (sub_1D451B820() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x7544776F646E6977 && a2 == 0xEE006E6F69746172)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = sub_1D451B820();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_1D442001C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1D4420054 + 4 * byte_1D453D0E0[a1]))(0xD000000000000010, 0x80000001D4557B80);
}

uint64_t sub_1D4420054()
{
  return 0x6E6F6973726576;
}

uint64_t sub_1D442006C()
{
  return 0x4670616C7265766FLL;
}

uint64_t sub_1D4420090()
{
  return 0x7544776F646E6977;
}

uint64_t sub_1D44200B4(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  char v21;

  v4 = sub_1D42B28FC(&qword_1EFE51670);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v20 = *((unsigned __int8 *)v1 + 16);
  v15 = v1[3];
  v16 = v8;
  v10 = v1[4];
  v14 = v1[5];
  sub_1D42B5528(a1, a1[3]);
  sub_1D4425E24();
  sub_1D451BA24();
  v17 = v9;
  v21 = 0;
  sub_1D42B28FC(&qword_1EFE51658);
  sub_1D4425E60(&qword_1EFE52280, MEMORY[0x1E0DEB420], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
  sub_1D42CB068();
  if (!v2)
  {
    v12 = v14;
    v11 = v15;
    LOBYTE(v17) = 1;
    sub_1D451B70C();
    LOBYTE(v17) = 2;
    sub_1D451B748();
    v17 = v11;
    v18 = v10;
    v19 = v12;
    v21 = 3;
    sub_1D42CA054();
    sub_1D42CB068();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1D4420294()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1D42BE9A8();
  sub_1D451B964();
  sub_1D451B970();
  if (v1 != 1)
    sub_1D451B964();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  return sub_1D42CB230();
}

void sub_1D442036C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D43072F8();
  v2 = v1;
  v4 = v3;
  v5 = sub_1D42B28FC(&qword_1EFE51648);
  MEMORY[0x1E0C80A78](v5);
  sub_1D434799C();
  sub_1D42B5528(v2, v2[3]);
  sub_1D4425E24();
  sub_1D451BA0C();
  if (!v0)
  {
    sub_1D42B28FC(&qword_1EFE51658);
    sub_1D4425E60((unint64_t *)&unk_1EFE51660, MEMORY[0x1E0DEB448], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
    sub_1D42FC460();
    sub_1D44264F0(1);
    v6 = sub_1D451B634();
    v8 = v7;
    v11 = v6;
    sub_1D44264F0(2);
    sub_1D451B670();
    v10 = v9;
    sub_1D42C9FC0();
    sub_1D42FC460();
    sub_1D42F8674();
    *(_QWORD *)v4 = v12;
    *(_QWORD *)(v4 + 8) = v11;
    *(_BYTE *)(v4 + 16) = v8 & 1;
    *(_DWORD *)(v4 + 20) = v10;
    *(_QWORD *)(v4 + 24) = v12;
    *(_QWORD *)(v4 + 32) = v13;
    *(_QWORD *)(v4 + 40) = v14;
  }
  sub_1D42B5400((uint64_t)v2);
  sub_1D42CB3F8();
}

uint64_t sub_1D4420510()
{
  unsigned __int8 *v0;

  return sub_1D442001C(*v0);
}

uint64_t sub_1D4420518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D441FE2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D442053C()
{
  sub_1D4425E24();
  return sub_1D451BA3C();
}

uint64_t sub_1D4420564()
{
  sub_1D4425E24();
  return sub_1D451BA48();
}

void sub_1D442058C()
{
  sub_1D442036C();
}

uint64_t sub_1D44205A0(_QWORD *a1)
{
  return sub_1D44200B4(a1);
}

uint64_t sub_1D44205BC()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1D451B958();
  sub_1D451B964();
  sub_1D451B970();
  if (v1 != 1)
    sub_1D451B964();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  return sub_1D451B994();
}

uint64_t sub_1D44206A0()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + OBJC_IVAR____TtC13SoundAnalysis17SNVGGishExtractor_blockSize);
}

id sub_1D44206B0()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC13SoundAnalysis17SNVGGishExtractor_graphImpl);
}

void sub_1D44206E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  float v3;
  id v4;
  id v5;

  v4 = objc_allocWithZone((Class)sub_1D4426508());
  v5 = sub_1D4420728(v3);
  if (!v2)
  {
    v0[3] = v1;
    v0[4] = &off_1E97A2630;
    *v0 = v5;
  }
  sub_1D4426548();
}

id sub_1D4420728(float a1)
{
  void *v1;
  uint64_t v2;
  objc_class *ObjectType;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int v8;
  int v9;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType();
  v5 = sub_1D42B6F40();
  *(float *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = ObjectType;
  v6 = v1;
  v7 = sub_1D42CEFFC();
  v9 = v8;
  swift_release();
  if (v2)
  {

    return (id)sub_1D442648C();
  }
  else
  {
    *(_QWORD *)&v6[OBJC_IVAR____TtC13SoundAnalysis17SNVGGishExtractor_graphImpl] = v7;
    *(_DWORD *)&v6[OBJC_IVAR____TtC13SoundAnalysis17SNVGGishExtractor_blockSize] = v9;

    v11.receiver = v6;
    v11.super_class = ObjectType;
    return objc_msgSendSuper2(&v11, sel_init);
  }
}

void sub_1D4420810(uint64_t a1@<X8>, float a2@<S0>)
{
  uint64_t v2;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  objc_class *v28;
  char *v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  unint64_t v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  _BYTE *v44;
  id v45;
  id v46;
  void *v47;
  void *v48;
  id v49;
  void *v50;
  void *v51;
  id v52;
  unsigned int v53;
  id v55;
  float v56;
  int v57;
  id v58;
  id v59;
  unint64_t v60;
  uint64_t v61;
  id v62;
  int v63;
  int v64;
  id v65;
  unint64_t v66;
  uint64_t v67;
  id v68;
  int v69;
  int v70;
  id v71;
  id v72;
  id v73;
  int v74;
  unsigned int v75;
  void *v76;
  unsigned int v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  id v82;
  void *v83;
  id v84;
  objc_super v85;
  __int128 v86;
  void *v87;
  uint64_t v88;

  v88 = *MEMORY[0x1E0C80C00];
  v5 = objc_opt_self();
  *(_QWORD *)&v86 = 0;
  v6 = sub_1D45001AC(v5, (uint64_t)&v86);
  if (!v6)
  {
    v23 = (id)v86;
    sub_1D4519AA4();

    swift_willThrow();
    return;
  }
  v7 = v6;
  v8 = (id)v86;
  v9 = (void *)sub_1D451A6C8();
  sub_1D44F5D78((uint64_t)v7, v9);

  v10 = (void *)sub_1D451A6C8();
  *(_QWORD *)&v86 = 0;
  v11 = sub_1D44FD014(v5, v7, v10, (uint64_t)&v86);

  if (!v11)
  {
    v24 = (id)v86;
    sub_1D4519AA4();

    swift_willThrow();
LABEL_12:

    return;
  }
  v12 = (id)v86;
  v13 = (void *)sub_1D451A6C8();
  *(_QWORD *)&v86 = 0;
  v14 = sub_1D44FEE98(v5, v7, v13, (uint64_t)&v86);

  if (!v14)
  {
    v25 = (id)v86;
    sub_1D4519AA4();

    swift_willThrow();
    goto LABEL_12;
  }
  v15 = (id)v86;
  v16 = (void *)sub_1D451A6C8();
  *(_QWORD *)&v86 = 0;
  v17 = sub_1D44FF500(v5, v7, v16, (uint64_t)&v86);

  v18 = (void *)v86;
  if (!v17)
  {
    v26 = (id)v86;
    sub_1D4519AA4();

    swift_willThrow();
    goto LABEL_12;
  }
  type metadata accessor for SNUtils();
  v19 = v18;
  v20 = sub_1D44BCDC0();
  sub_1D451A5E4();
  v21 = objc_allocWithZone((Class)type metadata accessor for _SNVGGishFrontEndProcessingCustomModel());
  sub_1D446DF34(v20);
  if (v2)
  {

LABEL_7:
    return;
  }
  v27 = v22;
  v81 = v14;
  v83 = v17;
  v28 = (objc_class *)type metadata accessor for SNMLCustomModel();
  v29 = (char *)objc_allocWithZone(v28);
  *(_QWORD *)&v29[OBJC_IVAR____TtC13SoundAnalysis15SNMLCustomModel_customModel] = v27;
  *(_QWORD *)&v29[OBJC_IVAR____TtC13SoundAnalysis15SNMLCustomModel_modelDescription] = v20;
  v85.receiver = v29;
  v85.super_class = v28;
  v82 = v20;
  v30 = v27;
  v31 = objc_msgSendSuper2(&v85, sel_init);
  v87 = &unk_1EFEAADC8;
  v32 = swift_dynamicCastObjCProtocolConditional();
  if (!v32)
  {
    sub_1D42CF6E8();
    swift_allocError();
    *v44 = 7;
    swift_willThrow();

    return;
  }
  v33 = (void *)v32;
  v80 = v30;
  *(_QWORD *)&v86 = 0;
  v34 = v31;
  swift_unknownObjectRetain();
  if ((sub_1D44FF7D0(v5, v83, v33, (uint64_t)&v86) & 1) == 0)
  {
    v45 = (id)v86;
    sub_1D4519AA4();

    swift_willThrow();
LABEL_19:

    return;
  }
  v35 = (id)v86;

  v20 = v82;
  v36 = sub_1D44BC6AC(v82);
  v77 = sub_1D44BE0AC(v36, 1u);
  swift_bridgeObjectRelease();
  v37 = (void *)sub_1D451A6C8();
  *(_QWORD *)&v86 = 0;
  v38 = sub_1D44FF500(v5, v7, v37, (uint64_t)&v86);

  v39 = (void *)v86;
  if (!v38)
  {
    v46 = (id)v86;
    sub_1D4519AA4();

    swift_willThrow();
    v47 = v80;
LABEL_21:

    goto LABEL_7;
  }
  v78 = v34;
  v79 = v38;
  v40 = objc_allocWithZone(MEMORY[0x1E0C9E958]);
  v41 = v39;
  v42 = objc_msgSend(v40, (SEL)&selRef_initWithFeatureProvider_featureNames_);
  sub_1D439CBCC(0x15u, v42);
  v48 = v43;

  *(_QWORD *)&v86 = 0;
  if (!sub_1D44FF7D0(v5, v79, v48, (uint64_t)&v86)
    || (v76 = v48,
        v49 = (id)v86,
        v50 = (void *)sub_1D451A6C8(),
        *(_QWORD *)&v86 = 0,
        v20 = sub_1D44FD534(v5, v7, v50, 1, (uint64_t)&v86),
        v50,
        v51 = (void *)v86,
        !v20))
  {
    v55 = (id)v86;
    sub_1D4519AA4();

    swift_willThrow();
    goto LABEL_30;
  }
  type metadata accessor for SNModelMetadataUtils();
  v52 = v51;
  v34 = v82;
  v53 = sub_1D44C962C(v82, 16000);
  if (a2 < 0.0 || a2 >= 1.0)
  {
    sub_1D4425C7C();
    swift_allocError();
    swift_willThrow();

    v47 = v48;
    goto LABEL_21;
  }
  v75 = v53;
  sub_1D450053C(v53, 1, 1, (uint64_t)&v86);
  v84 = 0;
  if (!sub_1D45002DC(v5, v7, v11, v81, 0, 0, &v86, (uint64_t)&v84))
  {
LABEL_39:
    v72 = v84;
    sub_1D4519AA4();

    swift_willThrow();
    goto LABEL_19;
  }
  v56 = roundf((float)(1.0 - a2) * (float)v77);
  if ((~LODWORD(v56) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_43;
  }
  if (v56 <= -1.0)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v56 < 4295000000.0)
  {
    v57 = v56;
    v58 = v84;
    v74 = v57;
    sub_1D4500620(v75, v57, v77, 1, (uint64_t)&v86);
    v84 = 0;
    if (sub_1D45002DC(v5, v7, v81, v83, 0, 0, &v86, (uint64_t)&v84))
    {
      v59 = v84;
      v60 = sub_1D44BD6F0();
      v61 = sub_1D44BBDCC(v60);
      swift_bridgeObjectRelease();
      v62 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInt_, v61);
      sub_1D44BD638(v62);
      v64 = v63;

      sub_1D4500620(v75, v74, v64, 1, (uint64_t)&v86);
      v84 = 0;
      if (sub_1D45002DC(v5, v7, v83, v79, 0, 0, &v86, (uint64_t)&v84))
      {
        v65 = v84;
        sub_1D44BD034();
        v67 = sub_1D44BBDCC(v66);
        swift_bridgeObjectRelease();
        v68 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInt_, v67);
        sub_1D44BD638(v68);
        v70 = v69;

        sub_1D4500620(v75, v74, v70, 1, (uint64_t)&v86);
        v84 = 0;
        if ((sub_1D45002DC(v5, v7, v79, v20, 0, 0, &v86, (uint64_t)&v84) & 1) != 0)
        {
          v71 = v84;
          sub_1D44F3DE8((uint64_t)v7);
          sub_1D44F44A0((uint64_t)v7);

          *(_QWORD *)a1 = v7;
          *(_DWORD *)(a1 + 8) = v77;
          return;
        }
      }
      v73 = v84;
      sub_1D4519AA4();

      swift_willThrow();
LABEL_30:

      return;
    }
    goto LABEL_39;
  }
LABEL_44:
  __break(1u);
}

void sub_1D44213F4()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;

  v2 = *(id *)(v0 + OBJC_IVAR____TtC13SoundAnalysis17SNVGGishExtractor_graphImpl);
  v3 = (void *)sub_1D4426430();
  v4 = sub_1D4306FBC(v3);

  sub_1D4377BF8();
}

void sub_1D4421448()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1D4421494()
{
  sub_1D44206E0();
}

void sub_1D44214A8()
{
  sub_1D4421F50();
}

void sub_1D44214BC()
{
  sub_1D4421FFC();
}

void sub_1D44214D0()
{
  sub_1D44213F4();
}

id sub_1D44214F0()
{
  return sub_1D44206B0();
}

uint64_t sub_1D4421510()
{
  return sub_1D44206A0();
}

uint64_t sub_1D4421530(void *a1, unsigned int a2, double a3, float a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  id v53;
  uint64_t result;
  _BYTE *v55;
  id v56;
  void *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  float v76;
  id v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  __int128 *v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  __int128 *v89;
  uint64_t v90;
  id v91;
  id v92;
  unint64_t v93;
  uint64_t v94;
  id v95;
  int v96;
  int v97;
  int v98;
  uint64_t v99;
  void *v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  __int128 *v104;
  uint64_t v105;
  id v106;
  id v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  id v122;
  void *v123;
  uint64_t v124;
  void *v125;
  void *v126;
  void *v127;
  id v128[8];

  v128[7] = *(id *)MEMORY[0x1E0C80C00];
  v12 = objc_opt_self();
  v128[0] = 0;
  v13 = sub_1D45001AC(v12, (uint64_t)v128);
  if (!v13)
  {
    v49 = v128[0];
    sub_1D4519AA4();
    sub_1D42F1E64();
    sub_1D42F1DA8();
    return (uint64_t)v13;
  }
  v124 = (uint64_t)a7;
  v14 = v128[0];
  v15 = (void *)sub_1D451A6C8();
  sub_1D44F5D78((uint64_t)v13, v15);

  sub_1D451A6C8();
  v16 = sub_1D44264AC();
  v20 = sub_1D44FD014(v16, v17, v18, v19);

  v21 = v128[0];
  if (!v20)
  {
    v50 = v128[0];
    sub_1D432DF1C();
    sub_1D42F1E64();
    sub_1D42F1DA8();
LABEL_18:

    return (uint64_t)v13;
  }
  v126 = v20;
  v22 = v128[0];
  sub_1D451A6C8();
  v23 = sub_1D44264AC();
  v27 = sub_1D44FEE98(v23, v24, v25, v26);

  v125 = v27;
  if (!v27)
  {
    v51 = v128[0];
    sub_1D432DF1C();
    sub_1D42F1E64();
    sub_1D42F1DA8();
    v52 = v126;
LABEL_17:

    goto LABEL_18;
  }
  v28 = v128[0];
  v29 = (void *)sub_1D451A6C8();
  v128[0] = 0;
  v30 = sub_1D44FF500(v12, v13, v29, (uint64_t)v128);

  v31 = v128[0];
  if (!v30)
  {
    v53 = v128[0];
    sub_1D42F1F80();
    sub_1D42F1E64();
    sub_1D42F1DA8();

    v52 = v125;
    goto LABEL_17;
  }
  v128[6] = &unk_1EFEAADC8;
  v32 = swift_dynamicCastObjCProtocolConditional();
  if (!v32)
  {
    sub_1D42CF6E8();
    sub_1D42B6D0C();
    *v55 = 7;
    v56 = v31;
    sub_1D42F1DA8();

    v57 = v30;
LABEL_21:

    return (uint64_t)v13;
  }
  v33 = (void *)v32;
  v128[0] = 0;
  v34 = v31;
  swift_unknownObjectRetain();
  if ((sub_1D44FF7D0(v12, v30, v33, (uint64_t)v128) & 1) == 0)
  {
    v58 = v128[0];
    sub_1D42F1F80();

    sub_1D42F1DA8();
    sub_1D4426520(v59, v60, v61, v62, v63, v64, v65, v66, v117, v118, v120, (uint64_t)v30, v124, v125);

    swift_unknownObjectRelease();
    return (uint64_t)v13;
  }
  v35 = v128[0];
  swift_unknownObjectRelease();
  v36 = (void *)sub_1D451A6C8();
  v128[0] = 0;
  v37 = sub_1D44FD534(v12, v13, v36, 1, (uint64_t)v128);

  v38 = v128[0];
  if (!v37)
  {
    v67 = v128[0];
    sub_1D42F1F80();
    sub_1D42F1E64();
    sub_1D42F1DA8();

    sub_1D4426520(v68, v69, v70, v71, v72, v73, v74, v75, v117, v118, v120, (uint64_t)v30, v124, v125);
    v52 = v123;
    goto LABEL_17;
  }
  if (a4 < 0.0 || a4 >= 1.0)
  {
    sub_1D4425CE0();
    sub_1D42B6D0C();
    v40 = v38;
    sub_1D42F1DA8();

    sub_1D4426520(v41, v42, v43, v44, v45, v46, v47, v48, v117, v118, v120, (uint64_t)v30, v124, v125);
    return (uint64_t)v13;
  }
  v76 = roundf((float)(1.0 - a4) * (float)a2);
  if ((~LODWORD(v76) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_42;
  }
  if (v76 <= -1.0)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if (v76 >= 4295000000.0)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if ((~*(_QWORD *)&a3 & 0x7FF0000000000000) == 0)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (a3 <= -1.0)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
  }
  v121 = v37;
  if (a3 >= 4294967300.0)
    goto LABEL_46;
  v77 = v128[0];
  HIDWORD(v119) = a3;
  sub_1D450053C(a3, 1, 1, (uint64_t)v128);
  v78 = sub_1D44263C4();
  if (!sub_1D42F1E90(v78, v79, v126, v125, v80, v81, v82, v83)
    || (v84 = v127,
        LODWORD(v119) = v76,
        sub_1D4500620(HIDWORD(v119), v76, a2, 1, (uint64_t)v128),
        v85 = sub_1D44263C4(),
        !sub_1D42F1E90(v85, v86, v125, v30, v87, v88, v89, v90)))
  {
    v107 = v127;
    sub_1D432DEAC();
    sub_1D42F1E64();
    sub_1D42F1DA8();

    v52 = v37;
    goto LABEL_17;
  }
  type metadata accessor for SNUtils();
  v91 = v127;
  v92 = objc_msgSend(a1, sel_modelDescription);
  v93 = sub_1D44BC35C(v92);

  v94 = sub_1D44BBDCC(v93);
  swift_bridgeObjectRelease();
  v95 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInt_, v94);
  sub_1D44BD638(v95);
  v97 = v96;

  if (v97)
    v98 = v97;
  else
    v98 = 512;
  sub_1D4500620(HIDWORD(v119), v119, v98, 1, (uint64_t)v128);
  v99 = sub_1D44263C4();
  v100 = v121;
  result = sub_1D42F1E90(v99, v101, v30, v121, v102, v103, v104, v105);
  if (!(_DWORD)result)
  {
    v108 = v127;
    sub_1D4426570();

    sub_1D42F1DA8();
    sub_1D4426520(v109, v110, v111, v112, v113, v114, v115, v116, v117, v119, (uint64_t)v121, (uint64_t)v30, v124, v125);

    goto LABEL_18;
  }
  if (a3 <= -9.22337204e18)
  {
    __break(1u);
  }
  else if (a3 < 9.22337204e18)
  {
    v106 = v127;
    sub_1D44F3DE8((uint64_t)v13);
    sub_1D44F44A0((uint64_t)v13);

    v57 = v121;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

void sub_1D4421B90(uint64_t a1)
{
  switch(a1)
  {
    case 1:
      type metadata accessor for SNVGGishExtractor();
      break;
    case 2:
      type metadata accessor for SNLogMelSpectrogramExtractor();
      break;
    case 3:
      type metadata accessor for SNSoundPrintAExtractor();
      break;
    case 4:
    case 5:
      type metadata accessor for SNSoundPrintKExtractor();
      break;
    case 6:
      type metadata accessor for SNLanguageAlignedAudioEmbeddingFeatureExtractor();
      break;
    default:
      sub_1D42CB35C();
      break;
  }
}

void sub_1D4421C18()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  float v3;
  uint64_t v4;

  sub_1D4426508();
  v4 = sub_1D42B6F40();
  sub_1D4421C64(v3);
  if (!v2)
  {
    v0[3] = v1;
    v0[4] = (uint64_t)&off_1E97AACA0;
    *v0 = v4;
  }
  sub_1D4426548();
}

void sub_1D4421C64(float a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;

  v4 = *v1;
  v5 = sub_1D42B6F40();
  *(float *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = sub_1D42CEFFC();
  v8 = v7;
  swift_release();
  if (v2)
  {
    sub_1D4426480();
  }
  else
  {
    v1[2] = v6;
    *((_DWORD *)v1 + 6) = v8;
  }
  sub_1D44264C8();
}

void sub_1D4421CF8(uint64_t a1@<X8>, float a2@<S0>)
{
  uint64_t v2;
  id v5;
  id v6;
  void *v7;
  void *v8;
  objc_class *v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  unsigned int v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  int v19;
  id v20;
  uint64_t v21;
  objc_super v22;

  type metadata accessor for SNUtils();
  v5 = sub_1D44BCDC0();
  sub_1D451A5E4();
  v6 = objc_allocWithZone((Class)type metadata accessor for _SNVGGishFrontEndProcessingCustomModel());
  sub_1D446DF34(v5);
  if (v2)
  {

  }
  else
  {
    v8 = v7;
    v9 = (objc_class *)type metadata accessor for SNMLCustomModel();
    v10 = (char *)objc_allocWithZone(v9);
    *(_QWORD *)&v10[OBJC_IVAR____TtC13SoundAnalysis15SNMLCustomModel_customModel] = v8;
    *(_QWORD *)&v10[OBJC_IVAR____TtC13SoundAnalysis15SNMLCustomModel_modelDescription] = v5;
    v22.receiver = v10;
    v22.super_class = v9;
    v11 = v5;
    v12 = v8;
    v13 = objc_msgSendSuper2(&v22, sel_init);
    type metadata accessor for SNModelMetadataUtils();
    v14 = sub_1D44C962C(v11, 16000);
    sub_1D44BD08C();
    v16 = sub_1D44BBDCC(v15);
    swift_bridgeObjectRelease();
    v17 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    v18 = objc_msgSend(v17, sel_initWithInt_, v16, v22.receiver, v22.super_class);
    sub_1D44BD638(v18);
    LODWORD(v16) = v19;

    v20 = v13;
    v21 = sub_1D4421530(v20, v16, (double)v14, a2, 0x5065727574616546, 0xEF786F42746E6972, (void *)0x4000);

    *(_QWORD *)a1 = v21;
    *(_DWORD *)(a1 + 8) = v16;
  }
}

void sub_1D4421F0C()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  v1 = sub_1D44265AC();
  v2 = (void *)sub_1D4426430();
  v3 = sub_1D4306FBC(v2);

  sub_1D4377BF8();
}

void sub_1D4421F50()
{
  id v0;
  unint64_t v1;
  id v2;
  int v3;
  int v4;

  type metadata accessor for SNUtils();
  v0 = sub_1D44BCDC0();
  v1 = sub_1D44BC6AC(v0);
  sub_1D44BE0AC(v1, 1u);
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, 16000);
  sub_1D44BD638(v2);
  v4 = v3;

  if (v4 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1D451B0A0();

  }
}

void sub_1D4421FFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  sub_1D4421F50();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v9 = MEMORY[0x1E0DEE9D8];
  sub_1D42C7188();
  v6 = v9;
  v7 = *(_QWORD *)(v9 + 16);
  if (v7 >= *(_QWORD *)(v9 + 24) >> 1)
  {
    sub_1D42C7188();
    v6 = v9;
  }
  *(_QWORD *)(v6 + 16) = v7 + 1;
  v8 = (_QWORD *)(v6 + 24 * v7);
  v8[4] = v1;
  v8[5] = v3;
  v8[6] = v5;
  sub_1D4426558(v6);
  sub_1D43AAC44();
}

void sub_1D44220B8()
{
  sub_1D4421C18();
}

void sub_1D44220CC()
{
  sub_1D4421F0C();
}

id sub_1D44220EC()
{
  return sub_1D44265AC();
}

uint64_t *sub_1D442210C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, double a5, float a6)
{
  uint64_t *v6;
  uint64_t v7;
  int v10;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;

  v10 = a3;
  v13 = *v6;
  v14 = HIDWORD(a3);
  v15 = sub_1D42B6F40();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  *(_DWORD *)(v15 + 32) = v10;
  *(_DWORD *)(v15 + 36) = v14;
  *(_QWORD *)(v15 + 40) = a4;
  *(float *)(v15 + 48) = a6;
  *(_QWORD *)(v15 + 56) = v13;
  swift_unknownObjectRetain();
  v16 = sub_1D42CEFFC();
  if (v7)
  {
    swift_release();
    swift_unknownObjectRelease();
    type metadata accessor for SNSoundPrintExtractorBase();
    sub_1D4426480();
  }
  else
  {
    v18 = v16;
    v19 = v17;
    swift_unknownObjectRelease();
    swift_release();
    v6[2] = v18;
    *((_DWORD *)v6 + 6) = v19;
  }
  return v6;
}

uint64_t sub_1D44221FC@<X0>(void *a1@<X0>, CMTimeValue a2@<X1>, uint64_t a3@<X2>, CMTimeEpoch a4@<X3>, uint64_t a5@<X8>, float a6@<S0>)
{
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  CMTimeEpoch v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  int32_t v25;
  int32_t v26;
  unint64_t v27;
  CMTimeValue value;
  _BYTE *v30;
  id v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t result;
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;
  CMTime v38;
  CMTime time;

  type metadata accessor for SNModelMetadataUtils();
  v12 = objc_msgSend(a1, sel_modelDescription);
  v13 = sub_1D44C962C(v12, 16000);

  v14 = objc_msgSend(a1, sel_modelDescription);
  v15 = objc_msgSend(v14, sel_inputDescriptionsByName);

  sub_1D42E9D88(0, (unint64_t *)&qword_1EFE40360);
  v16 = sub_1D451A5CC();

  v17 = (void *)sub_1D4396600(v16);
  swift_bridgeObjectRelease();
  if (!v17
    || (v18 = objc_msgSend(v17, sel_multiArrayConstraint), v17, !v18))
  {
    sub_1D42B7F2C();
    swift_allocError();
    *v30 = 0;
    return swift_willThrow();
  }
  v35 = a5;
  type metadata accessor for SNUtils();
  v19 = v13;
  v20 = a4;
  v21 = sub_1D44BC5B8(v18);
  v23 = v22;

  v36 = v19;
  v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedInt_, v19);
  sub_1D42DC694(v24);
  v26 = v25;

  time.value = a2;
  *(_QWORD *)&time.timescale = a3;
  v27 = (unint64_t)v21;
  time.epoch = v20;
  CMTimeConvertScale(&v38, &time, v26, kCMTimeRoundingMethod_RoundTowardZero);
  value = v38.value;
  if (v38.value < v27 || v38.value - v27 >= v23)
  {
    type metadata accessor for SNError();
    time.value = 0;
    *(_QWORD *)&time.timescale = 0xE000000000000000;
    sub_1D451B400();
    sub_1D451A794();
    v38.value = value;
    sub_1D451B7C0();
    sub_1D451A794();
    swift_bridgeObjectRelease();
    sub_1D451A794();
    v38.value = v27;
    sub_1D451B7C0();
    sub_1D451A794();
    swift_bridgeObjectRelease();
    result = sub_1D451A794();
    if (__OFADD__(v27, v23))
    {
      __break(1u);
      return result;
    }
    v38.value = v27 + v23;
    sub_1D451B7C0();
    sub_1D451A794();
    swift_bridgeObjectRelease();
    sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 2, 0, time.value, *(unint64_t *)&time.timescale);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithLongLong_, v38.value);
  sub_1D44BD638(v31);
  v33 = v32;

  result = sub_1D4421530(a1, v33, (double)v36, a6, 0x5065727574616546, 0xEF786F42746E6972, (void *)0x4000);
  if (!v37)
  {
    *(_QWORD *)v35 = result;
    *(_DWORD *)(v35 + 8) = v33;
  }
  return result;
}

uint64_t sub_1D44225E8()
{
  void *v0;
  void *v1;
  id v2;

  v1 = (void *)sub_1D4426430();
  v2 = sub_1D4306FBC(v1);

  return sub_1D4307180();
}

uint64_t sub_1D442262C()
{
  return sub_1D451B0A0();
}

void sub_1D4422638(uint64_t a1@<X8>)
{
  void *v2;

  v2 = (void *)MEMORY[0x1D825DB34]();
  sub_1D44226A8(a1);
  objc_autoreleasePoolPop(v2);
}

void sub_1D44226A8(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _BYTE *v21;
  _BYTE *v22;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E958]), sel_init);
  sub_1D439CBCC(0x22u, v3);
  v5 = v4;

  if (!v1)
  {
    v6 = objc_msgSend(v5, sel_modelDescription);
    v7 = objc_msgSend(v6, sel_inputDescriptionsByName);

    sub_1D42E9D88(0, (unint64_t *)&qword_1EFE40360);
    v8 = sub_1D451A5CC();

    v9 = (void *)sub_1D4396600(v8);
    swift_bridgeObjectRelease();
    if (v9
      && (v10 = objc_msgSend(v9, sel_multiArrayConstraint), v9, v10)
      && (v11 = objc_msgSend(v10, sel_shapeConstraint), v10, v11))
    {
      type metadata accessor for SNUtils();
      sub_1D44BD0E4(v11, 16000);
      v13 = v12;
      v22 = (_BYTE *)sub_1D42D4D24();

      v14 = *(_QWORD *)&v22[OBJC_IVAR____SNTimeDurationConstraint_impl];
      v15 = *(_QWORD *)&v22[OBJC_IVAR____SNTimeDurationConstraint_impl + 8];
      v16 = *(_QWORD *)&v22[OBJC_IVAR____SNTimeDurationConstraint_impl + 16];
      v17 = *(_QWORD *)&v22[OBJC_IVAR____SNTimeDurationConstraint_impl + 24];
      v18 = *(_QWORD *)&v22[OBJC_IVAR____SNTimeDurationConstraint_impl + 32];
      v19 = *(_QWORD *)&v22[OBJC_IVAR____SNTimeDurationConstraint_impl + 40];
      v20 = v22[OBJC_IVAR____SNTimeDurationConstraint_impl + 48];
      sub_1D42B5CF4(v14, v15, v16, v17, v18, v19, v20);

      *(_QWORD *)a1 = v14;
      *(_QWORD *)(a1 + 8) = v15;
      *(_QWORD *)(a1 + 16) = v16;
      *(_QWORD *)(a1 + 24) = v17;
      *(_QWORD *)(a1 + 32) = v18;
      *(_QWORD *)(a1 + 40) = v19;
      *(_BYTE *)(a1 + 48) = v20;
    }
    else
    {
      sub_1D42B7F2C();
      swift_allocError();
      *v21 = 0;
      swift_willThrow();

    }
  }
}

uint64_t sub_1D44228BC()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_1D44228E0()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  double v4;

  sub_1D4426528();
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E958]), sel_init);
  sub_1D439CBCC(0x22u, v1);
  v3 = v2;

  if (v0)
    sub_1D4426480();
  else
    sub_1D4426494(v3, v4);
  return sub_1D4307180();
}

void sub_1D442297C()
{
  sub_1D4422A04();
}

uint64_t sub_1D44229A0()
{
  return sub_1D442262C();
}

uint64_t sub_1D44229B8()
{
  return sub_1D44225E8();
}

id sub_1D44229D8()
{
  return sub_1D44220EC();
}

uint64_t sub_1D44229F8()
{
  uint64_t v0;

  return *(unsigned int *)(*(_QWORD *)v0 + 24);
}

void sub_1D4422A04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;

  sub_1D43072F8();
  v3 = v2;
  v5 = v4;
  v6 = v0;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v15 = sub_1D42B6F40();
  v5(v12, v10, v8);
  if (!v1)
  {
    v14[3] = v6;
    v14[4] = v3;
    *v14 = v15;
  }
  sub_1D42CB3F8();
}

void sub_1D4422A78()
{
  uint64_t v0;
  uint64_t v1;
  double v2;

  sub_1D4426528();
  sub_1D439CBCC(0x23u, 0);
  if (v0)
    sub_1D4426480();
  else
    sub_1D4426494(v1, v2);
  sub_1D4307180();
  sub_1D44264C8();
}

void sub_1D4422ACC()
{
  sub_1D4422A04();
}

void sub_1D4422AF0()
{
  sub_1D4426454();
  __break(1u);
}

uint64_t sub_1D4422B30(uint64_t a1, char a2)
{
  _BYTE *v2;

  if ((a2 & 1) == 0 && a1 != 4)
  {
    sub_1D4425D64();
    sub_1D42B6D0C();
    *v2 = 3;
    sub_1D4312028();
  }
  return 40;
}

void sub_1D4422B84(void *a1)
{
  void *v2;
  uint64_t v3;

  v2 = (void *)MEMORY[0x1D825DB34]();
  sub_1D4422BEC(a1, &v3);
  objc_autoreleasePoolPop(v2);
}

void sub_1D4422BEC(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  unint64_t v14;
  uint64_t *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  _BYTE *v20;

  v4 = objc_msgSend(a1, sel_modelDescription);
  v5 = sub_1D437C1B8(v4);

  if (!v2)
  {
    if (!*(_QWORD *)(v5 + 16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    v7 = *(_QWORD *)(v5 + 56);
    v6 = *(_QWORD *)(v5 + 64);
    v8 = *(unsigned __int8 *)(v5 + 72);
    swift_bridgeObjectRetain();
    sub_1D43477C8(v7, v6, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v8 > 0xFD)
    {
      sub_1D437CD58(v7, v6, v8);
LABEL_13:
      sub_1D4425D64();
      swift_allocError();
      *v13 = 0;
      swift_willThrow();
      return;
    }
    if (v8)
    {
      if (v8 != 1)
        goto LABEL_13;
      if (*(_QWORD *)(v6 + 16) == 1)
      {
        v9 = *(_QWORD *)(v6 + 32);
        v10 = *(_QWORD *)(v9 + 16);
        if (v10 >= 3)
        {
          v11 = *(_QWORD *)(v9 + 8 * v10 + 16);
          sub_1D437CD58(v7, v6, 1u);
          v12 = v11 + 1;
          if (__OFADD__(v11, 1))
          {
            __break(1u);
            return;
          }
          if (v12 < v11)
          {
            __break(1u);
            goto LABEL_13;
          }
LABEL_17:
          *a2 = v11;
          a2[1] = v12;
          return;
        }
      }
      sub_1D4425D64();
      swift_allocError();
      *v16 = 0;
      swift_willThrow();
      v17 = v7;
      v18 = v6;
      v19 = 1;
    }
    else
    {
      v14 = *(_QWORD *)(v6 + 16);
      if (v14 > 2)
      {
        v15 = (uint64_t *)(v6 + 16 * v14);
        v11 = *v15;
        v12 = v15[1];
        sub_1D437CD58(v7, v6, 0);
        goto LABEL_17;
      }
      sub_1D4425D64();
      swift_allocError();
      *v20 = 0;
      swift_willThrow();
      v17 = v7;
      v18 = v6;
      v19 = 0;
    }
    sub_1D437CD58(v17, v18, v19);
  }
}

void sub_1D4422DFC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;

  sub_1D4422B84(a1);
  if (v1)
    return;
  if (v2 < 1)
  {
    if (v3 < 1)
      return;
  }
  else
  {
    sub_1D43211A0();
    if (!v6)
      goto LABEL_15;
    v7 = v5 + 512;
    if (__OFADD__(v5, 512))
    {
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
    if (v4 <= 0)
    {
      v8 = 0;
      goto LABEL_12;
    }
  }
  sub_1D43211A0();
  if (!v6)
    goto LABEL_17;
  v10 = __OFADD__(v9, 512);
  v8 = v9 + 512;
  if (v10)
  {
LABEL_18:
    __break(1u);
    return;
  }
LABEL_12:
  if (v8 < v7)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
}

double sub_1D4422E84@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  sub_1D4422DFC(a1);
  if (!v2)
  {
    sub_1D451B0A0();
    sub_1D451B0A0();
    sub_1D451AEF0();
    *(_OWORD *)a2 = v5;
    *(_OWORD *)(a2 + 16) = v6;
    result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(_BYTE *)(a2 + 48) = 1;
  }
  return result;
}

double sub_1D4422F24@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  void *v4;
  char v5;
  double result;
  __int128 v7;
  __int128 v8;
  _OWORD v9[3];
  char v10;

  sub_1D4422B30(a1, a2 & 1);
  sub_1D439C424(40, 0);
  sub_1D4422E84(v4, (uint64_t)v9);
  swift_unknownObjectRelease();
  v5 = v10;
  result = *(double *)v9;
  v7 = v9[1];
  v8 = v9[2];
  *(_OWORD *)a3 = v9[0];
  *(_OWORD *)(a3 + 16) = v7;
  *(_OWORD *)(a3 + 32) = v8;
  *(_BYTE *)(a3 + 48) = v5;
  return result;
}

uint64_t sub_1D4422FC4()
{
  return sub_1D451B0A0();
}

uint64_t sub_1D4422FD0(const void *a1, char *a2, char a3, double a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v7;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  double v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  int v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double (**v58)@<D0>(uint64_t@<X8>);
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  const void *v83;
  __int128 v84;
  uint64_t v85;
  char v86;
  _BYTE __dst[72];
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  __int128 v92;
  uint64_t v93;
  unint64_t v94;

  v94 = a7;
  *(_QWORD *)&v84 = a6;
  v83 = a1;
  v10 = a3 & 1;
  v11 = sub_1D42B28FC(&qword_1EFE4CA18);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)sub_1D42B28FC(&qword_1EFE4CA20);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_1D42B28FC(&qword_1EFE4CA28);
  v79 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v77 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_1D42B28FC(&qword_1EFE4CA30);
  v78 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v76 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_1D42B28FC(&qword_1EFE4CA38);
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v82 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_1D42B28FC(&qword_1EFE51680);
  v72 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  v71 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_1D42B28FC(&qword_1EFE51688);
  MEMORY[0x1E0C80A78](v73);
  v74 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SNLanguageAlignedAudioEmbeddingFeatureExtractor();
  sub_1D4422B30((uint64_t)a2, v10);
  if (v7)
    return (uint64_t)a2;
  sub_1D439C424(40, 0);
  v24 = v23;
  sub_1D4422DFC(v23);
  v68 = v24;
  sub_1D451B0A0();
  v67 = v25;
  v66 = v26;
  sub_1D451B0A0();
  sub_1D451AEF0();
  a2 = &v86;
  if ((sub_1D451AED8() & 1) == 0)
  {
    sub_1D4425D64();
    swift_allocError();
    *v32 = 1;
    swift_willThrow();
    swift_unknownObjectRelease();
    return (uint64_t)a2;
  }
  result = sub_1D451B04C();
  v28 = (double)result * a4;
  if ((~*(_QWORD *)&v28 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v28 <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v28 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v29 = result - (uint64_t)v28;
  if (__OFSUB__(result, (uint64_t)v28))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v30 = result - 512;
  if (__OFSUB__(result, 512))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if ((v30 & 0x8000000000000000) != 0)
  {
    v94 = 0;
    goto LABEL_13;
  }
  v31 = v30 / 0xA0;
  result = 160 * v31 + 512;
  if (!__OFADD__(160 * v31, 512))
  {
    v94 = v31 + 1;
LABEL_13:
    v33 = v29 / 160;
    v65 = sub_1D451B0A0();
    v64 = v34;
    v66 = v35;
    v67 = v33;
    v63 = sub_1D451B0A0();
    v62 = v36;
    v38 = v37;
    v88 = 0x40467A0000;
    v89 = 0x45F8700042480000;
    v90 = 0x38D1B71700000001;
    v91 = 1;
    v84 = xmmword_1D453D8C0;
    v92 = xmmword_1D453D8C0;
    v93 = 0x100000000;
    v39 = (uint64_t)v83;
    memcpy(__dst, v83, sizeof(__dst));
    sub_1D42BE38C((uint64_t)v83);
    sub_1D42BB6BC();
    sub_1D4328888(v39);
    v61 = v38;
    v40 = sub_1D42BA9B8();
    swift_release();
    v85 = v40;
    v83 = (const void *)sub_1D42B28FC((uint64_t *)&unk_1EFE4C9F0);
    v41 = sub_1D42B28FC((uint64_t *)&unk_1EFE557D0);
    sub_1D42F1168((unint64_t *)&unk_1EFE4F850, (uint64_t *)&unk_1EFE4C9F0, MEMORY[0x1E0C95D90]);
    sub_1D451A308();
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v14, v11);
    *(_QWORD *)&v17[v15[15]] = v94;
    *(_QWORD *)&v17[v15[16]] = v67;
    *(_QWORD *)&v17[v15[17]] = v41;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    swift_release();
    sub_1D42B28FC((uint64_t *)&unk_1EFE4A660);
    sub_1D42F1168((unint64_t *)&unk_1EFE51690, &qword_1EFE4CA20, (uint64_t)&unk_1D4535888);
    v42 = v77;
    sub_1D451A308();
    sub_1D42D7018((uint64_t)v17, &qword_1EFE4CA20);
    v43 = swift_allocObject();
    *(_QWORD *)(v43 + 16) = v94;
    *(_QWORD *)(v43 + 24) = 0x40467A0000;
    *(_QWORD *)(v43 + 32) = 0x45F8700042480000;
    *(_QWORD *)(v43 + 40) = 0x38D1B71700000001;
    *(_BYTE *)(v43 + 48) = 1;
    *(_OWORD *)(v43 + 52) = v84;
    *(_QWORD *)(v43 + 68) = 0x100000000;
    sub_1D42B28FC(&qword_1EFE4C970);
    v44 = v76;
    v45 = v81;
    sub_1D451A0C8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v42, v45);
    v46 = v82;
    sub_1D438FC18(v68);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v44, v80);
    v47 = v64;
    v48 = HIDWORD(v64);
    LODWORD(v42) = v62;
    v49 = HIDWORD(v62);
    sub_1D42E9D88(0, (unint64_t *)&unk_1EFE49790);
    sub_1D42F1168(&qword_1EFE4CA60, &qword_1EFE4CA38, MEMORY[0x1E0C95B48]);
    v50 = v71;
    v51 = v70;
    sub_1D451A3A4();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v46, v51);
    v52 = swift_allocObject();
    *(_QWORD *)(v52 + 16) = v65;
    *(_DWORD *)(v52 + 24) = v47;
    *(_DWORD *)(v52 + 28) = v48;
    v53 = v63;
    *(_QWORD *)(v52 + 32) = v66;
    *(_QWORD *)(v52 + 40) = v53;
    *(_DWORD *)(v52 + 48) = (_DWORD)v42;
    *(_DWORD *)(v52 + 52) = v49;
    *(_QWORD *)(v52 + 56) = v61;
    v54 = v72;
    v55 = (uint64_t)v74;
    v56 = v75;
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v74, v50, v75);
    v57 = v73;
    v58 = (double (**)@<D0>(uint64_t@<X8>))(v55 + *(int *)(v73 + 52));
    *v58 = sub_1D42EF0D8;
    v58[1] = 0;
    v59 = (_QWORD *)(v55 + *(int *)(v57 + 56));
    *v59 = sub_1D4425F20;
    v59[1] = v52;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v50, v56);
    sub_1D42F1168((unint64_t *)&unk_1EFE516A0, &qword_1EFE51688, (uint64_t)&unk_1D45440C0);
    a2 = (char *)sub_1D451A2E4();
    swift_unknownObjectRelease();
    sub_1D42D7018(v55, &qword_1EFE51688);
    return (uint64_t)a2;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1D44238D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  sub_1D42B28FC((uint64_t *)&unk_1EFE403A0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D4526260;
  *(_QWORD *)(v5 + 32) = 1;
  *(_QWORD *)(v5 + 40) = a2;
  *(_QWORD *)(v5 + 48) = *(unsigned int *)(a3 + 4);
  swift_bridgeObjectRetain();
  sub_1D42B28FC((uint64_t *)&unk_1EFE4A660);
  sub_1D42F1168(&qword_1EFE516B0, (uint64_t *)&unk_1EFE4A660, MEMORY[0x1E0DEAF38]);
  return sub_1D451A038();
}

void sub_1D44239A8(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  _BYTE *v11;

  v3 = *a1;
  v4 = objc_msgSend(*a1, sel_featureNames);
  v5 = sub_1D451ABFC();

  sub_1D4396620(v5);
  v7 = v6;
  swift_bridgeObjectRelease();
  if (v7
    && (v8 = (void *)sub_1D451A6C8(),
        swift_bridgeObjectRelease(),
        v9 = objc_msgSend(v3, sel_featureValueForName_, v8),
        v8,
        v9)
    && (v10 = objc_msgSend(v9, sel_multiArrayValue), v9, v10))
  {
    *a2 = v10;
  }
  else
  {
    sub_1D4425D64();
    swift_allocError();
    *v11 = 2;
    swift_willThrow();
  }
}

id sub_1D4423AD0@<X0>(void **a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  void *v4;
  int v5;
  int v6;
  uint64_t v7;
  id v8;
  id result;

  v4 = *a1;
  *(_QWORD *)a2 = sub_1D451B064();
  *(_DWORD *)(a2 + 8) = v5;
  *(_DWORD *)(a2 + 12) = v6;
  *(_QWORD *)(a2 + 16) = v7;
  type metadata accessor for SNFeaturePrint();
  v8 = v4;
  result = sub_1D444928C();
  *a3 = result;
  return result;
}

void sub_1D4423BA4()
{
  sub_1D4426454();
  __break(1u);
}

void sub_1D4423BE4()
{
  sub_1D4426454();
  __break(1u);
}

void sub_1D4423C24()
{
  sub_1D451B55C();
  __break(1u);
}

void sub_1D4423C7C()
{
  sub_1D4422AF0();
}

uint64_t sub_1D4423C88()
{
  return sub_1D4422FC4();
}

double sub_1D4423C9C@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  return sub_1D4422F24(a1, a2 & 1, a3);
}

void sub_1D4423CB4()
{
  sub_1D4423BA4();
}

void sub_1D4423CC0()
{
  sub_1D4423BE4();
}

void sub_1D4423CCC()
{
  sub_1D4423C24();
}

id sub_1D4423D08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v1 = v0 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl;
  sub_1D4421B90(*(_QWORD *)(v0 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl));
  if (v3)
  {
    (*(void (**)(uint64_t *__return_ptr, _QWORD, _QWORD))(v2 + 24))(&v15, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
    v5 = v15;
    v4 = v16;
    v6 = v17;
    v7 = v18;
    v8 = v19;
    v9 = v20;
    v10 = v21;
  }
  else
  {
    v4 = 0;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v5 = MEMORY[0x1E0DEE9D8];
  }
  v11 = type metadata accessor for _SNTimeDurationConstraint();
  v15 = v5;
  v16 = v4;
  v17 = v6;
  v18 = v7;
  v19 = v8;
  v20 = v9;
  v21 = v10;
  sub_1D42D4430((uint64_t)&v15);
  v18 = v11;
  v15 = v12;
  v13 = objc_allocWithZone((Class)SNTimeDurationConstraint);
  return sub_1D4425BEC(&v15);
}

uint64_t sub_1D4423DF0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl);
}

uint64_t sub_1D4423E44(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl) = result;
  return result;
}

float sub_1D4423E74()
{
  uint64_t v0;

  return *(float *)(v0 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 20);
}

void sub_1D4423ECC(float a1)
{
  sub_1D4423FB8(a1);
  sub_1D43AAC44();
}

void sub_1D4423FB8(float a1)
{
  uint64_t v1;
  _BYTE *v3;

  if (a1 >= 0.0 && a1 < 1.0)
  {
    *(float *)(v1 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 20) = a1;
  }
  else
  {
    sub_1D4425EC0();
    sub_1D42B6D0C();
    *v3 = 0;
    sub_1D4312028();
  }
}

uint64_t sub_1D4424050()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 24);
}

void sub_1D44240BC(CMTimeValue a1, uint64_t a2, CMTimeEpoch a3)
{
  uint64_t v3;
  uint64_t v4;
  id v8;
  CMTimeValue v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = v3;
  type metadata accessor for SNUtils();
  v8 = sub_1D4423D08();
  v9 = sub_1D44BCA28(a1, a2, a3, v8);
  v11 = v10;
  v13 = v12;

  v14 = (_QWORD *)(v4 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl);
  v14[3] = v9;
  v14[4] = v11;
  v14[5] = v13;
  sub_1D42CB0F8();
}

double sub_1D4424144()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl);
  v2 = *v1;
  v3 = *((_DWORD *)v1 + 5);
  v4 = v1[3];
  v5 = v1[5];
  type metadata accessor for SNFeaturePrintExtractor();
  v6 = sub_1D42B6F40();
  *(_OWORD *)(v6 + 16) = 0u;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_OWORD *)(v6 + 48) = 0u;
  *(_QWORD *)(v6 + 64) = 0;
  *(_QWORD *)(v6 + 72) = v2;
  *(_DWORD *)(v6 + 80) = v3;
  *(_QWORD *)(v6 + 84) = v4;
  result = *((double *)v1 + 4);
  *(double *)(v6 + 92) = result;
  *(_QWORD *)(v6 + 100) = v5;
  *(_QWORD *)(v6 + 112) = 0;
  return result;
}

id sub_1D44241D4()
{
  void *v0;

  return objc_msgSend(v0, sel_initWithFeaturePrintType_, 1);
}

void sub_1D4424208()
{
  uint64_t v0;

  sub_1D42B7238();
  sub_1D442422C(v0);
  sub_1D42B6E24();
}

id sub_1D442422C(uint64_t a1)
{
  char *v1;
  char *v2;
  objc_class *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  char *v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  char *v18;
  objc_super v20;

  v2 = v1;
  v4 = (objc_class *)sub_1D42B7104();
  sub_1D4421B90(a1);
  if (v5)
  {
    v7 = v5;
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 16);
    v10 = v2;
    v11 = v9(v7, v8);
    v13 = v12;
    v15 = v14;
    v16 = HIDWORD(v12);
  }
  else
  {
    v11 = *MEMORY[0x1E0CA2E18];
    v13 = *(_DWORD *)(MEMORY[0x1E0CA2E18] + 8);
    LODWORD(v16) = *(_DWORD *)(MEMORY[0x1E0CA2E18] + 12);
    v15 = *(_QWORD *)(MEMORY[0x1E0CA2E18] + 16);
    v17 = v2;
  }
  v18 = &v2[OBJC_IVAR___SNCreateFeaturePrintRequest_impl];
  *(_QWORD *)v18 = a1;
  *((_QWORD *)v18 + 1) = 0;
  v18[16] = 1;
  *((_DWORD *)v18 + 5) = 1056964608;
  *((_QWORD *)v18 + 3) = v11;
  *((_DWORD *)v18 + 8) = v13;
  *((_DWORD *)v18 + 9) = v16;
  *((_QWORD *)v18 + 5) = v15;

  v20.receiver = v2;
  v20.super_class = v4;
  return objc_msgSendSuper2(&v20, sel_init);
}

void sub_1D4424330(uint64_t a1, uint64_t a2)
{
  id v4;

  v4 = objc_allocWithZone((Class)sub_1D44265A4());
  sub_1D442441C(a1, a2, 0);
  sub_1D44265A4();
  sub_1D442648C();
  sub_1D4377BF8();
}

id sub_1D442441C(uint64_t a1, uint64_t a2, char a3)
{
  char *v3;
  uint64_t v4;
  char *v5;
  objc_class *v9;
  int v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  char *v21;
  objc_super v22;

  v5 = v3;
  v9 = (objc_class *)sub_1D44265A4();
  v10 = a3 & 1;
  if (a1 == 6)
  {
    type metadata accessor for SNLanguageAlignedAudioEmbeddingFeatureExtractor();
    v11 = v5;
    sub_1D4422B30(a2, v10);
    if (v4)
    {

      return (id)sub_1D442648C();
    }
  }
  else
  {
    if ((a3 & 1) == 0)
    {
      sub_1D4425EC0();
      sub_1D42B6D0C();
      *v19 = 2;
      sub_1D4312028();
      return (id)sub_1D442648C();
    }
    v12 = v5;
  }
  sub_1D4421B90(a1);
  if (v14)
  {
    v15 = (*(uint64_t (**)(void))(v13 + 16))();
    v18 = HIDWORD(v16);
  }
  else
  {
    v15 = *MEMORY[0x1E0CA2E18];
    LODWORD(v16) = *(_DWORD *)(MEMORY[0x1E0CA2E18] + 8);
    LODWORD(v18) = *(_DWORD *)(MEMORY[0x1E0CA2E18] + 12);
    v17 = *(_QWORD *)(MEMORY[0x1E0CA2E18] + 16);
  }
  v21 = &v5[OBJC_IVAR___SNCreateFeaturePrintRequest_impl];
  *(_QWORD *)v21 = a1;
  *((_QWORD *)v21 + 1) = a2;
  v21[16] = v10 != 0;
  *((_DWORD *)v21 + 5) = 1056964608;
  *((_QWORD *)v21 + 3) = v15;
  *((_DWORD *)v21 + 8) = v16;
  *((_DWORD *)v21 + 9) = v18;
  *((_QWORD *)v21 + 5) = v17;

  v22.receiver = v5;
  v22.super_class = v9;
  return objc_msgSendSuper2(&v22, sel_init);
}

id sub_1D4424568()
{
  uint64_t v0;
  objc_class *v1;
  char *v2;
  char v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  objc_super v9;

  v2 = (char *)sub_1D42B7238();
  v3 = *(_BYTE *)(v0 + 16);
  v4 = *(_DWORD *)(v0 + 20);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = &v2[OBJC_IVAR___SNCreateFeaturePrintRequest_impl];
  *(_OWORD *)v7 = *(_OWORD *)v0;
  v7[16] = v3;
  *((_DWORD *)v7 + 5) = v4;
  *((_QWORD *)v7 + 3) = v5;
  *((_QWORD *)v7 + 4) = *(_QWORD *)(v0 + 32);
  *((_QWORD *)v7 + 5) = v6;
  v9.receiver = v2;
  v9.super_class = v1;
  return objc_msgSendSuper2(&v9, sel_init);
}

void SNCreateFeaturePrintRequest.copy(with:)(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  id v4;

  v3 = sub_1D42B7104();
  sub_1D44263FC(v1 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl);
  v4 = sub_1D4424568();
  a1[3] = v3;
  *a1 = v4;
  sub_1D43AAC44();
}

uint64_t SNCreateFeaturePrintRequest.hash.getter()
{
  uint64_t v0;

  sub_1D44263FC(v0 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl);
  return sub_1D4420294();
}

BOOL SNCreateFeaturePrintRequest.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  void *v10;
  __int128 v11;
  char v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD v17[2];
  __int128 v18;
  uint64_t v19;

  sub_1D42B7104();
  sub_1D431A96C(a1, (uint64_t)&v18, &qword_1EFE47160);
  if (v19)
  {
    sub_1D42B293C(&v18, v17);
    sub_1D42B294C((uint64_t)v17, (uint64_t)&v11);
    if (swift_dynamicCast())
    {
      v3 = v10;
      v4 = *(_BYTE *)(v1 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 16);
      v5 = *(_DWORD *)(v1 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 20);
      v6 = *(_QWORD *)(v1 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 24);
      v7 = *(_QWORD *)(v1 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 40);
      v11 = *(_OWORD *)(v1 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl);
      v12 = v4;
      v13 = v5;
      v14 = v6;
      v15 = *(_QWORD *)(v1 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 32);
      v16 = v7;
      sub_1D44263FC((uint64_t)v10 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl);
      v8 = sub_1D441FDA8((uint64_t)&v11, (uint64_t)&v10);

    }
    else
    {
      v8 = 0;
    }
    sub_1D42B5400((uint64_t)v17);
  }
  else
  {
    return 0;
  }
  return v8;
}

void SNCreateFeaturePrintRequest.__allocating_init(coder:)()
{
  void *v0;

  sub_1D42B7238();
  SNCreateFeaturePrintRequest.init(coder:)(v0);
  sub_1D42B6E24();
}

id SNCreateFeaturePrintRequest.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  id v4;

  v3 = v1;
  sub_1D42B1E80();
  swift_getObjectType();

  v4 = sub_1D4424568();
  sub_1D42D83E0();
  return v4;
}

Swift::Void __swiftcall SNCreateFeaturePrintRequest.encode(with:)(NSCoder with)
{
  uint64_t v1;
  __int128 v2;
  _OWORD v3[3];

  v2 = *(_OWORD *)(v1 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 16);
  v3[0] = *(_OWORD *)(v1 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl);
  v3[1] = v2;
  v3[2] = *(_OWORD *)(v1 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 32);
  sub_1D42B0310((uint64_t)v3, 1819307369, 0xE400000000000000, (uint64_t)with.super.isa);
}

uint64_t static SNCreateFeaturePrintRequest.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t sub_1D4424AAC(const void *a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(_QWORD *__return_ptr, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  char v22;
  _BYTE *v23;
  uint64_t v24;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _QWORD v32[6];
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41[7];
  _QWORD v42[3];
  char v43[40];
  uint64_t v44;
  _BYTE v45[16];
  _QWORD v46[6];
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;

  if (*(_QWORD *)&v1[OBJC_IVAR___SNCreateFeaturePrintRequest_impl] == 6)
  {
    v4 = sub_1D4422FD0(a1, *(char **)&v1[OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 8], v1[OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 16], *(float *)&v1[OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 20], *(_QWORD *)&v1[OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 24], *(_QWORD *)&v1[OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 32], *(_QWORD *)&v1[OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 40]);
    if (!v2)
      return v4;
  }
  else
  {
    v55 = v2;
    v30 = v1;
    v5 = MGGetProductType();
    sub_1D4380880(v5, v41);
    sub_1D431AC40((uint64_t)v41, (uint64_t)v43, &qword_1EFE506B0);
    if (v44)
    {
      v6 = v43[0];
      sub_1D42F11A4(v41);
      sub_1D4380388(v6);
      v7 = (void (*)(_QWORD *__return_ptr, uint64_t))v42[2];
      sub_1D431AC40((uint64_t)v42, (uint64_t)v45, &qword_1EFE4A7A0);
      v8 = sub_1D42F1244((uint64_t)v45);
      v7(v32, v8);
      swift_release();
      v9 = v32[0];
      v10 = v32[1];
      v11 = v32[2];
      v12 = v32[3];
      v13 = v32[4];
      v14 = v32[5];
      v15 = v33;
      v16 = v34;
      v17 = v35;
      v18 = v36;
      v19 = v37;
      v20 = v38;
      v21 = v39;
      v22 = v40;
    }
    else
    {
      if (qword_1EFE48EF0 != -1)
        swift_once();
      v10 = *(_QWORD *)algn_1EFEA7998;
      v12 = qword_1EFEA79A8;
      v28 = qword_1EFEA79A0;
      v29 = qword_1EFEA7990;
      v14 = qword_1EFEA79B8;
      v27 = qword_1EFEA79B0;
      v26 = byte_1EFEA79C0;
      v16 = byte_1EFEA79C1;
      v17 = byte_1EFEA79C2;
      v18 = byte_1EFEA79C3;
      v19 = byte_1EFEA79C4;
      v20 = byte_1EFEA79C5;
      v21 = qword_1EFEA79C8;
      v22 = byte_1EFEA79D0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D42CB8FC();
      v15 = v26;
      v13 = v27;
      v11 = v28;
      v9 = v29;
    }
    v46[0] = v9;
    v46[1] = v10;
    v46[2] = v11;
    v46[3] = v12;
    v46[4] = v13;
    v46[5] = v14;
    v47 = v15;
    v48 = v16;
    v49 = v17;
    v50 = v18;
    v51 = v19;
    v52 = v20;
    v53 = v21;
    v54 = v22;
    v23 = v30;
    sub_1D43D2580(a1, (uint64_t)v46, v23);
    v3 = v24;

    sub_1D42CB8F4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v3;
}

BOOL sub_1D4424CEC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl) == 6;
}

uint64_t sub_1D4424D08(const void *a1)
{
  return sub_1D4424AAC(a1);
}

void sub_1D4424D20()
{
  sub_1D4424144();
}

uint64_t sub_1D4424D48()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void (*v4)(void);
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  unint64_t v10;
  void (*v11)(void);
  void *v12;
  uint64_t v13;
  id v14;
  void *value;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  char *v24;
  id v25;
  id v26;
  id v27;
  int64_t v28;
  int32_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  unsigned int v38;
  int32_t v39;
  void (*v40)(void);
  void *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  char *v45;
  char *v46;
  CMTimeValue v47;
  CMTimeEpoch epoch;
  CMTimeValue v49;
  id v50;
  char *v51;
  id v52;
  void (*v53)(void);
  id v54;
  CMTimeRange v55;
  CMTime start;
  CMTime v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  CMTimeRange v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  sub_1D43072F8();
  v66 = v2;
  v67 = v5;
  v6 = v0;
  v64 = *MEMORY[0x1E0C80C00];
  v7 = v0[14];
  v8 = v7 < 1;
  v9 = v7 - 1;
  if (!v8)
  {
    v0[14] = v9;
    v10 = MEMORY[0x1E0DEE9D8];
LABEL_3:
    sub_1D42CB8FC();
    if (v10 >> 62)
    {
      sub_1D42B28FC(&qword_1EFE4C690);
      sub_1D451B568();
      sub_1D42CB8F4();
    }
    else
    {
      sub_1D451B868();
    }
    sub_1D42CB8F4();
    return sub_1D4307180();
  }
  v11 = v4;
  v12 = v3;
  v13 = objc_opt_self();
  v55.start.value = 0;
  v14 = sub_1D4500090(v13, v12, (uint64_t)&v55);
  value = (void *)v55.start.value;
  if (!v14)
  {
    v20 = (id)v55.start.value;
    sub_1D4519AA4();

    sub_1D42B7124();
    return sub_1D4307180();
  }
  v53 = v11;
  v54 = v14;
  v17 = v0[7];
  v16 = v0[8];
  swift_bridgeObjectRetain();
  v18 = value;
  sub_1D4425260(v17, v16);
  if (v1)
  {
    swift_unknownObjectRelease();
    sub_1D42CB5C8();
    return sub_1D4307180();
  }
  v21 = v19;
  sub_1D42CB5C8();
  v22 = v6[9];
  v23 = objc_allocWithZone((Class)type metadata accessor for SNFeaturePrint());
  v52 = v21;
  v24 = (char *)sub_1D444AA10(v22, v52);
  v55.start.value = 0;
  v25 = sub_1D4500E1C(v13, v12, (uint64_t)&v55);
  if (!v25)
  {
    v43 = (id)v55.start.value;
    sub_1D4426570();

    sub_1D42B7124();
    swift_unknownObjectRelease();

    sub_1D4426540((uint64_t)&v65);
    return sub_1D4307180();
  }
  v26 = v25;
  v51 = v24;
  v27 = (id)v55.start.value;
  v28 = sub_1D451B928();
  v29 = sub_1D44F2078((uint64_t)v12);
  if (v29 < 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  v50 = v26;
  CMTimeMake(&v55.start, v28, v29);
  v49 = v55.start.value;
  v30 = *(_QWORD *)&v55.start.timescale;
  epoch = v55.start.epoch;
  result = sub_1D4426470();
  v32 = v6[5];
  if (v32)
  {
    v33 = v6[6];
    v34 = sub_1D42B5528(v6 + 2, v6[5]);
    v35 = *(_QWORD *)(v32 - 8);
    MEMORY[0x1E0C80A78](v34);
    v37 = (char *)&epoch - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v35 + 16))(v37);
    v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 48))(v32, v33);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v32);
    v39 = sub_1D44F2078((uint64_t)v12);
    if ((v39 & 0x80000000) == 0)
    {
      CMTimeMake(&v55.start, v38, v39);
      start = v55.start;
      v57.value = v49;
      *(_QWORD *)&v57.timescale = v30;
      v57.epoch = epoch;
      CMTimeRangeMake(&v55, &v57, &start);
      v63 = v55;
      v40 = v53;
      v53();
      v41 = v52;
      v42 = sub_1D451AEE4();
      ((void (*)(uint64_t))v40)(v42);
      sub_1D451AEF0();
      v44 = v62;
      v45 = v51;
      v46 = &v51[OBJC_IVAR___SNFeaturePrint_impl];
      *(_QWORD *)v46 = v58;
      *((_QWORD *)v46 + 1) = v59;
      *((_OWORD *)v46 + 1) = v60;
      *((_QWORD *)v46 + 4) = v61;
      *((_QWORD *)v46 + 5) = v44;
      sub_1D42B28FC(&qword_1EFE40410);
      v47 = sub_1D42B6F40();
      *(_OWORD *)(v47 + 16) = xmmword_1D4525300;
      *(_QWORD *)(v47 + 32) = v45;
      v55.start.value = v47;
      sub_1D451A950();
      v10 = v55.start.value;
      swift_unknownObjectRelease();
      sub_1D4426540((uint64_t)&v64);

      goto LABEL_3;
    }
LABEL_19:
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1D4425260(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  id v4;
  _BYTE *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;

  if (!a2)
  {
    v6 = (void *)sub_1D4307180();
    v7 = sub_1D44258B0(v6);
    if (v2)
      goto LABEL_12;
    v4 = (id)v7;
LABEL_6:
    if (objc_msgSend(v4, sel_type) == (id)5)
    {
      if (objc_msgSend(v4, sel_multiArrayValue))
      {

        goto LABEL_12;
      }
      sub_1D42B7F2C();
      sub_1D42B6D0C();
      *v9 = 0;
    }
    else
    {
      type metadata accessor for SNError();
      sub_1D4426590();
      sub_1D4342D78(0x80000001D4551120, v8, (uint64_t)"Feature extractor should only use MultiArray features");
    }
    sub_1D4312028();

    goto LABEL_12;
  }
  v3 = (void *)sub_1D451A6C8();
  v4 = sub_1D4426578((uint64_t)v3, sel_featureValueForName_);

  if (v4)
    goto LABEL_6;
  sub_1D42B7F2C();
  sub_1D42B6D0C();
  *v5 = 0;
  sub_1D4312028();
LABEL_12:
  sub_1D4307180();
  sub_1D4377BF8();
}

uint64_t sub_1D442537C()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v3;
  uint64_t v4;
  _QWORD v5[5];

  sub_1D4426470();
  sub_1D431A96C(v0 + 16, (uint64_t)&v3, &qword_1EFE51638);
  if (v4)
  {
    sub_1D42E33E0(&v3, (uint64_t)v5);
    v1 = v5[4];
    sub_1D42B5528(v5, v5[3]);
    sub_1D44264DC(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 40));
    sub_1D42B5400((uint64_t)v5);
  }
  else
  {
    sub_1D42D7018((uint64_t)&v3, &qword_1EFE51638);
    sub_1D4425DA0();
    sub_1D42B6D0C();
    sub_1D4312028();
  }
  return sub_1D4307180();
}

void sub_1D442543C(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _BYTE *v14;
  _QWORD v15[5];
  _BYTE v16[40];

  v3 = v1;
  v5 = *(_QWORD *)(v1 + 72);
  sub_1D4421B90(v5);
  if (v6)
  {
    v8 = v6;
    v9 = v7;
    v10 = 0xD000000000000014;
    v11 = 0x80000001D45544C0;
    v12 = 0x80000001D45544E0;
    v13 = 0xD000000000000012;
    if (v5 != 4)
    {
      v13 = 0;
      v12 = 0;
    }
    if (v5 != 5)
    {
      v10 = v13;
      v11 = v12;
    }
    *(_QWORD *)(v3 + 56) = v10;
    *(_QWORD *)(v3 + 64) = v11;
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, double, float))(v9 + 8))(v15, *(_QWORD *)(v3 + 84), *(_QWORD *)(v3 + 92), *(_QWORD *)(v3 + 100), v8, v9, a1, *(float *)(v3 + 80));
    if (!v2)
    {
      sub_1D441FC84((uint64_t)v15, (uint64_t)v16);
      sub_1D42D7018((uint64_t)v15, &qword_1EFE51638);
      swift_beginAccess();
      sub_1D4425DDC((uint64_t)v16, v3 + 16);
      swift_endAccess();
    }
  }
  else
  {
    sub_1D42B7F2C();
    sub_1D42B6D0C();
    *v14 = 0;
    sub_1D4312028();
  }
}

void sub_1D44255A0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v2[3];
  uint64_t v3;
  uint64_t v4;

  sub_1D4426470();
  sub_1D431A96C(v0 + 16, (uint64_t)v2, &qword_1EFE51638);
  if (v3)
  {
    v1 = v4;
    sub_1D42B5528(v2, v3);
    sub_1D44264DC(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 32));
    sub_1D42B5400((uint64_t)v2);
  }
  else
  {
    __break(1u);
  }
}

void sub_1D4425628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned int v9;
  float v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  int v23;
  id v24;
  _QWORD *v25;
  void *v26;
  id v27;
  id v28[5];

  v3 = v0;
  v28[4] = *(id *)MEMORY[0x1E0C80C00];
  v4 = (_QWORD *)(v0 + 16);
  sub_1D4426470();
  v5 = *(_QWORD *)(v3 + 40);
  if (!v5)
LABEL_32:
    __break(1u);
  v6 = *(_QWORD *)(v3 + 48);
  v7 = sub_1D42B5528(v4, *(_QWORD *)(v3 + 40));
  v8 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1D434799C();
  (*(void (**)(uint64_t))(v8 + 16))(v2);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 48))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v5);
  v10 = *(float *)(v3 + 80) * (float)v9;
  if ((~LODWORD(v10) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v10 <= -9.2234e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v10 >= 9.2234e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v11 = v9 - (uint64_t)v10;
  if (__OFSUB__(v9, (uint64_t)v10))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v12 = ceil((double)v9 / (double)v11);
  if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) == 0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v12 <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v12 >= 9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  *(_QWORD *)(v3 + 112) = (uint64_t)v12;
  if (!v11)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v13 = v9 % v11;
  v14 = __OFSUB__(v11, v13);
  v15 = v11 - v13;
  if (v14)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v11 == -1 && v15 == 0x8000000000000000)
    goto LABEL_31;
  v17 = v15 % v11;
  v18 = v17 + 1;
  if (__OFADD__(v17, 1))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  sub_1D4426584();
  if (!v1)
  {
    v20 = v19;
    sub_1D44F23F4(v19, 1);

    v21 = (void *)sub_1D442537C();
    v22 = objc_opt_self();
    v28[0] = 0;
    v23 = sub_1D45007AC(v22, v21, v18, (uint64_t)v28);

    if (v23)
    {
      v24 = v28[0];
      sub_1D4426584();
      v26 = v25;
      sub_1D44F23F4(v25, 0);

    }
    else
    {
      v27 = v28[0];
      sub_1D4426570();

      sub_1D42F1DA8();
    }
  }
}

uint64_t sub_1D44258B0(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  _BYTE *v12;
  uint64_t v13;

  v2 = objc_msgSend(a1, sel_featureNames);
  v3 = sub_1D451ABFC();

  v4 = *(_QWORD *)(v3 + 16);
  sub_1D42CB5C8();
  if (v4 != 1)
  {
    type metadata accessor for SNError();
    sub_1D4426590();
    sub_1D4342D78(0x80000001D4551120, v13, (uint64_t)"Feature extractor should have only one output feature");
    goto LABEL_6;
  }
  v5 = objc_msgSend(a1, sel_featureNames);
  v6 = sub_1D451ABFC();

  sub_1D4396620(v6);
  v8 = v7;
  sub_1D42CB8F4();
  if (!v8
    || (v9 = (void *)sub_1D451A6C8(),
        v10 = swift_bridgeObjectRelease(),
        v11 = sub_1D4426578(v10, sel_featureValueForName_),
        v9,
        !v11))
  {
    sub_1D42B7F2C();
    sub_1D42B6D0C();
    *v12 = 0;
LABEL_6:
    sub_1D42B7124();
  }
  return sub_1D4307180();
}

uint64_t sub_1D44259FC()
{
  uint64_t v0;

  sub_1D42D7018(v0 + 16, &qword_1EFE51638);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D4425A30()
{
  return sub_1D4424D48();
}

void sub_1D4425A44()
{
  sub_1D4425628();
}

void sub_1D4425A58()
{
  sub_1D44255A0();
}

void sub_1D4425A6C(double a1)
{
  sub_1D442543C(a1);
}

uint64_t sub_1D4425A80()
{
  return sub_1D442537C();
}

uint64_t type metadata accessor for SNVGGishExtractor()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SNLogMelSpectrogramExtractor()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SNSoundPrintExtractorBase()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SNSoundPrintAExtractor()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SNSoundPrintKExtractor()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SNLanguageAlignedAudioEmbeddingFeatureExtractor()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SNCreateFeaturePrintRequest()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNCreateFeaturePrintRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for SNFeaturePrintExtractor()
{
  return objc_opt_self();
}

void type metadata accessor for CreateFeaturePrintRequest()
{
  sub_1D42CB35C();
}

unint64_t sub_1D4425BB0()
{
  unint64_t result;

  result = qword_1EFE51610;
  if (!qword_1EFE51610)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453D2EC, &unk_1E97A8D88);
    atomic_store(result, (unint64_t *)&qword_1EFE51610);
  }
  return result;
}

id sub_1D4425BEC(_QWORD *a1)
{
  void *v1;
  id v3;

  sub_1D42B5528(a1, a1[3]);
  v3 = objc_msgSend(v1, sel_initWithImpl_, sub_1D451B814());
  swift_unknownObjectRelease();
  sub_1D42B5400((uint64_t)a1);
  return v3;
}

uint64_t sub_1D4425C54()
{
  return sub_1D42B6E34();
}

void sub_1D4425C60(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1D4420810(a1, *(float *)(v1 + 16));
}

unint64_t sub_1D4425C7C()
{
  unint64_t result;

  result = qword_1EFE51620;
  if (!qword_1EFE51620)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453D868, &unk_1E97A25B0);
    atomic_store(result, (unint64_t *)&qword_1EFE51620);
  }
  return result;
}

uint64_t sub_1D4425CB8()
{
  return sub_1D42B6E34();
}

void sub_1D4425CC4(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1D4421CF8(a1, *(float *)(v1 + 16));
}

unint64_t sub_1D4425CE0()
{
  unint64_t result;

  result = qword_1EFE51628;
  if (!qword_1EFE51628)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453D828, &unk_1E97A7650);
    atomic_store(result, (unint64_t *)&qword_1EFE51628);
  }
  return result;
}

uint64_t sub_1D4425D1C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D4425D40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D44221FC(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1, *(float *)(v1 + 48));
}

unint64_t sub_1D4425D64()
{
  unint64_t result;

  result = qword_1EFE51630;
  if (!qword_1EFE51630)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453D7E8, &unk_1E97AC2E0);
    atomic_store(result, (unint64_t *)&qword_1EFE51630);
  }
  return result;
}

unint64_t sub_1D4425DA0()
{
  unint64_t result;

  result = qword_1EFE51640;
  if (!qword_1EFE51640)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453D7A8, &unk_1E97A7C78);
    atomic_store(result, (unint64_t *)&qword_1EFE51640);
  }
  return result;
}

uint64_t sub_1D4425DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D42B28FC(&qword_1EFE51638);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D4425E24()
{
  unint64_t result;

  result = qword_1EFE51650;
  if (!qword_1EFE51650)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453D758, &type metadata for CreateFeaturePrintRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51650);
  }
  return result;
}

uint64_t sub_1D4425E60(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_1D42B8B10(&qword_1EFE51658);
    v8 = a2;
    result = MEMORY[0x1D825E41C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D4425EC0()
{
  unint64_t result;

  result = qword_1EFE51678;
  if (!qword_1EFE51678)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453D718, &unk_1E97AA330);
    atomic_store(result, (unint64_t *)&qword_1EFE51678);
  }
  return result;
}

uint64_t sub_1D4425EFC()
{
  return sub_1D42B6E34();
}

uint64_t sub_1D4425F08(uint64_t a1)
{
  uint64_t v1;

  return sub_1D44238D0(a1, *(_QWORD *)(v1 + 16), v1 + 24);
}

uint64_t sub_1D4425F14()
{
  return sub_1D42B6E34();
}

id sub_1D4425F20@<X0>(void **a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1D4423AD0(a1, a2, a3);
}

uint64_t sub_1D4425F30(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D4425F7C + 4 * byte_1D453D0EF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D4425FB0 + 4 * byte_1D453D0EA[v4]))();
}

uint64_t sub_1D4425FB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4425FB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4425FC0);
  return result;
}

uint64_t sub_1D4425FCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4425FD4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D4425FD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4425FE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SNCreateFeaturePrintRequest.DomainError()
{
  sub_1D42CB35C();
}

ValueMetadata *type metadata accessor for CreateFeaturePrintRequest.CodingKeys()
{
  return &type metadata for CreateFeaturePrintRequest.CodingKeys;
}

void type metadata accessor for SNFeaturePrintExtractor.DomainError()
{
  sub_1D42CB35C();
}

uint64_t _s13SoundAnalysis25CreateFeaturePrintRequestV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D442606C + 4 * byte_1D453D0F9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D44260A0 + 4 * byte_1D453D0F4[v4]))();
}

uint64_t sub_1D44260A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D44260A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D44260B0);
  return result;
}

uint64_t sub_1D44260BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D44260C4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D44260C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D44260D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SNLanguageAlignedAudioEmbeddingFeatureExtractor.DomainError()
{
  sub_1D42CB35C();
}

void type metadata accessor for CreateFeaturePrintUtils.DomainError()
{
  sub_1D42CB35C();
}

uint64_t sub_1D44260F4(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D4426134 + 4 * byte_1D453D0FE[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D4426154 + 4 * byte_1D453D103[v4]))();
}

_BYTE *sub_1D4426134(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D4426154(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D442615C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4426164(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D442616C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4426174(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for SNVGGishExtractor.DomainError()
{
  sub_1D42CB35C();
}

unint64_t sub_1D4426190()
{
  unint64_t result;

  result = qword_1EFE516B8;
  if (!qword_1EFE516B8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453D498, &unk_1E97A25B0);
    atomic_store(result, (unint64_t *)&qword_1EFE516B8);
  }
  return result;
}

unint64_t sub_1D44261D0()
{
  unint64_t result;

  result = qword_1EFE516C0;
  if (!qword_1EFE516C0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453D500, &unk_1E97A7650);
    atomic_store(result, (unint64_t *)&qword_1EFE516C0);
  }
  return result;
}

unint64_t sub_1D4426210()
{
  unint64_t result;

  result = qword_1EFE516C8;
  if (!qword_1EFE516C8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453D568, &unk_1E97AC2E0);
    atomic_store(result, (unint64_t *)&qword_1EFE516C8);
  }
  return result;
}

unint64_t sub_1D4426250()
{
  unint64_t result;

  result = qword_1EFE516D0;
  if (!qword_1EFE516D0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453D5D0, &unk_1E97A7C78);
    atomic_store(result, (unint64_t *)&qword_1EFE516D0);
  }
  return result;
}

unint64_t sub_1D4426290()
{
  unint64_t result;

  result = qword_1EFE516D8;
  if (!qword_1EFE516D8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453D688, &type metadata for CreateFeaturePrintRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE516D8);
  }
  return result;
}

unint64_t sub_1D44262D0()
{
  unint64_t result;

  result = qword_1EFE516E0;
  if (!qword_1EFE516E0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453D6F0, &unk_1E97AA330);
    atomic_store(result, (unint64_t *)&qword_1EFE516E0);
  }
  return result;
}

unint64_t sub_1D4426310()
{
  unint64_t result;

  result = qword_1EFE516E8;
  if (!qword_1EFE516E8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453D5F8, &type metadata for CreateFeaturePrintRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE516E8);
  }
  return result;
}

unint64_t sub_1D4426350()
{
  unint64_t result;

  result = qword_1EFE516F0;
  if (!qword_1EFE516F0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453D620, &type metadata for CreateFeaturePrintRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE516F0);
  }
  return result;
}

id sub_1D4426390()
{
  return sub_1D44229D8();
}

uint64_t sub_1D44263A4()
{
  return sub_1D44229B8();
}

uint64_t sub_1D44263C4()
{
  uint64_t v0;

  return v0;
}

double sub_1D44263FC@<D0>(uint64_t a1@<X8>)
{
  return *(double *)(a1 + 32);
}

uint64_t sub_1D4426430()
{
  return sub_1D451A6C8();
}

uint64_t sub_1D4426454()
{
  return sub_1D451B55C();
}

uint64_t sub_1D4426470()
{
  return swift_beginAccess();
}

uint64_t sub_1D4426480()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1D442648C()
{
  return swift_deallocPartialClassInstance();
}

uint64_t *sub_1D4426494(uint64_t a1, double a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  float v5;

  return sub_1D442210C(a1, v4, v3, v2, a2, v5);
}

uint64_t sub_1D44264AC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D44264DC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_1D44264F0@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 112) = a1;
  return v1 - 112;
}

uint64_t sub_1D4426508()
{
  uint64_t v0;

  return v0;
}

void sub_1D4426520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{

}

void sub_1D4426540(uint64_t a1@<X8>)
{

}

double sub_1D4426558@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)v1 = a1;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 33) = 0u;
  return result;
}

uint64_t sub_1D4426570()
{
  return sub_1D4519AA4();
}

id sub_1D4426578(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

void sub_1D4426584()
{
  sub_1D44255A0();
}

uint64_t sub_1D44265A4()
{
  return swift_getObjectType();
}

id sub_1D44265AC()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t sub_1D44265B8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1D44265E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = nullsub_1(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1D4426608()
{
  sub_1D4427EAC();
  return sub_1D451BA3C();
}

uint64_t sub_1D4426630()
{
  sub_1D4427EAC();
  return sub_1D451BA48();
}

_QWORD *sub_1D4426658(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  void *v9;
  void *v10;
  _QWORD v11[4];

  v5 = sub_1D42B5528(a1, a1[3]);
  sub_1D451BA00();
  if (v2)
  {
    sub_1D42B5400((uint64_t)a1);
  }
  else
  {
    sub_1D42B5528(v11, v11[3]);
    sub_1D44298C4();
    sub_1D451B838();
    v6 = v10;
    v9 = v10;
    v7 = sub_1D42B28FC(&qword_1EFE51728);
    sub_1D43E26A4((uint64_t)&v9, v7, a2, (uint64_t)&v10);

    v5 = v10;
    sub_1D42B5400((uint64_t)v11);
    sub_1D42B5400((uint64_t)a1);
  }
  return v5;
}

uint64_t sub_1D4426770(_QWORD *a1, void *a2)
{
  id v3;
  _BYTE v5[24];
  uint64_t v6;

  sub_1D42B5528(a1, a1[3]);
  sub_1D451BA18();
  sub_1D42CAEF0((uint64_t)v5, v6);
  sub_1D4429A48();
  v3 = a2;
  sub_1D451B850();

  return sub_1D42B5400((uint64_t)v5);
}

uint64_t sub_1D4426824(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6C437463656A626FLL && a2 == 0xEB00000000737361;
  if (v2 || (sub_1D4429E8C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F437463656A626FLL && a2 == 0xED0000746E65746ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1D4429E8C();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_1D4426934()
{
  sub_1D4429E5C();
  sub_1D451B964();
  sub_1D451B994();
  sub_1D42BE978();
}

uint64_t sub_1D4426964(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6F437463656A626FLL;
  else
    return 0x6C437463656A626FLL;
}

_QWORD *sub_1D44269B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  _QWORD *result;

  result = sub_1D4426658(a1, *(_QWORD *)(a2 + 16));
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_1D44269DC(_QWORD *a1)
{
  void **v1;

  return sub_1D4426770(a1, *v1);
}

void sub_1D44269F4()
{
  sub_1D4426934();
}

uint64_t sub_1D44269FC()
{
  char *v0;

  return sub_1D4426964(*v0);
}

uint64_t sub_1D4426A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D4426824(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D4426A28(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1D4426A34()
{
  sub_1D4429B98();
  return sub_1D451BA3C();
}

uint64_t sub_1D4426A5C()
{
  sub_1D4429B98();
  return sub_1D451BA48();
}

uint64_t sub_1D4426A84(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSString *v13;
  Class v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  _BYTE *v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  void *v24;
  id v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  char v36;

  v3 = sub_1D42B28FC(&qword_1EFE51700);
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v28 - v7;
  v9 = sub_1D42B28FC(&qword_1EFE51748);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  sub_1D42D7108();
  sub_1D42B5528(a1, a1[3]);
  sub_1D4429B98();
  v11 = v34;
  sub_1D451BA0C();
  if (!v11)
  {
    v29 = v6;
    v30 = v8;
    v31 = a1;
    v34 = v10;
    v12 = v33;
    v36 = 0;
    sub_1D451B64C();
    v13 = (NSString *)sub_1D451A6C8();
    swift_bridgeObjectRelease();
    v14 = NSClassFromString(v13);

    if (v14
      && (swift_getObjCClassMetadata(),
          v35 = &unk_1EFEA8838,
          (v15 = swift_dynamicCastTypeToObjCProtocolConditional()) != 0)
      && (v16 = v15, sub_1D439402C(), sub_1D4429BD4(v16)))
    {
      sub_1D4429EAC();
      v17 = v30;
      sub_1D451B610();
      v28 = v1;
      v9 = (uint64_t)v29;
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v17, v12);
      v18 = objc_allocWithZone((Class)type metadata accessor for DecoderByNSCoding(0));
      v19 = sub_1D4427EE8(v9);
      v24 = v19;
      v25 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithCoder_, v19);
      v26 = v34;
      if (v25)
      {
        v9 = (uint64_t)v25;

        sub_1D4429E08();
        sub_1D4307058(v28, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
        sub_1D42B5400((uint64_t)v31);
        return v9;
      }
      sub_1D42B54EC();
      sub_1D42B6D0C();
      *v27 = 1;
      swift_willThrow();

      sub_1D4429E08();
      v21 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8);
      v22 = v28;
    }
    else
    {
      sub_1D42B54EC();
      sub_1D42B6D0C();
      *v20 = 0;
      swift_willThrow();
      v21 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 8);
      v22 = v1;
    }
    sub_1D4307058(v22, v21);
    a1 = v31;
  }
  sub_1D42B5400((uint64_t)a1);
  return v9;
}

uint64_t sub_1D4426DA8(_QWORD *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSString *v11;
  uint64_t v12;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v4 = sub_1D42B28FC(&qword_1EFE51720);
  v18 = *(_QWORD *)(v4 - 8);
  v19 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v17 - v8;
  v10 = sub_1D42B28FC(qword_1EFE51758);
  MEMORY[0x1E0C80A78](v10);
  sub_1D42B5528(a1, a1[3]);
  sub_1D4429B98();
  sub_1D451BA24();
  v17 = a2;
  v11 = NSStringFromClass((Class)objc_msgSend(a2, sel_classForCoder));
  sub_1D451A6EC();

  v21 = 0;
  v12 = v20;
  sub_1D451B724();
  if (v12)
  {
    sub_1D4429E6C();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1D4429EAC();
    sub_1D451B6F4();
    type metadata accessor for EncoderByNSCoding(0);
    v14 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v7, v9, v19);
    sub_1D4426FB8((uint64_t)v7);
    v16 = v15;
    objc_msgSend(v17, sel_encodeWithCoder_, v15);

    sub_1D4307058((uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
    return sub_1D4429E6C();
  }
}

void sub_1D4426FB8(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v7;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = &v3[OBJC_IVAR____TtC13SoundAnalysis17EncoderByNSCoding_encoder];
  v5 = sub_1D42B28FC(&qword_1EFE51720);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  v7.receiver = v3;
  v7.super_class = v1;
  objc_msgSendSuper2(&v7, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  sub_1D42CB6D4();
}

uint64_t sub_1D4427048@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1D4426A84(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1D4427070(_QWORD *a1)
{
  void **v1;

  return sub_1D4426DA8(a1, *v1);
}

uint64_t sub_1D4427088()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1D42B28FC(&qword_1EFE51720);
  sub_1D42CA054();
  sub_1D451B760();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4427158()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1D42B28FC(&qword_1EFE51720);
  sub_1D42CA408();
  sub_1D451B760();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4427228()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1D42B28FC(&qword_1EFE51720);
  sub_1D42B28FC(&qword_1EFE51708);
  sub_1D44299E0(&qword_1EFE51730, (uint64_t (*)(void))sub_1D4429A48, MEMORY[0x1E0DEE988]);
  sub_1D451B760();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4427310()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1D42B28FC(&qword_1EFE51720);
  sub_1D451B760();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D44273D0()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1D42B28FC(&qword_1EFE51720);
  sub_1D451B760();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

void sub_1D4427490()
{
  sub_1D42B8E84();
  sub_1D42DCE84();
  sub_1D42B28FC(&qword_1EFE51720);
  sub_1D451B760();
  swift_endAccess();
  sub_1D42CB208();
  sub_1D42D7120();
}

uint64_t sub_1D4427530()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1D42B28FC(&qword_1EFE51720);
  sub_1D451B760();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D44275F0()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1D42B28FC(&qword_1EFE51720);
  sub_1D451B760();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D44276B0()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1D42B28FC(&qword_1EFE51720);
  sub_1D439EAC0();
  sub_1D451B760();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D44277F0()
{
  return sub_1D4427158();
}

void sub_1D44278C0()
{
  sub_1D4429D9C();
  __break(1u);
}

void sub_1D4427904(uint64_t a1)
{
  void *v1;
  id v2;
  _BYTE v3[32];
  _OWORD v4[2];
  __int128 v5;
  uint64_t v6;
  void *v7;

  sub_1D42B28B4(a1, (uint64_t)&v5);
  if (v6)
  {
    sub_1D42B293C(&v5, v4);
    sub_1D42B294C((uint64_t)v4, (uint64_t)v3);
    sub_1D42B28FC(&qword_1EFE51728);
    swift_dynamicCast();
    sub_1D42B5400((uint64_t)v4);
    v1 = v7;
  }
  else
  {
    v1 = 0;
  }
  v2 = v1;
  sub_1D4427228();

}

void sub_1D4427AC4()
{
  sub_1D4427490();
}

void sub_1D4427B00()
{
  sub_1D4427490();
}

uint64_t sub_1D4427B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  id v9;

  sub_1D4429EC4();
  v9 = sub_1D4429ED0();
  a5(a3, v5, v6);

  return sub_1D4429DE8();
}

uint64_t sub_1D4427C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1D43C3B34(a1, a2);
  v3 = v2;
  v5 = v4;
  sub_1D44276B0();
  return sub_1D42B5420(v3, v5);
}

void sub_1D4427D18()
{
  sub_1D4429D9C();
  __break(1u);
}

void sub_1D4427DA8()
{
  sub_1D4429E4C();
  __break(1u);
}

uint64_t sub_1D4427E14()
{
  return type metadata accessor for EncoderByNSCoding(0);
}

uint64_t type metadata accessor for EncoderByNSCoding(uint64_t a1)
{
  return sub_1D42BFA18(a1, (uint64_t *)&unk_1EFE48428);
}

void sub_1D4427E30()
{
  unint64_t v0;

  sub_1D44297DC(319, &qword_1EFE48468, (uint64_t (*)(uint64_t, void *, unint64_t))MEMORY[0x1E0DED170]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

unint64_t sub_1D4427EAC()
{
  unint64_t result;

  result = qword_1EFE48450;
  if (!qword_1EFE48450)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453D97C, &unk_1E97AD3C0);
    atomic_store(result, (unint64_t *)&qword_1EFE48450);
  }
  return result;
}

id sub_1D4427EE8(uint64_t a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  objc_super v11;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = &v2[OBJC_IVAR____TtC13SoundAnalysis17DecoderByNSCoding_decoder];
  v6 = sub_1D42B28FC(&qword_1EFE51700);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  v8 = v2;
  sub_1D42B28FC(&qword_1EFE4F940);
  *(_QWORD *)&v8[OBJC_IVAR____TtC13SoundAnalysis17DecoderByNSCoding_decodedByteBuffers] = sub_1D451A5E4();

  v11.receiver = v8;
  v11.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v11, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  return v9;
}

id sub_1D4427FE0()
{
  char *v0;
  objc_class *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  int64_t v7;
  id result;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  objc_super v15;
  _QWORD v16[5];

  v1 = (objc_class *)sub_1D42B7104();
  v2 = &v0[OBJC_IVAR____TtC13SoundAnalysis17DecoderByNSCoding_decodedByteBuffers];
  sub_1D42B8E84();
  sub_1D43F6E7C(v16, *(_QWORD *)v2);
  v3 = v16[0];
  v4 = v16[1];
  v5 = v16[3];
  v6 = v16[4];
  v7 = (unint64_t)(v16[2] + 64) >> 6;
  result = (id)swift_bridgeObjectRetain_n();
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v5 << 6);
      goto LABEL_22;
    }
    v11 = v5 + 1;
    if (__OFADD__(v5, 1))
      break;
    if (v11 >= v7)
      goto LABEL_24;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    v13 = v5 + 1;
    if (!v12)
    {
      v13 = v5 + 2;
      if (v5 + 2 >= v7)
        goto LABEL_24;
      v12 = *(_QWORD *)(v4 + 8 * v13);
      if (!v12)
      {
        v13 = v5 + 3;
        if (v5 + 3 >= v7)
          goto LABEL_24;
        v12 = *(_QWORD *)(v4 + 8 * v13);
        if (!v12)
        {
          v13 = v5 + 4;
          if (v5 + 4 >= v7)
            goto LABEL_24;
          v12 = *(_QWORD *)(v4 + 8 * v13);
          if (!v12)
          {
            v13 = v5 + 5;
            if (v5 + 5 >= v7)
              goto LABEL_24;
            v12 = *(_QWORD *)(v4 + 8 * v13);
            if (!v12)
            {
              v13 = v5 + 6;
              if (v5 + 6 >= v7)
                goto LABEL_24;
              v12 = *(_QWORD *)(v4 + 8 * v13);
              if (!v12)
              {
                v14 = v5 + 7;
                while (v14 < v7)
                {
                  v12 = *(_QWORD *)(v4 + 8 * v14++);
                  if (v12)
                  {
                    v13 = v14 - 1;
                    goto LABEL_21;
                  }
                }
LABEL_24:
                swift_bridgeObjectRelease();
                swift_release();
                v15.receiver = v0;
                v15.super_class = v1;
                return objc_msgSendSuper2(&v15, sel_dealloc);
              }
            }
          }
        }
      }
    }
LABEL_21:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v5 = v13;
LABEL_22:
    result = *(id *)(*(_QWORD *)(v3 + 56) + 16 * v10);
    if (result)
      result = (id)MEMORY[0x1D825E524](result, -1, -1);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D44281FC()
{
  return type metadata accessor for DecoderByNSCoding(0);
}

uint64_t type metadata accessor for DecoderByNSCoding(uint64_t a1)
{
  return sub_1D42BFA18(a1, (uint64_t *)&unk_1EFE48410);
}

uint64_t sub_1D4428218(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = sub_1D42B28FC(&qword_1EFE51700);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v2 + OBJC_IVAR____TtC13SoundAnalysis17DecoderByNSCoding_decoder, v5);
  v10[0] = a1;
  v10[1] = a2;
  sub_1D43AA60C();
  sub_1D451B688();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1D4428300(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  _QWORD v11[4];

  v6 = sub_1D42B28FC(&qword_1EFE51700);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42B28FC(&qword_1EFE51708);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v2 + OBJC_IVAR____TtC13SoundAnalysis17DecoderByNSCoding_decoder, v6);
  v11[1] = a1;
  v11[2] = a2;
  sub_1D44299E0(&qword_1EFE51710, (uint64_t (*)(void))sub_1D44298C4, MEMORY[0x1E0DEE9A0]);
  sub_1D451B688();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v3)
    return v11[3];
  return result;
}

uint64_t sub_1D4428414(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  _QWORD v12[2];
  char v13;

  v6 = sub_1D42B28FC(&qword_1EFE51700);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v2 + OBJC_IVAR____TtC13SoundAnalysis17DecoderByNSCoding_decoder, v6);
  v12[0] = a1;
  v12[1] = a2;
  sub_1D451B688();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v3)
    v10 = v13;
  return v10 & 1;
}

uint64_t sub_1D4428508(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  _QWORD v11[2];
  unsigned int v12;

  v6 = sub_1D42B28FC(&qword_1EFE51700);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v2 + OBJC_IVAR____TtC13SoundAnalysis17DecoderByNSCoding_decoder, v6);
  v11[0] = a1;
  v11[1] = a2;
  sub_1D451B688();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v3)
    return v12;
  return result;
}

uint64_t sub_1D44285F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  _QWORD v11[4];

  v6 = sub_1D42B28FC(&qword_1EFE51700);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v2 + OBJC_IVAR____TtC13SoundAnalysis17DecoderByNSCoding_decoder, v6);
  v11[0] = a1;
  v11[1] = a2;
  sub_1D451B688();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v3)
    return v11[3];
  return result;
}

uint64_t sub_1D44286E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  _QWORD v11[4];

  v6 = sub_1D42B28FC(&qword_1EFE51700);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v2 + OBJC_IVAR____TtC13SoundAnalysis17DecoderByNSCoding_decoder, v6);
  v11[0] = a1;
  v11[1] = a2;
  sub_1D451B688();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v3)
    return v11[3];
  return result;
}

double sub_1D44287D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double result;
  _QWORD v11[4];

  v6 = sub_1D42B28FC(&qword_1EFE51700);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v2 + OBJC_IVAR____TtC13SoundAnalysis17DecoderByNSCoding_decoder, v6);
  v11[0] = a1;
  v11[1] = a2;
  sub_1D451B688();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v3)
    return *(double *)&v11[3];
  return result;
}

float sub_1D44288C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  float result;
  _QWORD v11[2];
  float v12;

  v6 = sub_1D42B28FC(&qword_1EFE51700);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v2 + OBJC_IVAR____TtC13SoundAnalysis17DecoderByNSCoding_decoder, v6);
  v11[0] = a1;
  v11[1] = a2;
  sub_1D451B688();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v3)
    return v12;
  return result;
}

uint64_t sub_1D44289B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = sub_1D42B28FC(&qword_1EFE51700);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v2 + OBJC_IVAR____TtC13SoundAnalysis17DecoderByNSCoding_decoder, v5);
  v10[0] = a1;
  v10[1] = a2;
  sub_1D42C9FC0();
  sub_1D451B688();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1D4428AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = sub_1D42B28FC(&qword_1EFE51700);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v2 + OBJC_IVAR____TtC13SoundAnalysis17DecoderByNSCoding_decoder, v5);
  v10[0] = a1;
  v10[1] = a2;
  sub_1D42CA3CC();
  sub_1D451B688();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1D4428B90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = sub_1D42B28FC(&qword_1EFE51700);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1D42D7108();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v0 + OBJC_IVAR____TtC13SoundAnalysis17DecoderByNSCoding_decoder, v2);
  v4 = sub_1D451B6DC();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  return v4 & 1;
}

uint64_t sub_1D4428C48(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v7 = 0;
  if ((sub_1D4428B90() & 1) != 0)
  {
    v8 = (uint64_t *)(v3 + OBJC_IVAR____TtC13SoundAnalysis17DecoderByNSCoding_decodedByteBuffers);
    sub_1D42B8E84();
    v9 = *v8;
    sub_1D42DCE84();
    v7 = sub_1D4364B28(a1, a2, v9);
    v11 = v10;
    LOBYTE(v9) = v12;
    sub_1D42CB208();
    if ((v9 & 1) != 0)
    {
      swift_endAccess();
      sub_1D4428218(a1, a2);
      sub_1D4519C6C();
      swift_slowAlloc();
      __asm { BR              X10 }
    }
    swift_endAccess();
    if (a3)
      *a3 = v11;
  }
  return v7;
}

uint64_t sub_1D4428F6C()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  result = sub_1D4429E3C();
  if ((result & 1) != 0)
  {
    v3 = sub_1D4429E7C();
    v5 = sub_1D4428300(v3, v4);
    if (v1)
    {
      sub_1D4429DCC();
      result = swift_unexpectedError();
      __break(1u);
    }
    else
    {
      v6 = v5;
      if (v5)
      {
        *((_QWORD *)&v8 + 1) = sub_1D42B7104();
        *(_QWORD *)&v7 = v6;
      }
      else
      {
        v7 = 0u;
        v8 = 0u;
      }
      return sub_1D42B54A4((uint64_t)&v7, (uint64_t)v0);
    }
  }
  else
  {
    *v0 = 0u;
    v0[1] = 0u;
  }
  return result;
}

void sub_1D44290F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((sub_1D4429DDC() & 1) != 0)
  {
    v1 = sub_1D4429DF8();
    sub_1D4428414(v1, v2);
    if (v0)
    {
      sub_1D4429DCC();
      swift_unexpectedError();
      __break(1u);
    }
  }
  sub_1D42CB758();
}

void sub_1D4429150(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  id v7;

  sub_1D4429E1C();
  v7 = sub_1D4429EB8();
  a4(v4, v5);

  sub_1D42CB208();
  sub_1D42CB15C();
}

void sub_1D44291AC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  if ((sub_1D4428B90() & 1) != 0)
    a3(a1, a2);
  sub_1D42CB6D4();
}

uint64_t sub_1D4429220(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1D4429E1C();
  v8 = v7;
  v9 = v4;
  sub_1D44291AC(v6, v8, a4);
  v11 = v10;

  swift_bridgeObjectRelease();
  return v11;
}

void sub_1D442928C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  if ((sub_1D4428B90() & 1) != 0)
  {
    v3 = sub_1D4429E7C();
    sub_1D4428508(v3, v4);
    if (a2)
    {
      sub_1D4429E28();
      __break(1u);
    }
  }
  sub_1D42CB758();
}

void sub_1D44292E4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  sub_1D4429E1C();
  v2 = sub_1D4429EB8();
  sub_1D442928C(v0, v1);

  sub_1D42CB208();
  sub_1D42CB15C();
}

void sub_1D442932C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((sub_1D4429DDC() & 1) != 0)
  {
    v1 = sub_1D4429DF8();
    sub_1D44287D8(v1, v2);
    if (v0)
    {
      sub_1D4429DCC();
      swift_unexpectedError();
      __break(1u);
    }
  }
}

void sub_1D44293EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((sub_1D4429DDC() & 1) != 0)
  {
    v1 = sub_1D4429DF8();
    sub_1D44288C8(v1, v2);
    if (v0)
    {
      sub_1D4429DCC();
      swift_unexpectedError();
      __break(1u);
    }
  }
}

uint64_t sub_1D44294AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  if ((sub_1D4429DDC() & 1) == 0)
    return *MEMORY[0x1E0CA2E18];
  v1 = sub_1D4429DF8();
  sub_1D44289B8(v1, v2);
  if (!v0)
    return v4;
  sub_1D4429DCC();
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

void sub_1D44295B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  if ((sub_1D4429E3C() & 1) == 0)
  {
    v4 = *MEMORY[0x1E0CA2E40];
    v5 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 8);
    v6 = *(_OWORD *)(MEMORY[0x1E0CA2E40] + 16);
    v7 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 32);
    v8 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 40);
    goto LABEL_5;
  }
  v2 = sub_1D4429E7C();
  sub_1D4428AA0(v2, v3);
  if (!v1)
  {
    v4 = v9;
    v5 = v10;
    v6 = v11;
    v7 = v12;
    v8 = v13;
LABEL_5:
    *(_QWORD *)v0 = v4;
    *(_QWORD *)(v0 + 8) = v5;
    *(_OWORD *)(v0 + 16) = v6;
    *(_QWORD *)(v0 + 32) = v7;
    *(_QWORD *)(v0 + 40) = v8;
    sub_1D42D7120();
    return;
  }
  sub_1D4429DCC();
  swift_unexpectedError();
  __break(1u);
}

void sub_1D44296E4()
{
  sub_1D4429D9C();
  __break(1u);
}

void sub_1D4429728()
{
  sub_1D4429E4C();
  __break(1u);
}

void sub_1D4429754()
{
  unint64_t v0;

  sub_1D44297DC(319, &qword_1EFE48460, (uint64_t (*)(uint64_t, void *, unint64_t))MEMORY[0x1E0DED048]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1D44297DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1D4427EAC();
    v7 = a3(a1, &unk_1E97AD3C0, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void type metadata accessor for StringKey()
{
  sub_1D42CB35C();
}

unint64_t sub_1D4429848()
{
  unint64_t result;

  result = qword_1EFE48448;
  if (!qword_1EFE48448)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453D92C, &unk_1E97AD3C0);
    atomic_store(result, (unint64_t *)&qword_1EFE48448);
  }
  return result;
}

unint64_t sub_1D4429888()
{
  unint64_t result;

  result = qword_1EFE48458;
  if (!qword_1EFE48458)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453D954, &unk_1E97AD3C0);
    atomic_store(result, (unint64_t *)&qword_1EFE48458);
  }
  return result;
}

unint64_t sub_1D44298C4()
{
  unint64_t result;

  result = qword_1EFE51718;
  if (!qword_1EFE51718)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453DA9C, &unk_1E97A21E0);
    atomic_store(result, (unint64_t *)&qword_1EFE51718);
  }
  return result;
}

void sub_1D4429900()
{
  sub_1D4429E5C();
  sub_1D451B964();
  sub_1D451B994();
  sub_1D42BE978();
}

void sub_1D4429930()
{
  sub_1D4429900();
}

uint64_t sub_1D4429938(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1D4519A14();
  if (!result || (result = sub_1D4519A38(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1D4519A2C();
      return sub_1D451B1A8();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D44299E0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_1D42B8B10(&qword_1EFE51708);
    v8 = a2();
    result = MEMORY[0x1D825E41C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D4429A48()
{
  unint64_t result;

  result = qword_1EFE51738;
  if (!qword_1EFE51738)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453DA74, &unk_1E97A21E0);
    atomic_store(result, (unint64_t *)&qword_1EFE51738);
  }
  return result;
}

void type metadata accessor for CodableByNSCoding()
{
  sub_1D42CB35C();
}

uint64_t sub_1D4429A90(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D4429ADC + 4 * byte_1D453D8D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D4429B10 + 4 * byte_1D453D8D0[v4]))();
}

uint64_t sub_1D4429B10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4429B18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4429B20);
  return result;
}

uint64_t sub_1D4429B2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4429B34);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D4429B38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4429B40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for CodableUtils.DomainError()
{
  sub_1D42CB35C();
}

unint64_t sub_1D4429B5C()
{
  unint64_t result;

  result = qword_1EFE51740;
  if (!qword_1EFE51740)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453DA4C, &unk_1E979DD30);
    atomic_store(result, (unint64_t *)&qword_1EFE51740);
  }
  return result;
}

unint64_t sub_1D4429B98()
{
  unint64_t result;

  result = qword_1EFE51750;
  if (!qword_1EFE51750)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453DC08, &unk_1E97A2150);
    atomic_store(result, (unint64_t *)&qword_1EFE51750);
  }
  return result;
}

uint64_t sub_1D4429BD4(uint64_t a1)
{
  if (swift_dynamicCastMetatype())
    return a1;
  else
    return 0;
}

uint64_t sub_1D4429C04(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D4429C50 + 4 * byte_1D453D8DF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D4429C84 + 4 * byte_1D453D8DA[v4]))();
}

uint64_t sub_1D4429C84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4429C8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4429C94);
  return result;
}

uint64_t sub_1D4429CA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4429CA8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D4429CAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4429CB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for CodableByNSCoding.CodingKeys()
{
  sub_1D42CB35C();
}

uint64_t type metadata accessor for TypedCodableByNSCoding(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TypedCodableByNSCoding);
}

unint64_t sub_1D4429CDC()
{
  unint64_t result;

  result = qword_1EFE517E0;
  if (!qword_1EFE517E0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453DBE0, &unk_1E97A2150);
    atomic_store(result, (unint64_t *)&qword_1EFE517E0);
  }
  return result;
}

unint64_t sub_1D4429D1C()
{
  unint64_t result;

  result = qword_1EFE517E8;
  if (!qword_1EFE517E8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453DB50, &unk_1E97A2150);
    atomic_store(result, (unint64_t *)&qword_1EFE517E8);
  }
  return result;
}

unint64_t sub_1D4429D5C()
{
  unint64_t result;

  result = qword_1EFE517F0;
  if (!qword_1EFE517F0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453DB78, &unk_1E97A2150);
    atomic_store(result, (unint64_t *)&qword_1EFE517F0);
  }
  return result;
}

uint64_t sub_1D4429D9C()
{
  return sub_1D451B55C();
}

uint64_t sub_1D4429DCC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4429DDC()
{
  return sub_1D4428B90();
}

uint64_t sub_1D4429DE8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4429DF8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4429E08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 112) + 8))(v1, v0);
}

uint64_t sub_1D4429E1C()
{
  return sub_1D451A6EC();
}

uint64_t sub_1D4429E28()
{
  return swift_unexpectedError();
}

uint64_t sub_1D4429E3C()
{
  return sub_1D4428B90();
}

uint64_t sub_1D4429E4C()
{
  return _swift_stdlib_reportUnimplementedInitializer();
}

uint64_t sub_1D4429E5C()
{
  return sub_1D451B958();
}

uint64_t sub_1D4429E6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_1D4429E7C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4429E8C()
{
  return sub_1D451B820();
}

uint64_t sub_1D4429E9C(uint64_t a1, uint64_t a2)
{
  return sub_1D4429938(a1, a2);
}

unint64_t sub_1D4429EAC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return sub_1D4427EAC();
}

id sub_1D4429EB8()
{
  void *v0;

  return v0;
}

uint64_t sub_1D4429EC4()
{
  return sub_1D451A6EC();
}

id sub_1D4429ED0()
{
  void *v0;

  return v0;
}

uint64_t sub_1D4429EDC()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1D42B5420(v0, v1);
}

uint64_t sub_1D4429EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1D42C7A98();
    v5 = v13;
    v6 = (uint64_t *)(a1 + 40);
    do
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      v10 = *(_QWORD *)(v13 + 16);
      v9 = *(_QWORD *)(v13 + 24);
      swift_bridgeObjectRetain();
      swift_retain();
      if (v10 >= v9 >> 1)
        sub_1D42C7A98();
      v6 += 2;
      *(_QWORD *)(v13 + 16) = v10 + 1;
      v11 = (_QWORD *)(v13 + 24 * v10);
      v11[4] = v7;
      v11[5] = v8;
      v11[6] = a2;
      --v3;
    }
    while (v3);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

unsigned __int8 *sub_1D442A000(uint64_t a1, uint64_t a2, uint64_t len, unsigned __int8 *md)
{
  unsigned __int8 *result;
  uint64_t data;
  __int16 v6;
  char v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  data = a1;
  v6 = a2;
  v7 = BYTE2(a2);
  v8 = BYTE3(a2);
  v9 = BYTE4(a2);
  v10 = BYTE5(a2);
  if (len < 0x100000000)
    return CC_SHA256(&data, len, md);
  result = (unsigned __int8 *)sub_1D451B550();
  __break(1u);
  return result;
}

void static SNACIUtils.sha256HashHexString(url:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_1D42BE910();
  v15 = sub_1D4519C84();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  sub_1D42D7108();
  v17 = (void *)MEMORY[0x1D825DB34]();
  v18 = sub_1D4519BF4();
  if (v13)
  {
    objc_autoreleasePoolPop(v17);
  }
  else
  {
    v20 = v18;
    v21 = v19;
    v29 = v16;
    v22 = sub_1D442C920();
    v24 = v23;
    sub_1D42B5420(v20, v21);
    objc_autoreleasePoolPop(v17);
    sub_1D42DD16C(v22, v24);
    sub_1D4519C0C();
    v28 = v22;
    sub_1D42B5420(v22, v24);
    sub_1D4432E20();
    sub_1D44343A4();
    if ((a13 & 1) == 0)
    {
      v25 = MEMORY[0x1E0DEDE70];
      v26 = MEMORY[0x1E0DEDEC8];
      do
      {
        sub_1D42B28FC(&qword_1EFE47330);
        v27 = sub_1D42B6F40();
        *(_OWORD *)(v27 + 16) = xmmword_1D45261D0;
        *(_QWORD *)(v27 + 56) = v25;
        *(_QWORD *)(v27 + 64) = v26;
        *(_BYTE *)(v27 + 32) = a12;
        sub_1D451A704();
        sub_1D42CB9DC();
        sub_1D451A794();
        sub_1D42CB338();
        sub_1D42D3258();
        sub_1D44343A4();
      }
      while (a13 != 1);
    }
    sub_1D4307058(v14, *(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
    sub_1D42B5420(v28, v24);
  }
  sub_1D4434444();
  sub_1D42BE844();
}

#error "1D442A370: call analysis failed (funcsize=97)"

void sub_1D442A45C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  void (*v22)(_QWORD, _QWORD, _QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, _QWORD, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(_QWORD, _QWORD, _QWORD);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  void (*v55)(unint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void **v61;
  _BYTE *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  unint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, _QWORD, uint64_t);
  uint64_t v80;
  void **v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(_QWORD, _QWORD, _QWORD);
  uint64_t v86;

  sub_1D43072F8();
  v84 = v24;
  v85 = v22;
  v79 = v26;
  v80 = v25;
  v82 = (_BYTE *)v27;
  v83 = v28;
  v81 = (void **)v29;
  v72 = v30;
  v31 = sub_1D42CB348();
  v75 = *(_QWORD *)(v31 - 8);
  v76 = v31;
  MEMORY[0x1E0C80A78](v31);
  v73 = v32;
  v74 = (uint64_t)&v70 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1D43341C8();
  v34 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v86 = sub_1D44342C8();
  v78 = *(_QWORD *)(v86 - 8);
  v35 = *(_QWORD *)(v78 + 64);
  v36 = MEMORY[0x1E0C80A78](v86);
  v71 = (uint64_t)&v70 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = MEMORY[0x1E0C80A78](v36);
  v39 = (char *)&v70 - v38;
  MEMORY[0x1E0C80A78](v37);
  sub_1D42BA19C();
  v41 = v40;
  sub_1D4434574();
  sub_1D4519CD8();
  v42 = v85;
  sub_1D442CAAC((uint64_t)v81, (uint64_t)v82, v83, v84, 0, 5526864, 0xE300000000000000, v23, v80, (uint64_t)v79, a21, a22, v70, v71, v72, v73, v74, v75, v76,
    v77,
    v78,
    v79,
    v80,
    (uint64_t)v81);
  if (v42)
  {
    sub_1D4307058(v23, *(uint64_t (**)(uint64_t, uint64_t))(v34 + 8));
  }
  else
  {
    v85 = *(void (**)(_QWORD, _QWORD, _QWORD))(v78 + 32);
    v43 = v78;
    v70 = v41;
    v85(v41, v39, v86);
    sub_1D4307058(v23, *(uint64_t (**)(uint64_t, uint64_t))(v34 + 8));
    v44 = sub_1D42B6F40();
    *(_BYTE *)(v44 + 16) = 1;
    v82 = (_BYTE *)(v44 + 16);
    v83 = v44;
    v45 = sub_1D42B6F40();
    *(_QWORD *)(v45 + 16) = 0;
    v81 = (void **)(v45 + 16);
    v47 = v75;
    v46 = v76;
    v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 16);
    v84 = 0;
    v49 = v74;
    v48(v74, v72, v76);
    v50 = v71;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v71, v70, v86);
    v51 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
    v52 = (v73 + *(unsigned __int8 *)(v43 + 80) + v51) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    v53 = (v35 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
    v54 = swift_allocObject();
    v55 = *(void (**)(unint64_t, uint64_t, uint64_t))(v47 + 32);
    v56 = v54;
    v55(v54 + v51, v49, v46);
    v85(v56 + v52, v50, v86);
    *(_QWORD *)(v56 + v53) = v83;
    *(_QWORD *)(v56 + ((v53 + 15) & 0xFFFFFFFFFFFFFFF8)) = v45;
    swift_retain();
    v57 = swift_retain();
    MEMORY[0x1D825DB34](v57);
    v58 = v84;
    sub_1D442D070((uint64_t (*)(uint64_t (*)(uint64_t, uint64_t), _QWORD *, id *))sub_1D4433F28, v56, v77);
    v59 = v78;
    v60 = v70;
    if (v58)
    {
      sub_1D4434358();
    }
    else
    {
      v61 = v81;
      sub_1D4434358();
      v62 = v82;
      sub_1D4311F3C();
      if ((*v62 & 1) == 0)
      {
        sub_1D4311F3C();
        v63 = *v61;
        if (!*v61)
        {
          type metadata accessor for SNError();
          sub_1D430740C();
          sub_1D4434494();
          sub_1D43EC59C(v64, v65, v66, v67, 0xD000000000000010, v68);
          v63 = 0;
        }
        v69 = v63;
        sub_1D42B6F54();
      }
    }
    sub_1D4307058(v60, *(uint64_t (**)(uint64_t, uint64_t))(v59 + 8));
    swift_release();
    swift_release();
    sub_1D42BE998();
  }
  sub_1D42CB3F8();
}

uint64_t sub_1D442A818(uint64_t result, uint64_t a2)
{
  unint64_t v3;
  char v4;
  unint64_t v5;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1D43625C4(0, (v3 - result) & ~((uint64_t)(v3 - result) >> 63), v3, a2);
  if ((v4 & 1) != 0)
    v5 = v3;
  else
    v5 = result;
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_9;
  if (v3 >= v5)
    return a2;
LABEL_10:
  __break(1u);
  return result;
}

void S3BucketAddress.endpoint.getter()
{
  sub_1D42CB6CC();
  sub_1D42F1F54();
  sub_1D42B6E24();
}

void S3BucketAddress.endpoint.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_1D4434414();
  *v1 = v2;
  v1[1] = v0;
  sub_1D42CB15C();
}

uint64_t (*S3BucketAddress.endpoint.modify())(_QWORD)
{
  return nullsub_1;
}

void S3BucketAddress.bucket.getter()
{
  sub_1D42CB6CC();
  sub_1D42F1F54();
  sub_1D42B6E24();
}

void S3BucketAddress.bucket.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D4307354();
  sub_1D42B71FC();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  sub_1D42CB15C();
}

uint64_t (*S3BucketAddress.bucket.modify())(_QWORD)
{
  return nullsub_1;
}

void S3BucketAddress.accessKeyID.getter()
{
  sub_1D42CB6CC();
  sub_1D42F1F54();
  sub_1D42B6E24();
}

void S3BucketAddress.accessKeyID.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D4307354();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v0;
  sub_1D42CB15C();
}

uint64_t (*S3BucketAddress.accessKeyID.modify())(_QWORD)
{
  return nullsub_1;
}

void S3BucketAddress.secretAccessKey.getter()
{
  sub_1D42CB6CC();
  sub_1D42F1F54();
  sub_1D42B6E24();
}

void S3BucketAddress.secretAccessKey.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D4307354();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v0;
  sub_1D42CB15C();
}

uint64_t (*S3BucketAddress.secretAccessKey.modify())(_QWORD)
{
  return nullsub_1;
}

void __swiftcall S3BucketAddress.init(endpoint:bucket:accessKeyID:secretAccessKey:)(SoundAnalysis::S3BucketAddress *__return_ptr retstr, Swift::String endpoint, Swift::String bucket, Swift::String accessKeyID, Swift::String secretAccessKey)
{
  retstr->endpoint = endpoint;
  retstr->bucket = bucket;
  retstr->accessKeyID = accessKeyID;
  retstr->secretAccessKey = secretAccessKey;
}

uint64_t S3BucketAddress.hash(into:)()
{
  sub_1D42DCE84();
  sub_1D4419570();
  sub_1D42CB208();
  sub_1D42CB8FC();
  sub_1D44344DC();
  swift_bridgeObjectRelease();
  sub_1D42CB9DC();
  sub_1D44344FC();
  swift_bridgeObjectRelease();
  sub_1D42CB6CC();
  sub_1D451A74C();
  return swift_bridgeObjectRelease();
}

void static S3BucketAddress.== infix(_:_:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  BOOL v14;
  char v15;
  BOOL v16;
  char v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  sub_1D42CB460();
  v2 = v0[2];
  v4 = v0[3];
  v3 = v0[4];
  v5 = v0[5];
  v19 = v0[7];
  v20 = v0[6];
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = v1[5];
  v10 = *v0 == *v1 && v0[1] == v1[1];
  v12 = v1[6];
  v11 = v1[7];
  if (!v10)
  {
    sub_1D42F1F04();
    sub_1D43073F0();
    if ((v13 & 1) == 0)
      goto LABEL_21;
  }
  v14 = v2 == v6 && v4 == v7;
  if ((v14 || (sub_1D42F1F04(), sub_1D43073F0(), (v15 & 1) != 0))
    && (v3 == v8 ? (v16 = v5 == v9) : (v16 = 0),
        (v16 || (sub_1D42F1F04(), sub_1D43073F0(), (v17 & 1) != 0))
     && (v20 == v12 ? (v18 = v19 == v11) : (v18 = 0), !v18)))
  {
    sub_1D42CB430();
    sub_1D451B820();
  }
  else
  {
LABEL_21:
    sub_1D42CB430();
  }
}

uint64_t sub_1D442AB7C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x746E696F70646E65 && a2 == 0xE800000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x74656B637562 && a2 == 0xE600000000000000;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x654B737365636361 && a2 == 0xEB00000000444979;
      if (v7 || (sub_1D451B820() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6341746572636573 && a2 == 0xEF79654B73736563)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_1D451B820();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_1D442AD5C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D442AD90 + 4 * byte_1D453DCC0[a1]))(0x746E696F70646E65, 0xE800000000000000);
}

uint64_t sub_1D442AD90()
{
  return 0x74656B637562;
}

uint64_t sub_1D442ADA4()
{
  return 0x654B737365636361;
}

uint64_t sub_1D442ADC4()
{
  return 0x6341746572636573;
}

uint64_t sub_1D442ADE8()
{
  unsigned __int8 *v0;

  return sub_1D442AD5C(*v0);
}

uint64_t sub_1D442ADF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D442AB7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D442AE14()
{
  sub_1D4432E60();
  return sub_1D451BA3C();
}

uint64_t sub_1D442AE3C()
{
  sub_1D4432E60();
  return sub_1D451BA48();
}

void S3BucketAddress.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D42BE910();
  v3 = v2;
  v4 = sub_1D42B28FC(&qword_1EFE51800);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB18C();
  sub_1D42B5528(v3, v3[3]);
  sub_1D4432E60();
  sub_1D451BA24();
  sub_1D451B724();
  if (!v0)
  {
    sub_1D443455C();
    sub_1D443428C();
    sub_1D443428C();
    sub_1D443428C();
  }
  sub_1D42CB44C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_1D42BE844();
}

uint64_t S3BucketAddress.hashValue.getter()
{
  sub_1D42BE9A8();
  sub_1D42DCE84();
  sub_1D451A74C();
  sub_1D42CB208();
  sub_1D42CB8FC();
  sub_1D44344DC();
  swift_bridgeObjectRelease();
  sub_1D42CB9DC();
  sub_1D44344FC();
  swift_bridgeObjectRelease();
  sub_1D42CB7B8();
  sub_1D451A74C();
  sub_1D42BE8B4();
  return sub_1D42CB230();
}

void S3BucketAddress.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D42BE910();
  v3 = v2;
  v5 = v4;
  sub_1D42B28FC(&qword_1EFE51810);
  sub_1D42CB4F8();
  MEMORY[0x1E0C80A78](v6);
  sub_1D438E8B8();
  sub_1D42B5528(v3, v3[3]);
  sub_1D4432E60();
  sub_1D451BA0C();
  if (v0)
  {
    sub_1D42BE944();
  }
  else
  {
    v7 = sub_1D443429C();
    v9 = v8;
    v21 = v7;
    sub_1D443455C();
    sub_1D4326750();
    v10 = sub_1D443429C();
    v22 = v11;
    v20 = v10;
    sub_1D4326750();
    v18 = sub_1D451B64C();
    v19 = v12;
    sub_1D4326750();
    v13 = sub_1D443429C();
    v15 = v14;
    v16 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8);
    v17 = v13;
    sub_1D43965AC(v16);
    sub_1D42D71EC();
    sub_1D42CB8FC();
    sub_1D42CB6CC();
    sub_1D42CB5C8();
    sub_1D42CB8F4();
    *v5 = v21;
    v5[1] = v9;
    v5[2] = v20;
    v5[3] = v22;
    v5[4] = v18;
    v5[5] = v19;
    v5[6] = v17;
    v5[7] = v15;
    sub_1D42B5400((uint64_t)v3);
    sub_1D42B7204();
    sub_1D42CB338();
    sub_1D42CB8F4();
    swift_bridgeObjectRelease();
  }
  sub_1D42BE844();
}

uint64_t sub_1D442B268()
{
  sub_1D451B958();
  swift_bridgeObjectRetain();
  sub_1D451A74C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1D451A74C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1D451A74C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1D451A74C();
  swift_bridgeObjectRelease();
  return sub_1D451B994();
}

void sub_1D442B348()
{
  S3BucketAddress.init(from:)();
}

void sub_1D442B35C()
{
  S3BucketAddress.encode(to:)();
}

void S3Path.key.getter()
{
  sub_1D42CB6CC();
  sub_1D42F1F54();
  sub_1D42B6E24();
}

void S3Path.key.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_1D4434414();
  *v1 = v2;
  v1[1] = v0;
  sub_1D42CB15C();
}

uint64_t (*S3Path.key.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t S3Path.parent.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_retain();
}

void S3Path.parent.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  swift_release();
  *(_QWORD *)(v1 + 16) = v2;
  sub_1D42B6E24();
}

uint64_t (*S3Path.parent.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t S3Path.init(key:parent:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;

  v4 = *a3;
  *a4 = result;
  a4[1] = a2;
  a4[2] = v4;
  return result;
}

uint64_t S3Path.hash(into:)()
{
  sub_1D42DCE84();
  sub_1D4419570();
  sub_1D42CB208();
  return sub_1D4434568();
}

uint64_t static S3Path.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  unint64_t v3;
  BOOL v4;
  char v5;
  char v6;
  unint64_t v8;
  uint64_t v9;

  v2 = a1[2];
  v3 = a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_1D42F1F04(), v5 = sub_1D43073F0(), (v6 & 1) != 0))
  {
    v8 = v3;
    v9 = v2;
    v5 = static S3PathOrBucket.== infix(_:_:)(&v9, &v8);
  }
  return v5 & 1;
}

uint64_t static S3PathOrBucket.== infix(_:_:)(_QWORD *a1, unint64_t *a2)
{
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = (_QWORD *)*a1;
  v3 = *a2;
  if ((*a1 & 0x8000000000000000) != 0)
  {
    if ((v3 & 0x8000000000000000) != 0)
    {
      v21 = v2[4];
      v22 = *(_QWORD *)(v3 + 32);
      v23 = v2[2] == *(_QWORD *)(v3 + 16) && v2[3] == *(_QWORD *)(v3 + 24);
      if (v23 || (sub_1D42F1F04() & 1) != 0)
      {
        v27 = v22;
        v28 = v21;
        sub_1D42BE934();
        swift_retain();
        v24 = static S3PathOrBucket.== infix(_:_:)(&v28, &v27);
        swift_release();
        swift_release();
        if ((v24 & 1) != 0)
          return 1;
      }
    }
  }
  else if ((v3 & 0x8000000000000000) == 0)
  {
    v4 = v2[2];
    v5 = v2[3];
    v6 = v2[4];
    v7 = v2[5];
    v8 = v2[6];
    v9 = v2[7];
    v25 = v2[9];
    v26 = v2[8];
    v10 = *(_QWORD *)(v3 + 32);
    v11 = *(_QWORD *)(v3 + 40);
    v12 = *(_QWORD *)(v3 + 48);
    v13 = *(_QWORD *)(v3 + 56);
    v14 = v4 == *(_QWORD *)(v3 + 16) && v5 == *(_QWORD *)(v3 + 24);
    v16 = *(_QWORD *)(v3 + 64);
    v15 = *(_QWORD *)(v3 + 72);
    if (v14 || (sub_1D42F1F04() & 1) != 0)
    {
      v17 = v6 == v10 && v7 == v11;
      if (v17 || (sub_1D42F1F04() & 1) != 0)
      {
        v18 = v8 == v12 && v9 == v13;
        if (v18 || (sub_1D42F1F04() & 1) != 0)
        {
          v19 = v26 == v16 && v25 == v15;
          if (v19 || (sub_1D42F1F04() & 1) != 0)
            return 1;
        }
      }
    }
  }
  return 0;
}

uint64_t sub_1D442B630(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 7955819 && a2 == 0xE300000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E65726170 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D442B704(char a1)
{
  if ((a1 & 1) != 0)
    return 0x746E65726170;
  else
    return 7955819;
}

uint64_t sub_1D442B730()
{
  char *v0;

  return sub_1D442B704(*v0);
}

uint64_t sub_1D442B738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D442B630(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D442B75C()
{
  sub_1D4432E9C();
  return sub_1D451BA3C();
}

uint64_t sub_1D442B784()
{
  sub_1D4432E9C();
  return sub_1D451BA48();
}

void S3Path.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1D42BE910();
  v3 = v2;
  v4 = sub_1D42B28FC(&qword_1EFE51818);
  v6 = *(_QWORD *)(v4 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42CB18C();
  sub_1D42B5528(v3, v3[3]);
  sub_1D4432E9C();
  sub_1D451BA24();
  sub_1D451B724();
  if (!v0)
  {
    sub_1D443455C();
    sub_1D4432ED8();
    sub_1D451B760();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_1D42BE844();
}

uint64_t S3Path.hashValue.getter()
{
  sub_1D42BE9A8();
  sub_1D42CB7F8();
  sub_1D451A74C();
  swift_bridgeObjectRelease();
  S3PathOrBucket.hash(into:)();
  return sub_1D42CB230();
}

void S3Path.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1D42BE910();
  v4 = v3;
  v6 = v5;
  sub_1D42B28FC(&qword_1EFE51830);
  sub_1D42CB4F8();
  MEMORY[0x1E0C80A78](v7);
  sub_1D434799C();
  sub_1D42B5528(v4, v4[3]);
  sub_1D4432E9C();
  sub_1D451BA0C();
  if (v0)
  {
    sub_1D42BE944();
  }
  else
  {
    v8 = sub_1D451B64C();
    v10 = v9;
    sub_1D443455C();
    sub_1D4432F14();
    sub_1D42CB9DC();
    sub_1D451B688();
    sub_1D42CB44C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    *v6 = v8;
    v6[1] = v10;
    v6[2] = v11;
    sub_1D42BE934();
    sub_1D42B5400((uint64_t)v4);
    swift_release();
    sub_1D42CB338();
  }
  sub_1D42BE844();
}

uint64_t sub_1D442BA90()
{
  sub_1D451B958();
  swift_bridgeObjectRetain();
  sub_1D451A74C();
  swift_bridgeObjectRelease();
  S3PathOrBucket.hash(into:)();
  return sub_1D451B994();
}

void sub_1D442BB00()
{
  S3Path.init(from:)();
}

void sub_1D442BB14()
{
  S3Path.encode(to:)();
}

uint64_t S3PathOrBucket.hash(into:)()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42CB460();
  if ((*v0 & 0x8000000000000000) != 0)
  {
    sub_1D451B964();
    swift_retain();
    swift_bridgeObjectRetain_n();
    sub_1D4419570();
    v1 = sub_1D42CB208();
    sub_1D4434568(v1);
    swift_release();
  }
  else
  {
    sub_1D451B964();
    sub_1D42D71EC();
    sub_1D451A74C();
    swift_bridgeObjectRelease();
    sub_1D438C74C();
    sub_1D451A74C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1D451A74C();
    swift_bridgeObjectRelease();
    sub_1D42CB7F8();
    sub_1D451A74C();
  }
  sub_1D42CB430();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D442BC38(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x74656B637562 && a2 == 0xE600000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1752457584 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D442BD0C(char a1)
{
  if ((a1 & 1) != 0)
    return 1752457584;
  else
    return 0x74656B637562;
}

uint64_t sub_1D442BD38(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1D42F1F04();
    sub_1D42BE8B4();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1D442BD9C()
{
  sub_1D4433004();
  return sub_1D451BA3C();
}

uint64_t sub_1D442BDC4()
{
  sub_1D4433004();
  return sub_1D451BA48();
}

uint64_t sub_1D442BDEC()
{
  char *v0;

  return sub_1D442BD0C(*v0);
}

uint64_t sub_1D442BDF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D442BC38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D442BE18()
{
  sub_1D4432F50();
  return sub_1D451BA3C();
}

uint64_t sub_1D442BE40()
{
  sub_1D4432F50();
  return sub_1D451BA48();
}

uint64_t sub_1D442BE68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D442BD38(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D442BE90()
{
  sub_1D4432F8C();
  return sub_1D451BA3C();
}

uint64_t sub_1D442BEB8()
{
  sub_1D4432F8C();
  return sub_1D451BA48();
}

void S3PathOrBucket.encode(to:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1D42BE910();
  v4 = v3;
  v9 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE51840) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D434799C();
  v10 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE51848) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v6);
  sub_1D438E8B8();
  v11 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE51850) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42D7108();
  v8 = *v0;
  sub_1D42B5528(v4, v4[3]);
  sub_1D4432F50();
  sub_1D451BA24();
  if (v8 < 0)
  {
    sub_1D4432F8C();
    sub_1D42CB9DC();
    swift_retain();
    sub_1D451B6F4();
    sub_1D4432FC8();
    sub_1D451B760();
    sub_1D4307058(v2, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
    sub_1D42CB44C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
    swift_release();
    sub_1D42CB338();
  }
  else
  {
    sub_1D4433004();
    sub_1D451B6F4();
    sub_1D4433040();
    sub_1D451B760();
    sub_1D43965AC(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    sub_1D42CB44C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  }
  sub_1D4434444();
  sub_1D42BE844();
}

void S3PathOrBucket.hashValue.getter()
{
  sub_1D451B958();
  S3PathOrBucket.hash(into:)();
  sub_1D451B994();
  sub_1D42BE978();
}

void S3PathOrBucket.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t *v24;
  uint64_t v25;

  sub_1D42BE910();
  v3 = v2;
  v24 = v4;
  sub_1D42B28FC(&qword_1EFE51880);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42BE768();
  v25 = sub_1D42B28FC(&qword_1EFE51888);
  v6 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  sub_1D42F1ED4();
  v7 = sub_1D42B28FC((uint64_t *)&unk_1EFE51890);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1D43479B4();
  sub_1D42B5528(v3, v3[3]);
  sub_1D4432F50();
  sub_1D451BA0C();
  if (v0)
    goto LABEL_9;
  v9 = v1;
  v10 = sub_1D451B6D0();
  v11 = *(_QWORD *)(v10 + 16);
  if (!v11)
  {
LABEL_8:
    v19 = sub_1D451B460();
    sub_1D42B6D0C();
    v21 = v20;
    sub_1D42B28FC(&qword_1EFE49ED0);
    *v21 = &type metadata for S3PathOrBucket;
    sub_1D451B61C();
    sub_1D451B454();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x1E0DEC450], v19);
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_1D437ED90(v9, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
LABEL_9:
    sub_1D42B5400((uint64_t)v3);
    goto LABEL_10;
  }
  v12 = v1;
  v13 = *(_BYTE *)(v10 + 32);
  sub_1D43B7948(1, v11, v10, v10 + 32, 0, (2 * v11) | 1);
  v15 = v14;
  v17 = v16;
  sub_1D42BE8B4();
  if (v15 != v17 >> 1)
  {
    v9 = v12;
    goto LABEL_8;
  }
  if ((v13 & 1) != 0)
  {
    sub_1D4432F8C();
    v18 = v12;
    sub_1D443453C();
    v22 = sub_1D42B6F40();
    sub_1D44330A0();
    sub_1D451B688();
    sub_1D44343E8();
    swift_unknownObjectRelease();
    sub_1D437ED90(v18, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    v23 = v22 | 0x8000000000000000;
  }
  else
  {
    sub_1D4433004();
    sub_1D443453C();
    v23 = sub_1D42B6F40();
    sub_1D4433114();
    sub_1D451B688();
    sub_1D44341D4(v6);
    sub_1D42E3CCC();
    sub_1D437ED90(v12, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  }
  *v24 = v23;
  sub_1D42B5400((uint64_t)v3);
LABEL_10:
  sub_1D42BE844();
}

uint64_t sub_1D442C58C()
{
  sub_1D451B958();
  S3PathOrBucket.hash(into:)();
  return sub_1D451B994();
}

void sub_1D442C5D0()
{
  S3PathOrBucket.init(from:)();
}

void sub_1D442C5E4()
{
  S3PathOrBucket.encode(to:)();
}

uint64_t sub_1D442C5FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;

  v2 = sub_1D4519D44();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1D42D7108();
  sub_1D42B28FC((uint64_t *)&unk_1EFE51A90);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42BE8F8();
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  sub_1D430740C();
  sub_1D43E19AC(0xD000000000000025, v6, v5);
  sub_1D4519D50();
  v7 = sub_1D4519D68();
  v8 = 0;
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v0, 1, v7) != 1)
  {
    v8 = (void *)sub_1D4519D5C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0, v7);
  }
  objc_msgSend(v5, sel_setTimeZone_, v8);

  sub_1D4519D2C();
  v9 = (void *)sub_1D4519D38();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  objc_msgSend(v5, sel_setLocale_, v9);

  v10 = (void *)sub_1D4519C90();
  v11 = objc_msgSend(v5, sel_stringFromDate_, v10);

  v12 = sub_1D451A6EC();
  return v12;
}

void sub_1D442C7D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;

  sub_1D42BE910();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  sub_1D451A71C();
  sub_1D42CB4F8();
  MEMORY[0x1E0C80A78](v8);
  sub_1D42F1ED4();
  v22 = v7;
  v23 = v5;
  sub_1D451A710();
  sub_1D432E53C();
  v9 = sub_1D4434524();
  sub_1D4434530();
  if (!v9)
    goto LABEL_5;
  v22 = v3;
  v23 = v1;
  sub_1D451A710();
  v10 = sub_1D4434524();
  sub_1D4434530();
  if (!v10)
  {
    sub_1D42CB338();
LABEL_5:
    sub_1D4433B74();
    v20 = sub_1D42B6D0C();
    sub_1D437ECD0(v20, v21);
    goto LABEL_6;
  }
  v11 = sub_1D442A818(1, v9);
  sub_1D44AF550(v11, v12, v13, v14);
  v15 = sub_1D442A818(1, v10);
  sub_1D44AF550(v15, v16, v17, v18);
  sub_1D4519A44();
  swift_allocObject();
  v19 = sub_1D4519A20();
  v22 = 0x1400000000;
  v23 = v19 | 0x4000000000000000;
  sub_1D44324CC((uint64_t)&v22);
  sub_1D42CB208();
  sub_1D42CB5C8();
LABEL_6:
  sub_1D4434444();
  sub_1D42BE844();
}

uint64_t sub_1D442C920()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  sub_1D4307354();
  sub_1D4519A44();
  swift_allocObject();
  sub_1D4519A20();
  sub_1D42DD16C(v1, v0);
  sub_1D44343DC();
  sub_1D4432108(v2, v3, v4);
  return 0x2000000000;
}

unsigned __int8 *sub_1D442C998(const void *a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v3;

  if (!a1)
    goto LABEL_4;
  v3 = a2 - (_QWORD)a1;
  if (v3 >= 0x100000000)
  {
    a1 = (const void *)sub_1D451B550();
    __break(1u);
LABEL_4:
    LODWORD(v3) = 0;
  }
  return CC_SHA256(a1, v3, a3);
}

void static SNACIUtils.sha256Hash(url:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  MEMORY[0x1D825DB34]();
  v1 = sub_1D4519BF4();
  if (!v0)
  {
    v3 = v1;
    v4 = v2;
    sub_1D442C920();
    sub_1D42B5420(v3, v4);
  }
  sub_1D4434358();
}

void sub_1D442CAAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void (*a22)(uint64_t, _QWORD, uint64_t),uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  unint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  void (*v58)(uint64_t, char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t, uint64_t);
  uint64_t v101;
  void (*v102)(uint64_t, _QWORD, uint64_t);
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;

  sub_1D43072F8();
  v91 = v24;
  v94 = v26;
  v98 = v27;
  v99 = v28;
  v90 = v29;
  v31 = v30;
  v89 = v32;
  v96 = a23;
  v97 = a24;
  v104 = sub_1D4519AD4();
  v107 = *(_QWORD *)(v104 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v33);
  v34 = sub_1D4434148();
  v35 = MEMORY[0x1E0C80A78](v34);
  v37 = (char *)&v87 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x1E0C80A78](v35);
  v106 = (char *)&v87 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v42 = (char *)&v87 - v41;
  v43 = MEMORY[0x1E0C80A78](v40);
  v45 = (char *)&v87 - v44;
  MEMORY[0x1E0C80A78](v43);
  sub_1D42BA19C();
  v101 = v46;
  v48 = v47;
  sub_1D4519B40();
  v49 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 16);
  v93 = v45;
  v100 = v49;
  v49(v42, (uint64_t)v45, v34);
  v50 = *(_QWORD *)(v31 + 16);
  v92 = v50;
  if (v50)
  {
    v88 = v37;
    LODWORD(v103) = *MEMORY[0x1E0CAFD78];
    v102 = *(void (**)(uint64_t, _QWORD, uint64_t))(v107 + 104);
    sub_1D42CB7B8();
    v87 = v31;
    v51 = (unint64_t *)(v31 + 40);
    v105 = v42;
    v53 = v104;
    v52 = (uint64_t)v105;
    v54 = v106;
    do
    {
      v55 = v48;
      v56 = v34;
      v57 = *v51;
      v108 = *(v51 - 1);
      v109 = v57;
      v102(v25, v103, v53);
      sub_1D432E53C();
      sub_1D438C74C();
      sub_1D4519BB8();
      (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v25, v53);
      v34 = v56;
      v48 = v55;
      swift_bridgeObjectRelease();
      sub_1D43211E8(v52, *(uint64_t (**)(uint64_t, uint64_t))(v55 + 8));
      v58 = *(void (**)(uint64_t, char *, uint64_t))(v55 + 32);
      v58(v52, v54, v34);
      v51 += 2;
      --v50;
    }
    while (v50);
    swift_bridgeObjectRelease();
    v37 = v88;
    v59 = v48;
    v42 = v105;
  }
  else
  {
    v58 = *(void (**)(uint64_t, char *, uint64_t))(v48 + 32);
    v59 = v48;
  }
  v60 = v101;
  v58(v101, v42, v34);
  v61 = *(_QWORD *)(v59 + 8);
  sub_1D44343B8((uint64_t)v93);
  v62 = sub_1D442C5FC();
  v64 = v63;
  v100(v37, v60, v34);
  v107 = v61;
  v95 = v34;
  v105 = v64;
  if (v92 && (v90 & 1) != 0)
  {
    v65 = sub_1D4519B88();
    v66 = (uint64_t)v37;
    v68 = sub_1D4360EA8(v65, v67);
    v70 = v69;
    sub_1D42CB5C8();
    if (!v70)
    {
      sub_1D44343B8((uint64_t)v37);
      v73 = v98;
      v72 = v99;
      v60 = v101;
      goto LABEL_17;
    }
    v71 = v68 == 47 && v70 == 0xE100000000000000;
    v73 = v98;
    v72 = v99;
    if (!v71)
    {
      sub_1D437EC8C();
      v74 = sub_1D451B820();
      sub_1D44343B8(v66);
      sub_1D42BE8B4();
      v60 = v101;
      if ((v74 & 1) != 0)
        goto LABEL_19;
LABEL_17:
      v108 = sub_1D44344A8();
      v109 = v75;
      sub_1D4326750();
      sub_1D451A794();
      sub_1D42BE8B4();
      v77 = v108;
      v76 = v109;
      goto LABEL_20;
    }
    sub_1D44343B8(v66);
    sub_1D42BE8B4();
    v60 = v101;
  }
  else
  {
    sub_1D44343B8((uint64_t)v37);
    v73 = v98;
    v72 = v99;
  }
LABEL_19:
  v77 = sub_1D44344A8();
  v76 = v78;
LABEL_20:
  v79 = v91;
  v104 = v62;
  sub_1D42B28FC(&qword_1EFE40520);
  v80 = sub_1D42B6F40();
  *(_OWORD *)(v80 + 16) = xmmword_1D452EC90;
  *(_QWORD *)(v80 + 32) = v73;
  *(_QWORD *)(v80 + 40) = v72;
  *(_QWORD *)(v80 + 48) = 0;
  *(_QWORD *)(v80 + 56) = 0xE000000000000000;
  *(_QWORD *)(v80 + 64) = 0;
  *(_QWORD *)(v80 + 72) = 0xE000000000000000;
  v81 = v105;
  *(_QWORD *)(v80 + 80) = v62;
  *(_QWORD *)(v80 + 88) = v81;
  *(_QWORD *)(v80 + 96) = v77;
  *(_QWORD *)(v80 + 104) = v76;
  v108 = v80;
  sub_1D42DCE84();
  sub_1D42CB9DC();
  sub_1D42CB7B8();
  sub_1D42B28FC((uint64_t *)&unk_1EFE51A80);
  sub_1D432E578();
  sub_1D451A644();
  sub_1D42CB5C8();
  sub_1D442C7D0();
  if (v79)
  {
    sub_1D42B7204();
    ((void (*)(uint64_t, uint64_t))v107)(v60, v95);
    sub_1D42CB338();
    sub_1D42BE8B4();
  }
  else
  {
    v84 = v82;
    v85 = v83;
    v102 = a22;
    v103 = sub_1D4519C48();
    sub_1D42B5420(v84, v85);
    sub_1D42B7204();
    v108 = 542332737;
    v109 = 0xE400000000000000;
    sub_1D451A794();
    sub_1D451A794();
    sub_1D451A794();
    sub_1D42BE8B4();
    sub_1D4347994();
    v86 = v95;
    v100(v106, v60, v95);
    sub_1D4519960();
    sub_1D42CB7F8();
    sub_1D451993C();
    sub_1D430740C();
    sub_1D451996C();
    sub_1D451996C();
    sub_1D42CB338();
    sub_1D451996C();
    sub_1D42BE8B4();
    sub_1D4519948();
    ((void (*)(uint64_t, uint64_t))v107)(v60, v86);
  }
  sub_1D42CB3F8();
}

void sub_1D442D070(uint64_t (*a1)(uint64_t (*)(uint64_t a1, uint64_t a2), _QWORD *, id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  dispatch_semaphore_t v14;
  _QWORD *v15;
  NSObject *v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  void **v23;
  void *v24;
  id v25;
  uint64_t v26;
  void **v27;
  void (*v28)(void);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t (*)(uint64_t, uint64_t), _QWORD *, id *);
  uint64_t v34;
  char *v35;
  id v36[4];

  v33 = a1;
  v34 = a3;
  v32 = a2;
  v36[3] = *(id *)MEMORY[0x1E0C80C00];
  v3 = sub_1D451A434();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1D451A494();
  v30 = *(_QWORD *)(v7 - 8);
  v31 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v35 = (char *)&v26 - v11;
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = 1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 0;
  v27 = (void **)(v13 + 16);
  v14 = dispatch_semaphore_create(0);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v12;
  v15[3] = v13;
  v15[4] = v14;
  v36[0] = 0;
  swift_retain();
  v29 = v13;
  swift_retain();
  v16 = v14;
  v28 = (void (*)(void))v33(sub_1D4433CD8, v15, v36);
  v32 = v17;
  v33 = (uint64_t (*)(uint64_t (*)(uint64_t, uint64_t), _QWORD *, id *))v36[0];
  sub_1D4519CA8();
  v19 = v18 * 1000.0;
  if ((~*(_QWORD *)&v19 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v19 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  if (v19 >= 9.22337204e18)
    goto LABEL_14;
  v34 = v12;
  v20 = (uint64_t)v19 & ~((uint64_t)v19 >> 63);
  sub_1D451A47C();
  *v6 = v20;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF490], v3);
  sub_1D451A488();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  v21 = v31;
  v22 = *(void (**)(char *, uint64_t))(v30 + 8);
  v22(v10, v31);
  sub_1D451B028();
  if ((sub_1D451A440() & 1) != 0)
  {
    swift_beginAccess();
    if ((*(_BYTE *)(v12 + 16) & 1) != 0)
    {
      v22(v35, v21);
      swift_release();
      swift_release();

      swift_release();
      swift_release();

      return;
    }
    v23 = v27;
    swift_beginAccess();
    v24 = *v23;
    if (!*v23)
    {
      type metadata accessor for SNError();
      sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD00000000000001ALL, 0x80000001D4558130);
      v24 = 0;
    }
    v25 = v24;
  }
  else
  {
    v28();
    type metadata accessor for SNError();
    sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD000000000000011, 0x80000001D4558110);
  }
  swift_willThrow();

  swift_release();
  swift_release();
  v22(v35, v21);
  swift_release();
  swift_release();

}

uint64_t sub_1D442D4A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v5;
  void *v6;
  id v7;
  void *v8;

  v5 = (_BYTE *)(a3 + 16);
  if (a1
    && (objc_opt_self(), (v6 = (void *)swift_dynamicCastObjCClass()) != 0)
    && objc_msgSend(v6, sel_statusCode) == (id)200)
  {
    swift_beginAccess();
    v7 = 0;
    *v5 = 1;
  }
  else
  {
    swift_beginAccess();
    *v5 = 0;
    type metadata accessor for SNError();
    v7 = sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0x2074736575716572, 0xEE0064656C696166);
  }
  swift_beginAccess();
  v8 = *(void **)(a4 + 16);
  *(_QWORD *)(a4 + 16) = v7;

  return sub_1D451B034();
}

void sub_1D442D5D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  void (*v21)(_QWORD, _QWORD, _QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, _QWORD, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD, _QWORD, _QWORD);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void **v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  unint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, _QWORD, uint64_t);
  void **v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(_QWORD, _QWORD, _QWORD);

  sub_1D43072F8();
  v84 = v24;
  v85 = v21;
  v78 = v26;
  v79 = v25;
  v80 = v28;
  v81 = (void **)v27;
  v82 = v29;
  v83 = v30;
  v71 = v31;
  v73 = sub_1D42B28FC(qword_1EFE47450);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v32);
  sub_1D42CB18C();
  v33 = sub_1D43341C8();
  v34 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  sub_1D43479B4();
  v75 = sub_1D4519978();
  v77 = *(_QWORD *)(v75 - 8);
  v35 = *(_QWORD *)(v77 + 64);
  MEMORY[0x1E0C80A78](v75);
  sub_1D44344B4();
  v74 = v36;
  v38 = MEMORY[0x1E0C80A78](v37);
  v40 = (char *)&v71 - v39;
  MEMORY[0x1E0C80A78](v38);
  sub_1D42BA19C();
  v42 = v41;
  sub_1D4434574();
  sub_1D4519CCC();
  v43 = v85;
  sub_1D442CAAC((uint64_t)v81, v82, v83, v84, 0, 5522759, 0xE300000000000000, v23, (uint64_t)v80, v79, v78, a21, v71, v72, v73, v74, v75, v76, v77,
    v78,
    v79,
    v80,
    (uint64_t)v81,
    v82);
  if (v43)
  {
    sub_1D42CB44C(v23, *(uint64_t (**)(uint64_t, uint64_t))(v34 + 8));
  }
  else
  {
    v84 = v22;
    v44 = v77;
    v85 = *(void (**)(_QWORD, _QWORD, _QWORD))(v77 + 32);
    v72 = v42;
    v45 = v42;
    v46 = v75;
    v85(v45, v40, v75);
    sub_1D42CB44C(v23, *(uint64_t (**)(uint64_t, uint64_t))(v34 + 8));
    v47 = swift_allocBox();
    v49 = v48;
    v50 = sub_1D42CB348();
    v82 = v49;
    v83 = v50;
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v49, 1, 1, v50);
    v51 = sub_1D42B6F40();
    *(_QWORD *)(v51 + 16) = 0;
    v81 = (void **)(v51 + 16);
    v52 = v74;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v74, v72, v46);
    v53 = (*(unsigned __int8 *)(v44 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
    v54 = (v35 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
    v55 = swift_allocObject();
    v85(v55 + v53, v52, v46);
    *(_QWORD *)(v55 + v54) = v47;
    *(_QWORD *)(v55 + ((v54 + 15) & 0xFFFFFFFFFFFFFFF8)) = v51;
    swift_retain();
    v56 = swift_retain();
    MEMORY[0x1D825DB34](v56);
    sub_1D442D070((uint64_t (*)(uint64_t (*)(uint64_t, uint64_t), _QWORD *, id *))sub_1D4433C28, v55, v76);
    v57 = v77;
    v58 = v72;
    v59 = v81;
    v85 = (void (*)(_QWORD, _QWORD, _QWORD))v51;
    sub_1D4434358();
    v60 = v82;
    sub_1D4311F3C();
    v61 = v60;
    v62 = v84;
    sub_1D4321670(v61, v84);
    v63 = v83;
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v62, 1, v83) == 1)
    {
      sub_1D42BDFDC(v62, qword_1EFE47450);
      sub_1D4311F3C();
      v64 = *v59;
      if (!*v59)
      {
        type metadata accessor for SNError();
        sub_1D430740C();
        sub_1D4434494();
        sub_1D43EC59C(v65, v66, v67, v68, 0xD000000000000016, v69);
        v64 = 0;
      }
      v70 = v64;
      sub_1D42B6F54();
      sub_1D43211E8(v58, *(uint64_t (**)(uint64_t, uint64_t))(v57 + 8));
      sub_1D42FC448();
    }
    else
    {
      sub_1D43211E8(v58, *(uint64_t (**)(uint64_t, uint64_t))(v57 + 8));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v71, v62, v63);
      sub_1D42FC448();
    }
    swift_release();
    sub_1D43070B8();
  }
  sub_1D42CB3F8();
}

id (*sub_1D442D99C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))()
{
  id v10;
  void *v11;
  _QWORD *v12;
  void *v13;
  id v14;
  _QWORD v16[6];

  v10 = objc_msgSend((id)objc_opt_self(), sel_sharedSession);
  v11 = (void *)sub_1D4519954();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a5;
  v12[3] = a1;
  v12[4] = a2;
  v12[5] = a6;
  v16[4] = sub_1D4433D14;
  v16[5] = v12;
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 1107296256;
  v16[2] = sub_1D442DE9C;
  v16[3] = &unk_1E97B3660;
  v13 = _Block_copy(v16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  v14 = objc_msgSend(v10, sel_downloadTaskWithRequest_completionHandler_, v11, v13);
  _Block_release(v13);

  objc_msgSend(v14, sel_resume);
  *(_QWORD *)(swift_allocObject() + 16) = v14;
  return sub_1D443412C;
}

void sub_1D442DB00(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(uint64_t, void *), uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void **v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  unsigned int v31;
  id v32;
  uint64_t v33;
  id v34;
  void (*v35)(char *, uint64_t);
  id v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, void *);
  id v43[4];

  v41 = a6;
  v42 = a5;
  v40 = a2;
  v43[3] = *(id *)MEMORY[0x1E0C80C00];
  v10 = sub_1D42B28FC(qword_1EFE47450);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v38 - v14;
  v16 = sub_1D4519BC4();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v38 - v21;
  v23 = swift_projectBox();
  sub_1D4321670(a1, (uint64_t)v15);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v15, 1, v16) == 1)
  {
    sub_1D42BDFDC((uint64_t)v15, qword_1EFE47450);
    if (a3)
    {
      v24 = (uint64_t)a3;
    }
    else
    {
      type metadata accessor for SNError();
      v24 = (uint64_t)sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0x642064656C696166, 0xEF64616F6C6E776FLL);
    }
    v25 = a3;
    swift_willThrow();
  }
  else
  {
    v39 = v23;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v22, v15, v16);
    type metadata accessor for SNFileUtils();
    sub_1D44D2D78((uint64_t)v22, 0x2D6465766173, 0xE600000000000000);
    v38 = a7;
    v28 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v29 = (void *)sub_1D4519B28();
    v30 = (void *)sub_1D4519B28();
    v43[0] = 0;
    v31 = objc_msgSend(v28, sel_moveItemAtURL_toURL_error_, v29, v30, v43);

    v32 = v43[0];
    if (v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v13, v20, v16);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v13, 0, 1, v16);
      v33 = v39;
      swift_beginAccess();
      v34 = v32;
      sub_1D4433D38((uint64_t)v13, v33);
      v42(v40, a3);
      v35 = *(void (**)(char *, uint64_t))(v17 + 8);
      v35(v20, v16);
      v35(v22, v16);
      return;
    }
    v36 = v43[0];
    v24 = sub_1D4519AA4();

    swift_willThrow();
    v37 = *(void (**)(char *, uint64_t))(v17 + 8);
    v37(v20, v16);
    v37(v22, v16);
    a7 = v38;
  }
  v26 = (void **)(a7 + 16);
  swift_beginAccess();
  v27 = *v26;
  *v26 = (void *)v24;

}

uint64_t sub_1D442DE9C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, void *, void *);
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v17;

  v8 = sub_1D42B28FC(qword_1EFE47450);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void (**)(char *, void *, void *))(a1 + 32);
  if (a2)
  {
    sub_1D4519B7C();
    v12 = sub_1D4519BC4();
    v13 = 0;
  }
  else
  {
    v12 = sub_1D4519BC4();
    v13 = 1;
  }
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v10, v13, 1, v12);
  swift_retain();
  v14 = a3;
  v15 = a4;
  v11(v10, a3, a4);

  swift_release();
  return sub_1D42BDFDC((uint64_t)v10, qword_1EFE47450);
}

id (*sub_1D442DFA8(uint64_t a1, uint64_t a2))()
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  _QWORD v13[6];

  v4 = sub_1D4519BF4();
  v6 = v5;
  v7 = objc_msgSend((id)objc_opt_self(), sel_sharedSession);
  v8 = (void *)sub_1D4519954();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  v13[4] = sub_1D4433FE4;
  v13[5] = v9;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1D442E168;
  v13[3] = &unk_1E97B3A08;
  v10 = _Block_copy(v13);
  swift_retain();
  swift_release();
  v11 = sub_1D4432DB4((uint64_t)v8, v4, v6, (uint64_t)v10, v7);
  _Block_release(v10);

  objc_msgSend(v11, sel_resume);
  sub_1D42B5420(v4, v6);
  *(_QWORD *)(swift_allocObject() + 16) = v11;
  return sub_1D443412C;
}

uint64_t sub_1D442E168(uint64_t a1, void *a2, void *a3, void *a4)
{
  void *v6;
  void (*v7)(void *, unint64_t, void *, void *);
  id v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  id v12;

  v6 = a2;
  v7 = *(void (**)(void *, unint64_t, void *, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    v8 = v6;
    v6 = (void *)sub_1D4519C54();
    v10 = v9;

  }
  else
  {
    swift_retain();
    v10 = 0xF000000000000000;
  }
  v11 = a3;
  v12 = a4;
  v7(v6, v10, a3, a4);

  sub_1D42B8CDC((uint64_t)v6, v10);
  return swift_release();
}

unint64_t sub_1D442E218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, _QWORD, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(void);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  _BYTE *v47;
  void *v48;
  uint64_t v49;
  unint64_t v50;
  void *v51;
  uint64_t v52;
  unint64_t v53;
  id v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t);
  uint64_t v72;
  _BYTE *v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t (*v77)(uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t, _QWORD, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  sub_1D43072F8();
  v98 = v11;
  v99 = v12;
  v90 = v13;
  v91 = v9;
  v84 = v15;
  v85 = v14;
  v86 = v17;
  v87 = v16;
  v19 = v18;
  v88 = v20;
  v89 = v21;
  v83 = a9;
  v97 = *MEMORY[0x1E0C80C00];
  v22 = sub_1D43341C8();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v81 = sub_1D44342C8();
  v24 = *(_QWORD *)(v81 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  MEMORY[0x1E0C80A78](v81);
  sub_1D44344B4();
  v79 = v26;
  v28 = MEMORY[0x1E0C80A78](v27);
  v30 = (unint64_t)&v78 - v29;
  MEMORY[0x1E0C80A78](v28);
  sub_1D42BA19C();
  v82 = v31;
  v32 = sub_1D42B6F40();
  *(_OWORD *)(v32 + 16) = xmmword_1D453DCB0;
  v80 = v19;
  sub_1D4519CA8();
  sub_1D4519CCC();
  v33 = v91;
  sub_1D442CAAC((uint64_t)v87, v88, v89, v90, 1, 5522759, 0xE300000000000000, v10, v86, v85, v84, v83, v78, v79, v80, v81, v82, v83, v84,
    v85,
    v86,
    v87,
    v88,
    v89);
  if (v33)
  {
    sub_1D43211E8(v10, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
LABEL_3:
    swift_release();
    return v30;
  }
  v90 = v32 + 16;
  v91 = 0;
  v78 = v24;
  v34 = *(void (**)(void))(v24 + 32);
  v35 = v22;
  v36 = v82;
  v37 = v81;
  v34();
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v10, v35);
  v38 = v78;
  v39 = v79;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16))(v79, v36, v37);
  v40 = (*(unsigned __int8 *)(v38 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  v41 = (v25 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
  v42 = swift_allocObject();
  ((void (*)(unint64_t, uint64_t, uint64_t))v34)(v42 + v40, v39, v37);
  *(_QWORD *)(v42 + v41) = v32;
  v43 = swift_retain();
  v30 = MEMORY[0x1D825DB34](v43);
  v44 = v91;
  sub_1D442D070((uint64_t (*)(uint64_t (*)(uint64_t, uint64_t), _QWORD *, id *))sub_1D4433DF0, v42, v80);
  v91 = v44;
  if (v44)
  {
    objc_autoreleasePoolPop((void *)v30);
    sub_1D44341CC(v36, *(uint64_t (**)(uint64_t, uint64_t))(v38 + 8));
    sub_1D42BE998();
    sub_1D43070B8();
    return v30;
  }
  objc_autoreleasePoolPop((void *)v30);
  sub_1D4311F3C();
  v30 = *(_QWORD *)(v32 + 24);
  if (v30 >> 60 == 15)
  {
    sub_1D42B7F2C();
    v46 = sub_1D42B6D0C();
    sub_1D437ECD0(v46, v47);
    sub_1D44341CC(v36, *(uint64_t (**)(uint64_t, uint64_t))(v38 + 8));
LABEL_28:
    swift_release();
    goto LABEL_3;
  }
  v48 = (void *)objc_opt_self();
  v49 = sub_1D437EC8C();
  sub_1D42DD16C(v49, v50);
  sub_1D437EC8C();
  v51 = (void *)sub_1D4519C3C();
  v52 = sub_1D437EC8C();
  sub_1D42B8CDC(v52, v53);
  *(_QWORD *)&v95 = 0;
  v30 = (unint64_t)objc_msgSend(v48, sel_JSONObjectWithData_options_error_, v51, 0, &v95);

  if (!v30)
  {
    v69 = (id)v95;
    sub_1D4434518();

    sub_1D42B6F54();
    v70 = sub_1D44344C8();
LABEL_27:
    sub_1D44341CC(v70, v71);
    goto LABEL_28;
  }
  v54 = (id)v95;
  sub_1D451B208();
  sub_1D42E3CCC();
  sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);
  v55 = MEMORY[0x1E0DEE9B8];
  v56 = sub_1D4434368();
  v57 = v78;
  v58 = v82;
  if (!v56)
    goto LABEL_26;
  v30 = v92;
  sub_1D436479C(0x73746C75736572, 0xE700000000000000, v92, &v95);
  sub_1D42BE8B4();
  if (!v96)
  {
    sub_1D42BDFDC((uint64_t)&v95, &qword_1EFE47160);
    goto LABEL_26;
  }
  sub_1D42B28FC(&qword_1EFE51AA0);
  if ((sub_1D4434368() & 1) == 0)
  {
LABEL_26:
    sub_1D42B7F2C();
    v72 = sub_1D42B6D0C();
    sub_1D437ECD0(v72, v73);
    v71 = *(uint64_t (**)(uint64_t, uint64_t))(v57 + 8);
    v70 = v58;
    goto LABEL_27;
  }
  v90 = v92;
  v59 = *(_QWORD *)(v92 + 16);
  v30 = MEMORY[0x1E0DEE9D8];
  if (v59)
  {
    v94 = MEMORY[0x1E0DEE9D8];
    sub_1D42C71F0();
    v60 = 0;
    v88 = v59;
    v89 = v55 + 8;
    while (1)
    {
      v61 = *(_QWORD *)(v90 + 8 * v60 + 32);
      v62 = *(_QWORD *)(v61 + 16);
      sub_1D42CB6CC();
      if (!v62)
        break;
      v63 = sub_1D4366B34(7955819, 0xE300000000000000);
      if ((v64 & 1) == 0)
        break;
      sub_1D42B294C(*(_QWORD *)(v61 + 56) + 32 * v63, (uint64_t)&v95);
      if ((swift_dynamicCast() & 1) == 0)
        break;
      v65 = v92;
      v66 = v93;
      sub_1D42B7204();
      v30 = v94;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D42C71F0();
        v30 = v94;
      }
      v67 = *(_QWORD *)(v30 + 16);
      if (v67 >= *(_QWORD *)(v30 + 24) >> 1)
      {
        sub_1D42C71F0();
        v30 = v94;
      }
      ++v60;
      *(_QWORD *)(v30 + 16) = v67 + 1;
      v68 = v30 + 16 * v67;
      *(_QWORD *)(v68 + 32) = v65;
      *(_QWORD *)(v68 + 40) = v66;
      if (v88 == v60)
      {
        v57 = v78;
        v58 = v82;
        goto LABEL_30;
      }
    }
    sub_1D42B7F2C();
    v74 = sub_1D42B6D0C();
    sub_1D437ECD0(v74, v75);
    swift_bridgeObjectRelease();
    swift_release();
    v76 = sub_1D44344C8();
    sub_1D44341CC(v76, v77);
    swift_release();
    sub_1D43070B8();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_30:
    sub_1D44341CC(v58, *(uint64_t (**)(uint64_t, uint64_t))(v57 + 8));
    swift_release();
    sub_1D43070B8();
    swift_bridgeObjectRelease();
  }
  return v30;
}

id (*sub_1D442E840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  id v8;
  void *v9;
  _QWORD *v10;
  void *v11;
  id v12;
  _QWORD v14[6];

  v8 = objc_msgSend((id)objc_opt_self(), sel_sharedSession);
  v9 = (void *)sub_1D4519954();
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a5;
  v10[3] = a1;
  v10[4] = a2;
  v14[4] = sub_1D4433E58;
  v14[5] = v10;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1D442E168;
  v14[3] = &unk_1E97BEBE0;
  v11 = _Block_copy(v14);
  swift_retain();
  swift_retain();
  swift_release();
  v12 = objc_msgSend(v8, sel_dataTaskWithRequest_completionHandler_, v9, v11);
  _Block_release(v11);

  objc_msgSend(v12, sel_resume);
  *(_QWORD *)(swift_allocObject() + 16) = v12;
  return sub_1D43AF7A0;
}

uint64_t sub_1D442E990(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  uint64_t v12;
  unint64_t v13;

  swift_beginAccess();
  v12 = *(_QWORD *)(a5 + 16);
  v13 = *(_QWORD *)(a5 + 24);
  *(_QWORD *)(a5 + 16) = a1;
  *(_QWORD *)(a5 + 24) = a2;
  sub_1D42E2EE8(a1, a2);
  sub_1D42B8CDC(v12, v13);
  return a6(a3, a4);
}

uint64_t sub_1D442EA2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[9];
  _QWORD v25[9];
  uint64_t v26;
  uint64_t v27;

  sub_1D42BE910();
  v26 = v4;
  v27 = v5;
  v7 = v6;
  sub_1D43341C8();
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v8);
  sub_1D42BE8F8();
  sub_1D42B28FC(qword_1EFE47450);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1D4434148();
  v21 = *(_QWORD *)(v10 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v11);
  sub_1D42F1ED4();
  v25[0] = *v7;
  v22 = static SNACIUtils.keyAndBucket(_:)(v24, v25);
  v12 = v24[2];
  v20 = v24[3];
  v13 = v24[4];
  v23 = v24[5];
  v15 = v24[6];
  v14 = v24[7];
  sub_1D4519BA0();
  v16 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v3, 1, v10);
  if ((_DWORD)v16 == 1)
  {
    sub_1D443448C(v16, qword_1EFE47450);
    sub_1D4433B74();
    sub_1D42B6D0C();
    *v17 = 1;
    sub_1D4312028();
    sub_1D42BE8B4();
    sub_1D44344F4();
    swift_bridgeObjectRelease();
    sub_1D4347994();
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v2, v3, v10);
    sub_1D4519C9C();
    v18 = sub_1D442E218(v2, v12, v20, v22, v0, v13, v23, v15, v14);
    if (!v1)
      v13 = v18;
    sub_1D42BE8B4();
    sub_1D44344F4();
    sub_1D4347994();
    swift_bridgeObjectRelease();
    sub_1D42CB338();
    sub_1D4434434();
    sub_1D44341D4(v21);
  }
  return v13;
}

uint64_t static SNACIUtils.keyAndBucket(_:)(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[8];

  v3 = (_QWORD *)*a2;
  if ((*a2 & 0x8000000000000000) != 0)
  {
    v13 = v3[2];
    v14 = v3[3];
    v24 = v3[4];
    v21 = v13;
    swift_retain();
    sub_1D438C74C();
    v12 = static SNACIUtils.keyAndBucket(_:)(v25, &v24);
    v4 = v25[1];
    v23 = v25[0];
    v7 = v25[2];
    v6 = v25[3];
    v15 = v25[4];
    v8 = v25[5];
    v11 = v25[6];
    v10 = v25[7];
    swift_bridgeObjectRetain_n();
    v22 = v15;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1D4434580();
      v12 = v19;
    }
    v16 = *(_QWORD *)(v12 + 16);
    if (v16 >= *(_QWORD *)(v12 + 24) >> 1)
    {
      sub_1D4434580();
      v12 = v20;
    }
    *(_QWORD *)(v12 + 16) = v16 + 1;
    v17 = v12 + 16 * v16;
    *(_QWORD *)(v17 + 32) = v21;
    *(_QWORD *)(v17 + 40) = v14;
    swift_release();
    swift_bridgeObjectRelease_n();
    v5 = v23;
    v9 = v22;
  }
  else
  {
    v5 = v3[2];
    v4 = v3[3];
    v7 = v3[4];
    v6 = v3[5];
    v9 = v3[6];
    v8 = v3[7];
    v11 = v3[8];
    v10 = v3[9];
    sub_1D42CB6CC();
    sub_1D42CB7F8();
    sub_1D42DCE84();
    sub_1D42D71EC();
    v12 = MEMORY[0x1E0DEE9D8];
  }
  *a1 = v5;
  a1[1] = v4;
  a1[2] = v7;
  a1[3] = v6;
  a1[4] = v9;
  a1[5] = v8;
  a1[6] = v11;
  a1[7] = v10;
  return v12;
}

uint64_t static SNACIUtils.listObjectPaths(prefix:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v3 = sub_1D442EA2C();
  if (!v1)
  {
    v4 = v3;
    swift_retain();
    v2 = sub_1D4429EE8(v4, v2);
    sub_1D42CB208();
  }
  return v2;
}

void sub_1D442EE24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D42BE910();
  v18 = v3;
  v17 = v4;
  v6 = v5;
  sub_1D43341C8();
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42CB18C();
  sub_1D42B28FC(qword_1EFE47450);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1D4434148();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  sub_1D44343C0();
  v12 = v6[2];
  v11 = v6[3];
  sub_1D4434450(v6[5]);
  v13 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v2, 1, v9);
  if ((_DWORD)v13 == 1)
  {
    sub_1D443448C(v13, qword_1EFE47450);
    sub_1D4433B74();
    sub_1D42B6D0C();
    *v14 = 1;
    sub_1D4312028();
  }
  else
  {
    sub_1D4434424(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32));
    sub_1D44344E8();
    sub_1D442A2D8(v1, v12, v11, v17, v0, v18, v16, v15);
    sub_1D44342E4();
    sub_1D43211E8(v1, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  }
  sub_1D4434444();
  sub_1D42BE844();
}

void static SNACIUtils.downloadObject(path:destination:)()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = sub_1D42B6F40();
  sub_1D44342AC(v0);
  v1 = sub_1D42DCE84();
  sub_1D4434480(v1, v2, v3, v4, v5, v6, v7, v8, v9);
  sub_1D42BE998();
  sub_1D4434264();
  sub_1D442EE24();
  sub_1D42CB338();
  sub_1D42D3258();
  sub_1D42CB8F4();
  sub_1D42CB5C8();
  sub_1D42CB208();
  sub_1D4434340();
}

#error "1D442F0F8: call analysis failed (funcsize=75)"

void static SNACIUtils.downloadObject(path:)()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = sub_1D42B6F40();
  sub_1D44342AC(v0);
  v1 = sub_1D42DCE84();
  sub_1D4434480(v1, v2, v3, v4, v5, v6, v7, v8, v9);
  sub_1D42BE998();
  sub_1D4434264();
  sub_1D442EFE0();
  sub_1D42CB338();
  sub_1D42D3258();
  sub_1D42CB8F4();
  sub_1D42CB5C8();
  sub_1D42CB208();
  sub_1D4434340();
}

uint64_t static SNACIUtils.toPathOrBucket(bucket:pathComponents:)()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v23;

  sub_1D42CB460();
  v1 = v0;
  v23 = v2;
  v5 = *v3;
  v4 = v3[1];
  v7 = v3[2];
  v6 = v3[3];
  v9 = v3[4];
  v8 = v3[5];
  v11 = v3[6];
  v10 = v3[7];
  v12 = (_QWORD *)sub_1D42B6F40();
  v12[2] = v5;
  v12[3] = v4;
  v12[4] = v7;
  v12[5] = v6;
  v12[6] = v9;
  v12[7] = v8;
  v12[8] = v11;
  v12[9] = v10;
  v13 = v1[2];
  if (v13)
  {
    v15 = v1[4];
    v14 = v1[5];
    v16 = sub_1D42B6F40();
    *(_QWORD *)(v16 + 16) = v15;
    *(_QWORD *)(v16 + 24) = v14;
    *(_QWORD *)(v16 + 32) = v12;
    v12 = (_QWORD *)(v16 | 0x8000000000000000);
    v17 = v13 - 1;
    if (v13 != 1)
    {
      v18 = v1 + 7;
      do
      {
        v19 = *(v18 - 1);
        v20 = *v18;
        v21 = sub_1D42B6F40();
        *(_QWORD *)(v21 + 16) = v19;
        *(_QWORD *)(v21 + 24) = v20;
        *(_QWORD *)(v21 + 32) = v12;
        v12 = (_QWORD *)(v21 | 0x8000000000000000);
        sub_1D42CB9DC();
        v18 += 2;
        --v17;
      }
      while (v17);
    }
    swift_bridgeObjectRetain();
  }
  *v23 = v12;
  sub_1D42DCE84();
  sub_1D42CB7F8();
  sub_1D42CB7B8();
  sub_1D42CB430();
  return swift_bridgeObjectRetain();
}

void sub_1D442F2A0()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  sub_1D443437C();
  if ((v2 & 1) != 0)
  {
    sub_1D42CB074();
    if (v3 != v4)
    {
      sub_1D42CB1D8();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1D42CB0B4();
    }
  }
  sub_1D4434254();
  if (v1)
  {
    sub_1D42B28FC(&qword_1EFE51AE8);
    v5 = (_QWORD *)sub_1D42B6F40();
    sub_1D443419C(v5);
  }
  if ((v0 & 1) != 0)
  {
    v6 = (char *)sub_1D4434408();
    sub_1D42C657C(v6, v7, v8);
    sub_1D443413C();
  }
  else
  {
    v9 = sub_1D4434204();
    sub_1D4430108(v9, v10, v11, v12);
  }
  sub_1D42CB084();
}

void sub_1D442F33C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D442FAE8(a1, a2, a3, a4, &qword_1EFE51A10);
}

void sub_1D442F350()
{
  sub_1D442F4F4();
}

void sub_1D442F36C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  _QWORD *v6;
  size_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  sub_1D443437C();
  if ((v3 & 1) != 0)
  {
    sub_1D42CB074();
    if (v4 != v5)
    {
      sub_1D42CB1D8();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1D42CB0B4();
    }
  }
  sub_1D4434254();
  if (v2)
  {
    sub_1D42B28FC((uint64_t *)&unk_1EFE558A0);
    v6 = (_QWORD *)sub_1D42B6F40();
    v7 = j__malloc_size(v6);
    v6[2] = v1;
    v6[3] = 2 * ((uint64_t)(v7 - 32) / 4);
  }
  if ((v0 & 1) != 0)
  {
    v8 = (char *)sub_1D4434408();
    sub_1D42C6634(v8, v9, v10);
    sub_1D443413C();
  }
  else
  {
    v11 = sub_1D4434204();
    sub_1D4430318(v11, v12, v13, v14);
  }
}

void sub_1D442F420()
{
  sub_1D442F43C();
}

void sub_1D442F43C()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1D4434164();
  if ((v2 & 1) != 0)
  {
    sub_1D42CB074();
    if (v3 != v4)
    {
      sub_1D42CB1D8();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1D42CB0B4();
    }
  }
  sub_1D42CB0A4();
  if (v1)
  {
    sub_1D42CB1D0(v5, v6, v7, v8, v9);
    v10 = (const void *)sub_1D42B6F40();
    v11 = j__malloc_size(v10);
    sub_1D42CB1A4(v11 - 32);
  }
  if ((v0 & 1) != 0)
  {
    sub_1D4434188();
    sub_1D443413C();
  }
  else
  {
    v12 = sub_1D4434548();
    sub_1D4431F54(v12, v13);
  }
  sub_1D42CB084();
}

void sub_1D442F4D8()
{
  sub_1D442F4F4();
}

void sub_1D442F4F4()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  size_t v11;

  sub_1D4434164();
  if ((v2 & 1) != 0)
  {
    sub_1D42CB074();
    if (v3 != v4)
    {
      sub_1D42CB1D8();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1D42CB0B4();
    }
  }
  sub_1D42CB0A4();
  if (v1)
  {
    sub_1D42CB1D0(v5, v6, v7, v8, v9);
    v10 = (const void *)sub_1D42B6F40();
    v11 = j__malloc_size(v10);
    sub_1D42CB1A4(v11 - 32);
  }
  else
  {
    v10 = (const void *)MEMORY[0x1E0DEE9D8];
  }
  if ((v0 & 1) != 0)
  {
    sub_1D4434188();
    sub_1D443413C();
  }
  else
  {
    sub_1D4434178(v5, v6, (uint64_t)v10 + 32);
  }
  sub_1D42CB084();
}

void sub_1D442F58C()
{
  sub_1D442F67C();
}

void sub_1D442F5A8()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  sub_1D443437C();
  if ((v2 & 1) != 0)
  {
    sub_1D42CB074();
    if (v3 != v4)
    {
      sub_1D42CB1D8();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1D42CB0B4();
    }
  }
  sub_1D4434254();
  if (v1)
  {
    sub_1D42B28FC((uint64_t *)&unk_1EFE49890);
    v5 = (_QWORD *)sub_1D42B6F40();
    sub_1D443419C(v5);
  }
  if ((v0 & 1) != 0)
  {
    v6 = (char *)sub_1D4434408();
    sub_1D42C6A2C(v6, v7, v8);
    sub_1D443413C();
  }
  else
  {
    v9 = sub_1D4434204();
    sub_1D4430500(v9, v10, v11, v12);
  }
  sub_1D42CB084();
}

void sub_1D442F644()
{
  sub_1D4430000();
}

void sub_1D442F660()
{
  sub_1D442F67C();
}

void sub_1D442F67C()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  size_t v11;

  sub_1D4434164();
  if ((v2 & 1) != 0)
  {
    sub_1D42CB074();
    if (v3 != v4)
    {
      sub_1D42CB1D8();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1D42CB0B4();
    }
  }
  sub_1D42CB0A4();
  if (v1)
  {
    sub_1D42CB1D0(v5, v6, v7, v8, v9);
    v10 = (const void *)sub_1D42B6F40();
    v11 = j__malloc_size(v10);
    v5 = sub_1D443446C(v11);
  }
  else
  {
    v10 = (const void *)MEMORY[0x1E0DEE9D8];
  }
  if ((v0 & 1) != 0)
  {
    sub_1D4434188();
    sub_1D443413C();
  }
  else
  {
    sub_1D4434178(v5, v6, (uint64_t)v10 + 32);
  }
  sub_1D42CB0F8();
}

void sub_1D442F714()
{
  sub_1D442F74C();
}

void sub_1D442F730()
{
  sub_1D442F74C();
}

void sub_1D442F74C()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;

  sub_1D4434164();
  if ((v2 & 1) != 0)
  {
    sub_1D42CB074();
    if (v3 != v4)
    {
      sub_1D42CB1D8();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1D42CB0B4();
    }
  }
  sub_1D42CB0A4();
  if (v1)
  {
    sub_1D42CB1D0(v5, v6, v7, v8, v9);
    v10 = (const void *)sub_1D42B6F40();
    v11 = j__malloc_size(v10);
    sub_1D42CB1A4(v11 - 32);
  }
  if ((v0 & 1) != 0)
  {
    sub_1D4434188();
    sub_1D443413C();
  }
  else
  {
    v12 = sub_1D4434548();
    sub_1D443080C(v12, v13, v14, v15, v16);
  }
  sub_1D42CB084();
}

void sub_1D442F7E8()
{
  sub_1D442F804();
}

void sub_1D442F804()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  size_t v11;

  sub_1D4434164();
  if ((v2 & 1) != 0)
  {
    sub_1D42CB074();
    if (v3 != v4)
    {
      sub_1D42CB1D8();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1D42CB0B4();
    }
  }
  sub_1D42CB0A4();
  if (v1)
  {
    sub_1D42CB1D0(v5, v6, v7, v8, v9);
    v10 = (const void *)sub_1D42B6F40();
    v11 = j__malloc_size(v10);
    sub_1D42CB1A4(v11 - 32);
  }
  else
  {
    v10 = (const void *)MEMORY[0x1E0DEE9D8];
  }
  if ((v0 & 1) != 0)
  {
    sub_1D4434188();
    sub_1D443413C();
  }
  else
  {
    sub_1D4434178(v5, v6, (uint64_t)v10 + 32);
  }
  sub_1D42CB084();
}

void sub_1D442F89C()
{
  sub_1D4430000();
}

void sub_1D442F8B8()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  sub_1D443437C();
  if ((v2 & 1) != 0)
  {
    sub_1D42CB074();
    if (v3 != v4)
    {
      sub_1D42CB1D8();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1D42CB0B4();
    }
  }
  sub_1D4434254();
  if (v1)
  {
    sub_1D42B28FC(&qword_1EFE51998);
    v5 = (_QWORD *)sub_1D42B6F40();
    sub_1D443419C(v5);
  }
  if ((v0 & 1) != 0)
  {
    v6 = (char *)sub_1D4434408();
    sub_1D42C6B24(v6, v7, v8);
    sub_1D443413C();
  }
  else
  {
    v9 = sub_1D4434204();
    sub_1D4430AD0(v9, v10, v11, v12);
  }
  sub_1D42CB084();
}

void sub_1D442F954()
{
  sub_1D442F4F4();
}

void sub_1D442F970()
{
  sub_1D442F804();
}

void sub_1D442F98C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D442F9AC(a1, a2, a3, a4, &qword_1EFE519B8);
}

void sub_1D442F9AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  char v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  const void *v11;
  size_t v12;

  v6 = a1;
  if ((a3 & 1) != 0)
  {
    sub_1D42CB074();
    if (v8 != v9)
    {
      sub_1D42CB1D8();
      if (v8)
      {
        __break(1u);
        return;
      }
      sub_1D42CB0B4();
    }
  }
  else
  {
    v7 = a2;
  }
  if (v7 <= *(_QWORD *)(a4 + 16))
    v10 = *(_QWORD *)(a4 + 16);
  else
    v10 = v7;
  if (v10)
  {
    sub_1D42CB1D0(a1, a2, a3, a4, a5);
    v11 = (const void *)swift_allocObject();
    v12 = j__malloc_size(v11);
    sub_1D42CB1A4(v12 - 32);
  }
  else
  {
    v11 = (const void *)MEMORY[0x1E0DEE9D8];
  }
  if ((v6 & 1) != 0)
  {
    sub_1D4434188();
    sub_1D443413C();
  }
  else
  {
    sub_1D4434178(a1, a2, (uint64_t)v11 + 32);
  }
  sub_1D42CB0F8();
}

void sub_1D442FA64()
{
  sub_1D442F804();
}

void sub_1D442FA80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D4434194(a1, a2, a3, a4, &qword_1EFE49928);
}

void sub_1D442FA9C()
{
  sub_1D4430000();
}

void sub_1D442FAB8()
{
  sub_1D4430000();
}

void sub_1D442FAD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D442FAE8(a1, a2, a3, a4, (uint64_t *)&unk_1EFE51A20);
}

void sub_1D442FAE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  char v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  size_t v13;

  v6 = a1;
  if ((a3 & 1) != 0)
  {
    sub_1D42CB074();
    if (v8 != v9)
    {
      sub_1D42CB1D8();
      if (v8)
      {
        __break(1u);
        return;
      }
      sub_1D42CB0B4();
    }
  }
  else
  {
    v7 = a2;
  }
  v10 = *(_QWORD *)(a4 + 16);
  if (v7 <= v10)
    v11 = *(_QWORD *)(a4 + 16);
  else
    v11 = v7;
  if (v11)
  {
    sub_1D42CB1D0(a1, a2, a3, a4, a5);
    v12 = (_QWORD *)sub_1D42B6F40();
    v13 = j__malloc_size(v12);
    v12[2] = v10;
    v12[3] = 2 * ((uint64_t)(v13 - 32) / 16);
  }
  if ((v6 & 1) != 0)
  {
    sub_1D4434460();
    sub_1D443413C();
  }
  else
  {
    sub_1D44312E0(0, v10);
  }
  sub_1D42CB084();
}

void sub_1D442FBA4()
{
  sub_1D442F4F4();
}

void sub_1D442FBC0()
{
  sub_1D442F4F4();
}

void sub_1D442FBDC()
{
  sub_1D442F43C();
}

void sub_1D442FBF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D4434194(a1, a2, a3, a4, &qword_1EFE49AD0);
}

void sub_1D442FC14()
{
  sub_1D442F804();
}

void sub_1D442FC30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D442FE44(a1, a2, a3, a4, &qword_1EFE498E0);
}

void sub_1D442FC44()
{
  sub_1D442F4F4();
}

void sub_1D442FC60()
{
  sub_1D4430000();
}

uint64_t sub_1D442FC7C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  size_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;

  sub_1D443437C();
  if ((v3 & 1) != 0)
  {
    sub_1D42CB074();
    if (v5 != v6)
    {
      sub_1D42CB1D8();
      if (v5)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_1D42CB0B4();
    }
  }
  else
  {
    v4 = v2;
  }
  v7 = *(_QWORD *)(v0 + 16);
  if (v4 <= v7)
    v8 = *(_QWORD *)(v0 + 16);
  else
    v8 = v4;
  if (!v8)
  {
    v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_18;
  }
  sub_1D42B28FC(&qword_1EFE51978);
  v9 = *(_QWORD *)(sub_1D42B28FC((uint64_t *)&unk_1EFE51980) - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = (_QWORD *)swift_allocObject();
  v13 = j__malloc_size(v12);
  if (!v10 || (v13 - v11 == 0x8000000000000000 ? (v14 = v10 == -1) : (v14 = 0), v14))
  {
LABEL_23:
    sub_1D42DCED4();
    result = sub_1D451B550();
    __break(1u);
    return result;
  }
  v12[2] = v7;
  v12[3] = 2 * ((uint64_t)(v13 - v11) / v10);
LABEL_18:
  v15 = *(unsigned __int8 *)(*(_QWORD *)(sub_1D42B28FC((uint64_t *)&unk_1EFE51980) - 8) + 80);
  v16 = (v15 + 32) & ~v15;
  if ((v1 & 1) != 0)
  {
    sub_1D42C6EF0(v0 + v16, v7, (unint64_t)v12 + v16);
    sub_1D443413C();
  }
  else
  {
    v17 = sub_1D4434204();
    sub_1D4431834(v17, v18, v19, v20);
  }
  return (uint64_t)v12;
}

void sub_1D442FE14()
{
  sub_1D442F4F4();
}

void sub_1D442FE30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D442FE44(a1, a2, a3, a4, &qword_1EFE51A48);
}

void sub_1D442FE44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  char v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;

  v6 = a1;
  if ((a3 & 1) != 0)
  {
    sub_1D42CB074();
    if (v8 != v9)
    {
      sub_1D42CB1D8();
      if (v8)
      {
        __break(1u);
        return;
      }
      sub_1D42CB0B4();
    }
  }
  else
  {
    v7 = a2;
  }
  v10 = *(_QWORD *)(a4 + 16);
  if (v7 <= v10)
    v11 = *(_QWORD *)(a4 + 16);
  else
    v11 = v7;
  if (v11)
  {
    sub_1D42CB1D0(a1, a2, a3, a4, a5);
    v12 = sub_1D42B6F40();
    v13 = j__malloc_size((const void *)v12);
    *(_QWORD *)(v12 + 16) = v10;
    *(_QWORD *)(v12 + 24) = 2 * v13 - 64;
  }
  else
  {
    v12 = MEMORY[0x1E0DEE9D8];
  }
  if ((v6 & 1) != 0)
  {
    sub_1D4434460();
    sub_1D443413C();
  }
  else
  {
    sub_1D4431A6C(0, v10, (char *)(v12 + 32), a4);
  }
  sub_1D42CB084();
}

void sub_1D442FEF4()
{
  sub_1D442F43C();
}

void sub_1D442FF10()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  sub_1D443437C();
  if ((v2 & 1) != 0)
  {
    sub_1D42CB074();
    if (v3 != v4)
    {
      sub_1D42CB1D8();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1D42CB0B4();
    }
  }
  sub_1D4434254();
  if (v1)
  {
    sub_1D42B28FC(&qword_1EFE4FD00);
    v5 = (_QWORD *)sub_1D42B6F40();
    sub_1D443419C(v5);
  }
  if ((v0 & 1) != 0)
  {
    v6 = (char *)sub_1D4434408();
    sub_1D42C708C(v6, v7, v8);
    sub_1D443413C();
  }
  else
  {
    v9 = sub_1D4434204();
    sub_1D4431B14(v9, v10, v11, v12);
  }
  sub_1D42CB084();
}

void sub_1D442FFAC()
{
  sub_1D442F804();
}

void sub_1D442FFC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D4434194(a1, a2, a3, a4, &qword_1EFE51A40);
}

void sub_1D442FFE4()
{
  sub_1D4430000();
}

void sub_1D4430000()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  size_t v11;

  sub_1D4434164();
  if ((v2 & 1) != 0)
  {
    sub_1D42CB074();
    if (v3 != v4)
    {
      sub_1D42CB1D8();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1D42CB0B4();
    }
  }
  sub_1D42CB0A4();
  if (v1)
  {
    sub_1D42CB1D0(v5, v6, v7, v8, v9);
    v10 = (const void *)sub_1D42B6F40();
    v11 = j__malloc_size(v10);
    v5 = sub_1D443446C(v11);
  }
  else
  {
    v10 = (const void *)MEMORY[0x1E0DEE9D8];
  }
  if ((v0 & 1) != 0)
  {
    sub_1D4434188();
    sub_1D443413C();
  }
  else
  {
    sub_1D4434178(v5, v6, (uint64_t)v10 + 32);
  }
  sub_1D42CB0F8();
}

void sub_1D4430098()
{
  sub_1D442F43C();
}

void sub_1D44300B4()
{
  sub_1D442F4F4();
}

void sub_1D44300D0()
{
  sub_1D442F4F4();
}

void sub_1D44300EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D4434194(a1, a2, a3, a4, &qword_1EFE51AD0);
}

uint64_t sub_1D4430108(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1D451B5D4();
  __break(1u);
  return result;
}

uint64_t sub_1D4430204(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_1D42B28FC((uint64_t *)&unk_1EFE4A660);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1D451B5D4();
  __break(1u);
  return result;
}

char *sub_1D4430318(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = &__dst[4 * v4];
    if (v5 >= v6 || &v5[4 * v4] <= __dst)
    {
      memcpy(__dst, v5, 4 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_1D451B5D4();
  __break(1u);
  return result;
}

char *sub_1D4430408(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 48 * a1 + 32);
    v6 = 3 * v4;
    v7 = &__dst[16 * v6];
    if (v5 >= v7 || &v5[16 * v6] <= __dst)
    {
      memcpy(__dst, v5, 16 * v6);
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  result = (char *)sub_1D451B5D4();
  __break(1u);
  return result;
}

char *sub_1D4430500(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 28 * a1 + 32);
    v6 = 28 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  result = (char *)sub_1D451B5D4();
  __break(1u);
  return result;
}

char *sub_1D44305F8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 24 * a1 + 32);
    v6 = 3 * v4;
    v7 = &__dst[8 * v6];
    if (v5 >= v7 || &v5[8 * v6] <= __dst)
    {
      memcpy(__dst, v5, 8 * v6);
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  result = (char *)sub_1D451B5D4();
  __break(1u);
  return result;
}

uint64_t sub_1D44306F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      sub_1D42B28FC(&qword_1EFE51AB0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1D451B5D4();
  __break(1u);
  return result;
}

void sub_1D443080C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    sub_1D42DCED4();
    sub_1D44341F4();
    goto LABEL_11;
  }
  v6 = a4 + 32 * a1 + 32;
  if (v6 >= a3 + 32 * v5 || v6 + 32 * v5 <= a3)
  {
    sub_1D42CB1D0(a1, a2, a3, a4, a5);
    sub_1D4434240();
    sub_1D42BE8B4();
    sub_1D42CB6B8();
    return;
  }
  sub_1D42DCED4();
  sub_1D44341E4();
LABEL_11:
  sub_1D44341C0();
  __break(1u);
}

char *sub_1D44308C4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = &__dst[16 * v4];
    if (v5 >= v6 || &v5[16 * v4] <= __dst)
    {
      memcpy(__dst, v5, 16 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_1D451B5D4();
  __break(1u);
  return result;
}

uint64_t sub_1D44309B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1D42B28FC(&qword_1EFE40430);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1D451B5D4();
  __break(1u);
  return result;
}

uint64_t sub_1D4430AD0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 72 * a1 + 32;
    v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      sub_1D42B28FC((uint64_t *)&unk_1EFE519A0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1D451B5D4();
  __break(1u);
  return result;
}

char *sub_1D4430BEC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = &__dst[8 * v4];
    if (v5 >= v6 || &v5[8 * v4] <= __dst)
    {
      memcpy(__dst, v5, 8 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_1D451B5D4();
  __break(1u);
  return result;
}

uint64_t sub_1D4430CDC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1D451B5D4();
  __break(1u);
  return result;
}

char *sub_1D4430DD0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 32 * a1 + 32);
    v6 = &__dst[32 * v4];
    if (v5 >= v6 || &v5[32 * v4] <= __dst)
    {
      memcpy(__dst, v5, 32 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_1D451B5D4();
  __break(1u);
  return result;
}

uint64_t sub_1D4430EC0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1D42B28FC((uint64_t *)&unk_1EFE519F0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1D451B5D4();
  __break(1u);
  return result;
}

uint64_t sub_1D4430FD4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1D451B5D4();
  __break(1u);
  return result;
}

uint64_t sub_1D44310C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1D42B28FC(&qword_1EFE55A00);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1D451B5D4();
  __break(1u);
  return result;
}

uint64_t sub_1D44311E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1D451B5D4();
  __break(1u);
  return result;
}

void sub_1D44312E0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;
  BOOL v5;

  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_1D42DCED4();
    sub_1D44341F4();
    goto LABEL_11;
  }
  sub_1D4434300();
  if (v4)
    v5 = 0;
  else
    v5 = v3 > v2;
  if (!v5)
  {
    sub_1D42B28FC(&qword_1EFE51A18);
    sub_1D4434240();
    sub_1D42BE8B4();
    sub_1D42CB6B8();
    return;
  }
  sub_1D42DCED4();
  sub_1D44341E4();
LABEL_11:
  sub_1D44341C0();
  __break(1u);
}

uint64_t sub_1D4431388(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      type metadata accessor for SNDetectorIdentifier(0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1D451B5D4();
  __break(1u);
  return result;
}

uint64_t sub_1D4431498(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1D451B5D4();
  __break(1u);
  return result;
}

uint64_t sub_1D443158C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1D451B5D4();
  __break(1u);
  return result;
}

void sub_1D4431680(uint64_t a1, uint64_t a2)
{
  const void *v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  BOOL v7;

  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_1D42DCED4();
    sub_1D44341F4();
    goto LABEL_11;
  }
  sub_1D4434388();
  if (v6)
    v7 = 0;
  else
    v7 = v5 > (unint64_t)v3;
  if (!v7)
  {
    sub_1D44343FC(v3, v2, 8 * v4);
    sub_1D42BE8B4();
    sub_1D43A2630();
    return;
  }
  sub_1D42DCED4();
  sub_1D44341E4();
LABEL_11:
  sub_1D44341C0();
  __break(1u);
}

uint64_t sub_1D4431718(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1D42B28FC(&qword_1EFE51990);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1D451B5D4();
  __break(1u);
  return result;
}

uint64_t sub_1D4431834(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(sub_1D42B28FC((uint64_t *)&unk_1EFE51980) - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v13;
    }
  }
  result = sub_1D451B5D4();
  __break(1u);
  return result;
}

uint64_t sub_1D4431958(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_1D42B28FC(&qword_1EFE49BB0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1D451B5D4();
  __break(1u);
  return result;
}

void sub_1D4431A6C(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  size_t v4;
  char *v5;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if ((v4 & 0x8000000000000000) != 0)
  {
LABEL_9:
    sub_1D42DCED4();
    sub_1D44341F4();
    goto LABEL_11;
  }
  v5 = (char *)(a4 + a1 + 32);
  if (v5 >= &a3[v4] || &v5[v4] <= a3)
  {
    sub_1D44343FC(a3, v5, v4);
    sub_1D42BE8B4();
    sub_1D43A2630();
    return;
  }
  sub_1D42DCED4();
  sub_1D44341E4();
LABEL_11:
  sub_1D44341C0();
  __break(1u);
}

uint64_t sub_1D4431B14(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 160 * a1 + 32;
    v6 = a3 + 160 * v4;
    if (v5 >= v6 || v5 + 160 * v4 <= a3)
    {
      sub_1D42B28FC(&qword_1EFE4FCA0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1D451B5D4();
  __break(1u);
  return result;
}

uint64_t sub_1D4431C30(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1D42B28FC((uint64_t *)&unk_1EFE557B0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1D451B5D4();
  __break(1u);
  return result;
}

uint64_t sub_1D4431D44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1D451B5D4();
  __break(1u);
  return result;
}

uint64_t sub_1D4431E38(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1D42B28FC((uint64_t *)&unk_1EFE519E0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1D451B5D4();
  __break(1u);
  return result;
}

void sub_1D4431F54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  char v8;
  BOOL v9;

  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_1D42DCED4();
    sub_1D44341F4();
    goto LABEL_11;
  }
  sub_1D4434300();
  if (v8)
    v9 = 0;
  else
    v9 = v7 > v4;
  if (!v9)
  {
    sub_1D42CB1D0(v2, v3, v4, v5, v6);
    sub_1D4434240();
    sub_1D42BE8B4();
    sub_1D42CB6B8();
    return;
  }
  sub_1D42DCED4();
  sub_1D44341E4();
LABEL_11:
  sub_1D44341C0();
  __break(1u);
}

uint64_t sub_1D4431FF4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      sub_1D42B28FC(&qword_1EFE51AD8);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1D451B5D4();
  __break(1u);
  return result;
}

void sub_1D4432108(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_1D42DD16C(a2, a3);
  sub_1D42DD16C(a2, a3);
  __asm { BR              X11 }
}

uint64_t sub_1D4432184@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;
  unsigned int v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;

  v8 = v4;
  LOWORD(v9) = a1;
  BYTE2(v9) = BYTE2(a1);
  HIBYTE(v9) = BYTE3(a1);
  v10 = BYTE4(a1);
  v11 = BYTE5(a1);
  v5 = BYTE6(a1);
  v12 = BYTE6(a1);
  sub_1D42DD16C(v2, v1);
  sub_1D4432C80((uint64_t)&v8, v5, v2, v1);
  sub_1D42B5420(v2, v1);
  v6 = v9 | ((unint64_t)v10 << 32) | ((unint64_t)v11 << 40) | ((unint64_t)v12 << 48);
  *v3 = v8;
  v3[1] = v6;
  sub_1D42B5420(v2, v1);
  return sub_1D42B5420(v2, v1);
}

void sub_1D44324CC(uint64_t a1)
{
  __asm { BR              X11 }
}

void sub_1D4432534(size_t a1@<X2>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t macOut, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  _QWORD *v22;
  size_t v23;
  uint64_t v24;
  const void *v25;
  const void *v26;
  unint64_t v27;
  uint64_t v28;
  unsigned int v29;
  unsigned __int8 v30;
  unsigned __int8 v31;
  unsigned __int8 v32;

  v28 = v24;
  LOWORD(v29) = a2;
  BYTE2(v29) = BYTE2(a2);
  HIBYTE(v29) = BYTE3(a2);
  v30 = BYTE4(a2);
  v31 = BYTE5(a2);
  v32 = BYTE6(a2);
  CCHmac(0, v25, a1, v26, v23, &v28);
  v27 = v29 | ((unint64_t)v30 << 32) | ((unint64_t)v31 << 40) | ((unint64_t)v32 << 48);
  *v22 = v28;
  v22[1] = v27;
}

void sub_1D44327A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (sub_1D4519A14())
  {
    if (__OFSUB__(a1, sub_1D4519A38()))
    {
      __break(1u);
    }
    else if (!__OFSUB__(a2, a1))
    {
      sub_1D4519A2C();
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x1D44329FCLL);
  }
  __break(1u);
  JUMPOUT(0x1D4432A04);
}

void sub_1D4432A3C(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4, size_t a5, const void *a6, size_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v13 = sub_1D4519A14();
  if (v13)
  {
    v14 = v13;
    v15 = sub_1D4519A38();
    v16 = a1 - v15;
    if (__OFSUB__(a1, v15))
    {
      __break(1u);
    }
    else if (!__OFSUB__(a2, a1))
    {
      sub_1D4519A2C();
      CCHmac(0, a4, a5, a6, a7, (void *)(v14 + v16));
      return;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_1D4432AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __asm { BR              X10 }
}

uint64_t sub_1D4432B34(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  unint64_t v19;
  unsigned __int8 *v20;

  sub_1D442A000(v18, v19 & 0xFFFFFFFFFFFFLL, BYTE6(v19), v20);
  return sub_1D42B5420(v18, v19);
}

uint64_t sub_1D4432C80(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;

  v8 = a1 + 14;
  sub_1D42DD16C(a3, a4);
  sub_1D4432AE4(a1, v8, a2, a3, a4);
  return sub_1D42B5420(a3, a4);
}

unsigned __int8 *sub_1D4432D0C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4)
{
  unsigned __int8 *result;
  unsigned __int8 *v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;

  result = (unsigned __int8 *)sub_1D4519A14();
  v8 = result;
  if (result)
  {
    result = (unsigned __int8 *)sub_1D4519A38();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v8 += a1 - (_QWORD)result;
  }
  v9 = __OFSUB__(a2, a1);
  v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_13;
  }
  v11 = sub_1D4519A2C();
  if (v11 >= v10)
    v12 = v10;
  else
    v12 = v11;
  v13 = &v8[v12];
  if (v8)
    v14 = (uint64_t)v13;
  else
    v14 = 0;
  return sub_1D442C998(v8, v14, a4);
}

id sub_1D4432DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v8;
  id v9;

  v8 = (void *)sub_1D4519C3C();
  v9 = objc_msgSend(a5, sel_uploadTaskWithRequest_fromData_completionHandler_, a1, v8, a4);

  return v9;
}

unint64_t sub_1D4432E20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFE4C790;
  if (!qword_1EFE4C790)
  {
    v1 = sub_1D4519C84();
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0CB02D0], v1);
    atomic_store(result, (unint64_t *)&qword_1EFE4C790);
  }
  return result;
}

unint64_t sub_1D4432E60()
{
  unint64_t result;

  result = qword_1EFE51808;
  if (!qword_1EFE51808)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E478, &type metadata for S3BucketAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51808);
  }
  return result;
}

unint64_t sub_1D4432E9C()
{
  unint64_t result;

  result = qword_1EFE51820;
  if (!qword_1EFE51820)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E428, &type metadata for S3Path.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51820);
  }
  return result;
}

unint64_t sub_1D4432ED8()
{
  unint64_t result;

  result = qword_1EFE51828;
  if (!qword_1EFE51828)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for S3PathOrBucket, &type metadata for S3PathOrBucket);
    atomic_store(result, (unint64_t *)&qword_1EFE51828);
  }
  return result;
}

unint64_t sub_1D4432F14()
{
  unint64_t result;

  result = qword_1EFE51838;
  if (!qword_1EFE51838)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for S3PathOrBucket, &type metadata for S3PathOrBucket);
    atomic_store(result, (unint64_t *)&qword_1EFE51838);
  }
  return result;
}

unint64_t sub_1D4432F50()
{
  unint64_t result;

  result = qword_1EFE51858;
  if (!qword_1EFE51858)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E3D8, &type metadata for S3PathOrBucket.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51858);
  }
  return result;
}

unint64_t sub_1D4432F8C()
{
  unint64_t result;

  result = qword_1EFE51860;
  if (!qword_1EFE51860)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E388, &type metadata for S3PathOrBucket.PathCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51860);
  }
  return result;
}

unint64_t sub_1D4432FC8()
{
  unint64_t result;

  result = qword_1EFE51868;
  if (!qword_1EFE51868)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for S3Path, &type metadata for S3Path);
    atomic_store(result, (unint64_t *)&qword_1EFE51868);
  }
  return result;
}

unint64_t sub_1D4433004()
{
  unint64_t result;

  result = qword_1EFE51870;
  if (!qword_1EFE51870)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E338, &type metadata for S3PathOrBucket.BucketCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51870);
  }
  return result;
}

unint64_t sub_1D4433040()
{
  unint64_t result;

  result = qword_1EFE51878;
  if (!qword_1EFE51878)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for S3BucketAddress, &type metadata for S3BucketAddress);
    atomic_store(result, (unint64_t *)&qword_1EFE51878);
  }
  return result;
}

uint64_t sub_1D443307C()
{
  sub_1D42B71FC();
  swift_release();
  sub_1D42E3F08();
  return swift_deallocObject();
}

unint64_t sub_1D44330A0()
{
  unint64_t result;

  result = qword_1EFE518A0;
  if (!qword_1EFE518A0)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for S3Path, &type metadata for S3Path);
    atomic_store(result, (unint64_t *)&qword_1EFE518A0);
  }
  return result;
}

uint64_t sub_1D44330DC()
{
  sub_1D42B71FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1D4433114()
{
  unint64_t result;

  result = qword_1EFE518A8;
  if (!qword_1EFE518A8)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for S3BucketAddress, &type metadata for S3BucketAddress);
    atomic_store(result, (unint64_t *)&qword_1EFE518A8);
  }
  return result;
}

unint64_t sub_1D4433154()
{
  unint64_t result;

  result = qword_1EFE518B0;
  if (!qword_1EFE518B0)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for S3BucketAddress, &type metadata for S3BucketAddress);
    atomic_store(result, (unint64_t *)&qword_1EFE518B0);
  }
  return result;
}

unint64_t sub_1D4433194()
{
  unint64_t result;

  result = qword_1EFE518B8;
  if (!qword_1EFE518B8)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for S3Path, &type metadata for S3Path);
    atomic_store(result, (unint64_t *)&qword_1EFE518B8);
  }
  return result;
}

unint64_t sub_1D44331D4()
{
  unint64_t result;

  result = qword_1EFE518C0;
  if (!qword_1EFE518C0)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for S3PathOrBucket, &type metadata for S3PathOrBucket);
    atomic_store(result, (unint64_t *)&qword_1EFE518C0);
  }
  return result;
}

_QWORD *initializeWithCopy for FileServerInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FileServerInfo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for FileServerInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FileServerInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FileServerInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for S3BucketAddress()
{
  sub_1D42CB35C();
}

uint64_t destroy for S3Path()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *_s13SoundAnalysis6S3PathVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  sub_1D42BE934();
  return a1;
}

_QWORD *assignWithCopy for S3Path(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for S3Path(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_release();
  return a1;
}

void type metadata accessor for S3Path()
{
  sub_1D42CB35C();
}

_QWORD *initializeBufferWithCopyOfBuffer for S3PathOrBucket(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for S3PathOrBucket()
{
  return swift_release();
}

_QWORD *assignWithCopy for S3PathOrBucket(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for S3PathOrBucket(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

void type metadata accessor for S3PathOrBucket()
{
  sub_1D42CB35C();
}

void type metadata accessor for SNACIUtils()
{
  sub_1D42CB35C();
}

ValueMetadata *type metadata accessor for S3PathOrBucket.CodingKeys()
{
  return &type metadata for S3PathOrBucket.CodingKeys;
}

ValueMetadata *type metadata accessor for S3PathOrBucket.BucketCodingKeys()
{
  return &type metadata for S3PathOrBucket.BucketCodingKeys;
}

uint64_t _s13SoundAnalysis14S3PathOrBucketO16BucketCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D443367C + 4 * byte_1D453DCC4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D443369C + 4 * byte_1D453DCC9[v4]))();
}

_BYTE *sub_1D443367C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D443369C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D44336A4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D44336AC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D44336B4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D44336BC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for S3PathOrBucket.PathCodingKeys()
{
  return &type metadata for S3PathOrBucket.PathCodingKeys;
}

ValueMetadata *type metadata accessor for S3Path.CodingKeys()
{
  return &type metadata for S3Path.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for S3BucketAddress.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D4433734 + 4 * byte_1D453DCD3[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D4433768 + 4 * byte_1D453DCCE[v4]))();
}

uint64_t sub_1D4433768(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4433770(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4433778);
  return result;
}

uint64_t sub_1D4433784(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D443378CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D4433790(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4433798(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for S3BucketAddress.CodingKeys()
{
  return &type metadata for S3BucketAddress.CodingKeys;
}

unint64_t sub_1D44337B8()
{
  unint64_t result;

  result = qword_1EFE518C8;
  if (!qword_1EFE518C8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E030, &type metadata for S3BucketAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE518C8);
  }
  return result;
}

unint64_t sub_1D44337F8()
{
  unint64_t result;

  result = qword_1EFE518D0;
  if (!qword_1EFE518D0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E0E8, &type metadata for S3Path.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE518D0);
  }
  return result;
}

unint64_t sub_1D4433838()
{
  unint64_t result;

  result = qword_1EFE518D8;
  if (!qword_1EFE518D8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E1A0, &type metadata for S3PathOrBucket.PathCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE518D8);
  }
  return result;
}

unint64_t sub_1D4433878()
{
  unint64_t result;

  result = qword_1EFE518E0;
  if (!qword_1EFE518E0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E258, &type metadata for S3PathOrBucket.BucketCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE518E0);
  }
  return result;
}

unint64_t sub_1D44338B8()
{
  unint64_t result;

  result = qword_1EFE518E8;
  if (!qword_1EFE518E8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E310, &type metadata for S3PathOrBucket.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE518E8);
  }
  return result;
}

unint64_t sub_1D44338F8()
{
  unint64_t result;

  result = qword_1EFE518F0;
  if (!qword_1EFE518F0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E1C8, &type metadata for S3PathOrBucket.BucketCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE518F0);
  }
  return result;
}

unint64_t sub_1D4433938()
{
  unint64_t result;

  result = qword_1EFE518F8;
  if (!qword_1EFE518F8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E1F0, &type metadata for S3PathOrBucket.BucketCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE518F8);
  }
  return result;
}

unint64_t sub_1D4433978()
{
  unint64_t result;

  result = qword_1EFE51900;
  if (!qword_1EFE51900)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E110, &type metadata for S3PathOrBucket.PathCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51900);
  }
  return result;
}

unint64_t sub_1D44339B8()
{
  unint64_t result;

  result = qword_1EFE51908;
  if (!qword_1EFE51908)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E138, &type metadata for S3PathOrBucket.PathCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51908);
  }
  return result;
}

unint64_t sub_1D44339F8()
{
  unint64_t result;

  result = qword_1EFE51910;
  if (!qword_1EFE51910)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E280, &type metadata for S3PathOrBucket.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51910);
  }
  return result;
}

unint64_t sub_1D4433A38()
{
  unint64_t result;

  result = qword_1EFE51918;
  if (!qword_1EFE51918)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E2A8, &type metadata for S3PathOrBucket.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51918);
  }
  return result;
}

unint64_t sub_1D4433A78()
{
  unint64_t result;

  result = qword_1EFE51920;
  if (!qword_1EFE51920)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E058, &type metadata for S3Path.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51920);
  }
  return result;
}

unint64_t sub_1D4433AB8()
{
  unint64_t result;

  result = qword_1EFE51928;
  if (!qword_1EFE51928)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E080, &type metadata for S3Path.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51928);
  }
  return result;
}

unint64_t sub_1D4433AF8()
{
  unint64_t result;

  result = qword_1EFE51930;
  if (!qword_1EFE51930)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453DFA0, &type metadata for S3BucketAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51930);
  }
  return result;
}

unint64_t sub_1D4433B38()
{
  unint64_t result;

  result = qword_1EFE51938;
  if (!qword_1EFE51938)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453DFC8, &type metadata for S3BucketAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51938);
  }
  return result;
}

unint64_t sub_1D4433B74()
{
  unint64_t result;

  result = qword_1EFE51A78;
  if (!qword_1EFE51A78)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E544, &unk_1E979C050);
    atomic_store(result, (unint64_t *)&qword_1EFE51A78);
  }
  return result;
}

uint64_t sub_1D4433BB0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1D4433BD4()
{
  uint64_t v0;

  sub_1D4434360();
  sub_1D4434214();
  sub_1D43074F4(v0);
  sub_1D4434508();
  swift_release();
  sub_1D44343DC();
  return swift_deallocObject();
}

id (*sub_1D4433C28())()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D4434360();
  sub_1D4434320();
  sub_1D44343DC();
  return sub_1D442D99C(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_1D4433C7C()
{
  return swift_deallocObject();
}

uint64_t sub_1D4433C8C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1D4433CB0()
{
  uint64_t v0;

  sub_1D42EA528();
  swift_release();

  sub_1D42E3F08();
  return swift_deallocObject();
}

uint64_t sub_1D4433CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D442D4A4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1D4433CE4()
{
  sub_1D42EA528();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1D4433D14(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  sub_1D442DB00(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void (**)(uint64_t, void *))(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_1D4433D20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D4433D30()
{
  return swift_release();
}

uint64_t sub_1D4433D38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D42B28FC(qword_1EFE47450);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D4433D80()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 >> 60 != 15)
    sub_1D42B5420(*(_QWORD *)(v0 + 16), v1);
  return swift_deallocObject();
}

uint64_t sub_1D4433DB4()
{
  uint64_t v0;

  sub_1D4434360();
  sub_1D4434214();
  sub_1D43074F4(v0);
  sub_1D4434508();
  sub_1D44343DC();
  return swift_deallocObject();
}

id (*sub_1D4433DF0())()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1D4434360();
  sub_1D4434320();
  sub_1D44343DC();
  return sub_1D442E840(v0, v1, v2, v3, v4);
}

uint64_t sub_1D4433E38()
{
  sub_1D42EA528();
  swift_release();
  sub_1D42E3F08();
  return swift_deallocObject();
}

uint64_t sub_1D4433E58(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1D442E990(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(uint64_t (**)(uint64_t, uint64_t))(v4 + 24));
}

uint64_t sub_1D4433E64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  sub_1D42CB460();
  v1 = sub_1D4519BC4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1D4434360();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  swift_release();
  sub_1D4434508();
  sub_1D42CB430();
  return swift_deallocObject();
}

id (*sub_1D4433F28())()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D4519BC4();
  sub_1D4434360();
  sub_1D44343DC();
  return sub_1D442DFA8(v0, v1);
}

uint64_t sub_1D4433FC0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1D4433FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(a3, a4);
  sub_1D42B6E24();
}

uint64_t _s13SoundAnalysis14S3PathOrBucketO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D4434054 + 4 * byte_1D453DCDD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D4434088 + 4 * byte_1D453DCD8[v4]))();
}

uint64_t sub_1D4434088(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4434090(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4434098);
  return result;
}

uint64_t sub_1D44340A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D44340ACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D44340B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D44340B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SNACIUtils.DomainError()
{
  sub_1D42CB35C();
}

unint64_t sub_1D44340D4()
{
  unint64_t result;

  result = qword_1EFE51AE0;
  if (!qword_1EFE51AE0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E51C, &unk_1E979C050);
    atomic_store(result, (unint64_t *)&qword_1EFE51AE0);
  }
  return result;
}

uint64_t sub_1D443413C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4434148()
{
  return sub_1D4519BC4();
}

uint64_t sub_1D4434178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  return v4(0, v5, a3, v3);
}

uint64_t sub_1D4434188()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0 + 32, v2);
}

void sub_1D4434194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  sub_1D442F9AC(a1, a2, a3, a4, a5);
}

size_t sub_1D443419C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  size_t result;

  result = j__malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

uint64_t sub_1D44341C0()
{
  return sub_1D451B5D4();
}

uint64_t sub_1D44341CC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_1D44341D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t sub_1D4434204()
{
  return 0;
}

uint64_t sub_1D4434240()
{
  return swift_arrayInitWithCopy();
}

uint64_t sub_1D443428C()
{
  return sub_1D451B724();
}

uint64_t sub_1D443429C()
{
  return sub_1D451B64C();
}

uint64_t sub_1D44342AC(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(v4 - 56) = a1 | 0x8000000000000000;
  return swift_retain();
}

uint64_t sub_1D44342C8()
{
  return sub_1D4519978();
}

uint64_t sub_1D44342E4()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 88) + 8))(v0, *(_QWORD *)(v1 - 72));
}

void sub_1D4434358()
{
  void *v0;

  objc_autoreleasePoolPop(v0);
}

uint64_t sub_1D4434360()
{
  return sub_1D4519978();
}

uint64_t sub_1D4434368()
{
  return swift_dynamicCast();
}

uint64_t sub_1D44343A4()
{
  return sub_1D451B190();
}

uint64_t sub_1D44343B8(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_1D44343C0()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_1D44343E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v0, v1);
}

void *sub_1D44343FC@<X0>(void *__dst@<X2>, const void *a2@<X1>, size_t a3@<X8>)
{
  return memcpy(__dst, a2, a3);
}

uint64_t sub_1D4434408()
{
  uint64_t v0;

  return v0 + 32;
}

uint64_t sub_1D4434414()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4434424@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v2, v3, v1);
}

uint64_t sub_1D4434434()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 192) + 8))(v0, *(_QWORD *)(v1 - 184));
}

uint64_t sub_1D4434450@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = a1;
  *(_QWORD *)(v2 - 120) = v1;
  return sub_1D4519BA0();
}

uint64_t sub_1D4434460()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0 + 32, v2);
}

uint64_t sub_1D443446C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 2 * ((result - 32) / v3);
  return result;
}

uint64_t sub_1D4434480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  return static SNACIUtils.keyAndBucket(_:)(&a9, (_QWORD *)(v9 - 56));
}

uint64_t sub_1D443448C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_1D42BDFDC(v2, a2);
}

uint64_t sub_1D44344A8()
{
  return sub_1D4519B88();
}

uint64_t sub_1D44344C8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

uint64_t sub_1D44344DC()
{
  return sub_1D451A74C();
}

uint64_t sub_1D44344E8()
{
  return sub_1D4519C9C();
}

uint64_t sub_1D44344F4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D44344FC()
{
  return sub_1D451A74C();
}

uint64_t sub_1D4434508()
{
  return swift_release();
}

uint64_t sub_1D4434510()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4434518()
{
  return sub_1D4519AA4();
}

uint64_t sub_1D4434524()
{
  return sub_1D451B1FC();
}

uint64_t sub_1D4434530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t sub_1D443453C()
{
  return sub_1D451B610();
}

uint64_t sub_1D4434548()
{
  return 0;
}

void sub_1D443455C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
}

uint64_t sub_1D4434568()
{
  return S3PathOrBucket.hash(into:)();
}

uint64_t sub_1D4434574()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 216) = v0;
  return sub_1D4519CA8();
}

void sub_1D4434580()
{
  sub_1D442F804();
}

void sub_1D443458C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    sub_1D42C73B0();
    v5 = (unint64_t *)(a1 + 32);
    while (1)
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & 0x8000000000000000) != 0)
        break;
      if (v6 >= *(_QWORD *)(a2 + 16))
        goto LABEL_11;
      v8 = *(_QWORD *)(a2 + 32 + 8 * v6);
      v9 = *(_QWORD *)(v10 + 16);
      if (v9 >= *(_QWORD *)(v10 + 24) >> 1)
        sub_1D42C73B0();
      *(_QWORD *)(v10 + 16) = v9 + 1;
      *(_QWORD *)(v10 + 8 * v9 + 32) = v8;
      if (!--v3)
        goto LABEL_8;
    }
    __break(1u);
LABEL_11:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
  }
}

id sub_1D4434694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  id v6;

  sub_1D42E9D88(0, (unint64_t *)&unk_1EFE49790);
  v5 = (void *)sub_1D451A908();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_multiArrayByConcatenatingMultiArrays_alongAxis_dataType_, v5, a2, a3);

  return v6;
}

unint64_t sub_1D443472C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v13;

  v2 = (uint64_t)objc_msgSend(a1, sel_count);
  if (v2 < 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_1D44AD3FC(0, v2);
  v4 = v3;
  v5 = *(_QWORD *)(v3 + 16);
  if (v5)
  {
    v6 = MEMORY[0x1E0DEE9D8];
    v7 = 1;
    while (v5 <= *(_QWORD *)(v4 + 16))
    {
      v8 = *(_QWORD *)(v4 + 8 * v5 + 24);
      sub_1D42B28FC(&qword_1EFE40410);
      v9 = sub_1D438C4E4();
      *(_OWORD *)(v9 + 16) = xmmword_1D4525300;
      *(_QWORD *)(v9 + 32) = sub_1D451AC44();
      sub_1D451A950();
      sub_1D44B5080(v6);
      v6 = v9;
      v10 = objc_msgSend(a1, sel_objectAtIndex_, v8);
      sub_1D451B208();
      swift_unknownObjectRelease();
      sub_1D42E9D88(0, (unint64_t *)&qword_1EFE404B0);
      swift_dynamicCast();
      v11 = (uint64_t)objc_msgSend(v13, sel_integerValue);

      if ((unsigned __int128)(v7 * (__int128)v11) >> 64 != (v7 * v11) >> 63)
        goto LABEL_10;
      v7 *= v11;
      if (!--v5)
      {
        swift_release();
        return v6;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
LABEL_12:
  swift_release();
  return MEMORY[0x1E0DEE9D8];
}

void sub_1D44348E4(int64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v8 = a1;
  v9 = MEMORY[0x1E0DEE9D8];
  v10 = a1;
  while (1)
  {
    if (a2 == v10)
    {
      swift_bridgeObjectRelease();
      return;
    }
    if (a2 < a1)
      break;
    if (v8 < a1)
      goto LABEL_16;
    if ((uint64_t)v10 >= a2)
      goto LABEL_17;
    if (v8 < 0)
      goto LABEL_18;
    if (v10 >= *(_QWORD *)(a3 + 16))
      goto LABEL_19;
    v11 = *(_QWORD *)(a3 + 8 * v10++ + 32);
    if (v11 == a4)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1D42C73B0();
      v12 = *(_QWORD *)(v9 + 16);
      if (v12 >= *(_QWORD *)(v9 + 24) >> 1)
        sub_1D42C73B0();
      *(_QWORD *)(v9 + 16) = v12 + 1;
      *(_QWORD *)(v9 + 8 * v12 + 32) = v10 - 1;
      v8 = v10;
    }
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
}

id sub_1D4434A1C(void *a1)
{
  uint64_t v2;
  uint64_t v4;

  if ((sub_1D44363B4(a1) & 1) != 0)
    return a1;
  sub_1D42E9D88(0, (unint64_t *)&unk_1EFE49790);
  sub_1D42B28FC(&qword_1EFE40410);
  v2 = sub_1D438C4E4();
  *(_OWORD *)(v2 + 16) = xmmword_1D4525300;
  *(_QWORD *)(v2 + 32) = a1;
  v4 = v2;
  sub_1D451A950();
  return sub_1D4434694(v4, 0, (uint64_t)objc_msgSend(a1, sel_dataType));
}

void sub_1D4434AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _BYTE *v14;

  v9 = sub_1D451B1B4();
  if (!v9)
  {
    sub_1D42B7F2C();
    sub_1D42B6D0C();
    *v14 = 0;
    swift_willThrow();
    goto LABEL_5;
  }
  v11 = v9;
  v12 = v10;
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v11;
  v13[3] = v12;
  sub_1D4436A44(v11, a3, a4, a5, sub_1D4437540, v13);
  swift_release();
  if (v5)
  {
    MEMORY[0x1D825E524](v11, -1, -1);
LABEL_5:
    swift_willThrow();
  }
  sub_1D44380AC();
}

uint64_t sub_1D4434BAC(void *a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  result = (uint64_t)sub_1D44363B4(a1);
  if ((result & 1) == 0)
  {
    sub_1D42DCEE8();
    sub_1D4311F68();
    sub_1D430740C();
    sub_1D43F8880(v2, v3, (uint64_t)"Expected multi array to have standard strides");
    return sub_1D42E3BB8();
  }
  return result;
}

uint64_t sub_1D4434BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  int v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  char v81;
  char v82;
  _QWORD *v83;
  char v84;
  uint64_t v85;
  _QWORD *v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;

  v124 = a2;
  v125 = a1;
  v118 = sub_1D42B28FC(&qword_1EFE51AF0);
  v123 = *(_QWORD *)(v118 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42BA15C();
  v110 = v5;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v6);
  sub_1D432D3D4();
  v109 = v7;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v8);
  sub_1D432D3D4();
  v115 = v9;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v10);
  sub_1D432D3D4();
  v113 = v11;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v12);
  sub_1D432D3D4();
  v120 = (char *)v13;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v14);
  v119 = (char *)&v105 - v15;
  v116 = sub_1D42B28FC(&qword_1EFE51AF8);
  v121 = *(_QWORD *)(v116 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v16);
  sub_1D42BA15C();
  v105 = v17;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v18);
  sub_1D432D3D4();
  v106 = v19;
  sub_1D432D374();
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v105 - v22;
  MEMORY[0x1E0C80A78](v21);
  sub_1D435ED08();
  v25 = MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v105 - v26;
  MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v105 - v28;
  v30 = sub_1D42B28FC(&qword_1EFE4C970);
  v122 = *(_QWORD *)(v30 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v31);
  sub_1D42BA15C();
  v108 = v32;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v33);
  sub_1D432D3D4();
  v107 = v34;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v35);
  sub_1D432D3D4();
  v114 = v36;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v37);
  sub_1D432D3D4();
  v111 = v38;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v39);
  sub_1D432D3D4();
  v112 = v40;
  sub_1D432D374();
  MEMORY[0x1E0C80A78](v41);
  v117 = (char *)&v105 - v42;
  type metadata accessor for ShapedArray();
  sub_1D42BE838();
  v44 = MEMORY[0x1E0C80A78](v43);
  v46 = (char *)&v105 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = MEMORY[0x1E0C80A78](v44);
  v49 = (char *)&v105 - v48;
  MEMORY[0x1E0C80A78](v47);
  sub_1D435ED1C();
  MEMORY[0x1E0C80A78](v50);
  v52 = (char *)&v105 - v51;
  sub_1D4437298(v125, (uint64_t)&v105 - v51);
  v53 = sub_1D443816C();
  if (v53)
  {
    if (v53 == 1)
    {
      v54 = v122;
      v55 = *(void (**)(char *, char *, uint64_t))(v122 + 32);
      v56 = (uint64_t)v117;
      v55(v117, v52, v30);
      sub_1D4437298(v124, v2);
      if (sub_1D443816C() == 1)
      {
        v57 = v112;
        v55((char *)v112, (char *)v2, v30);
        v58 = (_QWORD *)sub_1D451A02C();
        sub_1D451A02C();
        v59 = sub_1D4438164(v58);
        sub_1D42BE8B4();
        sub_1D42B7204();
        v60 = v111;
        sub_1D4396520(v111, v56);
        v61 = v114;
        sub_1D4396520(v114, v57);
        if ((v59 & 1) != 0)
        {
          v62 = (_QWORD *)sub_1D451A044();
          sub_1D451A044();
          v63 = sub_1D4438164(v62);
          swift_bridgeObjectRelease();
          v61 = v114;
          swift_bridgeObjectRelease();
        }
        else
        {
          v63 = 0;
        }
        v89 = v107;
        v88 = v108;
        v90 = *(void (**)(uint64_t, uint64_t))(v122 + 8);
        sub_1D4438148(v61);
        sub_1D4438148(v60);
        sub_1D4396520(v89, v56);
        sub_1D4396520(v88, v57);
        if ((v63 & 1) != 0)
        {
          sub_1D4437BE0(&qword_1EFE4B998, &qword_1EFE4C970);
          v91 = sub_1D451A068();
          v92 = sub_1D451A068();
          v82 = sub_1D42FE41C(v91, v92);
          sub_1D42CB208();
          sub_1D42BE8B4();
        }
        else
        {
          v82 = 0;
        }
        sub_1D4438148(v88);
        sub_1D4438148(v89);
        sub_1D4438148(v57);
        v98 = v56;
        v99 = v30;
LABEL_26:
        v90(v98, v99);
        return v82 & 1;
      }
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v56, v30);
      v69 = v2;
    }
    else
    {
      v70 = v123;
      v71 = *(void (**)(char *, char *, uint64_t))(v123 + 32);
      v72 = v118;
      v73 = (uint64_t)v119;
      v71(v119, v52, v118);
      sub_1D4437298(v124, (uint64_t)v46);
      if (sub_1D443816C() == 2)
      {
        v74 = (uint64_t)v120;
        v71(v120, v46, v72);
        v75 = (_QWORD *)sub_1D451A02C();
        sub_1D451A02C();
        v76 = sub_1D4438164(v75);
        sub_1D42CB0C4();
        sub_1D42B7204();
        v77 = v113;
        sub_1D443817C(v113, v73);
        v78 = v115;
        sub_1D443817C(v115, v74);
        if ((v76 & 1) != 0)
        {
          v79 = (_QWORD *)sub_1D451A044();
          v80 = (_QWORD *)sub_1D451A044();
          v81 = sub_1D42FE3B8(v79, v80);
          v78 = v115;
          swift_bridgeObjectRelease();
          sub_1D42CB208();
        }
        else
        {
          v81 = 0;
        }
        v94 = v109;
        v93 = v110;
        v90 = *(void (**)(uint64_t, uint64_t))(v123 + 8);
        sub_1D4438140(v78);
        sub_1D4438140(v77);
        sub_1D443817C(v94, v73);
        v95 = (uint64_t)v120;
        sub_1D443817C(v93, (uint64_t)v120);
        if ((v81 & 1) != 0)
        {
          sub_1D4437BE0(&qword_1EFE51BC0, &qword_1EFE51AF0);
          v96 = sub_1D451A068();
          v97 = sub_1D451A068();
          v82 = sub_1D42FE480(v96, v97);
          sub_1D42CB208();
          sub_1D42CB0C4();
        }
        else
        {
          v82 = 0;
        }
        sub_1D4438140(v93);
        sub_1D4438140(v94);
        sub_1D4438140(v95);
        v98 = v73;
        v99 = v72;
        goto LABEL_26;
      }
      (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v73, v72);
      v69 = (uint64_t)v46;
    }
    goto LABEL_13;
  }
  v64 = (uint64_t)v23;
  v65 = v121;
  v66 = *(void (**)(char *, char *, uint64_t))(v121 + 32);
  v67 = v52;
  v68 = v116;
  v66(v29, v67, v116);
  sub_1D4437298(v124, (uint64_t)v49);
  if (sub_1D443816C())
  {
    (*(void (**)(char *, uint64_t))(v65 + 8))(v29, v68);
    v69 = (uint64_t)v49;
LABEL_13:
    sub_1D44377B0(v69);
    v82 = 0;
    return v82 & 1;
  }
  v66(v27, v49, v68);
  v83 = (_QWORD *)sub_1D451A02C();
  sub_1D451A02C();
  v84 = sub_1D4438164(v83);
  sub_1D42BE8B4();
  sub_1D42B7204();
  v85 = v3;
  sub_1D4438174(v3, (uint64_t)v29);
  sub_1D4438174(v64, (uint64_t)v27);
  if ((v84 & 1) != 0)
  {
    v86 = (_QWORD *)sub_1D451A044();
    sub_1D451A044();
    v87 = sub_1D4438164(v86);
    sub_1D42CB0C4();
    v85 = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    v87 = 0;
  }
  sub_1D44380F8(v64);
  sub_1D44380F8(v85);
  v100 = v106;
  sub_1D4438174(v106, (uint64_t)v29);
  v101 = v105;
  sub_1D4438174(v105, (uint64_t)v27);
  if ((v87 & 1) != 0)
  {
    sub_1D4437BE0(&qword_1EFE51BC8, &qword_1EFE51AF8);
    v102 = sub_1D451A068();
    v103 = sub_1D451A068();
    v82 = sub_1D42FE1FC(v102, v103);
    sub_1D42CB0C4();
    sub_1D42BE8B4();
  }
  else
  {
    v82 = 0;
  }
  sub_1D44380F8(v101);
  sub_1D44380F8(v100);
  sub_1D44380F8((uint64_t)v27);
  sub_1D44380F8((uint64_t)v29);
  return v82 & 1;
}

uint64_t sub_1D4435458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;

  v5 = sub_1D42B28FC(&qword_1EFE51AF0);
  v16 = *(_QWORD *)(v5 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v6);
  sub_1D42CB210();
  v9 = v8 - v7;
  v10 = sub_1D42B28FC(&qword_1EFE51AF8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1D42D7108();
  sub_1D42B28FC(&qword_1EFE4C970);
  sub_1D44381A8();
  MEMORY[0x1E0C80A78](v12);
  sub_1D434799C();
  type metadata accessor for ShapedArray();
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v13);
  sub_1D438E8B8();
  sub_1D4437298(v17, v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v4, v1);
      sub_1D4437BE0(&qword_1EFE4B998, &qword_1EFE4C970);
      sub_1D451A068();
      sub_1D42D6264();
      sub_1D42B7204();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v9, v4, v5);
      sub_1D4437BE0(&qword_1EFE51BC0, &qword_1EFE51AF0);
      sub_1D451A068();
      sub_1D42D6A68();
      sub_1D42CB208();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v9, v5);
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v0, v4, v10);
    sub_1D4437BE0(&qword_1EFE51BC8, &qword_1EFE51AF8);
    sub_1D451A068();
    sub_1D42D6154();
    sub_1D42B7204();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v0, v10);
  }
}

uint64_t sub_1D4435678(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x343674616F6C66 && a2 == 0xE700000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x323374616F6C66 && a2 == 0xE700000000000000;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x3233746E69 && a2 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1D451B820();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1D44357C4(char a1)
{
  if (!a1)
    return 0x343674616F6C66;
  if (a1 == 1)
    return 0x323374616F6C66;
  return 0x3233746E69;
}

void sub_1D4435818(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v39 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE51B88) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D43B9F20(v6, v29);
  v7 = sub_1D42B28FC(&qword_1EFE51AF0);
  v37 = *(_QWORD *)(v7 - 8);
  v38 = v7;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v8);
  sub_1D42BE768();
  v36 = v9;
  v35 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE51B90) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v10);
  sub_1D42BE768();
  v11 = sub_1D42B28FC(&qword_1EFE4C970);
  v33 = *(_QWORD *)(v11 - 8);
  v34 = v11;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v12);
  sub_1D42BE768();
  v32 = v13;
  v31 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE51B98) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v14);
  sub_1D42CB210();
  v15 = sub_1D42B28FC(&qword_1EFE51AF8);
  v30 = *(_QWORD *)(v15 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v16);
  sub_1D42CB18C();
  sub_1D44380F0();
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v17);
  sub_1D43383FC();
  v18 = sub_1D42B28FC(&qword_1EFE51BA0);
  v41 = *(_QWORD *)(v18 - 8);
  v42 = v18;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v19);
  sub_1D42D7108();
  sub_1D42B5528(a1, a1[3]);
  sub_1D4437A5C();
  sub_1D451BA24();
  sub_1D4437298(v40, v1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v22 = v32;
      v21 = v33;
      v23 = sub_1D443819C();
      v24 = v34;
      v25(v23);
      sub_1D44381C8();
      sub_1D44380D8();
      sub_1D4437B90(&qword_1EFE51BB0, &qword_1EFE4C970, MEMORY[0x1E0DEB198], MEMORY[0x1E0C9E6D0]);
      sub_1D443812C();
      v26 = v35;
    }
    else
    {
      v22 = v36;
      v21 = v37;
      v27 = sub_1D443819C();
      v24 = v38;
      v28(v27);
      sub_1D44381BC();
      sub_1D44380D8();
      sub_1D4437B90(&qword_1EFE51BA8, &qword_1EFE51AF0, MEMORY[0x1E0DEDBD0], MEMORY[0x1E0C9E6D0]);
      sub_1D443812C();
      v26 = v39;
    }
    sub_1D42FC43C(*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v24);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v3, v2);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v2, v1, v15);
    sub_1D4437B54();
    sub_1D451B6F4();
    sub_1D4437B90(&qword_1EFE51BB8, &qword_1EFE51AF8, MEMORY[0x1E0DEB080], MEMORY[0x1E0C9E6D0]);
    sub_1D451B760();
    sub_1D44380C8(v31);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v2, v15);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v3, v42);
  }
  sub_1D42BE844();
}

void sub_1D4435BD8()
{
  sub_1D42BE9A8();
  sub_1D4435458();
  sub_1D42CB230();
  sub_1D42BE978();
}

void sub_1D4435C00(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  char v67;

  v60 = a2;
  v59 = sub_1D42B28FC(&qword_1EFE51B30);
  v56 = *(_QWORD *)(v59 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v6);
  sub_1D42BE768();
  v62 = v7;
  v58 = sub_1D42B28FC(&qword_1EFE51B38);
  v55 = *(_QWORD *)(v58 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v8);
  sub_1D43B9F20(v9, v47);
  v57 = sub_1D42B28FC(&qword_1EFE51B40);
  v54 = *(_QWORD *)(v57 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v10);
  sub_1D42BE768();
  v61 = v11;
  v12 = sub_1D42B28FC(&qword_1EFE51B48);
  v63 = *(_QWORD *)(v12 - 8);
  v64 = v12;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v13);
  sub_1D43383FC();
  v14 = sub_1D44380F0();
  sub_1D42BE838();
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  sub_1D435ED1C();
  MEMORY[0x1E0C80A78](v19);
  sub_1D435ED08();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v47 - v21;
  v23 = a1[3];
  v65 = a1;
  sub_1D42B5528(a1, v23);
  sub_1D4437A5C();
  v24 = v66;
  sub_1D451BA0C();
  if (v24)
    goto LABEL_2;
  v49 = v3;
  v50 = v4;
  v51 = v18;
  v52 = v22;
  v53 = v14;
  v26 = v64;
  v66 = v2;
  v27 = sub_1D451B6D0();
  v28 = *(_QWORD *)(v27 + 16);
  if (!v28)
  {
    v25 = (uint64_t)v65;
LABEL_10:
    v36 = v63;
    v37 = v53;
    v38 = sub_1D451B460();
    sub_1D42B6D0C();
    v40 = v39;
    sub_1D42B28FC(&qword_1EFE49ED0);
    *v40 = v37;
    v41 = v66;
    sub_1D451B61C();
    sub_1D451B454();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v40, *MEMORY[0x1E0DEC450], v38);
    swift_willThrow();
    sub_1D44191B0();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v41, v26);
    goto LABEL_11;
  }
  v48 = 0;
  v29 = v26;
  v30 = *(unsigned __int8 *)(v27 + 32);
  sub_1D43B7948(1, v28, v27, v27 + 32, 0, (2 * v28) | 1);
  v32 = v31;
  v34 = v33;
  swift_bridgeObjectRelease();
  if (v32 != v34 >> 1)
  {
    v25 = (uint64_t)v65;
    v26 = v29;
    goto LABEL_10;
  }
  if (v30)
  {
    if (v30 == 1)
    {
      sub_1D44381C8();
      sub_1D4438100();
      sub_1D42B28FC(&qword_1EFE4C970);
      sub_1D4437B90(&qword_1EFE51B70, &qword_1EFE4C970, MEMORY[0x1E0DEB1C0], MEMORY[0x1E0C9E6D8]);
      v35 = v49;
      sub_1D44381E8();
      v25 = (uint64_t)v65;
      sub_1D4438150();
      sub_1D44191B0();
      sub_1D4307058(v14, *(uint64_t (**)(uint64_t, uint64_t))(v63 + 8));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      sub_1D44381BC();
      sub_1D4438100();
      sub_1D42B28FC(&qword_1EFE51AF0);
      sub_1D4437B90(&qword_1EFE51B60, &qword_1EFE51AF0, MEMORY[0x1E0DEDBF8], MEMORY[0x1E0C9E6D8]);
      v44 = (uint64_t)v51;
      sub_1D44381E8();
      v25 = (uint64_t)v65;
      v45 = v63;
      sub_1D44380C8(v56);
      sub_1D44191B0();
      sub_1D4307058(v14, *(uint64_t (**)(uint64_t, uint64_t))(v45 + 8));
      swift_storeEnumTagMultiPayload();
      v35 = v44;
    }
    goto LABEL_16;
  }
  v67 = 0;
  sub_1D4437B54();
  v42 = v66;
  v43 = v48;
  sub_1D451B610();
  if (!v43)
  {
    sub_1D42B28FC(&qword_1EFE51AF8);
    sub_1D4437B90(&qword_1EFE51B80, &qword_1EFE51AF8, MEMORY[0x1E0DEB0A8], MEMORY[0x1E0C9E6D8]);
    v35 = v50;
    sub_1D44381E8();
    sub_1D4438118();
    sub_1D44191B0();
    sub_1D4307058(v42, *(uint64_t (**)(uint64_t, uint64_t))(v63 + 8));
    swift_storeEnumTagMultiPayload();
    v25 = (uint64_t)v65;
LABEL_16:
    v46 = (uint64_t)v52;
    sub_1D4437AD4(v35, (uint64_t)v52);
    sub_1D4437AD4(v46, v60);
    goto LABEL_11;
  }
  sub_1D44191B0();
  sub_1D4307058(v42, *(uint64_t (**)(uint64_t, uint64_t))(v63 + 8));
LABEL_2:
  v25 = (uint64_t)v65;
LABEL_11:
  sub_1D42B5400(v25);
  sub_1D42BE844();
}

uint64_t sub_1D44361BC()
{
  char *v0;

  return sub_1D44357C4(*v0);
}

uint64_t sub_1D44361C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D4435678(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D44361E8()
{
  sub_1D4437A5C();
  return sub_1D451BA3C();
}

uint64_t sub_1D4436210()
{
  sub_1D4437A5C();
  return sub_1D451BA48();
}

uint64_t sub_1D4436238()
{
  sub_1D4437B18();
  return sub_1D451BA3C();
}

uint64_t sub_1D4436260()
{
  sub_1D4437B18();
  return sub_1D451BA48();
}

uint64_t sub_1D4436288()
{
  sub_1D4437B54();
  return sub_1D451BA3C();
}

uint64_t sub_1D44362B0()
{
  sub_1D4437B54();
  return sub_1D451BA48();
}

uint64_t sub_1D44362D8()
{
  sub_1D4437A98();
  return sub_1D451BA3C();
}

uint64_t sub_1D4436300()
{
  sub_1D4437A98();
  return sub_1D451BA48();
}

void sub_1D4436328(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1D4435C00(a1, a2);
}

void sub_1D443633C(_QWORD *a1)
{
  sub_1D4435818(a1);
}

uint64_t sub_1D4436358()
{
  sub_1D451B958();
  sub_1D4435458();
  return sub_1D451B994();
}

uint64_t sub_1D4436394()
{
  return sub_1D451AF08();
}

id sub_1D44363B4(void *a1)
{
  id result;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  result = objc_msgSend(a1, sel_shape);
  if (result)
  {
    v3 = result;
    sub_1D443472C(result);
    result = objc_msgSend(a1, sel_strides);
    if (result)
    {
      v4 = result;
      sub_1D42E9D88(0, (unint64_t *)&qword_1EFE404B0);
      v5 = (void *)sub_1D451A908();
      sub_1D42CB0C4();
      v6 = objc_msgSend(v4, sel_isEqual_, v5);

      return v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1D4436478(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  void *v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;

  if (a2 < 0)
  {
    sub_1D42DCEE8();
    sub_1D4311F68();
    sub_1D430740C();
    sub_1D43F8880(v17, v18, (uint64_t)"Expected count to be non-negative");
    sub_1D42E3BB8();
LABEL_30:
    sub_1D430709C();
    return;
  }
  v3 = a2;
  v4 = a1;
  v5 = objc_msgSend(a1, sel_shape);
  v6 = sub_1D42EA3E0((uint64_t)v5, (unint64_t *)&qword_1EFE404B0);
  v7 = sub_1D451A92C();

  v33 = v7;
  v8 = objc_msgSend(v4, sel_strides);
  v9 = sub_1D451A92C();

  v32 = v9;
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1D42EA3D8();
    if (v10)
      goto LABEL_4;
LABEL_15:
    sub_1D42D3258();
    v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_16;
  }
  v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v10)
    goto LABEL_15;
LABEL_4:
  v31 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1D42C73B0();
  if (v10 < 0)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v28 = v6;
  v29 = v4;
  v30 = v2;
  v11 = 0;
  v12 = v31;
  do
  {
    if ((v9 & 0xC000000000000001) != 0)
      v13 = (id)MEMORY[0x1D825CD78](v11, v9);
    else
      v13 = *(id *)(v9 + 8 * v11 + 32);
    v14 = v13;
    v15 = objc_msgSend(v13, sel_integerValue);

    v31 = v12;
    v16 = v12[2];
    if (v16 >= v12[3] >> 1)
    {
      sub_1D42C73B0();
      v12 = v31;
    }
    ++v11;
    v12[2] = v16 + 1;
    v12[v16 + 4] = v15;
  }
  while (v10 != v11);
  sub_1D42D3258();
  v4 = v29;
  v6 = v28;
LABEL_16:
  sub_1D443679C(v12);
  v20 = v19;
  swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
  {
    if (!v3)
    {
LABEL_29:
      v21 = objc_retainAutorelease(v4);
      v22 = objc_msgSend(v21, sel_dataPointer);
      v23 = v33;
      v24 = objc_msgSend(v21, sel_dataType);
      v25 = v32;
      v26 = objc_allocWithZone(MEMORY[0x1E0C9E970]);
      sub_1D44372DC((uint64_t)v22, v23, (uint64_t)v24, v25, 0, 0);
      goto LABEL_30;
    }
  }
  else if (!v3)
  {
    goto LABEL_29;
  }
  if (v3 >= 1)
  {
    while (1)
    {
      sub_1D451B0F4();
      if (v33 >> 62)
      {
        sub_1D42EA280();
        sub_1D42EA3D8();
        sub_1D439E15C();
        if (v6 < 0)
          break;
      }
      sub_1D4438184();
      sub_1D451AC44();
      if (v32 >> 62)
      {
        sub_1D42EA280();
        sub_1D42EA3D8();
        sub_1D439E15C();
        if (&v27)
        {
          __break(1u);
          goto LABEL_29;
        }
      }
      sub_1D4438184();
      if (!--v3)
        goto LABEL_29;
    }
    __break(1u);
    goto LABEL_32;
  }
LABEL_33:
  __break(1u);
}

uint64_t sub_1D443679C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = a1[2];
  if (!v1)
    return 0;
  result = a1[4];
  v4 = v1 - 1;
  if (v1 != 1)
  {
    v5 = a1 + 5;
    do
    {
      v7 = *v5++;
      v6 = v7;
      if (result <= v7)
        result = v6;
      --v4;
    }
    while (v4);
  }
  return result;
}

void sub_1D44367E0(void *a1, uint64_t a2)
{
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  uint64_t v11;

  v4 = objc_msgSend(a1, sel_shape);
  sub_1D42EA3E0((uint64_t)v4, (unint64_t *)&qword_1EFE404B0);
  v5 = sub_1D451A92C();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1D42EA3D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v6 > a2)
  {
    sub_1D42DCEE8();
    sub_1D4311F68();
    sub_1D430740C();
    sub_1D43F8880(v7, v8, (uint64_t)"Expected new dimension count to be at least as large as original");
    sub_1D42E3BB8();
LABEL_9:
    sub_1D44380AC();
    return;
  }
  v9 = objc_msgSend(a1, sel_shape);
  v10 = sub_1D451A92C();

  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1D42EA3D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!__OFSUB__(a2, v11))
  {
    sub_1D4436478(a1, a2 - v11);
    goto LABEL_9;
  }
  __break(1u);
}

void sub_1D4436950(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v5 = 0;
    v6 = (uint64_t *)(a1 + 32);
    v7 = *(_QWORD *)(a1 + 16);
    do
    {
      v9 = *v6++;
      v8 = v9;
      if (v9 > v5)
        v5 = v8;
      --v7;
    }
    while (v7);
  }
  else
  {
    v5 = 0;
  }
  swift_bridgeObjectRetain();
  sub_1D44348E4(0, v4, a1, v5);
  v11 = v10;
  swift_bridgeObjectRetain();
  sub_1D443458C(v11, a2);
  v13 = v12;
  sub_1D42CB208();
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v15 = 0;
    v16 = (uint64_t *)(v13 + 32);
    do
    {
      v18 = *v16++;
      v17 = v18;
      if (v18 > v15)
        v15 = v17;
      --v14;
    }
    while (v14);
  }
  else
  {
    v15 = 0;
  }
  sub_1D42B7204();
  if ((unsigned __int128)(v5 * (__int128)v15) >> 64 == (v5 * v15) >> 63)
    sub_1D42CB758();
  else
    __break(1u);
}

void sub_1D4436A2C(uint64_t a1, uint64_t a2)
{
  if (a2)
    JUMPOUT(0x1D825E524);
}

id sub_1D4436A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v22;
  uint64_t v23;

  v8 = *(_QWORD *)(a2 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1D44381DC();
    v11 = a2 + 32;
    do
    {
      v11 += 8;
      v12 = sub_1D4438194();
      sub_1D44381F0(v12, sel_initWithInteger_);
      sub_1D44381F8();
      sub_1D451B4A8();
      sub_1D451B4B4();
      sub_1D451B490();
      --v8;
    }
    while (v8);
    v9 = v22;
  }
  v13 = *(_QWORD *)(a4 + 16);
  v14 = MEMORY[0x1E0DEE9D8];
  if (v13)
  {
    v23 = MEMORY[0x1E0DEE9D8];
    sub_1D44381DC();
    v15 = a4 + 32;
    do
    {
      v15 += 8;
      v16 = sub_1D4438194();
      sub_1D44381F0(v16, sel_initWithInteger_);
      sub_1D44381F8();
      sub_1D451B4A8();
      sub_1D451B4B4();
      sub_1D451B490();
      --v13;
    }
    while (v13);
    v14 = v23;
  }
  v17 = objc_allocWithZone(MEMORY[0x1E0C9E970]);
  swift_retain();
  return sub_1D44372DC(a1, v9, a3, v14, a5, a6);
}

uint64_t sub_1D4436BA4(void *a1)
{
  id v2;
  id v3;
  uint64_t v5;
  uint64_t v6;

  v2 = objc_msgSend(a1, sel_dataType);
  if (v2 == (id)65568 || v2 == (id)131104 || v2 == (id)65600)
  {
    v3 = a1;
    sub_1D44381D4();
    sub_1D44380F0();
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_1D42DCEE8();
    sub_1D4311F68();
    sub_1D430740C();
    sub_1D43EC59C(0xD000000000000017, v5, 1, 0, v6, 0x80000001D4558230);
    return sub_1D42E3BB8();
  }
}

void sub_1D4436CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void), void *a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  id v23;
  id v24;
  _QWORD *v25;
  uint64_t v28;
  uint64_t v29;

  v10 = a6();
  if (v10)
    v12 = v11 - v10;
  else
    v12 = 0;
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99DF0]), sel_initWithBytes_length_, a1, v12);
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = v13;
  v14 = objc_retainAutorelease(v13);
  v24 = objc_msgSend(v14, sel_mutableBytes);
  v15 = *(_QWORD *)(a3 + 16);
  v16 = MEMORY[0x1E0DEE9D8];
  if (v15)
  {
    v28 = MEMORY[0x1E0DEE9D8];
    sub_1D451B49C();
    v17 = a3 + 32;
    do
    {
      v17 += 8;
      v18 = sub_1D4438194();
      sub_1D44381F0(v18, sel_initWithInteger_);
      sub_1D451B484();
      sub_1D451B4A8();
      sub_1D443819C();
      sub_1D451B4B4();
      sub_1D451B490();
      --v15;
    }
    while (v15);
    v16 = v28;
  }
  v19 = *(_QWORD *)(a5 + 16);
  v20 = MEMORY[0x1E0DEE9D8];
  if (v19)
  {
    v29 = MEMORY[0x1E0DEE9D8];
    sub_1D451B49C();
    v21 = (uint64_t *)(a5 + 32);
    do
    {
      v22 = *v21++;
      objc_msgSend(sub_1D4438194(), sel_initWithInteger_, v22);
      sub_1D451B484();
      sub_1D451B4A8();
      sub_1D451B4B4();
      sub_1D451B490();
      --v19;
    }
    while (v19);
    v20 = v29;
  }
  v23 = objc_allocWithZone(MEMORY[0x1E0C9E970]);
  sub_1D44372DC((uint64_t)v24, v16, a4, v20, a7, v25);

  sub_1D430709C();
}

void sub_1D4436EB0(uint64_t a1, uint64_t a2)
{
  void **v3;
  void *v4;

  v3 = (void **)(a2 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(a2 + 16))
  {
    swift_beginAccess();
    v4 = *v3;
    *v3 = 0;

  }
}

void sub_1D4436F14(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  sub_1D42B28FC(a3);
  sub_1D44381A8();
  MEMORY[0x1E0C80A78](v7);
  sub_1D434799C();
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, a1, v3);
  sub_1D42EA3E0(v8, (unint64_t *)&unk_1EFE49790);
  sub_1D451A020();
  sub_1D42FC43C(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_1D44380AC();
}

void sub_1D4436FD0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D4436CD4(*a1, a1[1], a2, a4, a3, sub_1D44A533C, sub_1D44374FC);
}

void sub_1D4437004(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D4436CD4(*a1, a1[1], a2, a4, a3, (uint64_t (*)(void))sub_1D44A5368, sub_1D44374FC);
}

uint64_t sub_1D4437038(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = sub_1D42B28FC(&qword_1EFE51AF0);
  v23 = *(_QWORD *)(v4 - 8);
  v24 = v4;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42CB18C();
  v22 = sub_1D42B28FC(&qword_1EFE4C970);
  v6 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  sub_1D42CB210();
  v9 = v8 - v7;
  v10 = sub_1D42B28FC(&qword_1EFE51AF8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1D438E8B8();
  sub_1D44380F0();
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v12);
  sub_1D42CB210();
  v15 = v14 - v13;
  sub_1D4437298(a1, v14 - v13);
  sub_1D443819C();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v9, v15, v22);
      sub_1D4436F14(v9, 65568, &qword_1EFE4C970);
      v18 = v17;
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v22);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v1, v15, v24);
      sub_1D4436F14(v1, 131104, &qword_1EFE51AF0);
      v18 = v20;
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v1, v24);
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v2, v15, v10);
    sub_1D4436F14(v2, 65600, &qword_1EFE51AF8);
    v18 = v19;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v2, v10);
  }
  return v18;
}

uint64_t type metadata accessor for ShapedArray()
{
  uint64_t result;

  result = qword_1EFE51B00;
  if (!qword_1EFE51B00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D4437298(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShapedArray();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_1D44372DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  void *v6;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x1E0C80C00];
  sub_1D42EA3E0(a1, (unint64_t *)&qword_1EFE404B0);
  v11 = (void *)sub_1D451A908();
  sub_1D42D3258();
  sub_1D443819C();
  v12 = (void *)sub_1D451A908();
  swift_bridgeObjectRelease();
  if (a5)
  {
    aBlock[4] = a5;
    aBlock[5] = a6;
    aBlock[0] = (id)MEMORY[0x1E0C809B0];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_1D43FEF00;
    aBlock[3] = &unk_1E97B3688;
    v13 = _Block_copy(aBlock);
    swift_release();
  }
  else
  {
    v13 = 0;
  }
  aBlock[0] = 0;
  v14 = objc_msgSend(v6, sel_initWithDataPointer_shape_dataType_strides_deallocator_error_, a1, v11, a3, v12, v13, aBlock);
  _Block_release(v13);

  if (v14)
  {
    v15 = aBlock[0];
  }
  else
  {
    v16 = aBlock[0];
    sub_1D4519AA4();

    swift_willThrow();
  }
  return v14;
}

void sub_1D4437470(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;

  sub_1D4436FD0(a1, a2, a3, a4);
  if (!v5)
    *a5 = v7;
}

void sub_1D4437498(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;

  sub_1D4437004(a1, a2, a3, a4);
  if (!v5)
    *a5 = v7;
}

void sub_1D44374C0(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;

  sub_1D4437498(a1, a2, a3, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1D44374D8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1D4437500(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D4437510()
{
  return swift_release();
}

void sub_1D4437518(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;

  sub_1D4437470(a1, a2, a3, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1D4437530()
{
  return swift_deallocObject();
}

void sub_1D4437540(uint64_t a1)
{
  uint64_t v1;

  sub_1D4436A2C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t *sub_1D4437548(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v9 = sub_1D42B28FC(&qword_1EFE51AF0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
        v7 = sub_1D42B28FC(&qword_1EFE4C970);
      else
        v7 = sub_1D42B28FC(&qword_1EFE51AF8);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D443765C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if (result <= 2)
  {
    v3 = sub_1D42B28FC(off_1E97BEDD0[(int)result]);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

uint64_t sub_1D44376B0(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = sub_1D42B28FC(off_1E97BEDD0[EnumCaseMultiPayload]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1D4437728(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;

  if (a1 != a2)
  {
    sub_1D44377B0(a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = sub_1D42B28FC(off_1E97BEDD0[EnumCaseMultiPayload]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D44377B0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ShapedArray();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D44377EC(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = sub_1D42B28FC(off_1E97BEDD0[EnumCaseMultiPayload]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1D4437864(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;

  if (a1 != a2)
  {
    sub_1D44377B0(a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = sub_1D42B28FC(off_1E97BEDD0[EnumCaseMultiPayload]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1D44378EC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D44379D0(319, &qword_1EFE51B10);
  if (v0 <= 0x3F)
  {
    sub_1D44379D0(319, &qword_1EFE51B18);
    if (v1 <= 0x3F)
    {
      sub_1D44379D0(319, &qword_1EFE51B20);
      if (v2 <= 0x3F)
        swift_initEnumMetadataMultiPayload();
    }
  }
}

void sub_1D44379D0(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1D451A050();
    if (!v4)
      atomic_store(v3, a2);
  }
}

unint64_t sub_1D4437A1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFE51B28;
  if (!qword_1EFE51B28)
  {
    v1 = type metadata accessor for ShapedArray();
    result = MEMORY[0x1D825E41C](&unk_1D453E5F0, v1);
    atomic_store(result, (unint64_t *)&qword_1EFE51B28);
  }
  return result;
}

unint64_t sub_1D4437A5C()
{
  unint64_t result;

  result = qword_1EFE51B50;
  if (!qword_1EFE51B50)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453EAD4, &type metadata for ShapedArray.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51B50);
  }
  return result;
}

unint64_t sub_1D4437A98()
{
  unint64_t result;

  result = qword_1EFE51B58;
  if (!qword_1EFE51B58)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453EA84, &type metadata for ShapedArray.Int32CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51B58);
  }
  return result;
}

uint64_t sub_1D4437AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShapedArray();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D4437B18()
{
  unint64_t result;

  result = qword_1EFE51B68;
  if (!qword_1EFE51B68)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453EA34, &type metadata for ShapedArray.Float32CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51B68);
  }
  return result;
}

unint64_t sub_1D4437B54()
{
  unint64_t result;

  result = qword_1EFE51B78;
  if (!qword_1EFE51B78)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E9E4, &type metadata for ShapedArray.Float64CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51B78);
  }
  return result;
}

void sub_1D4437B90(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;

  if (!*a1)
  {
    v7 = sub_1D42B8B10(a2);
    v8 = a3;
    atomic_store(MEMORY[0x1D825E41C](a4, v7, &v8), a1);
  }
  sub_1D42CB758();
}

uint64_t sub_1D4437BE0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1D42B8B10(a2);
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0C9E6C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ShapedArray.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D4437C6C + 4 * byte_1D453E595[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D4437CA0 + 4 * byte_1D453E590[v4]))();
}

uint64_t sub_1D4437CA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4437CA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4437CB0);
  return result;
}

uint64_t sub_1D4437CBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4437CC4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D4437CC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4437CD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShapedArray.CodingKeys()
{
  return &type metadata for ShapedArray.CodingKeys;
}

ValueMetadata *type metadata accessor for ShapedArray.Float64CodingKeys()
{
  return &type metadata for ShapedArray.Float64CodingKeys;
}

ValueMetadata *type metadata accessor for ShapedArray.Float32CodingKeys()
{
  return &type metadata for ShapedArray.Float32CodingKeys;
}

uint64_t _s13SoundAnalysis11ShapedArrayO17Float64CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D4437D50 + 4 * byte_1D453E59A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D4437D70 + 4 * byte_1D453E59F[v4]))();
}

_BYTE *sub_1D4437D50(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D4437D70(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4437D78(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4437D80(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4437D88(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4437D90(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ShapedArray.Int32CodingKeys()
{
  return &type metadata for ShapedArray.Int32CodingKeys;
}

unint64_t sub_1D4437DB0()
{
  unint64_t result;

  result = qword_1EFE51BD0;
  if (!qword_1EFE51BD0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E794, &type metadata for ShapedArray.Int32CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51BD0);
  }
  return result;
}

unint64_t sub_1D4437DF0()
{
  unint64_t result;

  result = qword_1EFE51BD8;
  if (!qword_1EFE51BD8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E84C, &type metadata for ShapedArray.Float32CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51BD8);
  }
  return result;
}

unint64_t sub_1D4437E30()
{
  unint64_t result;

  result = qword_1EFE51BE0;
  if (!qword_1EFE51BE0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E904, &type metadata for ShapedArray.Float64CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51BE0);
  }
  return result;
}

unint64_t sub_1D4437E70()
{
  unint64_t result;

  result = qword_1EFE51BE8;
  if (!qword_1EFE51BE8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E9BC, &type metadata for ShapedArray.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51BE8);
  }
  return result;
}

unint64_t sub_1D4437EB0()
{
  unint64_t result;

  result = qword_1EFE51BF0;
  if (!qword_1EFE51BF0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E874, &type metadata for ShapedArray.Float64CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51BF0);
  }
  return result;
}

unint64_t sub_1D4437EF0()
{
  unint64_t result;

  result = qword_1EFE51BF8;
  if (!qword_1EFE51BF8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E89C, &type metadata for ShapedArray.Float64CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51BF8);
  }
  return result;
}

unint64_t sub_1D4437F30()
{
  unint64_t result;

  result = qword_1EFE51C00;
  if (!qword_1EFE51C00)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E7BC, &type metadata for ShapedArray.Float32CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51C00);
  }
  return result;
}

unint64_t sub_1D4437F70()
{
  unint64_t result;

  result = qword_1EFE51C08;
  if (!qword_1EFE51C08)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E7E4, &type metadata for ShapedArray.Float32CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51C08);
  }
  return result;
}

unint64_t sub_1D4437FB0()
{
  unint64_t result;

  result = qword_1EFE51C10;
  if (!qword_1EFE51C10)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E704, &type metadata for ShapedArray.Int32CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51C10);
  }
  return result;
}

unint64_t sub_1D4437FF0()
{
  unint64_t result;

  result = qword_1EFE51C18;
  if (!qword_1EFE51C18)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E72C, &type metadata for ShapedArray.Int32CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51C18);
  }
  return result;
}

unint64_t sub_1D4438030()
{
  unint64_t result;

  result = qword_1EFE51C20;
  if (!qword_1EFE51C20)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E92C, &type metadata for ShapedArray.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51C20);
  }
  return result;
}

unint64_t sub_1D4438070()
{
  unint64_t result;

  result = qword_1EFE51C28[0];
  if (!qword_1EFE51C28[0])
  {
    result = MEMORY[0x1D825E41C](&unk_1D453E954, &type metadata for ShapedArray.CodingKeys);
    atomic_store(result, qword_1EFE51C28);
  }
  return result;
}

void sub_1D44380C0(uint64_t a1)
{
  uint64_t v1;

  sub_1D4436EB0(a1, v1);
}

uint64_t sub_1D44380C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t sub_1D44380D8()
{
  return sub_1D451B6F4();
}

uint64_t sub_1D44380F0()
{
  return type metadata accessor for ShapedArray();
}

uint64_t sub_1D44380F8(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_1D4438100()
{
  return sub_1D451B610();
}

uint64_t sub_1D4438118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 200) + 8))(v1, v0);
}

uint64_t sub_1D443812C()
{
  return sub_1D451B760();
}

uint64_t sub_1D4438140(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_1D4438148(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_1D4438150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 192) + 8))(v1, v0);
}

uint64_t sub_1D4438164(_QWORD *a1)
{
  _QWORD *v1;

  return sub_1D42FE3B8(a1, v1);
}

uint64_t sub_1D443816C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1D4438174(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_1D443817C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_1D4438184()
{
  return sub_1D42E96E4();
}

id sub_1D4438194()
{
  uint64_t v0;

  return objc_allocWithZone(*(Class *)(v0 + 2024));
}

uint64_t sub_1D443819C()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_1D44381BC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_1D4437A98();
}

unint64_t sub_1D44381C8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return sub_1D4437B18();
}

uint64_t sub_1D44381D4()
{
  return sub_1D451A05C();
}

uint64_t sub_1D44381DC()
{
  return sub_1D451B49C();
}

uint64_t sub_1D44381E8()
{
  return sub_1D451B688();
}

id sub_1D44381F0(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

uint64_t sub_1D44381F8()
{
  return sub_1D451B484();
}

uint64_t AudioDataAnalysisProvider.withAudioDataAnalysis<A, B>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t))(a6 + 24))(a1, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
}

uint64_t sub_1D4438238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return AudioDataAnalysisProvider.withAudioDataAnalysis<A, B>(_:_:)(a1, a2, a6, a3, a5, a5);
}

uint64_t dispatch thunk of static DependencyADAMAudioDataAnalysisType.environmentalDosage.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DependencyADAMAudioDataReceiver.init(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of DependencyADAMAudioDataReceiver.startReceivingAudioSampleType(_:withCallback:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of DependencyADAMAudioDataReceiver.stopReceivingAudioSampleType(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of GenericThrowingClosureAudioDataAnalysisReceiver.run<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of AudioDataAnalysisProviderProtocol.withAudioDataAnalysis<A, B>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t type metadata accessor for AudioDataAnalysisProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AudioDataAnalysisProvider);
}

uint64_t sub_1D44382B4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  _BYTE *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 24);
  if (v2 >> 60 == 15)
  {
    sub_1D42B7F2C();
    swift_allocError();
    *v3 = 0;
    return swift_willThrow();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 16);
    sub_1D42DD16C(v5, *(_QWORD *)(v0 + 24));
    sub_1D43A90FC();
    v7 = v6;
    result = sub_1D42B8CDC(v5, v2);
    if (!v1)
    {
      type metadata accessor for XPCDataDecoder.UnkeyedContainer();
      result = swift_allocObject();
      *(_QWORD *)(result + 16) = v7;
      *(_QWORD *)(result + 24) = 0;
    }
  }
  return result;
}

uint64_t sub_1D443836C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 24);
  if ((v1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 16);
    if (v1 < *(_QWORD *)(v2 + 16))
    {
      v3 = v1 + 1;
      v4 = v2 + 16 * v1;
      v6 = *(_QWORD *)(v4 + 32);
      v5 = *(_QWORD *)(v4 + 40);
      *(_QWORD *)(v0 + 24) = v3;
      sub_1D42E2EE8(v6, v5);
      return v6;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1D44383D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t result;
  _BYTE v16[32];

  v9 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = *(_QWORD *)(v4 + 16);
  v12 = *(_QWORD *)(v4 + 24);
  type metadata accessor for XPCDataDecoder();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v13;
  *(_QWORD *)(inited + 24) = v12;
  result = (*(uint64_t (**)(void))(a3 + 16))();
  if (!v5)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v9 + 32))(a4, v11, a2);
  return result;
}

uint64_t sub_1D44384A0()
{
  uint64_t v0;

  sub_1D42B8CDC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for XPCDataDecoder()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for XPCDataDecoder.KeyedContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for XPCDataDecoder.KeyedContainer);
}

uint64_t type metadata accessor for XPCDataDecoder.UnkeyedContainer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for XPCDataDecoder.SingleValueContainer()
{
  return objc_opt_self();
}

void sub_1D4438530()
{
  uint64_t v0;
  void *v1;
  id v2;

  sub_1D443CDB8();
  v1 = *(void **)(v0 + 48);
  sub_1D42BE9A8();
  sub_1D43CB0FC();
  sub_1D42CB47C();
  sub_1D443CE7C();
  sub_1D42CB904();
  sub_1D443CE70();
  sub_1D42D83EC();
  sub_1D42D71A0();
  sub_1D443CE88();
  v2 = v1;
  objc_msgSend(v2, sel_hash);
  sub_1D4338458();

  sub_1D443CE64();
  sub_1D42CB230();
  sub_1D42CB414();
}

BOOL sub_1D44385BC(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;
  int32x4_t v4;
  int32x4_t v5;

  result = 0;
  v4.i64[0] = *(_QWORD *)(a1 + 8);
  v4.i64[1] = *(_QWORD *)(a1 + 32);
  v5.i64[0] = *(_QWORD *)(a2 + 8);
  v5.i64[1] = *(_QWORD *)(a2 + 32);
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_s32(v4, v5)), 0xFuLL))) & 1) != 0
    && *(_QWORD *)a1 == *(_QWORD *)a2
    && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16)
    && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
    && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40))
  {
    return *(double *)(a1 + 48) == *(double *)(a2 + 48);
  }
  return result;
}

void sub_1D4438650()
{
  sub_1D443CDF8();
  sub_1D451B988();
  sub_1D42D8408();
  sub_1D42CB47C();
  sub_1D42D83F4();
  sub_1D42CB904();
  sub_1D42CB8EC();
  sub_1D42D83EC();
  sub_1D42CB8E4();
  sub_1D443CD64();
  sub_1D42CB520();
}

uint64_t sub_1D44386A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 0x7544776F646E6977 && a2 == 0xEE006E6F69746172;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7544656469727473 && a2 == 0xEE006E6F69746172;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x80000001D4558440)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = sub_1D451B820();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1D4438834(char a1)
{
  if (!a1)
    return 0x7544776F646E6977;
  if (a1 == 1)
    return 0x7544656469727473;
  return 0xD000000000000012;
}

void sub_1D4438898(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_1D42B28FC((uint64_t *)&unk_1EFE51DD0);
  sub_1D42CB1BC();
  MEMORY[0x1E0C80A78](v3);
  sub_1D443CD84();
  sub_1D42B5528(a1, a1[3]);
  sub_1D443C2AC();
  sub_1D42CB10C();
  sub_1D42CA054();
  sub_1D443CDA0();
  sub_1D451B760();
  if (!v4)
  {
    sub_1D443CDA0();
    sub_1D451B760();
    sub_1D451B73C();
  }
  sub_1D42BE98C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1D43D669C();
}

void sub_1D44389D0()
{
  sub_1D443CDB8();
  sub_1D443CDF8();
  sub_1D42BE9A8();
  sub_1D443CE34();
  sub_1D42D8408();
  sub_1D42CB47C();
  sub_1D42D83F4();
  sub_1D42CB904();
  sub_1D42CB8EC();
  sub_1D42D83EC();
  sub_1D42CB8E4();
  sub_1D451B988();
  sub_1D42CB230();
  sub_1D42CB414();
}

void sub_1D4438A4C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1D42B28FC(&qword_1EFE51DB8);
  sub_1D42CB4F8();
  MEMORY[0x1E0C80A78](v3);
  sub_1D42F8628();
  sub_1D443C2AC();
  sub_1D42F8648();
  if (!v1)
  {
    sub_1D42C9FC0();
    sub_1D443CD08();
    sub_1D443CD08();
    sub_1D451B664();
    v5 = v4;
    sub_1D42CB3CC();
    *a1 = v6;
    a1[1] = v7;
    a1[2] = v8;
    a1[3] = v6;
    a1[4] = v7;
    a1[5] = v8;
    a1[6] = v5;
  }
  sub_1D42BE944();
  sub_1D443CD28();
}

uint64_t sub_1D4438BA8()
{
  sub_1D443CC1C();
  sub_1D451B988();
  sub_1D42D8408();
  sub_1D42CB47C();
  sub_1D42D83F4();
  sub_1D42CB904();
  sub_1D42CB8EC();
  sub_1D42D83EC();
  sub_1D42CB8E4();
  sub_1D443CD64();
  return AudioConfiguration.hash(into:)();
}

uint64_t sub_1D4438C80(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;

  v2 = a1[5];
  v3 = a1[6];
  v37 = a1[8];
  v38 = a1[7];
  v35 = a1[10];
  v36 = a1[9];
  v33 = a1[12];
  v34 = a1[11];
  v31 = *((_BYTE *)a1 + 105);
  v32 = *((_BYTE *)a1 + 104);
  v29 = *((_BYTE *)a1 + 107);
  v30 = *((_BYTE *)a1 + 106);
  v27 = *((_BYTE *)a1 + 109);
  v28 = *((_BYTE *)a1 + 108);
  v26 = a1[14];
  v25 = *((_BYTE *)a1 + 120);
  v4 = *a2;
  v5 = a2[5];
  v6 = a2[6];
  v23 = a2[8];
  v24 = a2[7];
  v7 = a2[11];
  v21 = a2[10];
  v22 = a2[9];
  v8 = a2[12];
  v9 = *((_BYTE *)a2 + 104);
  v10 = *((_BYTE *)a2 + 105);
  v47 = *a1;
  v11 = *((_BYTE *)a2 + 106);
  v48 = a1[1];
  v49 = *((_OWORD *)a1 + 1);
  v12 = a1[4];
  v13 = *((_BYTE *)a2 + 107);
  v51 = v2;
  v14 = *((_BYTE *)a2 + 108);
  v39 = v4;
  v15 = *((_BYTE *)a2 + 109);
  v43 = v5;
  v16 = a2[14];
  v50 = v12;
  v52 = v3;
  v40 = a2[1];
  v17 = a2[4];
  v18 = *((_BYTE *)a2 + 120);
  v41 = *((_OWORD *)a2 + 1);
  v42 = v17;
  v44 = v6;
  if (sub_1D44385BC((uint64_t)&v47, (uint64_t)&v39))
  {
    v47 = v38;
    v48 = v37;
    *(_QWORD *)&v49 = v36;
    *((_QWORD *)&v49 + 1) = v35;
    v50 = v34;
    v51 = v33;
    LOBYTE(v52) = v32;
    BYTE1(v52) = v31;
    BYTE2(v52) = v30;
    BYTE3(v52) = v29;
    BYTE4(v52) = v28;
    BYTE5(v52) = v27;
    v53 = v26;
    v54 = v25;
    v39 = v24;
    v40 = v23;
    *(_QWORD *)&v41 = v22;
    *((_QWORD *)&v41 + 1) = v21;
    v42 = v7;
    v43 = v8;
    LOBYTE(v44) = v9;
    BYTE1(v44) = v10;
    BYTE2(v44) = v11;
    BYTE3(v44) = v13;
    BYTE4(v44) = v14;
    BYTE5(v44) = v15;
    v45 = v16;
    v46 = v18;
    v19 = static AudioConfiguration.== infix(_:_:)((uint64_t)&v47, (uint64_t)&v39);
  }
  else
  {
    v19 = 0;
  }
  return v19 & 1;
}

uint64_t sub_1D4438E7C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_1D42B28FC(&qword_1EFE51E78);
  v5 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1D443CD84();
  sub_1D42B5528(a1, a1[3]);
  sub_1D443CA54();
  sub_1D42CB10C();
  sub_1D42B59D0();
  sub_1D443CE44();
  sub_1D451B760();
  if (!v4)
  {
    sub_1D42B5ACC();
    sub_1D443CE44();
    sub_1D451B760();
  }
  return sub_1D42BE98C(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
}

uint64_t sub_1D4439098()
{
  sub_1D443CC1C();
  sub_1D451B958();
  sub_1D443CE34();
  sub_1D42D8408();
  sub_1D42CB47C();
  sub_1D42D83F4();
  sub_1D42CB904();
  sub_1D42CB8EC();
  sub_1D42D83EC();
  sub_1D42CB8E4();
  sub_1D443CD64();
  AudioConfiguration.hash(into:)();
  return sub_1D451B994();
}

void sub_1D4439184(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  sub_1D42B28FC(&qword_1EFE51E88);
  sub_1D42CB4F8();
  MEMORY[0x1E0C80A78](v3);
  sub_1D42F8628();
  sub_1D443CA54();
  sub_1D42F8648();
  if (!v1)
  {
    sub_1D42B5A18();
    sub_1D443CD48();
    sub_1D42B5B80();
    sub_1D443CD48();
    sub_1D42F8674();
    *(_OWORD *)a1 = v4;
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v6;
    *(_OWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 48) = v8;
    *(_OWORD *)(a1 + 56) = v4;
    *(_QWORD *)(a1 + 72) = v5;
    *(_QWORD *)(a1 + 80) = v6;
    *(_OWORD *)(a1 + 88) = v7;
    *(_WORD *)(a1 + 104) = v8;
    *(_BYTE *)(a1 + 106) = BYTE2(v8);
    *(_BYTE *)(a1 + 107) = BYTE3(v8);
    *(_BYTE *)(a1 + 108) = BYTE4(v8);
    *(_BYTE *)(a1 + 109) = BYTE5(v8);
    *(_QWORD *)(a1 + 112) = v9;
    *(_BYTE *)(a1 + 120) = v10;
  }
  sub_1D42BE944();
  sub_1D443CD28();
}

void sub_1D4439318()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 48);
  sub_1D451B988();
  sub_1D42D8408();
  sub_1D42CB47C();
  sub_1D42D83F4();
  sub_1D42CB904();
  sub_1D42CB8EC();
  sub_1D42D83EC();
  sub_1D42CB8E4();
  v2 = v1;
  objc_msgSend(v2, sel_hash);
  sub_1D451B964();

  sub_1D443CE34();
  sub_1D42CB520();
}

uint64_t sub_1D443939C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[2];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *a1;
  v3 = a1[5];
  v4 = (void *)a1[6];
  v5 = a1[7];
  v6 = *a2;
  v7 = a2[6];
  v8 = a2[7];
  v13 = a2[5];
  v14[0] = v2;
  v14[1] = a1[1];
  v15 = *((_OWORD *)a1 + 1);
  v16 = a1[4];
  v17 = v3;
  v10[0] = v6;
  v10[1] = a2[1];
  v11 = *((_OWORD *)a2 + 1);
  v12 = a2[4];
  if (!static TimeRange.== infix(_:_:)((uint64_t)v14, (uint64_t)v10))
    return 0;
  LODWORD(result) = objc_msgSend(v4, sel_isEqual_, v7);
  if (v5 == v8)
    return result;
  else
    return 0;
}

uint64_t sub_1D443944C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x676E6152656D6974 && a2 == 0xE900000000000065;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x727574616E676973 && a2 == 0xE900000000000065;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x65636E6575716573 && a2 == 0xEB000000006D754ELL)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1D451B820();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1D44395C8(char a1)
{
  if (!a1)
    return 0x676E6152656D6974;
  if (a1 == 1)
    return 0x727574616E676973;
  return 0x65636E6575716573;
}

uint64_t sub_1D4439628(_QWORD *a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_1D42B28FC((uint64_t *)&unk_1EFE51E08);
  v6 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1D42CB18C();
  sub_1D42B5528(a1, a1[3]);
  sub_1D443C2E8();
  sub_1D451BA24();
  sub_1D42CA408();
  sub_1D443CE44();
  sub_1D451B760();
  if (v7)
  {
    v3 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  }
  else
  {
    sub_1D42CB9F8();
    sub_1D443CE3C((unint64_t *)&unk_1EFE51E18, v4, (uint64_t)&unk_1D45471DC);
    sub_1D451B760();
    sub_1D443CE44();
    sub_1D451B79C();
    v3 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  }
  return sub_1D42BE98C(v3);
}

void sub_1D44397E0(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1D42B28FC(&qword_1EFE51DE0);
  sub_1D42CB4F8();
  MEMORY[0x1E0C80A78](v3);
  sub_1D42F8628();
  sub_1D443C2E8();
  sub_1D42F8648();
  if (v1)
  {
    sub_1D42BE944();
  }
  else
  {
    sub_1D42CA3CC();
    sub_1D443CDE0();
    sub_1D42CB9F8();
    sub_1D443CE3C(&qword_1EFE51E00, v4, (uint64_t)&unk_1D4547204);
    sub_1D443CDE0();
    v5 = v7;
    v6 = sub_1D451B6C4();
    sub_1D42F8674();
    *a1 = v7;
    a1[1] = v8;
    a1[2] = v9;
    a1[3] = v10;
    a1[4] = v11;
    a1[5] = v12;
    a1[6] = v5;
    a1[7] = v6;
    sub_1D42BE944();

  }
  sub_1D43D669C();
}

uint64_t sub_1D443999C()
{
  char *v0;

  return sub_1D4438834(*v0);
}

uint64_t sub_1D44399A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D44386A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D44399C8()
{
  sub_1D443C2AC();
  return sub_1D451BA3C();
}

uint64_t sub_1D44399F0()
{
  sub_1D443C2AC();
  return sub_1D451BA48();
}

uint64_t sub_1D4439A20()
{
  sub_1D451B958();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  return sub_1D451B994();
}

void sub_1D4439AF4(_QWORD *a1@<X8>)
{
  sub_1D4438A4C(a1);
}

void sub_1D4439B08(_QWORD *a1)
{
  sub_1D4438898(a1);
}

uint64_t sub_1D4439B20()
{
  sub_1D443CA54();
  return sub_1D451BA3C();
}

uint64_t sub_1D4439B48()
{
  sub_1D443CA54();
  return sub_1D451BA48();
}

uint64_t sub_1D4439B78()
{
  sub_1D451B958();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  AudioConfiguration.hash(into:)();
  return sub_1D451B994();
}

void sub_1D4439CE0(uint64_t a1@<X8>)
{
  sub_1D4439184(a1);
}

uint64_t sub_1D4439CF4(_QWORD *a1)
{
  return sub_1D4438E7C(a1);
}

uint64_t sub_1D4439D0C()
{
  char *v0;

  return sub_1D44395C8(*v0);
}

uint64_t sub_1D4439D14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D443944C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D4439D38()
{
  sub_1D443C2E8();
  return sub_1D451BA3C();
}

uint64_t sub_1D4439D60()
{
  sub_1D443C2E8();
  return sub_1D451BA48();
}

void sub_1D4439D90()
{
  uint64_t v0;
  void *v1;
  id v2;

  sub_1D443CDB8();
  v1 = *(void **)(v0 + 48);
  sub_1D451B958();
  sub_1D43CB0FC();
  sub_1D42CB47C();
  sub_1D443CE7C();
  sub_1D42CB904();
  sub_1D443CE70();
  sub_1D42D83EC();
  sub_1D42D71A0();
  sub_1D443CE88();
  v2 = v1;
  objc_msgSend(v2, sel_hash);
  sub_1D4338458();

  sub_1D443CE64();
  sub_1D42CB230();
  sub_1D42CB414();
}

void sub_1D4439E20(_QWORD *a1@<X8>)
{
  sub_1D44397E0(a1);
}

uint64_t sub_1D4439E34(_QWORD *a1)
{
  return sub_1D4439628(a1);
}

uint64_t sub_1D4439E4C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1D4439E98;
  return sub_1D43768A8();
}

uint64_t sub_1D4439E98()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v6)(void);

  sub_1D42F1E44();
  v2[4] = v0;
  v2[5] = v1;
  swift_task_dealloc();
  if (v1)
    return sub_1D42F1DEC();
  v6 = (uint64_t (*)(void))((char *)&dword_1EFE4E2B0 + dword_1EFE4E2B0);
  v5 = (_QWORD *)swift_task_alloc();
  v2[6] = v5;
  *v5 = v3;
  v5[1] = sub_1D42EC5A0;
  return sub_1D42E3A2C(v6);
}

uint64_t sub_1D4439F18(uint64_t a1, uint64_t a2)
{
  _QWORD v4[5];

  sub_1D447DAC4();
  v4[3] = sub_1D42B28FC(&qword_1EFE4FD48);
  v4[4] = sub_1D443C9F0();
  v4[0] = a2;
  swift_retain();
  sub_1D447DAE0(v4);
  swift_release();
  return sub_1D42B5400((uint64_t)v4);
}

uint64_t sub_1D4439F9C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1D42EC778;
  v2 = sub_1D443CDEC();
  return sub_1D4439E4C(v2);
}

uint64_t sub_1D4439FEC(uint64_t a1)
{
  uint64_t *v1;

  return sub_1D4439F18(a1, *v1);
}

uint64_t sub_1D443A004(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1D42EC834;
  sub_1D443CDEC();
  return sub_1D4439F9C();
}

id sub_1D443A050@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id result;
  _QWORD v12[8];

  v4 = *a1;
  v5 = a1[2];
  v6 = a1[3];
  v7 = a1[5];
  v8 = (void *)a1[6];
  v9 = a1[7];
  type metadata accessor for SNShazamSignatureResult();
  v12[0] = v4;
  v12[1] = a1[1];
  v12[2] = v5;
  v12[3] = v6;
  v12[4] = a1[4];
  v12[5] = v7;
  v12[6] = v8;
  v12[7] = v9;
  v10 = v8;
  result = sub_1D43B4168((uint64_t)v12);
  *a2 = result;
  return result;
}

void sub_1D443A0E4(const void *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[16];
  _BYTE *v15;
  _BYTE __dst[65];
  _BYTE v17[56];
  _BYTE v18[65];

  sub_1D42B28FC(&qword_1EFE51D48);
  sub_1D42CB1BC();
  MEMORY[0x1E0C80A78](v6);
  sub_1D42CB18C();
  sub_1D435EB30(v17, a1);
  v7 = a2[3];
  v8 = a2[4];
  v9 = sub_1D42B5528(a2, v7);
  memcpy(__dst, v18, sizeof(__dst));
  v10 = sub_1D443CE94();
  v15 = v17;
  sub_1D443CE18();
  sub_1D43CC6C0((uint64_t)v9, (__int128 *)__dst, v10, sub_1D443C0B8, (uint64_t)v14, v7, v10, v8);
  v12 = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v2)
  {
    *(_QWORD *)__dst = v12;
    sub_1D42CB9F8();
    sub_1D443CE3C(&qword_1EFE51D58, v13, MEMORY[0x1E0C95D90]);
    sub_1D451A308();
    swift_release();
    sub_1D42F1168((unint64_t *)&unk_1EFE51D60, &qword_1EFE51D48, MEMORY[0x1E0C95950]);
    sub_1D451A2E4();
    sub_1D42BE98C(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  }
  sub_1D42BE844();
}

void sub_1D443A284(const void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26[2];
  _BYTE v27[136];

  v4 = sub_1D42B28FC(&qword_1EFE568A0);
  sub_1D42BA18C(*(_QWORD *)(v4 - 8));
  MEMORY[0x1E0C80A78](v5);
  sub_1D42CB210();
  v8 = v7 - v6;
  v22 = sub_1D42B28FC(&qword_1EFE51D70);
  sub_1D42BA18C(*(_QWORD *)(v22 - 8));
  MEMORY[0x1E0C80A78](v9);
  sub_1D42CB210();
  v12 = v11 - v10;
  v23 = sub_1D42B28FC((uint64_t *)&unk_1EFE51D78);
  sub_1D42BA18C(*(_QWORD *)(v23 - 8));
  MEMORY[0x1E0C80A78](v13);
  sub_1D42CB210();
  v16 = v15 - v14;
  sub_1D435EB30(v27, a1);
  v17 = sub_1D42B6F40();
  sub_1D435EB30((void *)(v17 + 16), a1);
  sub_1D42E2D8C(a2, (uint64_t)v26);
  v18 = sub_1D42B6F40();
  sub_1D42E33E0(v26, v18 + 16);
  sub_1D435EB30((void *)(v18 + 56), v27);
  v19 = (_QWORD *)sub_1D42B6F40();
  v19[2] = sub_1D443C14C;
  v19[3] = v17;
  v19[4] = sub_1D443C1A0;
  v19[5] = v18;
  v20 = sub_1D42B6F40();
  *(_QWORD *)(v20 + 16) = sub_1D42F0F18;
  *(_QWORD *)(v20 + 24) = v19;
  sub_1D443CE18();
  sub_1D443CE18();
  swift_retain();
  swift_retain();
  sub_1D42B28FC((uint64_t *)&unk_1EFE4A6A0);
  sub_1D42F1168(qword_1EFE568C0, (uint64_t *)&unk_1EFE4A6A0, (uint64_t)&unk_1D4532BA0);
  sub_1D451A2C0();
  sub_1D443CE94();
  sub_1D42F1168(&qword_1EFE4A6B0, &qword_1EFE568A0, MEMORY[0x1E0C96148]);
  sub_1D451A3A4();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v8, v4);
  swift_release();
  swift_release();
  sub_1D42F1168(&qword_1EFE51D88, &qword_1EFE51D70, MEMORY[0x1E0C95B48]);
  sub_1D451A308();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v12, v22);
  sub_1D42F1168(&qword_1EFE51D90, (uint64_t *)&unk_1EFE51D78, MEMORY[0x1E0C95950]);
  sub_1D451A2E4();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v16, v23);
  sub_1D42BE844();
}

uint64_t sub_1D443A598()
{
  id v0;
  uint64_t v1;
  char *v2;

  type metadata accessor for SNGenerateShazamSignatureRequest();
  v0 = sub_1D443A630();
  type metadata accessor for SNShazamSignatureGenerator();
  v1 = swift_allocObject();
  v2 = (char *)v0;
  sub_1D443B1B0(v2);

  return v1;
}

id sub_1D443A630()
{
  uint64_t v0;
  objc_class *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_super v13;

  v2 = (char *)sub_1D42B7238();
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = &v2[OBJC_IVAR___SNGenerateShazamSignatureRequest_impl];
  *(_QWORD *)v5 = *(_QWORD *)v0;
  *((_QWORD *)v5 + 1) = *(_QWORD *)(v0 + 8);
  *((_OWORD *)v5 + 1) = *(_OWORD *)(v0 + 16);
  *((_QWORD *)v5 + 4) = *(_QWORD *)(v0 + 32);
  *((_QWORD *)v5 + 5) = v3;
  *((_QWORD *)v5 + 6) = v4;
  v13.receiver = v2;
  v13.super_class = v1;
  return sub_1D42CB364((uint64_t)v2, sel_init, v6, v7, v8, v9, v10, v11, v13);
}

uint64_t sub_1D443A6A0()
{
  void *v0;
  uint64_t v1;

  type metadata accessor for SNShazamSignatureGenerator();
  v1 = sub_1D42B6F40();
  sub_1D443B1B0((char *)v0);
  return v1;
}

id sub_1D443A6F4()
{
  type metadata accessor for SNGenerateShazamSignatureRequest();
  return sub_1D443A630();
}

uint64_t sub_1D443A74C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE __dst[72];

  v6 = a1[3];
  v7 = a1[4];
  sub_1D42B5528(a1, v6);
  memcpy(__dst, (const void *)(a2 + 56), 0x41uLL);
  result = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v7 + 8))(__dst, v6, v7);
  if (!v3)
    *a3 = result;
  return result;
}

id sub_1D443A7CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1 + OBJC_IVAR___SNShazamSignatureResult_impl;
  v4 = *(_QWORD *)(v2 + 40);
  v3 = *(void **)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 56);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(v2 + 8);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(v2 + 16);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(a2 + 40) = v4;
  *(_QWORD *)(a2 + 48) = v3;
  *(_QWORD *)(a2 + 56) = v5;
  return v3;
}

uint64_t sub_1D443A820()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl);
}

uint64_t sub_1D443A860(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(v3 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl);
  *v4 = result;
  v4[1] = a2;
  v4[2] = a3;
  return result;
}

uint64_t sub_1D443A88C@<X0>(uint64_t (*a1)(void)@<X2>, uint64_t a2@<X8>)
{
  uint64_t result;
  int v4;
  int v5;
  uint64_t v6;

  result = a1();
  *(_QWORD *)a2 = result;
  *(_DWORD *)(a2 + 8) = v4;
  *(_DWORD *)(a2 + 12) = v5;
  *(_QWORD *)(a2 + 16) = v6;
  return result;
}

uint64_t sub_1D443A8C0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 24);
}

uint64_t sub_1D443A900(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(v3 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl);
  v4[3] = result;
  v4[4] = a2;
  v4[5] = a3;
  return result;
}

double sub_1D443A940()
{
  return sub_1D443CE0C(OBJC_IVAR___SNGenerateShazamSignatureRequest_impl);
}

void sub_1D443A96C(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 48) = a1;
}

id sub_1D443A980()
{
  void *v0;
  objc_class *v1;
  char *v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  objc_super v22;

  v1 = (objc_class *)sub_1D42B7104();
  v2 = v0;
  v3 = sub_1D443CEBC();
  v5 = v4;
  v7 = v6;
  v8 = HIDWORD(v4);
  v9 = sub_1D443CEBC();
  v10 = &v2[OBJC_IVAR___SNGenerateShazamSignatureRequest_impl];
  *(_QWORD *)v10 = v3;
  *((_DWORD *)v10 + 2) = v5;
  *((_DWORD *)v10 + 3) = v8;
  *((_QWORD *)v10 + 2) = v7;
  *((_QWORD *)v10 + 3) = v9;
  *((_DWORD *)v10 + 8) = v11;
  *((_DWORD *)v10 + 9) = v12;
  *((_QWORD *)v10 + 5) = v13;
  *((_QWORD *)v10 + 6) = 0x4014000000000000;

  v22.receiver = v2;
  v22.super_class = v1;
  return sub_1D42CB364(v14, sel_init, v15, v16, v17, v18, v19, v20, v22);
}

id sub_1D443AA34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  char *v7;
  objc_class *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  objc_super v24;

  v15 = (objc_class *)sub_1D42B7104();
  v16 = &v7[OBJC_IVAR___SNGenerateShazamSignatureRequest_impl];
  *(_QWORD *)v16 = a1;
  *((_QWORD *)v16 + 1) = a2;
  *((_QWORD *)v16 + 2) = a3;
  *((_QWORD *)v16 + 3) = a4;
  *((_QWORD *)v16 + 4) = a5;
  *((_QWORD *)v16 + 5) = a6;
  *((double *)v16 + 6) = a7;
  v24.receiver = v7;
  v24.super_class = v15;
  return sub_1D42CB364((uint64_t)v15, sel_init, v17, v18, v19, v20, v21, v22, v24);
}

id SNGenerateShazamSignatureRequest.copy(with:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  id result;

  v2 = sub_1D42B7104();
  sub_1D443CC7C(OBJC_IVAR___SNGenerateShazamSignatureRequest_impl);
  result = sub_1D443CE58();
  a1[3] = v2;
  *a1 = result;
  return result;
}

void SNGenerateShazamSignatureRequest.hash.getter()
{
  sub_1D443CC7C(OBJC_IVAR___SNGenerateShazamSignatureRequest_impl);
  sub_1D44389D0();
}

BOOL SNGenerateShazamSignatureRequest.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  _QWORD v11[2];
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[2];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[2];
  __int128 v22;
  uint64_t v23;

  sub_1D42B7104();
  sub_1D42B28B4(a1, (uint64_t)&v22);
  if (v23)
  {
    sub_1D42B293C(&v22, v21);
    sub_1D42B294C((uint64_t)v21, (uint64_t)v16);
    if (swift_dynamicCast())
    {
      v3 = (void *)v11[0];
      v4 = *(_QWORD *)(v1 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 40);
      v5 = *(_QWORD *)(v1 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 48);
      v16[0] = *(_QWORD *)(v1 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl);
      v16[1] = *(_QWORD *)(v1 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 8);
      v17 = *(_OWORD *)(v1 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 16);
      v18 = *(_QWORD *)(v1 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 32);
      v19 = v4;
      v20 = v5;
      v6 = v11[0] + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl;
      v7 = *(_QWORD *)(v11[0] + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 40);
      v8 = *(_QWORD *)(v11[0] + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 48);
      v11[0] = *(_QWORD *)(v11[0] + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl);
      v11[1] = *(_QWORD *)(v6 + 8);
      v12 = *(_OWORD *)(v6 + 16);
      v13 = *(_QWORD *)(v6 + 32);
      v14 = v7;
      v15 = v8;
      v9 = sub_1D44385BC((uint64_t)v16, (uint64_t)v11);

    }
    else
    {
      v9 = 0;
    }
    sub_1D42B5400((uint64_t)v21);
  }
  else
  {
    return 0;
  }
  return v9;
}

void SNGenerateShazamSignatureRequest.__allocating_init(coder:)()
{
  void *v0;

  sub_1D42B7238();
  SNGenerateShazamSignatureRequest.init(coder:)(v0);
  sub_1D42B6E24();
}

id SNGenerateShazamSignatureRequest.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  id v4;

  v3 = v1;
  sub_1D42B1F74();
  swift_getObjectType();

  v4 = sub_1D443CE58();
  sub_1D443CDD4();
  return v4;
}

Swift::Void __swiftcall SNGenerateShazamSignatureRequest.encode(with:)(NSCoder with)
{
  uint64_t v1;
  __int128 v2;
  _OWORD v3[3];
  uint64_t v4;

  v2 = *(_OWORD *)(v1 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 16);
  v3[0] = *(_OWORD *)(v1 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl);
  v3[1] = v2;
  v3[2] = *(_OWORD *)(v1 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 32);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 48);
  sub_1D42B04A4(v3, 1819307369, 0xE400000000000000, with.super.isa);
}

uint64_t static SNGenerateShazamSignatureRequest.supportsSecureCoding.getter()
{
  return 1;
}

void sub_1D443B010(uint64_t a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  __int16 v7;
  uint64_t v8[7];
  _BYTE v9[40];
  uint64_t v10;

  v2 = MGGetProductType();
  sub_1D4380880(v2, v8);
  sub_1D430BBB0((uint64_t)v8, (uint64_t)v9, &qword_1EFE506B0);
  LOWORD(v3) = v10;
  v4 = 0;
  v5 = 0;
  if (v10)
  {
    v6 = v9[0];
    sub_1D42F11A4(v8);
    if (v6 > 3)
    {
      LOWORD(v3) = 0;
      v7 = 0;
      v4 = 0;
    }
    else
    {
      v3 = 0x9000700000000uLL >> (16 * v6);
      v5 = dword_1D453ED20[v6];
      HIDWORD(v4) = 1056964608;
      LODWORD(v4) = dword_1D453ED10[v6];
      v7 = 4;
    }
  }
  else
  {
    v7 = 0;
  }
  *(_WORD *)a1 = v7;
  *(_DWORD *)(a1 + 4) = v5;
  *(_WORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 12) = v4;
}

id SNGenerateShazamSignatureRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1D42B7104();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_UNKNOWN **sub_1D443B15C()
{
  uint64_t v0;
  _UNKNOWN **result;

  result = (_UNKNOWN **)sub_1D443A6A0();
  if (v0)
    return &off_1E97A9F08;
  return result;
}

uint64_t type metadata accessor for SNGenerateShazamSignatureRequest()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNGenerateShazamSignatureRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1D443B1B0(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  CMTime *v7;
  CMTime *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  CMTime *v15;
  CMTime *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  *(_QWORD *)(v1 + 16) = 0;
  sub_1D443CE20();
  sub_1D443CD70(v3, v4, v5, v6, v7, v8, v9, v10, v21, v23, v25, v27, v29, v32, v34, v36);
  if ((v30 & 0x8000000000000000) != 0
    || HIDWORD(v30)
    || (*(_DWORD *)(v1 + 24) = v30,
        sub_1D443CE20(),
        sub_1D443CD70(v11, v12, v13, v14, v15, v16, v17, v18, v22, v24, v26, v28, v30, v33, v35, v37),
        (v31 & 0x8000000000000000) != 0)
    || HIDWORD(v31))
  {
    result = sub_1D451B550();
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v1 + 28) = v31;
    v19 = *(_QWORD *)&a1[OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 48];

    *(_QWORD *)(v1 + 40) = v19;
    *(_QWORD *)(v1 + 32) = 0;
    return v1;
  }
  return result;
}

id sub_1D443B2E4(int a1, int a2, int a3, double a4)
{
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 *v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  int v47;
  void *v48;
  id v49[7];

  v49[6] = *(id *)MEMORY[0x1E0C80C00];
  v8 = objc_opt_self();
  v49[0] = 0;
  v9 = sub_1D45001AC(v8, (uint64_t)v49);
  if (!v9)
  {
    v40 = v49[0];
    sub_1D4519AA4();

    sub_1D42B6F54();
    return v9;
  }
  v10 = v49[0];
  v11 = (void *)sub_1D451A6C8();
  v12 = sub_1D443CEA8();
  v15 = sub_1D44FD014(v12, v13, v11, v14);

  if (!v15)
  {
    v41 = v49[0];
    sub_1D4519AA4();

    sub_1D42B6F54();
LABEL_14:

    return v9;
  }
  v16 = v49[0];
  v17 = (void *)sub_1D451A6C8();
  v18 = sub_1D443CEA8();
  v21 = sub_1D44FEE98(v18, v19, v17, v20);

  if (!v21)
  {
    v42 = v49[0];
    sub_1D443CE50();

    sub_1D42B6F54();
    goto LABEL_14;
  }
  v47 = a1;
  v22 = v49[0];
  v23 = (void *)sub_1D443CCE4();
  v49[0] = 0;
  v24 = sub_1D44FFC5C(a4, v8, v9, v23, 0, a3, (uint64_t)v49);

  if (!v24)
  {
    v43 = v49[0];
    sub_1D443CE50();

    sub_1D42B6F54();
    goto LABEL_14;
  }
  v25 = v49[0];
  sub_1D450053C(0x3E80u, 1, a3, (uint64_t)v49);
  v26 = sub_1D443CCB4();
  if (!sub_1D42F1E90(v26, v27, v15, v21, v28, v29, v30, v31))
  {
    v44 = v48;
    sub_1D443CE50();

    sub_1D42B6F54();
    goto LABEL_14;
  }
  v32 = v48;
  sub_1D4500620(0x3E80u, a2, v47, a3, (uint64_t)v49);
  v33 = sub_1D443CCB4();
  if ((sub_1D42F1E90(v33, v34, v21, v24, v35, v36, v37, v38) & 1) == 0)
  {
    v45 = v48;
    sub_1D4519AA4();

    sub_1D42B6F54();
    goto LABEL_14;
  }
  v39 = v48;
  sub_1D44F3DE8((uint64_t)v9);
  sub_1D44F44A0((uint64_t)v9);

  return v9;
}

void *sub_1D443B5F0(void *a1, uint64_t a2, void (*a3)(void))
{
  CMTimeValue *v3;
  uint64_t v4;
  void *value;
  void (*v6)(void);
  id v7;
  CMTimeValue *v8;
  CMTimeValue v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void (*v16)(void);
  id v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  CMTimeEpoch epoch;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  uint64_t v34;
  void *v35;
  id v36;
  char *v38;
  uint64_t v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  CMTimeValue v44;
  CMTimeValue v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(void);
  uint64_t v51;
  char *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  CMTimeRange v84;
  CMTime duration;
  CMTime start;
  uint64_t v87;
  uint64_t v88;

  v8 = v3;
  v88 = *MEMORY[0x1E0C80C00];
  v9 = v3[4];
  v10 = v9 + 1;
  if (v9 == -1)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v8[4] = v10;
  v13 = objc_opt_self();
  if (sub_1D44FFF58(v13, a1, v10))
  {
    sub_1D451B208();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(&duration, 0, 32);
  }
  sub_1D430BBB0((uint64_t)&duration, (uint64_t)&start, &qword_1EFE47160);
  if (!v87)
  {
    sub_1D42B5464((uint64_t)&start);
    return (void *)MEMORY[0x1E0DEE9D8];
  }
  sub_1D42B293C(&start, &v84);
  sub_1D43B4B50();
  swift_dynamicCast();
  v14 = v8[4];
  v15 = objc_allocWithZone((Class)sub_1D443CE94());
  v7 = v53;
  value = sub_1D43B3F80(v7, v14);
  v84.start.value = 0;
  v16 = (void (*)(void))sub_1D44FCD4C(v13, a1, (uint64_t)&v84);
  if (!v16)
  {
    v36 = (id)v84.start.value;
    sub_1D443CDEC();
    sub_1D4519AA4();

    swift_willThrow();
    v35 = v7;
    goto LABEL_14;
  }
  v6 = v16;
  v17 = (id)v84.start.value;
  sub_1D451B928();
  v18 = sub_1D44F2078((uint64_t)a1);
  if (v18 < 0)
    goto LABEL_21;
  v48 = (uint64_t)v6;
  v6 = a3;
  sub_1D443CE9C(v18, v18, v19, v20, v21, v22, v23, v24, v46, v48, (uint64_t)value, (uint64_t)v53, v55, v58, v61, v64, v66, v69, v72,
    v74,
    v76,
    v78,
    v80,
    v82,
    (CMTime *)v84.start.value);
  value = (void *)v84.start.value;
  v25 = *(_QWORD *)&v84.start.timescale;
  epoch = v84.start.epoch;
  v27 = sub_1D44F2078((uint64_t)a1);
  if ((v27 & 0x80000000) == 0)
  {
    sub_1D443CE9C(v27, v27, v28, v29, v30, v31, v32, v33, v47, v49, v51, v54, v56, v59, v62, v65, v67, v70, v73,
      v75,
      v77,
      v79,
      v81,
      v83,
      (CMTime *)v84.start.value);
    start.value = (CMTimeValue)value;
    *(_QWORD *)&start.timescale = v25;
    start.epoch = epoch;
    *(_OWORD *)&duration.value = *(_OWORD *)&v84.start.value;
    duration.epoch = v84.start.epoch;
    CMTimeRangeMake(&v84, &start, &duration);
    v6();
    if (!v4)
    {
      v34 = sub_1D451AEE4();
      ((void (*)(uint64_t))v6)(v34);
      sub_1D451AEF0();
      v6 = v50;
      value = v52;
      v38 = &v52[OBJC_IVAR___SNShazamSignatureResult_impl];
      *(_QWORD *)v38 = v57;
      *((_QWORD *)v38 + 1) = v60;
      *((_OWORD *)v38 + 1) = v63;
      *((_QWORD *)v38 + 4) = v68;
      *((_QWORD *)v38 + 5) = v71;
      if (qword_1EFE40338 == -1)
        goto LABEL_17;
      goto LABEL_23;
    }

    v35 = v50;
    value = v52;
LABEL_14:

    return v35;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  swift_once();
LABEL_17:
  v39 = sub_1D451A014();
  sub_1D42CC880(v39, (uint64_t)qword_1EFEA7700);
  v40 = v7;
  swift_retain();
  v41 = sub_1D4519FFC();
  v42 = sub_1D451AF74();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = swift_slowAlloc();
    *(_DWORD *)v43 = 134218240;
    objc_msgSend(v40, sel_duration);
    v84.start.value = v44;
    sub_1D451B1A8();

    *(_WORD *)(v43 + 12) = 2048;
    v84.start.value = v8[4];
    sub_1D451B1A8();
    swift_release();
    _os_log_impl(&dword_1D42A7000, v41, v42, "Shazam Signature Duration: %f,    SequenceNum: %llu", (uint8_t *)v43, 0x16u);
    sub_1D42CC934();
  }

  swift_release();
  sub_1D42B28FC(&qword_1EFE40410);
  v45 = sub_1D42B6F40();
  *(_OWORD *)(v45 + 16) = xmmword_1D4525300;
  *(_QWORD *)(v45 + 32) = value;
  v84.start.value = v45;
  sub_1D451A950();
  v35 = (void *)v84.start.value;

  return v35;
}

id sub_1D443BAAC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  if (v1)
    return v1;
  sub_1D443C230();
  swift_allocError();
  return (id)swift_willThrow();
}

void sub_1D443BB04(int a1, double a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  v4 = v2;
  v7 = *v2;
  if (qword_1EFE40338 != -1)
    swift_once();
  v8 = sub_1D451A014();
  sub_1D42CC880(v8, (uint64_t)qword_1EFEA7700);
  v9 = sub_1D4519FFC();
  v10 = sub_1D451AF74();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v11 = 67109120;
    sub_1D451B1A8();
    _os_log_impl(&dword_1D42A7000, v9, v10, "Creating Shazam DSPGraph with %u channels.", v11, 8u);
    sub_1D42CC934();
  }

  v12 = sub_1D42B6F40();
  *(_QWORD *)(v12 + 16) = v4;
  *(double *)(v12 + 24) = a2;
  *(_DWORD *)(v12 + 32) = a1;
  *(_QWORD *)(v12 + 40) = v7;
  swift_retain();
  v13 = sub_1D42CEEA4();
  swift_release();
  if (!v3)
  {
    v14 = (void *)v4[2];
    v4[2] = v13;

  }
}

id sub_1D443BC80@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  id result;

  result = sub_1D443B2E4(*(_DWORD *)(a1 + 24), *(_DWORD *)(a1 + 28), a2, *(double *)(a1 + 40));
  if (!v3)
    *a3 = result;
  return result;
}

id sub_1D443BCB8()
{
  uint64_t v0;
  void *v1;
  id result;
  void *v3;
  void *v4;
  id v5;

  result = sub_1D443BAAC();
  if (!v0)
  {
    v3 = result;
    sub_1D443CCE4();
    v4 = (void *)sub_1D443CDEC();
    v5 = sub_1D44F590C(v4, v1);

    return v5;
  }
  return result;
}

uint64_t sub_1D443BD14()
{
  uint64_t v0;

  sub_1D42B8E30();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SNShazamSignatureGenerator()
{
  return objc_opt_self();
}

__n128 initializeWithTake for DetectorHeadConfiguration(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1D443BD6C(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1D443BD8C(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 56) = v3;
  return result;
}

void type metadata accessor for ShazamSignatureGeneration.AudioSourceAgnosticRequest()
{
  sub_1D42CB35C();
}

void type metadata accessor for ShazamSignatureGeneration()
{
  sub_1D42CB35C();
}

void sub_1D443BDDC(uint64_t a1)
{

}

uint64_t sub_1D443BDE4(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;
  uint64_t v5;
  id v6;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v4 = *(void **)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = v5;
  v6 = v4;
  return a1;
}

uint64_t sub_1D443BE20(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = *(void **)(a2 + 48);
  v5 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t sub_1D443BEA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;

  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t sub_1D443BF04(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D443BF44(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ShazamSignatureGeneration.Result()
{
  sub_1D42CB35C();
}

unint64_t sub_1D443BFA0(uint64_t a1)
{
  unint64_t result;

  result = sub_1D42B5DBC();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1D443BFC4(uint64_t a1)
{
  unint64_t result;

  result = sub_1D42B5D3C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1D443BFEC()
{
  unint64_t result;

  result = qword_1EFE51D38;
  if (!qword_1EFE51D38)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453EEB4, &unk_1E97A98C0);
    atomic_store(result, (unint64_t *)&qword_1EFE51D38);
  }
  return result;
}

unint64_t sub_1D443C02C()
{
  unint64_t result;

  result = qword_1EFE51D40;
  if (!qword_1EFE51D40)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453EFA4, &unk_1E97A96F8);
    atomic_store(result, (unint64_t *)&qword_1EFE51D40);
  }
  return result;
}

void *sub_1D443C068(void *a1, uint64_t a2, void (*a3)(void))
{
  return sub_1D443B5F0(a1, a2, a3);
}

id sub_1D443C07C()
{
  return sub_1D443BCB8();
}

void sub_1D443C090(int a1, double a2)
{
  sub_1D443BB04(a1, a2);
}

id sub_1D443C0A4()
{
  return sub_1D443BAAC();
}

uint64_t sub_1D443C0B8()
{
  return sub_1D443A598();
}

uint64_t sub_1D443C0D0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D443C118()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1D443C14C()
{
  return sub_1D443A6F4();
}

uint64_t sub_1D443C164()
{
  uint64_t v0;

  sub_1D42B5400(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D443C1A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1D443A74C((_QWORD *)(v1 + 16), v1 + 56, a1);
}

uint64_t sub_1D443C1BC()
{
  swift_release();
  swift_release();
  sub_1D42B8E30();
  return swift_deallocObject();
}

uint64_t sub_1D443C1E0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D443C204@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1D43EF8D8(*a1);
  if (!v2)
    *a2 = result;
  return result;
}

unint64_t sub_1D443C230()
{
  unint64_t result;

  result = qword_1EFE51DB0;
  if (!qword_1EFE51DB0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453F3E8, &unk_1E97A9E88);
    atomic_store(result, (unint64_t *)&qword_1EFE51DB0);
  }
  return result;
}

uint64_t sub_1D443C26C()
{
  swift_release();
  sub_1D42B8E30();
  return swift_deallocObject();
}

id sub_1D443C288@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1D443BC80(*(_QWORD *)(v1 + 16), *(_DWORD *)(v1 + 32), a1);
}

unint64_t sub_1D443C2AC()
{
  unint64_t result;

  result = qword_1EFE51DC0;
  if (!qword_1EFE51DC0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453F398, &type metadata for ShazamSignatureGeneration.AudioSourceAgnosticRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51DC0);
  }
  return result;
}

unint64_t sub_1D443C2E8()
{
  unint64_t result;

  result = qword_1EFE51DE8;
  if (!qword_1EFE51DE8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453F348, &type metadata for ShazamSignatureGeneration.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51DE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShazamSignatureGeneration.Result.CodingKeys()
{
  return &type metadata for ShazamSignatureGeneration.Result.CodingKeys;
}

uint64_t _s13SoundAnalysis25ShazamSignatureGenerationV6ResultV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D443C384 + 4 * byte_1D453ED35[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D443C3B8 + 4 * byte_1D453ED30[v4]))();
}

uint64_t sub_1D443C3B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D443C3C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D443C3C8);
  return result;
}

uint64_t sub_1D443C3D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D443C3DCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D443C3E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D443C3E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShazamSignatureGeneration.AudioSourceAgnosticRequest.CodingKeys()
{
  return &type metadata for ShazamSignatureGeneration.AudioSourceAgnosticRequest.CodingKeys;
}

uint64_t sub_1D443C404(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D443C444 + 4 * byte_1D453ED3A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D443C464 + 4 * byte_1D453ED3F[v4]))();
}

_BYTE *sub_1D443C444(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D443C464(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D443C46C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D443C474(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D443C47C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D443C484(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for SNShazamSignatureGenerator.DomainError()
{
  sub_1D42CB35C();
}

void type metadata accessor for ShazamSignatureGeneration.Session()
{
  sub_1D42CB35C();
}

uint64_t sub_1D443C4A8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D443C4D8(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_WORD *)(a1 + 108) = *(_WORD *)(a2 + 108);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D443C564(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  *(_BYTE *)(a1 + 106) = *(_BYTE *)(a2 + 106);
  *(_BYTE *)(a1 + 107) = *(_BYTE *)(a2 + 107);
  *(_BYTE *)(a1 + 108) = *(_BYTE *)(a2 + 108);
  *(_BYTE *)(a1 + 109) = *(_BYTE *)(a2 + 109);
  v4 = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v4;
  return a1;
}

void *sub_1D443C678(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x79uLL);
}

uint64_t sub_1D443C680(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  *(_BYTE *)(a1 + 106) = *(_BYTE *)(a2 + 106);
  *(_BYTE *)(a1 + 107) = *(_BYTE *)(a2 + 107);
  *(_BYTE *)(a1 + 108) = *(_BYTE *)(a2 + 108);
  *(_BYTE *)(a1 + 109) = *(_BYTE *)(a2 + 109);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  return a1;
}

uint64_t sub_1D443C744(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 121))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 64);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D443C784(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 120) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 121) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 64) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 121) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ShazamSignatureGeneration.Request()
{
  sub_1D42CB35C();
}

unint64_t sub_1D443C7F4()
{
  unint64_t result;

  result = qword_1EFE51E28;
  if (!qword_1EFE51E28)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453F0A8, &unk_1E97A99D8);
    atomic_store(result, (unint64_t *)&qword_1EFE51E28);
  }
  return result;
}

unint64_t sub_1D443C834()
{
  unint64_t result;

  result = qword_1EFE51E30;
  if (!qword_1EFE51E30)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453F160, &unk_1E97A9E88);
    atomic_store(result, (unint64_t *)&qword_1EFE51E30);
  }
  return result;
}

unint64_t sub_1D443C874()
{
  unint64_t result;

  result = qword_1EFE51E38;
  if (!qword_1EFE51E38)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453F218, &type metadata for ShazamSignatureGeneration.AudioSourceAgnosticRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51E38);
  }
  return result;
}

unint64_t sub_1D443C8B4()
{
  unint64_t result;

  result = qword_1EFE51E40;
  if (!qword_1EFE51E40)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453F2D0, &type metadata for ShazamSignatureGeneration.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51E40);
  }
  return result;
}

unint64_t sub_1D443C8F4()
{
  unint64_t result;

  result = qword_1EFE51E48;
  if (!qword_1EFE51E48)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453F240, &type metadata for ShazamSignatureGeneration.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51E48);
  }
  return result;
}

unint64_t sub_1D443C934()
{
  unint64_t result;

  result = qword_1EFE51E50;
  if (!qword_1EFE51E50)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453F268, &type metadata for ShazamSignatureGeneration.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51E50);
  }
  return result;
}

unint64_t sub_1D443C974()
{
  unint64_t result;

  result = qword_1EFE51E58;
  if (!qword_1EFE51E58)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453F188, &type metadata for ShazamSignatureGeneration.AudioSourceAgnosticRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51E58);
  }
  return result;
}

unint64_t sub_1D443C9B4()
{
  unint64_t result;

  result = qword_1EFE51E60;
  if (!qword_1EFE51E60)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453F1B0, &type metadata for ShazamSignatureGeneration.AudioSourceAgnosticRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51E60);
  }
  return result;
}

unint64_t sub_1D443C9F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFE51E70;
  if (!qword_1EFE51E70)
  {
    v1 = sub_1D42B8B10(&qword_1EFE4FD48);
    v2[0] = &off_1E97A9800;
    v2[1] = &off_1E97A9810;
    result = MEMORY[0x1D825E41C](&unk_1D45293A0, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFE51E70);
  }
  return result;
}

unint64_t sub_1D443CA54()
{
  unint64_t result;

  result = qword_1EFE51E80;
  if (!qword_1EFE51E80)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453F4F0, &type metadata for ShazamSignatureGeneration.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51E80);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ShazamSignatureGeneration.Request.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D443CADC + 4 * byte_1D453ED49[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D443CB10 + 4 * byte_1D453ED44[v4]))();
}

uint64_t sub_1D443CB10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D443CB18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D443CB20);
  return result;
}

uint64_t sub_1D443CB2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D443CB34);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D443CB38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D443CB40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShazamSignatureGeneration.Request.CodingKeys()
{
  return &type metadata for ShazamSignatureGeneration.Request.CodingKeys;
}

unint64_t sub_1D443CB60()
{
  unint64_t result;

  result = qword_1EFE51EA0;
  if (!qword_1EFE51EA0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453F4C8, &type metadata for ShazamSignatureGeneration.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51EA0);
  }
  return result;
}

unint64_t sub_1D443CBA0()
{
  unint64_t result;

  result = qword_1EFE51EA8;
  if (!qword_1EFE51EA8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453F438, &type metadata for ShazamSignatureGeneration.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51EA8);
  }
  return result;
}

unint64_t sub_1D443CBE0()
{
  unint64_t result;

  result = qword_1EFE51EB0;
  if (!qword_1EFE51EB0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453F460, &type metadata for ShazamSignatureGeneration.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51EB0);
  }
  return result;
}

__n128 sub_1D443CC1C()
{
  uint64_t v0;

  return *(__n128 *)(v0 + 72);
}

double sub_1D443CC7C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(double *)(v1 + a1 + 48);
}

uint64_t sub_1D443CCB4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D443CCE4()
{
  return sub_1D451A6C8();
}

uint64_t sub_1D443CD08()
{
  return sub_1D451B688();
}

uint64_t sub_1D443CD48()
{
  return sub_1D451B688();
}

uint64_t sub_1D443CD64()
{
  return sub_1D451B988();
}

CMTime *sub_1D443CD70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, CMTime *a5, CMTime *time, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t timea)
{
  return CMTimeConvertScale((CMTime *)&a13, (CMTime *)&timea, 16000, kCMTimeRoundingMethod_RoundTowardZero);
}

uint64_t sub_1D443CDA0()
{
  uint64_t v0;

  return v0 - 120;
}

uint64_t sub_1D443CDD4()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1D443CDE0()
{
  return sub_1D451B688();
}

uint64_t sub_1D443CDEC()
{
  uint64_t v0;

  return v0;
}

double sub_1D443CE0C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(double *)(v1 + a1 + 48);
}

uint64_t sub_1D443CE18()
{
  uint64_t v0;

  return sub_1D443C0D0(v0 - 216);
}

uint64_t sub_1D443CE34()
{
  return sub_1D451B988();
}

void sub_1D443CE3C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  sub_1D42F1168(a1, v3, a3);
}

uint64_t sub_1D443CE50()
{
  return sub_1D4519AA4();
}

id sub_1D443CE58()
{
  return sub_1D443A630();
}

uint64_t sub_1D443CE64()
{
  return sub_1D451B988();
}

uint64_t sub_1D443CE70()
{
  return sub_1D451B988();
}

uint64_t sub_1D443CE7C()
{
  return sub_1D451B97C();
}

uint64_t sub_1D443CE88()
{
  return sub_1D451B988();
}

uint64_t sub_1D443CE94()
{
  return type metadata accessor for SNShazamSignatureResult();
}

CMTime *sub_1D443CE9C(int a1, int32_t a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,CMTime *a25)
{
  int64_t v25;

  return CMTimeMake((CMTime *)&a25, v25, a2);
}

uint64_t sub_1D443CEA8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D443CEBC()
{
  return sub_1D451B0A0();
}

uint64_t sub_1D443CEC8(uint64_t a1, int *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v2[2] = a1;
  sub_1D42B8B10(&qword_1EFE49BB0);
  v4 = sub_1D451B9E8();
  v2[3] = v4;
  v2[4] = *(_QWORD *)(v4 - 8);
  v5 = swift_task_alloc();
  v2[5] = v5;
  v8 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v6 = (_QWORD *)swift_task_alloc();
  v2[6] = v6;
  *v6 = v2;
  v6[1] = sub_1D443CF84;
  return v8(v5);
}

uint64_t sub_1D443CF84()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D443CFE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D443D04C()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 56);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D443D090(uint64_t result)
{
  if (*(_DWORD *)result > 0x2BF200u
    || *(_QWORD *)(*(_QWORD *)(result + 8) + 16) != 512
    || *(_QWORD *)(*(_QWORD *)(result + 16) + 16) != 10240
    || *(_QWORD *)(*(_QWORD *)(result + 24) + 16) != 10
    || *(_QWORD *)(*(_QWORD *)(result + 32) + 16) != 200
    || *(_QWORD *)(*(_QWORD *)(result + 40) + 16) != 4
    || *(_QWORD *)(*(_QWORD *)(result + 48) + 16) != 160
    || *(_QWORD *)(*(_QWORD *)(result + 56) + 16) != 8
    || *(_QWORD *)(*(_QWORD *)(result + 64) + 16) != 320
    || *(_QWORD *)(*(_QWORD *)(result + 72) + 16) != 8
    || *(_QWORD *)(*(_QWORD *)(result + 80) + 16) != 320
    || *(_QWORD *)(*(_QWORD *)(result + 88) + 16) != 8
    || *(_QWORD *)(*(_QWORD *)(result + 96) + 16) != 256
    || *(_QWORD *)(*(_QWORD *)(result + 104) + 16) != 32
    || *(_QWORD *)(*(_QWORD *)(result + 112) + 16) != 64
    || *(_QWORD *)(*(_QWORD *)(result + 120) + 16) != 2)
  {
    sub_1D43BB038();
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for XValidation.DomainError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D443D220 + 4 * asc_1D453F558[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D443D240 + 4 * byte_1D453F55D[v4]))();
}

_BYTE *sub_1D443D220(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D443D240(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D443D248(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D443D250(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D443D258(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D443D260(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for XValidation.DomainError()
{
  return &type metadata for XValidation.DomainError;
}

unint64_t sub_1D443D280()
{
  unint64_t result;

  result = qword_1EFE51EC8;
  if (!qword_1EFE51EC8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453F5BC, &type metadata for XValidation.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE51EC8);
  }
  return result;
}

uint64_t sub_1D443D2BC(uint64_t a1, uint64_t a2)
{
  return sub_1D443D380(*(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), (void (*)(char *__return_ptr, _QWORD *, uint64_t *))sub_1D443DEE4) & 1;
}

_QWORD *sub_1D443D300(_QWORD *result, char a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, char *, _QWORD *))
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v7;
  char v8;
  uint64_t v9;

  if ((a3 & 0x8000000000000000) == 0)
  {
    v5 = a3;
    if (!a3)
      return (_QWORD *)(a2 & 1);
    v7 = result;
    while (v5)
    {
      v8 = a2 & 1;
      result = a4(&v9, &v8, v7);
      if (!v4)
      {
        a2 = v9;
        v7 += 2;
        if (--v5)
          continue;
      }
      return (_QWORD *)(a2 & 1);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D443D380(uint64_t a1, uint64_t a2, void (*a3)(char *__return_ptr, _QWORD *, uint64_t *))
{
  uint64_t v3;
  char v4;
  uint64_t v6;
  char v7;
  _QWORD v8[3];

  v8[2] = *MEMORY[0x1E0C80C00];
  v8[0] = a1;
  v8[1] = a2;
  a3(&v7, v8, &v6);
  if (!v3)
    v4 = v7;
  return v4 & 1;
}

_QWORD *sub_1D443D400(uint64_t a1, _QWORD *(*a2)(_QWORD *__return_ptr, uint64_t *, uint64_t *))
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[3];

  v6[2] = *MEMORY[0x1E0C80C00];
  v5 = a1;
  result = a2(v6, &v5, &v4);
  if (!v2)
    return (_QWORD *)v6[0];
  return result;
}

uint64_t sub_1D443D478(uint64_t result)
{
  unsigned __int8 *v1;
  uint64_t v2;
  int v3;

  v1 = *(unsigned __int8 **)(result + 8);
  if (v1)
  {
    v2 = *(unsigned int *)(result + 4);
    if ((_DWORD)v2)
    {
      LOBYTE(result) = 1;
      do
      {
        v3 = *v1++;
        result = result & (v3 == 0);
        --v2;
      }
      while (v2);
    }
    else
    {
      return 1;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_1D443D4B4(_BOOL8 result)
{
  uint64_t v1;
  unint64_t v2;
  _BOOL4 v3;
  uint64_t v4;
  unint64_t v5;
  int v6;

  v1 = *(_QWORD *)(result + 8);
  if (v1)
  {
    v2 = *(unsigned int *)(result + 4);
    if (v2 >= 4)
    {
      v4 = 0;
      v5 = v2 >> 2;
      LOBYTE(v3) = 1;
      while (1)
      {
        if (v3)
        {
          v6 = *(_DWORD *)(v1 + 4 * v4);
          v3 = (~v6 & 0x7F800000) != 0 || (v6 & 0x7FFFFF) == 0;
        }
        else
        {
          v3 = 0;
        }
        if (v5 - 1 == v4)
          break;
        if (++v4 >= v5)
        {
          __break(1u);
          goto LABEL_14;
        }
      }
    }
    else
    {
      v3 = 1;
    }
    return !v3;
  }
  else
  {
LABEL_14:
    __break(1u);
  }
  return result;
}

uint64_t sub_1D443D52C(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  int v7;

  v1 = *(_QWORD *)(result + 8);
  if (v1)
  {
    v2 = *(unsigned int *)(result + 4);
    if (v2 >= 4)
    {
      v3 = 0;
      v4 = v2 >> 2;
      v5 = v4 - 1;
      v6 = 1;
      do
      {
        if (v6)
        {
          v7 = *(_DWORD *)(v1 + 4 * v3);
          if ((~v7 & 0x7F800000) != 0)
          {
            if (v5 == v3)
              return 0;
            v6 = 1;
          }
          else
          {
            result = (v7 & 0x7FFFFF) == 0;
            v6 = (v7 & 0x7FFFFF) != 0;
            if (v5 == v3)
              return result;
          }
        }
        else
        {
          if (v5 == v3)
            return 1;
          v6 = 0;
        }
        ++v3;
      }
      while (v3 < v4);
      __break(1u);
      return 1;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1D443D5BC(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(a1, sel_audioBufferList);
  if ((sub_1D443E204((uint64_t)v1, (uint64_t)v1) & 1) != 0)
  {
    sub_1D42DCEE8();
    sub_1D4311F68();
    sub_1D4342D78(0x80000001D4551120, v2 + 9, (uint64_t)"expected non-silent audio buffer");
    sub_1D42E3BB8();
  }
  sub_1D43A2630();
}

void sub_1D443D63C(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(a1, sel_audioBufferList);
  if ((sub_1D443E204((uint64_t)v1, (uint64_t)v1) & 1) != 0)
  {
    sub_1D42DCEE8();
    sub_1D4311F68();
    sub_1D4342D78(0x80000001D4551120, v2 + 13, (uint64_t)"expected no NaN-valued audio samples");
    sub_1D42E3BB8();
  }
  sub_1D43A2630();
}

void sub_1D443D6BC(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(a1, sel_audioBufferList);
  if ((sub_1D443E204((uint64_t)v1, (uint64_t)v1) & 1) != 0)
  {
    sub_1D42DCEE8();
    sub_1D4311F68();
    sub_1D4342D78(0x80000001D4551120, v2 + 11, (uint64_t)"expected no infinite audio samples");
    sub_1D42E3BB8();
  }
  sub_1D43A2630();
}

uint64_t sub_1D443D73C(uint64_t a1, void *a2)
{
  id v3;

  sub_1D443D5BC(a2);
  sub_1D443D63C(a2);
  sub_1D443D6BC(a2);
  v3 = 0;
  sub_1D42B8F48();

  return 0;
}

void sub_1D443D81C(void *a1, void (*a2)(void *, id), uint64_t a3, uint64_t a4)
{
  id v7;
  id v8;
  char *v9;
  void *v10;

  swift_beginAccess();
  v7 = *(id *)(a4 + 16);
  a2(a1, v7);

  type metadata accessor for SNTimeUtils();
  LODWORD(a2) = objc_msgSend(a1, sel_frameLength);
  swift_beginAccess();
  v8 = *(id *)(a4 + 16);
  v9 = sub_1D42DBFC0(a2, v8);

  swift_beginAccess();
  v10 = *(void **)(a4 + 16);
  *(_QWORD *)(a4 + 16) = v9;

}

uint64_t sub_1D443D904(void *a1, void *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void (*a8)(void *, id), uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  _QWORD *v44;
  uint64_t v45;
  void (*v46)(void *, id);
  id v47;
  id v48;
  _BYTE v50[4];
  int v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  void *v55;
  void (*v56)(void *, id);
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61[3];

  v55 = a2;
  v56 = a8;
  v57 = a9;
  v58 = a1;
  v13 = sub_1D4519BC4();
  v54 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v53 = &v50[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = &v50[-v17];
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = &v50[-v20];
  v22 = (uint64_t *)(a6 + 16);
  v59 = a3(v19);
  v24 = v23;
  if (v23)
  {
    sub_1D4311F3C();
    v25 = *(_QWORD *)(a5 + 24);
    if (!v25 || (v59 == *(_QWORD *)(a5 + 16) ? (v26 = v24 == v25) : (v26 = 0), !v26 && (sub_1D451B820() & 1) == 0))
    {
      v52 = a5 + 16;
      swift_bridgeObjectRetain();
      sub_1D4519B10();
      swift_bridgeObjectRelease();
      sub_1D443E214();
      type metadata accessor for SNFileInjectOperator();
      sub_1D42B6F40();
      v31 = sub_1D447E454((uint64_t)v18, a7);
      v32 = (uint64_t)v53;
      sub_1D42B8E84();
      *v22 = (uint64_t)v31;
      swift_release();
      if (qword_1EFE40338 != -1)
        swift_once();
      v33 = sub_1D451A014();
      sub_1D42CC880(v33, (uint64_t)qword_1EFEA7700);
      sub_1D443E214();
      swift_retain();
      v34 = sub_1D4519FFC();
      v35 = sub_1D451AF74();
      v36 = v35;
      if (os_log_type_enabled(v34, v35))
      {
        v37 = v32;
        v38 = sub_1D42CC940();
        v53 = (_BYTE *)sub_1D42CC940();
        v61[0] = (uint64_t)v53;
        *(_DWORD *)v38 = 67109378;
        v51 = v36;
        sub_1D4311F3C();
        LODWORD(v60) = *(_QWORD *)(a6 + 16) != 0;
        sub_1D451B1A8();
        swift_release();
        *(_WORD *)(v38 + 8) = 2080;
        sub_1D443DFD8();
        v39 = sub_1D451B7C0();
        v60 = sub_1D43D72EC(v39, v40, v61);
        sub_1D451B1A8();
        swift_bridgeObjectRelease();
        sub_1D443E224(v37);
        _os_log_impl(&dword_1D42A7000, v34, (os_log_type_t)v51, "Try enable injection. Success: %{BOOL}d; URL: %s",
          (uint8_t *)v38,
          0x12u);
        swift_arrayDestroy();
        sub_1D42CC934();
      }

      sub_1D443E224(v32);
      swift_release();
      sub_1D443E224((uint64_t)v21);
    }
  }
  else
  {
    sub_1D4311F3C();
    if (*(_QWORD *)(a5 + 24))
    {
      sub_1D42B8E84();
      *v22 = 0;
      swift_release();
      if (qword_1EFE40338 != -1)
        swift_once();
      v27 = sub_1D451A014();
      sub_1D42CC880(v27, (uint64_t)qword_1EFEA7700);
      v28 = sub_1D4519FFC();
      v29 = sub_1D451AF74();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)sub_1D42CC940();
        *(_WORD *)v30 = 0;
        _os_log_impl(&dword_1D42A7000, v28, v29, "Disable injection.", v30, 2u);
        sub_1D42CC934();
      }

    }
  }
  sub_1D42B8E84();
  *(_QWORD *)(a5 + 16) = v59;
  *(_QWORD *)(a5 + 24) = v24;
  swift_bridgeObjectRelease();
  sub_1D4311F3C();
  v41 = *v22;
  v42 = sub_1D42B6F40();
  v43 = v55;
  *(_QWORD *)(v42 + 16) = v55;
  v44 = (_QWORD *)sub_1D42B6F40();
  v46 = v56;
  v45 = v57;
  v44[2] = v56;
  v44[3] = v45;
  v44[4] = v42;
  if (v41)
  {
    swift_retain_n();
    v47 = v43;
    swift_retain();
    swift_retain();
    sub_1D447E278(v58, (uint64_t)sub_1D443DFCC, (uint64_t)v44);
    swift_release();
    sub_1D42B8F48();
  }
  else
  {
    v48 = v43;
    swift_retain();
    swift_retain();
    sub_1D443D81C(v58, v46, v45, v42);
  }
  swift_release();
  return swift_release();
}

uint64_t sub_1D443DE78(uint64_t a1)
{
  return sub_1D443D52C(a1) & 1;
}

uint64_t sub_1D443DE90@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1D443DF34(a1, a2, a3);
}

_QWORD *sub_1D443DEA4@<X0>(_QWORD *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, _QWORD *(*a4)(uint64_t *__return_ptr, char *, _QWORD *)@<X3>, _QWORD *a5@<X5>, _BYTE *a6@<X8>)
{
  uint64_t v6;
  _QWORD *result;

  result = sub_1D443D300(a1, *a2, a3, a4);
  if (v6)
    *a5 = v6;
  else
    *a6 = result & 1;
  return result;
}

_QWORD *sub_1D443DEE4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;

  return sub_1D443DEA4(a1, *(char **)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *(**)(uint64_t *__return_ptr, char *, _QWORD *))(v3 + 32), a2, a3);
}

BOOL sub_1D443DF04(_BOOL8 a1)
{
  return sub_1D443D4B4(a1);
}

uint64_t sub_1D443DF1C(uint64_t a1)
{
  return sub_1D443D478(a1) & 1;
}

uint64_t sub_1D443DF34@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (*a1 == 1)
  {
    result = (*(uint64_t (**)(uint64_t))(v3 + 16))(a2);
    if (v4)
      return result;
  }
  else
  {
    result = 0;
  }
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D443DF7C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1D443DFA0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1D443DFCC(void *a1)
{
  uint64_t v1;

  sub_1D443D81C(a1, *(void (**)(void *, id))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

unint64_t sub_1D443DFD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFE4C7B8;
  if (!qword_1EFE4C7B8)
  {
    v1 = sub_1D4519BC4();
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0CB0048], v1);
    atomic_store(result, (unint64_t *)&qword_1EFE4C7B8);
  }
  return result;
}

uint64_t sub_1D443E01C(uint64_t a1)
{
  return j__swift_bridgeObjectRelease(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
}

uint64_t sub_1D443E034(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = *((unsigned __int8 *)a2 + 24);
  j__swift_bridgeObjectRetain(*a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t *sub_1D443E090(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = *((unsigned __int8 *)a2 + 24);
  j__swift_bridgeObjectRetain(*a2, v4, v5, v6);
  v7 = *a1;
  v8 = a1[1];
  v9 = a1[2];
  v10 = *((unsigned __int8 *)a1 + 24);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  *((_BYTE *)a1 + 24) = v6;
  j__swift_bridgeObjectRelease(v7, v8, v9, v10);
  return a1;
}

__n128 sub_1D443E0FC(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t *sub_1D443E110(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *a1;
  v7 = a1[1];
  v6 = a1[2];
  v8 = *((unsigned __int8 *)a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  *((_BYTE *)a1 + 24) = v4;
  j__swift_bridgeObjectRelease(v5, v7, v6, v8);
  return a1;
}

uint64_t sub_1D443E15C(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D443E19C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_1D443E1E4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1D443E1EC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2 & 1;
  return result;
}

uint64_t type metadata accessor for SignalBufferVariant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SignalBufferVariant);
}

uint64_t sub_1D443E204(uint64_t a1, uint64_t a2)
{
  return sub_1D443D2BC(1, a2);
}

uint64_t sub_1D443E214()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(v3, v2, v1);
}

uint64_t sub_1D443E224(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void destroy for DetectorHeadConfiguration(uint64_t a1)
{
  uint64_t v2;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(a1 + 48);
  if ((~v2 & 0xF000000000000007) != 0)

}

_QWORD *initializeWithCopy for DetectorHeadConfiguration(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  v5 = a2[6];
  a1[5] = a2[5];
  swift_unknownObjectRetain();
  v6 = v3;
  swift_bridgeObjectRetain();
  if ((~v5 & 0xF000000000000007) != 0)
    v7 = (id)(v5 & 0x7FFFFFFFFFFFFFFFLL);
  a1[6] = v5;
  return a1;
}

uint64_t assignWithCopy for DetectorHeadConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  id v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = (_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = v9 & 0xF000000000000007;
  if ((~v7 & 0xF000000000000007) != 0)
  {
    if (v10 == 0xF000000000000007)
    {
      sub_1D443E3F8((_QWORD *)(a1 + 48));
      *v8 = *(_QWORD *)(a2 + 48);
    }
    else
    {
      *v8 = v9;
      v12 = (void *)(v7 & 0x7FFFFFFFFFFFFFFFLL);
      v13 = (id)(v9 & 0x7FFFFFFFFFFFFFFFLL);

    }
  }
  else
  {
    *v8 = v9;
    if (v10 != 0xF000000000000007)
      v11 = (id)(v9 & 0x7FFFFFFFFFFFFFFFLL);
  }
  return a1;
}

_QWORD *sub_1D443E3F8(_QWORD *a1)
{
  destroy for FeatureExtractorConfiguration(a1);
  return a1;
}

_QWORD *assignWithTake for DetectorHeadConfiguration(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  swift_unknownObjectRelease();
  v4 = (void *)a1[1];
  a1[1] = a2[1];

  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v7 = a1 + 6;
  v6 = a1[6];
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  v9 = a2[6];
  if ((~v6 & 0xF000000000000007) != 0)
  {
    if ((~v9 & 0xF000000000000007) != 0)
    {
      *v7 = v9;

      return a1;
    }
    sub_1D443E3F8(a1 + 6);
  }
  *v7 = v9;
  return a1;
}

uint64_t getEnumTagSinglePayload for DetectorHeadConfiguration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DetectorHeadConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectorHeadConfiguration()
{
  return &type metadata for DetectorHeadConfiguration;
}

uint64_t _s22InMemoryMockXRWStorageCMa()
{
  return objc_opt_self();
}

_UNKNOWN **sub_1D443E588()
{
  return &off_1EFE43CF0;
}

_UNKNOWN **sub_1D443E594()
{
  return &off_1E97A3E58;
}

uint64_t *_s22InMemoryMockXRWStorageC4FileV8FileDataVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_1D42DD16C(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t _s22InMemoryMockXRWStorageC4FileV8FileDataVwxx(uint64_t a1)
{
  return sub_1D42B5420(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t *_s22InMemoryMockXRWStorageC4FileV8FileDataVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_1D42DD16C(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_1D42B5420(v5, v6);
  return a1;
}

uint64_t *_s22InMemoryMockXRWStorageC4FileV8FileDataVwta(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1D42B5420(v3, v4);
  return a1;
}

uint64_t _s22InMemoryMockXRWStorageC4FileV8FileDataVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0xD && *(_BYTE *)(a1 + 16))
    {
      v2 = *(_DWORD *)a1 + 12;
    }
    else
    {
      v2 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
      if (v2 >= 0xC)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t _s22InMemoryMockXRWStorageC4FileV8FileDataVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)result = a2 - 13;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *_s22InMemoryMockXRWStorageC4FileV8FileDataVMa()
{
  return &_s22InMemoryMockXRWStorageC4FileV8FileDataVN;
}

uint64_t _s22InMemoryMockXRWStorageC4FileVwxx()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *_s22InMemoryMockXRWStorageC4FileVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s22InMemoryMockXRWStorageC4FileVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s22InMemoryMockXRWStorageC4FileVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_release();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *_s22InMemoryMockXRWStorageC4FileVMa()
{
  return &_s22InMemoryMockXRWStorageC4FileVN;
}

id sub_1D443E830(void *a1, char a2)
{
  int v2;
  id result;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;

  v2 = a2 & 1;
  result = objc_msgSend(a1, sel_isOptional);
  if ((_DWORD)result != v2)
  {
    sub_1D439E0FC();
    sub_1D451B400();
    sub_1D4404704();
    sub_1D439E150();
    sub_1D443FA70();
    sub_1D42DCEE8();
    sub_1D451A794();
    sub_1D42CB208();
    sub_1D451A794();
    v4 = sub_1D443FA28();
    sub_1D43EC59C(v4, v5, v6, v7, v8, v9);
    sub_1D439E15C();
    return (id)sub_1D42B6F54();
  }
  return result;
}

void sub_1D443E990(void *a1, unint64_t a2)
{
  id v3;
  uint64_t v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;

  v3 = objc_msgSend(a1, sel_type);
  if (v3 == (id)3)
  {
    if (a2 >> 62)
      goto LABEL_32;
    v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      v5 = sub_1D43B1BD0((uint64_t)v3, sel_sizeRangeForDimension);
      sub_1D42EA3E0((uint64_t)v5, (unint64_t *)&qword_1EFE47310);
      v6 = sub_1D451A92C();

      if (v6 >> 62)
      {
        swift_bridgeObjectRetain();
        v7 = sub_1D451B5A4();
        sub_1D42D3258();
      }
      else
      {
        v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      sub_1D42D3258();
      if (v4 != v7)
        break;
      if (v4 < 0)
      {
        __break(1u);
        return;
      }
      if (!v4)
        return;
      v8 = 0;
      v27 = a2 & 0xC000000000000001;
      v9 = a2;
      while (v4 != v8)
      {
        if (v27)
          v10 = (id)MEMORY[0x1D825CD78](v8, a2);
        else
          v10 = *(id *)(a2 + 8 * v8 + 32);
        v11 = v10;
        v12 = objc_msgSend(v10, sel_rangeValue);
        v14 = v13;

        v16 = sub_1D43B1BD0(v15, sel_sizeRangeForDimension);
        v17 = sub_1D451A92C();

        if ((v17 & 0xC000000000000001) != 0)
        {
          v18 = (id)MEMORY[0x1D825CD78](v8, v17);
        }
        else
        {
          if (v8 >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_31;
          v18 = *(id *)(v17 + 8 * v8 + 32);
        }
        v19 = v18;
        swift_bridgeObjectRelease();
        v20 = objc_msgSend(v19, sel_rangeValue);
        v22 = v21;

        if (v12 != v20 || v14 != v22)
        {
          sub_1D42DCEE8();
          sub_1D443FAB4();
          sub_1D451B400();
          sub_1D443FAA4();
          sub_1D451B7C0();
          sub_1D443FA80();
          sub_1D42CB208();
          sub_1D443FAA4();
          sub_1D451B124();
          sub_1D443FA80();
          sub_1D42CB208();
          goto LABEL_27;
        }
        ++v8;
        a2 = v9;
        if (v4 == v8)
          return;
      }
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      swift_bridgeObjectRetain();
      v4 = sub_1D451B5A4();
      v3 = (id)sub_1D42CB8F4();
    }
    sub_1D42DCEE8();
    sub_1D443FAB4();
    sub_1D451B400();
    swift_bridgeObjectRelease();
    sub_1D439E150();
    v28 = v26 + 14;
    sub_1D451B7C0();
    sub_1D443FA80();
    sub_1D42CB208();
    sub_1D451A794();
LABEL_27:
    sub_1D443F9F8(v28, (uint64_t)"com.apple.SoundAnalysis");
    sub_1D42CB208();
  }
  else
  {
    sub_1D42DCEE8();
    sub_1D439E150();
    sub_1D430740C();
    sub_1D43F8880(v24, v25, (uint64_t)"expected shape constraint to have ranged type");
  }
  sub_1D42B6F54();
}

void sub_1D443EDC4(void *a1, void *a2)
{
  id v3;
  void *v4;
  unsigned __int8 v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (objc_msgSend(a1, sel_type) != (id)2)
  {
    sub_1D42DCEE8();
    sub_1D439E150();
    sub_1D430740C();
    sub_1D43F8880(v13, v14, (uint64_t)"expected shape constraint to enumerated type");
    goto LABEL_6;
  }
  v3 = sub_1D435EBD4(2, sel_enumeratedShapes);
  if (!v3)
  {
    __break(1u);
    return;
  }
  v4 = v3;
  v5 = objc_msgSend(v3, sel_isEqual_, a2);

  if ((v5 & 1) == 0)
  {
    sub_1D42DCEE8();
    sub_1D439E0FC();
    sub_1D451B400();
    sub_1D4404704();
    sub_1D439E150();
    sub_1D443FA70();
    v6 = objc_msgSend(a2, sel_description);
    sub_1D451A6EC();

    sub_1D451A794();
    sub_1D42CB8F4();
    v7 = sub_1D443FA4C();
    sub_1D43EC59C(v7, v8, v9, v10, v11, v12);
    sub_1D439E15C();
LABEL_6:
    sub_1D42B6F54();
  }
}

void sub_1D443EF9C(void *a1)
{
  uint64_t v1;
  uint64_t v2;

  if (objc_msgSend(a1, sel_type) != (id)1)
  {
    sub_1D42DCEE8();
    sub_1D439E150();
    sub_1D430740C();
    sub_1D43F8880(v1, v2, (uint64_t)"expected shape constraint to have unspecified type");
    sub_1D42E3BB8();
  }
  sub_1D42B6E24();
}

id sub_1D443F004(void *a1, id a2)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(a1, sel_dataType);
  if (result != a2)
  {
    sub_1D42DCEE8();
    sub_1D439E0FC();
    sub_1D451B400();
    sub_1D439E150();
    sub_1D430740C();
    sub_1D4342D94();
    type metadata accessor for MLMultiArrayDataType(0);
    sub_1D451B514();
    sub_1D443F9F8(v4, (uint64_t)"com.apple.SoundAnalysis");
    sub_1D42CB208();
    return (id)swift_willThrow();
  }
  return result;
}

void sub_1D443F0D8(void *a1)
{
  uint64_t v1;
  uint64_t v2;

  if (objc_msgSend(a1, sel_type) != (id)5)
  {
    sub_1D42DCEE8();
    sub_1D439E150();
    sub_1D430740C();
    sub_1D43F8880(v1, v2, (uint64_t)"expected feature to have multi array type");
    sub_1D42E3BB8();
  }
  sub_1D42B6E24();
}

void sub_1D443F140(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(void))
{
  id v6;

  v6 = a3;
  a5();

  sub_1D42CB758();
}

void sub_1D443F1A4(void *a1, void *a2)
{
  uint64_t v2;
  id v3;
  id v4;

  v3 = sub_1D443FAC8(a1, a2);
  if (v2)
  {
    sub_1D42BE888();
  }
  else
  {
    v4 = sub_1D435EBD4((uint64_t)v3, sel_shapeConstraint);
    sub_1D42EA3E0((uint64_t)v4, (unint64_t *)&qword_1EFE47310);
    sub_1D451A914();
    __break(1u);
  }
}

void sub_1D443F244(void *a1, void *a2)
{
  void *v2;
  uint64_t v3;
  id v4;
  id v5;

  v4 = sub_1D443FAC8(a1, a2);
  if (!v3)
  {
    v5 = sub_1D435EBD4((uint64_t)v4, sel_shapeConstraint);
    sub_1D443EDC4(v5, v2);

  }
  sub_1D42BE888();
}

uint64_t sub_1D443F2A4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, void (*a7)(id, uint64_t, id))
{
  id v10;
  id v11;

  v10 = a3;
  v11 = a5;
  a7(v10, a4, v11);

  return 1;
}

void sub_1D443F33C(void *a1, void *a2)
{
  uint64_t v2;
  id v4;

  sub_1D443F004(a1, a2);
  if (!v2)
  {
    v4 = objc_msgSend(a1, sel_shapeConstraint);
    sub_1D443EF9C(v4);

  }
  sub_1D42B6E24();
}

void sub_1D443F39C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(void))
{
  id v7;

  v7 = a3;
  a6();

  sub_1D42CB758();
}

void sub_1D443F414(void *a1, char a2, uint64_t a3, uint64_t a4, void (*a5)(id, uint64_t, uint64_t))
{
  uint64_t v5;
  id v10;
  void *v11;

  sub_1D443E830(a1, a2);
  if (!v5)
  {
    sub_1D443F0D8(a1);
    v10 = objc_msgSend(a1, sel_multiArrayConstraint);
    if (v10)
    {
      v11 = v10;
      a5(v10, a3, a4);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1D443F4B8(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5, void *a6, uint64_t a7, void (*a8)(id, uint64_t, uint64_t))
{
  id v12;
  id v13;

  v12 = a3;
  v13 = a6;
  sub_1D443F414(v12, a4, a5, (uint64_t)v13, a8);

  return 1;
}

void sub_1D443F564(void *a1, char a2, void *a3)
{
  uint64_t v3;
  uint64_t v6;
  id v7;
  void *v8;

  sub_1D443E830(a1, a2);
  if (v3)
    goto LABEL_4;
  sub_1D443F0D8(a1);
  v7 = sub_1D435EBD4(v6, sel_multiArrayConstraint);
  if (v7)
  {
    v8 = v7;
    sub_1D443F33C(v7, a3);

LABEL_4:
    sub_1D42BE888();
    return;
  }
  __break(1u);
}

uint64_t sub_1D443F664(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t result;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;

  v5 = objc_msgSend(a1, sel_inputDescriptionsByName);
  sub_1D42EA3E0((uint64_t)v5, (unint64_t *)&qword_1EFE40360);
  sub_1D443FA94();

  sub_1D44AD248();
  v7 = v6;
  v8 = swift_bridgeObjectRelease();
  v9 = sub_1D43B1BD0(v8, sel_outputDescriptionsByName);
  sub_1D443FA94();

  sub_1D44AD248();
  v11 = v10;
  sub_1D42D3258();
  v12 = sub_1D44C9228(v7);
  v13 = swift_bridgeObjectRetain();
  v14 = sub_1D44C9228(v13);
  sub_1D436FA54(v12, v14);
  v16 = v15;
  sub_1D42CB8F4();
  sub_1D42D3258();
  if ((v16 & 1) != 0)
  {
    v17 = sub_1D44C9228(v11);
    v18 = swift_bridgeObjectRetain();
    v19 = sub_1D44C9228(v18);
    sub_1D436FA54(v17, v19);
    v21 = v20;
    sub_1D42CB208();
    result = swift_bridgeObjectRelease();
    if ((v21 & 1) != 0)
      return result;
    sub_1D42DCEE8();
    sub_1D439E0FC();
    sub_1D451B400();
    sub_1D4404704();
    sub_1D439E150();
    sub_1D443FA70();
    MEMORY[0x1D825C280](a3, MEMORY[0x1E0DEA968]);
    sub_1D4342D94();
    swift_bridgeObjectRelease();
    v23 = sub_1D443FA4C();
  }
  else
  {
    swift_release();
    sub_1D42DCEE8();
    sub_1D439E0FC();
    sub_1D451B400();
    sub_1D4404704();
    sub_1D439E150();
    sub_1D443FA70();
    MEMORY[0x1D825C280](a2, MEMORY[0x1E0DEA968]);
    sub_1D4342D94();
    swift_bridgeObjectRelease();
    v23 = sub_1D443FA28();
  }
  sub_1D43EC59C(v23, v24, v25, v26, v27, v28);
  sub_1D439E15C();
  return sub_1D42B6F54();
}

id sub_1D443F958()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SNValidateModel();
  return objc_msgSendSuper2(&v2, sel_init);
}

id sub_1D443F9A8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SNValidateModel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SNValidateModel()
{
  return objc_opt_self();
}

id sub_1D443F9F8@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  unint64_t v2;

  return sub_1D43EC59C(0xD000000000000017, (a2 - 32) | 0x8000000000000000, 4, 0, a1, v2);
}

void sub_1D443FA1C()
{
  void *v0;

}

unint64_t sub_1D443FA28()
{
  return 0xD000000000000017;
}

unint64_t sub_1D443FA4C()
{
  return 0xD000000000000017;
}

uint64_t sub_1D443FA80()
{
  return sub_1D451A794();
}

id sub_1D443FA8C()
{
  void *v0;

  return v0;
}

uint64_t sub_1D443FA94()
{
  return sub_1D451A5CC();
}

uint64_t sub_1D443FAA4()
{
  return sub_1D451A794();
}

id sub_1D443FAC8(void *a1, id a2)
{
  return sub_1D443F004(a1, a2);
}

uint64_t SNSoundActionCommand.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___SNSoundActionCommand_impl);
  sub_1D42CB6CC();
  return v1;
}

double SNSoundActionCommand.confidenceThreshold.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___SNSoundActionCommand_impl + 24);
}

uint64_t SNSoundActionCommand.minDurationBlocks.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___SNSoundActionCommand_impl + 16);
}

uint64_t sub_1D443FB30()
{
  swift_bridgeObjectRetain();
  sub_1D4406CEC();
  swift_bridgeObjectRelease();
  sub_1D451B964();
  return sub_1D451B988();
}

BOOL sub_1D443FBA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8)
{
  char v13;
  _BOOL8 result;

  if (a1 == a4 && a2 == a5)
  {
    if (a3 != a6)
      return 0;
    return a7 == a8;
  }
  v13 = sub_1D451B820();
  result = 0;
  if ((v13 & 1) != 0 && a3 == a6)
    return a7 == a8;
  return result;
}

uint64_t sub_1D443FC1C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D4556CE0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D4556CC0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1D443FD54(char a1)
{
  if (!a1)
    return 1701667182;
  if (a1 == 1)
    return 0xD000000000000011;
  return 0xD000000000000013;
}

uint64_t sub_1D443FDA8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;
  char v13;
  char v14;

  v11 = a4;
  v6 = sub_1D42B28FC(&qword_1EFE51EF0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42B5528(a1, a1[3]);
  sub_1D444103C();
  sub_1D451BA24();
  v14 = 0;
  sub_1D451B724();
  if (!v4)
  {
    v13 = 1;
    sub_1D451B754();
    v12 = 2;
    sub_1D451B73C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1D443FF04()
{
  sub_1D42BE9A8();
  sub_1D42CB6CC();
  sub_1D4406CEC();
  swift_bridgeObjectRelease();
  sub_1D451B964();
  sub_1D451B988();
  return sub_1D451B994();
}

double sub_1D443FF84(_QWORD *a1)
{
  uint64_t v1;
  double v2;
  uint64_t v4;
  double v6;

  v4 = sub_1D42B28FC(&qword_1EFE51EE0);
  MEMORY[0x1E0C80A78](v4);
  sub_1D42B5528(a1, a1[3]);
  sub_1D444103C();
  sub_1D451BA0C();
  if (v1)
  {
    sub_1D42B5400((uint64_t)a1);
  }
  else
  {
    sub_1D4406CC8();
    sub_1D451B64C();
    swift_bridgeObjectRetain();
    sub_1D4406CC8();
    sub_1D451B67C();
    sub_1D4406CC8();
    sub_1D451B664();
    v2 = v6;
    sub_1D42CB3CC();
    sub_1D42B5400((uint64_t)a1);
    sub_1D42CB8F4();
  }
  return v2;
}

uint64_t sub_1D4440108()
{
  char *v0;

  return sub_1D443FD54(*v0);
}

uint64_t sub_1D4440110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D443FC1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D4440134()
{
  sub_1D444103C();
  return sub_1D451BA3C();
}

uint64_t sub_1D444015C()
{
  sub_1D444103C();
  return sub_1D451BA48();
}

uint64_t sub_1D4440184()
{
  return sub_1D443FF04();
}

uint64_t sub_1D4440194()
{
  return sub_1D443FB30();
}

uint64_t sub_1D44401A4()
{
  sub_1D451B958();
  swift_bridgeObjectRetain();
  sub_1D451A74C();
  swift_bridgeObjectRelease();
  sub_1D451B964();
  sub_1D451B988();
  return sub_1D451B994();
}

void sub_1D4440228(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;

  v7 = sub_1D443FF84(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v6;
    *(double *)(a2 + 24) = v7;
  }
}

uint64_t sub_1D4440258(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1D443FDA8(a1, *v1, v1[1], v1[2]);
}

BOOL sub_1D4440278(uint64_t a1, uint64_t a2)
{
  return sub_1D443FBA0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(double *)(a1 + 24), *(double *)(a2 + 24));
}

void SNSoundActionCommand.confidenceThreshold.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR___SNSoundActionCommand_impl + 24) = a1;
}

double (*SNSoundActionCommand.confidenceThreshold.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR___SNSoundActionCommand_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(_QWORD *)(v1 + v2 + 24);
  return sub_1D4440318;
}

double sub_1D4440318(uint64_t a1)
{
  double result;

  result = *(double *)a1;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + *(_QWORD *)(a1 + 16) + 24) = *(_QWORD *)a1;
  return result;
}

uint64_t SNSoundActionCommand.minDurationBlocks.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR___SNSoundActionCommand_impl + 16) = result;
  return result;
}

_QWORD *(*SNSoundActionCommand.minDurationBlocks.modify(_QWORD *a1))(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR___SNSoundActionCommand_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(_QWORD *)(v1 + v2 + 16);
  return sub_1D44403AC;
}

_QWORD *sub_1D44403AC(_QWORD *result)
{
  *(_QWORD *)(result[1] + result[2] + 16) = *result;
  return result;
}

uint64_t SNSoundActionCommand.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v2 + OBJC_IVAR___SNSoundActionCommand_impl);
  *v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4440470(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return SNSoundActionCommand.name.setter(v1, v2);
}

uint64_t (*SNSoundActionCommand.name.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR___SNSoundActionCommand_impl + 8);
  *a1 = *(_QWORD *)(v1 + OBJC_IVAR___SNSoundActionCommand_impl);
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_1D44404F4;
}

uint64_t sub_1D44404F4(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
    return sub_1D444123C();
  swift_bridgeObjectRetain();
  sub_1D444123C();
  return swift_bridgeObjectRelease();
}

id sub_1D4440544()
{
  char *v0;
  objc_class *v1;
  char *v2;
  objc_super v4;

  v1 = (objc_class *)sub_1D42B7104();
  v2 = &v0[OBJC_IVAR___SNSoundActionCommand_impl];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0xE000000000000000;
  *((_QWORD *)v2 + 2) = 0;
  *((_QWORD *)v2 + 3) = 0;
  v4.receiver = v0;
  v4.super_class = v1;
  return objc_msgSendSuper2(&v4, sel_init);
}

id sub_1D44405AC(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  objc_class *ObjectType;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  objc_super v38;
  unint64_t v39;
  unint64_t v40;

  ObjectType = (objc_class *)swift_getObjectType();
  v39 = 1701667150;
  v40 = 0xE400000000000000;
  v5 = v1;
  sub_1D4441218();
  sub_1D4474074(a1);
  if (v2)
  {

    v19 = swift_bridgeObjectRelease();
    sub_1D4441224(v19, v20, v21, v22, v23);
    return (id)swift_deallocPartialClassInstance();
  }
  else
  {
    v11 = v6;
    v12 = v7;
    sub_1D4441224(v6, v7, v8, v9, v10);
    sub_1D4441218();
    sub_1D444122C();
    v14 = (void *)v13;
    sub_1D4441224(v13, v15, v16, v17, v18);
    v39 = 0xD000000000000013;
    v40 = 0x80000001D45588C0;
    sub_1D4441218();
    sub_1D444122C();
    v26 = v25;
    v27 = swift_bridgeObjectRelease();
    sub_1D4441224(v27, v28, v29, v30, v31);
    v32 = v14;
    sub_1D4443168();
    v33 = objc_msgSend(v32, sel_integerValue);

    v34 = v26;
    sub_1D4443088();
    objc_msgSend(v34, sel_doubleValue);
    v36 = v35;

    v37 = (uint64_t *)&v5[OBJC_IVAR___SNSoundActionCommand_impl];
    *v37 = v11;
    v37[1] = v12;
    v37[2] = (uint64_t)v33;
    v37[3] = v36;

    v38.receiver = v5;
    v38.super_class = ObjectType;
    return objc_msgSendSuper2(&v38, sel_init);
  }
}

id SNSoundActionCommand.copy(with:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  id result;
  objc_super v12;

  v3 = (objc_class *)sub_1D42B7104();
  v4 = v1 + OBJC_IVAR___SNSoundActionCommand_impl;
  v6 = *(_QWORD *)(v1 + OBJC_IVAR___SNSoundActionCommand_impl);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR___SNSoundActionCommand_impl + 8);
  v7 = *(_QWORD *)(v4 + 16);
  v8 = *(_QWORD *)(v4 + 24);
  v9 = (char *)objc_allocWithZone(v3);
  v10 = &v9[OBJC_IVAR___SNSoundActionCommand_impl];
  *(_QWORD *)v10 = v6;
  *((_QWORD *)v10 + 1) = v5;
  *((_QWORD *)v10 + 2) = v7;
  *((_QWORD *)v10 + 3) = v8;
  v12.receiver = v9;
  v12.super_class = v3;
  sub_1D42CB6CC();
  result = objc_msgSendSuper2(&v12, sel_init);
  a1[3] = v3;
  *a1 = result;
  return result;
}

uint64_t SNSoundActionCommand.hash.getter()
{
  uint64_t v0;

  sub_1D42BE9A8();
  swift_bridgeObjectRetain();
  sub_1D451A74C();
  sub_1D451B964();
  sub_1D451B988();
  v0 = sub_1D451B994();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL SNSoundActionCommand.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  double v6;
  char v8;
  _BOOL8 v9;
  char *v11;
  _BYTE v12[32];
  _OWORD v13[2];
  __int128 v14;
  uint64_t v15;

  sub_1D42B7104();
  sub_1D42B28B4(a1, (uint64_t)&v14);
  if (v15)
  {
    sub_1D42B293C(&v14, v13);
    sub_1D42B294C((uint64_t)v13, (uint64_t)v12);
    if (swift_dynamicCast())
    {
      v3 = *(_QWORD *)(v1 + OBJC_IVAR___SNSoundActionCommand_impl + 16);
      v4 = *(double *)(v1 + OBJC_IVAR___SNSoundActionCommand_impl + 24);
      v5 = *(_QWORD *)&v11[OBJC_IVAR___SNSoundActionCommand_impl + 16];
      v6 = *(double *)&v11[OBJC_IVAR___SNSoundActionCommand_impl + 24];
      if (*(_QWORD *)(v1 + OBJC_IVAR___SNSoundActionCommand_impl) != *(_QWORD *)&v11[OBJC_IVAR___SNSoundActionCommand_impl]
        || *(_QWORD *)(v1 + OBJC_IVAR___SNSoundActionCommand_impl + 8) != *(_QWORD *)&v11[OBJC_IVAR___SNSoundActionCommand_impl
                                                                                        + 8])
      {
        v8 = sub_1D451B820();

        v9 = 0;
        if ((v8 & 1) == 0 || v3 != v5)
          goto LABEL_14;
        goto LABEL_12;
      }

      if (v3 == v5)
      {
LABEL_12:
        v9 = v4 == v6;
LABEL_14:
        sub_1D42B5400((uint64_t)v13);
        return v9;
      }
    }
    v9 = 0;
    goto LABEL_14;
  }
  return 0;
}

id SNSoundActionCommand.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return SNSoundActionCommand.init(coder:)(a1);
}

id SNSoundActionCommand.init(coder:)(void *a1)
{
  void *v1;
  void *v2;
  objc_class *v4;
  id v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  char *v14;
  double *v15;
  id v16;
  objc_super v18;

  v2 = v1;
  v4 = (objc_class *)sub_1D42CFC30();
  v5 = v2;
  v6 = sub_1D42B2040();
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = v6;

  v14 = (char *)objc_allocWithZone(v4);
  v15 = (double *)&v14[OBJC_IVAR___SNSoundActionCommand_impl];
  *(_QWORD *)v15 = v8;
  *((_QWORD *)v15 + 1) = v10;
  *((_QWORD *)v15 + 2) = v12;
  v15[3] = v13;
  v18.receiver = v14;
  v18.super_class = v4;
  v16 = objc_msgSendSuper2(&v18, sel_init);

  sub_1D42CFC30();
  sub_1D4441204();
  return v16;
}

Swift::Void __swiftcall SNSoundActionCommand.encode(with:)(NSCoder with)
{
  uint64_t v1;
  double *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;

  v2 = (double *)(v1 + OBJC_IVAR___SNSoundActionCommand_impl);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___SNSoundActionCommand_impl);
  v3 = *((_QWORD *)v2 + 1);
  v5 = *((_QWORD *)v2 + 2);
  v6 = v2[3];
  swift_bridgeObjectRetain();
  sub_1D42B05F8(v4, v3, v5, v6);
  swift_bridgeObjectRelease();
}

uint64_t static SNSoundActionCommand.supportsSecureCoding.getter()
{
  return 1;
}

id SNSoundActionCommand.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1D42B7104();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D4440E5C(double *a1@<X8>)
{
  *a1 = SNSoundActionCommand.confidenceThreshold.getter();
  sub_1D42B6E24();
}

void sub_1D4440E80(double *a1)
{
  SNSoundActionCommand.confidenceThreshold.setter(*a1);
  sub_1D42B6E24();
}

void sub_1D4440EA0(uint64_t *a1@<X8>)
{
  *a1 = SNSoundActionCommand.minDurationBlocks.getter();
  sub_1D42B6E24();
}

void sub_1D4440EC4(uint64_t *a1)
{
  SNSoundActionCommand.minDurationBlocks.setter(*a1);
  sub_1D42B6E24();
}

void sub_1D4440EE4(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = SNSoundActionCommand.name.getter();
  a1[1] = v2;
  sub_1D42B6E24();
}

uint64_t type metadata accessor for SNSoundActionCommand()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNSoundActionCommand()
{
  return swift_lookUpClassMethod();
}

_QWORD *assignWithCopy for SoundActionsCommand(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

_QWORD *assignWithTake for SoundActionsCommand(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

ValueMetadata *type metadata accessor for SoundActionsCommand()
{
  return &type metadata for SoundActionsCommand;
}

unint64_t sub_1D4441000()
{
  unint64_t result;

  result = qword_1EFE51ED8;
  if (!qword_1EFE51ED8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453F7A4, &type metadata for SoundActionsCommand);
    atomic_store(result, (unint64_t *)&qword_1EFE51ED8);
  }
  return result;
}

unint64_t sub_1D444103C()
{
  unint64_t result;

  result = qword_1EFE51EE8;
  if (!qword_1EFE51EE8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453F920, &type metadata for SoundActionsCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51EE8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SoundActionsCommand.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D44410C4 + 4 * byte_1D453F755[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D44410F8 + 4 * asc_1D453F750[v4]))();
}

uint64_t sub_1D44410F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4441100(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4441108);
  return result;
}

uint64_t sub_1D4441114(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D444111CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D4441120(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4441128(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SoundActionsCommand.CodingKeys()
{
  return &type metadata for SoundActionsCommand.CodingKeys;
}

unint64_t sub_1D4441148()
{
  unint64_t result;

  result = qword_1EFE51EF8;
  if (!qword_1EFE51EF8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453F8F8, &type metadata for SoundActionsCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51EF8);
  }
  return result;
}

unint64_t sub_1D4441188()
{
  unint64_t result;

  result = qword_1EFE51F00;
  if (!qword_1EFE51F00)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453F868, &type metadata for SoundActionsCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51F00);
  }
  return result;
}

unint64_t sub_1D44411C8()
{
  unint64_t result;

  result = qword_1EFE51F08;
  if (!qword_1EFE51F08)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453F890, &type metadata for SoundActionsCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE51F08);
  }
  return result;
}

uint64_t sub_1D4441204()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1D4441218()
{
  return sub_1D451B3B8();
}

uint64_t sub_1D4441224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  return sub_1D42D6F98((uint64_t)va);
}

void sub_1D444122C()
{
  uint64_t v0;

  sub_1D4474118(v0);
}

uint64_t sub_1D444123C()
{
  uint64_t v0;
  uint64_t v1;

  return SNSoundActionCommand.name.setter(v1, v0);
}

uint64_t sub_1D4441248(_QWORD *a1, unint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  void *v25;
  uint64_t *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  v3 = a2;
  if (a2 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    v5 = sub_1D451B5A4();
    if (v5)
      goto LABEL_3;
LABEL_23:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return (uint64_t)a1;
  }
  v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5)
    goto LABEL_23;
LABEL_3:
  v32 = v3;
  v33 = v3 & 0xC000000000000001;
  v6 = 4;
  v31 = v5;
  while (1)
  {
    if (v33)
      v7 = (char *)MEMORY[0x1D825CD78](v6 - 4, v3);
    else
      v7 = (char *)*(id *)(v3 + 8 * v6);
    v8 = v7;
    v9 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v10 = *(_QWORD *)&v7[OBJC_IVAR___SNModelFeatureConnection_impl + 16];
    v11 = *(_QWORD *)&v7[OBJC_IVAR___SNModelFeatureConnection_impl + 24];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = (void *)sub_1D451A6C8();
    swift_bridgeObjectRelease();
    v13 = objc_msgSend(a3, sel_featureValueForName_, v12);

    if (!v13)
    {
      swift_bridgeObjectRetain();
      v22 = sub_1D4366B34(v10, v11);
      v24 = v23;
      swift_bridgeObjectRelease();
      if ((v24 & 1) != 0)
      {
        swift_isUniquelyReferenced_nonNull_native();
        sub_1D42B28FC(&qword_1EFE51F40);
        sub_1D451B52C();
        swift_bridgeObjectRelease();
        v25 = *(void **)(a1[7] + 8 * v22);
        sub_1D42E9D88(0, (unint64_t *)&qword_1EFE4D470);
        sub_1D451B544();

        swift_bridgeObjectRelease();
      }
      else
      {

      }
      swift_bridgeObjectRelease();
      v3 = v32;
      goto LABEL_22;
    }
    v3 = v11;
    swift_isUniquelyReferenced_nonNull_native();
    v14 = v10;
    v15 = v3;
    v16 = sub_1D4366B34(v10, v3);
    if (__OFADD__(a1[2], (v17 & 1) == 0))
      goto LABEL_25;
    v18 = v16;
    v3 = v17;
    sub_1D42B28FC(&qword_1EFE51F40);
    if ((sub_1D451B52C() & 1) != 0)
      break;
LABEL_13:
    if ((v3 & 1) != 0)
    {
      v21 = a1[7];

      *(_QWORD *)(v21 + 8 * v18) = v13;
    }
    else
    {
      a1[(v18 >> 6) + 8] |= 1 << v18;
      v26 = (uint64_t *)(a1[6] + 16 * v18);
      *v26 = v14;
      v26[1] = v15;
      *(_QWORD *)(a1[7] + 8 * v18) = v13;
      v27 = a1[2];
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        goto LABEL_26;
      a1[2] = v29;
      swift_bridgeObjectRetain();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = v31;
    v3 = v32;
    v9 = v6 - 3;
LABEL_22:
    ++v6;
    if (v9 == v5)
      goto LABEL_23;
  }
  v19 = sub_1D4366B34(v14, v15);
  if ((v3 & 1) == (v20 & 1))
  {
    v18 = v19;
    goto LABEL_13;
  }
  result = sub_1D451B8BC();
  __break(1u);
  return result;
}

void sub_1D44415CC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _QWORD *v24;

  v17 = sub_1D4519AB0();
  v3 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (unint64_t)objc_msgSend(a1, sel_count);
  v24 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1D42C71F0();
  v7 = a1;
  sub_1D451AF38();

  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    return;
  }
  v16[1] = v1;
  v16[2] = v3;
  if (v6)
  {
    sub_1D430DBE8(&qword_1EFE51F30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
    do
    {
      v7 = v5;
      sub_1D451B190();
      if (!v23)
        goto LABEL_22;
      sub_1D4442D20();
      if (!swift_dynamicCast())
      {
        sub_1D4442778();
        sub_1D42B6D0C();
        sub_1D42E3BB8();
        sub_1D4442C2C();
        swift_release();
        sub_1D42B5400((uint64_t)&v22);
        return;
      }
      v8 = v18;
      v9 = v19;
      if ((sub_1D4442D04() & 1) == 0)
      {
        sub_1D4442C6C();
        v7 = v24;
      }
      v10 = v7[2];
      if (v10 >= v7[3] >> 1)
      {
        sub_1D42C71F0();
        v7 = v24;
      }
      v7[2] = v10 + 1;
      v11 = &v7[2 * v10];
      v11[4] = v8;
      v11[5] = v9;
    }
    while (--v6);
  }
  sub_1D430DBE8(&qword_1EFE51F30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
  sub_1D4442CB0();
  if (v21)
  {
    while (1)
    {
      sub_1D42B293C(&v20, &v22);
      sub_1D4442D20();
      if (!swift_dynamicCast())
        break;
      v12 = v18;
      v13 = v19;
      if ((sub_1D4442D04() & 1) == 0)
      {
        sub_1D4442C6C();
        v7 = v24;
      }
      v14 = v7[2];
      if (v14 >= v7[3] >> 1)
      {
        sub_1D42C71F0();
        v7 = v24;
      }
      v7[2] = v14 + 1;
      v15 = &v7[2 * v14];
      v15[4] = v12;
      v15[5] = v13;
      sub_1D4442CB0();
      if (!v21)
        goto LABEL_18;
    }
    sub_1D4442778();
    sub_1D42B6D0C();
    sub_1D42E3BB8();
    sub_1D42B5400((uint64_t)&v22);
    sub_1D4442C2C();
    swift_release();
  }
  else
  {
LABEL_18:
    sub_1D4442C2C();
    sub_1D42B5464((uint64_t)&v20);
  }
}

void sub_1D44418BC()
{
  sub_1D44418F4((SEL *)&selRef_outputFeatureNames);
}

void sub_1D44418D8()
{
  sub_1D44418F4((SEL *)&selRef_inputFeatureNames);
}

void sub_1D44418F4(SEL *a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;

  v3 = objc_msgSend(v1, *a1);
  sub_1D44415CC(v3);
  v5 = v4;

  if (!v2)
    sub_1D44C9228(v5);
}

id sub_1D4441974()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC13SoundAnalysis16RecursiveMLModel_modelDescription);
}

id sub_1D4441984(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  objc_super v14;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC13SoundAnalysis16RecursiveMLModel_recursiveInputs] = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&v1[OBJC_IVAR____TtC13SoundAnalysis16RecursiveMLModel_model] = a1;
  v4 = v1;
  v5 = objc_msgSend((id)swift_unknownObjectRetain(), sel_modelDescription);
  sub_1D4441AA4(v5);
  v7 = v6;

  *(_QWORD *)&v4[OBJC_IVAR____TtC13SoundAnalysis16RecursiveMLModel_modelDescription] = v7;
  type metadata accessor for SNModelMetadataUtils();
  v8 = objc_msgSend(a1, sel_modelDescription);
  sub_1D44C976C(v8);
  v10 = v9;

  v11 = sub_1D44ACF30(v10);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v4[OBJC_IVAR____TtC13SoundAnalysis16RecursiveMLModel_feedbackConnections] = v11;

  v14.receiver = v4;
  v14.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v14, sel_init);
  swift_unknownObjectRelease();
  return v12;
}

void sub_1D4441AA4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int64_t v26;
  int v27;
  char v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  int64_t v55;
  int v56;
  char v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  void *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  id v96;
  _BYTE v97[16];
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;

  v2 = type metadata accessor for SNModelMetadataUtils();
  v102 = a1;
  sub_1D44C976C(a1);
  v4 = v3;
  v5 = sub_1D44A531C(v3);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v7 = v5;
    sub_1D4442C3C(MEMORY[0x1E0DEE9D8]);
    v101 = v4 & 0xC000000000000001;
    if ((v4 & 0xC000000000000001) != 0)
    {
      v8 = sub_1D4442CF4();
      v10 = 1;
    }
    else
    {
      v8 = sub_1D4397030(v4);
      v10 = v11 & 1;
    }
    v103 = v8;
    v104 = v9;
    v105 = v10;
    if (v7 < 0)
    {
      __break(1u);
      goto LABEL_74;
    }
    v12 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v4 < 0)
      v12 = v4;
    v100 = v12;
    do
    {
      v14 = v103;
      v13 = v104;
      v15 = v105;
      v16 = sub_1D4442D38();
      sub_1D4396DBC(v16, v17, v18, v19);
      v21 = v20;
      v22 = *(_QWORD *)&v20[OBJC_IVAR___SNModelFeatureConnection_impl + 16];
      v23 = *(_QWORD *)&v20[OBJC_IVAR___SNModelFeatureConnection_impl + 24];
      swift_bridgeObjectRetain();

      if ((sub_1D4442D2C() & 1) == 0)
      {
        sub_1D4442C84();
        v2 = v106;
      }
      v24 = *(_QWORD *)(v2 + 16);
      if (v24 >= *(_QWORD *)(v2 + 24) >> 1)
      {
        sub_1D4442C54();
        v2 = v106;
      }
      *(_QWORD *)(v2 + 16) = v24 + 1;
      v25 = v2 + 16 * v24;
      *(_QWORD *)(v25 + 32) = v22;
      *(_QWORD *)(v25 + 40) = v23;
      if (v101)
      {
        if ((v15 & 1) == 0)
          goto LABEL_75;
        if (sub_1D451B334())
          swift_isUniquelyReferenced_nonNull_native();
        sub_1D42B28FC((uint64_t *)&unk_1EFE567C0);
        sub_1D4442CD4();
        sub_1D4442C9C();
        sub_1D4442D60();
      }
      else
      {
        v26 = sub_1D4442D38();
        v30 = sub_1D44CE3D8(v26, v27, v28, v29);
        v2 = v31;
        v33 = v32;
        sub_1D430E804(v14, v13, v15);
        v103 = v30;
        v104 = v2;
        v105 = v33 & 1;
      }
      --v7;
    }
    while (v7);
    sub_1D4442D6C();
    v6 = v106;
  }
  v99 = v6;
  v34 = sub_1D44A531C(v4);
  if (v34)
  {
    v35 = v34;
    sub_1D4442C3C(MEMORY[0x1E0DEE9D8]);
    v101 = v4 & 0xC000000000000001;
    if ((v4 & 0xC000000000000001) != 0)
    {
      v36 = sub_1D4442CF4();
      v38 = 1;
    }
    else
    {
      v36 = sub_1D4397030(v4);
      v38 = v40 & 1;
    }
    v103 = v36;
    v104 = v37;
    v105 = v38;
    if ((v35 & 0x8000000000000000) == 0)
    {
      v41 = v4 & 0xFFFFFFFFFFFFFF8;
      if (v4 < 0)
        v41 = v4;
      v100 = v41;
      do
      {
        v43 = v103;
        v42 = v104;
        v44 = v105;
        v45 = sub_1D4442D4C();
        sub_1D4396DBC(v45, v46, v47, v48);
        v50 = v49;
        v52 = *(_QWORD *)&v49[OBJC_IVAR___SNModelFeatureConnection_impl];
        v51 = *(_QWORD *)&v49[OBJC_IVAR___SNModelFeatureConnection_impl + 8];
        swift_bridgeObjectRetain();

        if ((sub_1D4442D2C() & 1) == 0)
        {
          sub_1D4442C84();
          v2 = v106;
        }
        v53 = *(_QWORD *)(v2 + 16);
        if (v53 >= *(_QWORD *)(v2 + 24) >> 1)
        {
          sub_1D4442C54();
          v2 = v106;
        }
        *(_QWORD *)(v2 + 16) = v53 + 1;
        v54 = v2 + 16 * v53;
        *(_QWORD *)(v54 + 32) = v52;
        *(_QWORD *)(v54 + 40) = v51;
        if (v101)
        {
          if ((v44 & 1) == 0)
            goto LABEL_76;
          if (sub_1D451B334())
            swift_isUniquelyReferenced_nonNull_native();
          sub_1D42B28FC((uint64_t *)&unk_1EFE567C0);
          sub_1D4442CD4();
          sub_1D4442C9C();
          sub_1D4442D60();
        }
        else
        {
          v55 = sub_1D4442D4C();
          v59 = sub_1D44CE3D8(v55, v56, v57, v58);
          v2 = v60;
          v62 = v61;
          sub_1D430E804(v43, v42, v44);
          v103 = v59;
          v104 = v2;
          v105 = v62 & 1;
        }
        --v35;
      }
      while (v35);
      sub_1D4442D6C();
      swift_bridgeObjectRelease();
      v39 = v106;
      goto LABEL_42;
    }
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    return;
  }
  swift_bridgeObjectRelease();
  v39 = MEMORY[0x1E0DEE9D8];
LABEL_42:
  v63 = v102;
  v64 = objc_msgSend(v102, sel_inputDescriptionsByName);
  sub_1D42E9D88(0, (unint64_t *)&qword_1EFE40360);
  v65 = sub_1D4442CC4();

  MEMORY[0x1E0C80A78](v66);
  v98 = v99;
  v67 = sub_1D44427B4(v65, (uint64_t (*)(uint64_t, uint64_t, id))sub_1D4442B30, (uint64_t)v97);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v68 = objc_msgSend(v63, sel_outputDescriptionsByName);
  v69 = sub_1D4442CC4();

  MEMORY[0x1E0C80A78](v70);
  v98 = v39;
  v101 = sub_1D44427B4(v69, (uint64_t (*)(uint64_t, uint64_t, id))sub_1D4442C28, (uint64_t)v97);
  swift_bridgeObjectRelease();
  v71 = *(_QWORD *)(v39 + 16);
  if (!v71)
  {
LABEL_54:
    v79 = v102;
    v80 = sub_1D432AAD4(v102, (SEL *)&selRef_predictedFeatureName);
    v82 = v81;
    goto LABEL_57;
  }
  swift_bridgeObjectRetain();
  v72 = (uint64_t *)(v39 + 40);
  while (1)
  {
    v74 = *(v72 - 1);
    v73 = *v72;
    swift_bridgeObjectRetain_n();
    v75 = sub_1D432AAD4(v102, (SEL *)&selRef_predictedFeatureName);
    if (!v76)
    {
      sub_1D439E0C8();
      goto LABEL_52;
    }
    if (v74 == v75 && v76 == v73)
      break;
    v78 = sub_1D42F1F04();
    sub_1D439E0C8();
    swift_bridgeObjectRelease();
    if ((v78 & 1) != 0)
      goto LABEL_56;
LABEL_52:
    v72 += 2;
    if (!--v71)
    {
      sub_1D42CB208();
      goto LABEL_54;
    }
  }
  sub_1D42CB208();
  sub_1D439E0C8();
LABEL_56:
  swift_bridgeObjectRelease();
  v80 = 0;
  v82 = 0;
  v79 = v102;
LABEL_57:
  v83 = *(_QWORD *)(v39 + 16);
  if (!v83)
  {
LABEL_69:
    sub_1D42CB208();
    v91 = sub_1D432AAD4(v79, (SEL *)&selRef_predictedProbabilitiesName);
    v93 = v92;
    goto LABEL_72;
  }
  v100 = v82;
  swift_bridgeObjectRetain();
  v84 = (uint64_t *)(v39 + 40);
  while (2)
  {
    v86 = *(v84 - 1);
    v85 = *v84;
    swift_bridgeObjectRetain_n();
    v87 = sub_1D432AAD4(v102, (SEL *)&selRef_predictedProbabilitiesName);
    if (!v88)
    {
      sub_1D439E0C8();
LABEL_67:
      v84 += 2;
      if (!--v83)
      {
        sub_1D42CB208();
        v79 = v102;
        v82 = v100;
        goto LABEL_69;
      }
      continue;
    }
    break;
  }
  if (v86 != v87 || v88 != v85)
  {
    v90 = sub_1D42F1F04();
    sub_1D439E0C8();
    sub_1D435EB80();
    if ((v90 & 1) != 0)
    {
      sub_1D439E0C8();
      goto LABEL_71;
    }
    goto LABEL_67;
  }
  sub_1D439E0C8();
  sub_1D439E0C8();
  sub_1D435EB80();
LABEL_71:
  v91 = 0;
  v93 = 0;
  v79 = v102;
  v82 = v100;
LABEL_72:
  v94 = objc_msgSend(v79, sel_metadata);
  type metadata accessor for MLModelMetadataKey(0);
  sub_1D430DBE8((unint64_t *)&unk_1EFE40480, (uint64_t (*)(uint64_t))type metadata accessor for MLModelMetadataKey, (uint64_t)&unk_1D45235A8);
  v95 = sub_1D451A5CC();

  v96 = objc_allocWithZone(MEMORY[0x1E0C9E968]);
  sub_1D44425EC(v67, v101, v80, v82, v91, v93, v95);
}

id sub_1D444217C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  id v8;
  id v9;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21[2];

  v4 = v2;
  v21[1] = *(id *)MEMORY[0x1E0C80C00];
  v7 = OBJC_IVAR____TtC13SoundAnalysis16RecursiveMLModel_recursiveInputs;
  swift_bridgeObjectRetain();
  sub_1D4364B70();
  swift_bridgeObjectRelease();
  v8 = objc_allocWithZone(MEMORY[0x1E0C9E8F8]);
  v9 = sub_1D4392954();
  if (!v3)
  {
    v11 = v9;
    v12 = objc_msgSend((id)objc_opt_self(), sel_lazyProviderWithFeaturesProvidedBy_addedToFeaturesProvidedBy_, v9, a1);
    v13 = *(void **)(v4 + OBJC_IVAR____TtC13SoundAnalysis16RecursiveMLModel_model);
    v21[0] = 0;
    v14 = objc_msgSend(v13, sel_predictionFromFeatures_options_error_, v12, a2, v21);
    v8 = v21[0];
    if (v14)
    {
      v15 = v14;
      v16 = *(_QWORD *)(v4 + OBJC_IVAR____TtC13SoundAnalysis16RecursiveMLModel_feedbackConnections);
      swift_unknownObjectRetain();
      v17 = v8;
      swift_bridgeObjectRetain();
      v18 = sub_1D4441248(MEMORY[0x1E0DEE9E0], v16, v15);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v4 + v7) = v18;
      swift_bridgeObjectRelease();
      sub_1D44418F4((SEL *)&selRef_outputFeatureNames);
      v20 = objc_allocWithZone(MEMORY[0x1E0C9E8F8]);
      v8 = sub_1D4442574((uint64_t)v15);
    }
    else
    {
      v19 = v21[0];
      sub_1D4519AA4();

      swift_willThrow();
    }
    sub_1D4442D78();

  }
  return v8;
}

uint64_t sub_1D4442458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *i;
  BOOL v8;

  v4 = *(_QWORD *)(a4 + 16);
  if (!v4)
    return 1;
  for (i = (_QWORD *)(a4 + 40); ; i += 2)
  {
    v8 = *(i - 1) == a1 && *i == a2;
    if (v8 || (sub_1D42F1F04() & 1) != 0)
      break;
    if (!--v4)
      return 1;
  }
  return 0;
}

void sub_1D44424C4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for RecursiveMLModel()
{
  return objc_opt_self();
}

id sub_1D4442574(uint64_t a1)
{
  void *v1;
  void *v3;
  id v4;

  v3 = (void *)sub_1D451ABF0();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v1, sel_initWithFeatureProvider_featureNames_, a1, v3);

  swift_unknownObjectRelease();
  return v4;
}

id sub_1D44425EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  id v18;

  sub_1D42E9D88(0, (unint64_t *)&qword_1EFE40360);
  v10 = (void *)sub_1D4442CE4();
  sub_1D42CB208();
  v11 = (void *)sub_1D4442CE4();
  sub_1D435EB80();
  if (a4)
  {
    v12 = (void *)sub_1D451A6C8();
    swift_bridgeObjectRelease();
    if (a6)
      goto LABEL_3;
LABEL_6:
    v13 = 0;
    if (a7)
      goto LABEL_4;
LABEL_7:
    v14 = 0;
    goto LABEL_8;
  }
  v12 = 0;
  if (!a6)
    goto LABEL_6;
LABEL_3:
  v13 = (void *)sub_1D451A6C8();
  swift_bridgeObjectRelease();
  if (!a7)
    goto LABEL_7;
LABEL_4:
  type metadata accessor for MLModelMetadataKey(0);
  sub_1D430DBE8((unint64_t *)&unk_1EFE40480, (uint64_t (*)(uint64_t))type metadata accessor for MLModelMetadataKey, (uint64_t)&unk_1D45235A8);
  v14 = (void *)sub_1D451A5A8();
  swift_bridgeObjectRelease();
LABEL_8:
  v15 = objc_msgSend(v18, sel_initWithInputDescriptions_outputDescriptions_predictedFeatureName_predictedProbabilitiesName_metadata_, v10, v11, v12, v13, v14, a5);

  return v15;
}

unint64_t sub_1D4442778()
{
  unint64_t result;

  result = qword_1EFE51F38;
  if (!qword_1EFE51F38)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453FA14, &_s11DomainErrorON);
    atomic_store(result, (unint64_t *)&qword_1EFE51F38);
  }
  return result;
}

uint64_t sub_1D44427B4(uint64_t isStackAllocationSafe, uint64_t (*a2)(uint64_t, uint64_t, id), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  char v7;
  unint64_t v8;
  unint64_t *v9;
  uint64_t v10;
  unint64_t *v11;
  uint64_t v12;
  _QWORD v14[2];

  v6 = isStackAllocationSafe;
  v14[1] = *MEMORY[0x1E0C80C00];
  v7 = *(_BYTE *)(isStackAllocationSafe + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v9 = (_QWORD *)((char *)v14 - ((8 * v8 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1D4491EBC(0, v8, v9);
    sub_1D4442930(v9, v8, v6, a2);
    if (v3)
      swift_willThrow();
    else
      return v10;
  }
  else
  {
    v11 = (unint64_t *)swift_slowAlloc();
    sub_1D4491EBC(0, v8, v11);
    sub_1D4442930(v11, v8, v6, a2);
    a3 = v12;
    MEMORY[0x1D825E524](v11, -1, -1);
  }
  return a3;
}

void sub_1D4442930(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, id))
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;

  v23 = 0;
  v6 = 0;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v25 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v11 = v10 | (v6 << 6);
      goto LABEL_20;
    }
    v12 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v12 >= v25)
      goto LABEL_24;
    v13 = *(_QWORD *)(v24 + 8 * v12);
    ++v6;
    if (!v13)
    {
      v6 = v12 + 1;
      if (v12 + 1 >= v25)
        goto LABEL_24;
      v13 = *(_QWORD *)(v24 + 8 * v6);
      if (!v13)
      {
        v6 = v12 + 2;
        if (v12 + 2 >= v25)
          goto LABEL_24;
        v13 = *(_QWORD *)(v24 + 8 * v6);
        if (!v13)
          break;
      }
    }
LABEL_19:
    v9 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v6 << 6);
LABEL_20:
    v15 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v11);
    v16 = *v15;
    v17 = v15[1];
    v18 = *(void **)(*(_QWORD *)(a3 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    v19 = v18;
    LOBYTE(v16) = a4(v16, v17, v19);
    swift_bridgeObjectRelease();

    if ((v16 & 1) != 0)
    {
      *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v23++, 1))
      {
        __break(1u);
LABEL_24:
        sub_1D43F723C(a1, a2, v23, (_QWORD *)a3);
        return;
      }
    }
  }
  v14 = v12 + 3;
  if (v14 >= v25)
    goto LABEL_24;
  v13 = *(_QWORD *)(v24 + 8 * v14);
  if (v13)
  {
    v6 = v14;
    goto LABEL_19;
  }
  while (1)
  {
    v6 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v6 >= v25)
      goto LABEL_24;
    v13 = *(_QWORD *)(v24 + 8 * v6);
    ++v14;
    if (v13)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1D4442B24(void *a1)
{
  return sub_1D432AAD4(a1, (SEL *)&selRef_predictedProbabilitiesName);
}

uint64_t sub_1D4442B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1D4442458(a1, a2, a3, *(_QWORD *)(v3 + 16)) & 1;
}

uint64_t _s11DomainErrorOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D4442B8C + 4 * byte_1D453F970[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D4442BAC + 4 * byte_1D453F975[v4]))();
}

_BYTE *sub_1D4442B8C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D4442BAC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4442BB4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4442BBC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4442BC4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4442BCC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s11DomainErrorOMa()
{
  return &_s11DomainErrorON;
}

unint64_t sub_1D4442BEC()
{
  unint64_t result;

  result = qword_1EFE51F48[0];
  if (!qword_1EFE51F48[0])
  {
    result = MEMORY[0x1D825E41C](&unk_1D453F9EC, &_s11DomainErrorON);
    atomic_store(result, qword_1EFE51F48);
  }
  return result;
}

uint64_t sub_1D4442C2C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 176) + 8))(v0, *(_QWORD *)(v1 - 168));
}

void sub_1D4442C3C(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = a1;
  sub_1D42C71F0();
}

void sub_1D4442C54()
{
  sub_1D42C71F0();
}

void sub_1D4442C6C()
{
  sub_1D42C71F0();
}

void sub_1D4442C84()
{
  sub_1D42C71F0();
}

uint64_t sub_1D4442C9C()
{
  return sub_1D451B388();
}

uint64_t sub_1D4442CB0()
{
  return sub_1D451B190();
}

uint64_t sub_1D4442CC4()
{
  return sub_1D451A5CC();
}

uint64_t sub_1D4442CD4()
{
  return sub_1D451AC20();
}

uint64_t sub_1D4442CE4()
{
  return sub_1D451A5A8();
}

uint64_t sub_1D4442CF4()
{
  return sub_1D451B31C();
}

uint64_t sub_1D4442D04()
{
  uint64_t v0;

  sub_1D42B5400(v0 - 112);
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1D4442D20()
{
  uint64_t v0;

  return sub_1D42B294C(v0 - 112, v0 - 144);
}

uint64_t sub_1D4442D2C()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1D4442D38()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4442D4C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4442D60()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;

  return v0(v1 - 144, 0);
}

uint64_t sub_1D4442D6C()
{
  uint64_t v0;

  return sub_1D430E804(*(_QWORD *)(v0 - 112), *(_QWORD *)(v0 - 104), *(_BYTE *)(v0 - 96));
}

uint64_t sub_1D4442D78()
{
  return swift_unknownObjectRelease();
}

void sub_1D4442D80()
{
  char v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1D44434A8();
  sub_1D42DC694(v1);
  sub_1D4443440(objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInt_, v2));
  sub_1D435EBFC();
  if ((v0 & 1) == 0)
  {
    sub_1D42DCEE8();
    sub_1D4443468();
    sub_1D451B400();
    sub_1D4404704();
    sub_1D44434C4();
    v4 = sub_1D435EBD4(v3, sel_description);
    sub_1D43B4B9C();
    sub_1D444345C();
    sub_1D4443430();
    sub_1D42CB5C8();
    sub_1D444341C(0xD000000000000017, 0x80000001D4551120, v5, v6, v7);
    sub_1D4443450();
    sub_1D42B7124();
  }
  sub_1D4443494();
}

void sub_1D4442E48()
{
  char v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1D44434A8();
  sub_1D44BD638(v1);
  sub_1D4443440(objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedInt_, v2));
  sub_1D435EBFC();
  if ((v0 & 1) == 0)
  {
    sub_1D42DCEE8();
    sub_1D444347C();
    sub_1D4404704();
    sub_1D44434C4();
    v4 = sub_1D435EBD4(v3, sel_description);
    sub_1D43B4B9C();
    sub_1D444345C();
    sub_1D4443430();
    sub_1D42CB5C8();
    sub_1D444341C(0xD000000000000017, 0x80000001D4551120, v5, v6, v7);
    sub_1D4443450();
    sub_1D42B7124();
  }
  sub_1D4443494();
}

void sub_1D4442F08()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  sub_1D44434A8();
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, 0);
  v2 = objc_msgSend(v0, sel_compare_, v1);

  if (v2 != (id)1)
  {
    sub_1D42DCEE8();
    sub_1D4443468();
    sub_1D451B400();
    v3 = sub_1D4404704();
    v4 = sub_1D435EBD4(v3, sel_description);
    sub_1D43B4B9C();
    sub_1D444345C();
    sub_1D4443430();
    sub_1D42CB5C8();
    sub_1D444341C(0xD000000000000017, 0x80000001D4551120, v5, v6, 0xD00000000000001ELL);
    sub_1D4443450();
    sub_1D42B7124();
  }
  sub_1D44434D4();
}

id sub_1D4442FF0(void *a1, void *a2)
{
  id v4;
  double v5;
  double v6;
  double v7;

  v4 = objc_msgSend(a1, sel_longLongValue);
  if (v4 == objc_msgSend(a2, sel_longLongValue)
    && (objc_msgSend(a1, sel_doubleValue), v6 = v5, objc_msgSend(a2, sel_doubleValue), v6 == v7))
  {
    return objc_msgSend(a1, sel_isEqual_, a2);
  }
  else
  {
    return 0;
  }
}

void sub_1D4443088()
{
  char v0;
  id v1;
  double v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1D44434A8();
  objc_msgSend(v1, sel_doubleValue);
  sub_1D4443440(objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v2));
  sub_1D435EBFC();
  if ((v0 & 1) == 0)
  {
    sub_1D42DCEE8();
    sub_1D444347C();
    sub_1D4404704();
    sub_1D44434C4();
    v4 = sub_1D435EBD4(v3, sel_description);
    sub_1D43B4B9C();
    sub_1D444345C();
    sub_1D4443430();
    sub_1D42CB5C8();
    sub_1D444341C(0xD000000000000017, 0x80000001D4551120, v5, v6, v7);
    sub_1D4443450();
    sub_1D42B7124();
  }
}

void sub_1D4443168()
{
  char v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  sub_1D44434A8();
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, sub_1D42DC758(v1));
  sub_1D4443440(v2);
  sub_1D435EBFC();
  if ((v0 & 1) == 0)
  {
    sub_1D42DCEE8();
    sub_1D4443468();
    sub_1D451B400();
    v3 = sub_1D4404704();
    v4 = sub_1D435EBD4(v3, sel_description);
    sub_1D43B4B9C();
    sub_1D444345C();
    sub_1D4443430();
    sub_1D42CB5C8();
    sub_1D444341C(0xD000000000000017, 0x80000001D4551120, v5, v6, 0xD00000000000001FLL);
    sub_1D4443450();
    sub_1D42B7124();
  }
  sub_1D44434D4();
}

unint64_t sub_1D444323C(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t result;
  unint64_t v10;
  unsigned __int8 v11;
  _QWORD v12[2];
  uint64_t v13;

  if (sub_1D451A758() != 4)
  {
    sub_1D42DCEE8();
    sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD000000000000025, 0x80000001D4558A20);
    swift_willThrow();
    return v2;
  }
  if ((a2 & 0x2000000000000000) != 0)
    v5 = HIBYTE(a2) & 0xF;
  else
    v5 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v5)
    return 0;
  LODWORD(v2) = 0;
  v6 = (a1 >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0)
    LOBYTE(v6) = 1;
  v7 = 4 << v6;
  v13 = a2 & 0xFFFFFFFFFFFFFFLL;
  v8 = 15;
  while (1)
  {
    result = v8;
    if ((v8 & 0xC) == v7)
      result = sub_1D44434B4();
    v10 = result >> 16;
    if (result >> 16 >= v5)
      break;
    if ((a2 & 0x1000000000000000) != 0)
    {
      result = sub_1D451A7D0();
      v11 = result;
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v12[0] = a1;
      v12[1] = v13;
      v11 = *((_BYTE *)v12 + v10);
    }
    else
    {
      result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      if ((a1 & 0x1000000000000000) == 0)
        result = sub_1D451B46C();
      v11 = *(_BYTE *)(result + v10);
    }
    if ((v8 & 0xC) == v7)
    {
      result = sub_1D44434B4();
      v8 = result;
      if ((a2 & 0x1000000000000000) == 0)
      {
LABEL_20:
        v8 = (v8 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_25;
      }
    }
    else if ((a2 & 0x1000000000000000) == 0)
    {
      goto LABEL_20;
    }
    if (v5 <= v8 >> 16)
      goto LABEL_31;
    v8 = sub_1D451A7B8();
LABEL_25:
    v2 = v11 | ((_DWORD)v2 << 8);
    if (4 * v5 == v8 >> 14)
      return v2;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

id sub_1D444341C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5;

  return sub_1D43EC59C(a1, a2, 1, 0, a5, v5);
}

uint64_t sub_1D4443430()
{
  return sub_1D451A794();
}

id sub_1D4443440(void *a1)
{
  void *v1;

  return sub_1D4442FF0(v1, a1);
}

uint64_t sub_1D4443450()
{
  return swift_bridgeObjectRelease();
}

void sub_1D444345C()
{
  void *v0;

}

uint64_t sub_1D444347C()
{
  return sub_1D451B400();
}

uint64_t sub_1D44434B4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  return sub_1D43D7838(v2, v1, v0);
}

uint64_t sub_1D44434E4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1D4443544()
{
  sub_1D43761A8();
  return swift_deallocClassInstance();
}

uint64_t sub_1D4443564()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D4443588()
{
  sub_1D4443564();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RollingBuffer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RollingBuffer);
}

uint64_t sub_1D44435B4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for RollingBuffer.Reader(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RollingBuffer.Reader);
}

BOOL sub_1D4443614()
{
  return sub_1D444362C();
}

BOOL sub_1D444362C()
{
  id v0;
  id v1;
  char v2;
  char v3;

  if (qword_1EFE47240 != -1)
    swift_once();
  v0 = objc_msgSend((id)qword_1EFE47238, sel_dictionaryRepresentation);
  sub_1D451A5CC();

  v1 = sub_1D4457124();
  v3 = v2;
  sub_1D42BE8B4();
  return (v3 & 1) == 0 && v1 != 0;
}

void sub_1D4443718()
{
  sub_1D4443734();
  sub_1D42B6E24();
}

uint64_t sub_1D4443734()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1D4443760()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1D444378C()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1D44437B8()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1D44437E4()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1D4443810()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1D444383C()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1D4443868()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1D4443894()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1D44438C0()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1D44438EC()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1D4443918()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1D4443944()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1D4443970()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1D444399C()
{
  return swift_unknownObjectRetain();
}

void sub_1D44439C8()
{
  sub_1D4443760();
  sub_1D42B6E24();
}

void sub_1D44439E4()
{
  sub_1D44437E4();
  sub_1D42B6E24();
}

void sub_1D4443A00()
{
  sub_1D4443944();
  sub_1D42B6E24();
}

void sub_1D4443A1C()
{
  sub_1D44438EC();
  sub_1D42B6E24();
}

void sub_1D4443A38()
{
  sub_1D4443868();
  sub_1D42B6E24();
}

void sub_1D4443A54()
{
  sub_1D4443810();
  sub_1D42B6E24();
}

void sub_1D4443A70()
{
  sub_1D444399C();
  sub_1D42B6E24();
}

void sub_1D4443A8C()
{
  sub_1D444378C();
  sub_1D42B6E24();
}

void sub_1D4443AA8()
{
  sub_1D4443894();
  sub_1D42B6E24();
}

void sub_1D4443AC4()
{
  sub_1D4443970();
  sub_1D42B6E24();
}

uint64_t sub_1D4443AE0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v2 = v1;
  *(_QWORD *)(v1 + 16) = MEMORY[0x1E0DEE9D8];
  sub_1D42B28FC((uint64_t *)&unk_1EFE479D0);
  swift_allocObject();
  v4 = sub_1D451A230();
  *(_QWORD *)(v2 + 24) = v4;
  swift_retain();
  sub_1D4443B90((unint64_t)a1, v4, &v6);
  swift_release();

  *(_QWORD *)(v2 + 32) = v6;
  *(_OWORD *)(v2 + 40) = v7;
  *(_OWORD *)(v2 + 56) = v8;
  *(_OWORD *)(v2 + 72) = v9;
  *(_OWORD *)(v2 + 88) = v10;
  return v2;
}

id sub_1D4443B90@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  unsigned int v17;
  id result;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a1;
  v5 = sub_1D42B28FC(&qword_1EFE47998);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D42B28FC((uint64_t *)&unk_1EFE479B0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = a2;
  sub_1D42B28FC((uint64_t *)&unk_1EFE47658);
  sub_1D42BE210((unint64_t *)&unk_1EFE479C0, (uint64_t *)&unk_1EFE479D0, MEMORY[0x1E0C95F48]);
  sub_1D451A3A4();
  sub_1D42B28FC(&qword_1EFE47668);
  sub_1D451A104();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1D42BE210((unint64_t *)&unk_1EFE479A0, (uint64_t *)&unk_1EFE479B0, MEMORY[0x1E0C95B48]);
  v13 = sub_1D451A374();
  sub_1D42B28FC(qword_1EFE477A8);
  swift_allocObject();
  v14 = sub_1D43AEFD8(v13);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v35 = v14;
  sub_1D42BE210(&qword_1EFE477A0, qword_1EFE477A8, (uint64_t)&unk_1D4537AC0);
  v15 = sub_1D451A2E4();
  swift_release();
  swift_retain();
  v16 = (id)v34;
  v17 = objc_msgSend((id)v34, sel_channelCount);
  result = objc_msgSend(v16, sel_sampleRate);
  if ((~*(_QWORD *)&v19 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v19 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v19 < 9.22337204e18)
  {
    v33 = (uint64_t)v19;
    v34 = v17;
    sub_1D42B28FC(&qword_1EFE47798);
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = objc_msgSend((id)objc_opt_self(), sel_mapTableWithKeyOptions_valueOptions_, 0x10000, 5);
    sub_1D42B28FC(&qword_1EFE47990);
    swift_allocObject();
    v21 = sub_1D4312B70(v20);
    sub_1D42B28FC(&qword_1EFE47790);
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = objc_msgSend((id)objc_opt_self(), sel_mapTableWithKeyOptions_valueOptions_, 0x10000, 5);
    sub_1D42B28FC((uint64_t *)&unk_1EFE47980);
    swift_allocObject();
    v23 = sub_1D4312B70(v22);
    sub_1D42B28FC(qword_1EFE47248);
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = objc_msgSend((id)objc_opt_self(), sel_mapTableWithKeyOptions_valueOptions_, 0x10000, 5);
    sub_1D42B28FC((uint64_t *)&unk_1EFE47940);
    swift_allocObject();
    v25 = sub_1D4312B70(v24);
    sub_1D42B28FC(&qword_1EFE47780);
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = objc_msgSend((id)objc_opt_self(), sel_mapTableWithKeyOptions_valueOptions_, 0x10000, 5);
    sub_1D42B28FC((uint64_t *)&unk_1EFE47960);
    swift_allocObject();
    v27 = sub_1D4312B70(v26);
    sub_1D42B28FC(&qword_1EFE47778);
    v28 = swift_allocObject();
    *(_QWORD *)(v28 + 16) = objc_msgSend((id)objc_opt_self(), sel_mapTableWithKeyOptions_valueOptions_, 0x10000, 5);
    sub_1D42B28FC((uint64_t *)&unk_1EFE47950);
    swift_allocObject();
    v29 = sub_1D4312B70(v28);
    sub_1D42B28FC(&qword_1EFE47788);
    v30 = swift_allocObject();
    *(_QWORD *)(v30 + 16) = objc_msgSend((id)objc_opt_self(), sel_mapTableWithKeyOptions_valueOptions_, 0x10000, 5);
    sub_1D42B28FC((uint64_t *)&unk_1EFE47970);
    swift_allocObject();
    v31 = sub_1D4312B70(v30);
    result = (id)swift_release();
    v32 = v34;
    *a3 = v15;
    a3[1] = v32;
    a3[2] = v33;
    a3[3] = v21;
    a3[4] = v23;
    a3[5] = v25;
    a3[6] = v27;
    a3[7] = v29;
    a3[8] = v31;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

id sub_1D44440C0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  unsigned int v14;
  id result;
  double v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  id v41;
  uint64_t v42;

  v40 = a2;
  v41 = a1;
  v2 = sub_1D42B28FC(&qword_1EFE52058);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D42B28FC((uint64_t *)&unk_1EFE52060);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42B28FC(&qword_1EFE4BC70);
  sub_1D42B28FC((uint64_t *)&unk_1EFE47658);
  sub_1D42BE210(&qword_1EFE52070, &qword_1EFE4BC70, MEMORY[0x1E0C95850]);
  sub_1D451A3A4();
  sub_1D42B28FC(&qword_1EFE47668);
  sub_1D451A104();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1D42BE210(&qword_1EFE52078, (uint64_t *)&unk_1EFE52060, MEMORY[0x1E0C95B48]);
  sub_1D451A374();
  sub_1D42B28FC(&qword_1EFE52080);
  sub_1D42B6F40();
  v10 = sub_1D42E3B40();
  v11 = sub_1D43AEFD8(v10);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v42 = v11;
  sub_1D42BE210(&qword_1EFE52088, &qword_1EFE52080, (uint64_t)&unk_1D4537AC0);
  v12 = sub_1D451A2E4();
  swift_release();
  swift_retain();
  v13 = v41;
  v14 = objc_msgSend(v41, sel_channelCount);
  result = objc_msgSend(v13, sel_sampleRate);
  if ((~*(_QWORD *)&v16 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v16 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v16 < 9.22337204e18)
  {
    v17 = v14;
    v41 = (id)(uint64_t)v16;
    sub_1D42B28FC(&qword_1EFE47798);
    v18 = sub_1D42B6F40();
    v19 = (void *)objc_opt_self();
    *(_QWORD *)(v18 + 16) = sub_1D4444B14(v19);
    sub_1D42B28FC(&qword_1EFE47990);
    sub_1D42B6F40();
    v20 = sub_1D42E3B40();
    v21 = sub_1D4312B70(v20);
    sub_1D42B28FC(&qword_1EFE47790);
    sub_1D42B6F40();
    v22 = (void *)sub_1D4444B24();
    *(_QWORD *)(v18 + 16) = sub_1D4444B14(v22);
    sub_1D42B28FC((uint64_t *)&unk_1EFE47980);
    sub_1D42B6F40();
    v23 = sub_1D42E3B40();
    v24 = sub_1D4312B70(v23);
    sub_1D42B28FC(qword_1EFE47248);
    sub_1D42B6F40();
    v25 = (void *)sub_1D4444B24();
    *(_QWORD *)(v18 + 16) = sub_1D4444B14(v25);
    sub_1D42B28FC((uint64_t *)&unk_1EFE47940);
    sub_1D42B6F40();
    v26 = sub_1D42E3B40();
    v27 = sub_1D4312B70(v26);
    sub_1D42B28FC(&qword_1EFE47780);
    sub_1D42B6F40();
    v28 = (void *)sub_1D4444B24();
    *(_QWORD *)(v18 + 16) = sub_1D4444B14(v28);
    sub_1D42B28FC((uint64_t *)&unk_1EFE47960);
    sub_1D42B6F40();
    v29 = sub_1D42E3B40();
    v30 = sub_1D4312B70(v29);
    sub_1D42B28FC(&qword_1EFE47778);
    sub_1D42B6F40();
    v31 = (void *)sub_1D4444B24();
    *(_QWORD *)(v18 + 16) = sub_1D4444B14(v31);
    sub_1D42B28FC((uint64_t *)&unk_1EFE47950);
    sub_1D42B6F40();
    v32 = sub_1D42E3B40();
    v33 = sub_1D4312B70(v32);
    sub_1D42B28FC(&qword_1EFE47788);
    sub_1D42B6F40();
    v34 = (void *)sub_1D4444B24();
    *(_QWORD *)(v18 + 16) = sub_1D4444B14(v34);
    sub_1D42B28FC((uint64_t *)&unk_1EFE47970);
    sub_1D42B6F40();
    v35 = sub_1D42E3B40();
    v36 = sub_1D4312B70(v35);
    result = (id)swift_release();
    v37 = v40;
    v38 = (uint64_t)v41;
    *v40 = v12;
    v37[1] = v17;
    v37[2] = v38;
    v37[3] = v21;
    v37[4] = v24;
    v37[5] = v27;
    v37[6] = v30;
    v37[7] = v33;
    v37[8] = v36;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_1D4444510(uint64_t a1, uint64_t a2, void (*a3)(void *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  void *v7;
  uint64_t ObjectType;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  _BYTE __dst[72];
  uint64_t v20;

  v20 = a5;
  sub_1D444471C(a1);
  ObjectType = swift_getObjectType();
  memcpy(__dst, (const void *)(v6 + 32), sizeof(__dst));
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(a2 + 16))(__dst, ObjectType, a2);
  if (v7)
  {
    v14 = v7;
    a3(v7);

  }
  else
  {
    v15 = sub_1D42B8DB4();
    *(_QWORD *)(v15 + 16) = a3;
    *(_QWORD *)(v15 + 24) = a4;
    v16 = sub_1D42B8DB4();
    *(_QWORD *)(v16 + 16) = v20;
    *(_QWORD *)(v16 + 24) = a6;
    swift_retain();
    swift_retain();
    sub_1D42B28FC((uint64_t *)&unk_1EFE4FCF0);
    sub_1D42BE210(&qword_1EFE4FAF0, (uint64_t *)&unk_1EFE4FCF0, MEMORY[0x1E0C95D90]);
    v17 = sub_1D451A344();
    swift_release();
    swift_release();
    swift_release();
    sub_1D42B28FC((uint64_t *)&unk_1EFE51A30);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D45261D0;
    *(_QWORD *)(inited + 32) = a1;
    *(_QWORD *)(inited + 40) = a2;
    *(_QWORD *)(inited + 48) = v17;
    swift_beginAccess();
    swift_retain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D44B4D88();
    swift_endAccess();
    swift_release();
    swift_setDeallocating();
    sub_1D43476C4();
  }
}

uint64_t sub_1D444471C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t i;

  result = sub_1D42B8E84();
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = 0;
    for (i = v4 + 48; *(_QWORD *)(i - 16) != a1; i += 24)
    {
      if (v5 == ++v6)
        return result;
    }
    if (v6 >= v5)
    {
      __break(1u);
    }
    else
    {
      swift_retain();
      sub_1D451A1F4();
      sub_1D42B8E84();
      sub_1D43FACE0(v6);
      swift_endAccess();
      swift_release();
      swift_unknownObjectRelease();
      return sub_1D42FC448();
    }
  }
  return result;
}

uint64_t sub_1D44447F0()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = sub_1D42B8E84();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = v2 + 48;
    do
    {
      v5 = *(_QWORD *)(v4 - 16);
      v4 += 24;
      swift_unknownObjectRetain();
      swift_retain();
      sub_1D444471C(v5);
      sub_1D42FC448();
      swift_unknownObjectRelease();
      --v3;
    }
    while (v3);
    return sub_1D42BE8B4();
  }
  return result;
}

void sub_1D4444880(void *a1)
{
  id v2;

  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {
    v2 = a1;
    sub_1D451A218();

  }
  else
  {
    sub_1D42FBCD0();
    swift_allocError();
    swift_willThrow();
  }
}

uint64_t sub_1D444491C()
{
  return sub_1D451A20C();
}

uint64_t sub_1D444494C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1D42FC448();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1D44449D0()
{
  sub_1D444494C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AudioStreamAnalyzer()
{
  return objc_opt_self();
}

uint64_t sub_1D4444A10()
{
  return MEMORY[0x1E0DEA528];
}

uint64_t sub_1D4444A1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for AudioStreamAnalyzer();
  result = sub_1D451B418();
  *a1 = result;
  return result;
}

uint64_t sub_1D4444A58()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D4444A7C(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

void sub_1D4444AA0()
{
  sub_1D44438C0();
  sub_1D42B6E24();
}

void sub_1D4444ABC()
{
  sub_1D44437B8();
  sub_1D42B6E24();
}

void sub_1D4444AD8()
{
  sub_1D444383C();
  sub_1D42B6E24();
}

void sub_1D4444AF4()
{
  sub_1D4443918();
  sub_1D42B6E24();
}

id sub_1D4444B14(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 1892), 0x10000, 5);
}

uint64_t sub_1D4444B24()
{
  return objc_opt_self();
}

uint64_t sub_1D4444B30(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x646E756F66 && a2 == 0xE500000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1953722220 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D4444C04(char a1)
{
  if ((a1 & 1) != 0)
    return 1953722220;
  else
    return 0x646E756F66;
}

uint64_t sub_1D4444C30(_QWORD *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v3 = sub_1D42B28FC(&qword_1EFE520F0);
  v4 = sub_1D4445AA8(v3);
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB210();
  v7 = v6 - v5;
  v18 = sub_1D42B28FC(&qword_1EFE520F8);
  v8 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  sub_1D42CB210();
  v11 = v10 - v9;
  v12 = sub_1D42B28FC(&qword_1EFE52100);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  sub_1D42CB210();
  v16 = v15 - v14;
  sub_1D42B5528(a1, a1[3]);
  sub_1D4445744();
  sub_1D451BA24();
  if ((a2 & 1) != 0)
  {
    sub_1D4445ABC();
    sub_1D437EC40();
    (*(void (**)(uint64_t))(v19 + 8))(v7);
  }
  else
  {
    sub_1D44457BC();
    sub_1D437EC40();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
}

void sub_1D4444DBC()
{
  sub_1D451B958();
  sub_1D451B964();
  sub_1D451B994();
  sub_1D42EA500();
}

uint64_t sub_1D4444DFC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = sub_1D42B28FC(&qword_1EFE520B8);
  v3 = sub_1D4445AA8(v2);
  MEMORY[0x1E0C80A78](v3);
  sub_1D42CB210();
  v29 = v5 - v4;
  v28 = sub_1D42B28FC(&qword_1EFE520C0);
  v6 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  sub_1D42CB210();
  v9 = v8 - v7;
  v10 = sub_1D42B28FC(&qword_1EFE520C8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1D42CB210();
  v14 = v13 - v12;
  sub_1D42B5528(a1, a1[3]);
  sub_1D4445744();
  sub_1D451BA0C();
  if (v31)
    return sub_1D42B5400((uint64_t)a1);
  v27 = v11;
  v15 = sub_1D451B6D0();
  v16 = *(_QWORD *)(v15 + 16);
  if (!v16
    || (v17 = *(unsigned __int8 *)(v15 + 32),
        sub_1D43B7948(1, v16, v15, v15 + 32, 0, (2 * v16) | 1),
        v19 = v18,
        v21 = v20,
        swift_bridgeObjectRelease(),
        v19 != v21 >> 1))
  {
    v23 = sub_1D451B460();
    swift_allocError();
    v25 = v24;
    sub_1D42B28FC(&qword_1EFE49ED0);
    *v25 = &type metadata for FileServerDiscoveryState;
    sub_1D451B61C();
    sub_1D451B454();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x1E0DEC450], v23);
    swift_willThrow();
    sub_1D4371170();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v14, v10);
    return sub_1D42B5400((uint64_t)a1);
  }
  if ((v17 & 1) != 0)
  {
    sub_1D4445ABC();
    sub_1D43FABB8();
    v22 = v27;
    (*(void (**)(uint64_t))(v30 + 8))(v29);
  }
  else
  {
    sub_1D44457BC();
    sub_1D43FABB8();
    v22 = v27;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v28);
  }
  sub_1D4371170();
  (*(void (**)(uint64_t, unint64_t))(v22 + 8))(v14, v21);
  sub_1D42B5400((uint64_t)a1);
  return v17;
}

void sub_1D4445118()
{
  sub_1D4444DBC();
}

uint64_t sub_1D4445134()
{
  char *v0;

  return sub_1D4444C04(*v0);
}

uint64_t sub_1D444513C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D4444B30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D4445160()
{
  sub_1D4445744();
  return sub_1D451BA3C();
}

uint64_t sub_1D4445188()
{
  sub_1D4445744();
  return sub_1D451BA48();
}

uint64_t sub_1D44451B0()
{
  sub_1D44457BC();
  return sub_1D451BA3C();
}

uint64_t sub_1D44451D8()
{
  sub_1D44457BC();
  return sub_1D451BA48();
}

uint64_t sub_1D4445200()
{
  sub_1D4445780();
  return sub_1D451BA3C();
}

uint64_t sub_1D4445228()
{
  sub_1D4445780();
  return sub_1D451BA48();
}

uint64_t sub_1D4445250@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1D4444DFC(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_1D444527C(_QWORD *a1)
{
  char *v1;

  return sub_1D4444C30(a1, *v1);
}

void sub_1D4445294()
{
  sub_1D451B958();
  sub_1D451B964();
  sub_1D451B994();
  sub_1D42EA500();
}

void sub_1D44452D0(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E97A8620;
}

void sub_1D4445310()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_class *v10;
  char *v11;
  char *v12;
  objc_super v13;

  v1 = (_QWORD *)(v0 + OBJC_IVAR___SNFileServerDiscoveryResult_impl);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR___SNFileServerDiscoveryResult_impl);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR___SNFileServerDiscoveryResult_impl + 8);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR___SNFileServerDiscoveryResult_impl + 16);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR___SNFileServerDiscoveryResult_impl + 24);
  v7 = v1[4];
  v6 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (objc_class *)type metadata accessor for SNFileServerInfo();
  v11 = (char *)objc_allocWithZone(v10);
  v12 = &v11[OBJC_IVAR___SNFileServerInfo_impl];
  *(_QWORD *)v12 = v3;
  *((_QWORD *)v12 + 1) = v2;
  *((_QWORD *)v12 + 2) = v5;
  *((_QWORD *)v12 + 3) = v4;
  *((_QWORD *)v12 + 4) = v7;
  *((_QWORD *)v12 + 5) = v6;
  *((_QWORD *)v12 + 6) = v9;
  *((_QWORD *)v12 + 7) = v8;
  v13.receiver = v11;
  v13.super_class = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  objc_msgSendSuper2(&v13, sel_init);
  sub_1D42EA500();
}

uint64_t sub_1D44453F0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___SNFileServerDiscoveryResult_impl + 64);
}

id SNFileServerDiscoveryResult.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SNFileServerDiscoveryResult.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SNFileServerDiscoveryResult.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SNFileServerDiscoveryResult();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SNFileServerDiscoveryResult()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNFileServerDiscoveryResult()
{
  return swift_lookUpClassMethod();
}

uint64_t initializeWithCopy for FileServerDiscoveryResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FileServerDiscoveryResult(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for FileServerDiscoveryResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

ValueMetadata *type metadata accessor for FileServerDiscoveryResult()
{
  return &type metadata for FileServerDiscoveryResult;
}

ValueMetadata *type metadata accessor for FileServerDiscoveryState()
{
  return &type metadata for FileServerDiscoveryState;
}

unint64_t sub_1D44456C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFE520A0;
  if (!qword_1EFE520A0)
  {
    v1 = sub_1D42B8B10(&qword_1EFE520A8);
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EFE520A0);
  }
  return result;
}

unint64_t sub_1D4445708()
{
  unint64_t result;

  result = qword_1EFE520B0;
  if (!qword_1EFE520B0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453FCD4, &type metadata for FileServerDiscoveryState);
    atomic_store(result, (unint64_t *)&qword_1EFE520B0);
  }
  return result;
}

unint64_t sub_1D4445744()
{
  unint64_t result;

  result = qword_1EFE520D0;
  if (!qword_1EFE520D0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453FF20, &type metadata for FileServerDiscoveryState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE520D0);
  }
  return result;
}

unint64_t sub_1D4445780()
{
  unint64_t result;

  result = qword_1EFE520E0;
  if (!qword_1EFE520E0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453FED0, &type metadata for FileServerDiscoveryState.LostCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE520E0);
  }
  return result;
}

unint64_t sub_1D44457BC()
{
  unint64_t result;

  result = qword_1EFE520E8;
  if (!qword_1EFE520E8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453FE80, &type metadata for FileServerDiscoveryState.FoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE520E8);
  }
  return result;
}

uint64_t _s13SoundAnalysis24FileServerDiscoveryStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D4445844 + 4 * byte_1D453FB95[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D4445878 + 4 * byte_1D453FB90[v4]))();
}

uint64_t sub_1D4445878(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4445880(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4445888);
  return result;
}

uint64_t sub_1D4445894(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D444589CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D44458A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D44458A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FileServerDiscoveryState.CodingKeys()
{
  return &type metadata for FileServerDiscoveryState.CodingKeys;
}

ValueMetadata *type metadata accessor for FileServerDiscoveryState.FoundCodingKeys()
{
  return &type metadata for FileServerDiscoveryState.FoundCodingKeys;
}

ValueMetadata *type metadata accessor for FileServerDiscoveryState.LostCodingKeys()
{
  return &type metadata for FileServerDiscoveryState.LostCodingKeys;
}

unint64_t sub_1D44458E8()
{
  unint64_t result;

  result = qword_1EFE52108;
  if (!qword_1EFE52108)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453FE58, &type metadata for FileServerDiscoveryState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52108);
  }
  return result;
}

unint64_t sub_1D4445928()
{
  unint64_t result;

  result = qword_1EFE52110;
  if (!qword_1EFE52110)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453FD78, &type metadata for FileServerDiscoveryState.FoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52110);
  }
  return result;
}

unint64_t sub_1D4445968()
{
  unint64_t result;

  result = qword_1EFE52118;
  if (!qword_1EFE52118)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453FDA0, &type metadata for FileServerDiscoveryState.FoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52118);
  }
  return result;
}

unint64_t sub_1D44459A8()
{
  unint64_t result;

  result = qword_1EFE52120;
  if (!qword_1EFE52120)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453FD28, &type metadata for FileServerDiscoveryState.LostCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52120);
  }
  return result;
}

unint64_t sub_1D44459E8()
{
  unint64_t result;

  result = qword_1EFE52128;
  if (!qword_1EFE52128)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453FD50, &type metadata for FileServerDiscoveryState.LostCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52128);
  }
  return result;
}

unint64_t sub_1D4445A28()
{
  unint64_t result;

  result = qword_1EFE52130;
  if (!qword_1EFE52130)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453FDC8, &type metadata for FileServerDiscoveryState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52130);
  }
  return result;
}

unint64_t sub_1D4445A68()
{
  unint64_t result;

  result = qword_1EFE52138;
  if (!qword_1EFE52138)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453FDF0, &type metadata for FileServerDiscoveryState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52138);
  }
  return result;
}

uint64_t sub_1D4445AA8(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = *(_QWORD *)(result - 8);
  *(_QWORD *)(v1 - 96) = result;
  return result;
}

unint64_t sub_1D4445ABC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_1D4445780();
}

void sub_1D4445AC8()
{
  sub_1D451AA1C();
  sub_1D42B6E24();
}

uint64_t sub_1D4445AEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload() != 1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 32))(a3, v3);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 32))(a2, v3, *(_QWORD *)(a1 + 24));
  return swift_willThrowTypedImpl();
}

uint64_t sub_1D4445B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  sub_1D42B8B10(&qword_1EFE49BB0);
  v6[9] = sub_1D451B9E8();
  v7 = sub_1D451B160();
  v6[10] = v7;
  v6[11] = *(_QWORD *)(v7 - 8);
  v6[12] = sub_1D4448C60();
  v8 = sub_1D451B160();
  v6[13] = v8;
  v6[14] = *(_QWORD *)(v8 - 8);
  v6[15] = sub_1D4448B5C();
  v6[16] = sub_1D42E3CEC();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4445C34()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;

  v1 = v0[7];
  v2 = v0[8];
  v3 = v0[5];
  v4 = v0[6];
  v5 = v0[4];
  swift_getFunctionTypeMetadata0();
  sub_1D451B7CC();
  swift_allocObject();
  v6 = sub_1D451A95C();
  v8 = v7;
  v0[17] = v6;
  v9 = (_QWORD *)sub_1D438C4E4();
  v9[2] = v2;
  v9[3] = v5;
  v9[4] = v3;
  *v8 = &unk_1EFE521A0;
  v8[1] = v9;
  v10 = (_QWORD *)sub_1D438C4E4();
  v10[2] = v2;
  v10[3] = v4;
  v10[4] = v1;
  v8[2] = &unk_1EFE521B0;
  v8[3] = v10;
  sub_1D451AA1C();
  v11 = swift_task_alloc();
  v0[18] = v11;
  *(_QWORD *)(v11 + 16) = v2;
  swift_retain();
  swift_retain();
  v12 = (_QWORD *)sub_1D4448CF0();
  v0[19] = v12;
  *v12 = v0;
  v12[1] = sub_1D4445D64;
  return sub_1D4446D8C(v0[16], v6, (uint64_t)sub_1D4448604, v11, v0[10]);
}

uint64_t sub_1D4445D64()
{
  sub_1D42B8E20();
  sub_1D430C324();
  swift_bridgeObjectRelease();
  sub_1D42E3E5C();
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D4445DAC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v16;
  uint64_t v17;

  v1 = v0[15];
  v2 = v0 + 15;
  v3 = v0 + 13;
  v4 = v0[10];
  sub_1D4448D30(*(uint64_t (**)(uint64_t))(v0[14] + 16));
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v1, 1, v4) == 1)
  {
    v5 = *(void (**)(uint64_t, uint64_t))(v0[14] + 8);
    v5(v0[16], v0[13]);
  }
  else
  {
    v6 = v0[12];
    v7 = v0[9];
    sub_1D4448D30(*(uint64_t (**)(uint64_t))(v0[11] + 32));
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v6, 1, v7) != 1)
    {
      sub_1D4445AEC(v0[9], (uint64_t)(v0 + 2), v0[3]);
      v16 = v0[8];
      v17 = v0[3];
      sub_1D4448D38(v0[14]);
      v10 = v17;
      v11 = 0;
      v12 = 1;
      v13 = v16;
      goto LABEL_6;
    }
    v8 = v0[11];
    sub_1D438E8D0(v0[14]);
    v5 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v3 = v0 + 10;
    v2 = v0 + 12;
  }
  v9 = v0[8];
  v5(*v2, *v3);
  sub_1D4448D5C();
  v13 = v9;
LABEL_6:
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v10, v11, v12, v13);
  swift_task_dealloc();
  sub_1D42E3E5C();
  sub_1D42E3E54();
  v14 = (uint64_t (*)(void))sub_1D42E3DD0();
  return v14();
}

uint64_t static AsyncUtils.sleepUntilCancelled()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_1D4448D74();
  v0[7] = v1;
  v0[8] = *(_QWORD *)(v1 - 8);
  v0[9] = sub_1D4448B5C();
  v0[10] = sub_1D42E3CEC();
  v2 = sub_1D451B4D8();
  v0[11] = v2;
  v0[12] = *(_QWORD *)(v2 - 8);
  v0[13] = sub_1D4448C60();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4445F98()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;

  sub_1D438C15C();
  if ((sub_1D451AB54() & 1) != 0)
  {
    sub_1D4448D18();
    sub_1D42E3E5C();
    sub_1D42E3E54();
    return sub_1D4448B24(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    sub_1D4448CF8();
    sub_1D451BA30();
    sub_1D4448CA4();
    sub_1D4448B88();
    sub_1D42B4EF4(&qword_1EFE52148, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0BA0], MEMORY[0x1E0DF0BB0]);
    sub_1D4448C38();
    sub_1D42B4EF4(&qword_1EFE52150, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0B60], MEMORY[0x1E0DF0B90]);
    sub_1D4448C10();
    sub_1D4448BE0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v3 = (_QWORD *)swift_task_alloc();
    sub_1D4448BBC(v3, (uint64_t)sub_1D444605C);
    return sub_1D4448B08();
  }
}

uint64_t sub_1D444605C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  sub_1D42E39FC();
  sub_1D4448CC4();
  *v3 = *v1;
  *(_QWORD *)(v2 + 128) = v0;
  swift_task_dealloc();
  sub_1D4448D68();
  if (!v0)
    sub_1D438E8D0(*(_QWORD *)(v2 + 96));
  sub_1D42B8EC8();
  return sub_1D4448B74();
}

uint64_t sub_1D44460C8()
{
  uint64_t v0;
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  sub_1D438C15C();
  v1 = *(void **)(v0 + 128);
  sub_1D438E8D0(*(_QWORD *)(v0 + 96));

  if ((sub_1D451AB54() & 1) != 0)
  {
    sub_1D42E3E5C();
    sub_1D42E3E54();
    sub_1D438C1C4();
    return sub_1D4448B24(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 64);
    v3 = sub_1D451BA30();
    v5 = v4;
    sub_1D4448CA4();
    *(_QWORD *)(v0 + 40) = v3;
    *(_QWORD *)(v0 + 48) = v5;
    *(_QWORD *)(v0 + 16) = 0;
    *(_QWORD *)(v0 + 24) = 0;
    *(_BYTE *)(v0 + 32) = 1;
    sub_1D42B4EF4(&qword_1EFE52148, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0BA0], MEMORY[0x1E0DF0BB0]);
    sub_1D451B8C8();
    sub_1D42B4EF4(&qword_1EFE52150, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0B60], MEMORY[0x1E0DF0B90]);
    sub_1D451B4E4();
    sub_1D4448BE0(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v6;
    *v6 = v0;
    v6[1] = sub_1D444605C;
    return sub_1D4448B08();
  }
}

uint64_t sub_1D4446210@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DF07B8];
  v3 = sub_1D451AADC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1D4446258(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD *v55;
  uint64_t v56;
  char *v57;
  __int128 v58;

  v54 = a2;
  v55 = a1;
  v4 = sub_1D42B28FC(&qword_1EFE4DC70);
  MEMORY[0x1E0C80A78](v4);
  v50 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D451AB00();
  v46 = *(_QWORD *)(v6 - 8);
  v7 = *(_QWORD *)(v46 + 64);
  v8 = MEMORY[0x1E0C80A78](v6);
  v49 = (uint64_t)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v46 - v9;
  v11 = sub_1D451AADC();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v46 - v12;
  v14 = sub_1D451AB24();
  v52 = *(_QWORD *)(v14 - 8);
  v53 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v46 - v15;
  v17 = sub_1D451B160();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v46 - v22;
  sub_1D4448D5C();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v24, v25, v26, v6);
  v56 = a3;
  v57 = v23;
  sub_1D4446210((uint64_t)v13);
  v48 = v16;
  sub_1D451AB30();
  v47 = v18;
  v27 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v51 = v17;
  v27(v21, v23, v17);
  if (sub_1D4448D50((uint64_t)v21) == 1)
  {
    v44 = sub_1D4448D44();
    v45(v44, v51);
    result = sub_1D451B55C();
    __break(1u);
  }
  else
  {
    v28 = v46;
    v29 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
    v29(v10, v21, v6);
    sub_1D451AAC4();
    sub_1D4448D5C();
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v30, v31, v32, v33);
    v34 = v49;
    sub_1D4340870(v49, (uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 16));
    v35 = (*(unsigned __int8 *)(v28 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    v36 = (char *)swift_allocObject();
    *((_QWORD *)v36 + 2) = 0;
    *((_QWORD *)v36 + 3) = 0;
    *((_QWORD *)v36 + 4) = a3;
    *((_QWORD *)v36 + 5) = v54;
    v29(&v36[v35], (char *)v34, v6);
    swift_bridgeObjectRetain();
    sub_1D444D358();
    v38 = v37;
    v39 = v53;
    v40 = MEMORY[0x1D825E41C](MEMORY[0x1E0DF0848], v53);
    AsyncSequence.toAnyAsyncSequence()(v39, v40);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v6);
    v41 = sub_1D4448D44();
    v42(v41, v39);
    *v55 = v58;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v23, v51);
    return v38;
  }
  return result;
}

uint64_t sub_1D44465F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1D451AB00();
  v5 = sub_1D451B160();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a2, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a2, 0, 1, v4);
}

uint64_t sub_1D4446670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_1D444668C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v2;
  v3 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = v3;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v4;
  *v4 = v0;
  v4[1] = sub_1D4446720;
  return sub_1D451B478();
}

uint64_t sub_1D4446720()
{
  sub_1D42B8E20();
  sub_1D430C324();
  sub_1D42E3E5C();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4446758()
{
  uint64_t v0;

  sub_1D4448CD4();
  sub_1D451AAF4();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4446784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[11] = a4;
  v5[12] = a5;
  v5[9] = a2;
  v5[10] = a3;
  return swift_task_switch();
}

uint64_t sub_1D44467A0()
{
  _QWORD *v0;
  uint64_t FunctionTypeMetadata0;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t result;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t);
  uint64_t v42;

  FunctionTypeMetadata0 = swift_getFunctionTypeMetadata0();
  swift_bridgeObjectRetain();
  v2 = sub_1D451A938();
  v42 = v2;
  v3 = sub_1D437EC8C();
  if (v2 == MEMORY[0x1D825C340](v3))
  {
LABEL_13:
    swift_bridgeObjectRelease();
    if (sub_1D4448C4C())
    {
      v31 = (_QWORD *)swift_task_alloc();
      v0[13] = v31;
      sub_1D42B28FC(&qword_1EFE4B6E0);
      *v31 = v0;
      v31[1] = sub_1D4446BE8;
      return sub_1D451AA88();
    }
    else
    {
      v41 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EFE52208 + dword_1EFE52208);
      v33 = (_QWORD *)swift_task_alloc();
      v0[14] = v33;
      *v33 = v0;
      v33[1] = sub_1D4446C14;
      return v41(0, 0);
    }
  }
  else
  {
    v34 = v0 + 2;
    v35 = v0[10] + 32;
    v4 = &qword_1EFE4DC70;
    v36 = FunctionTypeMetadata0;
    v37 = v0;
    while (1)
    {
      sub_1D437EC8C();
      v5 = sub_1D451A9D4();
      sub_1D451A968();
      if ((v5 & 1) == 0)
        break;
      v6 = v0[11];
      v38 = v0[12];
      v7 = v0[10];
      v39 = *(_OWORD *)(v35 + 16 * v2);
      swift_retain();
      swift_bridgeObjectRetain();
      MEMORY[0x1D825C34C](&v42, v7, FunctionTypeMetadata0);
      swift_bridgeObjectRelease();
      sub_1D42B28FC(v4);
      v8 = swift_task_alloc();
      v9 = sub_1D451AAC4();
      sub_1D4448D5C();
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v10, v11, v12, v9);
      v13 = sub_1D451AB00();
      v14 = v4;
      v15 = *(_QWORD *)(v13 - 8);
      v16 = *(_QWORD *)(v15 + 64);
      v17 = swift_task_alloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v17, v6, v13);
      v18 = (*(unsigned __int8 *)(v15 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      v19 = (char *)swift_allocObject();
      *((_QWORD *)v19 + 2) = 0;
      *((_QWORD *)v19 + 3) = 0;
      *((_QWORD *)v19 + 4) = v38;
      v20 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 32);
      v4 = v14;
      v20(&v19[v18], v17, v13);
      *(_OWORD *)&v19[(v16 + v18 + 7) & 0xFFFFFFFFFFFFFFF8] = v39;
      sub_1D438C438();
      v21 = swift_task_alloc();
      v40 = v8;
      sub_1D42FC068(v8, v21, v14);
      LODWORD(v8) = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v21, 1, v9);
      swift_retain();
      if ((_DWORD)v8 == 1)
      {
        sub_1D42D7018(v21, v14);
      }
      else
      {
        sub_1D451AAB8();
        v22 = sub_1D4448D44();
        v23(v22, v9);
      }
      sub_1D42E3E5C();
      if (*((_QWORD *)v19 + 2))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v24 = sub_1D451AA70();
        v26 = v25;
        swift_unknownObjectRelease();
      }
      else
      {
        v24 = 0;
        v26 = 0;
      }
      v0 = v37;
      v27 = *(_QWORD *)v37[9];
      v28 = swift_allocObject();
      *(_QWORD *)(v28 + 16) = &unk_1EFE52200;
      *(_QWORD *)(v28 + 24) = v19;
      v29 = (_QWORD *)(v26 | v24);
      if (v26 | v24)
      {
        v29 = v34;
        *v34 = 0;
        v34[1] = 0;
        v37[4] = v24;
        v37[5] = v26;
      }
      v30 = v37[10];
      v37[6] = 1;
      v37[7] = v29;
      v37[8] = v27;
      swift_task_create();
      swift_release();
      swift_release();
      sub_1D42D7018(v40, v4);
      sub_1D42E3E54();
      v2 = v42;
      FunctionTypeMetadata0 = v36;
      if (v2 == MEMORY[0x1D825C340](v30, v36))
        goto LABEL_13;
    }
    result = sub_1D451B430();
    __break(1u);
  }
  return result;
}

uint64_t sub_1D4446BE8()
{
  uint64_t v0;

  sub_1D42B8E20();
  sub_1D430C324();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4446C14()
{
  uint64_t v0;

  sub_1D4448CDC();
  sub_1D430C324();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4446C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t);

  v7[2] = a4;
  v7[3] = a7;
  v9 = swift_task_alloc();
  v7[4] = v9;
  v10 = sub_1D451AAD0();
  v7[5] = v10;
  v7[6] = *(_QWORD *)(v10 - 8);
  v7[7] = swift_task_alloc();
  v13 = (uint64_t (*)(uint64_t))((char *)a5 + *a5);
  v11 = (_QWORD *)swift_task_alloc();
  v7[8] = v11;
  *v11 = v7;
  v11[1] = sub_1D4446CFC;
  return v13(v9);
}

uint64_t sub_1D4446CFC()
{
  sub_1D430C324();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4446D38()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D42E39FC();
  v1 = *(_QWORD *)(v0 + 48);
  sub_1D4448CD4();
  sub_1D451AAE8();
  sub_1D4448C6C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1D42E3E54();
  sub_1D438C438();
  return sub_1D42E39BC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4446D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  sub_1D42B8EC8();
  return swift_task_switch();
}

uint64_t sub_1D4446DB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;

  v1 = *(_QWORD *)(v0 + 64);
  v10 = *(_OWORD *)(v0 + 48);
  v2 = sub_1D4446258(&v11, *(_QWORD *)(v0 + 40), v1);
  v3 = v11;
  *(_QWORD *)(v0 + 72) = v2;
  *(_QWORD *)(v0 + 80) = *((_QWORD *)&v3 + 1);
  *(_OWORD *)(v0 + 16) = v3;
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v4;
  *(_QWORD *)(v4 + 16) = v1;
  *(_OWORD *)(v4 + 24) = v10;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v5;
  v8 = type metadata accessor for AnyAsyncSequence(0, v1, v6, v7);
  MEMORY[0x1D825E41C](&protocol conformance descriptor for AnyAsyncSequence<A>, v8);
  *v5 = v0;
  v5[1] = sub_1D4446E90;
  return sub_1D451AB84();
}

uint64_t sub_1D4446E90()
{
  uint64_t v0;

  sub_1D438C390();
  if (!v0)
    swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D4446ED8()
{
  uint64_t v0;

  sub_1D451AB3C();
  sub_1D42B8F48();
  sub_1D42BE93C();
  return sub_1D42B8ED4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4446F2C()
{
  swift_task_dealloc();
  return swift_unexpectedError();
}

uint64_t sub_1D4446F74(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  char v3;

  v3 = a2();
  return sub_1D44486B0(*(uint64_t (**)(uint64_t))(v2 + 8), v2, v3 & 1);
}

uint64_t sub_1D4446FB4(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v4[3] = a1;
  v4[4] = a4;
  v7 = (uint64_t (*)(void))((char *)a2 + *a2);
  v5 = (_QWORD *)swift_task_alloc();
  v4[5] = v5;
  *v5 = v4;
  v5[1] = sub_1D444700C;
  return v7();
}

uint64_t sub_1D444700C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = a1;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D444705C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1D42E39FC();
  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(swift_task_alloc() + 16) = v2;
  sub_1D42B28FC(&qword_1EFE4B750);
  sub_1D42B8B10(&qword_1EFE49BB0);
  v3 = sub_1D451B9E8();
  sub_1D4339660((void (*)(uint64_t, uint64_t))sub_1D4448948, MEMORY[0x1E0DEDCE8], v3, v4, v1);

  sub_1D438C438();
  return sub_1D42E39BC(*(uint64_t (**)(void))(v0 + 8));
}

id sub_1D4447110@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  void *v2;

  v2 = *a1;
  *a2 = *a1;
  sub_1D42B8B10(&qword_1EFE49BB0);
  sub_1D451B9E8();
  swift_storeEnumTagMultiPayload();
  return v2;
}

uint64_t sub_1D4447184(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v7;

  v4[2] = a1;
  v4[3] = a4;
  v7 = (_QWORD *)swift_task_alloc();
  v4[4] = v7;
  *v7 = v4;
  v7[1] = sub_1D44471F8;
  return sub_1D443CEC8(a1, a2);
}

uint64_t sub_1D44471F8()
{
  sub_1D42B8E20();
  sub_1D430C324();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D444722C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1D42B8B10(&qword_1EFE49BB0);
  v2 = sub_1D451B9E8();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v1, 0, 1, v2);
  return sub_1D42B8ED4(*(uint64_t (**)(void))(v0 + 8));
}

BOOL sub_1D444728C(uint64_t a1)
{
  uint64_t v2;

  sub_1D42B8B10(&qword_1EFE49BB0);
  v2 = sub_1D451B9E8();
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, 1, v2) != 1;
}

uint64_t sub_1D44472E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v6 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE52210) - 8);
  v5[7] = v6;
  v5[8] = *(_QWORD *)(v6 + 64);
  v5[9] = sub_1D4448C60();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4447340()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v1 = v0[9];
  v3 = v0[6];
  v2 = v0[7];
  v5 = v0[4];
  v4 = v0[5];
  sub_1D42FC068(v0[3], v1, &qword_1EFE52210);
  v6 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v7 = swift_allocObject();
  v0[10] = v7;
  sub_1D44489D0(v1, v7 + v6);
  v8 = (_QWORD *)sub_1D438C4E4();
  v0[11] = (uint64_t)v8;
  v8[2] = v3;
  v8[3] = v5;
  v8[4] = v4;
  swift_retain();
  v9 = (_QWORD *)swift_task_alloc();
  v0[12] = (uint64_t)v9;
  *v9 = v0;
  v9[1] = sub_1D4447434;
  return sub_1D4445B80(v0[2], (uint64_t)&unk_1EFE52220, v7, (uint64_t)&unk_1EFE52230, (uint64_t)v8, v0[6]);
}

uint64_t sub_1D4447434()
{
  uint64_t v0;
  uint64_t (*v2)(void);

  sub_1D438C390();
  if (v0)
  {
    sub_1D42B8EC8();
    return sub_1D42E3818();
  }
  else
  {
    swift_release();
    sub_1D42B8F48();
    sub_1D42E3E54();
    v2 = (uint64_t (*)(void))sub_1D42E3DD0();
    return sub_1D42B8ED4(v2);
  }
}

uint64_t sub_1D444748C()
{
  uint64_t v0;

  swift_release();
  sub_1D42B8F48();
  sub_1D42E3E54();
  return sub_1D42B8ED4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D44474C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[5] = a1;
  v2 = sub_1D451B4D8();
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = swift_task_alloc();
  sub_1D42B28FC(&qword_1EFE52210);
  v1[9] = swift_task_alloc();
  v3 = sub_1D451B4C0();
  v1[10] = v3;
  v1[11] = *(_QWORD *)(v3 - 8);
  v1[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D4447574()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  sub_1D42FC068(*(_QWORD *)(v0 + 40), v1, &qword_1EFE52210);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v1, 1, v2) == 1)
  {
    sub_1D42D7018(*(_QWORD *)(v0 + 72), &qword_1EFE52210);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v3;
    *v3 = v0;
    v3[1] = sub_1D4447698;
    return static AsyncUtils.sleepUntilCancelled()();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 32))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
    *(_QWORD *)(v0 + 24) = 0;
    *(_QWORD *)(v0 + 16) = 0;
    *(_BYTE *)(v0 + 32) = 1;
    sub_1D4448CA4();
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v5;
    sub_1D42B4EF4(&qword_1EFE52148, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0BA0], MEMORY[0x1E0DF0BB0]);
    *v5 = v0;
    v5[1] = sub_1D44476E8;
    return sub_1D451AB60();
  }
}

uint64_t sub_1D4447698()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  sub_1D42B8F34(&v2);
  swift_task_dealloc();
  sub_1D42E3E5C();
  sub_1D42E3E54();
  return sub_1D4448B6C(0, (uint64_t (*)(void))v0[1]);
}

uint64_t sub_1D44476E8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  sub_1D4448CDC();
  v3 = *(_QWORD *)(v2 + 56);
  *v4 = *v1;
  *(_QWORD *)(v2 + 120) = v0;
  swift_task_dealloc();
  sub_1D4448C6C(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D4447750()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  void (*v4)(uint64_t);

  sub_1D4447FD0();
  v1 = sub_1D42B6D0C();
  *v2 = 0;
  v3 = sub_1D437EC8C();
  v4(v3);
  sub_1D4448D0C();
  sub_1D42E3E5C();
  sub_1D42E3E54();
  return sub_1D4448B6C(v1, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D44477BC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 120);
  sub_1D438E8D0(*(_QWORD *)(v0 + 88));

  sub_1D4448D0C();
  sub_1D42E3E5C();
  sub_1D42E3E54();
  return sub_1D4448B6C(0, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t static AsyncUtils.failAfterTimeoutNoCancel<A>(deadline:_:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  sub_1D42E39FC();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v0[2] = v9;
  v0[3] = v1;
  v10 = sub_1D451B160();
  v0[4] = v10;
  v0[5] = *(_QWORD *)(v10 - 8);
  v0[6] = sub_1D4448CF0();
  v11 = sub_1D4448CF0();
  v0[7] = v11;
  v12 = (_QWORD *)swift_task_alloc();
  v0[8] = v12;
  *v12 = v0;
  v12[1] = sub_1D44478BC;
  return sub_1D44472E8(v11, v8, v6, v4, v2);
}

uint64_t sub_1D44478BC()
{
  sub_1D430C37C();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D44478F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  void (*v5)(_QWORD);
  _BYTE *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  sub_1D42E39FC();
  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 24);
  sub_1D4448D30(*(uint64_t (**)(uint64_t))(v2 + 16));
  v4 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v1, 1, v3);
  v5 = *(void (**)(_QWORD))(v2 + 8);
  if (v4 == 1)
  {
    ((void (*)(_QWORD, _QWORD))v5)(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));
    sub_1D4447FD0();
    sub_1D42B6D0C();
    *v6 = 1;
    swift_willThrow();
    v7 = sub_1D437EC8C();
    v5(v7);
    swift_task_dealloc();
    sub_1D42E3E5C();
    return sub_1D42E39BC(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 48);
    v10 = *(_QWORD *)(v0 + 24);
    v11 = *(_QWORD *)(v0 + 16);
    ((void (*)(_QWORD, _QWORD))v5)(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 32));
    sub_1D4340870(v11, v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32));
    sub_1D42E3E5C();
    sub_1D42E3E54();
    v12 = (uint64_t (*)(void))sub_1D42E3DD0();
    return sub_1D42E39BC(v12);
  }
}

uint64_t sub_1D44479D4()
{
  uint64_t v0;

  swift_task_dealloc();
  sub_1D42E3E54();
  return sub_1D42B8ED4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t static AsyncUtils.failAfterTimeoutNoCancel<A>(deadline:mutating:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v6 = *(_QWORD *)(a5 - 8);
  v5[7] = v6;
  v5[8] = *(_QWORD *)(v6 + 64);
  v5[9] = sub_1D4448B5C();
  v5[10] = sub_1D42E3CEC();
  v5[11] = sub_1D42E3CEC();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4447A64()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  unint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  _QWORD *v12;
  _QWORD *v13;

  v1 = v0[11];
  v3 = v0[8];
  v2 = v0[9];
  v4 = v0[6];
  v5 = v0[7];
  v7 = v0[4];
  v6 = v0[5];
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v8(v1, v0[3], v4);
  v8(v2, v1, v4);
  v9 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v10 = swift_allocObject();
  v0[12] = v10;
  *(_QWORD *)(v10 + 16) = v4;
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  v0[13] = v11;
  sub_1D4340870(v10 + v9, v2, v11);
  v12 = (_QWORD *)(v10 + ((v3 + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v12 = v7;
  v12[1] = v6;
  swift_retain();
  v13 = (_QWORD *)swift_task_alloc();
  v0[14] = v13;
  *v13 = v0;
  v13[1] = sub_1D4447B70;
  return static AsyncUtils.failAfterTimeoutNoCancel<A>(deadline:_:)();
}

uint64_t sub_1D4447B70()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v3 = v2[6];
    v4 = v2[3];
    v5 = *(void (**)(uint64_t, uint64_t))(v2[7] + 8);
    v2[16] = v5;
    v5(v4, v3);
  }
  sub_1D42BE93C();
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D4447BEC()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 104);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 24);
  (*(void (**)(_QWORD, uint64_t))(v0 + 128))(*(_QWORD *)(v0 + 88), v3);
  v1(v4, v2, v3);
  sub_1D42E3E5C();
  sub_1D42E3E54();
  sub_1D438C1C4();
  v5 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42B8ED4(v5);
}

uint64_t sub_1D4447C60()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);

  v1 = sub_1D4448D44();
  v2(v1);
  sub_1D42E3E5C();
  sub_1D42E3E54();
  sub_1D438C1C4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D4447CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1D4447CD4()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(_QWORD);

  v1 = v0[3];
  v2 = (int *)v0[4];
  v3 = v0[2];
  v4 = *(_QWORD *)(v0[6] - 8);
  v0[7] = v4;
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v3, v1);
  v7 = (uint64_t (*)(_QWORD))((char *)v2 + *v2);
  v5 = (_QWORD *)swift_task_alloc();
  v0[8] = v5;
  *v5 = v0;
  v5[1] = sub_1D4447D4C;
  return v7(v0[2]);
}

uint64_t sub_1D4447D4C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D430C37C();
  if (!v0)
    return sub_1D42B8DC0(*(uint64_t (**)(void))(v1 + 8));
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4447D88()
{
  uint64_t v0;

  sub_1D438E8D0(*(_QWORD *)(v0 + 56));
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4447DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;

  *(_QWORD *)(v6 + 56) = v5;
  v12 = sub_1D4448D74();
  *(_QWORD *)(v6 + 64) = v12;
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 80) = sub_1D4448B5C();
  *(_QWORD *)(v6 + 88) = sub_1D42E3CEC();
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  *(_BYTE *)(v6 + 32) = a5 & 1;
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D4447E40()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  sub_1D438C15C();
  v1 = v0[10];
  v2 = v0[8];
  v3 = v0[9];
  sub_1D451B4D8();
  sub_1D42B4EF4(&qword_1EFE52148, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0BA0], MEMORY[0x1E0DF0BB0]);
  sub_1D451B8C8();
  sub_1D42B4EF4(&qword_1EFE52150, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0B60], MEMORY[0x1E0DF0B90]);
  sub_1D451B4E4();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v4;
  v4(v1, v2);
  v5 = (_QWORD *)swift_task_alloc();
  v0[13] = v5;
  *v5 = v0;
  v5[1] = sub_1D4447F34;
  return sub_1D4448B08();
}

uint64_t sub_1D4447F34()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  sub_1D42E39FC();
  sub_1D4448CC4();
  *v3 = *v1;
  *(_QWORD *)(v2 + 112) = v0;
  swift_task_dealloc();
  sub_1D4448D68();
  if (v0)
  {
    sub_1D42B8EC8();
    return sub_1D4448B74();
  }
  else
  {
    swift_task_dealloc();
    sub_1D42E3E5C();
    v5 = (uint64_t (*)(void))sub_1D42E3DD0();
    return sub_1D42E39BC(v5);
  }
}

uint64_t sub_1D4447FA0()
{
  uint64_t v0;

  swift_task_dealloc();
  sub_1D42E3E5C();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

unint64_t sub_1D4447FD0()
{
  unint64_t result;

  result = qword_1EFE52168;
  if (!qword_1EFE52168)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4540004, &type metadata for AsyncUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE52168);
  }
  return result;
}

uint64_t sub_1D444800C()
{
  uint64_t v0;

  sub_1D438E8D0(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D4448078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  sub_1D42E39FC();
  v3 = v2;
  v4 = *(_QWORD *)(v0 + 16);
  sub_1D4448C8C();
  v6 = v0 + v5;
  v8 = (uint64_t *)(v0 + v7);
  v9 = *v8;
  v10 = v8[1];
  v11 = swift_task_alloc();
  v12 = (_QWORD *)sub_1D42B8F00(v11);
  *v12 = v1;
  v12[1] = sub_1D42F9A58;
  return sub_1D4447CB4(v3, v6, v9, v10, v4);
}

ValueMetadata *type metadata accessor for AsyncUtils()
{
  return &type metadata for AsyncUtils;
}

uint64_t storeEnumTagSinglePayload for AsyncUtils.DomainError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D444815C + 4 * byte_1D453FF7D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D4448190 + 4 * byte_1D453FF78[v4]))();
}

uint64_t sub_1D4448190(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4448198(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D44481A0);
  return result;
}

uint64_t sub_1D44481AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D44481B4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D44481B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D44481C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AsyncUtils.DomainError()
{
  return &type metadata for AsyncUtils.DomainError;
}

unint64_t sub_1D44481E0()
{
  unint64_t result;

  result = qword_1EFE52188;
  if (!qword_1EFE52188)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453FFDC, &type metadata for AsyncUtils.DomainError);
    atomic_store(result, &qword_1EFE52188);
  }
  return result;
}

uint64_t sub_1D444821C(uint64_t a1, int *a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v7 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = swift_task_alloc();
  v5 = (_QWORD *)sub_1D42B8F00(v4);
  *v5 = v2;
  v5[1] = sub_1D444827C;
  return v7(a1);
}

uint64_t sub_1D444827C()
{
  uint64_t (*v0)(void);

  sub_1D42F9A68();
  v0 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42B8DC0(v0);
}

uint64_t sub_1D44482A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v3 + 64) = a2;
  *(_QWORD *)(v3 + 72) = v2;
  *(_QWORD *)(v3 + 56) = a1;
  v4 = sub_1D4448C4C();
  *(_DWORD *)(v3 + 112) = v4;
  if (v4)
  {
    *(_QWORD *)(v3 + 104) = swift_task_alloc();
    sub_1D42B28FC(&qword_1EFE4B6E0);
    sub_1D4448CAC((uint64_t)sub_1D4448458);
    return sub_1D4448BAC();
  }
  else
  {
    if (*(_QWORD *)(v3 + 56))
    {
      sub_1D4448D24();
      v6 = sub_1D4448D7C();
      v8 = v7;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    *(_QWORD *)(v3 + 80) = v6;
    *(_QWORD *)(v3 + 88) = v8;
    return sub_1D42F1DEC();
  }
}

uint64_t sub_1D4448348()
{
  return swift_taskGroup_wait_next_throwing();
}

uint64_t sub_1D4448364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v1 + 96) = v0;
  if (v0)
    return sub_1D42F1DEC();
  if ((*(_BYTE *)(v1 + 117) & 1) != 0)
    return (*(uint64_t (**)(void))(v1 + 8))();
  if (!*(_DWORD *)(v1 + 112))
  {
    if (*(_QWORD *)(v1 + 56))
    {
      sub_1D4448D24();
      v3 = sub_1D4448D7C();
      v5 = v4;
    }
    else
    {
      v3 = 0;
      v5 = 0;
    }
    *(_QWORD *)(v1 + 80) = v3;
    *(_QWORD *)(v1 + 88) = v5;
    return sub_1D42F1DEC();
  }
  *(_QWORD *)(v1 + 104) = swift_task_alloc();
  sub_1D42B28FC(&qword_1EFE4B6E0);
  sub_1D4448CAC((uint64_t)sub_1D4448458);
  return sub_1D4448BAC();
}

uint64_t sub_1D444843C()
{
  return swift_unexpectedError();
}

uint64_t sub_1D4448458()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1D4448CC4();
  sub_1D42B8F34(v2);
  if ((*(_BYTE *)(v1 + 116) & 1) != 0)
    return sub_1D42B8ED4(*(uint64_t (**)(void))(v0 + 8));
  if (*(_DWORD *)(v1 + 112))
  {
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 104) = v4;
    sub_1D42B28FC(&qword_1EFE4B6E0);
    *v4 = v0;
    v4[1] = sub_1D4448458;
    return sub_1D451AA94();
  }
  else
  {
    if (*(_QWORD *)(v1 + 56))
    {
      swift_getObjectType();
      v5 = sub_1D4448D7C();
      v7 = v6;
    }
    else
    {
      v5 = 0;
      v7 = 0;
    }
    *(_QWORD *)(v1 + 80) = v5;
    *(_QWORD *)(v1 + 88) = v7;
    return sub_1D42E3818();
  }
}

uint64_t sub_1D4448548()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D4448C28();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D4448B40(v1);
  return sub_1D4446FB4(v2, v3, v4, v5);
}

uint64_t sub_1D4448594()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D44485B8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D4448C28();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D4448B40(v1);
  return sub_1D4447184(v2, v3, v4, v5);
}

BOOL sub_1D4448604(uint64_t a1)
{
  return sub_1D444728C(a1);
}

uint64_t sub_1D444860C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  _QWORD *v3;

  sub_1D42E39FC();
  sub_1D4448C28();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D444867C;
  return ((uint64_t (*)(uint64_t, uint64_t (*)(void)))((char *)&dword_1EFE521C0 + dword_1EFE521C0))(v0, v2);
}

uint64_t sub_1D444867C(uint64_t a1)
{
  uint64_t v1;

  sub_1D42F9A68();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(a1);
}

uint64_t sub_1D44486B0(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_1D44486C4(uint64_t a1)
{
  uint64_t v1;

  return sub_1D44465F0(a1, *(_QWORD *)(v1 + 24));
}

uint64_t sub_1D44486CC()
{
  sub_1D4448CD4();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D431B458();
  return sub_1D43C2314();
}

uint64_t sub_1D4448730()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1D4448C78();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_1D42B8F00(v1);
  v3 = sub_1D4448BF0(v2);
  return sub_1D4446670(v3, v4, v5, v6, v7, v0);
}

uint64_t sub_1D44487A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  sub_1D42E39FC();
  v3 = v2;
  v5 = v4;
  v6 = v0[2];
  v7 = v0[3];
  v8 = v0[4];
  v9 = swift_task_alloc();
  v10 = (_QWORD *)sub_1D42B8F00(v9);
  *v10 = v1;
  v10[1] = sub_1D42F9A58;
  return sub_1D4446784(v5, v3, v7, v8, v6);
}

uint64_t sub_1D4448818()
{
  sub_1D4448CD4();
  swift_unknownObjectRelease();
  sub_1D431B458();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D44488A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;

  sub_1D4448C78();
  sub_1D4448C8C();
  v3 = *(_QWORD *)(v0 + v2 + 8);
  v4 = swift_task_alloc();
  v5 = (_QWORD *)sub_1D42B8F00(v4);
  v6 = sub_1D4448BF0(v5);
  return sub_1D4446C3C(v6, v7, v8, v9, v10, v3, v1);
}

uint64_t sub_1D4448924()
{
  swift_release();
  return swift_deallocObject();
}

id sub_1D4448948@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  return sub_1D4447110(a1, a2);
}

uint64_t sub_1D4448964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1D42B28FC(&qword_1EFE52210) - 8) + 80);
  v2 = sub_1D4448D74();
  if (!sub_1D4448D50(v0 + ((v1 + 16) & ~v1)))
    sub_1D4448C6C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8));
  return sub_1D43C2314();
}

uint64_t sub_1D44489D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D42B28FC(&qword_1EFE52210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D4448A18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_1D42B28FC(&qword_1EFE52210) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1D4448A80;
  return sub_1D44474C8(v3);
}

uint64_t sub_1D4448A80(uint64_t a1)
{
  uint64_t v1;

  sub_1D42F9A68();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(a1);
}

uint64_t sub_1D4448AB4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  int *v3;

  sub_1D4448C28();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D4448B40(v1);
  return sub_1D4398874(v2, v3);
}

uint64_t sub_1D4448B08()
{
  return sub_1D451B8D4();
}

uint64_t sub_1D4448B24(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D4448B40(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_1D4448B5C()
{
  return swift_task_alloc();
}

uint64_t sub_1D4448B6C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1D4448B74()
{
  return swift_task_switch();
}

void sub_1D4448B88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 40) = v0;
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 32) = 1;
}

uint64_t sub_1D4448BAC()
{
  return sub_1D451AA94();
}

uint64_t sub_1D4448BBC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = a1;
  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 80);
}

uint64_t sub_1D4448BE0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 112) = a1;
  return a1(v1, v3);
}

uint64_t sub_1D4448BF0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_1D4448C10()
{
  return sub_1D451B4E4();
}

uint64_t sub_1D4448C38()
{
  return sub_1D451B8C8();
}

uint64_t sub_1D4448C4C()
{
  return sub_1D44D982C(2, 18, 0, 0);
}

uint64_t sub_1D4448C60()
{
  return swift_task_alloc();
}

uint64_t sub_1D4448C6C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_1D4448C78()
{
  return sub_1D451AB00();
}

uint64_t sub_1D4448CA4()
{
  return sub_1D451B4CC();
}

uint64_t sub_1D4448CAC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  *v1 = v3;
  v1[1] = a1;
  return v2;
}

void sub_1D4448CC4()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_1D4448CD4()
{
  return sub_1D451AB00();
}

uint64_t sub_1D4448CDC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  return *(_QWORD *)(v2 + 112);
}

uint64_t sub_1D4448CF0()
{
  return swift_task_alloc();
}

uint64_t sub_1D4448D0C()
{
  return swift_task_dealloc();
}

uint64_t sub_1D4448D18()
{
  return swift_task_dealloc();
}

uint64_t sub_1D4448D24()
{
  return swift_getObjectType();
}

uint64_t sub_1D4448D30@<X0>(uint64_t (*a1)(uint64_t)@<X8>)
{
  uint64_t v1;

  return a1(v1);
}

uint64_t sub_1D4448D38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_1D4448D44()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4448D50(uint64_t a1)
{
  uint64_t v1;

  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, 1, v1);
}

uint64_t sub_1D4448D68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_1D4448D74()
{
  return sub_1D451B4C0();
}

uint64_t sub_1D4448D7C()
{
  return sub_1D451AA70();
}

void sub_1D4448D84()
{
  void *v0;
  id v1;
  void *v2;
  unsigned int v3;
  id v4;
  void *v5;
  unsigned int v6;
  id v7;
  id v8;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_defaultManager);
  sub_1D4519B94();
  v2 = (void *)sub_1D451A6C8();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_fileExistsAtPath_, v2);

  if (v3)
  {
    v4 = objc_msgSend(v0, sel_defaultManager);
    v5 = (void *)sub_1D4519B28();
    v9[0] = 0;
    v6 = objc_msgSend(v4, sel_removeItemAtURL_error_, v5, v9);

    if (v6)
    {
      v7 = v9[0];
    }
    else
    {
      v8 = v9[0];
      sub_1D4519AA4();

      swift_willThrow();
    }
  }
}

uint64_t sub_1D4448ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v4 = sub_1D4519AD4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = a1;
  v9[1] = a2;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0CAFD78], v4);
  sub_1D432E53C();
  sub_1D4519BAC();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

ValueMetadata *type metadata accessor for StandardFileInterface()
{
  return &type metadata for StandardFileInterface;
}

_UNKNOWN **sub_1D4448FB0()
{
  return &off_1E97976A0;
}

uint64_t sub_1D4448FBC()
{
  return sub_1D4519BF4();
}

id sub_1D4448FD4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;

  v0 = sub_1D4519BC4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  sub_1D42D7108();
  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_1D4519AC8();
  sub_1D4519B94();
  sub_1D430DC90(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v3 = (void *)sub_1D451A6C8();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_fileExistsAtPath_, v3);

  return v4;
}

uint64_t sub_1D44490BC()
{
  return sub_1D4448FBC();
}

id sub_1D44490D0@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  unsigned __int8 v9;
  id v10;
  id v12;
  id v13[2];

  v13[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = sub_1D4519BC4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1D42D7108();
  sub_1D4519B64();
  v7 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v8 = (void *)sub_1D4519B28();
  v13[0] = 0;
  v9 = objc_msgSend(v7, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v8, a1 & 1, 0, v13);

  v10 = v13[0];
  if ((v9 & 1) != 0)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a2, v2, v5);
    return v10;
  }
  else
  {
    v12 = v13[0];
    sub_1D4519AA4();

    swift_willThrow();
    return (id)sub_1D430DC90(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  }
}

uint64_t sub_1D4449224()
{
  uint64_t v0;

  v0 = sub_1D451A014();
  sub_1D43E757C(v0, qword_1EFEA7700);
  sub_1D42CC880(v0, (uint64_t)qword_1EFEA7700);
  return sub_1D451A008();
}

id sub_1D444928C()
{
  uint64_t v0;
  objc_class *v1;
  char *v2;
  uint64_t v3;
  char *v4;
  objc_super v6;

  v2 = (char *)sub_1D42B7238();
  v3 = *(_QWORD *)(v0 + 56);
  v4 = &v2[OBJC_IVAR___SNFeaturePrint_impl];
  *(_QWORD *)v4 = *(_QWORD *)v0;
  *((_QWORD *)v4 + 1) = *(_QWORD *)(v0 + 8);
  *((_OWORD *)v4 + 1) = *(_OWORD *)(v0 + 16);
  *((_QWORD *)v4 + 4) = *(_QWORD *)(v0 + 32);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(v0 + 40);
  *((_QWORD *)v4 + 7) = v3;
  v6.receiver = v2;
  v6.super_class = v1;
  return objc_msgSendSuper2(&v6, sel_init);
}

double SNFeaturePrint.timeRange.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = v1 + OBJC_IVAR___SNFeaturePrint_impl;
  *(_QWORD *)v3 = *(_QWORD *)a1;
  *(_QWORD *)(v3 + 8) = *(_QWORD *)(a1 + 8);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a1 + 16);
  result = *(double *)(a1 + 32);
  *(double *)(v3 + 32) = result;
  *(_QWORD *)(v3 + 40) = v2;
  return result;
}

uint64_t sub_1D4449338(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];
  uint64_t v10;

  type metadata accessor for ShapedArray();
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB210();
  v7 = v6 - v5;
  sub_1D444B8EC();
  sub_1D451BA18();
  sub_1D4436BA4(a2);
  if (!v2)
  {
    sub_1D42CAEF0((uint64_t)v9, v10);
    sub_1D444B858((unint64_t *)&unk_1EFE522C0, (uint64_t)&unk_1D453E658);
    sub_1D451B850();
    sub_1D44377B0(v7);
  }
  return sub_1D444B950();
}

uint64_t sub_1D444942C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[4];

  type metadata accessor for ShapedArray();
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v3);
  sub_1D42CB210();
  v6 = v5 - v4;
  v7 = (uint64_t)sub_1D42B5528(a1, a1[3]);
  sub_1D451BA00();
  if (v1)
  {
    sub_1D42BE944();
  }
  else
  {
    sub_1D42B5528(v9, v9[3]);
    sub_1D444B858(&qword_1EFE522B8, (uint64_t)&unk_1D453E680);
    sub_1D451B838();
    v7 = sub_1D4437038(v6);
    sub_1D44377B0(v6);
    sub_1D444B950();
    sub_1D42BE944();
  }
  return v7;
}

uint64_t sub_1D4449554(uint64_t a1)
{
  sub_1D42EA3E0(a1, (unint64_t *)&qword_1EFE404C0);
  return sub_1D451B10C() & 1;
}

uint64_t sub_1D44495A0(void *a1)
{
  void *v1;
  id v3;

  sub_1D42BE9A8();
  v3 = a1;
  sub_1D42CB350();

  return sub_1D42CB230();
}

void sub_1D44495D8()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 56);
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D42D8408();
  sub_1D451B988();
  sub_1D42D83F4();
  sub_1D451B97C();
  sub_1D42CB8EC();
  sub_1D451B988();
  sub_1D451B964();
  v2 = v1;
  sub_1D451B118();

}

uint64_t sub_1D444968C(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  _BOOL8 v10;

  v8 = a1[6];
  v9 = a2[6];
  v10 = sub_1D42D83FC((uint64_t)a1, (uint64_t)a2, a3, a4, a5, a6, a7, a8, *a2, a2[1], a2[2], a2[3], a2[4], a2[5], *a1);
  if (!v10 || v8 != v9)
    return 0;
  sub_1D42EA3E0(v10, (unint64_t *)&qword_1EFE404C0);
  return sub_1D451B10C() & 1;
}

uint64_t sub_1D444974C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x676E6152656D6974 && a2 == 0xE900000000000065;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D4557B80 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5665727574616566 && a2 == 0xED0000726F746365)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v7 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1D44498C4(char a1)
{
  if (!a1)
    return 0x676E6152656D6974;
  if (a1 == 1)
    return 0xD000000000000010;
  return 0x5665727574616566;
}

uint64_t sub_1D4449930()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v0 = sub_1D42B28FC((uint64_t *)&unk_1EFE52270);
  v5 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  sub_1D42CB210();
  v3 = v2 - v1;
  sub_1D444B8EC();
  sub_1D444B5C8();
  sub_1D451BA24();
  sub_1D42CA408();
  sub_1D451B760();
  if (!v6)
  {
    sub_1D42B28FC(&qword_1EFE51658);
    sub_1D4425E60(&qword_1EFE52280, MEMORY[0x1E0DEB420], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
    sub_1D42CB068();
    sub_1D444B640();
    sub_1D42CB068();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v3, v0);
}

void sub_1D4449B00()
{
  uint64_t v0;
  id v1;
  void *v2;
  _BYTE v3[72];

  v2 = *(void **)(v0 + 56);
  sub_1D42BE9A8();
  sub_1D42CB950();
  sub_1D42D8408();
  sub_1D444B914();
  sub_1D42D83F4();
  sub_1D444B92C();
  sub_1D42CB8EC();
  sub_1D444B920();
  sub_1D444B938();
  sub_1D444B944();
  v1 = v2;
  sub_1D42CB350();

  sub_1D42CB230();
  sub_1D42CB414();
}

uint64_t sub_1D4449B8C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = sub_1D42B28FC(&qword_1EFE52250);
  MEMORY[0x1E0C80A78](v5);
  sub_1D42CB210();
  sub_1D42B5528(a1, a1[3]);
  sub_1D444B5C8();
  sub_1D451BA0C();
  if (!v2)
  {
    sub_1D42CA3CC();
    sub_1D444B898();
    sub_1D42B28FC(&qword_1EFE51658);
    sub_1D4425E60((unint64_t *)&unk_1EFE51660, MEMORY[0x1E0DEB448], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
    sub_1D451B688();
    sub_1D444B604();
    sub_1D444B898();
    sub_1D42CB3CC();
    *a2 = v7;
    a2[1] = v8;
    a2[2] = v9;
    a2[3] = v10;
    a2[4] = v11;
    a2[5] = v12;
    a2[6] = v7;
    a2[7] = v7;
  }
  return sub_1D42BE944();
}

uint64_t sub_1D4449D5C()
{
  void **v0;

  return sub_1D44495A0(*v0);
}

uint64_t sub_1D4449D64@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1D444942C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1D4449D8C(uint64_t a1)
{
  void **v1;

  return sub_1D4449338(a1, *v1);
}

uint64_t sub_1D4449DA4(uint64_t *a1)
{
  return sub_1D4449554(*a1);
}

uint64_t sub_1D4449DB0()
{
  char *v0;

  return sub_1D44498C4(*v0);
}

uint64_t sub_1D4449DB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D444974C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D4449DDC()
{
  sub_1D444B5C8();
  return sub_1D451BA3C();
}

uint64_t sub_1D4449E04()
{
  sub_1D444B5C8();
  return sub_1D451BA48();
}

uint64_t sub_1D4449E34()
{
  uint64_t v0;
  id v1;
  void *v3;

  v3 = *(void **)(v0 + 56);
  sub_1D451B958();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B964();
  v1 = v3;
  sub_1D451B118();

  return sub_1D451B994();
}

uint64_t sub_1D4449F24@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1D4449B8C(a1, a2);
}

uint64_t sub_1D4449F38()
{
  return sub_1D4449930();
}

double SNFeaturePrint.timeRange.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = v1 + OBJC_IVAR___SNFeaturePrint_impl;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR___SNFeaturePrint_impl + 40);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SNFeaturePrint_impl);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(v2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 + 16);
  result = *(double *)(v2 + 32);
  *(double *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v3;
  return result;
}

double (*SNFeaturePrint.timeRange.modify(_QWORD *a1))(void **a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  SNFeaturePrint.timeRange.getter((uint64_t)v3);
  return sub_1D444A080;
}

double sub_1D444A080(void **a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  double result;

  v1 = *a1;
  v2 = v1[5];
  v3 = v1[6] + OBJC_IVAR___SNFeaturePrint_impl;
  v4 = v1[1];
  v5 = v1[4];
  v6 = *((_OWORD *)v1 + 1);
  *(_QWORD *)v3 = *v1;
  *(_QWORD *)(v3 + 8) = v4;
  *(_OWORD *)(v3 + 16) = v6;
  *(_QWORD *)(v3 + 32) = v5;
  *(_QWORD *)(v3 + 40) = v2;
  free(v1);
  return result;
}

uint64_t SNFeaturePrint.featurePrintType.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___SNFeaturePrint_impl + 48);
}

uint64_t SNFeaturePrint.featurePrintType.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR___SNFeaturePrint_impl + 48) = result;
  return result;
}

_QWORD *(*SNFeaturePrint.featurePrintType.modify(_QWORD *a1))(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR___SNFeaturePrint_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(_QWORD *)(v1 + v2 + 48);
  return sub_1D444A150;
}

_QWORD *sub_1D444A150(_QWORD *result)
{
  *(_QWORD *)(result[1] + result[2] + 48) = *result;
  return result;
}

id SNFeaturePrint.featureVector.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___SNFeaturePrint_impl + 56);
}

void SNFeaturePrint.featureVector.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___SNFeaturePrint_impl + 56);
  *(_QWORD *)(v1 + OBJC_IVAR___SNFeaturePrint_impl + 56) = a1;

}

void sub_1D444A1F8(id *a1)
{
  SNFeaturePrint.featureVector.setter((uint64_t)*a1);
}

void (*SNFeaturePrint.featureVector.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + OBJC_IVAR___SNFeaturePrint_impl + 56);
  *a1 = v2;
  a1[1] = v1;
  v3 = v2;
  return sub_1D444A264;
}

void sub_1D444A264(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    SNFeaturePrint.featureVector.setter((uint64_t)v3);
    sub_1D42CB120(v3);
  }
  else
  {
    SNFeaturePrint.featureVector.setter((uint64_t)v2);
  }
}

id sub_1D444A2B0()
{
  void *v0;
  objc_class *v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  objc_super v13;
  uint64_t v14;

  v1 = (objc_class *)sub_1D42B7104();
  sub_1D42B28FC(&qword_1EFE40410);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1D4525300;
  sub_1D42EA3E0(v2, (unint64_t *)&qword_1EFE404B0);
  v3 = v0;
  *(_QWORD *)(v2 + 32) = sub_1D451B0F4();
  v14 = v2;
  sub_1D451A950();
  v4 = objc_allocWithZone(MEMORY[0x1E0C9E970]);
  v5 = sub_1D44C0430(v2, 65568);
  v6 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 8);
  v7 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 16);
  v8 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 24);
  v9 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 32);
  v10 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 40);
  v11 = &v3[OBJC_IVAR___SNFeaturePrint_impl];
  *(_QWORD *)v11 = *MEMORY[0x1E0CA2E40];
  *((_QWORD *)v11 + 1) = v6;
  *((_QWORD *)v11 + 2) = v7;
  *((_QWORD *)v11 + 3) = v8;
  *((_QWORD *)v11 + 4) = v9;
  *((_QWORD *)v11 + 5) = v10;
  *((_QWORD *)v11 + 6) = 0;
  *((_QWORD *)v11 + 7) = v5;

  v13.receiver = v3;
  v13.super_class = v1;
  return objc_msgSendSuper2(&v13, sel_init);
}

id SNFeaturePrint.copy(with:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  id v5;
  id result;

  v3 = sub_1D42B7104();
  sub_1D42D83C4(v1 + OBJC_IVAR___SNFeaturePrint_impl);
  v5 = v4;
  result = sub_1D444928C();
  a1[3] = v3;
  *a1 = result;
  return result;
}

void SNFeaturePrint.hash.getter()
{
  uint64_t v0;
  id v1;
  void *v2;

  v2 = *(void **)(v0 + OBJC_IVAR___SNFeaturePrint_impl + 56);
  sub_1D42BE9A8();
  sub_1D42CB950();
  sub_1D42D8408();
  sub_1D444B914();
  sub_1D42D83F4();
  sub_1D444B92C();
  sub_1D42CB8EC();
  sub_1D444B920();
  sub_1D444B938();
  sub_1D444B944();
  v1 = v2;
  sub_1D451B118();
  sub_1D42CB230();

  sub_1D42CB414();
}

uint64_t SNFeaturePrint.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  id v23;
  id v24;
  char v25;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[2];
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  uint64_t v39;

  sub_1D42B7104();
  sub_1D42B28B4(a1, (uint64_t)&v38);
  if (v39)
  {
    sub_1D42B293C(&v38, v37);
    sub_1D42B294C((uint64_t)v37, (uint64_t)v33);
    if (swift_dynamicCast())
    {
      v3 = v27;
      v4 = v1 + OBJC_IVAR___SNFeaturePrint_impl;
      v5 = *(_QWORD *)(v1 + OBJC_IVAR___SNFeaturePrint_impl);
      v6 = *(_QWORD *)(v1 + OBJC_IVAR___SNFeaturePrint_impl + 40);
      v7 = *(_QWORD *)(v1 + OBJC_IVAR___SNFeaturePrint_impl + 48);
      v8 = *(void **)(v4 + 56);
      v9 = (uint64_t)&v27[OBJC_IVAR___SNFeaturePrint_impl];
      v10 = *(_QWORD *)&v27[OBJC_IVAR___SNFeaturePrint_impl];
      v11 = *(_QWORD *)&v27[OBJC_IVAR___SNFeaturePrint_impl + 48];
      v12 = *(void **)&v27[OBJC_IVAR___SNFeaturePrint_impl + 56];
      v33[0] = v5;
      v33[1] = *(_QWORD *)(v4 + 8);
      v34 = *(_OWORD *)(v4 + 16);
      v35 = *(_QWORD *)(v4 + 32);
      v36 = v6;
      v28 = v10;
      sub_1D42D83C4(v9);
      v22 = sub_1D42D83FC(v13, v14, v15, v16, v17, v18, v19, v20, v28, v29, v30, v31, v32, v21, v33[0]);
      if (v22 && v7 == v11)
      {
        sub_1D42EA3E0(v22, (unint64_t *)&qword_1EFE404C0);
        v23 = v8;
        v24 = v12;
        v25 = sub_1D451B10C();

LABEL_9:
        sub_1D42B5400((uint64_t)v37);
        return v25 & 1;
      }

    }
    v25 = 0;
    goto LABEL_9;
  }
  v25 = 0;
  return v25 & 1;
}

id SNFeaturePrint.__allocating_init(coder:)()
{
  void *v0;

  sub_1D42B7238();
  return SNFeaturePrint.init(coder:)(v0);
}

id SNFeaturePrint.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  void *v7;

  v3 = v1;
  sub_1D42B2158();
  swift_getObjectType();

  v4 = v7;
  v5 = sub_1D444928C();

  sub_1D432BF64();
  return v5;
}

Swift::Void __swiftcall SNFeaturePrint.encode(with:)(NSCoder with)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  _OWORD v5[4];

  v3 = *(_OWORD *)(v1 + OBJC_IVAR___SNFeaturePrint_impl + 16);
  v5[0] = *(_OWORD *)(v1 + OBJC_IVAR___SNFeaturePrint_impl);
  v5[1] = v3;
  v4 = *(_OWORD *)(v1 + OBJC_IVAR___SNFeaturePrint_impl + 48);
  v5[2] = *(_OWORD *)(v1 + OBJC_IVAR___SNFeaturePrint_impl + 32);
  v5[3] = v4;
  sub_1D42B58D4((uint64_t)v5);
  sub_1D42B07B8((uint64_t)v5, 1819307369, 0xE400000000000000, (uint64_t)with.super.isa);
  sub_1D444A984((uint64_t)v5);
}

uint64_t sub_1D444A984(uint64_t a1)
{

  return a1;
}

uint64_t static SNFeaturePrint.supportsSecureCoding.getter()
{
  return 1;
}

id sub_1D444AA10(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  objc_class *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  objc_super v18;

  v3 = v2;
  v6 = (objc_class *)sub_1D42B7104();
  type metadata accessor for ShapedArray();
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42CB210();
  v10 = v9 - v8;
  v11 = v3;
  sub_1D4436BA4(a2);
  v12 = sub_1D4437038(v10);
  sub_1D44377B0(v10);
  v13 = MEMORY[0x1E0CA2E40];
  v14 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 40);
  v15 = &v11[OBJC_IVAR___SNFeaturePrint_impl];
  *(_QWORD *)v15 = *MEMORY[0x1E0CA2E40];
  *((_QWORD *)v15 + 1) = *(_QWORD *)(v13 + 8);
  *((_OWORD *)v15 + 1) = *(_OWORD *)(v13 + 16);
  *((_QWORD *)v15 + 4) = *(_QWORD *)(v13 + 32);
  *((_QWORD *)v15 + 5) = v14;
  *((_QWORD *)v15 + 6) = a1;
  *((_QWORD *)v15 + 7) = v12;

  v18.receiver = v11;
  v18.super_class = v6;
  v16 = objc_msgSendSuper2(&v18, sel_init);

  return v16;
}

id sub_1D444AB74(const float *a1, const float *a2, vDSP_Length a3)
{
  float v5;
  float v6;
  float v7;
  id v8;
  double v9;

  v5 = sub_1D43835E0(a1, a2, a3);
  sub_1D444B8B4(a1, a1);
  v6 = sub_1D444B8B4(a2, a2);
  v7 = v5 / sub_1D444B8BC(v6);
  v8 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  *(float *)&v9 = v7;
  return objc_msgSend(v8, sel_initWithFloat_, v9);
}

void sub_1D444AC28(void *a1, void *a2)
{
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  BOOL v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  void *v17;
  char v18;
  id v19;
  const float *v20;
  const float *v21;
  float v22;
  int v23;

  v4 = objc_msgSend(a1, sel_shape);
  sub_1D42E9D88(0, (unint64_t *)&qword_1EFE404B0);
  sub_1D444B8E4();

  v5 = objc_msgSend(a2, sel_shape);
  sub_1D444B8E4();

  v23 = sub_1D42FE5D4();
  swift_bridgeObjectRelease();
  v6 = sub_1D435EB80();
  v7 = sub_1D43B1BD0(v6, sel_dataType);
  v8 = objc_msgSend(a2, sel_dataType);
  v9 = v7 != v8 || sub_1D43B1BD0((uint64_t)v8, sel_dataType) != (id)65568;
  v10 = type metadata accessor for SNUtils();
  v11 = sub_1D43B1BD0(v10, sel_shape);
  v12 = sub_1D444B8E4();

  v13 = sub_1D44BC788(v12);
  v14 = sub_1D435EB80();
  v15 = sub_1D43B1BD0(v14, sel_shape);
  v16 = sub_1D444B8E4();

  v17 = (void *)sub_1D451B0F4();
  v18 = sub_1D42EF254((uint64_t)v17, v16);
  sub_1D435EB80();

  if ((sub_1D44363B4(a1) & 1) != 0
    && !((v23 ^ 1 | sub_1D44363B4(a2) ^ 1) & 1 | (v13 > 1) | v18 & 1 | v9))
  {
    v19 = objc_retainAutorelease(a1);
    v20 = (const float *)objc_msgSend(v19, sel_dataPointer);
    v21 = (const float *)objc_msgSend(objc_retainAutorelease(a2), sel_dataPointer);
    objc_msgSend(v19, sel_count);
    sub_1D444B8B4(v20, v21);
    sub_1D444B8B4(v20, v20);
    v22 = sub_1D444B8B4(v21, v21);
    sub_1D444B8BC(v22);
  }
  else
  {
    type metadata accessor for SNError();
    sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD000000000000022, 0x80000001D4558C20);
    swift_willThrow();
  }
}

void sub_1D444AECC(void *a1, void *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  id v5;
  double v6;

  sub_1D444AC28(a1, a2);
  if (!v2)
  {
    v4 = v3;
    v5 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    LODWORD(v6) = v4;
    objc_msgSend(v5, sel_initWithFloat_, v6);
  }
}

void SNFeaturePrint.description.getter()
{
  char *v0;
  objc_class *v1;
  uint32_t *p_ivar_base_size;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  _QWORD v24[6];
  objc_super v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = (objc_class *)sub_1D42B7104();
  v28 = 0;
  v29 = 0xE000000000000000;
  sub_1D451B400();
  v25.receiver = v0;
  v25.super_class = v1;
  p_ivar_base_size = &SNVGGishMusicModel__metaData.ivar_base_size;
  v3 = objc_msgSendSuper2(&v25, sel_description);
  v4 = sub_1D451A6EC();
  v6 = v5;
  swift_bridgeObjectRelease();

  v26 = v4;
  v27 = v6;
  sub_1D444B908();
  v7 = (id *)&v0[OBJC_IVAR___SNFeaturePrint_impl];
  v28 = *(_QWORD *)&v0[OBJC_IVAR___SNFeaturePrint_impl + 48];
  sub_1D451B7C0();
  sub_1D444B8FC();
  sub_1D42CB0C4();
  sub_1D451A794();
  v8 = objc_msgSend(v7[7], sel_shape);
  sub_1D42EA3E0((uint64_t)v8, (unint64_t *)&qword_1EFE404B0);
  v9 = sub_1D451A92C();

  if (!(v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
      goto LABEL_3;
LABEL_13:
    sub_1D42CB0C4();
    v12 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    MEMORY[0x1D825C280](v12, MEMORY[0x1E0DEB418]);
    sub_1D444B8FC();
    swift_bridgeObjectRelease();
    sub_1D42CB0C4();
    sub_1D444B908();
    SNFeaturePrint.timeRange.getter((uint64_t)&v28);
    v17 = v28;
    v18 = v30;
    v19 = v31;
    v20 = v33;
    v21 = (void *)objc_opt_self();
    v24[0] = v17;
    v24[1] = v29;
    v24[2] = v18;
    v24[3] = v19;
    v24[4] = v32;
    v24[5] = v20;
    v22 = objc_msgSend(v21, sel_valueWithCMTimeRange_, v24);
    v23 = objc_msgSend(v22, *((SEL *)p_ivar_base_size + 279));
    sub_1D451A6EC();

    sub_1D451A794();
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v10 = sub_1D451B5A4();
  sub_1D42CB0C4();
  if (!v10)
    goto LABEL_13;
LABEL_3:
  v28 = MEMORY[0x1E0DEE9D8];
  sub_1D42C73B0();
  if ((v10 & 0x8000000000000000) == 0)
  {
    v11 = 0;
    v12 = v28;
    do
    {
      if ((v9 & 0xC000000000000001) != 0)
        v13 = (id)MEMORY[0x1D825CD78](v11, v9);
      else
        v13 = *(id *)(v9 + 8 * v11 + 32);
      v14 = v13;
      v15 = objc_msgSend(v13, sel_integerValue);

      v28 = v12;
      v16 = *(_QWORD *)(v12 + 16);
      if (v16 >= *(_QWORD *)(v12 + 24) >> 1)
      {
        sub_1D42C73B0();
        v12 = v28;
      }
      ++v11;
      *(_QWORD *)(v12 + 16) = v16 + 1;
      *(_QWORD *)(v12 + 8 * v16 + 32) = v15;
    }
    while (v10 != v11);
    sub_1D42CB0C4();
    p_ivar_base_size = (_DWORD *)(&SNVGGishMusicModel__metaData + 8);
    goto LABEL_14;
  }
  __break(1u);
}

id SNFeaturePrint.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1D42B7104();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D444B390(uint64_t a1@<X8>)
{
  SNFeaturePrint.timeRange.getter(a1);
  sub_1D42B6E24();
}

void sub_1D444B3AC(uint64_t a1)
{
  SNFeaturePrint.timeRange.setter(a1);
  sub_1D42B6E24();
}

void sub_1D444B3C8(uint64_t *a1@<X8>)
{
  *a1 = SNFeaturePrint.featurePrintType.getter();
  sub_1D42B6E24();
}

void sub_1D444B3EC(uint64_t *a1)
{
  SNFeaturePrint.featurePrintType.setter(*a1);
  sub_1D42B6E24();
}

void sub_1D444B40C(id *a1@<X8>)
{
  *a1 = SNFeaturePrint.featureVector.getter();
  sub_1D42B6E24();
}

uint64_t type metadata accessor for SNFeaturePrint()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNFeaturePrint()
{
  return swift_lookUpClassMethod();
}

void destroy for FeaturePrint(uint64_t a1)
{

}

uint64_t initializeWithCopy for FeaturePrint(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;
  id v5;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v4 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  v5 = v4;
  return a1;
}

uint64_t assignWithCopy for FeaturePrint(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v3 = *(void **)(a2 + 56);
  v4 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v3;
  v5 = v3;

  return a1;
}

uint64_t assignWithTake for FeaturePrint(uint64_t a1, uint64_t a2)
{
  void *v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v3 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  return a1;
}

ValueMetadata *type metadata accessor for FeaturePrint()
{
  return &type metadata for FeaturePrint;
}

unint64_t sub_1D444B58C()
{
  unint64_t result;

  result = qword_1EFE52248;
  if (!qword_1EFE52248)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4540180, &type metadata for FeaturePrint);
    atomic_store(result, (unint64_t *)&qword_1EFE52248);
  }
  return result;
}

unint64_t sub_1D444B5C8()
{
  unint64_t result;

  result = qword_1EFE52258;
  if (!qword_1EFE52258)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45403D4, &type metadata for FeaturePrint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52258);
  }
  return result;
}

unint64_t sub_1D444B604()
{
  unint64_t result;

  result = qword_1EFE52268;
  if (!qword_1EFE52268)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45403AC, &type metadata for CodableMultiArray);
    atomic_store(result, (unint64_t *)&qword_1EFE52268);
  }
  return result;
}

unint64_t sub_1D444B640()
{
  unint64_t result;

  result = qword_1EFE52288;
  if (!qword_1EFE52288)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4540384, &type metadata for CodableMultiArray);
    atomic_store(result, (unint64_t *)&qword_1EFE52288);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeaturePrint.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D444B6C8 + 4 * byte_1D4540135[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D444B6FC + 4 * byte_1D4540130[v4]))();
}

uint64_t sub_1D444B6FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D444B704(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D444B70CLL);
  return result;
}

uint64_t sub_1D444B718(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D444B720);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D444B724(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D444B72C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeaturePrint.CodingKeys()
{
  return &type metadata for FeaturePrint.CodingKeys;
}

ValueMetadata *type metadata accessor for CodableMultiArray()
{
  return &type metadata for CodableMultiArray;
}

unint64_t sub_1D444B75C()
{
  unint64_t result;

  result = qword_1EFE52298;
  if (!qword_1EFE52298)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4540264, &type metadata for CodableMultiArray);
    atomic_store(result, (unint64_t *)&qword_1EFE52298);
  }
  return result;
}

unint64_t sub_1D444B79C()
{
  unint64_t result;

  result = qword_1EFE522A0;
  if (!qword_1EFE522A0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454035C, &type metadata for FeaturePrint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE522A0);
  }
  return result;
}

unint64_t sub_1D444B7DC()
{
  unint64_t result;

  result = qword_1EFE522A8;
  if (!qword_1EFE522A8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45402CC, &type metadata for FeaturePrint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE522A8);
  }
  return result;
}

unint64_t sub_1D444B81C()
{
  unint64_t result;

  result = qword_1EFE522B0;
  if (!qword_1EFE522B0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45402F4, &type metadata for FeaturePrint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE522B0);
  }
  return result;
}

uint64_t sub_1D444B858(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ShapedArray();
    result = MEMORY[0x1D825E41C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D444B898()
{
  return sub_1D451B688();
}

float sub_1D444B8B4(const float *a1, const float *a2)
{
  vDSP_Length v2;

  return sub_1D43835E0(a1, a2, v2);
}

float sub_1D444B8BC(float a1)
{
  float v1;

  return sqrt(v1 * a1);
}

uint64_t sub_1D444B8D4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D444B8E4()
{
  return sub_1D451A92C();
}

_QWORD *sub_1D444B8EC()
{
  _QWORD *v0;

  return sub_1D42B5528(v0, v0[3]);
}

uint64_t sub_1D444B8FC()
{
  return sub_1D451A794();
}

uint64_t sub_1D444B908()
{
  return sub_1D451A794();
}

uint64_t sub_1D444B914()
{
  return sub_1D451B97C();
}

uint64_t sub_1D444B920()
{
  return sub_1D451B97C();
}

uint64_t sub_1D444B92C()
{
  return sub_1D451B988();
}

uint64_t sub_1D444B938()
{
  return sub_1D451B988();
}

uint64_t sub_1D444B944()
{
  return sub_1D451B964();
}

uint64_t sub_1D444B950()
{
  uint64_t v0;

  return sub_1D42B5400(v0 - 104);
}

uint64_t sub_1D444B958(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27[2];
  uint64_t v28;
  _BYTE v29[32];
  _BYTE v30[32];

  v1 = *(_QWORD *)(result + 16);
  if (v1)
  {
    v2 = result + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1D42B294C(v2, (uint64_t)v30);
      sub_1D42B294C((uint64_t)v30, (uint64_t)v29);
      sub_1D42B28FC(&qword_1EFE522D0);
      v3 = swift_dynamicCast();
      if ((v3 & 1) == 0)
        break;
      v11 = sub_1D444BC14((uint64_t)v27);
      sub_1D444BC68(v11, v12, v13, v14, v15, v16, v17, v18, *(uint64_t *)&v27[0], *((uint64_t *)&v27[0] + 1));
      v2 += 32;
      if (!--v1)
        return sub_1D42B7204();
    }
    v19 = sub_1D444BC54(v3, v4, v5, v6, v7, v8, v9, v10, v27[0], v27[1], v28);
    sub_1D444BC68(v19, v20, v21, v22, v23, v24, v25, v26, *(uint64_t *)&v27[0], *((uint64_t *)&v27[0] + 1));
    sub_1D42B7204();
    type metadata accessor for SNError();
    sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD000000000000028, 0x80000001D4558C50);
    return sub_1D42E3BB8();
  }
  return result;
}

uint64_t sub_1D444BA70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v39[32];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[4];
  uint64_t v43[3];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[4];
  uint64_t v47;

  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v47 = MEMORY[0x1E0DEE9D8];
    sub_1D451B49C();
    v12 = a1 + 32;
    while (1)
    {
      sub_1D42B294C(v12, (uint64_t)v46);
      sub_1D42B294C((uint64_t)v46, (uint64_t)v42);
      sub_1D42B28FC(&qword_1EFE522D0);
      v13 = swift_dynamicCast();
      if (!(_DWORD)v13)
      {
        sub_1D444BC54(v13, v14, v15, v16, v17, v18, v19, v20, *(__int128 *)v39, *(__int128 *)&v39[16], v40);
        sub_1D42FBCD0();
        swift_allocError();
        sub_1D42E3BB8();
        goto LABEL_10;
      }
      sub_1D42E33E0((__int128 *)v39, (uint64_t)v43);
      sub_1D42B5528(v43, v44);
      sub_1D447A690((uint64_t *)v39);
      if (v8)
        break;
      sub_1D42B5528(v39, *(uint64_t *)&v39[24]);
      sub_1D451B814();
      v29 = sub_1D42B5400((uint64_t)v39);
      sub_1D444BC68(v29, v30, v31, v32, v33, v34, v35, v36, *(uint64_t *)v39, *(uint64_t *)&v39[8]);
      sub_1D42B5400((uint64_t)v46);
      sub_1D451B484();
      sub_1D451B4A8();
      sub_1D451B4B4();
      sub_1D451B490();
      v12 += 32;
      if (!--v9)
      {
        v10 = v47;
        goto LABEL_7;
      }
    }
    sub_1D444BC68(v21, v22, v23, v24, v25, v26, v27, v28, *(uint64_t *)v39, *(uint64_t *)&v39[8]);
LABEL_10:
    sub_1D42B5400((uint64_t)v46);
    swift_release();
  }
  else
  {
LABEL_7:
    sub_1D448D3E8(v10, a2, a3, a4, a5, a6, a7, a8, *(uint64_t *)v39, *(__int128 *)&v39[8], *(uint64_t *)&v39[24], v40, v41, v42[0], v42[1], v42[2], v42[3], v43[0], v43[1],
      v43[2],
      v44,
      v45,
      v46[0],
      v46[1],
      v46[2]);
    v9 = v37;
    sub_1D42B7204();
  }
  return v9;
}

uint64_t sub_1D444BC14(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D42B28FC(&qword_1EFE522D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D444BC54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, uint64_t a11)
{
  a11 = 0;
  a9 = 0u;
  a10 = 0u;
  return sub_1D444BC14((uint64_t)&a9);
}

uint64_t sub_1D444BC68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  return sub_1D42B5400((uint64_t)va);
}

uint64_t sub_1D444BC70(const void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  char v7;
  char v9;
  _BYTE __dst[65];

  *(_QWORD *)&__dst[24] = &unk_1E979AE70;
  *(_QWORD *)&__dst[32] = &off_1E979ADD0;
  v4 = swift_allocObject();
  *(_QWORD *)__dst = v4;
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v4 + 32) = v6;
  *(_QWORD *)(v4 + 48) = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  v7 = sub_1D444BFE4(__dst, 0xD00000000000003CLL, 0x80000001D4558C80);
  if (v2)
    return sub_1D42B5400((uint64_t)__dst);
  v9 = v7;
  sub_1D42B5400((uint64_t)__dst);
  memcpy(__dst, a1, sizeof(__dst));
  type metadata accessor for SNSystemAudioAnalyzerLocal();
  swift_allocObject();
  sub_1D42B5B38((uint64_t)a1);
  return sub_1D43FAE88(v9 & 1, (__int128 *)__dst);
}

void sub_1D444BD80(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  const void *v8;
  uint64_t v9;
  char v10;

  sub_1D444C244(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  sub_1D42BE7F0();
  sub_1D444BDA4(v8);
}

void sub_1D444BD9C()
{
  sub_1D42BE9BC();
}

void sub_1D444BDA4(const void *a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  _BYTE __dst[65];

  v3 = swift_allocObject();
  v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 48) = *(_QWORD *)(v1 + 32);
  memcpy(__dst, a1, sizeof(__dst));
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_1D42B5B38((uint64_t)a1);
  sub_1D4471428();
}

uint64_t sub_1D444BE5C(uint64_t a1)
{
  uint64_t v1;

  sub_1D42BDEAC(v1);
  swift_release();
  swift_release();
  return a1;
}

void sub_1D444BEA0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  const void *v8;
  uint64_t v9;
  char v10;

  sub_1D444C244(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  sub_1D42BE7F0();
  sub_1D444BEC4(v8);
}

void sub_1D444BEBC()
{
  sub_1D42BE9BC();
}

void sub_1D444BEC4(const void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _BYTE __dst[65];

  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v4;
  v8[3] = v3;
  v8[4] = v6;
  v8[5] = v5;
  v8[6] = v7;
  memcpy(__dst, a1, sizeof(__dst));
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  sub_1D42B5B38((uint64_t)a1);
  sub_1D4471428();
}

uint64_t sub_1D444BF88(uint64_t a1)
{
  uint64_t v1;

  sub_1D42BDEAC(v1);
  swift_release();
  swift_release();
  swift_release_n();
  swift_release();
  return a1;
}

uint64_t sub_1D444BFE4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  __int128 v9;
  uint64_t v10;
  _OWORD v11[2];
  unsigned __int8 v12;

  v6 = a1[3];
  v7 = a1[4];
  sub_1D42B5528(a1, v6);
  result = (uint64_t)(*(_QWORD *(**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(&v9, a2, a3, v6, v7);
  if (!v3)
  {
    if (v10)
    {
      sub_1D42B293C(&v9, v11);
      sub_1D42B294C((uint64_t)v11, (uint64_t)&v9);
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_1D42B5400((uint64_t)v11);
        return v12;
      }
      else
      {
        sub_1D444C1A8();
        swift_allocError();
        swift_willThrow();
        return sub_1D42B5400((uint64_t)v11);
      }
    }
    else
    {
      sub_1D42B5464((uint64_t)&v9);
      return 2;
    }
  }
  return result;
}

uint64_t sub_1D444C0FC(const void *a1)
{
  return sub_1D444BC70(a1);
}

uint64_t sub_1D444C11C@<X0>(void *__src@<X0>, __int128 *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  __int128 v6;
  uint64_t result;
  _BYTE __dst[72];
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  memcpy(__dst, __src, 0x41uLL);
  v6 = a2[1];
  v9 = *a2;
  v10 = v6;
  v11 = *((_QWORD *)a2 + 4);
  result = sub_1D444C0FC(__dst);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_1D444C18C@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1D444C11C(a1, (__int128 *)(v2 + 16), a2);
}

unint64_t sub_1D444C1A8()
{
  unint64_t result;

  result = qword_1EFE522E0;
  if (!qword_1EFE522E0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45306A4, &unk_1E97A19B8);
    atomic_store(result, (unint64_t *)&qword_1EFE522E0);
  }
  return result;
}

uint64_t sub_1D444C1E8()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D444C21C@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1D444C18C(a1, a2);
}

void sub_1D444C230(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1D432EC78(a1, a2);
}

void *sub_1D444C244(void *__src, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char __dst)
{
  return memcpy(&__dst, __src, 0x41uLL);
}

id sub_1D444C258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  void (*v6)(void **__return_ptr, uint64_t, uint64_t);
  void *v7;
  void *v8;
  id v9;
  void *v11;
  void *v12;

  v5 = *(_QWORD *)(a4 + 8);
  v6 = *(void (**)(void **__return_ptr, uint64_t, uint64_t))(v5 + 16);
  v6(&v12, a3, v5);
  v7 = v12;
  v6(&v11, a3, v5);
  v8 = v11;
  v9 = objc_msgSend(v7, sel_isEqual_, v11);

  return v9;
}

uint64_t sub_1D444C2EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v3;
  id v5;

  (*(void (**)(id *__return_ptr, uint64_t))(*(_QWORD *)(a3 + 8) + 16))(&v5, a2);
  v3 = v5;
  objc_msgSend(v5, sel_hash);

  return sub_1D451B964();
}

uint64_t sub_1D444C358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v7 = MEMORY[0x1D825B59C](a3);
  v8 = v4;
  sub_1D444CB1C();
  result = sub_1D42B5420(v7, v8);
  if (!v3)
    return v6;
  return result;
}

void sub_1D444C3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  MEMORY[0x1D825B59C](a5);
  __asm { BR              X10 }
}

uint64_t sub_1D444C438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t *, char *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  sub_1D444D088();
  sub_1D43C3C48(v2, v3, v4, v5, v6);
  if (!v0)
    v1 = v8;
  sub_1D42B5420(v9, v10);
  return v1;
}

uint64_t sub_1D444C56C(uint64_t a1, uint64_t a2, _QWORD *a3, unsigned int a4)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];

  v9[1] = *MEMORY[0x1E0C80C00];
  v9[0] = a4;
  v6 = a3[3];
  v7 = a3[4];
  sub_1D42B5528(a3, v6);
  return (*(uint64_t (**)(uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v7 + 8))(1, v9, 1, a1, a2, 0, 0, 0, 0, v6, v7);
}

unint64_t sub_1D444C628@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X4>, _QWORD *a6@<X8>)
{
  void *v6;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  id v15;
  int64_t v16;
  uint64_t v17;

  v12 = a2[3];
  v13 = a2[4];
  sub_1D42B5528(a2, v12);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8))(2, a1, 1, 0, 0, 0, 0, a3, a4, v12, v13);
  v15 = v6;
  if (!v6)
  {
    v16 = HIDWORD(result);
    if (a3)
    {
      if (a4 - a3 >= v16)
      {
        v17 = a3 + v16;
LABEL_6:
        *a6 = a3;
        a6[1] = v17;
        return result;
      }
    }
    else
    {
      v17 = 0;
      if (!v16)
        goto LABEL_6;
    }
    sub_1D451B400();
    swift_bridgeObjectRelease();
    type metadata accessor for SNError();
    sub_1D451B7C0();
    sub_1D451A794();
    swift_bridgeObjectRelease();
    sub_1D451A794();
    sub_1D451B7C0();
    sub_1D451A794();
    swift_bridgeObjectRelease();
    v15 = sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD000000000000028, 0x80000001D4558CF0);
    swift_bridgeObjectRelease();
    result = swift_willThrow();
  }
  *a5 = v15;
  return result;
}

unint64_t sub_1D444C80C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X6>, _QWORD *a8@<X8>)
{
  void *v8;
  uint64_t v15;
  uint64_t v16;
  unint64_t result;
  id v18;
  int64_t v19;
  uint64_t v20;

  v16 = a2[3];
  v15 = a2[4];
  sub_1D42B5528(a2, v16);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8))(3, a1, 1, a3, a4, 0, 0, a5, a6, v16, v15);
  v18 = v8;
  if (!v8)
  {
    v19 = HIDWORD(result);
    if (a5)
    {
      if (a6 - a5 >= v19)
      {
        v20 = a5 + v19;
LABEL_6:
        *a8 = a5;
        a8[1] = v20;
        return result;
      }
    }
    else
    {
      v20 = 0;
      if (!v19)
        goto LABEL_6;
    }
    sub_1D451B400();
    sub_1D451A794();
    type metadata accessor for SNError();
    sub_1D451B7C0();
    sub_1D451A794();
    swift_bridgeObjectRelease();
    sub_1D451A794();
    sub_1D451B7C0();
    sub_1D451A794();
    swift_bridgeObjectRelease();
    v18 = sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0, 0xE000000000000000);
    swift_bridgeObjectRelease();
    result = swift_willThrow();
  }
  *a7 = v18;
  return result;
}

void sub_1D444CA10()
{
  sub_1D444CB1C();
}

void sub_1D444CA50()
{
  sub_1D444CA10();
}

void sub_1D444CA6C(unsigned int a1@<W3>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_1D443D400(a1, (_QWORD *(*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))sub_1D444CF1C);
  if (!v2)
  {
    sub_1D43C3BD0((uint64_t)v4, v5);
    *a2 = v6;
    a2[1] = v7;
  }
}

void sub_1D444CAC4(unsigned int a1@<W3>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_1D443D400(a1, (_QWORD *(*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))sub_1D444CF5C);
  if (!v2)
  {
    sub_1D43C3BD0((uint64_t)v4, v5);
    *a2 = v6;
    a2[1] = v7;
  }
}

void sub_1D444CB1C()
{
  __asm { BR              X11 }
}

uint64_t sub_1D444CB80@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t *, char *);
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  unsigned __int8 v10;

  v6 = v2;
  LOWORD(v7) = a1;
  BYTE2(v7) = BYTE2(a1);
  HIBYTE(v7) = BYTE3(a1);
  v8 = BYTE4(a1);
  v9 = BYTE5(a1);
  v10 = BYTE6(a1);
  result = v3(&v6, (char *)&v6 + BYTE6(a1));
  v5 = v7 | ((unint64_t)v8 << 32) | ((unint64_t)v9 << 40) | ((unint64_t)v10 << 48);
  *v1 = v6;
  v1[1] = v5;
  return result;
}

uint64_t sub_1D444CDBC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = sub_1D4519A14();
  if (!result)
    goto LABEL_10;
  v7 = result;
  result = sub_1D4519A38();
  v8 = a1 - result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_9;
  }
  v9 = __OFSUB__(a2, a1);
  v10 = a2 - a1;
  if (v9)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  v11 = sub_1D4519A2C();
  if (v11 >= v10)
    v12 = v10;
  else
    v12 = v11;
  return a3(v7 + v8, v7 + v8 + v12);
}

uint64_t sub_1D444CE5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t result;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = sub_1D4519A14();
  v7 = result;
  if (result)
  {
    result = sub_1D4519A38();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v7 += a1 - result;
  }
  v8 = __OFSUB__(a2, a1);
  v9 = a2 - a1;
  if (v8)
  {
    __break(1u);
    goto LABEL_13;
  }
  v10 = sub_1D4519A2C();
  if (v10 >= v9)
    v11 = v9;
  else
    v11 = v10;
  v12 = v7 + v11;
  if (v7)
    v13 = v12;
  else
    v13 = 0;
  return a3(v7, v13);
}

void sub_1D444CEFC(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1D444CA6C(*(_DWORD *)(v1 + 24), a1);
}

unint64_t sub_1D444CF1C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_1D444C80C(a1, *(_QWORD **)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), a2, a3);
}

void sub_1D444CF40(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1D444CAC4(*(_DWORD *)(v1 + 24), a1);
}

unint64_t sub_1D444CF5C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_1D444C628(a1, *(_QWORD **)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), a2, a3);
}

uint64_t storeEnumTagSinglePayload for SPUServiceUtils.DomainError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D444CFC8 + 4 * byte_1D45404D5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D444CFFC + 4 * asc_1D45404D0[v4]))();
}

uint64_t sub_1D444CFFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D444D004(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D444D00CLL);
  return result;
}

uint64_t sub_1D444D018(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D444D020);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D444D024(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D444D02C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SPUServiceUtils.DomainError()
{
  return &type metadata for SPUServiceUtils.DomainError;
}

unint64_t sub_1D444D04C()
{
  unint64_t result;

  result = qword_1EFE522E8[0];
  if (!qword_1EFE522E8[0])
  {
    result = MEMORY[0x1D825E41C](&unk_1D4540538, &type metadata for SPUServiceUtils.DomainError);
    atomic_store(result, qword_1EFE522E8);
  }
  return result;
}

uint64_t type metadata accessor for HashableUncodableNSObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HashableUncodableNSObject);
}

uint64_t sub_1D444D0A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[10];

  v8[9] = a1;
  sub_1D451B958();
  v5 = type metadata accessor for HashableUncodableNSObject(0, a2, v3, v4);
  v6 = MEMORY[0x1D825E41C](&unk_1D4540678, v5);
  sub_1D444C2EC((uint64_t)v8, v5, v6);
  return sub_1D451B994();
}

uint64_t sub_1D444D110(uint64_t a1)
{
  uint64_t *v1;

  return sub_1D444D0A0(*v1, *(_QWORD *)(a1 + 16));
}

uint64_t sub_1D444D120(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = MEMORY[0x1D825E41C](&unk_1D4540678);
  return sub_1D444C2EC(a1, a2, v4);
}

uint64_t sub_1D444D160(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _BYTE v5[72];

  sub_1D451B958();
  v3 = MEMORY[0x1D825E41C](&unk_1D4540678, a2);
  sub_1D444C2EC((uint64_t)v5, a2, v3);
  return sub_1D451B994();
}

id sub_1D444D1B4@<X0>(void **a1@<X8>)
{
  void **v1;
  void *v2;

  v2 = *v1;
  *a1 = *v1;
  return v2;
}

uint64_t sub_1D444D1C0(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D454065C);
  return sub_1D44D4D18(a1);
}

uint64_t sub_1D444D214()
{
  MEMORY[0x1D825E41C](&unk_1D454065C);
  return sub_1D44D4D74();
}

id sub_1D444D260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = MEMORY[0x1D825E41C](&unk_1D4540678, a3);
  return sub_1D444C258(a1, a2, a3, v6);
}

void sub_1D444D2AC()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D444D2BC(_QWORD *a1, uint64_t a2)
{
  uint64_t result;

  a1[1] = MEMORY[0x1D825E41C](&unk_1D4540600);
  a1[2] = MEMORY[0x1D825E41C](&unk_1D45406BC, a2);
  result = MEMORY[0x1D825E41C](&unk_1D4540694, a2);
  a1[3] = result;
  return result;
}

uint64_t sub_1D444D314(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = MEMORY[0x1D825E41C](&unk_1D4540600);
  result = MEMORY[0x1D825E41C](&unk_1D454061C, a2);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

void sub_1D444D358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v3 = sub_1D445051C();
  sub_1D4450614(v3);
  if (v4)
  {
    sub_1D438E444(v1);
  }
  else
  {
    sub_1D451AAB8();
    sub_1D445049C();
  }
  if (*(_QWORD *)(v0 + 16))
  {
    sub_1D4450608();
    sub_1D44505FC();
    sub_1D4450544();
    sub_1D445055C();
  }
  v5 = sub_1D42B6F40();
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = v0;
  swift_task_create();
  sub_1D42B8E64();
}

void sub_1D444D41C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v3 = sub_1D445051C();
  sub_1D4450614(v3);
  if (v4)
  {
    sub_1D438E444(v1);
  }
  else
  {
    sub_1D451AAB8();
    sub_1D445049C();
  }
  if (*(_QWORD *)(v0 + 16))
  {
    sub_1D4450608();
    sub_1D44505FC();
    sub_1D4450544();
    sub_1D445055C();
  }
  v5 = sub_1D42B6F40();
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = v0;
  sub_1D42B28FC(&qword_1EFE4B750);
  swift_task_create();
  sub_1D42B8E64();
}

uint64_t sub_1D444D4E8(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = sub_1D42BE934();
  v1(v2);
  return swift_release();
}

uint64_t sub_1D444D510()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t result;
  uint64_t v6;
  OpaqueAudioQueue **v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  void **p_vtable;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  _QWORD *v25;
  uint64_t v26;
  OpaqueAudioQueue *v27;
  uint64_t v28;
  unint64_t v29;
  double v30;
  double v31;
  double v32;
  UInt32 v33;
  OSStatus v34;
  AudioQueueBuffer *v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  OSStatus v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  AudioQueueBufferRef outBuffer;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;

  v56 = *MEMORY[0x1E0C80C00];
  if (*(_BYTE *)(v0 + 96) == 1)
  {
    if (qword_1EFE40338 == -1)
    {
LABEL_3:
      v1 = sub_1D430710C();
      v2 = sub_1D4307218(v1, (uint64_t)qword_1EFEA7700);
      v3 = sub_1D451AF44();
      if (os_log_type_enabled(v2, v3))
      {
        v4 = (uint8_t *)sub_1D42CC940();
        *(_WORD *)v4 = 0;
        sub_1D4450654(&dword_1D42A7000, v2, v3, "Queue already running", v4);
        sub_1D42CC934();
      }

      return 1;
    }
LABEL_33:
    swift_once();
    goto LABEL_3;
  }
  v6 = v0;
  v7 = (OpaqueAudioQueue **)(v0 + 104);
  sub_1D4450530();
  *(_QWORD *)(v0 + 104) = 0;
  v8 = *(_QWORD *)(v0 + 72);
  v9 = *(_QWORD *)(v6 + 80);
  v10 = *(_QWORD *)(v6 + 88);
  v11 = *(void **)(v6 + 56);
  v12 = *(_QWORD *)(v6 + 64);
  v13 = *(void **)(v6 + 16);
  type metadata accessor for SNAudioRecordingQueueScheduler();
  v14 = swift_allocObject();
  sub_1D42BE934();
  swift_retain();
  v15 = v11;
  v16 = (void *)v14;
  v17 = v15;
  v18 = v13;
  sub_1D444DBA4(v12, v8, v9, v10, v17, v18);
  *(_QWORD *)(v6 + 112) = v16;
  sub_1D42E3CA4();
  swift_release();
  sub_1D44505F0();
  v19 = *(void **)(v6 + 48);
  objc_msgSend(v19, sel_opaqueSessionID);
  swift_beginAccess();
  LODWORD(v9) = AudioQueueNewInputWithAudioSession();
  swift_endAccess();
  sub_1D44C85E4(v9);
  p_vtable = SNKShotDatasetImpl.vtable;
  v27 = *v7;
  if (*v7)
  {
    (*(void (**)(OpaqueAudioQueue *, void *))(v6 + 32))(v27, v19);
    v28 = 5;
    while (1)
    {
      LODWORD(v29) = *((_DWORD *)sub_1D44505F0() + 6);
      v30 = (double)v29 * 0.512;
      objc_msgSend(v18, sel_sampleRate);
      v32 = v30 * v31;
      outBuffer = 0;
      if ((~*(_QWORD *)&v32 & 0x7FF0000000000000) == 0)
        break;
      if (v32 <= -1.0)
        goto LABEL_31;
      if (v32 >= 4294967300.0)
        goto LABEL_32;
      v33 = v32;
      v34 = AudioQueueAllocateBuffer(v27, v32, &outBuffer);
      if (v34 != sub_1D451A08C())
        goto LABEL_27;
      v35 = outBuffer;
      if (!outBuffer)
      {
        sub_1D42DCEE8();
        sub_1D4311F68();
        sub_1D430740C();
        sub_1D4342D78(v51, v52, (uint64_t)"failed to allocate buffer");
        goto LABEL_29;
      }
      outBuffer->mAudioDataByteSize = v33;
      v34 = AudioQueueEnqueueBuffer(v27, v35, 0, 0);
      if (v34 != sub_1D451A08C())
      {
LABEL_27:
        sub_1D42DCEE8();
        v43 = sub_1D451A6EC();
        v45 = v44;
        v46 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
        v47 = sub_1D44C8708(v43, v45, v34, 0);
        v54 = 0;
        v55 = 0xE000000000000000;
        sub_1D451B400();
        swift_bridgeObjectRelease();
        v54 = 0xD00000000000001FLL;
        v55 = 0x80000001D4554340;
        sub_1D451B7C0();
        sub_1D451A794();
        swift_bridgeObjectRelease();
        v48 = v55;
        sub_1D430740C();
        sub_1D43EC59C(0xD000000000000017, v49, 1, v47, v50, v48);

        swift_bridgeObjectRelease();
LABEL_29:
        swift_willThrow();
        swift_release();
        p_vtable = (void **)(SNKShotDatasetImpl + 24);
        goto LABEL_7;
      }
      if (!--v28)
      {
        AudioQueueAddPropertyListener(v27, 0x6171726Eu, (AudioQueuePropertyListenerProc)sub_1D444FF64, v16);
        if (qword_1EFE40338 != -1)
          swift_once();
        v36 = sub_1D430710C();
        v37 = sub_1D4307218(v36, (uint64_t)qword_1EFEA7700);
        v38 = sub_1D451AF74();
        if (sub_1D432AE3C(v38))
        {
          v39 = (uint8_t *)sub_1D42CC940();
          *(_WORD *)v39 = 0;
          sub_1D4450654(&dword_1D42A7000, v37, (os_log_type_t)v18, "Starting audio queue", v39);
          sub_1D42CC934();
        }

        v40 = AudioQueueStart(v27, 0);
        sub_1D44C85E4(v40);
        sub_1D42BE93C();
        result = 1;
        *(_BYTE *)(v6 + 96) = 1;
        return result;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  sub_1D42DCEE8();
  sub_1D4311F68();
  sub_1D430740C();
  sub_1D4342D78(v41, v42, (uint64_t)"Failed to create audio queue");
  swift_willThrow();
  sub_1D42BE93C();
LABEL_7:
  if (p_vtable[103] != (void *)-1)
    swift_once();
  v21 = sub_1D430710C();
  sub_1D42CC880(v21, (uint64_t)qword_1EFEA7700);
  sub_1D44505BC();
  sub_1D44505BC();
  v22 = sub_1D4519FFC();
  v23 = sub_1D451AF5C();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)sub_1D42CC940();
    v25 = (_QWORD *)sub_1D42CC940();
    *(_DWORD *)v24 = 138412290;
    sub_1D44505BC();
    v26 = _swift_stdlib_bridgeErrorToNSError();
    v54 = v26;
    sub_1D43C3A68();
    *v25 = v26;
    sub_1D43D6754();
    sub_1D43D6754();
    _os_log_impl(&dword_1D42A7000, v22, v23, "failed to start audio %@", v24, 0xCu);
    sub_1D42B28FC((uint64_t *)&unk_1EFE50850);
    sub_1D43E625C();
    sub_1D42CC934();
  }
  sub_1D43D6754();
  sub_1D43D6754();
  sub_1D43D6754();

  return 0;
}

uint64_t sub_1D444DBA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v6;
  _QWORD *v13;
  _QWORD *v14;
  id v15;
  uint64_t result;
  uint64_t v17;
  double v18;
  uint64_t v19;
  id v20;
  unint64_t *v21;
  uint64_t v22;
  unint64_t *v23;
  uint64_t v24;
  unsigned __int8 *v25;

  sub_1D4519D14();
  v13 = (_QWORD *)(v6 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_bufferHandler);
  *v13 = a1;
  v13[1] = a2;
  v14 = (_QWORD *)(v6 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_interruptionHandler);
  *v14 = a3;
  v14[1] = a4;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_recordFormat) = a6;
  swift_retain();
  sub_1D42E3CA4();
  v15 = a6;
  result = os_transaction_create();
  if (!result)
    goto LABEL_9;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_transaction) = result;
  sub_1D4450584(*(_QWORD *)(MEMORY[0x1E0CA2E68] + 16));
  sub_1D4450584(v17);
  v18 = *(double *)objc_msgSend(v15, sel_streamDescription) * 45.0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_eventHandlerQueue) = a5;
  type metadata accessor for ManagedAtomicInt64();
  v19 = sub_1D42B6F40();
  v20 = a5;
  v21 = sub_1D44FB0F4();
  *(_QWORD *)(v19 + 16) = v21;
  result = (uint64_t)sub_1D44FB05C(v21, 0);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_eventHandlerQueueFundsSpent) = v19;
  if ((~*(_QWORD *)&v18 & 0x7FF0000000000000) != 0)
  {
    if (v18 > -9.22337204e18)
    {
      if (v18 < 9.22337204e18)
      {
        v22 = sub_1D42B6F40();
        v23 = sub_1D44FB0F4();
        *(_QWORD *)(v22 + 16) = v23;
        sub_1D44FB05C(v23, (uint64_t)v18);
        *(_QWORD *)(v6 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_eventHandlerQueueFundsEarned) = v22;
        type metadata accessor for ManagedAtomicBool();
        v24 = sub_1D42B6F40();
        v25 = sub_1D44FB120();
        *(_QWORD *)(v24 + 16) = v25;
        sub_1D44FB0B8(v25, 0);
        swift_release();
        sub_1D42BE93C();

        *(_QWORD *)(v6 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_eventHandlerQueueStopped) = v24;
        *(_QWORD *)(v6 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_unhealthyBufferCount) = 0;
        return v6;
      }
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_8:
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1D444DDB8(uint64_t a1, unint64_t a2, uint64_t *a3, const char *a4)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (qword_1EFE40338 != -1)
    swift_once();
  v8 = sub_1D430710C();
  sub_1D42CC880(v8, (uint64_t)qword_1EFEA7700);
  swift_bridgeObjectRetain_n();
  v9 = sub_1D4519FFC();
  v10 = sub_1D451AF74();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = sub_1D42CC940();
    v12 = (_QWORD *)sub_1D42CC940();
    v24 = sub_1D42CC940();
    *(_DWORD *)v11 = 136446722;
    swift_bridgeObjectRetain();
    v21 = sub_1D43D72EC(a1, a2, &v24);
    sub_1D44505C4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2114;
    v13 = *a3;
    v14 = a3[2];
    v15 = (void *)objc_opt_self();
    v21 = v13;
    v22 = a3[1];
    v23 = v14;
    v16 = objc_msgSend(v15, sel_valueWithCMTime_, &v21);
    v21 = (uint64_t)v16;
    sub_1D44505C4();
    *v12 = v16;
    *(_WORD *)(v11 + 22) = 2114;
    v21 = sub_1D451AEE4();
    v22 = v17;
    v23 = v18;
    v19 = objc_msgSend(v15, sel_valueWithCMTime_, &v21);
    v21 = (uint64_t)v19;
    sub_1D451B1A8();
    v12[1] = v19;
    _os_log_impl(&dword_1D42A7000, v9, v10, a4, (uint8_t *)v11, 0x20u);
    sub_1D42B28FC((uint64_t *)&unk_1EFE50850);
    swift_arrayDestroy();
    sub_1D42CC934();
  }

  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1D444E02C(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, const char *a9)
{
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v25;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (qword_1EFE40338 != -1)
    swift_once();
  v16 = sub_1D430710C();
  sub_1D42CC880(v16, (uint64_t)qword_1EFEA7700);
  swift_bridgeObjectRetain_n();
  v17 = sub_1D4519FFC();
  v18 = sub_1D451AF74();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = sub_1D42CC940();
    v25 = a5;
    v20 = (_QWORD *)sub_1D42CC940();
    v30 = sub_1D42CC940();
    *(_DWORD *)v19 = 136446722;
    swift_bridgeObjectRetain();
    sub_1D43D72EC(a1, a2, &v30);
    sub_1D44504B4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v19 + 12) = 2114;
    v21 = (void *)objc_opt_self();
    v27 = a3;
    v28 = a4;
    v29 = v25;
    v22 = objc_msgSend(v21, sel_valueWithCMTime_, &v27);
    sub_1D44504B4();
    *v20 = v22;
    *(_WORD *)(v19 + 22) = 2114;
    v27 = a6;
    v28 = a7;
    v29 = a8;
    v23 = objc_msgSend(v21, sel_valueWithCMTime_, &v27);
    v27 = v23;
    sub_1D451B1A8();
    v20[1] = v23;
    _os_log_impl(&dword_1D42A7000, v17, v18, a9, (uint8_t *)v19, 0x20u);
    sub_1D42B28FC((uint64_t *)&unk_1EFE50850);
    swift_arrayDestroy();
    sub_1D42CC934();
  }

  return swift_bridgeObjectRelease_n();
}

void sub_1D444E2A8()
{
  os_log_type_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = sub_1D42B28FC(&qword_1EFE4DC70);
  MEMORY[0x1E0C80A78](v1);
  sub_1D43383FC();
  if (qword_1EFE40338 != -1)
    swift_once();
  v2 = sub_1D430710C();
  v3 = sub_1D42CC880(v2, (uint64_t)qword_1EFEA7700);
  sub_1D43B3BC0();
  sub_1D43B3BC0();
  sub_1D4519FFC();
  v4 = sub_1D43A1A0C();
  if (sub_1D432AE3C(v4))
  {
    v5 = sub_1D42CC940();
    v6 = (_QWORD *)sub_1D42CC940();
    *(_DWORD *)v5 = 134349314;
    sub_1D451B1A8();
    *(_WORD *)(v5 + 12) = 2112;
    sub_1D43B3BC0();
    v9 = sub_1D445064C();
    sub_1D451B1A8();
    *v6 = v9;
    sub_1D42D71D8();
    sub_1D42D71D8();
    _os_log_impl(&dword_1D42A7000, v3, v0, "%{public}ld consecutive audio heartbeats detected unhealthy buffers. Error: %@.", (uint8_t *)v5, 0x16u);
    sub_1D42B28FC((uint64_t *)&unk_1EFE50850);
    sub_1D43E625C();
    sub_1D42CC934();
  }
  sub_1D42D71D8();
  sub_1D42D71D8();

  v7 = sub_1D451AAC4();
  sub_1D438E848(v7);
  v8 = sub_1D42B6F40();
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v8 + 24) = 0;
  sub_1D444D358();
  swift_release();
  sub_1D42CB520();
}

uint64_t sub_1D444E46C()
{
  return swift_task_switch();
}

uint64_t sub_1D444E480()
{
  _QWORD *v0;
  id v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  char v8;
  double v9;

  v1 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v2 = objc_msgSend(v1, sel_processName);

  sub_1D451A6EC();
  sub_1D4450638();
  sub_1D44503C0();
  v0[5] = v3;
  v0[6] = 0x65746E6F43646142;
  sub_1D445056C(0xEA0000000000746ELL);
  v4 = (_QWORD *)swift_task_alloc();
  v0[16] = v4;
  v5 = sub_1D44504CC(v4, (uint64_t)sub_1D444E52C);
  return sub_1D445044C(v5, v6, v7, v8, v9);
}

uint64_t sub_1D444E52C()
{
  sub_1D4450420();
  return sub_1D42B8DA8();
}

uint64_t sub_1D444E56C()
{
  uint64_t v0;

  sub_1D445040C();
  sub_1D4450440();
  sub_1D44505E4();
  sub_1D445053C();
  sub_1D42B7204();
  sub_1D4450554();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D444E5A8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *log;
  os_log_type_t v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;

  sub_1D445040C();
  sub_1D4450440();
  sub_1D44505E4();
  sub_1D445053C();
  sub_1D42B7204();
  sub_1D4450554();
  if (qword_1EFE40338 != -1)
    swift_once();
  v1 = sub_1D430710C();
  log = sub_1D42CC880(v1, (uint64_t)qword_1EFEA7700);
  sub_1D42E3CE4();
  sub_1D42E3CE4();
  sub_1D4519FFC();
  v3 = sub_1D43A1A0C();
  if (sub_1D432AE3C(v3))
  {
    sub_1D42CC940();
    v4 = (_QWORD *)sub_1D42CC940();
    sub_1D4450508(5.7779e-34);
    v5 = sub_1D445064C();
    sub_1D445045C(v5);
    *v4 = 12;
    sub_1D42D71D8();
    sub_1D42D71D8();
    sub_1D4450478(&dword_1D42A7000, v6, v7, "failed to capture unhealthy audio bug: %@", v8, v9, v10, v11, log);
    sub_1D42B28FC((uint64_t *)&unk_1EFE50850);
    sub_1D43E625C();
    sub_1D42CC934();
  }
  sub_1D42D71D8();
  sub_1D42D71D8();
  sub_1D42D71D8();

  return sub_1D4448B24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D444E6F4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  id v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1D42B28FC(&qword_1EFE4DC70);
  MEMORY[0x1E0C80A78](v6);
  sub_1D43383FC();
  sub_1D44FB054(*(unint64_t **)(a2 + 16));
  sub_1D44FB054(*(unint64_t **)(a3 + 16));
  if (qword_1EFE40338 != -1)
    swift_once();
  v7 = sub_1D430710C();
  v8 = sub_1D42CC880(v7, (uint64_t)qword_1EFEA7700);
  v9 = a1;
  sub_1D4519FFC();
  v10 = sub_1D43A1A0C();
  if (sub_1D432AE3C(v10))
  {
    v11 = sub_1D42CC940();
    *(_DWORD *)v11 = 134218496;
    sub_1D44505B0();
    *(_WORD *)(v11 + 12) = 2048;
    sub_1D44505B0();
    *(_WORD *)(v11 + 22) = 1024;
    objc_msgSend(v9, sel_frameLength);
    sub_1D451B1A8();

    _os_log_impl(&dword_1D42A7000, v8, (os_log_type_t)v8, "Not enough funds to schedule audio buffer for processing! Queue Funds Spent: %lld. Queue Funds Earned: %lld. Buffer Length: %u.", (uint8_t *)v11, 0x1Cu);
    sub_1D42CC934();
  }

  v12 = sub_1D451AAC4();
  sub_1D438E848(v12);
  v13 = sub_1D42B6F40();
  *(_QWORD *)(v13 + 16) = 0;
  *(_QWORD *)(v13 + 24) = 0;
  sub_1D444D358();
  return swift_release();
}

uint64_t sub_1D444E8C4()
{
  return swift_task_switch();
}

uint64_t sub_1D444E8D8()
{
  _QWORD *v0;
  id v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  char v8;
  double v9;

  v1 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v2 = objc_msgSend(v1, sel_processName);

  sub_1D451A6EC();
  sub_1D4450638();
  sub_1D44503C0();
  v0[5] = v3;
  v0[6] = 0x776F6C667265764FLL;
  sub_1D445056C(0xE800000000000000);
  v4 = (_QWORD *)swift_task_alloc();
  v0[16] = v4;
  v5 = sub_1D44504CC(v4, (uint64_t)sub_1D444E980);
  return sub_1D445044C(v5, v6, v7, v8, v9);
}

uint64_t sub_1D444E980()
{
  sub_1D4450420();
  return sub_1D42B8DA8();
}

uint64_t sub_1D444E9C0()
{
  uint64_t v0;

  sub_1D445040C();
  sub_1D4450440();
  swift_bridgeObjectRelease();
  sub_1D445053C();
  sub_1D42B7204();
  sub_1D4450554();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D444EA00()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *log;
  os_log_type_t v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;

  sub_1D445040C();
  sub_1D4450440();
  swift_bridgeObjectRelease();
  sub_1D445053C();
  sub_1D42B7204();
  sub_1D4450554();
  if (qword_1EFE40338 != -1)
    swift_once();
  v1 = sub_1D430710C();
  log = sub_1D42CC880(v1, (uint64_t)qword_1EFEA7700);
  sub_1D42E3CE4();
  sub_1D42E3CE4();
  sub_1D4519FFC();
  v3 = sub_1D43A1A0C();
  if (sub_1D432AE3C(v3))
  {
    sub_1D42CC940();
    v4 = (_QWORD *)sub_1D42CC940();
    sub_1D4450508(5.7779e-34);
    v5 = sub_1D445064C();
    sub_1D445045C(v5);
    *v4 = 12;
    sub_1D42D71D8();
    sub_1D42D71D8();
    sub_1D4450478(&dword_1D42A7000, v6, v7, "failed to capture audio overflow bug: %@", v8, v9, v10, v11, log);
    sub_1D42B28FC((uint64_t *)&unk_1EFE50850);
    sub_1D43E625C();
    sub_1D42CC934();
  }
  sub_1D42D71D8();
  sub_1D42D71D8();
  sub_1D42D71D8();

  return sub_1D4448B24(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1D444EB50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v12[2];
  _QWORD aBlock[6];

  v2 = sub_1D451A44C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D451A470();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1D42D7108();
  if ((sub_1D44FB0AC(*(unsigned __int8 **)(*(_QWORD *)(v0
                                                      + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_eventHandlerQueueStopped)
                                          + 16)) & 1) == 0
    && (sub_1D43B4BA4(0, 1) & 1) != 0)
  {
    v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_interruptionHandler);
    v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_interruptionHandler + 8);
    v10 = sub_1D42B6F40();
    *(_QWORD *)(v10 + 16) = v9;
    *(_QWORD *)(v10 + 24) = v8;
    aBlock[4] = sub_1D42E95F0;
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D444D4E8;
    aBlock[3] = &unk_1E97B36B0;
    v11 = _Block_copy(aBlock);
    sub_1D42BE934();
    sub_1D451A464();
    v12[1] = MEMORY[0x1E0DEE9D8];
    sub_1D42B4EF4(qword_1EFE4A4B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1D42B28FC((uint64_t *)&unk_1EFE4B310);
    sub_1D4450644();
    sub_1D451B2EC();
    MEMORY[0x1D825C904](0, v1, v5, v11);
    _Block_release(v11);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v6);
    swift_release();
  }
  sub_1D42CB520();
}

void sub_1D444ED2C()
{
  sub_1D444E2A8();
  sub_1D444EB50();
}

void sub_1D444ED4C(void *a1)
{
  uint64_t v1;

  sub_1D444E6F4(a1, *(_QWORD *)(v1 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_eventHandlerQueueFundsSpent), *(_QWORD *)(v1 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_eventHandlerQueueFundsEarned));
  sub_1D444EB50();
}

uint64_t sub_1D444ED78(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_unhealthyBufferCount;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_unhealthyBufferCount);
  sub_1D42BE934();
  result = sub_1D443D73C(v4, a1);
  *(_QWORD *)(v1 + v3) = result;
  return result;
}

void sub_1D444EDC4(uint64_t a1, void *a2, _QWORD *a3, void (*a4)(uint64_t), uint64_t (*a5)(_QWORD *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  _BYTE v11[16];

  v6 = v5 + *a3;
  sub_1D43E9E7C(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), a2, 1000, a4, 10.0, (uint64_t)v11, a5);
  *(_QWORD *)v6 = v7;
  *(_DWORD *)(v6 + 8) = v8;
  *(_DWORD *)(v6 + 12) = v9;
  *(_QWORD *)(v6 + 16) = v10;
}

void *sub_1D444EE68(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, const char *a9)
{
  uint64_t v15;
  unint64_t v16;

  sub_1D42EA2A8();
  sub_1D42B4EF4((unint64_t *)&qword_1EFE4CB00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
  v15 = sub_1D451B7C0();
  sub_1D444E02C(v15, v16, a1, a2, a3, a4, a5, a6, a9);
  sub_1D42B7204();
  return a4;
}

uint64_t sub_1D444EF34(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4, const char *a5)
{
  uint64_t v8;
  unint64_t v9;

  sub_1D42EA2A8();
  sub_1D42B4EF4((unint64_t *)&qword_1EFE4CB00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
  v8 = sub_1D451B7C0();
  sub_1D444DDB8(v8, v9, a1, a5);
  sub_1D42B7204();
  return sub_1D444ED78(a3);
}

void sub_1D444EFC8(OpaqueAudioQueue *a1, AudioQueueBuffer *a2, uint64_t a3)
{
  uint64_t v3;
  void *v7;

  v7 = (void *)MEMORY[0x1D825DB34]();
  sub_1D444F028(v3, a2, a3, a1);
  objc_autoreleasePoolPop(v7);
}

void sub_1D444F028(uint64_t a1, AudioQueueBuffer *a2, uint64_t a3, OpaqueAudioQueue *a4)
{
  UInt32 mAudioDataByteSize;
  id v9;
  unsigned int v10;
  NSObject *v11;
  void **v12;
  double v13;
  NSObject *v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;

  if ((sub_1D44FB0AC(*(unsigned __int8 **)(*(_QWORD *)(a1
                                                      + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_eventHandlerQueueStopped)
                                          + 16)) & 1) == 0)
  {
    mAudioDataByteSize = a2->mAudioDataByteSize;
    if (mAudioDataByteSize)
    {
      v9 = *(id *)(a1 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_recordFormat);
      v10 = *((_DWORD *)objc_msgSend(v9, sel_streamDescription) + 6);
      if (v10)
      {
        v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C89AC0]), sel_initWithPCMFormat_frameCapacity_, v9, mAudioDataByteSize / v10);

        if (v11)
        {
          -[NSObject setFrameLength:](v11, sel_setFrameLength_, -[NSObject frameCapacity](v11, sel_frameCapacity));
          v12 = (void **)-[NSObject mutableAudioBufferList](v11, sel_mutableAudioBufferList);
          if (*(_DWORD *)v12 == 1)
          {
            memcpy(v12[2], a2->mAudioData, a2->mAudioDataByteSize);
            objc_msgSend(v9, sel_sampleRate);
            v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C89B10]), sel_initWithAudioTimeStamp_sampleRate_, a3, v13);
            sub_1D444EDC4((uint64_t)v11, v14, &OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_lastAudioHeartbeatTime, (void (*)(uint64_t))sub_1D4450248, sub_1D4450274);
            sub_1D444F32C(v11, v14);
            AudioQueueEnqueueBuffer(a4, a2, 0, 0);
          }
          else
          {
            if (qword_1EFE40338 != -1)
              swift_once();
            v18 = sub_1D451A014();
            sub_1D42CC880(v18, (uint64_t)qword_1EFEA7700);
            v14 = sub_1D4519FFC();
            v19 = sub_1D451AF5C();
            if (!os_log_type_enabled(v14, v19))
            {

              v14 = v11;
              goto LABEL_16;
            }
            v20 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v20 = 0;
            _os_log_impl(&dword_1D42A7000, v14, v19, "could not handle non-unary buffer count", v20, 2u);
            MEMORY[0x1D825E524](v20, -1, -1);
          }

LABEL_16:
          return;
        }
        if (qword_1EFE40338 == -1)
        {
LABEL_8:
          v15 = sub_1D451A014();
          sub_1D42CC880(v15, (uint64_t)qword_1EFEA7700);
          v14 = sub_1D4519FFC();
          v16 = sub_1D451AF5C();
          if (os_log_type_enabled(v14, v16))
          {
            v17 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v17 = 0;
            _os_log_impl(&dword_1D42A7000, v14, v16, "could not allocate avaudiobuffer", v17, 2u);
            MEMORY[0x1D825E524](v17, -1, -1);
          }
          goto LABEL_16;
        }
      }
      else
      {
        __break(1u);
      }
      swift_once();
      goto LABEL_8;
    }
  }
}

uint64_t sub_1D444F32C(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  id v10;
  char v11;

  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_bufferHandler);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_bufferHandler + 8);
  v7 = sub_1D42B6F40();
  swift_weakInit();
  v8 = (_QWORD *)sub_1D42B6F40();
  v8[2] = v6;
  v8[3] = v5;
  v8[4] = a1;
  v8[5] = a2;
  v8[6] = v7;
  swift_retain();
  v9 = a1;
  v10 = a2;
  v11 = sub_1D444F518((uint64_t)sub_1D44500A8, (uint64_t)v8, objc_msgSend(v9, sel_frameLength));
  if ((v11 & 1) == 0)
    sub_1D444ED4C(v9);
  sub_1D42BE93C();
  return v11 & 1;
}

void sub_1D444F404(void (*a1)(uint64_t, void *), uint64_t a2, uint64_t a3, void *a4)
{
  void *v8;

  v8 = (void *)MEMORY[0x1D825DB34]();
  sub_1D444F470(a1, a2, a3, a4);
  objc_autoreleasePoolPop(v8);
}

uint64_t sub_1D444F470(void (*a1)(uint64_t, void *), uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t result;

  a1(a3, a4);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D444EDC4(a3, a4, &OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_lastProcessingHeartbeatTime, (void (*)(uint64_t))sub_1D4450184, sub_1D44501B0);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D444F518(uint64_t a1, uint64_t a2, int64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  _QWORD *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v29;
  uint64_t v30;

  v6 = v4;
  v8 = sub_1D451A44C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1D42D7108();
  v29 = sub_1D451A470();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  sub_1D43383FC();
  v10 = *(_QWORD *)(v4 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_eventHandlerQueueFundsSpent);
  v11 = *(_QWORD *)(v6 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_eventHandlerQueueFundsEarned);
  v12 = *(_QWORD *)(v6 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_eventHandlerQueueStopped);
  v13 = sub_1D44FB054(*(unint64_t **)(v11 + 16));
  if ((sub_1D44FB0AC(*(unsigned __int8 **)(v12 + 16)) & 1) == 0)
  {
    v26 = v3;
    if (a3)
    {
      v25 = v9;
      v14 = *(unint64_t **)(v10 + 16);
      do
      {
        v15 = sub_1D44FB054(v14);
        v16 = v13 - v15;
        if ((uint64_t)(v13 - v15) >= a3)
          v17 = a3;
        else
          v17 = 0;
      }
      while ((sub_1D43B4C28(v15, v17 + v15) & 1) == 0);
      v9 = v25;
      if (v16 < a3)
        return 0;
    }
    v19 = (_QWORD *)sub_1D42B6F40();
    v19[2] = v12;
    v19[3] = a1;
    v19[4] = a2;
    v19[5] = v11;
    v19[6] = a3;
    v20 = sub_1D44505D0((uint64_t)&unk_1E97BF8D8);
    swift_retain();
    sub_1D42E3CA4();
    swift_retain();
    v3 = v26;
    sub_1D451A464();
    sub_1D42B4EF4(qword_1EFE4A4B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1D42B28FC((uint64_t *)&unk_1EFE4B310);
    sub_1D4450644();
    sub_1D44504EC();
    sub_1D451B2EC();
    MEMORY[0x1D825C904](0, v26, v5, v20);
    _Block_release(v20);
    sub_1D44505A4(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
    sub_1D439E168(v30);
    swift_release();
  }
  v21 = v9;
  v22 = sub_1D42B6F40();
  *(_QWORD *)(v22 + 16) = v6;
  v23 = sub_1D42B6F40();
  *(_QWORD *)(v23 + 16) = sub_1D445017C;
  *(_QWORD *)(v23 + 24) = v22;
  v24 = sub_1D44505D0((uint64_t)&unk_1E97BF950);
  swift_retain();
  swift_retain_n();
  sub_1D451A464();
  sub_1D42B4EF4(qword_1EFE4A4B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1D42B28FC((uint64_t *)&unk_1EFE4B310);
  sub_1D4450644();
  sub_1D44504EC();
  sub_1D451B2EC();
  MEMORY[0x1D825C904](0, v3, v5, v24);
  _Block_release(v24);
  swift_release();
  sub_1D44505A4(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
  sub_1D439E168(v30);
  swift_release();
  sub_1D42BE93C();
  return 1;
}

void sub_1D444F864(OpaqueAudioQueue *a1, int a2)
{
  os_log_type_t v2;
  OSStatus Property;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD *v10;
  uint64_t v11;
  UInt32 ioDataSize;
  int outData;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  if (a2 == 1634824814)
  {
    ioDataSize = 4;
    outData = 0;
    Property = AudioQueueGetProperty(a1, 0x6171726Eu, &outData, &ioDataSize);
    sub_1D44C85E4(Property);
    if (ioDataSize == 4)
    {
      if (!outData)
        sub_1D444EB50();
    }
    else
    {
      sub_1D42DCEE8();
      sub_1D4311F68();
      sub_1D430740C();
      sub_1D4342D78(v4, v5, (uint64_t)"bad returned property size");
      swift_willThrow();
      if (qword_1EFE40338 != -1)
        swift_once();
      v6 = sub_1D430710C();
      v7 = sub_1D42CC880(v6, (uint64_t)qword_1EFEA7700);
      sub_1D4311FD8();
      sub_1D4311FD8();
      sub_1D4519FFC();
      v8 = sub_1D43A1A0C();
      if (sub_1D4307454(v8))
      {
        v9 = (uint8_t *)sub_1D42CC940();
        v10 = (_QWORD *)sub_1D42CC940();
        *(_DWORD *)v9 = 138412290;
        sub_1D4311FD8();
        v11 = _swift_stdlib_bridgeErrorToNSError();
        sub_1D43C3A68();
        *v10 = v11;
        sub_1D4311F78();
        sub_1D4311F78();
        _os_log_impl(&dword_1D42A7000, v7, v2, "error checking running status %@", v9, 0xCu);
        sub_1D42B28FC((uint64_t *)&unk_1EFE50850);
        sub_1D43E625C();
        sub_1D42CC934();
      }
      sub_1D4311F78();
      sub_1D4311F78();
      sub_1D4311F78();

    }
  }
}

uint64_t sub_1D444FA6C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t result;

  v2 = (_QWORD *)(a1 + 16);
  result = swift_beginAccess();
  if (*(_QWORD *)(a1 + 16))
  {
    swift_beginAccess();
    *v2 = 0;
    return swift_release();
  }
  return result;
}

void sub_1D444FAD0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1D42EA2A8();
  sub_1D439E168(*(_QWORD *)(v1 - 8));

  sub_1D44505DC();
  sub_1D44505DC();
  sub_1D44505DC();
  sub_1D4450598();
  sub_1D4450598();
  swift_unknownObjectRelease();

  sub_1D42B6E24();
}

uint64_t sub_1D444FB70()
{
  sub_1D444FAD0();
  return swift_deallocClassInstance();
}

uint64_t sub_1D444FB94()
{
  return type metadata accessor for SNAudioRecordingQueueScheduler();
}

uint64_t type metadata accessor for SNAudioRecordingQueueScheduler()
{
  uint64_t result;

  result = qword_1EFE52378;
  if (!qword_1EFE52378)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D444FBD4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D4519D20();
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t sub_1D444FC90(uint64_t result, OpaqueAudioQueue *a2, AudioQueueBuffer *a3, uint64_t a4)
{
  if (result)
  {
    swift_retain();
    sub_1D444EFC8(a2, a3, a4);
    return sub_1D4450490();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D444FCD8(uint64_t result, OpaqueAudioQueue *a2, int a3)
{
  if (result)
  {
    swift_retain();
    sub_1D444F864(a2, a3);
    return sub_1D4450490();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D444FD18(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  *(_QWORD *)(v10 + 104) = 0;
  *(_QWORD *)(v10 + 112) = 0;
  *(_QWORD *)(v10 + 16) = a1;
  *(_DWORD *)(v10 + 24) = a2;
  *(_QWORD *)(v10 + 32) = a3;
  *(_QWORD *)(v10 + 40) = a4;
  *(_QWORD *)(v10 + 48) = a5;
  *(_QWORD *)(v10 + 56) = a6;
  *(_QWORD *)(v10 + 64) = a7;
  *(_QWORD *)(v10 + 72) = a8;
  *(_QWORD *)(v10 + 80) = a9;
  *(_QWORD *)(v10 + 88) = a10;
  *(_BYTE *)(v10 + 96) = 0;
  sub_1D4450530();
  *(_QWORD *)(v10 + 104) = 0;
  *(_QWORD *)(v10 + 112) = 0;
  swift_release();
  return v10;
}

id *sub_1D444FD84()
{
  id *v0;

  sub_1D444FDD4();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

void sub_1D444FDD4()
{
  uint64_t v0;
  unsigned __int8 *v1;
  uint64_t v2;
  OpaqueAudioQueue *v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  if (*(_BYTE *)(v0 + 96) == 1)
  {
    v2 = v0;
    sub_1D4450530();
    v3 = *(OpaqueAudioQueue **)(v0 + 104);
    if (v3)
    {
      v4 = *(char **)(v0 + 112);
      if (v4)
      {
        v1 = *(unsigned __int8 **)(*(_QWORD *)&v4[OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_eventHandlerQueueStopped]
                                 + 16);
        sub_1D42BE934();
        sub_1D44FB0B8(v1, 1u);
        AudioQueueRemovePropertyListener(v3, 0x6171726Eu, (AudioQueuePropertyListenerProc)sub_1D444FF64, v4);
        swift_release();
      }
      if (qword_1EFE40338 != -1)
        swift_once();
      v5 = sub_1D430710C();
      v6 = sub_1D4307218(v5, (uint64_t)qword_1EFEA7700);
      v7 = sub_1D451AF74();
      if (sub_1D4307454(v7))
      {
        v8 = (uint8_t *)sub_1D42CC940();
        *(_WORD *)v8 = 0;
        sub_1D4450654(&dword_1D42A7000, v6, (os_log_type_t)v1, "Stopping audio queue", v8);
        sub_1D42CC934();
      }

      AudioQueueStop(v3, 1u);
      AudioQueueDispose(v3, 1u);
    }
    *(_QWORD *)(v2 + 104) = 0;
    *(_QWORD *)(v2 + 112) = 0;
    swift_release();
    *(_BYTE *)(v2 + 96) = 0;
  }
}

uint64_t sub_1D444FF20()
{
  sub_1D444FD84();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SNAudioRecordingQueue()
{
  return objc_opt_self();
}

uint64_t sub_1D444FF68(uint64_t a1, int *a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v7 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = swift_task_alloc();
  v5 = (_QWORD *)sub_1D42B8F00(v4);
  *v5 = v2;
  v5[1] = sub_1D43E5B40;
  return v7(a1);
}

uint64_t sub_1D444FFC8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D444FFEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D444FFFC()
{
  return swift_release();
}

unint64_t sub_1D4450004()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFE4A4C0;
  if (!qword_1EFE4A4C0)
  {
    v1 = sub_1D42B8B10((uint64_t *)&unk_1EFE4B310);
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EFE4A4C0);
  }
  return result;
}

uint64_t sub_1D4450048()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D445006C()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D44500A8()
{
  return sub_1D4450144((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D444F404);
}

uint64_t sub_1D44500B4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1D431B44C();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_1D42B8F00(v1);
  *v2 = v0;
  v2[1] = sub_1D42F9A58;
  sub_1D431B338();
  return sub_1D444E8C4();
}

uint64_t sub_1D4450104()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D4450138()
{
  return sub_1D4450144((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D43EA014);
}

uint64_t sub_1D4450144(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1D4450158()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D445017C()
{
  uint64_t v0;

  return sub_1D444FA6C(v0);
}

void *sub_1D4450184(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  return sub_1D444EE68(a1, a2, a3, a4, a5, a6, *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), "Audio Processed Reanchor (%{public}s); time changed from %{public}@ to %{public}@");
}

uint64_t sub_1D44501B0(uint64_t *a1)
{
  uint64_t v1;

  return sub_1D444EF34(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), "Audio Processed Heartbeat (%{public}s; time changed from %{public}@ to %{public}@");
}

uint64_t sub_1D44501D4()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D44501F8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1D431B44C();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_1D42B8F00(v1);
  *v2 = v0;
  v2[1] = sub_1D42F92EC;
  sub_1D431B338();
  return sub_1D444E46C();
}

void *sub_1D4450248(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  return sub_1D444EE68(a1, a2, a3, a4, a5, a6, *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), "Audio Heartbeat Reanchor (%{public}s); time changed from %{public}@ to %{public}@");
}

uint64_t sub_1D4450274(uint64_t *a1)
{
  uint64_t v1;

  return sub_1D444EF34(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), "Audio Running Heartbeat (%{public}s); time changed from %{public}@ to %{public}@");
}

uint64_t sub_1D4450298(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 24) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 32) = v3;
  *v3 = v2;
  v3[1] = sub_1D4450300;
  return v5(v2 + 16);
}

uint64_t sub_1D4450300()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD **)(*v0 + 24);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_QWORD *)(v1 + 16);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1D4450350()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_1D431B44C();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_1D42B8F00(v1);
  *v2 = v0;
  v2[1] = sub_1D42F92EC;
  v3 = sub_1D431B338();
  return sub_1D430C3D0(v3, v4, v5, v6);
}

void sub_1D44503C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = v0;
  strcpy((char *)(v1 + 16), "SoundAnalysis");
  *(_WORD *)(v1 + 30) = -4864;
  *(_QWORD *)(v1 + 32) = 0x6E6964726F636552;
}

uint64_t sub_1D445040C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4450420()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 136) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1D4450440()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D445044C(uint64_t a1, int a2, uint64_t a3, char a4, double a5)
{
  return sub_1D43667BC(a1, a2, a3, a4, a5);
}

uint64_t sub_1D445045C(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return sub_1D451B1A8();
}

void sub_1D4450478(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, os_log_t log)
{
  uint8_t *v9;
  os_log_type_t v10;

  _os_log_impl(a1, log, v10, a4, v9, 0xCu);
}

uint64_t sub_1D4450490()
{
  return swift_release();
}

uint64_t sub_1D445049C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

uint64_t sub_1D44504B4()
{
  return sub_1D451B1A8();
}

uint64_t sub_1D44504CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_1D44504EC()
{
  uint64_t v0;

  return v0 - 136;
}

id sub_1D4450508(float a1)
{
  void *v1;
  float *v2;

  *v2 = a1;
  return v1;
}

uint64_t sub_1D445051C()
{
  return sub_1D451AAC4();
}

uint64_t sub_1D4450530()
{
  return swift_beginAccess();
}

uint64_t sub_1D445053C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4450544()
{
  return sub_1D451AA70();
}

uint64_t sub_1D4450554()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D445055C()
{
  return swift_unknownObjectRelease();
}

void sub_1D445056C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v3[7] = a1;
  v3[8] = 0;
  v3[9] = 0xE000000000000000;
  v3[10] = v1;
  v3[12] = 0;
  v3[13] = 0;
  v3[11] = v2;
}

void sub_1D4450584(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = v5 + v4;
  *(_QWORD *)v6 = v1;
  *(_DWORD *)(v6 + 8) = v2;
  *(_DWORD *)(v6 + 12) = v3;
  *(_QWORD *)(v6 + 16) = a1;
}

uint64_t sub_1D4450598()
{
  return swift_release();
}

uint64_t sub_1D44505A4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_1D44505B0()
{
  return sub_1D451B1A8();
}

id sub_1D44505BC()
{
  void *v0;

  return v0;
}

uint64_t sub_1D44505C4()
{
  return sub_1D451B1A8();
}

void *sub_1D44505D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = v1;
  *(_QWORD *)(v2 - 104) = a1;
  return _Block_copy((const void *)(v2 - 128));
}

uint64_t sub_1D44505DC()
{
  return swift_release();
}

uint64_t sub_1D44505E4()
{
  return swift_bridgeObjectRelease();
}

id sub_1D44505F0()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 3038));
}

uint64_t sub_1D44505FC()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1D4450608()
{
  return swift_getObjectType();
}

uint64_t sub_1D4450614(uint64_t a1)
{
  uint64_t v1;

  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v1, 1, a1);
}

void sub_1D4450638()
{
  void *v0;

}

unint64_t sub_1D4450644()
{
  return sub_1D4450004();
}

uint64_t sub_1D445064C()
{
  return _swift_stdlib_bridgeErrorToNSError();
}

void sub_1D4450654(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 2u);
}

uint64_t sub_1D445065C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1D44506DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1);
  v10 = a5 + *(int *)(type metadata accessor for TimestampedValue(0, a3, a4, v9) + 36);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v10, a2, a4);
}

void sub_1D4450748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[19];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v16 = a3;
  v17 = a4;
  v20 = *(_QWORD *)(a2 - 8);
  v13[16] = *(_QWORD *)(v20 + 64);
  v13[17] = a1;
  v4 = MEMORY[0x1E0C80A78](a1);
  v19 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v6 + 16);
  v18 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v4);
  v13[2] = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v9 + 48);
  v14 = *(_QWORD *)(v9 + 32);
  v10 = v14;
  sub_1D4452518();
  v11 = sub_1D44524D0();
  v13[8] = v11;
  v12 = sub_1D44524D0();
  v21 = v7;
  v22 = v11;
  v23 = v12;
  v24 = v10;
  sub_1D445250C();
}

void sub_1D4450858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)(v11 - 296) = a1;
  *(_QWORD *)(v11 - 288) = *(_QWORD *)(a1 - 8);
  sub_1D42BA1F0();
  v13 = MEMORY[0x1E0C80A78](v12);
  *(_QWORD *)(v11 - 312) = (char *)&a9 - v14;
  v15 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v11 - 248) = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v13);
  *(_QWORD *)(v11 - 184) = (char *)&a9 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v10 + 40);
  v18 = sub_1D4452518();
  v20 = type metadata accessor for TimestampedValue(255, v18, v9, v19);
  *(_QWORD *)(v11 - 272) = v20;
  *(_QWORD *)(v11 - 120) = v15;
  *(_QWORD *)(v11 - 112) = v20;
  *(_QWORD *)(v11 - 104) = v9;
  *(_QWORD *)(v11 - 96) = v17;
  sub_1D445250C();
}

void sub_1D4450900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;

  *(_QWORD *)(v15 - 264) = a1;
  *(_QWORD *)(v15 - 256) = *(_QWORD *)(a1 - 8);
  sub_1D42BA1F0();
  MEMORY[0x1E0C80A78](v16);
  *(_QWORD *)(v15 - 280) = (char *)&a9 - v17;
  sub_1D42BA1F0();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&a9 - v19;
  type metadata accessor for Locked(0, v9, v21, v22);
  *(_QWORD *)(v15 - 360) = *(_QWORD *)(v13 + 64);
  *(_QWORD *)(v15 - 200) = v9;
  sub_1D451B190();
  v23 = sub_1D4450CE4((uint64_t)v20);
  *(_QWORD *)(v15 - 128) = v23;
  v24 = (uint64_t *)(*(_QWORD *)(v15 - 192) + *(int *)(v13 + 88));
  v26 = *v24;
  v25 = v24[1];
  *(_QWORD *)(v15 - 320) = v26;
  *(_QWORD *)(v15 - 328) = v25;
  v27 = *(void (**)(uint64_t))(*(_QWORD *)(v15 - 160) + 16);
  *(_QWORD *)(v15 - 224) = v11;
  v27(v10);
  v28 = (_QWORD *)sub_1D42B6F40();
  v28[2] = v11;
  v28[3] = v14;
  v29 = *(_QWORD *)(v15 - 176);
  v30 = *(_QWORD *)(v15 - 216);
  v28[4] = v29;
  v28[5] = v30;
  *(_QWORD *)(v15 - 336) = v12;
  v31 = *(_QWORD *)(v15 - 168);
  v28[6] = v12;
  v28[7] = v31;
  *(_QWORD *)(v15 - 344) = v13;
  v32 = *(_QWORD *)(v13 + 56);
  *(_QWORD *)(v15 - 136) = v32;
  v33 = *(_QWORD *)(v15 - 208);
  v28[8] = v33;
  v28[9] = v32;
  v34 = *(_QWORD *)(v13 + 72);
  v35 = *(_QWORD *)(v15 - 360);
  v28[10] = v35;
  v28[11] = v34;
  v28[12] = v23;
  v36 = (_QWORD *)sub_1D42B6F40();
  v37 = *(_QWORD *)(v15 - 224);
  v36[2] = v37;
  v36[3] = v14;
  v36[4] = v29;
  v36[5] = v30;
  v36[6] = v12;
  v36[7] = v31;
  v38 = *(_QWORD *)(v15 - 136);
  v36[8] = v33;
  v36[9] = v38;
  v36[10] = v35;
  v36[11] = v34;
  sub_1D4467E38((uint64_t)sub_1D4452130, v37, *(_QWORD *)(v15 - 312));
}

void sub_1D4450AAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  swift_retain();
  sub_1D42BE93C();
  swift_release();
  v8 = v1;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 160) + 8))(v0, v1);
  v9 = *(_QWORD *)(v7 - 296);
  MEMORY[0x1D825E41C](&unk_1D4544100, v9);
  v10 = sub_1D451A2E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 288) + 8))(v4, v9);
  (*(void (**)(uint64_t))(v7 - 320))(v10);
  sub_1D42BE93C();
  v11 = *(_QWORD *)(v7 - 144);
  v12 = *(_QWORD *)(v7 - 344);
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v11 + 16))(*(_QWORD *)(v7 - 152), *(_QWORD *)(v7 - 192), v12);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (char *)swift_allocObject();
  *((_QWORD *)v14 + 2) = v8;
  *((_QWORD *)v14 + 3) = v6;
  v15 = *(_QWORD *)(v7 - 176);
  *((_QWORD *)v14 + 4) = v15;
  *((_QWORD *)v14 + 5) = v2;
  v16 = *(_QWORD *)(v7 - 336);
  v17 = *(_QWORD *)(v7 - 168);
  *((_QWORD *)v14 + 6) = v16;
  *((_QWORD *)v14 + 7) = v17;
  v18 = *(_QWORD *)(v7 - 208);
  v19 = *(_QWORD *)(v7 - 136);
  *((_QWORD *)v14 + 8) = v18;
  *((_QWORD *)v14 + 9) = v19;
  *((_QWORD *)v14 + 10) = v5;
  *((_QWORD *)v14 + 11) = v3;
  *((_QWORD *)v14 + 12) = *(_QWORD *)(v7 - 128);
  (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v7 - 144) + 32))(&v14[v13], *(_QWORD *)(v7 - 152), v12);
  v20 = (_QWORD *)sub_1D42B6F40();
  v20[2] = *(_QWORD *)(v7 - 224);
  v20[3] = v6;
  v21 = *(_QWORD *)(v7 - 216);
  v20[4] = v15;
  v20[5] = v21;
  v20[6] = v16;
  v20[7] = v17;
  v22 = *(_QWORD *)(v7 - 136);
  v20[8] = v18;
  v20[9] = v22;
  v20[10] = v5;
  v20[11] = v3;
  sub_1D4467E38((uint64_t)sub_1D445223C, v6, *(_QWORD *)(v7 - 280));
}

uint64_t sub_1D4450C48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_retain();
  sub_1D42BE93C();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 248) + 8))(v0, v2);
  v4 = *(_QWORD *)(v3 - 264);
  MEMORY[0x1D825E41C](&unk_1D4544100, v4);
  sub_1D451A3F8();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 256) + 8))(v1, v4);
}

uint64_t sub_1D4450CE4(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1D4451694(a1);
  return v2;
}

uint64_t sub_1D4450D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  void (*v33)(uint64_t, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t AssociatedTypeWitness;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v47 = a4;
  v9 = a3;
  v57 = a1;
  v53 = a9;
  v11 = *a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = swift_getAssociatedTypeWitness();
  v50 = *(_QWORD *)(v12 - 8);
  v51 = v12;
  MEMORY[0x1E0C80A78](v12);
  v48 = (char *)&v40 - v13;
  v14 = *(_QWORD *)(v11 + 80);
  v46 = sub_1D451B160();
  v43 = *(_QWORD *)(v46 - 8);
  v15 = MEMORY[0x1E0C80A78](v46);
  v52 = (char *)&v40 - v16;
  v17 = *(_QWORD *)(v14 - 8);
  v18 = MEMORY[0x1E0C80A78](v15);
  v45 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  v41 = (char *)&v40 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v40 - v23;
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v40 - v25;
  v44 = v9;
  sub_1D44515A4((uint64_t)v24);
  v55 = a8;
  v56 = a2;
  v27 = *(_QWORD *)(a8 + 8);
  sub_1D451B574();
  v42 = v17;
  v28 = *(void (**)(char *, uint64_t))(v17 + 8);
  v28(v24, v14);
  v29 = *(void (**)(uint64_t, uint64_t))(a6 + 32);
  v30 = swift_checkMetadataState();
  v29(v30, a6);
  v49 = v27;
  AssociatedTypeWitness = (uint64_t)v26;
  v31 = v28;
  LOBYTE(v9) = sub_1D451A698();
  v28(v24, v14);
  if ((v9 & 1) == 0)
  {
    v32 = v41;
    v29(v30, a6);
    sub_1D451B580();
    v28(v32, v14);
    sub_1D4451610((uint64_t)v24);
  }
  v33 = *(void (**)(uint64_t, uint64_t))(a6 + 24);
  v34 = v48;
  v33(v30, a6);
  v35 = v51;
  v36 = sub_1D451ACA4();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v34, v35);
  v58 = v36;
  sub_1D4452330();
  v37 = (uint64_t)v52;
  sub_1D451AC5C();
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v37, 1, v14) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v37, v46);
    sub_1D445236C();
    swift_allocError();
    swift_willThrow();
  }
  else
  {
    v39 = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v45, v37, v14);
    sub_1D451B58C();
    v33(v30, a6);
    v31(v39, v14);
  }
  return ((uint64_t (*)(uint64_t, uint64_t))v31)(AssociatedTypeWitness, v14);
}

void sub_1D44510F4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t AssociatedTypeWitness;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD v33[9];
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v33[7] = a6;
  v43 = a7;
  v44 = a8;
  v41 = a4;
  v42 = a5;
  v45 = a2;
  v34 = a1;
  v35 = a9;
  v38 = a13;
  v39 = a12;
  v37 = a15;
  v40 = a11;
  v33[8] = a10;
  v15 = *(_QWORD *)(*(_QWORD *)a3 + 80);
  v16 = sub_1D451B160();
  v33[4] = *(_QWORD *)(v16 - 8);
  v33[5] = v16;
  v17 = MEMORY[0x1E0C80A78](v16);
  v36 = (char *)v33 - v18;
  v19 = *(_QWORD *)(v15 - 8);
  v20 = MEMORY[0x1E0C80A78](v17);
  v33[3] = (char *)v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)v33 - v23;
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)v33 - v25;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v29 = (char *)v33 - v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))((char *)v33 - v28, v34, AssociatedTypeWitness);
  sub_1D44515A4((uint64_t)v24);
  v33[1] = *(_QWORD *)(a14 + 8);
  sub_1D451B574();
  v33[2] = v19;
  v31 = v24;
  v32 = v35;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v31, v15);
  sub_1D44506DC((uint64_t)v29, (uint64_t)v26, AssociatedTypeWitness, v15, v32);
  sub_1D44513F8();
}

uint64_t sub_1D44512EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  *(_QWORD *)(v5 - 72) = a1;
  sub_1D4452330();
  v6 = *(_QWORD *)(v5 - 168);
  sub_1D451AC5C();
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v6, 1, v2) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 224) + 8))(v6, *(_QWORD *)(v5 - 216));
    sub_1D445236C();
    swift_allocError();
    swift_willThrow();
    v8 = type metadata accessor for TimestampedValue(0, v1, v2, v7);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v3, v8);
  }
  else
  {
    v10 = *(_QWORD *)(v5 - 232);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 240) + 32))(v10, v6, v2);
    sub_1D451B58C();
    return v4(v10, v2);
  }
}

void sub_1D44513F8()
{
  _s21CollectionTimestamperVMa();
}

uint64_t sub_1D4451444(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v2 = v1 + *(int *)(a1 + 84);
  v3 = *(_QWORD *)v2;
  if (!*(_BYTE *)(v2 + 16))
    return v3;
  if (*(_BYTE *)(v2 + 16) != 1)
  {
    swift_getAssociatedTypeWitness();
    return sub_1D451ACA4();
  }
  v4 = *(_QWORD *)(v2 + 8);
  swift_getAssociatedTypeWitness();
  result = sub_1D451ACA4();
  v6 = result * v4;
  if ((unsigned __int128)(result * (__int128)v4) >> 64 != (result * v4) >> 63)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (!v3)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v6 != 0x8000000000000000 || v3 != -1)
    return v6 / v3;
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_1D445150C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  return sub_1D451B190();
}

void sub_1D4451590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D4450748(a1, a4, a2, a3);
}

void sub_1D44515A4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D44524FC();
  sub_1D44524E4();
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v2);
  sub_1D4451604(v1);
}

void sub_1D4451604(uint64_t a1)
{
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(a1 + 16) + 16));
}

uint64_t sub_1D4451610(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  sub_1D44524FC();
  sub_1D44524E4();
  swift_beginAccess();
  v5 = *(_QWORD *)(v3 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(v2, a1, v5);
  swift_endAccess();
  sub_1D4451604(v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
}

char *sub_1D4451694(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  _DWORD *v5;

  v3 = *(_QWORD *)v1;
  type metadata accessor for SafeLock();
  v4 = sub_1D42B6F40();
  v5 = (_DWORD *)swift_slowAlloc();
  *v5 = 0;
  *(_QWORD *)(v4 + 16) = v5;
  *((_QWORD *)v1 + 2) = v4;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 32))(&v1[*(_QWORD *)(*(_QWORD *)v1 + 96)], a1);
  return v1;
}

uint64_t *sub_1D445170C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 96));
  return v0;
}

uint64_t sub_1D4451750()
{
  sub_1D445170C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Locked(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Locked);
}

uint64_t sub_1D4451780(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1D445185C + 4 * byte_1D45407F0[v21 - 1]))();
}

void sub_1D44518D0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0u;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t type metadata accessor for TimestampedValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TimestampedValue);
}

uint64_t sub_1D4451AD0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1D4451AD8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D4451B5C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __int128 v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 31) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_OWORD *)v11;
    *(_BYTE *)(v10 + 16) = *(_BYTE *)(v11 + 16);
    *(_OWORD *)v10 = v12;
    v13 = (_QWORD *)(((unint64_t)v4 + v6 + 31) & 0xFFFFFFFFFFFFFFF8);
    v14 = (_QWORD *)(((unint64_t)a2 + v6 + 31) & 0xFFFFFFFFFFFFFFF8);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
  }
  swift_retain();
  return v4;
}

uint64_t sub_1D4451C2C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_release();
}

uint64_t sub_1D4451C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  __int128 v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  *(_OWORD *)v9 = v11;
  v12 = (_QWORD *)((v7 + 31) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)((v8 + 31) & 0xFFFFFFFFFFFFFFF8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  return a1;
}

uint64_t sub_1D4451CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  __int128 v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  *(_OWORD *)v9 = v11;
  v12 = (_QWORD *)((v7 + 31) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)((v8 + 31) & 0xFFFFFFFFFFFFFFF8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1D4451D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_BYTE *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = v11;
  *(_OWORD *)((v7 + 31) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v8 + 31) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D4451E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  __int128 v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  *(_OWORD *)v9 = v11;
  *(_OWORD *)((v7 + 31) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v8 + 31) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1D4451E88(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)((a1 + v8 + 31) & 0xFFFFFFFFFFFFF8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v6, v4);
    }
  }
  else
  {
    if (((((v8 + 31) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1D4451F04 + 4 * byte_1D45407FE[v11]))();
  }
}

void sub_1D4451F84(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 31) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((*(_DWORD *)(v5 + 64) + 31) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((*(_QWORD *)(v5 + 64) + 31) & 0xFFFFFFFFFFFFFFF8) + 16);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1D4452070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0x7FFFFFFF)
    {
      v8 = (_QWORD *)((v5 + v4 + 31) & 0xFFFFFFFFFFFFFFF8);
      if ((a2 & 0x80000000) != 0)
      {
        v9 = a2 ^ 0x80000000;
        v8[1] = 0;
      }
      else
      {
        v9 = (a2 - 1);
      }
      *v8 = v9;
    }
    else
    {
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v5, a2, a3, a4);
    }
  }
  return result;
}

void _s21CollectionTimestamperVMa()
{
  JUMPOUT(0x1D825E3A4);
}

uint64_t sub_1D445210C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D4452130@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1D4450D20(a1, a2, *(_QWORD **)(v3 + 96), a3, *(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 72), *(_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 88));
}

uint64_t sub_1D4452170()
{
  return sub_1D44522FC();
}

void sub_1D4452184()
{
  _s21CollectionTimestamperVMa();
}

uint64_t sub_1D44521C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  v3 = (v2 + 104) & ~v2;
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v1 + v3);
  swift_release();
  return swift_deallocObject();
}

void sub_1D445223C()
{
  _s21CollectionTimestamperVMa();
}

#error "1D44522D8: call analysis failed (funcsize=17)"

uint64_t sub_1D44522FC()
{
  return sub_1D445150C();
}

unint64_t sub_1D4452330()
{
  unint64_t result;

  result = qword_1EFE524C8;
  if (!qword_1EFE524C8)
  {
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0DEB460], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1EFE524C8);
  }
  return result;
}

unint64_t sub_1D445236C()
{
  unint64_t result;

  result = qword_1EFE524D0[0];
  if (!qword_1EFE524D0[0])
  {
    result = MEMORY[0x1D825E41C](&unk_1D4540A00, &type metadata for TimestampingError);
    atomic_store(result, qword_1EFE524D0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TimestampingError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D44523E8 + 4 * byte_1D454080D[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D4452408 + 4 * byte_1D4540812[v4]))();
}

_BYTE *sub_1D44523E8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D4452408(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4452410(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4452418(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4452420(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4452428(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TimestampingError()
{
  return &type metadata for TimestampingError;
}

uint64_t sub_1D4452444(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1D445245C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

void _s21CollectionTimestamperV18TimestampingPolicyOMa()
{
  JUMPOUT(0x1D825E3A4);
}

unint64_t sub_1D4452484()
{
  unint64_t result;

  result = qword_1EFE52558;
  if (!qword_1EFE52558)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45409D8, &type metadata for TimestampingError);
    atomic_store(result, (unint64_t *)&qword_1EFE52558);
  }
  return result;
}

uint64_t sub_1D44524C0()
{
  return swift_deallocObject();
}

uint64_t sub_1D44524D0()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1D44524E4()
{
  uint64_t v0;

  return v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
}

void sub_1D44524FC()
{
  uint64_t v0;

  os_unfair_lock_lock(*(os_unfair_lock_t *)(*(_QWORD *)(v0 + 16) + 16));
}

void sub_1D445250C()
{
  type metadata accessor for StatefulTryMap();
}

uint64_t sub_1D4452518()
{
  return swift_getAssociatedTypeWitness();
}

void sub_1D4452524(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  id v15;
  int v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];
  uint64_t v22;
  uint64_t v23;

  v3 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1D42B28FC(qword_1EFE47450);
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1D4453F40();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v13 = &v21[-v12];
  sub_1D42B28B4(a1, (uint64_t)v21);
  v14 = v22;
  v15 = v3;
  if (!v14)
  {
    sub_1D42D7018((uint64_t)v21, &qword_1EFE47160);
    sub_1D432AE4C(v2, 1);
    goto LABEL_6;
  }
  v16 = swift_dynamicCast();
  sub_1D432AE4C(v2, v16 ^ 1u);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v2, 1, v7) == 1)
  {
LABEL_6:

    sub_1D42D7018(v2, qword_1EFE47450);
    sub_1D4453D24();
    sub_1D42B6D0C();
    v20 = swift_willThrow();
    sub_1D4453F7C(v20, &qword_1EFE47160);
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 32))(v13, v2, v7);

  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v11, v13, v7);
  v17 = objc_allocWithZone(ObjectType);
  v18 = v23;
  sub_1D44527DC((uint64_t)v11);
  if (!v18)
  {
    sub_1D4453F7C(v19, &qword_1EFE47160);
    sub_1D42CB3CC();
    swift_getObjectType();
    sub_1D4453F5C();
    goto LABEL_8;
  }
  sub_1D4453F7C(v19, &qword_1EFE47160);
  sub_1D42CB3CC();
LABEL_7:
  swift_getObjectType();
  sub_1D4453F5C();
LABEL_8:
  sub_1D42BE844();
}

void sub_1D44527DC(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  objc_super v25;
  unint64_t v26;
  unint64_t v27;
  objc_class *ObjectType;

  v4 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1D451AFA4();
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v6);
  sub_1D42CB210();
  sub_1D451A470();
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42CB210();
  v8 = sub_1D451AFB0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1D4453F40();
  MEMORY[0x1E0C80A78](v10);
  sub_1D42CB210();
  v13 = v12 - v11;
  v24 = v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12 - v11, a1, v10);
  v15 = objc_allocWithZone(MEMORY[0x1E0C89A98]);
  v16 = v4;
  sub_1D446B19C(v13, (void *)1, 0);
  if (v2)
  {
    type metadata accessor for SNError();
    v18 = (void *)sub_1D4519A98();
    sub_1D451B400();
    swift_bridgeObjectRelease();
    v26 = 0xD000000000000019;
    v27 = 0x80000001D4559050;
    sub_1D42B4EF4((unint64_t *)&qword_1EFE4C7B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    sub_1D451B7C0();
    sub_1D451A794();
    swift_bridgeObjectRelease();
    sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 5, v18, 0xD000000000000019, 0x80000001D4559050);

    swift_bridgeObjectRelease();
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a1, v10);
    sub_1D4453F5C();
  }
  else
  {
    v23 = v8;
    v19 = OBJC_IVAR____SNAudioFileAnalyzer_audioFile;
    *(_QWORD *)&v16[OBJC_IVAR____SNAudioFileAnalyzer_audioFile] = v17;
    v20 = objc_msgSend(v17, sel_processingFormat);
    sub_1D446D7BC(v20);

    v21 = objc_msgSend(*(id *)&v16[v19], sel_processingFormat);
    v22 = objc_msgSend(objc_allocWithZone((Class)SNAudioStreamAnalyzer), sel_initWithFormat_, v21);

    *(_QWORD *)&v16[OBJC_IVAR____SNAudioFileAnalyzer_streamAnalyzer] = v22;
    v16[OBJC_IVAR____SNAudioFileAnalyzer_wasCancelled] = 0;
    sub_1D43E5EF0();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v3, *MEMORY[0x1E0DEF8D8], v23);
    sub_1D451A464();
    v26 = MEMORY[0x1E0DEE9D8];
    sub_1D42B4EF4((unint64_t *)&qword_1EFE47A18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
    sub_1D42B28FC(&qword_1EFE479F0);
    sub_1D42E9DC0((unint64_t *)&qword_1EFE479F8, &qword_1EFE479F0);
    sub_1D451B2EC();
    *(_QWORD *)&v16[OBJC_IVAR____SNAudioFileAnalyzer_queue] = sub_1D451AFD4();

    v25.receiver = v16;
    v25.super_class = ObjectType;
    objc_msgSendSuper2(&v25, sel_init);
    sub_1D4453F68();
  }
  sub_1D42BE844();
}

uint64_t sub_1D4452BE4(int a1, uint64_t a2, char *a3, uint64_t *a4)
{
  uint64_t v6;
  void *v7;
  id v8;
  char *v9;
  _BYTE *v10;
  _BYTE *v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  void *v16;
  uint64_t v17;
  id v18;
  unsigned int v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  unsigned int v31;
  id v32[2];

  LODWORD(v6) = a1;
  v32[1] = *(id *)MEMORY[0x1E0C80C00];
  v7 = *(void **)(a2 + OBJC_IVAR____SNAudioFileAnalyzer_audioFile);
  v8 = objc_msgSend(v7, sel_processingFormat);
  v9 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C89AC0]), sel_initWithPCMFormat_frameCapacity_, v8, 0x2000);

  if (!v9)
    goto LABEL_24;
  v28 = OBJC_IVAR____SNAudioFileAnalyzer_wasCancelled;
  v29 = OBJC_IVAR____SNAudioFileAnalyzer_streamAnalyzer;
  do
  {
    v10 = objc_msgSend(v7, sel_length);
    v11 = objc_msgSend(v7, sel_framePosition);
    v12 = v10 - v11;
    if (__OFSUB__(v10, v11))
    {
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
    }
    if ((v12 & 0x8000000000000000) != 0 || HIDWORD(v12))
    {

      result = sub_1D451B550();
      __break(1u);
      return result;
    }
    v31 = v6;
    if (v12 >= v6)
      LODWORD(v12) = v6;
    if (v12 >= 0x2000)
      v13 = 0x2000;
    else
      v13 = v12;
    v32[0] = 0;
    v14 = v9;
    if (!objc_msgSend(v7, sel_readIntoBuffer_frameCount_error_, v9, v13, v32))
    {
      v21 = v32[0];
      v22 = (void *)sub_1D4519AA4();

      swift_willThrow();
      type metadata accessor for SNError();
      v23 = (void *)sub_1D4519A98();
      v24 = sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 2, v23, 0xD00000000000001FLL, 0x80000001D4559030);

      v25 = (void *)sub_1D42E792C();
      v26 = v24;
      sub_1D42E7208(v26);

      v6 = v31;
      goto LABEL_20;
    }
    v15 = a3;
    v16 = *(void **)&a3[v29];
    v17 = *a4;
    v18 = v32[0];
    objc_msgSend(v16, sel_analyzeAudioBuffer_atAudioFramePosition_, v14, v17);
    v19 = objc_msgSend(v14, sel_frameLength);
    if (__OFADD__(*a4, v19))
      goto LABEL_22;
    v9 = v14;
    *a4 += v19;
    v6 = v31 - v13;
    if (v31 < v13)
      goto LABEL_23;
    v20 = objc_msgSend(v7, sel_length);
    if (v20 == objc_msgSend(v7, sel_framePosition))
      break;
    a3 = v15;
    if ((*(_BYTE *)(a2 + v28) & 1) != 0)
      break;
  }
  while ((_DWORD)v6);

  a3 = v9;
LABEL_20:

  return v6;
}

void sub_1D4452F54(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v3;
  id v4;
  double v5;
  double v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;

  v3 = *(void **)(v1 + OBJC_IVAR____SNAudioFileAnalyzer_audioFile);
  v4 = objc_msgSend(v3, sel_fileFormat);
  objc_msgSend(v4, sel_sampleRate);
  v6 = v5;

  if ((~*(_QWORD *)&v6 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v6 <= -2147483650.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v6 < 2147483650.0)
  {
    v7 = sub_1D451B0A0();
    v9 = v8;
    v11 = v10;
    v12 = HIDWORD(v8);
    objc_msgSend(v3, sel_length);
    v13 = sub_1D451B0A0();
    *(_QWORD *)a1 = v7;
    *(_DWORD *)(a1 + 8) = v9;
    *(_DWORD *)(a1 + 12) = v12;
    *(_QWORD *)(a1 + 16) = v11;
    *(_QWORD *)(a1 + 24) = v13;
    *(_DWORD *)(a1 + 32) = v14;
    *(_DWORD *)(a1 + 36) = v15;
    *(_QWORD *)(a1 + 40) = v16;
    return;
  }
LABEL_7:
  __break(1u);
}

id sub_1D4453058(CMTimeValue *a1)
{
  char *v1;
  char *v2;
  void *v4;
  id v5;
  id result;
  id v7;
  double v8;
  double v9;
  CMTimeValue v10;
  CMTimeEpoch v11;
  CMTimeValue value;
  CMTimeScale v13;
  CMTimeFlags v14;
  CMTimeEpoch v15;
  CMTimeValue v16;
  BOOL v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  CMTime v21;
  CMTime time;

  v2 = v1;
  v4 = *(void **)&v2[OBJC_IVAR____SNAudioFileAnalyzer_audioFile];
  v5 = sub_1D43B1BA0((uint64_t)a1, sel_framePosition);
  result = sub_1D43B1BA0((uint64_t)v5, sel_length);
  if ((uint64_t)v5 < (uint64_t)result)
  {
    v7 = sub_1D43B1BA0((uint64_t)result, sel_fileFormat);
    objc_msgSend(v7, sel_sampleRate);
    v9 = v8;

    if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) != 0)
    {
      if (v9 > -2147483650.0)
      {
        if (v9 < 2147483650.0)
        {
          v10 = a1[1];
          v11 = a1[2];
          time.value = *a1;
          *(_QWORD *)&time.timescale = v10;
          time.epoch = v11;
          CMTimeConvertScale(&v21, &time, (int)v9, kCMTimeRoundingMethod_RoundAwayFromZero);
          value = v21.value;
          time.value = sub_1D451AEE4();
          time.timescale = v13;
          time.flags = v14;
          time.epoch = v15;
          CMTimeConvertScale(&v21, &time, (int)v9, kCMTimeRoundingMethod_RoundTowardZero);
          v16 = v21.value;
          time.value = (CMTimeValue)sub_1D43B1BA0((uint64_t)objc_msgSend(v4, sel_setFramePosition_, value), sel_framePosition);
          v17 = __OFSUB__(v16, value);
          v18 = v16 - value;
          if (!v17)
          {
            if ((v18 & 0x8000000000000000) == 0 && !HIDWORD(v18))
            {
              v19 = v2;
              v20 = sub_1D4452BE4(v18, (uint64_t)v19, v19, &time.value);
              objc_msgSend(v4, sel_setFramePosition_, sub_1D43B1BA0(v20, sel_length));
              return objc_msgSend(*(id *)&v19[OBJC_IVAR____SNAudioFileAnalyzer_streamAnalyzer], sel_completeAnalysis);
            }
LABEL_14:
            sub_1D42DCED4();
            result = (id)sub_1D451B550();
            __break(1u);
            return result;
          }
LABEL_13:
          __break(1u);
          goto LABEL_14;
        }
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_12;
  }
  return result;
}

id sub_1D44532EC()
{
  CMTimeValue v1[6];

  sub_1D4452F54((uint64_t)v1);
  return sub_1D4453058(v1);
}

uint64_t sub_1D4453348(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(unsigned __int8 *);
  uint64_t v6;

  if (a1)
  {
    v4 = sub_1D42B6F40();
    *(_QWORD *)(v4 + 16) = a1;
    *(_QWORD *)(v4 + 24) = a2;
    v5 = sub_1D4453DEC;
  }
  else
  {
    v4 = 0;
    v5 = (uint64_t (*)(unsigned __int8 *))nullsub_1;
  }
  v6 = sub_1D42B6F40();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  sub_1D42E33B0(a1);
  sub_1D44533E4((uint64_t)sub_1D4453DBC, v6);
  return swift_release();
}

uint64_t sub_1D44533E4(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  _QWORD aBlock[6];

  v5 = sub_1D451A44C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1D42CB210();
  v10 = v9 - v8;
  v11 = sub_1D451A470();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  sub_1D42CB210();
  v15 = v14 - v13;
  v16 = (_QWORD *)sub_1D42B6F40();
  v16[2] = v2;
  v16[3] = a1;
  v16[4] = a2;
  aBlock[4] = sub_1D4453E3C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D444D4E8;
  aBlock[3] = &unk_1E97B36D8;
  v17 = _Block_copy(aBlock);
  v18 = v2;
  swift_retain();
  sub_1D451A464();
  sub_1D42B4EF4(qword_1EFE4A4B0, v6, MEMORY[0x1E0DEF510]);
  sub_1D42B28FC((uint64_t *)&unk_1EFE4B310);
  sub_1D42E9DC0((unint64_t *)&qword_1EFE4A4C0, (uint64_t *)&unk_1EFE4B310);
  sub_1D451B2EC();
  MEMORY[0x1D825C904](0, v15, v10, v17);
  _Block_release(v17);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v5);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v15, v11);
  return swift_release();
}

uint64_t sub_1D4453660(uint64_t a1, uint64_t (*a2)(BOOL))
{
  CMTimeValue v5[6];

  sub_1D4452F54((uint64_t)v5);
  sub_1D4453058(v5);
  return a2((*(_BYTE *)(a1 + OBJC_IVAR____SNAudioFileAnalyzer_wasCancelled) & 1) == 0);
}

void sub_1D44536C4()
{
  uint64_t v0;

  *(_BYTE *)(v0 + OBJC_IVAR____SNAudioFileAnalyzer_wasCancelled) = 1;
}

uint64_t sub_1D44536F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE v5[24];
  uint64_t v6;

  sub_1D42B28B4(a1, (uint64_t)v5);
  if (!v6)
    goto LABEL_7;
  sub_1D42B28FC((uint64_t *)&unk_1EFE47320);
  if ((sub_1D42EA22C() & 1) == 0)
    goto LABEL_8;
  sub_1D42B28B4(a2, (uint64_t)v5);
  if (!v6)
  {
    sub_1D42B6EC4();
LABEL_7:
    sub_1D42D7018((uint64_t)v5, &qword_1EFE47160);
    goto LABEL_8;
  }
  sub_1D42B28FC(&qword_1EFE47A30);
  if ((sub_1D42EA22C() & 1) != 0)
  {
    sub_1D44537F0(v4, v4);
    sub_1D42B6EC4();
    return swift_unknownObjectRelease();
  }
  sub_1D42B6EC4();
LABEL_8:
  sub_1D4453D24();
  sub_1D42B6D0C();
  return swift_willThrow();
}

id sub_1D44537F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  id v6;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = *(void **)(v2 + OBJC_IVAR____SNAudioFileAnalyzer_streamAnalyzer);
  v7[0] = 0;
  if (objc_msgSend(v4, sel_addRequest_withObserver_error_, a1, a2, v7))
    return v7[0];
  v6 = v7[0];
  sub_1D4519AA4();

  return (id)swift_willThrow();
}

void sub_1D44539AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v3[24];
  uint64_t v4;

  sub_1D42B28B4(a1, (uint64_t)v3);
  if (v4)
  {
    sub_1D42B28FC((uint64_t *)&unk_1EFE47320);
    if ((swift_dynamicCast() & 1) != 0)
    {
      objc_msgSend(*(id *)(v1 + OBJC_IVAR____SNAudioFileAnalyzer_streamAnalyzer), sel_removeRequest_, v2);
      swift_unknownObjectRelease();
    }
  }
  else
  {
    sub_1D42D7018((uint64_t)v3, &qword_1EFE47160);
  }
}

id sub_1D4453A48(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____SNAudioFileAnalyzer_streamAnalyzer), sel_removeRequest_, a1);
}

id sub_1D4453AD8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____SNAudioFileAnalyzer_streamAnalyzer), sel_removeAllRequests);
}

uint64_t sub_1D4453B78()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)sub_1D42E792C();
  v1 = sub_1D42E773C();

  return v1;
}

id _SNAudioFileAnalyzer.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void _SNAudioFileAnalyzer.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id _SNAudioFileAnalyzer.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1D4453C98(uint64_t a1, uint64_t a2)
{
  return sub_1D44537F0(a1, a2);
}

id sub_1D4453CB8(uint64_t a1)
{
  return sub_1D4453A48(a1);
}

id sub_1D4453CD8()
{
  return sub_1D4453AD8();
}

uint64_t type metadata accessor for _SNAudioFileAnalyzer()
{
  return objc_opt_self();
}

uint64_t method lookup function for _SNAudioFileAnalyzer()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_1D4453D24()
{
  unint64_t result;

  result = qword_1EFE52588;
  if (!qword_1EFE52588)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4540B2C, &type metadata for _SNAudioFileAnalyzer.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE52588);
  }
  return result;
}

uint64_t sub_1D4453D60()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1D4453D84(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

uint64_t sub_1D4453D98()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D4453DBC(char a1)
{
  uint64_t v1;
  uint64_t (*v2)(char *);
  char v4;

  v2 = *(uint64_t (**)(char *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_1D4453DEC(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_1D4453E10()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D4453E3C()
{
  uint64_t v0;

  return sub_1D4453660(*(_QWORD *)(v0 + 16), *(uint64_t (**)(BOOL))(v0 + 24));
}

uint64_t sub_1D4453E48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D4453E58()
{
  return swift_release();
}

uint64_t storeEnumTagSinglePayload for _SNAudioFileAnalyzer.DomainError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D4453EA0 + 4 * byte_1D4540A40[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D4453EC0 + 4 * byte_1D4540A45[v4]))();
}

_BYTE *sub_1D4453EA0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D4453EC0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4453EC8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4453ED0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4453ED8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4453EE0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for _SNAudioFileAnalyzer.DomainError()
{
  return &type metadata for _SNAudioFileAnalyzer.DomainError;
}

unint64_t sub_1D4453F00()
{
  unint64_t result;

  result = qword_1EFE52590[0];
  if (!qword_1EFE52590[0])
  {
    result = MEMORY[0x1D825E41C](&unk_1D4540B04, &type metadata for _SNAudioFileAnalyzer.DomainError);
    atomic_store(result, qword_1EFE52590);
  }
  return result;
}

uint64_t sub_1D4453F40()
{
  return sub_1D4519BC4();
}

uint64_t sub_1D4453F5C()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1D4453F68()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 120) + 8))(v0, *(_QWORD *)(v1 - 152));
}

void sub_1D4453F7C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1D42D7018(v2, a2);
}

uint64_t sub_1D4453F84()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1D4454018(_OWORD *a1)
{
  uint64_t v1;
  __int128 v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v2 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v2;
  *(_OWORD *)(v1 + 48) = a1[2];
  v3 = (_QWORD *)sub_1D4456120();
  *(_QWORD *)(v1 + 64) = v3;
  v4 = sub_1D445613C(v3, (uint64_t)sub_1D4309718);
  return sub_1D42E3AB8(v4, v5);
}

uint64_t sub_1D4454064(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_1D4309684;
  return v5(v2 + 16);
}

uint64_t sub_1D44540C8(_OWORD *a1, int *a2)
{
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v3 = a1[1];
  *(_OWORD *)(v2 + 16) = *a1;
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = a1[2];
  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 64) = v4;
  *v4 = v2;
  v4[1] = sub_1D4309718;
  return v6(v2 + 16);
}

uint64_t sub_1D4454138(_OWORD *a1, int *a2)
{
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v3 = a1[1];
  *(_OWORD *)(v2 + 16) = *a1;
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = a1[2];
  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 64) = v4;
  *v4 = v2;
  v4[1] = sub_1D43097AC;
  return v6(v2 + 16);
}

uint64_t sub_1D44541A8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)sub_1D4456120();
  *(_QWORD *)(v1 + 24) = v2;
  v3 = sub_1D445613C(v2, (uint64_t)sub_1D43095FC);
  return sub_1D42E3AB8(v3, v4);
}

void sub_1D44541E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_allocObject();
  sub_1D4454A54(a1, a2, a3);
  sub_1D42CB15C();
}

uint64_t sub_1D4454234()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  sub_1D42B740C();
  v2 = *v0;
  v3 = v0[1];
  v4 = sub_1D42B8DB4();
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v3;
  v5 = sub_1D42B8DB4();
  *(_QWORD *)(v5 + 16) = &unk_1EFE52720;
  *(_QWORD *)(v5 + 24) = v4;
  v17 = sub_1D42B28FC(&qword_1EFE52738);
  v18 = sub_1D4401164(&qword_1EFE52740, &qword_1EFE52738, (uint64_t)&off_1E979C888);
  v15 = &unk_1EFE52730;
  v16 = v5;
  sub_1D42BE934();
  sub_1D430C608();
  sub_1D42BE9A0();
  sub_1D42EA340();
  sub_1D44014B0();
  swift_release();
  if (!v1)
  {
    sub_1D42B5400((uint64_t)&v15);
    sub_1D42B8F48();
    swift_release();
    v7 = v0[2];
    v6 = v0[3];
    v8 = sub_1D42B8DB4();
    *(_QWORD *)(v8 + 16) = v7;
    *(_QWORD *)(v8 + 24) = v6;
    v9 = sub_1D42B8DB4();
    *(_QWORD *)(v9 + 16) = &unk_1EFE52750;
    *(_QWORD *)(v9 + 24) = v8;
    v17 = sub_1D42B28FC(&qword_1EFE52768);
    v18 = sub_1D4401164(&qword_1EFE52770, &qword_1EFE52768, (uint64_t)&off_1E97A12A0);
    v15 = &unk_1EFE52760;
    v16 = v9;
    sub_1D42BE934();
    sub_1D42EA340();
    sub_1D42BE9A0();
    sub_1D430C608();
    sub_1D44014B0();
    swift_release();
    sub_1D42B5400((uint64_t)&v15);
    sub_1D42B8F48();
    swift_release();
    v12 = v0[4];
    v11 = v0[5];
    v13 = sub_1D42B8DB4();
    *(_QWORD *)(v13 + 16) = v12;
    *(_QWORD *)(v13 + 24) = v11;
    v14 = sub_1D42B8DB4();
    *(_QWORD *)(v14 + 16) = &unk_1EFE52780;
    *(_QWORD *)(v14 + 24) = v13;
    v17 = sub_1D42B28FC(&qword_1EFE52798);
    v18 = sub_1D4455ED4();
    v15 = &unk_1EFE52790;
    v16 = v14;
    sub_1D42BE934();
    sub_1D42BE9A0();
    swift_retain();
    sub_1D42EA340();
    sub_1D44014B0();
    swift_release();
  }
  sub_1D42B5400((uint64_t)&v15);
  sub_1D4368C0C();
  return swift_release();
}

uint64_t sub_1D4454484(_OWORD *a1, int *a2)
{
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v3 = a1[1];
  *(_OWORD *)(v2 + 16) = *a1;
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = a1[2];
  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 64) = v4;
  *v4 = v2;
  v4[1] = sub_1D430A838;
  return v6(v2 + 16);
}

uint64_t sub_1D44544F4(uint64_t *a1, int *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v3 = *a1;
  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1D42F9A58;
  return v6(v3);
}

uint64_t sub_1D4454554(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 64) = a1;
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 72) = v2;
  v3 = sub_1D43AC280(v2);
  return sub_1D44545B8(v3, v4);
}

uint64_t sub_1D44545B8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v2[2] = a1;
  v2[3] = a2;
  v3 = (_QWORD *)swift_task_alloc();
  v2[4] = v3;
  *v3 = v2;
  v3[1] = sub_1D4454604;
  return sub_1D4367B88();
}

uint64_t sub_1D4454604(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 40) = a1;
  *(_QWORD *)(v3 + 48) = v1;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4454664()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  char *v4;

  v4 = (char *)&dword_1EFE4B208 + dword_1EFE4B208;
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  v2 = (uint64_t (*)(void))sub_1D4401488(v1, (uint64_t)sub_1D44546B8, (uint64_t)v4);
  return sub_1D42B8DC0(v2);
}

uint64_t sub_1D44546B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1D42E3EE0();
  sub_1D42E3E84(v4);
  v3[8] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v3[9] = v0;
    v3[10] = v2;
  }
  sub_1D42B8EC8();
  return sub_1D43E142C();
}

uint64_t sub_1D445470C()
{
  uint64_t v0;
  int8x16_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  v1 = (int8x16_t *)sub_1D42B8DB4();
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 72), *(int8x16_t *)(v0 + 72), 8uLL);
  sub_1D42B8F48();
  v2 = sub_1D42B8DB4();
  *(_QWORD *)(v0 + 88) = v2;
  *(_QWORD *)(v2 + 16) = &unk_1EFE526C0;
  *(_QWORD *)(v2 + 24) = v1;
  sub_1D4456108();
  sub_1D42B8F24();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v3;
  v4 = (uint64_t (*)(void))sub_1D4401488(v3, (uint64_t)sub_1D4454798, v6);
  return sub_1D42E3A2C(v4);
}

uint64_t sub_1D4454798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1D42E3EE0();
  sub_1D42E3E84(v4);
  v3[13] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v3[14] = v0;
    v3[15] = v2;
  }
  sub_1D42B8EC8();
  return sub_1D43E142C();
}

uint64_t sub_1D44547EC()
{
  int8x16_t *v0;
  int8x16_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  v1 = (int8x16_t *)sub_1D42B8DB4();
  v1[1] = vextq_s8(v0[7], v0[7], 8uLL);
  sub_1D42B8F48();
  v2 = sub_1D42B8DB4();
  v0[8].i64[0] = v2;
  *(_QWORD *)(v2 + 16) = &unk_1EFE526E0;
  *(_QWORD *)(v2 + 24) = v1;
  sub_1D4456108();
  sub_1D42B8F24();
  v3 = (_QWORD *)swift_task_alloc();
  v0[8].i64[1] = (uint64_t)v3;
  v4 = (uint64_t (*)(void))sub_1D4401488(v3, (uint64_t)sub_1D4454878, v6);
  return sub_1D42E3A2C(v4);
}

uint64_t sub_1D4454878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1D42E3EE0();
  sub_1D42E3E84(v4);
  v3[18] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v3[19] = v0;
    v3[20] = v2;
  }
  sub_1D42B8EC8();
  return sub_1D43E142C();
}

uint64_t sub_1D44548CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int8x16_t *v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD **)(v0 + 16);
  v4 = (int8x16_t *)sub_1D42B8DB4();
  v4[1] = vextq_s8(*(int8x16_t *)(v0 + 152), *(int8x16_t *)(v0 + 152), 8uLL);
  sub_1D43E1590();
  sub_1D42BE998();
  v5 = sub_1D42B8DB4();
  *(_QWORD *)(v5 + 16) = &unk_1EFE52700;
  *(_QWORD *)(v5 + 24) = v4;
  sub_1D42BE93C();
  sub_1D42B8F48();
  *v3 = &unk_1EFE526D0;
  v3[1] = v2;
  v3[2] = &unk_1EFE526F0;
  v3[3] = v1;
  v3[4] = &unk_1EFE52710;
  v3[5] = v5;
  v6 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42B8ED4(v6);
}

uint64_t sub_1D4454980()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  sub_1D42BE93C();
  sub_1D42B8F48();
  v1 = *(_QWORD *)(v0 + 104);
  swift_release();
  swift_release();
  sub_1D42BE93C();
  if (!v1)
    sub_1D42BE93C();
  return sub_1D42B8ED4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D44549F0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 64) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 72) = v2;
  v3 = sub_1D43AC280(v2);
  return sub_1D4454554(v3);
}

uint64_t sub_1D4454A40()
{
  return sub_1D4454234();
}

uint64_t *sub_1D4454A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  _QWORD *v8;

  v7 = *v3;
  swift_defaultActor_initialize();
  swift_weakInit();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 + 80) - 8) + 32))((uint64_t)v3 + *(_QWORD *)(*v3 + 104), a1);
  v8 = (uint64_t *)((char *)v3 + *(_QWORD *)(*v3 + 112));
  *v8 = a2;
  v8[1] = a3;
  return v3;
}

uint64_t sub_1D4454ADC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[8] = a1;
  v2[9] = v1;
  v2[10] = *v1;
  return sub_1D438E840();
}

uint64_t sub_1D4454AF8()
{
  uint64_t v0;
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = *(_OWORD **)(v0 + 64);
  v3 = v1[1];
  v2 = v1[2];
  *(_OWORD *)(v0 + 16) = *v1;
  *(_OWORD *)(v0 + 32) = v3;
  *(_OWORD *)(v0 + 48) = v2;
  v4 = sub_1D451A170();
  if (swift_weakLoadStrong())
  {
    sub_1D4400928(v4);
    sub_1D42BE93C();
  }
  v5 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42B8ED4(v5);
}

uint64_t sub_1D4454B78(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[7] = a1;
  v2[8] = v1;
  v2[9] = *v1;
  v3 = *v1;
  v2[10] = *v1;
  v4 = *(_QWORD *)(v3 + 80);
  v2[11] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[12] = v5;
  v2[13] = *(_QWORD *)(v5 + 64);
  v2[14] = swift_task_alloc();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4454BE0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0[13];
  v2 = v0[14];
  v3 = v0[11];
  v4 = v0[12];
  v5 = v0[10];
  v6 = (_OWORD *)v0[7];
  v15 = v0[9];
  v7 = (uint64_t *)(v0[8] + *(_QWORD *)(*(_QWORD *)v0[8] + 112));
  v17 = *v7;
  v16 = v7[1];
  (*(void (**)(uint64_t))(v4 + 16))(v2);
  v8 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v9 = (v1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v3;
  *(_QWORD *)(v10 + 24) = *(_QWORD *)(v5 + 88);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v10 + v8, v2, v3);
  *(_QWORD *)(v10 + v9) = v15;
  v11 = type metadata accessor for CombineSubscriptionFromXPCAdapter();
  sub_1D42B6F40();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1D430C608();
  v12 = sub_1D440015C(v6, v17, v16, (uint64_t)&unk_1EFE527E8, v10);
  swift_weakAssign();
  v0[5] = v11;
  v0[6] = sub_1D4456098(&qword_1EFE527F0, 255, (uint64_t (*)(uint64_t))type metadata accessor for CombineSubscriptionFromXPCAdapter, (uint64_t)&unk_1D4539CE4);
  v0[2] = v12;
  sub_1D42BE9A0();
  sub_1D451A164();
  sub_1D42BE998();
  sub_1D42B5400((uint64_t)(v0 + 2));
  swift_task_dealloc();
  v13 = (uint64_t (*)(void))sub_1D42E3DD0();
  return v13();
}

uint64_t sub_1D4454DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1D4454DBC()
{
  uint64_t (*v0)(void);

  sub_1D4454DE8();
  v0 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42B8DC0(v0);
}

uint64_t sub_1D4454DE8()
{
  return sub_1D451A158();
}

uint64_t sub_1D4454E2C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return sub_1D438E840();
}

uint64_t sub_1D4454E48()
{
  uint64_t (*v0)(void);

  sub_1D4454DE8();
  v0 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42B8DC0(v0);
}

uint64_t sub_1D4454E80()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 104));
  swift_release();
  swift_weakDestroy();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1D4454EDC()
{
  sub_1D4454E80();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for CombineSubscriberToXPCAdapterImpl(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CombineSubscriberToXPCAdapterImpl);
}

uint64_t sub_1D4454F00(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __int128 v4;

  v4 = a1[1];
  *(_OWORD *)(v3 + 16) = *a1;
  *(_OWORD *)(v3 + 32) = v4;
  *(_OWORD *)(v3 + 48) = a1[2];
  *(_QWORD *)(v3 + 64) = a2;
  *(_QWORD *)(v3 + 72) = a3;
  type metadata accessor for AsyncDispatchQueue();
  swift_allocObject();
  *(_QWORD *)(v3 + 80) = sub_1D43EBA48();
  return v3;
}

uint64_t sub_1D4454F54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[40];

  v2 = v1;
  sub_1D42E2D8C(a1, (uint64_t)v10);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(v1 + 72);
  type metadata accessor for CombineSubscriptionToXPCAdapterImpl();
  swift_allocObject();
  sub_1D42BE934();
  v5 = sub_1D43FFCE8((uint64_t)v10, v3, v4);
  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 56);
  v8 = sub_1D42B6F40();
  *(_QWORD *)(v8 + 16) = v6;
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(v2 + 24);
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(v2 + 40);
  *(_QWORD *)(v8 + 56) = v7;
  *(_QWORD *)(v8 + 64) = &unk_1EFE52670;
  *(_QWORD *)(v8 + 72) = v5;
  *(_QWORD *)(v8 + 80) = &unk_1EFE52680;
  *(_QWORD *)(v8 + 88) = v5;
  *(_QWORD *)(v8 + 96) = &unk_1EFE52690;
  *(_QWORD *)(v8 + 104) = v5;
  swift_retain_n();
  sub_1D44014A8();
  sub_1D44014A8();
  swift_retain();
  sub_1D43EB978((uint64_t)&unk_1EFE526A0, v8);
  swift_release_n();
  return sub_1D42BE998();
}

uint64_t sub_1D4455070(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D42F9A58;
  return sub_1D4400090(a1);
}

uint64_t sub_1D44550C0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1D42F9A58;
  return sub_1D44000F0();
}

uint64_t sub_1D4455108(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1D4455120()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_1D42B5528((_QWORD *)(*(_QWORD *)(v0 + 16) + 112), *(_QWORD *)(*(_QWORD *)(v0 + 16) + 136));
  sub_1D451A17C();
  v1 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42B8ED4(v1);
}

uint64_t sub_1D4455168(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(a1 + 16) + *(_QWORD *)(a1 + 16));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1D44551C8;
  return v6(a2);
}

uint64_t sub_1D44551C8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D42F9AB8();
  if (!v0)
    return sub_1D42B8DC0(*(uint64_t (**)(void))(v1 + 8));
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4455204()
{
  uint64_t v0;

  sub_1D4456134();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4455228()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  sub_1D4456150();
  v4 = sub_1D42B6F40();
  *(_QWORD *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(v1 + 40);
  *(_QWORD *)(v4 + 56) = v2;
  v5 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)v0;
  *(_OWORD *)(v4 + 80) = v5;
  *(_OWORD *)(v4 + 96) = *(_OWORD *)(v0 + 32);
  swift_retain();
  sub_1D44014A8();
  sub_1D42B8F24();
  sub_1D4455750((uint64_t *)v0);
  sub_1D4401524((uint64_t)&unk_1EFE52660);
  sub_1D42BE998();
  return sub_1D451A1AC();
}

uint64_t sub_1D44552C8(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(*(int *)*a1 + *a1);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1D4455328;
  return v6(a2);
}

uint64_t sub_1D4455328()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D42F9AB8();
  if (!v0)
    return sub_1D42B8DC0(*(uint64_t (**)(void))(v1 + 8));
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4455364()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  sub_1D4456150();
  v4 = sub_1D42B6F40();
  *(_QWORD *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(v1 + 40);
  *(_QWORD *)(v4 + 56) = v2;
  *(_QWORD *)(v4 + 64) = v0;
  v5 = v0;
  sub_1D44014A8();
  sub_1D44014A8();
  sub_1D42B8F24();
  sub_1D4401524((uint64_t)&unk_1EFE52650);
  return swift_release();
}

uint64_t sub_1D44553F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1D4455410()
{
  uint64_t v0;
  int *v1;
  id v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = *(int **)(*(_QWORD *)(v0 + 16) + 32);
  v2 = *(id *)(v0 + 24);
  v5 = (uint64_t (*)(void))((char *)v1 + *v1);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v3;
  *v3 = v0;
  v3[1] = sub_1D4455470;
  return sub_1D42E3AB8(*(_QWORD *)(v0 + 24), v5);
}

uint64_t sub_1D4455470()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D44554C8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 40);
  sub_1D4456134();

  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1D44554F8()
{
  sub_1D4401504();
  swift_release();
  sub_1D42BE93C();
  swift_release();
  swift_release();
  sub_1D42CB15C();
}

uint64_t sub_1D445553C()
{
  sub_1D44554F8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CombineSubscriberFromXPCAdapter()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for XPCSubscriber()
{
  return &type metadata for XPCSubscriber;
}

uint64_t sub_1D445558C(uint64_t a1)
{
  return sub_1D4454F54(a1);
}

uint64_t sub_1D44555AC()
{
  return sub_1D4455228();
}

uint64_t sub_1D44555E8()
{
  return sub_1D4455364();
}

uint64_t sub_1D445560C(uint64_t a1, uint64_t a2)
{
  return sub_1D4456098(&qword_1EFE52640, a2, (uint64_t (*)(uint64_t))type metadata accessor for CombineSubscriberFromXPCAdapter, (uint64_t)&unk_1D4540C80);
}

uint64_t sub_1D4455638()
{
  uint64_t v0;

  sub_1D42B8F98();
  sub_1D42B8F2C();
  sub_1D4401504();

  return swift_deallocObject();
}

uint64_t sub_1D4455668()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D430C490(v1, (uint64_t)sub_1D42F92EC);
  return sub_1D44553F8(v2, v3);
}

uint64_t sub_1D44556B0()
{
  uint64_t *v0;
  unint64_t v1;

  sub_1D42B8F98();
  sub_1D42B8F2C();
  sub_1D4401504();
  v1 = v0[9];
  if (v1 >> 60 != 15)
    sub_1D42B5420(v0[8], v1);
  if (v0[10])
  {
    swift_release();
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1D4455708()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (_QWORD *)sub_1D430C490(v1, (uint64_t)sub_1D42F9A58);
  return sub_1D44552C8(v2, v3);
}

uint64_t *sub_1D4455750(uint64_t *a1)
{
  uint64_t v2;

  v2 = a1[2];
  sub_1D42E2EE8(*a1, a1[1]);
  sub_1D42B7FE4(v2);
  return a1;
}

uint64_t sub_1D44557A8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D430C490(v1, (uint64_t)sub_1D42F9A58);
  return sub_1D4455070(v2);
}

uint64_t sub_1D44557EC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1D42F9A58;
  return sub_1D44550C0();
}

uint64_t sub_1D4455834()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_1D42F9A58;
  return sub_1D4455108(v0);
}

uint64_t sub_1D445587C()
{
  sub_1D42B8F98();
  sub_1D42B8F2C();
  sub_1D4401504();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D44558BC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D430C490(v1, (uint64_t)sub_1D42F9A58);
  return sub_1D4455168(v2, v3);
}

uint64_t sub_1D4455904(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;

  v5 = *a2;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1D42F92EC;
  return sub_1D4454064(v5, a3);
}

uint64_t sub_1D4455968(uint64_t a1, _OWORD *a2, int *a3)
{
  uint64_t v3;
  __int128 v5;
  _QWORD *v6;

  v5 = a2[1];
  *(_OWORD *)(v3 + 16) = *a2;
  *(_OWORD *)(v3 + 32) = v5;
  *(_OWORD *)(v3 + 48) = a2[2];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 64) = v6;
  *v6 = v3;
  v6[1] = sub_1D430C140;
  return sub_1D44540C8((_OWORD *)(v3 + 16), a3);
}

uint64_t sub_1D44559DC(uint64_t a1, _OWORD *a2, int *a3)
{
  uint64_t v3;
  __int128 v5;
  _QWORD *v6;

  v5 = a2[1];
  *(_OWORD *)(v3 + 16) = *a2;
  *(_OWORD *)(v3 + 32) = v5;
  *(_OWORD *)(v3 + 48) = a2[2];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 64) = v6;
  *v6 = v3;
  v6[1] = sub_1D430C140;
  return sub_1D4454138((_OWORD *)(v3 + 16), a3);
}

uint64_t sub_1D4455A50(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D42F9A58;
  return sub_1D4309638(v2);
}

uint64_t sub_1D4455AB4(_OWORD *a1)
{
  uint64_t v1;
  __int128 v2;
  _QWORD *v3;

  v2 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v2;
  *(_OWORD *)(v1 + 48) = a1[2];
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 64) = v3;
  *v3 = v1;
  v3[1] = sub_1D430C140;
  return sub_1D43096C0((_OWORD *)(v1 + 16));
}

uint64_t sub_1D4455B28(_OWORD *a1)
{
  uint64_t v1;
  __int128 v2;
  _QWORD *v3;

  v2 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v2;
  *(_OWORD *)(v1 + 48) = a1[2];
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 64) = v3;
  *v3 = v1;
  v3[1] = sub_1D430C140;
  return sub_1D4309754((_OWORD *)(v1 + 16));
}

uint64_t sub_1D4455B9C()
{
  sub_1D42B8F98();
  return swift_deallocObject();
}

uint64_t sub_1D4455BBC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D431B44C();
  v1 = (_QWORD *)sub_1D430C650();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D430C3F8(v1, (uint64_t)sub_1D42F9A58);
  return sub_1D430C3D0(v2, v3, v4, v5);
}

uint64_t sub_1D4455BFC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D431B44C();
  v1 = (_QWORD *)sub_1D430C650();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D430C3F8(v1, (uint64_t)sub_1D42F9A58);
  return sub_1D430C3D0(v2, v3, v4, v5);
}

uint64_t sub_1D4455C3C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D431B44C();
  v1 = (_QWORD *)sub_1D430C650();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D430C3F8(v1, (uint64_t)sub_1D42F9A58);
  return sub_1D430C3D0(v2, v3, v4, v5);
}

uint64_t sub_1D4455C7C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D431B44C();
  v1 = (_QWORD *)sub_1D430C650();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D430C3F8(v1, (uint64_t)sub_1D42F9A58);
  return sub_1D430C3D0(v2, v3, v4, v5);
}

uint64_t sub_1D4455CBC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D431B44C();
  v1 = (_QWORD *)sub_1D430C650();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D430C3F8(v1, (uint64_t)sub_1D42F9A58);
  return sub_1D430C3D0(v2, v3, v4, v5);
}

uint64_t sub_1D4455CFC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D431B44C();
  v1 = (_QWORD *)sub_1D430C650();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D430C3F8(v1, (uint64_t)sub_1D42F9A58);
  return sub_1D430C3D0(v2, v3, v4, v5);
}

uint64_t sub_1D4455D3C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D431B44C();
  v1 = (_QWORD *)sub_1D430C650();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D430C3F8(v1, (uint64_t)sub_1D42F92EC);
  return sub_1D430C3D0(v2, v3, v4, v5);
}

uint64_t sub_1D4455D7C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_1D42E3BE8();
  v1 = (_QWORD *)sub_1D42E3CF4();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D42E3870(v1);
  return sub_1D42E3820(v2, v3, v4, v5, v6);
}

uint64_t sub_1D4455DC4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D431B44C();
  v1 = (_QWORD *)sub_1D430C650();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D430C3F8(v1, (uint64_t)sub_1D42F9A58);
  return sub_1D430C3D0(v2, v3, v4, v5);
}

uint64_t sub_1D4455E04()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_1D42E3BE8();
  v1 = (_QWORD *)sub_1D42E3CF4();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D42E3870(v1);
  return sub_1D42E3820(v2, v3, v4, v5, v6);
}

uint64_t sub_1D4455E4C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D431B44C();
  v1 = (_QWORD *)sub_1D430C650();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D430C3F8(v1, (uint64_t)sub_1D42F9A58);
  return sub_1D430C3D0(v2, v3, v4, v5);
}

uint64_t sub_1D4455E8C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_1D42E3BE8();
  v1 = (_QWORD *)sub_1D42E3CF4();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D42E3870(v1);
  return sub_1D42E3820(v2, v3, v4, v5, v6);
}

unint64_t sub_1D4455ED4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFE527A0;
  if (!qword_1EFE527A0)
  {
    v1 = sub_1D42B8B10(&qword_1EFE52798);
    v2[0] = sub_1D4455F40();
    v2[1] = &off_1E97ACAE0;
    result = MEMORY[0x1D825E41C](&unk_1D45287F8, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFE527A0);
  }
  return result;
}

unint64_t sub_1D4455F40()
{
  unint64_t result;
  uint64_t v1;
  _UNKNOWN **v2;

  result = qword_1EFE527A8;
  if (!qword_1EFE527A8)
  {
    v1 = sub_1D42B8B10(&qword_1EFE527B0);
    v2 = &off_1E97ACF20;
    result = MEMORY[0x1D825E41C](&unk_1D4546BA8, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFE527A8);
  }
  return result;
}

uint64_t sub_1D4455F9C()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1D4456000(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(*(_QWORD *)(v1 + 16) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1 + v5;
  v7 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1D42F9A58;
  return sub_1D4454DA0(a1, v6, v7);
}

uint64_t sub_1D4456098(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x1D825E41C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D4456108()
{
  return swift_retain();
}

uint64_t sub_1D4456120()
{
  return swift_task_alloc();
}

void sub_1D4456134()
{
  uint64_t v0;

}

uint64_t sub_1D445613C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

void static SNUserDefaults.overrideXSupportEnabled(userDefaultsSnapshot:)(uint64_t a1)
{
  id v1;

  if (!a1)
  {
    if (qword_1EFE47240 != -1)
      swift_once();
    v1 = objc_msgSend((id)qword_1EFE47238, sel_dictionaryRepresentation);
    sub_1D451A5CC();
    sub_1D4457DD8();
  }
  sub_1D42CB7B8();
  sub_1D4457D5C();
  if (v1)
    sub_1D42D71D8();
  sub_1D42B7204();
  sub_1D42CB758();
}

void sub_1D4456250()
{
  uint64_t v0;
  id v1;

  if (qword_1EFE47240 != -1)
    swift_once();
  v1 = objc_msgSend((id)qword_1EFE47238, sel_dictionaryRepresentation);
  sub_1D451A5CC();
  sub_1D4457DE0();
  sub_1D430740C();
  sub_1D4457E74();
  if (v0)
    sub_1D42D71D8();
  sub_1D42BE8B4();
  sub_1D42CB758();
}

void sub_1D445631C()
{
  uint64_t v0;
  id v1;

  if (qword_1EFE47240 != -1)
    swift_once();
  v1 = objc_msgSend((id)qword_1EFE47238, sel_dictionaryRepresentation);
  sub_1D451A5CC();
  sub_1D4457DE0();
  sub_1D430740C();
  sub_1D4457E74();
  if (v0)
    sub_1D42D71D8();
  sub_1D42BE8B4();
  sub_1D42CB758();
}

void static SNUserDefaults.bypassMovieRemixMusicDetection(userDefaultsSnapshot:)(uint64_t a1)
{
  id v1;

  if (!a1)
  {
    if (qword_1EFE47240 != -1)
      swift_once();
    v1 = objc_msgSend((id)qword_1EFE47238, sel_dictionaryRepresentation);
    sub_1D451A5CC();
    sub_1D4457DD8();
  }
  sub_1D42CB7B8();
  sub_1D4457E84();
  sub_1D4457D5C();
  if (v1)
  {
    sub_1D42D71D8();
    sub_1D42B7204();
  }
  else
  {
    sub_1D4457D4C();
  }
  sub_1D42CB758();
}

void sub_1D44564B8()
{
  uint64_t v0;
  id v1;

  if (qword_1EFE47240 != -1)
    swift_once();
  v1 = objc_msgSend((id)qword_1EFE47238, sel_dictionaryRepresentation);
  sub_1D451A5CC();
  sub_1D4457DE0();
  sub_1D430740C();
  sub_1D4457D90();
  if (v0)
    sub_1D42D71D8();
  sub_1D42BE8B4();
  sub_1D42CB758();
}

void sub_1D4456588()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1EFE47240 != -1)
    swift_once();
  v1 = objc_msgSend((id)qword_1EFE47238, sel_dictionaryRepresentation);
  sub_1D451A5CC();

  sub_1D4457458();
  sub_1D430740C();
  sub_1D4457E6C();
  if (v0)
  {
    sub_1D42D71D8();
    sub_1D42CB208();
  }
  else
  {
    v3 = v2;
    sub_1D42CB208();
    if (v3)
      sub_1D42BE8B4();
  }
  sub_1D437EC8C();
  sub_1D42CB6D4();
}

void static SNUserDefaults.bypassExclaves(userDefaultsSnapshot:)(uint64_t a1)
{
  id v1;

  if (!a1)
  {
    if (qword_1EFE47240 != -1)
      swift_once();
    v1 = objc_msgSend((id)qword_1EFE47238, sel_dictionaryRepresentation);
    sub_1D451A5CC();
    sub_1D4457DD8();
  }
  sub_1D42CB7B8();
  sub_1D4457E00();
  sub_1D4457D5C();
  if (v1)
  {
    sub_1D42D71D8();
    sub_1D42B7204();
  }
  else
  {
    sub_1D4457D4C();
  }
  sub_1D42CB758();
}

uint64_t static SNUserDefaults.ambientMusicDetectionShortThresholdHigh(userDefaultsSnapshot:)(uint64_t a1)
{
  return sub_1D4457DA8(a1);
}

uint64_t static SNUserDefaults.ambientMusicDetectionLongThresholdHigh(userDefaultsSnapshot:)(uint64_t a1)
{
  return sub_1D4457DA8(a1);
}

uint64_t static SNUserDefaults.ambientMusicDetectionThresholdLow(userDefaultsSnapshot:)(uint64_t a1)
{
  return sub_1D4457DA8(a1);
}

uint64_t sub_1D4456780(uint64_t a1)
{
  id v1;
  uint64_t v2;

  if (!a1)
  {
    if (qword_1EFE47240 != -1)
      swift_once();
    v1 = objc_msgSend((id)qword_1EFE47238, sel_dictionaryRepresentation);
    sub_1D451A5CC();

  }
  swift_bridgeObjectRetain();
  sub_1D437EC8C();
  v2 = sub_1D445720C();
  sub_1D42CB208();
  return v2;
}

void static SNUserDefaults.isHomeSoundRecognitionOptimizationEnabled(userDefaultsSnapshot:)(uint64_t a1)
{
  id v1;

  if (!a1)
  {
    if (qword_1EFE47240 != -1)
      swift_once();
    v1 = objc_msgSend((id)qword_1EFE47238, sel_dictionaryRepresentation);
    sub_1D451A5CC();
    sub_1D4457DD8();
  }
  sub_1D42CB7B8();
  sub_1D4457D5C();
  if (v1)
  {
    sub_1D42D71D8();
    sub_1D42B7204();
  }
  else
  {
    sub_1D4457D4C();
  }
  sub_1D42CB758();
}

id sub_1D4456958()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  id v5;
  uint64_t v6;

  if (qword_1EFE47240 != -1)
    swift_once();
  v1 = objc_msgSend((id)qword_1EFE47238, sel_dictionaryRepresentation);
  sub_1D451A5CC();
  sub_1D4457DE0();
  v2 = sub_1D4457E6C();
  if (v0)
  {
    sub_1D42D71D8();
    sub_1D42BE8B4();
    return 0;
  }
  else
  {
    v5 = v2;
    v6 = v3;
    sub_1D42BE8B4();
    if (v6)
      return v5;
    else
      return 0;
  }
}

unint64_t SNMicrophoneInjectionFilePathKey.getter()
{
  return sub_1D4457DB0(23);
}

id sub_1D4456A54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id result;

  v0 = sub_1D451A6EC();
  v2 = v1;
  v3 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  result = sub_1D4457CEC(v0, v2);
  if (result)
    qword_1EFE47238 = (uint64_t)result;
  else
    __break(1u);
  return result;
}

id static SNUserDefaults.singleton.getter()
{
  if (qword_1EFE47240 != -1)
    swift_once();
  return (id)qword_1EFE47238;
}

id sub_1D4456AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v8;
  uint64_t v9;

  sub_1D4457E98(a1, a2, a3);
  v3 = MEMORY[0x1E0DEE9B8] + 8;
  v4 = sub_1D4457D68();
  if ((_DWORD)v4)
    return v8;
  sub_1D4457EBC(v4, v5);
  sub_1D42E9D88(0, (unint64_t *)&qword_1EFE404B0);
  if ((sub_1D4457D68() & 1) != 0)
  {
    v6 = objc_msgSend(v8, sel_stringValue);
    v3 = sub_1D451A6EC();

  }
  else
  {
    sub_1D42DCEE8();
    sub_1D4457DE8();
    sub_1D4457E54();
    sub_1D4311FA8();
    sub_1D4457E44();
    sub_1D42DCD98(v9, (uint64_t)"com.apple.SoundAnalysis");
    sub_1D42CB208();
    swift_willThrow();
  }
  return (id)v3;
}

id sub_1D4456C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1D4457E98(a1, a2, a3);
  v3 = (id)(MEMORY[0x1E0DEE9B8] + 8);
  v4 = sub_1D4457D68();
  if ((_DWORD)v4)
  {
    v3 = sub_1D432E1D0(v7, v8);
    sub_1D42CB208();
  }
  else
  {
    sub_1D4457EBC(v4, v5);
    sub_1D42E9D88(0, (unint64_t *)&qword_1EFE404B0);
    if ((sub_1D4457D68() & 1) != 0)
    {
      return (id)v7;
    }
    else
    {
      sub_1D42DCEE8();
      sub_1D4457DE8();
      sub_1D4457E54();
      sub_1D4311FA8();
      sub_1D4457E44();
      sub_1D42DCD98(v9, (uint64_t)"com.apple.SoundAnalysis");
      sub_1D42CB208();
      swift_willThrow();
    }
  }
  return v3;
}

uint64_t sub_1D4456CF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  double v17;
  double v18;
  double v19;
  unsigned int v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;

  sub_1D42B294C(a1, (uint64_t)&v43);
  sub_1D42B28FC(&qword_1EFE4CC90);
  if (swift_dynamicCast())
  {
    v2 = *(_QWORD *)(v41 + 16);
    if (v2)
    {
      v42 = MEMORY[0x1E0DEE9D8];
      sub_1D42C73B0();
      v40 = v41;
      for (i = v41 + 32; ; i += 32)
      {
        sub_1D42B294C(i, (uint64_t)&v43);
        v6 = sub_1D4456C04((uint64_t)&v43, v4, v5);
        if (v1)
          break;
        v7 = v6;
        v8 = sub_1D4457EA8();
        v9 = v7;
        v10 = objc_msgSend(v8, sel_initWithLongLong_, 0x7FFFFFFFFFFFFFFFLL);
        v11 = objc_msgSend(sub_1D4457EA8(), sel_initWithLongLong_, 0x8000000000000000);
        v12 = objc_msgSend(v9, sel_compare_, v10);
        v13 = v10;
        if (v12 != (id)1)
        {
          if (objc_msgSend(v9, sel_compare_, v11) == (id)-1)
            v13 = v11;
          else
            v13 = v9;
        }
        v14 = objc_msgSend(v13, sel_longLongValue, v40);

        v15 = objc_msgSend(sub_1D4457EA8(), sel_initWithInteger_, v14);
        v16 = sub_1D435ECCC((uint64_t)v15, sel_longLongValue);
        if (v16 != objc_msgSend(v15, sel_longLongValue)
          || (objc_msgSend(v9, sel_doubleValue), v18 = v17, objc_msgSend(v15, sel_doubleValue), v18 != v19))
        {

LABEL_21:
          sub_1D42DCEE8();
          sub_1D451B400();
          v32 = swift_bridgeObjectRelease();
          v33 = sub_1D435ECCC(v32, sel_description);
          sub_1D451A6EC();

          sub_1D451A794();
          swift_bridgeObjectRelease();
          v34 = sub_1D4342D9C();
          sub_1D43EC59C(v34, v35, v36, v37, v38, 0x80000001D45589C0);
          swift_bridgeObjectRelease();
          swift_willThrow();

          break;
        }
        v20 = objc_msgSend(v9, sel_isEqual_, v15);

        if (!v20)
          goto LABEL_21;
        v22 = sub_1D435ECCC(v21, sel_integerValue);

        sub_1D42B5400((uint64_t)&v43);
        v23 = v42;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D42C73B0();
          v23 = v42;
        }
        v24 = *(_QWORD *)(v23 + 16);
        if (v24 >= *(_QWORD *)(v23 + 24) >> 1)
        {
          sub_1D42C73B0();
          v23 = v42;
        }
        *(_QWORD *)(v23 + 16) = v24 + 1;
        *(_QWORD *)(v23 + 8 * v24 + 32) = v22;
        if (!--v2)
        {
          swift_bridgeObjectRelease();
          return v23;
        }
      }
      sub_1D42B5400((uint64_t)&v43);
      v23 = v42;
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    v25 = sub_1D42DCEE8();
    v43 = 0;
    v44 = 0xE000000000000000;
    sub_1D451B400();
    sub_1D430740C();
    sub_1D451A794();
    sub_1D451B514();
    v26 = v44;
    v27 = sub_1D4342D9C();
    v23 = v25;
    sub_1D43EC59C(v27, v28, v29, v30, v31, v26);
    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  return v23;
}

id sub_1D4457124()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _OWORD v51[2];
  __int128 v52;
  uint64_t v53;

  sub_1D4457EC8();
  if (v2)
  {
    sub_1D4457D7C();
    v3 = sub_1D4334214();
    if ((v4 & 1) != 0)
      sub_1D4457D98(v3, v4, v5, v6, v7, v8, v9, v10, *(uint64_t *)&v51[0]);
    else
      sub_1D4457DCC();
    v11 = sub_1D42CB208();
  }
  else
  {
    v15 = sub_1D4457DCC();
  }
  v16 = sub_1D4457DC0(v11, v12, v13, v14, v15);
  if (!v53)
  {
    v0 = 0;
    goto LABEL_12;
  }
  v24 = sub_1D42B293C(&v52, v51);
  v32 = sub_1D4457EB0((uint64_t)v24, v25, v26, v27, v28, v29, v30, v31, *(uint64_t *)&v51[0]);
  if (!v1)
  {
    v33 = v32;
    sub_1D4443168();
    v0 = objc_msgSend(v33, sel_integerValue);

    v16 = sub_1D42B6E10(v42, v43, v44, v45, v46, v47, v48, v49, *(uint64_t *)&v51[0]);
LABEL_12:
    sub_1D4457DB8(v16, v17, v18, v19, v20, v21, v22, v23);
    return v0;
  }
  v34 = sub_1D42B5400((uint64_t)v51);
  sub_1D4457DB8(v34, v35, v36, v37, v38, v39, v40, v41);
  return v0;
}

uint64_t sub_1D445720C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD v53[2];
  __int128 v54;
  uint64_t v55;

  sub_1D4457EC8();
  if (v2)
  {
    sub_1D4457D7C();
    v3 = sub_1D4334214();
    if ((v4 & 1) != 0)
      sub_1D4457D98(v3, v4, v5, v6, v7, v8, v9, v10, *(uint64_t *)&v53[0]);
    else
      sub_1D4457DCC();
    v11 = sub_1D42CB208();
  }
  else
  {
    v15 = sub_1D4457DCC();
  }
  v16 = sub_1D4457DC0(v11, v12, v13, v14, v15);
  if (!v55)
  {
    v0 = 0;
    goto LABEL_12;
  }
  v24 = sub_1D42B293C(&v54, v53);
  v32 = sub_1D4457EB0((uint64_t)v24, v25, v26, v27, v28, v29, v30, v31, *(uint64_t *)&v53[0]);
  if (!v1)
  {
    v33 = v32;
    sub_1D4443088();
    objc_msgSend(v33, sel_doubleValue);
    v43 = v42;

    v16 = sub_1D42B6E10(v44, v45, v46, v47, v48, v49, v50, v51, *(uint64_t *)&v53[0]);
    v0 = v43;
LABEL_12:
    sub_1D4457DB8(v16, v17, v18, v19, v20, v21, v22, v23);
    return v0;
  }
  v34 = sub_1D42B5400((uint64_t)v53);
  sub_1D4457DB8(v34, v35, v36, v37, v38, v39, v40, v41);
  return v0;
}

id sub_1D4457300()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD v43[2];
  __int128 v44;
  uint64_t v45;

  sub_1D4457EC8();
  if (v2)
  {
    sub_1D4457D7C();
    v3 = sub_1D4334214();
    if ((v4 & 1) != 0)
      sub_1D4457D98(v3, v4, v5, v6, v7, v8, v9, v10, *(uint64_t *)&v43[0]);
    else
      sub_1D4457DCC();
    v11 = sub_1D42CB208();
  }
  else
  {
    v15 = sub_1D4457DCC();
  }
  v16 = sub_1D4457DC0(v11, v12, v13, v14, v15);
  if (!v45)
  {
    v1 = 0;
LABEL_12:
    sub_1D4457DB8(v16, v17, v18, v19, v20, v21, v22, v23);
    return v1;
  }
  sub_1D42B293C(&v44, v43);
  v26 = sub_1D4456AF4((uint64_t)v43, v24, v25);
  if (!v0)
  {
    v1 = v26;
    v16 = sub_1D42B6E10((uint64_t)v26, v27, v28, v29, v30, v31, v32, v33, *(uint64_t *)&v43[0]);
    goto LABEL_12;
  }
  v34 = sub_1D42B5400((uint64_t)v43);
  sub_1D4457DB8(v34, v35, v36, v37, v38, v39, v40, v41);
  return v1;
}

uint64_t sub_1D44573B8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD v31[2];
  __int128 v32;
  uint64_t v33;

  sub_1D4457EC8();
  if (v0)
  {
    sub_1D4457D7C();
    v1 = sub_1D4334214();
    if ((v2 & 1) != 0)
      sub_1D4457D98(v1, v2, v3, v4, v5, v6, v7, v8, *(uint64_t *)&v31[0]);
    else
      sub_1D4457DCC();
    v9 = sub_1D42CB208();
  }
  else
  {
    v13 = sub_1D4457DCC();
  }
  v14 = sub_1D4457DC0(v9, v10, v11, v12, v13);
  if (v33)
  {
    sub_1D42B293C(&v32, v31);
    v22 = sub_1D4456CF4((uint64_t)v31);
    v14 = sub_1D42B6E10(v22, v23, v24, v25, v26, v27, v28, v29, *(uint64_t *)&v31[0]);
  }
  else
  {
    v22 = 0;
  }
  sub_1D4457DB8(v14, v15, v16, v17, v18, v19, v20, v21);
  return v22;
}

uint64_t sub_1D4457458()
{
  uint64_t v0;
  NSString *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;

  sub_1D42B28FC(&qword_1EFE40520);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1D452EC90;
  v1 = NSHomeDirectory();
  v2 = sub_1D451A6EC();
  v4 = v3;

  *(_QWORD *)(v0 + 32) = v2;
  *(_QWORD *)(v0 + 40) = v4;
  *(_QWORD *)(v0 + 48) = 0x7972617262694CLL;
  *(_QWORD *)(v0 + 56) = 0xE700000000000000;
  *(_QWORD *)(v0 + 64) = 0x736568636143;
  *(_QWORD *)(v0 + 72) = 0xE600000000000000;
  *(_QWORD *)(v0 + 80) = 0xD000000000000018;
  *(_QWORD *)(v0 + 88) = 0x80000001D4553460;
  strcpy((char *)(v0 + 96), "AudioCaptures");
  *(_WORD *)(v0 + 110) = -4864;
  v5 = (void *)objc_opt_self();
  v6 = (void *)sub_1D451A908();
  sub_1D42BE8B4();
  v7 = objc_msgSend(v5, sel_pathWithComponents_, v6);

  v8 = sub_1D451A6EC();
  return v8;
}

void sub_1D4457598()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1EFE47240 != -1)
    swift_once();
  v1 = objc_msgSend((id)qword_1EFE47238, sel_dictionaryRepresentation);
  sub_1D451A5CC();

  sub_1D4457458();
  sub_1D430740C();
  sub_1D4457E6C();
  if (v0)
  {
    sub_1D42D71D8();
    sub_1D42CB208();
  }
  else
  {
    v3 = v2;
    sub_1D42CB208();
    if (v3)
      sub_1D42BE8B4();
  }
  sub_1D437EC8C();
  sub_1D42CB6D4();
}

void sub_1D4457680()
{
  uint64_t v0;
  id v1;

  if (qword_1EFE47240 != -1)
    swift_once();
  v1 = objc_msgSend((id)qword_1EFE47238, sel_dictionaryRepresentation);
  sub_1D451A5CC();
  sub_1D4457DE0();
  sub_1D430740C();
  sub_1D4457D90();
  if (v0)
    sub_1D42D71D8();
  sub_1D42BE8B4();
  sub_1D42CB758();
}

void sub_1D4457750()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D4457E84();
  sub_1D4457E6C();
  if (v0)
  {
    sub_1D42D71D8();
  }
  else if (v1)
  {
    sub_1D42E9D88(0, &qword_1EFE527F8);
    sub_1D437EC8C();
    sub_1D451AEFC();
    sub_1D42BE8B4();
  }
  sub_1D42CB758();
}

id sub_1D44577D8()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;

  if (qword_1EFE47240 != -1)
    swift_once();
  v1 = objc_msgSend((id)qword_1EFE47238, sel_dictionaryRepresentation);
  sub_1D451A5CC();
  sub_1D4457DE0();
  sub_1D430740C();
  v2 = sub_1D4457D90();
  if (v0)
  {
    sub_1D42D71D8();
    sub_1D42BE8B4();
    return 0;
  }
  else
  {
    v3 = v2;
    sub_1D42BE8B4();
  }
  return v3;
}

void sub_1D44578B4()
{
  id v0;

  if (qword_1EFE47240 != -1)
    swift_once();
  v0 = objc_msgSend((id)qword_1EFE47238, sel_dictionaryRepresentation);
  sub_1D451A5CC();
  sub_1D4457DE0();
  sub_1D430740C();
  sub_1D44573B8();
  sub_1D42BE8B4();
  sub_1D42CB758();
}

uint64_t static SNUserDefaults.keyBypassExclaves.getter()
{
  return sub_1D4457E00();
}

uint64_t static SNUserDefaults.keyTuningEnabled.getter()
{
  return sub_1D4457E24();
}

void static SNUserDefaults.tuningEnabled(userDefaultsSnapshot:)(uint64_t a1)
{
  id v1;

  if (!a1)
  {
    if (qword_1EFE47240 != -1)
      swift_once();
    v1 = objc_msgSend((id)qword_1EFE47238, sel_dictionaryRepresentation);
    sub_1D451A5CC();
    sub_1D4457DD8();
  }
  sub_1D42CB7B8();
  sub_1D4457E24();
  sub_1D4457D5C();
  if (v1)
  {
    sub_1D42D71D8();
    sub_1D42B7204();
  }
  else
  {
    sub_1D4457D4C();
  }
  sub_1D42CB758();
}

unint64_t static SNUserDefaults.keyEnableHomeSoundRecognitionOptimization.getter()
{
  return sub_1D4457DB0(38);
}

unint64_t static SNUserDefaults.keyEnableHomeSoundRecognitionUltronReports.getter()
{
  return sub_1D4457DB0(39);
}

void static SNUserDefaults.homeSoundRecognitionUltronReportsEnabled(userDefaultsSnapshot:)(uint64_t a1)
{
  id v1;

  if (!a1)
  {
    if (qword_1EFE47240 != -1)
      swift_once();
    v1 = objc_msgSend((id)qword_1EFE47238, sel_dictionaryRepresentation);
    sub_1D451A5CC();
    sub_1D4457DD8();
  }
  sub_1D42CB7B8();
  sub_1D4457D5C();
  if (v1)
  {
    sub_1D42D71D8();
    sub_1D42B7204();
  }
  else
  {
    sub_1D4457D4C();
  }
  sub_1D42CB758();
}

unint64_t static SNUserDefaults.keyOverrideXSupport.getter()
{
  return sub_1D4457DB0(16);
}

unint64_t static SNUserDefaults.keyBypassLPPostProcessing.getter()
{
  return sub_1D4457DB0(22);
}

void static SNUserDefaults.isLPPostProcessingBypassed(userDefaultsSnapshot:)(uint64_t a1)
{
  id v1;

  if (!a1)
  {
    if (qword_1EFE47240 != -1)
      swift_once();
    v1 = objc_msgSend((id)qword_1EFE47238, sel_dictionaryRepresentation);
    sub_1D451A5CC();
    sub_1D4457DD8();
  }
  sub_1D42CB7B8();
  sub_1D4457D5C();
  if (v1)
  {
    sub_1D42D71D8();
    sub_1D42B7204();
  }
  else
  {
    sub_1D4457D4C();
  }
  sub_1D42CB758();
}

unint64_t static SNUserDefaults.keyBypassMovieRemixMusicDetection.getter()
{
  return sub_1D4457DB0(30);
}

unint64_t static SNUserDefaults.keyAmbientMusicDetectionShortThresholdHigh.getter()
{
  return sub_1D4457DB0(39);
}

unint64_t static SNUserDefaults.keyAmbientMusicDetectionLongThresholdHigh.getter()
{
  return sub_1D4457DB0(38);
}

unint64_t static SNUserDefaults.keyAmbientMusicDetectionThresholdLow.getter()
{
  sub_1D430740C();
  return sub_1D4457DB0(33);
}

ValueMetadata *type metadata accessor for SNUserDefaults()
{
  return &type metadata for SNUserDefaults;
}

id sub_1D4457CEC(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;

  if (a2)
  {
    v3 = (void *)sub_1D451A6C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v4 = objc_msgSend(v2, sel_initWithSuiteName_, v3);

  return v4;
}

uint64_t sub_1D4457D4C()
{
  return swift_bridgeObjectRelease();
}

id sub_1D4457D5C()
{
  return sub_1D4457124();
}

uint64_t sub_1D4457D68()
{
  return swift_dynamicCast();
}

uint64_t sub_1D4457D7C()
{
  return swift_bridgeObjectRetain();
}

id sub_1D4457D90()
{
  return sub_1D4457124();
}

uint64_t sub_1D4457D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  return sub_1D42B294C(*(_QWORD *)(v9 + 56) + 32 * a1, (uint64_t)va);
}

uint64_t sub_1D4457DA8(uint64_t a1)
{
  return sub_1D4456780(a1);
}

unint64_t sub_1D4457DB0(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

uint64_t sub_1D4457DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  return sub_1D42B5464((uint64_t)va);
}

uint64_t sub_1D4457DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  return sub_1D42B28B4((uint64_t)va1, (uint64_t)va);
}

double sub_1D4457DCC()
{
  return 0.0;
}

void sub_1D4457DD8()
{
  void *v0;

}

void sub_1D4457DE0()
{
  void *v0;

}

uint64_t sub_1D4457DE8()
{
  return sub_1D451B400();
}

uint64_t sub_1D4457E00()
{
  return 0x7845737361707962;
}

uint64_t sub_1D4457E24()
{
  return 0x7554656C62616E65;
}

uint64_t sub_1D4457E44()
{
  return sub_1D451B514();
}

unint64_t sub_1D4457E54()
{
  return 0xD000000000000021;
}

id sub_1D4457E6C()
{
  return sub_1D4457300();
}

uint64_t sub_1D4457E74()
{
  return sub_1D445720C();
}

unint64_t sub_1D4457E84()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1D4457E98(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return sub_1D42B294C(a1, (uint64_t)va);
}

id sub_1D4457EA8()
{
  uint64_t v0;

  return objc_allocWithZone(*(Class *)(v0 + 2024));
}

id sub_1D4457EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1D4456C04((uint64_t)&a9, a2, a3);
}

uint64_t sub_1D4457EBC(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  return sub_1D42B294C(v2, (uint64_t)va);
}

char *sub_1D4457ED4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _BYTE *v5;
  char v7;

  v2 = sub_1D4519AE0();
  v4 = sub_1D4457F74(v2, v3);
  if (v4 == 3)
  {
    sub_1D42B7F2C();
    swift_allocError();
    *v5 = 0;
    swift_willThrow();
    return (char *)swift_bridgeObjectRelease();
  }
  else
  {
    v7 = v4;
    swift_bridgeObjectRelease();
    return sub_1D4458068(a1, v7);
  }
}

uint64_t sub_1D4457F74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v5;
  uint64_t v6;
  unsigned int v7;
  BOOL v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v14;

  v2 = 3;
  v5 = &byte_1E97A0350;
  while (1)
  {
    v7 = *v5++;
    v6 = v7;
    v8 = v7 == 1;
    if (v7 == 1)
      v9 = 0x636C65646F6D6C6DLL;
    else
      v9 = 0x656C646E7562;
    v10 = 0xE800000000000000;
    if (!v8)
      v10 = 0xE600000000000000;
    v11 = (_DWORD)v6 ? v9 : 0x6C65646F6D6C6DLL;
    v12 = (_DWORD)v6 ? v10 : 0xE700000000000000;
    if (v11 == a1 && v12 == a2)
      break;
    v14 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
      return v6;
    if (!--v2)
      return 3;
  }
  swift_bridgeObjectRelease();
  return v6;
}

char *sub_1D4458068(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v31[2];

  v31[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = sub_1D4519BC4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)v31 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)v31 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v31 - v16;
  if (a2)
  {
    if (a2 == 1)
    {
      v15 = (char *)sub_1D439DE1C();
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v12, a1, v5);
      v18 = sub_1D4458380((uint64_t)v12);
      if (!v2)
        return (char *)v18;
    }
    else
    {
      sub_1D436BB64();
      if (!v2)
      {
        v26 = v25;
        type metadata accessor for E5RTExecutionStream();
        v15 = (char *)sub_1D43211DC();
        *((_QWORD *)v15 + 2) = v26;
        sub_1D4519AC8();
        sub_1D4519B88();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
        v28 = sub_1D436BC04();
        type metadata accessor for E5RTExecutionStreamOperation();
        v29 = sub_1D43211DC();
        *(_QWORD *)(v29 + 16) = v28;
        sub_1D436D938(v29);
        sub_1D436BDB0(v29);
      }
    }
  }
  else
  {
    v19 = (void *)objc_opt_self();
    v20 = (void *)sub_1D4519B28();
    v31[0] = 0;
    v21 = objc_msgSend(v19, sel_compileModelAtURL_error_, v20, v31);

    v22 = v31[0];
    if (v21)
    {
      sub_1D4519B7C();
      v23 = v22;

      sub_1D439DE1C();
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v15, v17, v5);
      v24 = (char *)sub_1D4458380((uint64_t)v15);
      if (!v2)
        v15 = v24;
      sub_1D4458494();
    }
    else
    {
      v27 = v31[0];
      sub_1D4519AA4();

      swift_willThrow();
    }
  }
  return v15;
}

id sub_1D4458380(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  id v7;
  id v8;
  uint64_t v9;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = (void *)sub_1D4519B28();
  v11[0] = 0;
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_modelWithContentsOfURL_error_, v2, v11);

  v4 = v11[0];
  if (v3)
  {
    v5 = sub_1D4519BC4();
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v7 = v4;
    v6(a1, v5);
  }
  else
  {
    v8 = v11[0];
    sub_1D4519AA4();

    swift_willThrow();
    v9 = sub_1D4519BC4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

uint64_t sub_1D4458494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1D44584A4()
{
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B970();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B97C();
  return sub_1D451B97C();
}

BOOL sub_1D4458588(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;
  __int16 v4;
  BOOL v5;

  result = 0;
  v4 = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_s32(*(int32x4_t *)(a1 + 28), *(int32x4_t *)(a2 + 28))), 0xFuLL))) & (*(_DWORD *)(a1 + 4) == *(_DWORD *)(a2 + 4));
  v5 = *(float *)(a1 + 8) == *(float *)(a2 + 8) && *(float *)a1 == *(float *)a2;
  if ((v4 & (*(_DWORD *)(a1 + 16) == *(_DWORD *)(a2 + 16)
                            && *(_DWORD *)(a1 + 44) == *(_DWORD *)(a2 + 44)
                            && v5
                            && *(float *)(a1 + 12) == *(float *)(a2 + 12)
                            && *(float *)(a1 + 20) == *(float *)(a2 + 20))) == 1
    && ((*(unsigned __int8 *)(a1 + 24) ^ *(unsigned __int8 *)(a2 + 24)) & 1) == 0)
  {
    return *(_DWORD *)(a1 + 48) == *(_DWORD *)(a2 + 48);
  }
  return result;
}

uint64_t sub_1D445865C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  char v17;

  v2 = a1 == 0x6152656C706D6173 && a2 == 0xEA00000000006574;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x61426C654D6D756ELL && a2 == 0xEB0000000073646ELL;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x75716572466E696DLL && a2 == 0xEC00000079636E65;
      if (v7 || (sub_1D451B820() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x757165724678616DLL && a2 == 0xEC00000079636E65;
        if (v8 || (sub_1D451B820() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x657079546C656DLL && a2 == 0xE700000000000000;
          if (v9 || (sub_1D451B820() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x6C69737045676F6CLL && a2 == 0xEA00000000006E6FLL;
            if (v10 || (sub_1D451B820() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x6C6F707265746E69 && a2 == 0xEF7A486E49657461;
              if (v11 || (sub_1D451B820() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                v12 = a1 == 0x74676E654C706F68 && a2 == 0xE900000000000068;
                if (v12 || (sub_1D451B820() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else
                {
                  v13 = a1 == 0x654C776F646E6977 && a2 == 0xEC0000006874676ELL;
                  if (v13 || (sub_1D451B820() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 8;
                  }
                  else
                  {
                    v14 = a1 == 0x664F776F646E6977 && a2 == 0xEC00000074657366;
                    if (v14 || (sub_1D451B820() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 9;
                    }
                    else
                    {
                      v15 = a1 == 0x74676E654C746666 && a2 == 0xE900000000000068;
                      if (v15 || (sub_1D451B820() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 10;
                      }
                      else
                      {
                        v16 = a1 == 0x657366664F746666 && a2 == 0xE900000000000074;
                        if (v16 || (sub_1D451B820() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 11;
                        }
                        else if (a1 == 0xD000000000000015 && a2 == 0x80000001D4559390)
                        {
                          swift_bridgeObjectRelease();
                          return 12;
                        }
                        else
                        {
                          v17 = sub_1D451B820();
                          swift_bridgeObjectRelease();
                          if ((v17 & 1) != 0)
                            return 12;
                          else
                            return 13;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1D4458C0C()
{
  return 13;
}

uint64_t sub_1D4458C14(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D4458C4C + 4 * aO[a1]))(0x6152656C706D6173, 0xEA00000000006574);
}

uint64_t sub_1D4458C4C()
{
  return 0x61426C654D6D756ELL;
}

uint64_t sub_1D4458C6C()
{
  return 0x75716572466E696DLL;
}

uint64_t sub_1D4458C98()
{
  return 0x657079546C656DLL;
}

uint64_t sub_1D4458CB0()
{
  return 0x6C69737045676F6CLL;
}

uint64_t sub_1D4458CC8()
{
  return 0x6C6F707265746E69;
}

uint64_t sub_1D4458CEC()
{
  return 0x74676E654C706F68;
}

uint64_t sub_1D4458D54()
{
  return 0x657366664F746666;
}

unint64_t sub_1D4458D70()
{
  return 0xD000000000000015;
}

void sub_1D4458D8C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  _DWORD v15[6];
  int v16;
  int v17;
  char v18;
  int v19;

  v4 = sub_1D42B28FC(&qword_1EFE52840);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_DWORD *)(v1 + 4);
  v16 = *(_DWORD *)(v1 + 16);
  v17 = v8;
  v9 = *(unsigned __int8 *)(v1 + 24);
  v15[4] = *(_DWORD *)(v1 + 28);
  v15[5] = v9;
  v10 = *(_DWORD *)(v1 + 32);
  v15[2] = *(_DWORD *)(v1 + 36);
  v15[3] = v10;
  v11 = *(_DWORD *)(v1 + 40);
  v12 = *(_DWORD *)(v1 + 48);
  v15[0] = *(_DWORD *)(v1 + 44);
  v15[1] = v11;
  sub_1D42B5528(a1, a1[3]);
  sub_1D4459874();
  v13 = v4;
  sub_1D451BA24();
  LOBYTE(v19) = 0;
  sub_1D4459B20();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    v14 = v16;
    sub_1D4459B2C(1);
    sub_1D4459AF0();
    LOBYTE(v19) = 2;
    sub_1D4459B20();
    LOBYTE(v19) = 3;
    sub_1D4459B20();
    v19 = v14;
    v18 = 4;
    sub_1D42B28FC(&qword_1EFE52820);
    sub_1D437DB2C(&qword_1EFE52848, &qword_1EFE52820, MEMORY[0x1E0DEE100], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
    sub_1D451B760();
    LOBYTE(v19) = 5;
    sub_1D4459B20();
    sub_1D4459B2C(6);
    sub_1D451B730();
    sub_1D4459B2C(7);
    sub_1D4459AF0();
    sub_1D4459B2C(8);
    sub_1D4459AF0();
    sub_1D4459B2C(9);
    sub_1D4459AF0();
    sub_1D4459B2C(10);
    sub_1D451B790();
    sub_1D4459B2C(11);
    sub_1D451B76C();
    v19 = v12;
    v18 = 12;
    sub_1D42B28FC(&qword_1EFE52830);
    sub_1D437DB2C(&qword_1EFE52850, &qword_1EFE52830, MEMORY[0x1E0DEE100], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
    sub_1D451B760();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v13);
  }
  sub_1D4459B00();
}

uint64_t sub_1D44590D0()
{
  sub_1D451B958();
  sub_1D44584A4();
  return sub_1D451B994();
}

void sub_1D4459150(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  char v21;
  int v22;

  v5 = sub_1D42B28FC(&qword_1EFE52810);
  MEMORY[0x1E0C80A78](v5);
  sub_1D42B5528(a1, a1[3]);
  sub_1D4459874();
  sub_1D451BA0C();
  if (!v2)
  {
    sub_1D4459ADC();
    v7 = v6;
    v8 = sub_1D4459AC4(1);
    sub_1D4459ADC();
    v10 = v9;
    LOBYTE(v22) = 3;
    sub_1D4459ADC();
    v12 = v11;
    sub_1D42B28FC(&qword_1EFE52820);
    sub_1D437DB2C(&qword_1EFE52828, &qword_1EFE52820, MEMORY[0x1E0DEE128], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
    sub_1D4338474();
    v13 = v22;
    LOBYTE(v22) = 5;
    sub_1D4459ADC();
    v15 = v14;
    sub_1D4459B38(6);
    v21 = sub_1D451B658();
    v20 = sub_1D4459AC4(7);
    v19 = sub_1D4459AC4(8);
    v18 = sub_1D4459AC4(9);
    v17 = sub_1D4459AC4(10);
    sub_1D4459B38(11);
    v16 = sub_1D451B694();
    sub_1D42B28FC(&qword_1EFE52830);
    sub_1D437DB2C(&qword_1EFE52838, &qword_1EFE52830, MEMORY[0x1E0DEE128], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
    sub_1D4338474();
    sub_1D42CB3BC();
    *(_DWORD *)a2 = v7;
    *(_DWORD *)(a2 + 4) = v8;
    *(_DWORD *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 12) = v12;
    *(_DWORD *)(a2 + 16) = v13;
    *(_DWORD *)(a2 + 20) = v15;
    *(_BYTE *)(a2 + 24) = v21 & 1;
    *(_DWORD *)(a2 + 28) = v20;
    *(_DWORD *)(a2 + 32) = v19;
    *(_DWORD *)(a2 + 36) = v18;
    *(_DWORD *)(a2 + 40) = v17;
    *(_DWORD *)(a2 + 44) = v16;
    *(_DWORD *)(a2 + 48) = v22;
  }
  sub_1D42B5400((uint64_t)a1);
  sub_1D4459B00();
}

uint64_t sub_1D4459420()
{
  unsigned __int8 *v0;

  return sub_1D4458C14(*v0);
}

uint64_t sub_1D4459428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D445865C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D445944C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D4458C0C();
  *a1 = result;
  return result;
}

uint64_t sub_1D4459470()
{
  sub_1D4459874();
  return sub_1D451BA3C();
}

uint64_t sub_1D4459498()
{
  sub_1D4459874();
  return sub_1D451BA48();
}

uint64_t sub_1D44594C8()
{
  sub_1D451B958();
  sub_1D44584A4();
  return sub_1D451B994();
}

void sub_1D4459544(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1D4459150(a1, a2);
}

void sub_1D4459558(_QWORD *a1)
{
  sub_1D4458D8C(a1);
}

uint64_t sub_1D4459570(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  char v5;
  void *v6;
  _BYTE *v7;
  _DWORD v9[2];
  uint64_t v10;
  int v11;
  int v12;
  char v13;
  __int128 v14;
  uint64_t v15;

  v2 = *(_DWORD *)(a1 + 4);
  v3 = *(_DWORD *)(a1 + 16);
  v4 = *(_DWORD *)(a1 + 20);
  v5 = *(_BYTE *)(a1 + 24) & 1;
  v9[0] = *(_DWORD *)a1;
  v9[1] = v2;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = v3;
  v12 = v4;
  v13 = v5;
  v14 = *(_OWORD *)(a1 + 28);
  v15 = *(_QWORD *)(a1 + 44);
  v6 = sub_1D44F3BD0((uint64_t)v9);
  if (v6)
  {
    *(_QWORD *)(v1 + 16) = v6;
  }
  else
  {
    sub_1D42BE094();
    swift_allocError();
    *v7 = 0;
    swift_willThrow();
    swift_deallocPartialClassInstance();
  }
  return v1;
}

uint64_t sub_1D4459638()
{
  uint64_t v0;

  sub_1D44F3C44(*(void **)(v0 + 16));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LogMelState()
{
  return objc_opt_self();
}

uint64_t sub_1D445967C(unint64_t a1, uint64_t a2)
{
  uint64_t result;

  if ((a1 & 0x8000000000000000) == 0 && !HIDWORD(a1))
    return sub_1D44F3124(a1, *(_DWORD **)(a2 + 16));
  sub_1D42DCED4();
  result = sub_1D451B550();
  __break(1u);
  return result;
}

uint64_t storeEnumTagSinglePayload for LogMelSpectrogramUtilsError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D4459764 + 4 * byte_1D4540D52[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D4459798 + 4 * byte_1D4540D4D[v4]))();
}

uint64_t sub_1D4459798(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D44597A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D44597A8);
  return result;
}

uint64_t sub_1D44597B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D44597BCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D44597C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D44597C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LogMelSpectrogramUtilsError()
{
  return &type metadata for LogMelSpectrogramUtilsError;
}

ValueMetadata *type metadata accessor for LogMelParameters()
{
  return &type metadata for LogMelParameters;
}

unint64_t sub_1D44597F8()
{
  unint64_t result;

  result = qword_1EFE52800;
  if (!qword_1EFE52800)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4540DC4, &type metadata for LogMelParameters);
    atomic_store(result, (unint64_t *)&qword_1EFE52800);
  }
  return result;
}

unint64_t sub_1D4459838()
{
  unint64_t result;

  result = qword_1EFE52808;
  if (!qword_1EFE52808)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4540E6C, &type metadata for LogMelSpectrogramUtilsError);
    atomic_store(result, (unint64_t *)&qword_1EFE52808);
  }
  return result;
}

unint64_t sub_1D4459874()
{
  unint64_t result;

  result = qword_1EFE52818;
  if (!qword_1EFE52818)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4540FE8, &type metadata for LogMelParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52818);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LogMelParameters.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF4)
  {
    if (a2 + 12 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 12) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 13;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v5 = v6 - 13;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for LogMelParameters.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1D4459984 + 4 * byte_1D4540D5C[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1D44599B8 + 4 * byte_1D4540D57[v4]))();
}

uint64_t sub_1D44599B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D44599C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D44599C8);
  return result;
}

uint64_t sub_1D44599D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D44599DCLL);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1D44599E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D44599E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LogMelParameters.CodingKeys()
{
  return &type metadata for LogMelParameters.CodingKeys;
}

unint64_t sub_1D4459A08()
{
  unint64_t result;

  result = qword_1EFE52858;
  if (!qword_1EFE52858)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4540FC0, &type metadata for LogMelParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52858);
  }
  return result;
}

unint64_t sub_1D4459A48()
{
  unint64_t result;

  result = qword_1EFE52860;
  if (!qword_1EFE52860)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4540F30, &type metadata for LogMelParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52860);
  }
  return result;
}

unint64_t sub_1D4459A88()
{
  unint64_t result;

  result = qword_1EFE52868;
  if (!qword_1EFE52868)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4540F58, &type metadata for LogMelParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52868);
  }
  return result;
}

uint64_t sub_1D4459AC4@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 68) = a1;
  return sub_1D451B6B8();
}

uint64_t sub_1D4459ADC()
{
  return sub_1D451B670();
}

uint64_t sub_1D4459AF0()
{
  return sub_1D451B790();
}

uint64_t sub_1D4459B20()
{
  return sub_1D451B748();
}

void sub_1D4459B2C(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 68) = a1;
}

uint64_t sub_1D4459B38@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 68) = a1;
  return v1 - 68;
}

id sub_1D4459B50(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id result;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void (*v30)(uint64_t, uint64_t);
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34[2];
  uint64_t v35;
  void (*v36)(uint64_t, char *, uint64_t);
  unint64_t v37;
  unsigned int v38;
  unint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;

  v5 = v4;
  v46 = a3;
  v44 = a2;
  v8 = sub_1D4519AD4();
  v42 = *(_QWORD *)(v8 - 8);
  v43 = v8;
  MEMORY[0x1E0C80A78](v8);
  v41 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D42B28FC(qword_1EFE47450);
  MEMORY[0x1E0C80A78](v10);
  v45 = (uint64_t)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D4519BC4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v40 = (char *)v34 - v17;
  if (!(a1 >> 62))
  {
    v18 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v18)
      goto LABEL_3;
LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_15:
  swift_bridgeObjectRetain();
  v18 = sub_1D451B5A4();
  if (!v18)
    goto LABEL_12;
LABEL_3:
  v34[0] = a4;
  v34[1] = v5;
  v39 = a1 & 0xC000000000000001;
  v38 = *MEMORY[0x1E0CAFD78];
  v5 = 4;
  v37 = a1;
  v35 = v18;
  while (1)
  {
    a4 = v5 - 4;
    if (v39)
      v19 = (id)MEMORY[0x1D825CD78](v5 - 4, a1);
    else
      v19 = *(id *)(a1 + 8 * v5);
    v20 = v19;
    if (__OFADD__(a4, 1))
    {
      __break(1u);
      goto LABEL_15;
    }
    v48 = v5 - 3;
    v21 = objc_msgSend(v19, sel_resourceURL);
    if (!v21)
      break;
    v22 = v21;
    v51 = v20;
    v47 = v5;
    sub_1D4519B7C();

    v23 = v13;
    v24 = v45;
    v36 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 32);
    v36(v45, v16, v12);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v24, 0, 1, v12);
    result = (id)_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v24, 1, v12);
    if ((_DWORD)result == 1)
      goto LABEL_18;
    v26 = v43;
    v49 = v44;
    v50 = v46;
    v28 = v41;
    v27 = v42;
    (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v41, v38, v43);
    sub_1D432E53C();
    v29 = v40;
    sub_1D4519BAC();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v26);
    v30 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v30(v24, v12);
    v31 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    sub_1D4519AC8();
    sub_1D4519B94();
    v30((uint64_t)v16, v12);
    v32 = (void *)sub_1D451A6C8();
    swift_bridgeObjectRelease();
    LODWORD(v28) = objc_msgSend(v31, sel_fileExistsAtPath_, v32);

    if ((_DWORD)v28)
    {
      v33 = v34[0];
      sub_1D432AB6C(v34[0]);
      v36(v33, v29, v12);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v33, 0, 1, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v51;
    }
    v30((uint64_t)v29, v12);

    v5 = v47 + 1;
    a1 = v37;
    v13 = v23;
    if (v48 == v35)
      goto LABEL_12;
  }
  result = (id)_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v45, 1, 1, v12);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1D4459F54(uint64_t a1)
{
  return sub_1D445A01C(a1, &qword_1EFE528D0, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1D445F708);
}

uint64_t sub_1D4459F68(uint64_t a1)
{
  return sub_1D445A01C(a1, &qword_1EFE4D458, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1D445FA14);
}

uint64_t sub_1D4459F7C(uint64_t a1)
{
  return sub_1D445A01C(a1, &qword_1EFE528A0, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1D445FCFC);
}

uint64_t sub_1D4459F90(uint64_t a1)
{
  return sub_1D445A01C(a1, &qword_1EFE52890, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1D445FFD0);
}

uint64_t sub_1D4459FA4(uint64_t a1)
{
  return sub_1D445A01C(a1, &qword_1EFE528C8, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1D44602DC);
}

uint64_t sub_1D4459FB8(uint64_t a1)
{
  return sub_1D445A01C(a1, &qword_1EFE40378, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1D44608C4);
}

uint64_t sub_1D4459FCC(uint64_t a1, uint64_t a2)
{
  return sub_1D445A0B4(a1, a2, &qword_1EFE4BF10, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t *))sub_1D4460B94);
}

uint64_t sub_1D4459FE0(uint64_t a1)
{
  return sub_1D445A01C(a1, &qword_1EFE4BF10, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1D4460F40);
}

uint64_t sub_1D4459FF4(uint64_t a1)
{
  return sub_1D445A01C(a1, &qword_1EFE528B8, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1D4461204);
}

uint64_t sub_1D445A008(uint64_t a1)
{
  return sub_1D445A01C(a1, &qword_1EFE528B0, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1D44614C8);
}

uint64_t sub_1D445A01C(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t *))
{
  uint64_t v4;
  uint64_t v6;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1D42B28FC(a2);
    sub_1D4367884();
  }
  v4 = sub_1D4464598();
  a3(v4, 1, &v6);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1D445A0A0(uint64_t a1, uint64_t a2)
{
  return sub_1D445A0B4(a1, a2, &qword_1EFE528C8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t *))sub_1D446179C);
}

uint64_t sub_1D445A0B4(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t *))
{
  uint64_t v7;
  uint64_t v9;

  if (*(_QWORD *)(a2 + 16) >= *(_QWORD *)(a1 + 16))
    v7 = *(_QWORD *)(a1 + 16);
  else
    v7 = *(_QWORD *)(a2 + 16);
  if (v7)
  {
    sub_1D42B28FC(a3);
    sub_1D4367884();
  }
  sub_1D4464598();
  swift_bridgeObjectRetain();
  a4(a1, a2, 1, &v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

void sub_1D445A168(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;

  v16 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = sub_1D451B160();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v15 - v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 16))(a1, a2, a3);
  if (!v4)
  {
    v13 = v16;
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v12, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      sub_1D439DE58();
      sub_1D42B6D0C();
      *v14 = a1;
      swift_willThrow();
    }
    else
    {
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v13, v12, AssociatedTypeWitness);
    }
  }
  sub_1D42BE844();
}

uint64_t sub_1D445A294()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 *v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v0 = 46;
  v1 = MEMORY[0x1E0DEE9D8];
  v2 = (unsigned __int8 *)&byte_1E979DA28;
  do
  {
    v4 = *v2++;
    v3 = v4;
    v5 = sub_1D445F2A4(v4);
    if (v6)
    {
      v7 = v5;
      v8 = v6;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D44644E4();
        v1 = v11;
      }
      v9 = *(_QWORD *)(v1 + 16);
      if (v9 >= *(_QWORD *)(v1 + 24) >> 1)
      {
        sub_1D44644E4();
        v1 = v12;
      }
      *(_QWORD *)(v1 + 16) = v9 + 1;
      v10 = v1 + 24 * v9;
      *(_BYTE *)(v10 + 32) = v3;
      *(_QWORD *)(v10 + 40) = v7;
      *(_QWORD *)(v10 + 48) = v8;
    }
    --v0;
  }
  while (v0);
  swift_bridgeObjectRelease();
  return sub_1D445A01C(v1, (uint64_t *)&unk_1EFE404D0, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1D44605BC);
}

uint64_t sub_1D445A398@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjCClassFromMetadata;
  id v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  id v15;

  sub_1D42B28FC(qword_1EFE47450);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42D7108();
  v6 = sub_1D445F2A4(a1);
  v8 = v7;
  sub_1D42B28FC(&qword_1EFE40410);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1D4525300;
  type metadata accessor for SoundAnalysisBundleMarker();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  *(_QWORD *)(v9 + 32) = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1D451A950();
  sub_1D445F6CC();
  v11 = sub_1D445A574();
  if (v11)
  {
    v12 = v11;
    MEMORY[0x1D825C238]();
    if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1D451A98C();
    sub_1D451A9E0();
    sub_1D451A950();

  }
  v13 = sub_1D4519BC4();
  sub_1D44643F4(v13);
  if (v8)
  {
    swift_bridgeObjectRetain();
    v14 = swift_bridgeObjectRetain();
    v15 = sub_1D4459B50(v14, v6, v8, v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  sub_1D43214E0(v2, a2);
  return swift_bridgeObjectRelease();
}

id sub_1D445A574()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_1D451A6C8();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithPath_, v1);

  return v2;
}

uint64_t sub_1D445A5E8(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  char v7;

  if (a1 == 0xD000000000000018 && a2 == 0x80000001D4559C70 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D4559C90 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D4559CB0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D4559CD0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D4559CF0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D4559D10 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D4559D30 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D4559D50 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D4559D70 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D4559D90 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D4559DB0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D4559DD0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D4559DF0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D4559E10 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D4559E30 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001D4559E50 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001D4559E70 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D4559E90 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D4559EB0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D4559ED0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D4559EF0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D4559F10 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001D4559F30 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D4559F50 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001D4559F70 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001D4559F90 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001D4559FB0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D4559FD0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D4559FF0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D455A020 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001D455A050 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001D455A070 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x80000001D455A0A0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001D455A0D0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D455A0F0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 34;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D455A110 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 35;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001D455A130 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 36;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D455A150 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 37;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D455A170 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 38;
  }
  else
  {
    v5 = a1 == 0x6F536D6F74737563 && a2 == 0xEF54523545646E75;
    if (v5 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 39;
    }
    else if (a1 == 0xD000000000000021 && a2 == 0x80000001D455A190 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 40;
    }
    else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001D455A1C0 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 41;
    }
    else if (a1 == 0xD000000000000027 && a2 == 0x80000001D455A1E0 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 42;
    }
    else if (a1 == 0xD000000000000022 && a2 == 0x80000001D455A210 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 43;
    }
    else
    {
      v6 = a1 == 6582384 && a2 == 0xE300000000000000;
      if (v6 || (sub_1D451B820() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 44;
      }
      else if (a1 == 0xD000000000000019 && a2 == 0x80000001D455A240)
      {
        swift_bridgeObjectRelease();
        return 45;
      }
      else
      {
        v7 = sub_1D451B820();
        swift_bridgeObjectRelease();
        if ((v7 & 1) != 0)
          return 45;
        else
          return 46;
      }
    }
  }
}

uint64_t sub_1D445B568()
{
  return 46;
}

uint64_t sub_1D445B570(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1D445B5AC + 4 * byte_1D4541040[a1]))(0xD000000000000018, 0x80000001D4559C70);
}

void sub_1D445B88C(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _BYTE v153[8];
  uint64_t v154;
  _BYTE v155[8];
  uint64_t v156;
  _BYTE v157[8];
  uint64_t v158;
  _BYTE v159[8];
  uint64_t v160;
  _BYTE v161[8];
  uint64_t v162;
  _BYTE v163[8];
  _BYTE v164[8];
  uint64_t v165;
  _BYTE v166[8];
  uint64_t v167;
  _BYTE v168[8];
  uint64_t v169;
  _BYTE v170[8];
  uint64_t v171;
  _BYTE v172[8];
  uint64_t v173;
  _BYTE v174[8];
  _BYTE v175[8];
  _BYTE v176[8];
  _BYTE v177[8];
  uint64_t v178;
  _QWORD v179[5];
  _QWORD v180[2];
  _QWORD v181[2];
  _QWORD v182[3];
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  _BYTE v187[8];
  uint64_t v188;
  uint64_t v189;

  v185 = a2;
  v4 = sub_1D42B28FC(&qword_1EFE52BE8);
  v182[0] = *(_QWORD *)(v4 - 8);
  v182[1] = v4;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D4419098(v6, v147);
  v7 = sub_1D42B28FC(&qword_1EFE52BF0);
  v181[0] = *(_QWORD *)(v7 - 8);
  v181[1] = v7;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v8);
  sub_1D4464394(v9, v147);
  v10 = sub_1D42B28FC(&qword_1EFE52BF8);
  v180[0] = *(_QWORD *)(v10 - 8);
  v180[1] = v10;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v11);
  sub_1D4419450(v12, v147);
  v13 = sub_1D42B28FC(&qword_1EFE52C00);
  v179[3] = *(_QWORD *)(v13 - 8);
  v179[4] = v13;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v14);
  sub_1D44193FC(v15, v147);
  v16 = sub_1D42B28FC(&qword_1EFE52C08);
  v179[0] = *(_QWORD *)(v16 - 8);
  v179[1] = v16;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v17);
  sub_1D4464378(v18, v147);
  v178 = sub_1D42B28FC(&qword_1EFE52C10);
  sub_1D42BA18C(*(_QWORD *)(v178 - 8));
  MEMORY[0x1E0C80A78](v19);
  sub_1D42BA180((uint64_t)&v147 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = sub_1D42B28FC(&qword_1EFE52C18);
  sub_1D42BA240(v21, (uint64_t)&v189);
  sub_1D42BA18C(v22);
  MEMORY[0x1E0C80A78](v23);
  sub_1D42BA180((uint64_t)&v147 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = sub_1D42B28FC(&qword_1EFE52C20);
  sub_1D42BA240(v25, (uint64_t)&v188);
  sub_1D42BA18C(v26);
  MEMORY[0x1E0C80A78](v27);
  sub_1D42BA180((uint64_t)&v147 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = sub_1D42B28FC(&qword_1EFE52C28);
  sub_1D42BA240(v29, (uint64_t)v187);
  sub_1D42BA18C(v30);
  MEMORY[0x1E0C80A78](v31);
  sub_1D42BA180((uint64_t)&v147 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = sub_1D42B28FC(&qword_1EFE52C30);
  sub_1D42BA240(v33, (uint64_t)&v186);
  sub_1D42BA18C(v34);
  MEMORY[0x1E0C80A78](v35);
  sub_1D42BA180((uint64_t)&v147 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = sub_1D42B28FC(&qword_1EFE52C38);
  sub_1D42BA240(v37, (uint64_t)&v183);
  sub_1D42BA18C(v38);
  MEMORY[0x1E0C80A78](v39);
  sub_1D42BA180((uint64_t)&v147 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  v41 = sub_1D42B28FC(&qword_1EFE52C40);
  sub_1D42BA240(v41, (uint64_t)v182);
  sub_1D42BA18C(v42);
  MEMORY[0x1E0C80A78](v43);
  sub_1D42BA180((uint64_t)&v147 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  v45 = sub_1D42B28FC(&qword_1EFE52C48);
  sub_1D42BA240(v45, (uint64_t)v181);
  sub_1D42BA18C(v46);
  MEMORY[0x1E0C80A78](v47);
  sub_1D42BA180((uint64_t)&v147 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  v49 = sub_1D42B28FC(&qword_1EFE52C50);
  sub_1D42BA240(v49, (uint64_t)v180);
  sub_1D42BA18C(v50);
  MEMORY[0x1E0C80A78](v51);
  sub_1D42BA180((uint64_t)&v147 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0));
  v173 = sub_1D42B28FC(&qword_1EFE52C58);
  sub_1D42BA18C(*(_QWORD *)(v173 - 8));
  MEMORY[0x1E0C80A78](v53);
  sub_1D42BE768();
  sub_1D42BA180(v54);
  v55 = sub_1D42B28FC(&qword_1EFE52C60);
  sub_1D42BA240(v55, (uint64_t)v179);
  sub_1D42BA18C(v56);
  MEMORY[0x1E0C80A78](v57);
  sub_1D42BE768();
  sub_1D42BA180(v58);
  v171 = sub_1D42B28FC(&qword_1EFE52C68);
  sub_1D42BA18C(*(_QWORD *)(v171 - 8));
  MEMORY[0x1E0C80A78](v59);
  sub_1D42BE768();
  sub_1D42BA180(v60);
  v61 = sub_1D42B28FC(&qword_1EFE52C70);
  sub_1D42BA240(v61, (uint64_t)v177);
  sub_1D42BA18C(v62);
  MEMORY[0x1E0C80A78](v63);
  sub_1D42BE768();
  sub_1D42BA180(v64);
  v169 = sub_1D42B28FC(&qword_1EFE52C78);
  sub_1D42BA18C(*(_QWORD *)(v169 - 8));
  MEMORY[0x1E0C80A78](v65);
  sub_1D42BE768();
  sub_1D42BA180(v66);
  v67 = sub_1D42B28FC(&qword_1EFE52C80);
  sub_1D42BA240(v67, (uint64_t)v176);
  sub_1D42BA18C(v68);
  MEMORY[0x1E0C80A78](v69);
  sub_1D42BE768();
  sub_1D42BA180(v70);
  v167 = sub_1D42B28FC(&qword_1EFE52C88);
  sub_1D42BA18C(*(_QWORD *)(v167 - 8));
  MEMORY[0x1E0C80A78](v71);
  sub_1D42BE768();
  sub_1D42BA180(v72);
  v73 = sub_1D42B28FC(&qword_1EFE52C90);
  sub_1D42BA240(v73, (uint64_t)v175);
  sub_1D42BA18C(v74);
  MEMORY[0x1E0C80A78](v75);
  sub_1D42BE768();
  sub_1D42BA180(v76);
  v165 = sub_1D42B28FC(&qword_1EFE52C98);
  sub_1D42BA18C(*(_QWORD *)(v165 - 8));
  MEMORY[0x1E0C80A78](v77);
  sub_1D42BE768();
  sub_1D42BA180(v78);
  v79 = sub_1D42B28FC(&qword_1EFE52CA0);
  sub_1D42BA240(v79, (uint64_t)v174);
  sub_1D42BA18C(v80);
  MEMORY[0x1E0C80A78](v81);
  sub_1D42BE768();
  sub_1D42BA180(v82);
  v162 = sub_1D42B28FC(&qword_1EFE52CA8);
  sub_1D42BA18C(*(_QWORD *)(v162 - 8));
  MEMORY[0x1E0C80A78](v83);
  sub_1D42BE768();
  sub_1D42BA180(v84);
  v85 = sub_1D42B28FC(&qword_1EFE52CB0);
  sub_1D42BA240(v85, (uint64_t)v172);
  sub_1D42BA18C(v86);
  MEMORY[0x1E0C80A78](v87);
  sub_1D42BE768();
  sub_1D42BA180(v88);
  v160 = sub_1D42B28FC(&qword_1EFE52CB8);
  sub_1D42BA18C(*(_QWORD *)(v160 - 8));
  MEMORY[0x1E0C80A78](v89);
  sub_1D42BE768();
  sub_1D42BA180(v90);
  v91 = sub_1D42B28FC(&qword_1EFE52CC0);
  sub_1D42BA240(v91, (uint64_t)v170);
  sub_1D42BA18C(v92);
  MEMORY[0x1E0C80A78](v93);
  sub_1D42BE768();
  sub_1D42BA180(v94);
  v158 = sub_1D42B28FC(&qword_1EFE52CC8);
  sub_1D42BA18C(*(_QWORD *)(v158 - 8));
  MEMORY[0x1E0C80A78](v95);
  sub_1D42BE768();
  sub_1D42BA180(v96);
  v97 = sub_1D42B28FC(&qword_1EFE52CD0);
  sub_1D42BA240(v97, (uint64_t)v168);
  sub_1D42BA18C(v98);
  MEMORY[0x1E0C80A78](v99);
  sub_1D42BE768();
  sub_1D42BA180(v100);
  v156 = sub_1D42B28FC(&qword_1EFE52CD8);
  sub_1D42BA18C(*(_QWORD *)(v156 - 8));
  MEMORY[0x1E0C80A78](v101);
  sub_1D42BE768();
  sub_1D42BA180(v102);
  v103 = sub_1D42B28FC(&qword_1EFE52CE0);
  sub_1D42BA240(v103, (uint64_t)v166);
  sub_1D42BA18C(v104);
  MEMORY[0x1E0C80A78](v105);
  sub_1D42BE768();
  sub_1D42BA180(v106);
  v154 = sub_1D42B28FC(&qword_1EFE52CE8);
  sub_1D42BA18C(*(_QWORD *)(v154 - 8));
  MEMORY[0x1E0C80A78](v107);
  sub_1D42BE768();
  sub_1D42BA180(v108);
  v109 = sub_1D42B28FC(&qword_1EFE52CF0);
  sub_1D42BA240(v109, (uint64_t)v164);
  sub_1D42BA18C(v110);
  MEMORY[0x1E0C80A78](v111);
  sub_1D42BE768();
  sub_1D42BA180(v112);
  v113 = sub_1D42B28FC(&qword_1EFE52CF8);
  sub_1D42BA240(v113, (uint64_t)v163);
  sub_1D42BA18C(v114);
  MEMORY[0x1E0C80A78](v115);
  sub_1D42BE768();
  sub_1D42BA180(v116);
  v117 = sub_1D42B28FC(&qword_1EFE52D00);
  sub_1D42BA240(v117, (uint64_t)v161);
  sub_1D42BA18C(v118);
  MEMORY[0x1E0C80A78](v119);
  sub_1D42BE768();
  sub_1D42BA180(v120);
  v152 = sub_1D42B28FC(&qword_1EFE52D08);
  sub_1D42BA18C(*(_QWORD *)(v152 - 8));
  MEMORY[0x1E0C80A78](v121);
  sub_1D42BE768();
  sub_1D42BA180(v122);
  v123 = sub_1D42B28FC(&qword_1EFE52D10);
  sub_1D42BA240(v123, (uint64_t)v159);
  sub_1D42BA18C(v124);
  MEMORY[0x1E0C80A78](v125);
  sub_1D42BE768();
  sub_1D42BA180(v126);
  v151 = sub_1D42B28FC(&qword_1EFE52D18);
  sub_1D42BA18C(*(_QWORD *)(v151 - 8));
  MEMORY[0x1E0C80A78](v127);
  sub_1D42BE768();
  sub_1D42BA180(v128);
  v129 = sub_1D42B28FC(&qword_1EFE52D20);
  sub_1D42BA240(v129, (uint64_t)v157);
  sub_1D42BA18C(v130);
  MEMORY[0x1E0C80A78](v131);
  sub_1D42BE768();
  sub_1D42BA180(v132);
  v150 = sub_1D42B28FC(&qword_1EFE52D28);
  sub_1D42BA18C(*(_QWORD *)(v150 - 8));
  MEMORY[0x1E0C80A78](v133);
  sub_1D42BE768();
  sub_1D42BA180(v134);
  v135 = sub_1D42B28FC(&qword_1EFE52D30);
  sub_1D42BA240(v135, (uint64_t)v155);
  sub_1D42BA18C(v136);
  MEMORY[0x1E0C80A78](v137);
  sub_1D42BE768();
  sub_1D42BA180(v138);
  v149 = sub_1D42B28FC(&qword_1EFE52D38);
  sub_1D42BA18C(*(_QWORD *)(v149 - 8));
  MEMORY[0x1E0C80A78](v139);
  sub_1D42BE768();
  sub_1D42BA180(v140);
  v141 = sub_1D42B28FC(&qword_1EFE52D40);
  sub_1D42BA240(v141, (uint64_t)v153);
  sub_1D42BA18C(v142);
  MEMORY[0x1E0C80A78](v143);
  sub_1D42BE768();
  sub_1D42BA180(v144);
  v148 = sub_1D42B28FC(&qword_1EFE52D48);
  MEMORY[0x1E0C80A78](v148);
  sub_1D42F1ED4();
  v145 = sub_1D42B28FC(&qword_1EFE52D50);
  MEMORY[0x1E0C80A78](v145);
  v184 = sub_1D42B28FC(&qword_1EFE52D58);
  v182[2] = *(_QWORD *)(v184 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v146);
  sub_1D42D7108();
  sub_1D42B5528(a1, a1[3]);
  sub_1D4461C0C();
  v183 = v2;
  sub_1D451BA24();
  __asm { BR              X10 }
}

void sub_1D445C300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 65) = 0;
  sub_1D44626D4();
  v4 = *(_QWORD *)(v3 - 120);
  v5 = *(_QWORD *)(v3 - 112);
  sub_1D451B6F4();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 128) + 8))(v4, v5);
  sub_1D42BE844();
}

void sub_1D445CA38()
{
  sub_1D4464520();
  sub_1D446433C();
  sub_1D4418EF0();
  JUMPOUT(0x1D445CA10);
}

void sub_1D445CA64()
{
  sub_1D4464508();
  sub_1D4464354();
  JUMPOUT(0x1D445CA10);
}

void sub_1D445CB20()
{
  sub_1D4429E5C();
  sub_1D4375D98();
  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t sub_1D445CB44(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  unint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  _QWORD *v170;
  uint64_t v171;
  uint64_t v173[5];
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  _BYTE v179[8];
  uint64_t v180;
  _BYTE v181[8];
  uint64_t v182;
  _BYTE v183[8];
  uint64_t v184;
  _BYTE v185[8];
  uint64_t v186;
  _BYTE v187[8];
  uint64_t v188;
  _BYTE v189[8];
  _BYTE v190[8];
  _BYTE v191[8];
  uint64_t v192;
  _BYTE v193[8];
  uint64_t v194;
  _BYTE v195[8];
  uint64_t v196;
  _BYTE v197[8];
  uint64_t v198;
  _BYTE v199[8];
  uint64_t v200;
  _BYTE v201[8];
  _BYTE v202[8];
  _BYTE v203[8];
  _BYTE v204[8];
  _BYTE v205[8];
  _BYTE v206[8];
  _BYTE v207[8];
  _BYTE v208[8];
  uint64_t v209;
  _QWORD v210[2];
  _QWORD v211[16];
  _QWORD *v212;
  uint64_t v213;

  v200 = sub_1D42B28FC(&qword_1EFE528F8);
  sub_1D42BA18C(*(_QWORD *)(v200 - 8));
  MEMORY[0x1E0C80A78](v4);
  sub_1D42BE768();
  v211[12] = v5;
  v6 = sub_1D42B28FC(&qword_1EFE52900);
  sub_1D42BA240(v6, (uint64_t)v211);
  sub_1D42BA18C(v7);
  MEMORY[0x1E0C80A78](v8);
  sub_1D42BE768();
  v211[11] = v9;
  v10 = sub_1D42B28FC(&qword_1EFE52908);
  sub_1D42BA240(v10, (uint64_t)v210);
  sub_1D42BA18C(v11);
  MEMORY[0x1E0C80A78](v12);
  sub_1D4419098(v13, v173[0]);
  v198 = sub_1D42B28FC(&qword_1EFE52910);
  sub_1D42BA18C(*(_QWORD *)(v198 - 8));
  MEMORY[0x1E0C80A78](v14);
  sub_1D42BE768();
  v211[9] = v15;
  v16 = sub_1D42B28FC(&qword_1EFE52918);
  sub_1D42BA240(v16, (uint64_t)v208);
  sub_1D42BA18C(v17);
  MEMORY[0x1E0C80A78](v18);
  sub_1D42BE768();
  v211[8] = v19;
  v20 = sub_1D42B28FC(&qword_1EFE52920);
  sub_1D42BA240(v20, (uint64_t)v207);
  sub_1D42BA18C(v21);
  MEMORY[0x1E0C80A78](v22);
  sub_1D4464394(v23, v173[0]);
  v196 = sub_1D42B28FC(&qword_1EFE52928);
  sub_1D42BA18C(*(_QWORD *)(v196 - 8));
  MEMORY[0x1E0C80A78](v24);
  sub_1D42BE768();
  v211[6] = v25;
  v26 = sub_1D42B28FC(&qword_1EFE52930);
  sub_1D42BA240(v26, (uint64_t)v206);
  sub_1D42BA18C(v27);
  MEMORY[0x1E0C80A78](v28);
  sub_1D42BE768();
  v211[5] = v29;
  v30 = sub_1D42B28FC(&qword_1EFE52938);
  sub_1D42BA240(v30, (uint64_t)v205);
  sub_1D42BA18C(v31);
  MEMORY[0x1E0C80A78](v32);
  sub_1D4419450(v33, v173[0]);
  v194 = sub_1D42B28FC(&qword_1EFE52940);
  sub_1D42BA18C(*(_QWORD *)(v194 - 8));
  MEMORY[0x1E0C80A78](v34);
  sub_1D42BE768();
  v211[3] = v35;
  v36 = sub_1D42B28FC(&qword_1EFE52948);
  sub_1D42BA240(v36, (uint64_t)v204);
  sub_1D42BA18C(v37);
  MEMORY[0x1E0C80A78](v38);
  sub_1D42BE768();
  v211[2] = v39;
  v40 = sub_1D42B28FC(&qword_1EFE52950);
  sub_1D42BA240(v40, (uint64_t)v203);
  sub_1D42BA18C(v41);
  MEMORY[0x1E0C80A78](v42);
  sub_1D44193FC(v43, v173[0]);
  v192 = sub_1D42B28FC(&qword_1EFE52958);
  sub_1D42BA18C(*(_QWORD *)(v192 - 8));
  MEMORY[0x1E0C80A78](v44);
  sub_1D42BE768();
  v211[0] = v45;
  v46 = sub_1D42B28FC(&qword_1EFE52960);
  sub_1D42BA240(v46, (uint64_t)v202);
  sub_1D42BA18C(v47);
  MEMORY[0x1E0C80A78](v48);
  sub_1D42BE768();
  v210[1] = v49;
  v50 = sub_1D42B28FC(&qword_1EFE52968);
  sub_1D42BA240(v50, (uint64_t)v201);
  sub_1D42BA18C(v51);
  MEMORY[0x1E0C80A78](v52);
  sub_1D4464378(v53, v173[0]);
  v188 = sub_1D42B28FC(&qword_1EFE52970);
  sub_1D42BA18C(*(_QWORD *)(v188 - 8));
  MEMORY[0x1E0C80A78](v54);
  sub_1D42BE768();
  v209 = v55;
  v56 = sub_1D42B28FC(&qword_1EFE52978);
  sub_1D42BA240(v56, (uint64_t)&v200);
  sub_1D42BA18C(v57);
  MEMORY[0x1E0C80A78](v58);
  sub_1D42BE768();
  sub_1D42BA180(v59);
  v60 = sub_1D42B28FC(&qword_1EFE52980);
  sub_1D42BA240(v60, (uint64_t)v199);
  sub_1D42BA18C(v61);
  MEMORY[0x1E0C80A78](v62);
  sub_1D42BA180((uint64_t)v173 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0));
  v186 = sub_1D42B28FC(&qword_1EFE52988);
  sub_1D42BA18C(*(_QWORD *)(v186 - 8));
  MEMORY[0x1E0C80A78](v64);
  sub_1D42BE768();
  sub_1D42BA180(v65);
  v66 = sub_1D42B28FC(&qword_1EFE52990);
  sub_1D42BA240(v66, (uint64_t)&v198);
  sub_1D42BA18C(v67);
  MEMORY[0x1E0C80A78](v68);
  sub_1D42BE768();
  sub_1D42BA180(v69);
  v70 = sub_1D42B28FC(&qword_1EFE52998);
  sub_1D42BA240(v70, (uint64_t)v197);
  sub_1D42BA18C(v71);
  MEMORY[0x1E0C80A78](v72);
  sub_1D42BA180((uint64_t)v173 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0));
  v184 = sub_1D42B28FC(&qword_1EFE529A0);
  sub_1D42BA18C(*(_QWORD *)(v184 - 8));
  MEMORY[0x1E0C80A78](v74);
  sub_1D42BE768();
  sub_1D42BA180(v75);
  v76 = sub_1D42B28FC(&qword_1EFE529A8);
  sub_1D42BA240(v76, (uint64_t)&v196);
  sub_1D42BA18C(v77);
  MEMORY[0x1E0C80A78](v78);
  sub_1D42BE768();
  sub_1D42BA180(v79);
  v80 = sub_1D42B28FC(&qword_1EFE529B0);
  sub_1D42BA240(v80, (uint64_t)v195);
  sub_1D42BA18C(v81);
  MEMORY[0x1E0C80A78](v82);
  sub_1D42BA180((uint64_t)v173 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0));
  v182 = sub_1D42B28FC(&qword_1EFE529B8);
  sub_1D42BA18C(*(_QWORD *)(v182 - 8));
  MEMORY[0x1E0C80A78](v84);
  sub_1D42BE768();
  sub_1D42BA180(v85);
  v86 = sub_1D42B28FC(&qword_1EFE529C0);
  sub_1D42BA240(v86, (uint64_t)&v194);
  sub_1D42BA18C(v87);
  MEMORY[0x1E0C80A78](v88);
  sub_1D42BE768();
  sub_1D42BA180(v89);
  v90 = sub_1D42B28FC(&qword_1EFE529C8);
  sub_1D42BA240(v90, (uint64_t)v193);
  sub_1D42BA18C(v91);
  MEMORY[0x1E0C80A78](v92);
  sub_1D42BA180((uint64_t)v173 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0));
  v180 = sub_1D42B28FC(&qword_1EFE529D0);
  sub_1D42BA18C(*(_QWORD *)(v180 - 8));
  MEMORY[0x1E0C80A78](v94);
  sub_1D42BE768();
  sub_1D42BA180(v95);
  v96 = sub_1D42B28FC(&qword_1EFE529D8);
  sub_1D42BA240(v96, (uint64_t)&v192);
  sub_1D42BA18C(v97);
  MEMORY[0x1E0C80A78](v98);
  sub_1D42BE768();
  sub_1D42BA180(v99);
  v100 = sub_1D42B28FC(&qword_1EFE529E0);
  sub_1D42BA240(v100, (uint64_t)v191);
  sub_1D42BA18C(v101);
  MEMORY[0x1E0C80A78](v102);
  sub_1D42BE768();
  v211[15] = v103;
  v104 = sub_1D42B28FC(&qword_1EFE529E8);
  sub_1D42BA240(v104, (uint64_t)v190);
  sub_1D42BA18C(v105);
  MEMORY[0x1E0C80A78](v106);
  sub_1D42BE768();
  sub_1D42BA180(v107);
  v108 = sub_1D42B28FC(&qword_1EFE529F0);
  sub_1D42BA240(v108, (uint64_t)v189);
  sub_1D42BA18C(v109);
  MEMORY[0x1E0C80A78](v110);
  sub_1D42BE768();
  v211[14] = v111;
  v112 = sub_1D42B28FC(&qword_1EFE529F8);
  sub_1D42BA240(v112, (uint64_t)v187);
  sub_1D42BA18C(v113);
  MEMORY[0x1E0C80A78](v114);
  sub_1D42BA180((uint64_t)v173 - ((v115 + 15) & 0xFFFFFFFFFFFFFFF0));
  v178 = sub_1D42B28FC(&qword_1EFE52A00);
  sub_1D42BA18C(*(_QWORD *)(v178 - 8));
  MEMORY[0x1E0C80A78](v116);
  sub_1D42BE768();
  v211[13] = v117;
  v118 = sub_1D42B28FC(&qword_1EFE52A08);
  sub_1D42BA240(v118, (uint64_t)&v186);
  sub_1D42BA18C(v119);
  MEMORY[0x1E0C80A78](v120);
  sub_1D42BE768();
  sub_1D42BA180(v121);
  v122 = sub_1D42B28FC(&qword_1EFE52A10);
  sub_1D42BA240(v122, (uint64_t)v185);
  sub_1D42BA18C(v123);
  MEMORY[0x1E0C80A78](v124);
  sub_1D42BA180((uint64_t)v173 - ((v125 + 15) & 0xFFFFFFFFFFFFFFF0));
  v177 = sub_1D42B28FC(&qword_1EFE52A18);
  sub_1D42BA18C(*(_QWORD *)(v177 - 8));
  MEMORY[0x1E0C80A78](v126);
  sub_1D42BE768();
  sub_1D42BA180(v127);
  v128 = sub_1D42B28FC(&qword_1EFE52A20);
  sub_1D42BA240(v128, (uint64_t)&v184);
  sub_1D42BA18C(v129);
  MEMORY[0x1E0C80A78](v130);
  sub_1D42BE768();
  sub_1D42BA180(v131);
  v132 = sub_1D42B28FC(&qword_1EFE52A28);
  sub_1D42BA240(v132, (uint64_t)v183);
  sub_1D42BA18C(v133);
  MEMORY[0x1E0C80A78](v134);
  sub_1D42BA180((uint64_t)v173 - ((v135 + 15) & 0xFFFFFFFFFFFFFFF0));
  v176 = sub_1D42B28FC(&qword_1EFE52A30);
  sub_1D42BA18C(*(_QWORD *)(v176 - 8));
  MEMORY[0x1E0C80A78](v136);
  sub_1D42BE768();
  sub_1D42BA180(v137);
  v138 = sub_1D42B28FC(&qword_1EFE52A38);
  sub_1D42BA240(v138, (uint64_t)&v182);
  sub_1D42BA18C(v139);
  MEMORY[0x1E0C80A78](v140);
  sub_1D42BE768();
  sub_1D42BA180(v141);
  v142 = sub_1D42B28FC(&qword_1EFE52A40);
  sub_1D42BA240(v142, (uint64_t)v181);
  sub_1D42BA18C(v143);
  MEMORY[0x1E0C80A78](v144);
  sub_1D42BA180((uint64_t)v173 - ((v145 + 15) & 0xFFFFFFFFFFFFFFF0));
  v175 = sub_1D42B28FC(&qword_1EFE52A48);
  sub_1D42BA18C(*(_QWORD *)(v175 - 8));
  MEMORY[0x1E0C80A78](v146);
  sub_1D42BE768();
  sub_1D42BA180(v147);
  v148 = sub_1D42B28FC(&qword_1EFE52A50);
  sub_1D42BA240(v148, (uint64_t)&v180);
  sub_1D42BA18C(v149);
  MEMORY[0x1E0C80A78](v150);
  sub_1D42BE768();
  sub_1D42BA180(v151);
  v152 = sub_1D42B28FC(&qword_1EFE52A58);
  sub_1D42BA240(v152, (uint64_t)v179);
  sub_1D42BA18C(v153);
  MEMORY[0x1E0C80A78](v154);
  sub_1D42BA180((uint64_t)v173 - ((v155 + 15) & 0xFFFFFFFFFFFFFFF0));
  v156 = sub_1D42B28FC(&qword_1EFE52A60);
  v157 = *(_QWORD *)(v156 - 8);
  MEMORY[0x1E0C80A78](v156);
  sub_1D42D7108();
  v158 = sub_1D42B28FC(&qword_1EFE52A68);
  v159 = *(_QWORD *)(v158 - 8);
  MEMORY[0x1E0C80A78](v158);
  sub_1D42F1ED4();
  v160 = a1[3];
  v212 = a1;
  sub_1D42B5528(a1, v160);
  sub_1D4461C0C();
  v161 = v213;
  sub_1D451BA0C();
  if (!v161)
  {
    v173[4] = v1;
    v173[2] = v157;
    v173[3] = v156;
    v213 = v159;
    v174 = v2;
    v162 = sub_1D451B6D0();
    v163 = *(_QWORD *)(v162 + 16);
    if (v163)
    {
      v173[1] = 0;
      v159 = *(unsigned __int8 *)(v162 + 32);
      sub_1D43B7948(1, v163, v162, v162 + 32, 0, (2 * v163) | 1);
      v165 = v164;
      v167 = v166;
      swift_bridgeObjectRelease();
      if (v165 == v167 >> 1)
        __asm { BR              X9 }
    }
    v168 = sub_1D451B460();
    sub_1D42B6D0C();
    v170 = v169;
    sub_1D42B28FC(&qword_1EFE49ED0);
    *v170 = &unk_1E979DA68;
    v171 = v174;
    sub_1D451B61C();
    sub_1D451B454();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v168 - 8) + 104))(v170, *MEMORY[0x1E0DEC450], v168);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v213 + 8))(v171, v158);
  }
  sub_1D42B5400((uint64_t)v212);
  return v159;
}

uint64_t sub_1D445E260()
{
  sub_1D451B964();
  return sub_1D451B964();
}

void sub_1D445E290()
{
  sub_1D4429E5C();
  sub_1D451B964();
  sub_1D4375D98();
  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t sub_1D445E2C0@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  return sub_1D445A398(a1, a2);
}

uint64_t sub_1D445E2D4()
{
  sub_1D4462620();
  return sub_1D451BA3C();
}

uint64_t sub_1D445E2FC()
{
  sub_1D4462620();
  return sub_1D451BA48();
}

uint64_t sub_1D445E324()
{
  sub_1D4461DEC();
  return sub_1D451BA3C();
}

uint64_t sub_1D445E34C()
{
  sub_1D4461DEC();
  return sub_1D451BA48();
}

uint64_t sub_1D445E374()
{
  sub_1D44625A8();
  return sub_1D451BA3C();
}

uint64_t sub_1D445E39C()
{
  sub_1D44625A8();
  return sub_1D451BA48();
}

uint64_t sub_1D445E3C4()
{
  sub_1D446256C();
  return sub_1D451BA3C();
}

uint64_t sub_1D445E3EC()
{
  sub_1D446256C();
  return sub_1D451BA48();
}

uint64_t sub_1D445E414()
{
  sub_1D4462530();
  return sub_1D451BA3C();
}

uint64_t sub_1D445E43C()
{
  sub_1D4462530();
  return sub_1D451BA48();
}

uint64_t sub_1D445E464()
{
  sub_1D44624F4();
  return sub_1D451BA3C();
}

uint64_t sub_1D445E48C()
{
  sub_1D44624F4();
  return sub_1D451BA48();
}

void sub_1D445E4B4()
{
  sub_1D445CB20();
}

uint64_t sub_1D445E4CC()
{
  unsigned __int8 *v0;

  return sub_1D445B570(*v0);
}

uint64_t sub_1D445E4D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D445A5E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D445E4F8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D445B568();
  *a1 = result;
  return result;
}

uint64_t sub_1D445E51C()
{
  sub_1D4461C0C();
  return sub_1D451BA3C();
}

uint64_t sub_1D445E544()
{
  sub_1D4461C0C();
  return sub_1D451BA48();
}

uint64_t sub_1D445E56C()
{
  sub_1D44624B8();
  return sub_1D451BA3C();
}

uint64_t sub_1D445E594()
{
  sub_1D44624B8();
  return sub_1D451BA48();
}

uint64_t sub_1D445E5BC()
{
  sub_1D4461DB0();
  return sub_1D451BA3C();
}

uint64_t sub_1D445E5E4()
{
  sub_1D4461DB0();
  return sub_1D451BA48();
}

uint64_t sub_1D445E60C()
{
  sub_1D446247C();
  return sub_1D451BA3C();
}

uint64_t sub_1D445E634()
{
  sub_1D446247C();
  return sub_1D451BA48();
}

uint64_t sub_1D445E65C()
{
  sub_1D44625E4();
  return sub_1D451BA3C();
}

uint64_t sub_1D445E684()
{
  sub_1D44625E4();
  return sub_1D451BA48();
}

uint64_t sub_1D445E6AC()
{
  sub_1D4462440();
  return sub_1D451BA3C();
}

uint64_t sub_1D445E6D4()
{
  sub_1D4462440();
  return sub_1D451BA48();
}

uint64_t sub_1D445E6FC()
{
  sub_1D4462404();
  return sub_1D451BA3C();
}

uint64_t sub_1D445E724()
{
  sub_1D4462404();
  return sub_1D451BA48();
}

uint64_t sub_1D445E74C()
{
  sub_1D44623C8();
  return sub_1D451BA3C();
}

uint64_t sub_1D445E774()
{
  sub_1D44623C8();
  return sub_1D451BA48();
}

uint64_t sub_1D445E79C()
{
  sub_1D446238C();
  return sub_1D451BA3C();
}

uint64_t sub_1D445E7C4()
{
  sub_1D446238C();
  return sub_1D451BA48();
}

uint64_t sub_1D445E7EC()
{
  sub_1D4462350();
  return sub_1D451BA3C();
}

uint64_t sub_1D445E814()
{
  sub_1D4462350();
  return sub_1D451BA48();
}

uint64_t sub_1D445E83C()
{
  sub_1D4461E28();
  return sub_1D451BA3C();
}

uint64_t sub_1D445E864()
{
  sub_1D4461E28();
  return sub_1D451BA48();
}

uint64_t sub_1D445E88C()
{
  sub_1D4462314();
  return sub_1D451BA3C();
}

uint64_t sub_1D445E8B4()
{
  sub_1D4462314();
  return sub_1D451BA48();
}

uint64_t sub_1D445E8DC()
{
  sub_1D4461D38();
  return sub_1D451BA3C();
}

uint64_t sub_1D445E904()
{
  sub_1D4461D38();
  return sub_1D451BA48();
}

uint64_t sub_1D445E92C()
{
  sub_1D4461D74();
  return sub_1D451BA3C();
}

uint64_t sub_1D445E954()
{
  sub_1D4461D74();
  return sub_1D451BA48();
}

uint64_t sub_1D445E97C()
{
  sub_1D4461C48();
  return sub_1D451BA3C();
}

uint64_t sub_1D445E9A4()
{
  sub_1D4461C48();
  return sub_1D451BA48();
}

uint64_t sub_1D445E9CC()
{
  sub_1D4461C84();
  return sub_1D451BA3C();
}

uint64_t sub_1D445E9F4()
{
  sub_1D4461C84();
  return sub_1D451BA48();
}

uint64_t sub_1D445EA1C()
{
  sub_1D44622D8();
  return sub_1D451BA3C();
}

uint64_t sub_1D445EA44()
{
  sub_1D44622D8();
  return sub_1D451BA48();
}

uint64_t sub_1D445EA6C()
{
  sub_1D446229C();
  return sub_1D451BA3C();
}

uint64_t sub_1D445EA94()
{
  sub_1D446229C();
  return sub_1D451BA48();
}

uint64_t sub_1D445EABC()
{
  sub_1D446265C();
  return sub_1D451BA3C();
}

uint64_t sub_1D445EAE4()
{
  sub_1D446265C();
  return sub_1D451BA48();
}

uint64_t sub_1D445EB0C()
{
  sub_1D4462224();
  return sub_1D451BA3C();
}

uint64_t sub_1D445EB34()
{
  sub_1D4462224();
  return sub_1D451BA48();
}

uint64_t sub_1D445EB5C()
{
  sub_1D4461E64();
  return sub_1D451BA3C();
}

uint64_t sub_1D445EB84()
{
  sub_1D4461E64();
  return sub_1D451BA48();
}

uint64_t sub_1D445EBAC()
{
  sub_1D4461F18();
  return sub_1D451BA3C();
}

uint64_t sub_1D445EBD4()
{
  sub_1D4461F18();
  return sub_1D451BA48();
}

uint64_t sub_1D445EBFC()
{
  sub_1D4461F54();
  return sub_1D451BA3C();
}

uint64_t sub_1D445EC24()
{
  sub_1D4461F54();
  return sub_1D451BA48();
}

uint64_t sub_1D445EC4C()
{
  sub_1D4461EDC();
  return sub_1D451BA3C();
}

uint64_t sub_1D445EC74()
{
  sub_1D4461EDC();
  return sub_1D451BA48();
}

uint64_t sub_1D445EC9C()
{
  sub_1D4462698();
  return sub_1D451BA3C();
}

uint64_t sub_1D445ECC4()
{
  sub_1D4462698();
  return sub_1D451BA48();
}

uint64_t sub_1D445ECEC()
{
  sub_1D4462044();
  return sub_1D451BA3C();
}

uint64_t sub_1D445ED14()
{
  sub_1D4462044();
  return sub_1D451BA48();
}

uint64_t sub_1D445ED3C()
{
  sub_1D4462008();
  return sub_1D451BA3C();
}

uint64_t sub_1D445ED64()
{
  sub_1D4462008();
  return sub_1D451BA48();
}

uint64_t sub_1D445ED8C()
{
  sub_1D4461F90();
  return sub_1D451BA3C();
}

uint64_t sub_1D445EDB4()
{
  sub_1D4461F90();
  return sub_1D451BA48();
}

uint64_t sub_1D445EDDC()
{
  sub_1D4461FCC();
  return sub_1D451BA3C();
}

uint64_t sub_1D445EE04()
{
  sub_1D4461FCC();
  return sub_1D451BA48();
}

uint64_t sub_1D445EE2C()
{
  sub_1D4461EA0();
  return sub_1D451BA3C();
}

uint64_t sub_1D445EE54()
{
  sub_1D4461EA0();
  return sub_1D451BA48();
}

uint64_t sub_1D445EE7C()
{
  sub_1D44626D4();
  return sub_1D451BA3C();
}

uint64_t sub_1D445EEA4()
{
  sub_1D44626D4();
  return sub_1D451BA48();
}

uint64_t sub_1D445EECC()
{
  sub_1D4461CC0();
  return sub_1D451BA3C();
}

uint64_t sub_1D445EEF4()
{
  sub_1D4461CC0();
  return sub_1D451BA48();
}

uint64_t sub_1D445EF1C()
{
  sub_1D4461CFC();
  return sub_1D451BA3C();
}

uint64_t sub_1D445EF44()
{
  sub_1D4461CFC();
  return sub_1D451BA48();
}

uint64_t sub_1D445EF6C()
{
  sub_1D44621AC();
  return sub_1D451BA3C();
}

uint64_t sub_1D445EF94()
{
  sub_1D44621AC();
  return sub_1D451BA48();
}

uint64_t sub_1D445EFBC()
{
  sub_1D4462170();
  return sub_1D451BA3C();
}

uint64_t sub_1D445EFE4()
{
  sub_1D4462170();
  return sub_1D451BA48();
}

uint64_t sub_1D445F00C()
{
  sub_1D4462134();
  return sub_1D451BA3C();
}

uint64_t sub_1D445F034()
{
  sub_1D4462134();
  return sub_1D451BA48();
}

uint64_t sub_1D445F05C()
{
  sub_1D44621E8();
  return sub_1D451BA3C();
}

uint64_t sub_1D445F084()
{
  sub_1D44621E8();
  return sub_1D451BA48();
}

uint64_t sub_1D445F0AC()
{
  sub_1D44620F8();
  return sub_1D451BA3C();
}

uint64_t sub_1D445F0D4()
{
  sub_1D44620F8();
  return sub_1D451BA48();
}

uint64_t sub_1D445F0FC()
{
  sub_1D44620BC();
  return sub_1D451BA3C();
}

uint64_t sub_1D445F124()
{
  sub_1D44620BC();
  return sub_1D451BA48();
}

uint64_t sub_1D445F14C()
{
  sub_1D4462080();
  return sub_1D451BA3C();
}

uint64_t sub_1D445F174()
{
  sub_1D4462080();
  return sub_1D451BA48();
}

uint64_t sub_1D445F19C()
{
  sub_1D4462260();
  return sub_1D451BA3C();
}

uint64_t sub_1D445F1C4()
{
  sub_1D4462260();
  return sub_1D451BA48();
}

BOOL sub_1D445F1EC(char *a1, char *a2)
{
  return sub_1D445A5E4(*a1, *a2);
}

void sub_1D445F1F8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E979DA08;
}

uint64_t sub_1D445F208@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1D445CB44(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_1D445F230(_QWORD *a1)
{
  unsigned __int8 *v1;

  sub_1D445B88C(a1, *v1);
}

void sub_1D445F248()
{
  sub_1D445E290();
}

uint64_t sub_1D445F250()
{
  return sub_1D445E260();
}

uint64_t sub_1D445F258()
{
  sub_1D451B958();
  sub_1D451B964();
  sub_1D451B964();
  return sub_1D451B994();
}

uint64_t sub_1D445F2A4(unsigned __int8 a1)
{
  return ((uint64_t (*)(_QWORD, _QWORD))((char *)sub_1D445F2CC + 4 * byte_1D4541126[a1]))(0, 0);
}

unint64_t sub_1D445F2CC()
{
  return 0xD000000000000024;
}

unint64_t sub_1D445F5E8()
{
  return 0xD000000000000027;
}

unint64_t sub_1D445F600()
{
  return 0xD00000000000001DLL;
}

unint64_t sub_1D445F618()
{
  return 0xD00000000000001CLL;
}

unint64_t sub_1D445F630()
{
  return 0xD000000000000036;
}

unint64_t sub_1D445F64C()
{
  return 0xD000000000000026;
}

unint64_t sub_1D445F664()
{
  return 0xD000000000000026;
}

unint64_t sub_1D445F67C()
{
  return 0xD00000000000002CLL;
}

unint64_t sub_1D445F694()
{
  return 0xD00000000000002CLL;
}

void sub_1D445F6AC()
{
  JUMPOUT(0x1D445F6C0);
}

unint64_t sub_1D445F6CC()
{
  unint64_t result;

  result = qword_1EFE52870;
  if (!qword_1EFE52870)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFE52870);
  }
  return result;
}

void sub_1D445F708(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  _OWORD *i;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v30;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    for (i = (_OWORD *)(swift_bridgeObjectRetain() + 72); ; i = (_OWORD *)((char *)i + 56))
    {
      v7 = *((_QWORD *)i - 1);
      v27 = *((_QWORD *)i - 4);
      v28 = *((_QWORD *)i - 2);
      v30 = *i;
      v8 = *((_BYTE *)i - 24);
      v6 = *((unsigned __int8 *)i - 40);
      v9 = (_QWORD *)*a3;
      v10 = sub_1D4366B8C(v6);
      v12 = v9[2];
      v13 = (v11 & 1) == 0;
      v14 = v12 + v13;
      if (__OFADD__(v12, v13))
      {
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        sub_1D451B8BC();
        __break(1u);
        goto LABEL_19;
      }
      v15 = v10;
      v16 = v11;
      v17 = v9[3];
      swift_bridgeObjectRetain();
      swift_retain();
      if (v17 >= v14)
      {
        if ((a2 & 1) == 0)
        {
          sub_1D42B28FC(&qword_1EFE528D8);
          sub_1D451B538();
        }
      }
      else
      {
        sub_1D4490D18();
        v18 = sub_1D4366B8C(v6);
        if ((v16 & 1) != (v19 & 1))
          goto LABEL_18;
        v15 = v18;
      }
      if ((v16 & 1) != 0)
        break;
      v20 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v15 >> 6) + 64) |= 1 << v15;
      *(_BYTE *)(v20[6] + v15) = v6;
      v21 = v20[7] + 48 * v15;
      *(_QWORD *)v21 = v27;
      *(_BYTE *)(v21 + 8) = v8;
      *(_QWORD *)(v21 + 16) = v28;
      *(_QWORD *)(v21 + 24) = v7;
      *(_OWORD *)(v21 + 32) = v30;
      v22 = v20[2];
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
        goto LABEL_17;
      v20[2] = v24;
      a2 = 1;
      if (!--v3)
      {
        swift_bridgeObjectRelease_n();
        return;
      }
    }
    v25 = (void *)swift_allocError();
    swift_willThrow();
    v26 = v25;
    sub_1D42B28FC(&qword_1EFE49BB0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_release();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();

      return;
    }
LABEL_19:
    sub_1D451B400();
    sub_1D451A794();
    sub_1D451B514();
    sub_1D451A794();
    sub_1D451B55C();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

void sub_1D445FA14(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  void *v23;
  id v24;
  _OWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  id v31;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v6 = a1 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1D446087C(v6, (uint64_t)&v28);
    v7 = v28;
    v8 = v29;
    v26 = v28;
    v27 = v29;
    sub_1D42B293C(&v30, v25);
    v9 = (_QWORD *)*a3;
    v11 = sub_1D4366B34(v7, v8);
    v12 = v9[2];
    v13 = (v10 & 1) == 0;
    v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1D451B8BC();
      __break(1u);
      goto LABEL_20;
    }
    v15 = v10;
    if (v9[3] < v14)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_1D42B28FC(&qword_1EFE52888);
      sub_1D451B538();
      if ((v15 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v18 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v19 = (uint64_t *)(v18[6] + 16 * v11);
    *v19 = v7;
    v19[1] = v8;
    sub_1D42B293C(v25, (_OWORD *)(v18[7] + 32 * v11));
    v20 = v18[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_18;
    v18[2] = v22;
    v6 += 48;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1D4490F68(v14, a2 & 1);
  v16 = sub_1D4366B34(v7, v8);
  if ((v15 & 1) != (v17 & 1))
    goto LABEL_19;
  v11 = v16;
  if ((v15 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v23 = (void *)swift_allocError();
  swift_willThrow();
  v31 = v23;
  v24 = v23;
  sub_1D42B28FC(&qword_1EFE49BB0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1D42B5400((uint64_t)v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  sub_1D451B400();
  sub_1D451A794();
  sub_1D451B514();
  sub_1D451A794();
  sub_1D451B55C();
  __break(1u);
}

void sub_1D445FCFC(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v35 = v3;
  v36 = swift_bridgeObjectRetain();
  for (i = (uint64_t *)(v36 + 48); ; i += 3)
  {
    v8 = *(i - 2);
    v7 = *(i - 1);
    v9 = *i;
    v10 = (_QWORD *)*a3;
    swift_bridgeObjectRetain();
    swift_retain();
    v18 = sub_1D4366B34(v8, v7);
    v19 = v10[2];
    v20 = (v11 & 1) == 0;
    v21 = v19 + v20;
    if (__OFADD__(v19, v20))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1D451B8BC();
      __break(1u);
      goto LABEL_20;
    }
    v22 = v11;
    if (v10[3] < v21)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v11 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_1D42B28FC(&qword_1EFE528A8);
      sub_1D451B538();
      if ((v22 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v25 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v18 >> 6) + 64) |= 1 << v18;
    v26 = (uint64_t *)(v25[6] + 16 * v18);
    *v26 = v8;
    v26[1] = v7;
    *(_QWORD *)(v25[7] + 8 * v18) = v9;
    v27 = v25[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_18;
    v25[2] = v29;
    a2 = 1;
    if (!--v4)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1D4491150(v21, a2 & 1, v12, v13, v14, v15, v16, v17, v32, v33, v34, v35, v36, SBYTE4(v36));
  v23 = sub_1D4366B34(v8, v7);
  if ((v22 & 1) != (v24 & 1))
    goto LABEL_19;
  v18 = v23;
  if ((v22 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v30 = (void *)swift_allocError();
  swift_willThrow();
  v31 = v30;
  sub_1D42B28FC(&qword_1EFE49BB0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_20:
  sub_1D451B400();
  sub_1D451A794();
  sub_1D451B514();
  sub_1D451A794();
  sub_1D451B55C();
  __break(1u);
}

void sub_1D445FFD0(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  void *v26;
  id v27;
  unint64_t v29;

  v4 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v4)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  v5 = 0;
  v6 = (unint64_t *)(a1 + 56);
  while (1)
  {
    if (v5 >= *(_QWORD *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_1D451B8BC();
      __break(1u);
      goto LABEL_24;
    }
    v8 = *(v6 - 1);
    v7 = *v6;
    v10 = *(v6 - 3);
    v9 = *(v6 - 2);
    swift_bridgeObjectRetain();
    sub_1D42DD16C(v8, v7);
    if (!v9)
      goto LABEL_18;
    v29 = v7;
    v11 = (_QWORD *)*a3;
    v13 = sub_1D4366B34(v10, v9);
    v14 = v11[2];
    v15 = (v12 & 1) == 0;
    v16 = v14 + v15;
    if (__OFADD__(v14, v15))
      goto LABEL_21;
    v17 = v12;
    if (v11[3] < v16)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v12 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      sub_1D42B28FC(&qword_1EFE52898);
      sub_1D451B538();
      if ((v17 & 1) != 0)
        goto LABEL_16;
    }
LABEL_12:
    v20 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v13 >> 6) + 64) |= 1 << v13;
    v21 = (uint64_t *)(v20[6] + 16 * v13);
    *v21 = v10;
    v21[1] = v9;
    v22 = (uint64_t *)(v20[7] + 16 * v13);
    *v22 = v8;
    v22[1] = v29;
    v23 = v20[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_22;
    ++v5;
    v20[2] = v25;
    v6 += 4;
    a2 = 1;
    if (v4 == v5)
      goto LABEL_18;
  }
  sub_1D44912DC(v16, a2 & 1);
  v18 = sub_1D4366B34(v10, v9);
  if ((v17 & 1) != (v19 & 1))
    goto LABEL_23;
  v13 = v18;
  if ((v17 & 1) == 0)
    goto LABEL_12;
LABEL_16:
  v26 = (void *)swift_allocError();
  swift_willThrow();
  v27 = v26;
  sub_1D42B28FC(&qword_1EFE49BB0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1D42B5420(v8, v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_24:
  sub_1D451B400();
  sub_1D451A794();
  sub_1D451B514();
  sub_1D451A794();
  sub_1D451B55C();
  __break(1u);
}

void sub_1D44602DC(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  _QWORD *v26;
  uint64_t *v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v36 = v3;
  v37 = swift_bridgeObjectRetain();
  v6 = (uint64_t *)(v37 + 56);
  while (1)
  {
    v8 = *(v6 - 3);
    v7 = *(v6 - 2);
    v10 = *(v6 - 1);
    v9 = *v6;
    v11 = (_QWORD *)*a3;
    swift_bridgeObjectRetain();
    v38 = v9;
    swift_bridgeObjectRetain();
    v19 = sub_1D4366B34(v8, v7);
    v20 = v11[2];
    v21 = (v12 & 1) == 0;
    v22 = v20 + v21;
    if (__OFADD__(v20, v21))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1D451B8BC();
      __break(1u);
      goto LABEL_20;
    }
    v23 = v12;
    if (v11[3] < v22)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v12 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_1D42B28FC(&qword_1EFE40370);
      sub_1D451B538();
      if ((v23 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v26 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v19 >> 6) + 64) |= 1 << v19;
    v27 = (uint64_t *)(v26[6] + 16 * v19);
    *v27 = v8;
    v27[1] = v7;
    v28 = (_QWORD *)(v26[7] + 16 * v19);
    *v28 = v10;
    v28[1] = v38;
    v29 = v26[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (v30)
      goto LABEL_18;
    v6 += 4;
    v26[2] = v31;
    a2 = 1;
    if (!--v4)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1D44914D8(v22, a2 & 1, v13, v14, v15, v16, v17, v18, v34, v35, v36, v37, v9, SBYTE4(v9));
  v24 = sub_1D4366B34(v8, v7);
  if ((v23 & 1) != (v25 & 1))
    goto LABEL_19;
  v19 = v24;
  if ((v23 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v32 = (void *)swift_allocError();
  swift_willThrow();
  v33 = v32;
  sub_1D42B28FC(&qword_1EFE49BB0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_20:
  sub_1D451B400();
  sub_1D451A794();
  sub_1D451B514();
  sub_1D451A794();
  sub_1D451B55C();
  __break(1u);
}

void sub_1D44605BC(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;

  v38 = a3;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v36 = v3;
  v37 = swift_bridgeObjectRetain();
  v6 = (uint64_t *)(v37 + 48);
  while (1)
  {
    v8 = *(v6 - 1);
    v9 = *v6;
    v7 = *((unsigned __int8 *)v6 - 16);
    v10 = (_QWORD *)*v38;
    v11 = sub_1D4366B8C(v7);
    v13 = v10[2];
    v14 = (v12 & 1) == 0;
    v15 = v13 + v14;
    if (__OFADD__(v13, v14))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1D451B8BC();
      __break(1u);
      goto LABEL_20;
    }
    v16 = v11;
    v17 = v12;
    v18 = v10[3];
    swift_bridgeObjectRetain();
    if (v18 < v15)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v17 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_1D42B28FC(&qword_1EFE52878);
      sub_1D451B538();
      if ((v17 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v27 = (_QWORD *)*v38;
    *(_QWORD *)(*v38 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    *(_BYTE *)(v27[6] + v16) = v7;
    v28 = (_QWORD *)(v27[7] + 16 * v16);
    *v28 = v8;
    v28[1] = v9;
    v29 = v27[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (v30)
      goto LABEL_18;
    v6 += 3;
    v27[2] = v31;
    a2 = 1;
    if (!--v4)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1D44916C4(v15, a2 & 1, v19, v20, v21, v22, v23, v24, v34, v35, v36, v37, (int)v38, SBYTE4(v38));
  v25 = sub_1D4366B8C(v7);
  if ((v17 & 1) != (v26 & 1))
    goto LABEL_19;
  v16 = v25;
  if ((v17 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v32 = (void *)swift_allocError();
  swift_willThrow();
  v33 = v32;
  sub_1D42B28FC(&qword_1EFE49BB0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_20:
  sub_1D451B400();
  sub_1D451A794();
  sub_1D451B514();
  sub_1D451A794();
  sub_1D451B55C();
  __break(1u);
}

uint64_t sub_1D446087C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D42B28FC(&qword_1EFE52880);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1D44608C4(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  void **i;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v36 = v3;
  v37 = swift_bridgeObjectRetain();
  for (i = (void **)(v37 + 48); ; i += 3)
  {
    v8 = (uint64_t)*(i - 2);
    v7 = (uint64_t)*(i - 1);
    v9 = *i;
    v10 = (_QWORD *)*a3;
    swift_bridgeObjectRetain();
    v11 = v9;
    v19 = sub_1D4366B34(v8, v7);
    v20 = v10[2];
    v21 = (v12 & 1) == 0;
    v22 = v20 + v21;
    if (__OFADD__(v20, v21))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1D451B8BC();
      __break(1u);
      goto LABEL_20;
    }
    v23 = v12;
    if (v10[3] < v22)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v12 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_1D42B28FC(&qword_1EFE51F40);
      sub_1D451B538();
      if ((v23 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v26 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v19 >> 6) + 64) |= 1 << v19;
    v27 = (uint64_t *)(v26[6] + 16 * v19);
    *v27 = v8;
    v27[1] = v7;
    *(_QWORD *)(v26[7] + 8 * v19) = v11;
    v28 = v26[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_18;
    v26[2] = v30;
    a2 = 1;
    if (!--v4)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1D4491878(v22, a2 & 1, v13, v14, v15, v16, v17, v18, v33, v34, v35, v36, v37, SBYTE4(v37));
  v24 = sub_1D4366B34(v8, v7);
  if ((v23 & 1) != (v25 & 1))
    goto LABEL_19;
  v19 = v24;
  if ((v23 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v31 = (void *)swift_allocError();
  swift_willThrow();
  v32 = v31;
  sub_1D42B28FC(&qword_1EFE49BB0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease_n();
    return;
  }
LABEL_20:
  sub_1D451B400();
  sub_1D451A794();
  sub_1D451B514();
  sub_1D451A794();
  sub_1D451B55C();
  __break(1u);
}

void sub_1D4460B94(_QWORD *a1, uint64_t a2, char a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  _BOOL8 v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = a1[2];
  if (!v4 || !*(_QWORD *)(a2 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  v33 = *(_QWORD *)(a2 + 16);
  v8 = a1[4];
  v7 = a1[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = *(_QWORD *)(a2 + 32);
  v11 = (_QWORD *)*a4;
  v13 = sub_1D4366B34(v8, v7);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (!__OFADD__(v14, v15))
  {
    v17 = v12;
    v18 = 0;
    v32 = v33 - 1;
    v34 = v4 - 1;
    v19 = a1 + 7;
    do
    {
      if (v11[3] >= v16)
      {
        if ((a3 & 1) != 0)
        {
          if ((v17 & 1) != 0)
            goto LABEL_19;
        }
        else
        {
          sub_1D42B28FC(&qword_1EFE4A598);
          sub_1D451B538();
          if ((v17 & 1) != 0)
            goto LABEL_19;
        }
      }
      else
      {
        sub_1D44919EC();
        v20 = sub_1D4366B34(v8, v7);
        if ((v17 & 1) != (v21 & 1))
          goto LABEL_26;
        v13 = v20;
        if ((v17 & 1) != 0)
        {
LABEL_19:
          v30 = (void *)swift_allocError();
          swift_willThrow();
          v31 = v30;
          sub_1D42B28FC(&qword_1EFE49BB0);
          if ((swift_dynamicCast() & 1) != 0)
            goto LABEL_27;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();

          return;
        }
      }
      v22 = (_QWORD *)*a4;
      *(_QWORD *)(*a4 + 8 * (v13 >> 6) + 64) |= 1 << v13;
      v23 = (uint64_t *)(v22[6] + 16 * v13);
      *v23 = v8;
      v23[1] = v7;
      *(_QWORD *)(v22[7] + 8 * v13) = v10;
      v24 = v22[2];
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        goto LABEL_24;
      v22[2] = v26;
      if (v34 == v18)
        goto LABEL_22;
      if ((unint64_t)(v18 + 1) >= a1[2])
        goto LABEL_25;
      if (v32 == v18)
      {
LABEL_22:
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        return;
      }
      v8 = *(v19 - 1);
      v7 = *v19;
      swift_bridgeObjectRetain();
      v10 = *(_QWORD *)(a2 + 40 + 8 * v18);
      v11 = (_QWORD *)*a4;
      v13 = sub_1D4366B34(v8, v7);
      v17 = v27;
      v28 = v11[2];
      v29 = (v27 & 1) == 0;
      ++v18;
      v19 += 2;
      a3 = 1;
      v16 = v28 + v29;
    }
    while (!__OFADD__(v28, v29));
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  sub_1D451B8BC();
  __break(1u);
LABEL_27:
  sub_1D451B400();
  sub_1D451A794();
  sub_1D451B514();
  sub_1D451A794();
  sub_1D451B55C();
  __break(1u);
}

void sub_1D4460F40(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t *i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  void *v23;
  id v24;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  for (i = (uint64_t *)(swift_bridgeObjectRetain() + 48); ; i += 3)
  {
    v8 = *(i - 2);
    v7 = *(i - 1);
    v9 = *i;
    v10 = (_QWORD *)*a3;
    swift_bridgeObjectRetain();
    v12 = sub_1D4366B34(v8, v7);
    v13 = v10[2];
    v14 = (v11 & 1) == 0;
    if (__OFADD__(v13, v14))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1D451B8BC();
      __break(1u);
      goto LABEL_20;
    }
    v15 = v11;
    if (v10[3] < v13 + v14)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v11 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_1D42B28FC(&qword_1EFE4A598);
      sub_1D451B538();
      if ((v15 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v18 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    v19 = (uint64_t *)(v18[6] + 16 * v12);
    *v19 = v8;
    v19[1] = v7;
    *(_QWORD *)(v18[7] + 8 * v12) = v9;
    v20 = v18[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_18;
    v18[2] = v22;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1D44919EC();
  v16 = sub_1D4366B34(v8, v7);
  if ((v15 & 1) != (v17 & 1))
    goto LABEL_19;
  v12 = v16;
  if ((v15 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v23 = (void *)swift_allocError();
  swift_willThrow();
  v24 = v23;
  sub_1D42B28FC(&qword_1EFE49BB0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_20:
  sub_1D451B400();
  sub_1D451A794();
  sub_1D451B514();
  sub_1D451A794();
  sub_1D451B55C();
  __break(1u);
}

void sub_1D4461204(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v35 = v3;
  v36 = swift_bridgeObjectRetain();
  v6 = (_BYTE *)(v36 + 48);
  while (1)
  {
    v8 = *((_QWORD *)v6 - 2);
    v7 = *((_QWORD *)v6 - 1);
    v9 = *v6;
    v10 = (_QWORD *)*a3;
    swift_bridgeObjectRetain();
    v18 = sub_1D4366B34(v8, v7);
    v19 = v10[2];
    v20 = (v11 & 1) == 0;
    v21 = v19 + v20;
    if (__OFADD__(v19, v20))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1D451B8BC();
      __break(1u);
      goto LABEL_20;
    }
    v22 = v11;
    if (v10[3] < v21)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v11 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_1D42B28FC(&qword_1EFE528C0);
      sub_1D451B538();
      if ((v22 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v25 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v18 >> 6) + 64) |= 1 << v18;
    v26 = (uint64_t *)(v25[6] + 16 * v18);
    *v26 = v8;
    v26[1] = v7;
    *(_BYTE *)(v25[7] + v18) = v9;
    v27 = v25[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_18;
    v6 += 24;
    v25[2] = v29;
    a2 = 1;
    if (!--v4)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1D4491BBC(v21, a2 & 1, v12, v13, v14, v15, v16, v17, v32, v33, v34, v35, v36, SBYTE4(v36));
  v23 = sub_1D4366B34(v8, v7);
  if ((v22 & 1) != (v24 & 1))
    goto LABEL_19;
  v18 = v23;
  if ((v22 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v30 = (void *)swift_allocError();
  swift_willThrow();
  v31 = v30;
  sub_1D42B28FC(&qword_1EFE49BB0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_20:
  sub_1D451B400();
  sub_1D451A794();
  sub_1D451B514();
  sub_1D451A794();
  sub_1D451B55C();
  __break(1u);
}

void sub_1D44614C8(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v35 = v3;
  v36 = swift_bridgeObjectRetain();
  for (i = (uint64_t *)(v36 + 48); ; i += 3)
  {
    v8 = *(i - 2);
    v7 = *(i - 1);
    v9 = *i;
    v10 = (_QWORD *)*a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = sub_1D4366B34(v8, v7);
    v19 = v10[2];
    v20 = (v11 & 1) == 0;
    v21 = v19 + v20;
    if (__OFADD__(v19, v20))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1D451B8BC();
      __break(1u);
      goto LABEL_20;
    }
    v22 = v11;
    if (v10[3] < v21)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v11 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_1D42B28FC(&qword_1EFE4A500);
      sub_1D451B538();
      if ((v22 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v25 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v18 >> 6) + 64) |= 1 << v18;
    v26 = (uint64_t *)(v25[6] + 16 * v18);
    *v26 = v8;
    v26[1] = v7;
    *(_QWORD *)(v25[7] + 8 * v18) = v9;
    v27 = v25[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_18;
    v25[2] = v29;
    a2 = 1;
    if (!--v4)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1D4491D2C(v21, a2 & 1, v12, v13, v14, v15, v16, v17, v32, v33, v34, v35, v36, SBYTE4(v36));
  v23 = sub_1D4366B34(v8, v7);
  if ((v22 & 1) != (v24 & 1))
    goto LABEL_19;
  v18 = v23;
  if ((v22 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v30 = (void *)swift_allocError();
  swift_willThrow();
  v31 = v30;
  sub_1D42B28FC(&qword_1EFE49BB0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_20:
  sub_1D451B400();
  sub_1D451A794();
  sub_1D451B514();
  sub_1D451A794();
  sub_1D451B55C();
  __break(1u);
}

void sub_1D446179C(_QWORD *a1, uint64_t a2, char a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  _QWORD *v29;
  uint64_t *v30;
  _QWORD *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;

  v5 = v4;
  v6 = a2;
  v44 = a1[2];
  if (v44 && (v41 = *(_QWORD *)(a2 + 16)) != 0)
  {
    v40 = v5;
    v8 = a1[4];
    v7 = a1[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = 0;
    v10 = 1;
    v42 = v6;
    while (1)
    {
      v11 = v6 + v9 * 8;
      swift_bridgeObjectRetain();
      v12 = *(_QWORD *)(v11 + 32);
      v13 = *(_QWORD *)(v11 + 40);
      v14 = (_QWORD *)*a4;
      swift_bridgeObjectRetain();
      v22 = sub_1D4366B34(v8, v7);
      v23 = v14[2];
      v24 = (v15 & 1) == 0;
      v25 = v23 + v24;
      if (__OFADD__(v23, v24))
        break;
      v26 = v15;
      if (v14[3] >= v25)
      {
        if ((a3 & 1) != 0)
        {
          if ((v15 & 1) != 0)
            goto LABEL_17;
        }
        else
        {
          sub_1D42B28FC(&qword_1EFE40370);
          sub_1D451B538();
          if ((v26 & 1) != 0)
            goto LABEL_17;
        }
      }
      else
      {
        sub_1D44914D8(v25, a3 & 1, v16, v17, v18, v19, v20, v21, v37, v38, v39, v40, v41, SBYTE4(v41));
        v27 = sub_1D4366B34(v8, v7);
        if ((v26 & 1) != (v28 & 1))
          goto LABEL_24;
        v22 = v27;
        if ((v26 & 1) != 0)
        {
LABEL_17:
          v35 = (void *)swift_allocError();
          swift_willThrow();
          v36 = v35;
          sub_1D42B28FC(&qword_1EFE49BB0);
          if ((swift_dynamicCast() & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();

            return;
          }
          goto LABEL_25;
        }
      }
      v29 = (_QWORD *)*a4;
      *(_QWORD *)(*a4 + 8 * (v22 >> 6) + 64) |= 1 << v22;
      v30 = (uint64_t *)(v29[6] + 16 * v22);
      *v30 = v8;
      v30[1] = v7;
      v31 = (_QWORD *)(v29[7] + 16 * v22);
      *v31 = v12;
      v31[1] = v13;
      v32 = v29[2];
      v33 = __OFADD__(v32, 1);
      v34 = v32 + 1;
      if (v33)
        goto LABEL_22;
      v29[2] = v34;
      if (v44 == v10)
        goto LABEL_20;
      v6 = v42;
      if (v10 >= a1[2])
        goto LABEL_23;
      if (v41 == v10)
      {
LABEL_20:
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        return;
      }
      ++v10;
      v8 = a1[v9 + 6];
      v7 = a1[v9 + 7];
      v9 += 2;
      a3 = 1;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    sub_1D451B8BC();
    __break(1u);
LABEL_25:
    sub_1D451B400();
    sub_1D451A794();
    sub_1D451B514();
    sub_1D451A794();
    sub_1D451B55C();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void type metadata accessor for StaticAssetDescriptor()
{
  sub_1D42CB35C();
}

void type metadata accessor for AssetUtils.DomainError()
{
  sub_1D42CB35C();
}

void type metadata accessor for StaticAsset()
{
  sub_1D42CB35C();
}

unint64_t sub_1D4461B48()
{
  unint64_t result;

  result = qword_1EFE40420;
  if (!qword_1EFE40420)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541294, &unk_1E979DA68);
    atomic_store(result, (unint64_t *)&qword_1EFE40420);
  }
  return result;
}

unint64_t sub_1D4461B88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFE528E0;
  if (!qword_1EFE528E0)
  {
    v1 = sub_1D42B8B10(&qword_1EFE528E8);
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EFE528E0);
  }
  return result;
}

unint64_t sub_1D4461BD0()
{
  unint64_t result;

  result = qword_1EFE528F0;
  if (!qword_1EFE528F0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45412BC, &unk_1E979B278);
    atomic_store(result, (unint64_t *)&qword_1EFE528F0);
  }
  return result;
}

unint64_t sub_1D4461C0C()
{
  unint64_t result;

  result = qword_1EFE52A70;
  if (!qword_1EFE52A70)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454386C, &type metadata for StaticAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52A70);
  }
  return result;
}

unint64_t sub_1D4461C48()
{
  unint64_t result;

  result = qword_1EFE52A78;
  if (!qword_1EFE52A78)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454381C, &type metadata for StaticAsset.MicroSoundPrintClassifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52A78);
  }
  return result;
}

unint64_t sub_1D4461C84()
{
  unint64_t result;

  result = qword_1EFE52A80;
  if (!qword_1EFE52A80)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45437CC, &type metadata for StaticAsset.PpdCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52A80);
  }
  return result;
}

unint64_t sub_1D4461CC0()
{
  unint64_t result;

  result = qword_1EFE52A88;
  if (!qword_1EFE52A88)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454377C, &type metadata for StaticAsset.StagedLanguageAlignedAVFuserCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52A88);
  }
  return result;
}

unint64_t sub_1D4461CFC()
{
  unint64_t result;

  result = qword_1EFE52A90;
  if (!qword_1EFE52A90)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454372C, &type metadata for StaticAsset.StagedLanguageAlignedAudioEncoderCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52A90);
  }
  return result;
}

unint64_t sub_1D4461D38()
{
  unint64_t result;

  result = qword_1EFE52A98;
  if (!qword_1EFE52A98)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45436DC, &type metadata for StaticAsset.LanguageAlignedAVFuserCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52A98);
  }
  return result;
}

unint64_t sub_1D4461D74()
{
  unint64_t result;

  result = qword_1EFE52AA0;
  if (!qword_1EFE52AA0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454368C, &type metadata for StaticAsset.LanguageAlignedAudioEncoderCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52AA0);
  }
  return result;
}

unint64_t sub_1D4461DB0()
{
  unint64_t result;

  result = qword_1EFE52AA8;
  if (!qword_1EFE52AA8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454363C, &type metadata for StaticAsset.CustomSoundE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52AA8);
  }
  return result;
}

unint64_t sub_1D4461DEC()
{
  unint64_t result;

  result = qword_1EFE52AB0;
  if (!qword_1EFE52AB0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45435EC, &type metadata for StaticAsset.AudioQualityCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52AB0);
  }
  return result;
}

unint64_t sub_1D4461E28()
{
  unint64_t result;

  result = qword_1EFE52AB8;
  if (!qword_1EFE52AB8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454359C, &type metadata for StaticAsset.IndoorOutdoorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52AB8);
  }
  return result;
}

unint64_t sub_1D4461E64()
{
  unint64_t result;

  result = qword_1EFE52AC0;
  if (!qword_1EFE52AC0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454354C, &type metadata for StaticAsset.SoundClassifierVersion1CoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52AC0);
  }
  return result;
}

unint64_t sub_1D4461EA0()
{
  unint64_t result;

  result = qword_1EFE52AC8;
  if (!qword_1EFE52AC8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45434FC, &type metadata for StaticAsset.SoundPrintKEmbeddingCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52AC8);
  }
  return result;
}

unint64_t sub_1D4461EDC()
{
  unint64_t result;

  result = qword_1EFE52AD0;
  if (!qword_1EFE52AD0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45434AC, &type metadata for StaticAsset.SoundPrintAEmbeddingCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52AD0);
  }
  return result;
}

unint64_t sub_1D4461F18()
{
  unint64_t result;

  result = qword_1EFE52AD8;
  if (!qword_1EFE52AD8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454345C, &type metadata for StaticAsset.SoundPrint100kEmbeddingCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52AD8);
  }
  return result;
}

unint64_t sub_1D4461F54()
{
  unint64_t result;

  result = qword_1EFE52AE0;
  if (!qword_1EFE52AE0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454340C, &type metadata for StaticAsset.SoundPrint100kSmokeAlarmDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52AE0);
  }
  return result;
}

unint64_t sub_1D4461F90()
{
  unint64_t result;

  result = qword_1EFE52AE8;
  if (!qword_1EFE52AE8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45433BC, &type metadata for StaticAsset.SoundPrintASmokeAlarmDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52AE8);
  }
  return result;
}

unint64_t sub_1D4461FCC()
{
  unint64_t result;

  result = qword_1EFE52AF0;
  if (!qword_1EFE52AF0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454336C, &type metadata for StaticAsset.SoundPrintASpeechDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52AF0);
  }
  return result;
}

unint64_t sub_1D4462008()
{
  unint64_t result;

  result = qword_1EFE52AF8;
  if (!qword_1EFE52AF8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454331C, &type metadata for StaticAsset.SoundPrintAShoutingDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52AF8);
  }
  return result;
}

unint64_t sub_1D4462044()
{
  unint64_t result;

  result = qword_1EFE52B00;
  if (!qword_1EFE52B00)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45432CC, &type metadata for StaticAsset.SoundPrintALaughterDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52B00);
  }
  return result;
}

unint64_t sub_1D4462080()
{
  unint64_t result;

  result = qword_1EFE52B08;
  if (!qword_1EFE52B08)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454327C, &type metadata for StaticAsset.VggishSpeechDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52B08);
  }
  return result;
}

unint64_t sub_1D44620BC()
{
  unint64_t result;

  result = qword_1EFE52B10;
  if (!qword_1EFE52B10)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454322C, &type metadata for StaticAsset.VggishMusicDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52B10);
  }
  return result;
}

unint64_t sub_1D44620F8()
{
  unint64_t result;

  result = qword_1EFE52B18;
  if (!qword_1EFE52B18)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45431DC, &type metadata for StaticAsset.VggishLaughterDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52B18);
  }
  return result;
}

unint64_t sub_1D4462134()
{
  unint64_t result;

  result = qword_1EFE52B20;
  if (!qword_1EFE52B20)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454318C, &type metadata for StaticAsset.VggishCheeringDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52B20);
  }
  return result;
}

unint64_t sub_1D4462170()
{
  unint64_t result;

  result = qword_1EFE52B28;
  if (!qword_1EFE52B28)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454313C, &type metadata for StaticAsset.VggishBabbleDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52B28);
  }
  return result;
}

unint64_t sub_1D44621AC()
{
  unint64_t result;

  result = qword_1EFE52B30;
  if (!qword_1EFE52B30)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45430EC, &type metadata for StaticAsset.VggishApplauseDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52B30);
  }
  return result;
}

unint64_t sub_1D44621E8()
{
  unint64_t result;

  result = qword_1EFE52B38;
  if (!qword_1EFE52B38)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454309C, &type metadata for StaticAsset.VggishEmbeddingCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52B38);
  }
  return result;
}

unint64_t sub_1D4462224()
{
  unint64_t result;

  result = qword_1EFE52B40;
  if (!qword_1EFE52B40)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454304C, &type metadata for StaticAsset.SoundActionsE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52B40);
  }
  return result;
}

unint64_t sub_1D4462260()
{
  unint64_t result;

  result = qword_1EFE52B48;
  if (!qword_1EFE52B48)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542FFC, &type metadata for StaticAsset.WaterRunningDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52B48);
  }
  return result;
}

unint64_t sub_1D446229C()
{
  unint64_t result;

  result = qword_1EFE52B50;
  if (!qword_1EFE52B50)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542FAC, &type metadata for StaticAsset.SirenAlarmDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52B50);
  }
  return result;
}

unint64_t sub_1D44622D8()
{
  unint64_t result;

  result = qword_1EFE52B58;
  if (!qword_1EFE52B58)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542F5C, &type metadata for StaticAsset.ShoutDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52B58);
  }
  return result;
}

unint64_t sub_1D4462314()
{
  unint64_t result;

  result = qword_1EFE52B60;
  if (!qword_1EFE52B60)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542F0C, &type metadata for StaticAsset.KettleWhistlingDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52B60);
  }
  return result;
}

unint64_t sub_1D4462350()
{
  unint64_t result;

  result = qword_1EFE52B68;
  if (!qword_1EFE52B68)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542EBC, &type metadata for StaticAsset.GlassBreakingDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52B68);
  }
  return result;
}

unint64_t sub_1D446238C()
{
  unint64_t result;

  result = qword_1EFE52B70;
  if (!qword_1EFE52B70)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542E6C, &type metadata for StaticAsset.FireAlarmDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52B70);
  }
  return result;
}

unint64_t sub_1D44623C8()
{
  unint64_t result;

  result = qword_1EFE52B78;
  if (!qword_1EFE52B78)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542E1C, &type metadata for StaticAsset.DoorKnockDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52B78);
  }
  return result;
}

unint64_t sub_1D4462404()
{
  unint64_t result;

  result = qword_1EFE52B80;
  if (!qword_1EFE52B80)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542DCC, &type metadata for StaticAsset.DoorBellDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52B80);
  }
  return result;
}

unint64_t sub_1D4462440()
{
  unint64_t result;

  result = qword_1EFE52B88;
  if (!qword_1EFE52B88)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542D7C, &type metadata for StaticAsset.DogBarkDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52B88);
  }
  return result;
}

unint64_t sub_1D446247C()
{
  unint64_t result;

  result = qword_1EFE52B90;
  if (!qword_1EFE52B90)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542D2C, &type metadata for StaticAsset.DingBellDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52B90);
  }
  return result;
}

unint64_t sub_1D44624B8()
{
  unint64_t result;

  result = qword_1EFE52B98;
  if (!qword_1EFE52B98)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542CDC, &type metadata for StaticAsset.CoughDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52B98);
  }
  return result;
}

unint64_t sub_1D44624F4()
{
  unint64_t result;

  result = qword_1EFE52BA0;
  if (!qword_1EFE52BA0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542C8C, &type metadata for StaticAsset.CatMeowDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52BA0);
  }
  return result;
}

unint64_t sub_1D4462530()
{
  unint64_t result;

  result = qword_1EFE52BA8;
  if (!qword_1EFE52BA8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542C3C, &type metadata for StaticAsset.CarHornDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52BA8);
  }
  return result;
}

unint64_t sub_1D446256C()
{
  unint64_t result;

  result = qword_1EFE52BB0;
  if (!qword_1EFE52BB0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542BEC, &type metadata for StaticAsset.BuzzerDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52BB0);
  }
  return result;
}

unint64_t sub_1D44625A8()
{
  unint64_t result;

  result = qword_1EFE52BB8;
  if (!qword_1EFE52BB8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542B9C, &type metadata for StaticAsset.BeepDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52BB8);
  }
  return result;
}

unint64_t sub_1D44625E4()
{
  unint64_t result;

  result = qword_1EFE52BC0;
  if (!qword_1EFE52BC0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542B4C, &type metadata for StaticAsset.DistressedBabyDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52BC0);
  }
  return result;
}

unint64_t sub_1D4462620()
{
  unint64_t result;

  result = qword_1EFE52BC8;
  if (!qword_1EFE52BC8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542AFC, &type metadata for StaticAsset.ApplianceDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52BC8);
  }
  return result;
}

unint64_t sub_1D446265C()
{
  unint64_t result;

  result = qword_1EFE52BD0;
  if (!qword_1EFE52BD0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542AAC, &type metadata for StaticAsset.SmokeAlarmDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52BD0);
  }
  return result;
}

unint64_t sub_1D4462698()
{
  unint64_t result;

  result = qword_1EFE52BD8;
  if (!qword_1EFE52BD8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542A5C, &type metadata for StaticAsset.SoundPrintAEmbeddingE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52BD8);
  }
  return result;
}

unint64_t sub_1D44626D4()
{
  unint64_t result;

  result = qword_1EFE52BE0;
  if (!qword_1EFE52BE0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542A0C, &type metadata for StaticAsset.SoundPrintKEmbeddingE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52BE0);
  }
  return result;
}

uint64_t _s13SoundAnalysis11StaticAssetO10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xD3)
  {
    if (a2 + 45 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 45) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 46;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x2E;
  v5 = v6 - 46;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s13SoundAnalysis11StaticAssetO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 45 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 45) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xD3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xD2)
    return ((uint64_t (*)(void))((char *)&loc_1D44627E4 + 4 * byte_1D4541159[v4]))();
  *a1 = a2 + 45;
  return ((uint64_t (*)(void))((char *)sub_1D4462818 + 4 * byte_1D4541154[v4]))();
}

uint64_t sub_1D4462818(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4462820(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4462828);
  return result;
}

uint64_t sub_1D4462834(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D446283CLL);
  *(_BYTE *)result = a2 + 45;
  return result;
}

uint64_t sub_1D4462840(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4462848(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticAsset.CodingKeys()
{
  return &type metadata for StaticAsset.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.SoundPrintKEmbeddingE5RTCodingKeys()
{
  return &type metadata for StaticAsset.SoundPrintKEmbeddingE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.SoundPrintAEmbeddingE5RTCodingKeys()
{
  return &type metadata for StaticAsset.SoundPrintAEmbeddingE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.SmokeAlarmDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.SmokeAlarmDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.ApplianceDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.ApplianceDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.DistressedBabyDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.DistressedBabyDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.BeepDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.BeepDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.BuzzerDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.BuzzerDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.CarHornDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.CarHornDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.CatMeowDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.CatMeowDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.CoughDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.CoughDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.DingBellDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.DingBellDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.DogBarkDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.DogBarkDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.DoorBellDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.DoorBellDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.DoorKnockDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.DoorKnockDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.FireAlarmDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.FireAlarmDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.GlassBreakingDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.GlassBreakingDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.KettleWhistlingDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.KettleWhistlingDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.ShoutDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.ShoutDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.SirenAlarmDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.SirenAlarmDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.WaterRunningDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.WaterRunningDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.SoundActionsE5RTCodingKeys()
{
  return &type metadata for StaticAsset.SoundActionsE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.VggishEmbeddingCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.VggishEmbeddingCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.VggishApplauseDetectorCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.VggishApplauseDetectorCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.VggishBabbleDetectorCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.VggishBabbleDetectorCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.VggishCheeringDetectorCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.VggishCheeringDetectorCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.VggishLaughterDetectorCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.VggishLaughterDetectorCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.VggishMusicDetectorCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.VggishMusicDetectorCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.VggishSpeechDetectorCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.VggishSpeechDetectorCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.SoundPrintALaughterDetectorCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.SoundPrintALaughterDetectorCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.SoundPrintAShoutingDetectorCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.SoundPrintAShoutingDetectorCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.SoundPrintASpeechDetectorCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.SoundPrintASpeechDetectorCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.SoundPrintASmokeAlarmDetectorCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.SoundPrintASmokeAlarmDetectorCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.SoundPrint100kSmokeAlarmDetectorCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.SoundPrint100kSmokeAlarmDetectorCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.SoundPrint100kEmbeddingCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.SoundPrint100kEmbeddingCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.SoundPrintAEmbeddingCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.SoundPrintAEmbeddingCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.SoundPrintKEmbeddingCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.SoundPrintKEmbeddingCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.SoundClassifierVersion1CoreMLCodingKeys()
{
  return &type metadata for StaticAsset.SoundClassifierVersion1CoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.IndoorOutdoorCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.IndoorOutdoorCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.AudioQualityCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.AudioQualityCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.CustomSoundE5RTCodingKeys()
{
  return &type metadata for StaticAsset.CustomSoundE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.LanguageAlignedAudioEncoderCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.LanguageAlignedAudioEncoderCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.LanguageAlignedAVFuserCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.LanguageAlignedAVFuserCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.StagedLanguageAlignedAudioEncoderCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.StagedLanguageAlignedAudioEncoderCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.StagedLanguageAlignedAVFuserCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.StagedLanguageAlignedAVFuserCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.PpdCodingKeys()
{
  return &type metadata for StaticAsset.PpdCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.MicroSoundPrintClassifierCodingKeys()
{
  return &type metadata for StaticAsset.MicroSoundPrintClassifierCodingKeys;
}

unint64_t sub_1D4462B48()
{
  unint64_t result;

  result = qword_1EFE52D60;
  if (!qword_1EFE52D60)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45429E4, &type metadata for StaticAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52D60);
  }
  return result;
}

unint64_t sub_1D4462B88()
{
  unint64_t result;

  result = qword_1EFE52D68;
  if (!qword_1EFE52D68)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542904, &type metadata for StaticAsset.SoundPrintKEmbeddingE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52D68);
  }
  return result;
}

unint64_t sub_1D4462BC8()
{
  unint64_t result;

  result = qword_1EFE52D70;
  if (!qword_1EFE52D70)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454292C, &type metadata for StaticAsset.SoundPrintKEmbeddingE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52D70);
  }
  return result;
}

unint64_t sub_1D4462C08()
{
  unint64_t result;

  result = qword_1EFE52D78;
  if (!qword_1EFE52D78)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45428B4, &type metadata for StaticAsset.SoundPrintAEmbeddingE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52D78);
  }
  return result;
}

unint64_t sub_1D4462C48()
{
  unint64_t result;

  result = qword_1EFE52D80;
  if (!qword_1EFE52D80)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45428DC, &type metadata for StaticAsset.SoundPrintAEmbeddingE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52D80);
  }
  return result;
}

unint64_t sub_1D4462C88()
{
  unint64_t result;

  result = qword_1EFE52D88;
  if (!qword_1EFE52D88)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542864, &type metadata for StaticAsset.SmokeAlarmDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52D88);
  }
  return result;
}

unint64_t sub_1D4462CC8()
{
  unint64_t result;

  result = qword_1EFE52D90;
  if (!qword_1EFE52D90)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454288C, &type metadata for StaticAsset.SmokeAlarmDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52D90);
  }
  return result;
}

unint64_t sub_1D4462D08()
{
  unint64_t result;

  result = qword_1EFE52D98;
  if (!qword_1EFE52D98)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542814, &type metadata for StaticAsset.ApplianceDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52D98);
  }
  return result;
}

unint64_t sub_1D4462D48()
{
  unint64_t result;

  result = qword_1EFE52DA0;
  if (!qword_1EFE52DA0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454283C, &type metadata for StaticAsset.ApplianceDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52DA0);
  }
  return result;
}

unint64_t sub_1D4462D88()
{
  unint64_t result;

  result = qword_1EFE52DA8;
  if (!qword_1EFE52DA8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45427C4, &type metadata for StaticAsset.DistressedBabyDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52DA8);
  }
  return result;
}

unint64_t sub_1D4462DC8()
{
  unint64_t result;

  result = qword_1EFE52DB0;
  if (!qword_1EFE52DB0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45427EC, &type metadata for StaticAsset.DistressedBabyDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52DB0);
  }
  return result;
}

unint64_t sub_1D4462E08()
{
  unint64_t result;

  result = qword_1EFE52DB8;
  if (!qword_1EFE52DB8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542774, &type metadata for StaticAsset.BeepDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52DB8);
  }
  return result;
}

unint64_t sub_1D4462E48()
{
  unint64_t result;

  result = qword_1EFE52DC0;
  if (!qword_1EFE52DC0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454279C, &type metadata for StaticAsset.BeepDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52DC0);
  }
  return result;
}

unint64_t sub_1D4462E88()
{
  unint64_t result;

  result = qword_1EFE52DC8;
  if (!qword_1EFE52DC8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542724, &type metadata for StaticAsset.BuzzerDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52DC8);
  }
  return result;
}

unint64_t sub_1D4462EC8()
{
  unint64_t result;

  result = qword_1EFE52DD0;
  if (!qword_1EFE52DD0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454274C, &type metadata for StaticAsset.BuzzerDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52DD0);
  }
  return result;
}

unint64_t sub_1D4462F08()
{
  unint64_t result;

  result = qword_1EFE52DD8;
  if (!qword_1EFE52DD8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45426D4, &type metadata for StaticAsset.CarHornDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52DD8);
  }
  return result;
}

unint64_t sub_1D4462F48()
{
  unint64_t result;

  result = qword_1EFE52DE0;
  if (!qword_1EFE52DE0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45426FC, &type metadata for StaticAsset.CarHornDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52DE0);
  }
  return result;
}

unint64_t sub_1D4462F88()
{
  unint64_t result;

  result = qword_1EFE52DE8;
  if (!qword_1EFE52DE8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542684, &type metadata for StaticAsset.CatMeowDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52DE8);
  }
  return result;
}

unint64_t sub_1D4462FC8()
{
  unint64_t result;

  result = qword_1EFE52DF0;
  if (!qword_1EFE52DF0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45426AC, &type metadata for StaticAsset.CatMeowDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52DF0);
  }
  return result;
}

unint64_t sub_1D4463008()
{
  unint64_t result;

  result = qword_1EFE52DF8;
  if (!qword_1EFE52DF8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542634, &type metadata for StaticAsset.CoughDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52DF8);
  }
  return result;
}

unint64_t sub_1D4463048()
{
  unint64_t result;

  result = qword_1EFE52E00;
  if (!qword_1EFE52E00)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454265C, &type metadata for StaticAsset.CoughDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52E00);
  }
  return result;
}

unint64_t sub_1D4463088()
{
  unint64_t result;

  result = qword_1EFE52E08;
  if (!qword_1EFE52E08)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45425E4, &type metadata for StaticAsset.DingBellDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52E08);
  }
  return result;
}

unint64_t sub_1D44630C8()
{
  unint64_t result;

  result = qword_1EFE52E10;
  if (!qword_1EFE52E10)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454260C, &type metadata for StaticAsset.DingBellDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52E10);
  }
  return result;
}

unint64_t sub_1D4463108()
{
  unint64_t result;

  result = qword_1EFE52E18;
  if (!qword_1EFE52E18)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542594, &type metadata for StaticAsset.DogBarkDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52E18);
  }
  return result;
}

unint64_t sub_1D4463148()
{
  unint64_t result;

  result = qword_1EFE52E20;
  if (!qword_1EFE52E20)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45425BC, &type metadata for StaticAsset.DogBarkDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52E20);
  }
  return result;
}

unint64_t sub_1D4463188()
{
  unint64_t result;

  result = qword_1EFE52E28;
  if (!qword_1EFE52E28)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542544, &type metadata for StaticAsset.DoorBellDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52E28);
  }
  return result;
}

unint64_t sub_1D44631C8()
{
  unint64_t result;

  result = qword_1EFE52E30;
  if (!qword_1EFE52E30)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454256C, &type metadata for StaticAsset.DoorBellDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52E30);
  }
  return result;
}

unint64_t sub_1D4463208()
{
  unint64_t result;

  result = qword_1EFE52E38;
  if (!qword_1EFE52E38)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45424F4, &type metadata for StaticAsset.DoorKnockDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52E38);
  }
  return result;
}

unint64_t sub_1D4463248()
{
  unint64_t result;

  result = qword_1EFE52E40;
  if (!qword_1EFE52E40)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454251C, &type metadata for StaticAsset.DoorKnockDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52E40);
  }
  return result;
}

unint64_t sub_1D4463288()
{
  unint64_t result;

  result = qword_1EFE52E48;
  if (!qword_1EFE52E48)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45424A4, &type metadata for StaticAsset.FireAlarmDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52E48);
  }
  return result;
}

unint64_t sub_1D44632C8()
{
  unint64_t result;

  result = qword_1EFE52E50;
  if (!qword_1EFE52E50)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45424CC, &type metadata for StaticAsset.FireAlarmDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52E50);
  }
  return result;
}

unint64_t sub_1D4463308()
{
  unint64_t result;

  result = qword_1EFE52E58;
  if (!qword_1EFE52E58)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542454, &type metadata for StaticAsset.GlassBreakingDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52E58);
  }
  return result;
}

unint64_t sub_1D4463348()
{
  unint64_t result;

  result = qword_1EFE52E60;
  if (!qword_1EFE52E60)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454247C, &type metadata for StaticAsset.GlassBreakingDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52E60);
  }
  return result;
}

unint64_t sub_1D4463388()
{
  unint64_t result;

  result = qword_1EFE52E68;
  if (!qword_1EFE52E68)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542404, &type metadata for StaticAsset.KettleWhistlingDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52E68);
  }
  return result;
}

unint64_t sub_1D44633C8()
{
  unint64_t result;

  result = qword_1EFE52E70;
  if (!qword_1EFE52E70)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454242C, &type metadata for StaticAsset.KettleWhistlingDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52E70);
  }
  return result;
}

unint64_t sub_1D4463408()
{
  unint64_t result;

  result = qword_1EFE52E78;
  if (!qword_1EFE52E78)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45423B4, &type metadata for StaticAsset.ShoutDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52E78);
  }
  return result;
}

unint64_t sub_1D4463448()
{
  unint64_t result;

  result = qword_1EFE52E80;
  if (!qword_1EFE52E80)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45423DC, &type metadata for StaticAsset.ShoutDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52E80);
  }
  return result;
}

unint64_t sub_1D4463488()
{
  unint64_t result;

  result = qword_1EFE52E88;
  if (!qword_1EFE52E88)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542364, &type metadata for StaticAsset.SirenAlarmDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52E88);
  }
  return result;
}

unint64_t sub_1D44634C8()
{
  unint64_t result;

  result = qword_1EFE52E90;
  if (!qword_1EFE52E90)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454238C, &type metadata for StaticAsset.SirenAlarmDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52E90);
  }
  return result;
}

unint64_t sub_1D4463508()
{
  unint64_t result;

  result = qword_1EFE52E98;
  if (!qword_1EFE52E98)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542314, &type metadata for StaticAsset.WaterRunningDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52E98);
  }
  return result;
}

unint64_t sub_1D4463548()
{
  unint64_t result;

  result = qword_1EFE52EA0;
  if (!qword_1EFE52EA0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454233C, &type metadata for StaticAsset.WaterRunningDetectorE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52EA0);
  }
  return result;
}

unint64_t sub_1D4463588()
{
  unint64_t result;

  result = qword_1EFE52EA8;
  if (!qword_1EFE52EA8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45422C4, &type metadata for StaticAsset.SoundActionsE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52EA8);
  }
  return result;
}

unint64_t sub_1D44635C8()
{
  unint64_t result;

  result = qword_1EFE52EB0;
  if (!qword_1EFE52EB0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45422EC, &type metadata for StaticAsset.SoundActionsE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52EB0);
  }
  return result;
}

unint64_t sub_1D4463608()
{
  unint64_t result;

  result = qword_1EFE52EB8;
  if (!qword_1EFE52EB8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542274, &type metadata for StaticAsset.VggishEmbeddingCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52EB8);
  }
  return result;
}

unint64_t sub_1D4463648()
{
  unint64_t result;

  result = qword_1EFE52EC0;
  if (!qword_1EFE52EC0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454229C, &type metadata for StaticAsset.VggishEmbeddingCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52EC0);
  }
  return result;
}

unint64_t sub_1D4463688()
{
  unint64_t result;

  result = qword_1EFE52EC8;
  if (!qword_1EFE52EC8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542224, &type metadata for StaticAsset.VggishApplauseDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52EC8);
  }
  return result;
}

unint64_t sub_1D44636C8()
{
  unint64_t result;

  result = qword_1EFE52ED0;
  if (!qword_1EFE52ED0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454224C, &type metadata for StaticAsset.VggishApplauseDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52ED0);
  }
  return result;
}

unint64_t sub_1D4463708()
{
  unint64_t result;

  result = qword_1EFE52ED8;
  if (!qword_1EFE52ED8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45421D4, &type metadata for StaticAsset.VggishBabbleDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52ED8);
  }
  return result;
}

unint64_t sub_1D4463748()
{
  unint64_t result;

  result = qword_1EFE52EE0;
  if (!qword_1EFE52EE0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45421FC, &type metadata for StaticAsset.VggishBabbleDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52EE0);
  }
  return result;
}

unint64_t sub_1D4463788()
{
  unint64_t result;

  result = qword_1EFE52EE8;
  if (!qword_1EFE52EE8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542184, &type metadata for StaticAsset.VggishCheeringDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52EE8);
  }
  return result;
}

unint64_t sub_1D44637C8()
{
  unint64_t result;

  result = qword_1EFE52EF0;
  if (!qword_1EFE52EF0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45421AC, &type metadata for StaticAsset.VggishCheeringDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52EF0);
  }
  return result;
}

unint64_t sub_1D4463808()
{
  unint64_t result;

  result = qword_1EFE52EF8;
  if (!qword_1EFE52EF8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542134, &type metadata for StaticAsset.VggishLaughterDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52EF8);
  }
  return result;
}

unint64_t sub_1D4463848()
{
  unint64_t result;

  result = qword_1EFE52F00;
  if (!qword_1EFE52F00)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454215C, &type metadata for StaticAsset.VggishLaughterDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52F00);
  }
  return result;
}

unint64_t sub_1D4463888()
{
  unint64_t result;

  result = qword_1EFE52F08;
  if (!qword_1EFE52F08)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45420E4, &type metadata for StaticAsset.VggishMusicDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52F08);
  }
  return result;
}

unint64_t sub_1D44638C8()
{
  unint64_t result;

  result = qword_1EFE52F10;
  if (!qword_1EFE52F10)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454210C, &type metadata for StaticAsset.VggishMusicDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52F10);
  }
  return result;
}

unint64_t sub_1D4463908()
{
  unint64_t result;

  result = qword_1EFE52F18;
  if (!qword_1EFE52F18)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542094, &type metadata for StaticAsset.VggishSpeechDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52F18);
  }
  return result;
}

unint64_t sub_1D4463948()
{
  unint64_t result;

  result = qword_1EFE52F20;
  if (!qword_1EFE52F20)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45420BC, &type metadata for StaticAsset.VggishSpeechDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52F20);
  }
  return result;
}

unint64_t sub_1D4463988()
{
  unint64_t result;

  result = qword_1EFE52F28;
  if (!qword_1EFE52F28)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542044, &type metadata for StaticAsset.SoundPrintALaughterDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52F28);
  }
  return result;
}

unint64_t sub_1D44639C8()
{
  unint64_t result;

  result = qword_1EFE52F30;
  if (!qword_1EFE52F30)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454206C, &type metadata for StaticAsset.SoundPrintALaughterDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52F30);
  }
  return result;
}

unint64_t sub_1D4463A08()
{
  unint64_t result;

  result = qword_1EFE52F38;
  if (!qword_1EFE52F38)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541FF4, &type metadata for StaticAsset.SoundPrintAShoutingDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52F38);
  }
  return result;
}

unint64_t sub_1D4463A48()
{
  unint64_t result;

  result = qword_1EFE52F40;
  if (!qword_1EFE52F40)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454201C, &type metadata for StaticAsset.SoundPrintAShoutingDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52F40);
  }
  return result;
}

unint64_t sub_1D4463A88()
{
  unint64_t result;

  result = qword_1EFE52F48;
  if (!qword_1EFE52F48)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541FA4, &type metadata for StaticAsset.SoundPrintASpeechDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52F48);
  }
  return result;
}

unint64_t sub_1D4463AC8()
{
  unint64_t result;

  result = qword_1EFE52F50;
  if (!qword_1EFE52F50)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541FCC, &type metadata for StaticAsset.SoundPrintASpeechDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52F50);
  }
  return result;
}

unint64_t sub_1D4463B08()
{
  unint64_t result;

  result = qword_1EFE52F58;
  if (!qword_1EFE52F58)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541F54, &type metadata for StaticAsset.SoundPrintASmokeAlarmDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52F58);
  }
  return result;
}

unint64_t sub_1D4463B48()
{
  unint64_t result;

  result = qword_1EFE52F60;
  if (!qword_1EFE52F60)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541F7C, &type metadata for StaticAsset.SoundPrintASmokeAlarmDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52F60);
  }
  return result;
}

unint64_t sub_1D4463B88()
{
  unint64_t result;

  result = qword_1EFE52F68;
  if (!qword_1EFE52F68)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541F04, &type metadata for StaticAsset.SoundPrint100kSmokeAlarmDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52F68);
  }
  return result;
}

unint64_t sub_1D4463BC8()
{
  unint64_t result;

  result = qword_1EFE52F70;
  if (!qword_1EFE52F70)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541F2C, &type metadata for StaticAsset.SoundPrint100kSmokeAlarmDetectorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52F70);
  }
  return result;
}

unint64_t sub_1D4463C08()
{
  unint64_t result;

  result = qword_1EFE52F78;
  if (!qword_1EFE52F78)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541EB4, &type metadata for StaticAsset.SoundPrint100kEmbeddingCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52F78);
  }
  return result;
}

unint64_t sub_1D4463C48()
{
  unint64_t result;

  result = qword_1EFE52F80;
  if (!qword_1EFE52F80)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541EDC, &type metadata for StaticAsset.SoundPrint100kEmbeddingCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52F80);
  }
  return result;
}

unint64_t sub_1D4463C88()
{
  unint64_t result;

  result = qword_1EFE52F88;
  if (!qword_1EFE52F88)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541E64, &type metadata for StaticAsset.SoundPrintAEmbeddingCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52F88);
  }
  return result;
}

unint64_t sub_1D4463CC8()
{
  unint64_t result;

  result = qword_1EFE52F90;
  if (!qword_1EFE52F90)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541E8C, &type metadata for StaticAsset.SoundPrintAEmbeddingCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52F90);
  }
  return result;
}

unint64_t sub_1D4463D08()
{
  unint64_t result;

  result = qword_1EFE52F98;
  if (!qword_1EFE52F98)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541E14, &type metadata for StaticAsset.SoundPrintKEmbeddingCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52F98);
  }
  return result;
}

unint64_t sub_1D4463D48()
{
  unint64_t result;

  result = qword_1EFE52FA0;
  if (!qword_1EFE52FA0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541E3C, &type metadata for StaticAsset.SoundPrintKEmbeddingCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52FA0);
  }
  return result;
}

unint64_t sub_1D4463D88()
{
  unint64_t result;

  result = qword_1EFE52FA8;
  if (!qword_1EFE52FA8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541DC4, &type metadata for StaticAsset.SoundClassifierVersion1CoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52FA8);
  }
  return result;
}

unint64_t sub_1D4463DC8()
{
  unint64_t result;

  result = qword_1EFE52FB0;
  if (!qword_1EFE52FB0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541DEC, &type metadata for StaticAsset.SoundClassifierVersion1CoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52FB0);
  }
  return result;
}

unint64_t sub_1D4463E08()
{
  unint64_t result;

  result = qword_1EFE52FB8;
  if (!qword_1EFE52FB8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541D74, &type metadata for StaticAsset.IndoorOutdoorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52FB8);
  }
  return result;
}

unint64_t sub_1D4463E48()
{
  unint64_t result;

  result = qword_1EFE52FC0;
  if (!qword_1EFE52FC0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541D9C, &type metadata for StaticAsset.IndoorOutdoorCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52FC0);
  }
  return result;
}

unint64_t sub_1D4463E88()
{
  unint64_t result;

  result = qword_1EFE52FC8;
  if (!qword_1EFE52FC8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541D24, &type metadata for StaticAsset.AudioQualityCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52FC8);
  }
  return result;
}

unint64_t sub_1D4463EC8()
{
  unint64_t result;

  result = qword_1EFE52FD0;
  if (!qword_1EFE52FD0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541D4C, &type metadata for StaticAsset.AudioQualityCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52FD0);
  }
  return result;
}

unint64_t sub_1D4463F08()
{
  unint64_t result;

  result = qword_1EFE52FD8;
  if (!qword_1EFE52FD8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541CD4, &type metadata for StaticAsset.CustomSoundE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52FD8);
  }
  return result;
}

unint64_t sub_1D4463F48()
{
  unint64_t result;

  result = qword_1EFE52FE0;
  if (!qword_1EFE52FE0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541CFC, &type metadata for StaticAsset.CustomSoundE5RTCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52FE0);
  }
  return result;
}

unint64_t sub_1D4463F88()
{
  unint64_t result;

  result = qword_1EFE52FE8;
  if (!qword_1EFE52FE8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541C84, &type metadata for StaticAsset.LanguageAlignedAudioEncoderCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52FE8);
  }
  return result;
}

unint64_t sub_1D4463FC8()
{
  unint64_t result;

  result = qword_1EFE52FF0;
  if (!qword_1EFE52FF0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541CAC, &type metadata for StaticAsset.LanguageAlignedAudioEncoderCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52FF0);
  }
  return result;
}

unint64_t sub_1D4464008()
{
  unint64_t result;

  result = qword_1EFE52FF8;
  if (!qword_1EFE52FF8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541C34, &type metadata for StaticAsset.LanguageAlignedAVFuserCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE52FF8);
  }
  return result;
}

unint64_t sub_1D4464048()
{
  unint64_t result;

  result = qword_1EFE53000;
  if (!qword_1EFE53000)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541C5C, &type metadata for StaticAsset.LanguageAlignedAVFuserCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE53000);
  }
  return result;
}

unint64_t sub_1D4464088()
{
  unint64_t result;

  result = qword_1EFE53008;
  if (!qword_1EFE53008)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541BE4, &type metadata for StaticAsset.StagedLanguageAlignedAudioEncoderCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE53008);
  }
  return result;
}

unint64_t sub_1D44640C8()
{
  unint64_t result;

  result = qword_1EFE53010;
  if (!qword_1EFE53010)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541C0C, &type metadata for StaticAsset.StagedLanguageAlignedAudioEncoderCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE53010);
  }
  return result;
}

unint64_t sub_1D4464108()
{
  unint64_t result;

  result = qword_1EFE53018;
  if (!qword_1EFE53018)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541B94, &type metadata for StaticAsset.StagedLanguageAlignedAVFuserCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE53018);
  }
  return result;
}

unint64_t sub_1D4464148()
{
  unint64_t result;

  result = qword_1EFE53020;
  if (!qword_1EFE53020)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541BBC, &type metadata for StaticAsset.StagedLanguageAlignedAVFuserCoreMLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE53020);
  }
  return result;
}

unint64_t sub_1D4464188()
{
  unint64_t result;

  result = qword_1EFE53028;
  if (!qword_1EFE53028)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541B44, &type metadata for StaticAsset.PpdCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE53028);
  }
  return result;
}

unint64_t sub_1D44641C8()
{
  unint64_t result;

  result = qword_1EFE53030;
  if (!qword_1EFE53030)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541B6C, &type metadata for StaticAsset.PpdCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE53030);
  }
  return result;
}

unint64_t sub_1D4464208()
{
  unint64_t result;

  result = qword_1EFE53038;
  if (!qword_1EFE53038)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541AF4, &type metadata for StaticAsset.MicroSoundPrintClassifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE53038);
  }
  return result;
}

unint64_t sub_1D4464248()
{
  unint64_t result;

  result = qword_1EFE53040;
  if (!qword_1EFE53040)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4541B1C, &type metadata for StaticAsset.MicroSoundPrintClassifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE53040);
  }
  return result;
}

unint64_t sub_1D4464288()
{
  unint64_t result;

  result = qword_1EFE53048;
  if (!qword_1EFE53048)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4542954, &type metadata for StaticAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE53048);
  }
  return result;
}

unint64_t sub_1D44642C8()
{
  unint64_t result;

  result = qword_1EFE53050;
  if (!qword_1EFE53050)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454297C, &type metadata for StaticAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE53050);
  }
  return result;
}

uint64_t sub_1D4464308()
{
  return sub_1D451B610();
}

uint64_t sub_1D4464324()
{
  return sub_1D451B610();
}

uint64_t sub_1D446433C()
{
  return sub_1D451B6F4();
}

uint64_t sub_1D4464354()
{
  return sub_1D451B6F4();
}

uint64_t sub_1D4464368()
{
  uint64_t v0;

  return v0;
}

void sub_1D4464378(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 248) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1D4464394(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1D44643B0()
{
  return swift_unexpectedError();
}

unint64_t sub_1D44643C4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 8;
  return sub_1D44624F4();
}

unint64_t sub_1D44643D0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 30;
  return sub_1D4461FCC();
}

unint64_t sub_1D44643DC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 7;
  return sub_1D4462530();
}

unint64_t sub_1D44643E8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 29;
  return sub_1D4462008();
}

uint64_t sub_1D44643F4(uint64_t a1)
{
  uint64_t v1;

  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v1, 1, 1, a1);
}

unint64_t sub_1D4464418()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 6;
  return sub_1D446256C();
}

unint64_t sub_1D4464424()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 28;
  return sub_1D4462044();
}

unint64_t sub_1D4464430()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 5;
  return sub_1D44625A8();
}

unint64_t sub_1D446443C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 27;
  return sub_1D4462080();
}

unint64_t sub_1D4464448()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 4;
  return sub_1D44625E4();
}

unint64_t sub_1D4464454()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 26;
  return sub_1D44620BC();
}

unint64_t sub_1D4464460()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 3;
  return sub_1D4462620();
}

unint64_t sub_1D446446C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 25;
  return sub_1D44620F8();
}

unint64_t sub_1D4464478()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 24;
  return sub_1D4462134();
}

unint64_t sub_1D4464484()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_1D446265C();
}

unint64_t sub_1D4464490()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 23;
  return sub_1D4462170();
}

unint64_t sub_1D446449C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 45;
  return sub_1D4461C48();
}

unint64_t sub_1D44644A8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 22;
  return sub_1D44621AC();
}

unint64_t sub_1D44644B4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_1D4462698();
}

unint64_t sub_1D44644C0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 44;
  return sub_1D4461C84();
}

unint64_t sub_1D44644CC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 21;
  return sub_1D44621E8();
}

unint64_t sub_1D44644D8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 43;
  return sub_1D4461CC0();
}

void sub_1D44644E4()
{
  sub_1D442F89C();
}

unint64_t sub_1D44644F0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 42;
  return sub_1D4461CFC();
}

unint64_t sub_1D44644FC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 20;
  return sub_1D4462224();
}

unint64_t sub_1D4464508()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 41;
  return sub_1D4461D38();
}

unint64_t sub_1D4464514()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 19;
  return sub_1D4462260();
}

unint64_t sub_1D4464520()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 40;
  return sub_1D4461D74();
}

unint64_t sub_1D446452C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 18;
  return sub_1D446229C();
}

unint64_t sub_1D4464538()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 17;
  return sub_1D44622D8();
}

unint64_t sub_1D4464544()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 39;
  return sub_1D4461DB0();
}

unint64_t sub_1D4464550()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 16;
  return sub_1D4462314();
}

unint64_t sub_1D446455C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 38;
  return sub_1D4461DEC();
}

unint64_t sub_1D4464568()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 15;
  return sub_1D4462350();
}

unint64_t sub_1D4464574()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 37;
  return sub_1D4461E28();
}

unint64_t sub_1D4464580()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 14;
  return sub_1D446238C();
}

unint64_t sub_1D446458C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 36;
  return sub_1D4461E64();
}

uint64_t sub_1D4464598()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1D44645A4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 13;
  return sub_1D44623C8();
}

unint64_t sub_1D44645B0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 35;
  return sub_1D4461EA0();
}

unint64_t sub_1D44645BC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 12;
  return sub_1D4462404();
}

unint64_t sub_1D44645C8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 34;
  return sub_1D4461EDC();
}

unint64_t sub_1D44645D4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 11;
  return sub_1D4462440();
}

unint64_t sub_1D44645E0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 33;
  return sub_1D4461F18();
}

unint64_t sub_1D44645EC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 10;
  return sub_1D446247C();
}

unint64_t sub_1D44645F8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 32;
  return sub_1D4461F54();
}

unint64_t sub_1D4464604()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 9;
  return sub_1D44624B8();
}

unint64_t sub_1D4464610()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 31;
  return sub_1D4461F90();
}

uint64_t sub_1D446461C()
{
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  return sub_1D451B988();
}

BOOL sub_1D44646C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  double v8;
  double v9;
  double v10;
  double v11;
  BOOL v12;
  _BOOL8 result;

  v9 = *(double *)(a1 + 48);
  v8 = *(double *)(a1 + 56);
  v11 = *(double *)(a2 + 48);
  v10 = *(double *)(a2 + 56);
  v12 = sub_1D42D83FC(a1, a2, a3, a4, a5, a6, a7, a8, *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 32), *(_QWORD *)(a2 + 40), *(_QWORD *)a1);
  result = 0;
  if (v12 && v9 == v11)
    return v8 == v10;
  return result;
}

uint64_t sub_1D4464764(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x676E6152656D6974 && a2 == 0xE900000000000065;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x74657366666FLL && a2 == 0xE600000000000000;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1D451B820();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1D44648C0(char a1)
{
  if (!a1)
    return 0x676E6152656D6974;
  if (a1 == 1)
    return 0x74657366666FLL;
  return 0x6E656469666E6F63;
}

uint64_t sub_1D446491C(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v2 = v1;
  v4 = sub_1D42B28FC((uint64_t *)&unk_1EFE53088);
  v15 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  v8 = v2[2];
  v9 = v2[3];
  v14 = v2[5];
  sub_1D42B5528(a1, a1[3]);
  sub_1D4465B64();
  sub_1D451BA24();
  v17 = v7;
  v18 = v2[1];
  v19 = v8;
  v20 = v9;
  v21 = v2[4];
  v22 = v14;
  v23 = 0;
  sub_1D42CA408();
  v10 = v16;
  sub_1D451B760();
  if (v10)
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v6, v4);
  v12 = v15;
  LOBYTE(v17) = 1;
  sub_1D4360568();
  LOBYTE(v17) = 2;
  sub_1D4360568();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v6, v4);
}

uint64_t sub_1D4464AA8()
{
  sub_1D451B958();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B988();
  return sub_1D451B994();
}

uint64_t sub_1D4464B98@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = sub_1D42B28FC(&qword_1EFE53070);
  MEMORY[0x1E0C80A78](v5);
  sub_1D42B5528(a1, a1[3]);
  sub_1D4465B64();
  sub_1D451BA0C();
  if (!v2)
  {
    sub_1D42CA3CC();
    sub_1D451B688();
    sub_1D4360550(1);
    v8 = v7;
    sub_1D4360550(2);
    v10 = v9;
    sub_1D42CB3CC();
    *a2 = v11;
    a2[1] = v12;
    a2[2] = v13;
    a2[3] = v14;
    a2[4] = v15;
    a2[5] = v16;
    a2[6] = v8;
    a2[7] = v10;
  }
  return sub_1D42B5400((uint64_t)a1);
}

uint64_t sub_1D4464D30()
{
  char *v0;

  return sub_1D44648C0(*v0);
}

uint64_t sub_1D4464D38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D4464764(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D4464D5C()
{
  sub_1D4465B64();
  return sub_1D451BA3C();
}

uint64_t sub_1D4464D84()
{
  sub_1D4465B64();
  return sub_1D451BA48();
}

uint64_t sub_1D4464DB4()
{
  sub_1D451B958();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B988();
  return sub_1D451B994();
}

uint64_t sub_1D4464EA0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1D4464B98(a1, a2);
}

uint64_t sub_1D4464EB4(_QWORD *a1)
{
  return sub_1D446491C(a1);
}

double SNAudioOffsetResult.timeRange.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = v1 + OBJC_IVAR___SNAudioOffsetResult_impl;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl + 40);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(v2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 + 16);
  result = *(double *)(v2 + 32);
  *(double *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v3;
  return result;
}

double SNAudioOffsetResult.timeRange.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = v1 + OBJC_IVAR___SNAudioOffsetResult_impl;
  *(_QWORD *)v3 = *(_QWORD *)a1;
  *(_QWORD *)(v3 + 8) = *(_QWORD *)(a1 + 8);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a1 + 16);
  result = *(double *)(a1 + 32);
  *(double *)(v3 + 32) = result;
  *(_QWORD *)(v3 + 40) = v2;
  return result;
}

double (*SNAudioOffsetResult.timeRange.modify(_QWORD *a1))(void **a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  SNAudioOffsetResult.timeRange.getter((uint64_t)v3);
  return sub_1D4465034;
}

double sub_1D4465034(void **a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  double result;

  v1 = *a1;
  v2 = v1[5];
  v3 = v1[6] + OBJC_IVAR___SNAudioOffsetResult_impl;
  v4 = v1[1];
  v5 = v1[4];
  v6 = *((_OWORD *)v1 + 1);
  *(_QWORD *)v3 = *v1;
  *(_QWORD *)(v3 + 8) = v4;
  *(_OWORD *)(v3 + 16) = v6;
  *(_QWORD *)(v3 + 32) = v5;
  *(_QWORD *)(v3 + 40) = v2;
  free(v1);
  return result;
}

double SNAudioOffsetResult.offset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___SNAudioOffsetResult_impl + 48);
}

void SNAudioOffsetResult.offset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl + 48) = a1;
}

double (*SNAudioOffsetResult.offset.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR___SNAudioOffsetResult_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(_QWORD *)(v1 + v2 + 48);
  return sub_1D4315264;
}

double SNAudioOffsetResult.confidence.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___SNAudioOffsetResult_impl + 56);
}

void SNAudioOffsetResult.confidence.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl + 56) = a1;
}

double (*SNAudioOffsetResult.confidence.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR___SNAudioOffsetResult_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(_QWORD *)(v1 + v2 + 56);
  return sub_1D439EED0;
}

id sub_1D4465190()
{
  char *v0;
  objc_class *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  objc_super v6;

  v1 = (objc_class *)sub_1D42B7104();
  v2 = MEMORY[0x1E0CA2E40];
  v3 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 40);
  v4 = &v0[OBJC_IVAR___SNAudioOffsetResult_impl];
  *(_QWORD *)v4 = *MEMORY[0x1E0CA2E40];
  *((_QWORD *)v4 + 1) = *(_QWORD *)(v2 + 8);
  *((_OWORD *)v4 + 1) = *(_OWORD *)(v2 + 16);
  *((_QWORD *)v4 + 4) = *(_QWORD *)(v2 + 32);
  *((_QWORD *)v4 + 5) = v3;
  *((_QWORD *)v4 + 6) = 0;
  *((_QWORD *)v4 + 7) = 0;
  v6.receiver = v0;
  v6.super_class = v1;
  return objc_msgSendSuper2(&v6, sel_init);
}

id sub_1D4465220()
{
  uint64_t v0;
  objc_class *v1;
  char *v2;
  uint64_t v3;
  char *v4;
  objc_super v6;

  v2 = (char *)sub_1D42B7238();
  v3 = *(_QWORD *)(v0 + 40);
  v4 = &v2[OBJC_IVAR___SNAudioOffsetResult_impl];
  *(_QWORD *)v4 = *(_QWORD *)v0;
  *((_QWORD *)v4 + 1) = *(_QWORD *)(v0 + 8);
  *((_OWORD *)v4 + 1) = *(_OWORD *)(v0 + 16);
  *((_QWORD *)v4 + 4) = *(_QWORD *)(v0 + 32);
  *((_QWORD *)v4 + 5) = v3;
  *((_OWORD *)v4 + 3) = *(_OWORD *)(v0 + 48);
  v6.receiver = v2;
  v6.super_class = v1;
  return objc_msgSendSuper2(&v6, sel_init);
}

id SNAudioOffsetResult.copy(with:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  id result;

  v2 = sub_1D42B7104();
  sub_1D4465D2C(OBJC_IVAR___SNAudioOffsetResult_impl);
  result = sub_1D4465220();
  a1[3] = v2;
  *a1 = result;
  return result;
}

uint64_t SNAudioOffsetResult.hash.getter()
{
  sub_1D4465D2C(OBJC_IVAR___SNAudioOffsetResult_impl);
  return sub_1D4464AA8();
}

BOOL SNAudioOffsetResult.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  BOOL v19;
  _BOOL8 v20;
  char *v22;
  _QWORD v23[2];
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD v27[2];
  __int128 v28;
  uint64_t v29;

  sub_1D42B7104();
  sub_1D42B28B4(a1, (uint64_t)&v28);
  if (!v29)
    return 0;
  sub_1D42B293C(&v28, v27);
  sub_1D42B294C((uint64_t)v27, (uint64_t)v23);
  v3 = swift_dynamicCast();
  if ((_DWORD)v3)
  {
    v11 = v22;
    v12 = *(_QWORD *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl + 40);
    v14 = *(double *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl + 48);
    v13 = *(double *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl + 56);
    v15 = *(_QWORD *)&v22[OBJC_IVAR___SNAudioOffsetResult_impl];
    v16 = *(_QWORD *)&v22[OBJC_IVAR___SNAudioOffsetResult_impl + 40];
    v18 = *(double *)&v22[OBJC_IVAR___SNAudioOffsetResult_impl + 48];
    v17 = *(double *)&v22[OBJC_IVAR___SNAudioOffsetResult_impl + 56];
    v23[0] = *(_QWORD *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl);
    v23[1] = *(_QWORD *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl + 8);
    v24 = *(_OWORD *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl + 16);
    v25 = *(_QWORD *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl + 32);
    v26 = v12;
    v19 = sub_1D42D83FC(v3, v4, v5, v6, v7, v8, v9, v10, v15, *(_QWORD *)&v22[OBJC_IVAR___SNAudioOffsetResult_impl + 8], *(_QWORD *)&v22[OBJC_IVAR___SNAudioOffsetResult_impl + 16], *(_QWORD *)&v22[OBJC_IVAR___SNAudioOffsetResult_impl + 24], *(_QWORD *)&v22[OBJC_IVAR___SNAudioOffsetResult_impl + 32], v16, v23[0]);

    v20 = 0;
    if (v19 && v14 == v18)
      v20 = v13 == v17;
  }
  else
  {
    v20 = 0;
  }
  sub_1D42B5400((uint64_t)v27);
  return v20;
}

id SNAudioOffsetResult.__allocating_init(coder:)()
{
  void *v0;

  sub_1D42B7238();
  return SNAudioOffsetResult.init(coder:)(v0);
}

id SNAudioOffsetResult.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  id v4;

  v3 = v1;
  sub_1D42B224C();
  swift_getObjectType();

  v4 = sub_1D4465220();
  sub_1D432BF64();
  return v4;
}

Swift::Void __swiftcall SNAudioOffsetResult.encode(with:)(NSCoder with)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  _OWORD v4[4];

  v2 = *(_OWORD *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl + 16);
  v4[0] = *(_OWORD *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl);
  v4[1] = v2;
  v3 = *(_OWORD *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl + 48);
  v4[2] = *(_OWORD *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl + 32);
  v4[3] = v3;
  sub_1D42B081C((uint64_t)v4, 1819307369, 0xE400000000000000, (uint64_t)with.super.isa);
}

uint64_t static SNAudioOffsetResult.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t SNAudioOffsetResult.description.getter()
{
  void *v0;
  objc_class *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  _QWORD v11[6];
  objc_super v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = (objc_class *)sub_1D42B7104();
  v15 = 0;
  v16 = 0xE000000000000000;
  sub_1D451B400();
  v13 = 0;
  v14 = 0xE000000000000000;
  v12.receiver = v0;
  v12.super_class = v1;
  v2 = objc_msgSendSuper2(&v12, sel_description);
  sub_1D451A6EC();
  sub_1D42B722C();
  sub_1D42B7190();
  swift_bridgeObjectRelease();
  sub_1D451A794();
  sub_1D4360578();
  sub_1D451A794();
  sub_1D4360578();
  sub_1D451A794();
  SNAudioOffsetResult.timeRange.getter((uint64_t)&v15);
  v3 = v15;
  v4 = v17;
  v5 = v18;
  v6 = v20;
  v7 = (void *)objc_opt_self();
  v11[0] = v3;
  v11[1] = v16;
  v11[2] = v4;
  v11[3] = v5;
  v11[4] = v19;
  v11[5] = v6;
  v8 = objc_msgSend(v7, sel_valueWithCMTimeRange_, v11);
  v9 = objc_msgSend(v8, sel_description);
  sub_1D451A6EC();
  sub_1D42B722C();
  sub_1D42B7190();

  swift_bridgeObjectRelease();
  return v13;
}

id SNAudioOffsetResult.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1D42B7104();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D44659CC(uint64_t a1@<X8>)
{
  SNAudioOffsetResult.timeRange.getter(a1);
  sub_1D42B6E24();
}

void sub_1D44659E8(uint64_t a1)
{
  SNAudioOffsetResult.timeRange.setter(a1);
  sub_1D42B6E24();
}

void sub_1D4465A04(double *a1@<X8>)
{
  *a1 = SNAudioOffsetResult.offset.getter();
  sub_1D42B6E24();
}

void sub_1D4465A28(double *a1)
{
  SNAudioOffsetResult.offset.setter(*a1);
  sub_1D42B6E24();
}

void sub_1D4465A48(double *a1@<X8>)
{
  *a1 = SNAudioOffsetResult.confidence.getter();
  sub_1D42B6E24();
}

void sub_1D4465A6C(double *a1)
{
  SNAudioOffsetResult.confidence.setter(*a1);
  sub_1D42B6E24();
}

uint64_t type metadata accessor for SNAudioOffsetResult()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNAudioOffsetResult()
{
  return swift_lookUpClassMethod();
}

uint64_t getEnumTagSinglePayload for AudioOffsetResult(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AudioOffsetResult(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 64) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AudioOffsetResult()
{
  return &type metadata for AudioOffsetResult;
}

unint64_t sub_1D4465B28()
{
  unint64_t result;

  result = qword_1EFE53068;
  if (!qword_1EFE53068)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4543914, &type metadata for AudioOffsetResult);
    atomic_store(result, (unint64_t *)&qword_1EFE53068);
  }
  return result;
}

unint64_t sub_1D4465B64()
{
  unint64_t result;

  result = qword_1EFE53078;
  if (!qword_1EFE53078)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4543A90, &type metadata for AudioOffsetResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE53078);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AudioOffsetResult.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D4465BEC + 4 * byte_1D45438C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D4465C20 + 4 * byte_1D45438C0[v4]))();
}

uint64_t sub_1D4465C20(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4465C28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4465C30);
  return result;
}

uint64_t sub_1D4465C3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4465C44);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D4465C48(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4465C50(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioOffsetResult.CodingKeys()
{
  return &type metadata for AudioOffsetResult.CodingKeys;
}

unint64_t sub_1D4465C70()
{
  unint64_t result;

  result = qword_1EFE53098;
  if (!qword_1EFE53098)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4543A68, &type metadata for AudioOffsetResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE53098);
  }
  return result;
}

unint64_t sub_1D4465CB0()
{
  unint64_t result;

  result = qword_1EFE530A0;
  if (!qword_1EFE530A0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45439D8, &type metadata for AudioOffsetResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE530A0);
  }
  return result;
}

unint64_t sub_1D4465CF0()
{
  unint64_t result;

  result = qword_1EFE530A8;
  if (!qword_1EFE530A8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4543A00, &type metadata for AudioOffsetResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE530A8);
  }
  return result;
}

__n128 sub_1D4465D2C@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(__n128 *)(v1 + a1 + 48);
}

uint64_t sub_1D4465D64(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 36) = 1;
  *(_QWORD *)(v1 + 40) = a1;
  return v1;
}

id sub_1D4465D80(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  char v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  unsigned int v36;
  unsigned int v37;
  _BYTE *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  id v51;
  _BYTE *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  __int128 *v70;
  uint64_t v71;
  id v72;
  unsigned int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  __int128 *v80;
  uint64_t v81;
  id v82;
  unsigned int v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  __int128 *v90;
  uint64_t v91;
  id v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  void *v107;
  void *v108;
  id v109[8];

  v109[7] = *(id *)MEMORY[0x1E0C80C00];
  v3 = objc_opt_self();
  v109[0] = 0;
  v4 = sub_1D45001AC(v3, (uint64_t)v109);
  if (!v4)
  {
    v48 = v109[0];
    sub_1D4519AA4();

    sub_1D42B6F54();
    return v4;
  }
  v5 = v109[0];
  v6 = (void *)sub_1D451A6C8();
  sub_1D44F5D78((uint64_t)v4, v6);

  v7 = (void *)sub_1D451A6C8();
  v109[0] = 0;
  v8 = sub_1D44FD014(v3, v4, v7, (uint64_t)v109);

  if (!v8)
  {
    v49 = v109[0];
    sub_1D4519AA4();

    sub_1D42B6F54();
    goto LABEL_15;
  }
  v9 = v109[0];
  sub_1D451A6C8();
  v10 = sub_1D44665F4();
  v14 = sub_1D44FEE98(v10, v11, v12, v13);

  v15 = v109[0];
  if (!v14)
  {
    v50 = v109[0];
    sub_1D4519AA4();

    sub_1D42B6F54();
    goto LABEL_15;
  }
  v16 = v109[0];
  sub_1D451A6C8();
  v17 = sub_1D44665F4();
  v21 = sub_1D44FF500(v17, v18, v19, v20);

  v22 = v109[0];
  v107 = v21;
  if (!v21)
  {
    v51 = v109[0];
    sub_1D4519AA4();

    sub_1D42B6F54();
    goto LABEL_15;
  }
  v109[6] = &unk_1EFEAADC8;
  v23 = swift_dynamicCastObjCProtocolConditional();
  if (!v23)
  {
    sub_1D42CF6E8();
    sub_1D42B6D0C();
    *v53 = 7;
    v54 = v22;
    sub_1D42B6F54();

    sub_1D4466624(v55, v56, v57, v58, v59, v60, v61, v62, v104, v105, v21);
    return v4;
  }
  v24 = (void *)v23;
  v109[0] = 0;
  v25 = v22;
  swift_unknownObjectRetain();
  v26 = sub_1D44FF7D0(v3, v21, v24, (uint64_t)v109);
  v27 = v109[0];
  if ((v26 & 1) == 0)
  {
    v63 = v109[0];
    sub_1D4466610();
    sub_1D446661C();
    sub_1D42B6F54();

    swift_unknownObjectRelease();
    return v4;
  }
  v28 = v109[0];
  swift_unknownObjectRelease();
  sub_1D451A6C8();
  v29 = sub_1D44665F4();
  v33 = sub_1D44FD2A4(v29, v30, v31, v32);

  v34 = v33;
  v35 = v109[0];
  if (!v34)
  {
    v64 = v109[0];
    sub_1D4519AA4();

    sub_1D42B6F54();
    goto LABEL_15;
  }
  v36 = *(_DWORD *)(a1 + OBJC_IVAR____TtC13SoundAnalysis41SNSoundPrintFeatureExtractorConfiguration_stepSizeFrames);
  if (v36)
  {
    v37 = *(_DWORD *)(a1 + OBJC_IVAR____TtC13SoundAnalysis41SNSoundPrintFeatureExtractorConfiguration_windowLengthFrames);
    if (v37 >= v36)
    {
      v106 = v34;
      v65 = v109[0];
      sub_1D450053C(0x3E80u, 1, 1, (uint64_t)v109);
      v66 = sub_1D44665BC();
      if (sub_1D42F1E90(v66, v67, v8, v14, v68, v69, v70, v71))
      {
        v72 = v108;
        sub_1D446662C();
        sub_1D4500620(v73, v74, v37, 1, v75);
        v76 = sub_1D44665BC();
        if (sub_1D42F1E90(v76, v77, v14, v107, v78, v79, v80, v81))
        {
          v82 = v108;
          sub_1D446662C();
          sub_1D4500620(v83, v84, 512, 1, v85);
          v86 = sub_1D44665BC();
          if (sub_1D42F1E90(v86, v87, v107, v34, v88, v89, v90, v91))
          {
            v92 = v108;
            sub_1D44F3DE8((uint64_t)v4);
            sub_1D44F44A0((uint64_t)v4);

            return v4;
          }
          v103 = v108;
          sub_1D4466610();
          sub_1D446661C();
          sub_1D42B6F54();

          goto LABEL_15;
        }
        v102 = v108;
        sub_1D4466610();
        sub_1D446661C();
        sub_1D42B6F54();

      }
      else
      {
        v93 = v108;
        sub_1D4466610();
        sub_1D446661C();
        sub_1D42B6F54();

        sub_1D4466624(v94, v95, v96, v97, v98, v99, v100, v101, v104, (uint64_t)v34, v107);
      }

LABEL_15:
      return v4;
    }
  }
  sub_1D4466438();
  sub_1D42B6D0C();
  *v38 = 0;
  v39 = v35;
  sub_1D42B6F54();

  sub_1D4466624(v40, v41, v42, v43, v44, v45, v46, v47, v104, v105, v107);
  return v4;
}

id sub_1D4466288()
{
  uint64_t v0;
  void *v1;
  _BYTE *v3;

  v1 = *(void **)(v0 + 16);
  if (v1)
    return v1;
  sub_1D4466438();
  sub_1D42B6D0C();
  *v3 = 1;
  return (id)swift_willThrow();
}

void sub_1D44662E0(int a1, double a2)
{
  double *v2;
  uint64_t v3;
  double v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v6 = *v2;
  if ((*((_BYTE *)v2 + 36) & 1) != 0 || (v2[3] == a2 ? (v7 = *((_DWORD *)v2 + 8) == a1) : (v7 = 0), !v7))
  {
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v2;
    *(double *)(v8 + 24) = v6;
    swift_retain();
    v9 = sub_1D42CEEA4();
    swift_release();
    if (!v3)
    {
      v10 = (void *)*((_QWORD *)v2 + 2);
      *((_QWORD *)v2 + 2) = v9;

      v2[3] = a2;
      *((_DWORD *)v2 + 8) = a1;
      *((_BYTE *)v2 + 36) = 0;
    }
  }
}

void sub_1D446639C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v4;
  id v5;

  v4 = *(id *)(a1 + 40);
  v5 = sub_1D4465D80((uint64_t)v4);

  if (!v2)
    *a2 = v5;
}

uint64_t type metadata accessor for SNSoundPrintFeatureExtractor()
{
  return objc_opt_self();
}

void sub_1D4466410(int a1, double a2)
{
  sub_1D44662E0(a1, a2);
}

id sub_1D4466424()
{
  return sub_1D4466288();
}

unint64_t sub_1D4466438()
{
  unint64_t result;

  result = qword_1EFE530B0;
  if (!qword_1EFE530B0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4543BB4, &type metadata for SNSoundPrintFeatureExtractor.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE530B0);
  }
  return result;
}

uint64_t sub_1D4466474()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1D4466498(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1D446639C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t storeEnumTagSinglePayload for SNSoundPrintFeatureExtractor.DomainError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D44664FC + 4 * byte_1D4543AE5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D4466530 + 4 * byte_1D4543AE0[v4]))();
}

uint64_t sub_1D4466530(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4466538(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4466540);
  return result;
}

uint64_t sub_1D446654C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4466554);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D4466558(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4466560(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SNSoundPrintFeatureExtractor.DomainError()
{
  return &type metadata for SNSoundPrintFeatureExtractor.DomainError;
}

unint64_t sub_1D4466580()
{
  unint64_t result;

  result = qword_1EFE530C0;
  if (!qword_1EFE530C0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4543B8C, &type metadata for SNSoundPrintFeatureExtractor.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE530C0);
  }
  return result;
}

uint64_t sub_1D44665BC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D44665F4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4466610()
{
  return sub_1D4519AA4();
}

void sub_1D446661C()
{
  void *v0;

}

void sub_1D4466624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

}

uint64_t sub_1D446662C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4466664()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___SNBooleanCancellable_isCancelled);
}

uint64_t sub_1D4466698(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR___SNBooleanCancellable_isCancelled) = result;
  return result;
}

id sub_1D44666A8()
{
  _BYTE *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType();
  v0[OBJC_IVAR___SNBooleanCancellable_isCancelled] = 0;
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_init);
}

void sub_1D4466708()
{
  uint64_t v0;

  *(_BYTE *)(v0 + OBJC_IVAR___SNBooleanCancellable_isCancelled) = 1;
}

uint64_t type metadata accessor for SNBooleanCancellable()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for NativeModelCompileUtils()
{
  return &type metadata for NativeModelCompileUtils;
}

uint64_t sub_1D446676C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  type metadata accessor for LogMelState();
  swift_allocObject();
  result = sub_1D4459570(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1D44667C8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_1D42B28FC(&qword_1EFE53160);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42B5528(a1, a1[3]);
  sub_1D4467640();
  sub_1D451BA24();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1D446688C()
{
  sub_1D4467640();
  return sub_1D451BA3C();
}

uint64_t sub_1D44668B4()
{
  sub_1D4467640();
  return sub_1D451BA48();
}

uint64_t sub_1D44668DC(_QWORD *a1)
{
  return sub_1D44667C8(a1);
}

_UNKNOWN **sub_1D44668F0()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for SNAudioOffsetEstimator();
  v1 = sub_1D42B6F40();
  sub_1D4466D84();
  if (v0)
    return &off_1E97A6E90;
  else
    return (_UNKNOWN **)v1;
}

id SNEstimateAudioOffsetRequest.copy(with:)@<X0>(_QWORD *a1@<X8>)
{
  objc_class *ObjectType;
  id result;
  objc_super v4;

  ObjectType = (objc_class *)swift_getObjectType();
  v4.receiver = objc_allocWithZone(ObjectType);
  v4.super_class = ObjectType;
  result = objc_msgSendSuper2(&v4, sel_init);
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

void SNEstimateAudioOffsetRequest.hash.getter()
{
  sub_1D42BE9A8();
  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t SNEstimateAudioOffsetRequest.isEqual(_:)(uint64_t a1)
{
  uint64_t v2;
  void *v4;
  _BYTE v5[32];
  _OWORD v6[2];
  __int128 v7;
  uint64_t v8;

  sub_1D42B7104();
  sub_1D42B28B4(a1, (uint64_t)&v7);
  if (!v8)
    return 0;
  sub_1D42B293C(&v7, v6);
  sub_1D42B294C((uint64_t)v6, (uint64_t)v5);
  v2 = swift_dynamicCast();
  if ((_DWORD)v2)

  sub_1D42B5400((uint64_t)v6);
  return v2;
}

id SNEstimateAudioOffsetRequest.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return SNEstimateAudioOffsetRequest.init(coder:)(a1);
}

id SNEstimateAudioOffsetRequest.init(coder:)(void *a1)
{
  void *v1;
  void *v2;
  objc_class *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  objc_super v10;

  v2 = v1;
  v4 = (objc_class *)sub_1D42CFC30();
  v5 = v2;
  v6 = sub_1D42F3A74();
  sub_1D42B2324(v6, v7, (uint64_t)a1);

  v10.receiver = objc_allocWithZone(v4);
  v10.super_class = v4;
  v8 = objc_msgSendSuper2(&v10, sel_init);

  sub_1D42CFC30();
  sub_1D42F3A54();
  return v8;
}

Swift::Void __swiftcall SNEstimateAudioOffsetRequest.encode(with:)(NSCoder with)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1D42F3A74();
  sub_1D42B09B0(v2, v3, v1);
}

uint64_t static SNEstimateAudioOffsetRequest.supportsSecureCoding.getter()
{
  return 1;
}

id SNEstimateAudioOffsetRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1D42B7104();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_UNKNOWN **sub_1D4466D44()
{
  return sub_1D44668F0();
}

uint64_t type metadata accessor for SNEstimateAudioOffsetRequest()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNEstimateAudioOffsetRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1D4466D84()
{
  double *v0;
  uint64_t v1;
  double *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  void *v14;
  id v15;
  float v16;
  float v17;
  double v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;

  v2 = v0;
  v3 = *(_QWORD *)v0;
  v4 = sub_1D42B28FC(qword_1EFE47450);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[2] = 0.0;
  type metadata accessor for SNFileUtils();
  sub_1D44D2CD0((uint64_t)v6);
  v7 = sub_1D4519BC4();
  result = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v6, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v9 = sub_1D4519B94();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    v12 = (_QWORD *)sub_1D42B6F40();
    v12[2] = v9;
    v12[3] = v11;
    v12[4] = v3;
    v13 = (void *)sub_1D42CEEA4();
    swift_release();
    if (v1)
    {

      swift_deallocPartialClassInstance();
    }
    else
    {
      v14 = (void *)*((_QWORD *)v2 + 2);
      *((_QWORD *)v2 + 2) = v13;
      v2[3] = 0.0;
      v15 = v13;

      sub_1D4467854(1);
      v17 = v16;
      sub_1D4467854(5);
      sub_1D4467854(6);
      sub_1D4467854(7);

      v18 = 0.0;
      v19 = 0;
      if (v17 > 0.0)
      {
        v20 = sub_1D4467864();
        v18 = sub_1D446783C(v20, v21, v22, v23, 1000.0);
      }
      *((_QWORD *)v2 + 4) = v19;
      v2[5] = v18;
    }
    return (uint64_t)v2;
  }
  return result;
}

uint64_t sub_1D4466F70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1D4466F98();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_1D4466F98()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;

  sub_1D42B28FC((uint64_t *)&unk_1EFE403F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D45295F0;
  *(_QWORD *)(inited + 32) = sub_1D42F3A34();
  *(_QWORD *)(inited + 40) = sub_1D42F3A34();
  sub_1D448D2D0(inited);
  v2 = v1;
  swift_setDeallocating();
  sub_1D43476B8();
  v3 = objc_allocWithZone((Class)type metadata accessor for SNDSPConfiguration());
  swift_bridgeObjectRetain();
  v4 = sub_1D43A1230(v2);
  v5 = type metadata accessor for SNDSPGraphLoader();
  sub_1D439F93C((uint64_t)v4);
  if (v6)
  {
    v5 = v6;
    sub_1D44F3DE8(v6);
    sub_1D44F44A0(v5);
  }
  else
  {
    sub_1D42B7F2C();
    sub_1D42B6D0C();
    *v7 = 0;
    swift_willThrow();
  }

  return v5;
}

uint64_t sub_1D44670D8(void *a1, int64_t a2)
{
  CMTimeValue value;
  uint64_t v3;
  CMTimeValue v4;
  id v7;
  void *v8;
  float v9;
  float v10;
  uint64_t result;
  id v12;
  id v13;
  double v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  double v19;
  float v20;
  float v21;
  float v22;
  float v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  int64_t v28;
  CMTimeValue v29;
  uint64_t v30;
  CMTimeEpoch epoch;
  id v32;
  uint64_t v33;
  char *v34;
  CMTimeValue v35;
  char *v36;
  CMTimeRange v37;
  CMTime duration;
  CMTime start;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  CMTimeRange v45;
  uint64_t v46;

  v4 = value;
  v46 = *MEMORY[0x1E0C80C00];
  v7 = sub_1D446749C();
  if (v3)
    return value;
  v8 = v7;
  sub_1D4467834(1);
  v10 = v9;

  v12 = sub_1D4467828();
  sub_1D4467834(5);

  v13 = sub_1D4467828();
  sub_1D4467834(6);

  sub_1D4467828();
  sub_1D4467834(7);
  sub_1D446785C();
  v14 = 0.0;
  v15 = 0;
  if (v10 > 0.0)
  {
    v16 = sub_1D4467864();
    v14 = sub_1D446783C(v16, v17, v18, v19, 1000.0);
  }
  *(_QWORD *)(v4 + 32) = v15;
  *(double *)(v4 + 40) = v14;
  sub_1D4467828();
  sub_1D4467834(3);
  v21 = v20;
  sub_1D446785C();
  sub_1D4467828();
  sub_1D4467834(4);
  v23 = v22;
  sub_1D446785C();
  v36 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SNAudioOffsetResult()), sel_init);
  v24 = objc_opt_self();
  v37.start.value = 0;
  v25 = sub_1D4500E1C(v24, a1, (uint64_t)&v37);
  value = v37.start.value;
  if (!v25)
  {
    v32 = (id)v37.start.value;
    sub_1D4519AA4();

    swift_willThrow();
    return value;
  }
  v26 = v25;
  v27 = (id)v37.start.value;
  v28 = sub_1D451B928();
  result = sub_1D44F2078((uint64_t)a1);
  if ((result & 0x80000000) != 0)
  {
    __break(1u);
  }
  else
  {
    CMTimeMake(&v37.start, v28, result);
    v29 = v37.start.value;
    v30 = *(_QWORD *)&v37.start.timescale;
    epoch = v37.start.epoch;
    result = sub_1D44F2078((uint64_t)a1);
    if ((result & 0x80000000) == 0)
    {
      CMTimeMake(&v37.start, a2, result);
      duration = v37.start;
      start.value = v29;
      *(_QWORD *)&start.timescale = v30;
      start.epoch = epoch;
      CMTimeRangeMake(&v37, &start, &duration);
      v45 = v37;
      sub_1D438C6B8();
      sub_1D451AEE4();
      sub_1D438C6B8();
      sub_1D451AEF0();
      v33 = v44;
      v34 = &v36[OBJC_IVAR___SNAudioOffsetResult_impl];
      *(_QWORD *)v34 = v40;
      *((_QWORD *)v34 + 1) = v41;
      *((_OWORD *)v34 + 1) = v42;
      *((_QWORD *)v34 + 4) = v43;
      *((_QWORD *)v34 + 5) = v33;
      *((double *)v34 + 6) = *(double *)(v4 + 32) + v23;
      *((double *)v34 + 7) = v21;
      sub_1D42B28FC(&qword_1EFE40410);
      v35 = sub_1D42B6F40();
      *(_OWORD *)(v35 + 16) = xmmword_1D4525300;
      *(_QWORD *)(v35 + 32) = v36;
      v37.start.value = v35;
      sub_1D451A950();
      value = v37.start.value;

      return value;
    }
  }
  __break(1u);
  return result;
}

id sub_1D446749C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  if (v1)
    return v1;
  sub_1D4467604();
  sub_1D42B6D0C();
  return (id)swift_willThrow();
}

id sub_1D44674EC()
{
  uint64_t v0;
  id result;
  void *v2;
  void *v3;
  id v4;

  result = sub_1D446749C();
  if (!v0)
  {
    v2 = result;
    v3 = (void *)sub_1D451A6C8();
    v4 = sub_1D44F590C(v2, v3);

    return v4;
  }
  return result;
}

uint64_t type metadata accessor for SNAudioOffsetEstimator()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for EstimateAudioOffsetRequest()
{
  return &type metadata for EstimateAudioOffsetRequest;
}

unint64_t sub_1D446758C()
{
  unint64_t result;

  result = qword_1EFE53148;
  if (!qword_1EFE53148)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4543E2C, &type metadata for EstimateAudioOffsetRequest);
    atomic_store(result, (unint64_t *)&qword_1EFE53148);
  }
  return result;
}

uint64_t sub_1D44675C8(void *a1, int64_t a2)
{
  return sub_1D44670D8(a1, a2);
}

id sub_1D44675DC()
{
  return sub_1D44674EC();
}

id sub_1D44675F0()
{
  return sub_1D446749C();
}

unint64_t sub_1D4467604()
{
  unint64_t result;

  result = qword_1EFE53150;
  if (!qword_1EFE53150)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4544024, &type metadata for SNAudioOffsetEstimator.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE53150);
  }
  return result;
}

unint64_t sub_1D4467640()
{
  unint64_t result;

  result = qword_1EFE53168;
  if (!qword_1EFE53168)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4543FD4, &type metadata for EstimateAudioOffsetRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE53168);
  }
  return result;
}

uint64_t sub_1D446767C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D44676A0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D4466F70(a1);
}

ValueMetadata *type metadata accessor for EstimateAudioOffsetRequest.CodingKeys()
{
  return &type metadata for EstimateAudioOffsetRequest.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SNAudioOffsetEstimator.DomainError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D446770C + 4 * asc_1D4543D60[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D446772C + 4 * byte_1D4543D65[v4]))();
}

_BYTE *sub_1D446770C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D446772C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4467734(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D446773C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4467744(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D446774C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SNAudioOffsetEstimator.DomainError()
{
  return &type metadata for SNAudioOffsetEstimator.DomainError;
}

unint64_t sub_1D446776C()
{
  unint64_t result;

  result = qword_1EFE53178;
  if (!qword_1EFE53178)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4543F5C, &type metadata for SNAudioOffsetEstimator.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE53178);
  }
  return result;
}

unint64_t sub_1D44677AC()
{
  unint64_t result;

  result = qword_1EFE53180;
  if (!qword_1EFE53180)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4543F84, &type metadata for EstimateAudioOffsetRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE53180);
  }
  return result;
}

unint64_t sub_1D44677EC()
{
  unint64_t result;

  result = qword_1EFE53188[0];
  if (!qword_1EFE53188[0])
  {
    result = MEMORY[0x1D825E41C](&unk_1D4543FAC, &type metadata for EstimateAudioOffsetRequest.CodingKeys);
    atomic_store(result, qword_1EFE53188);
  }
  return result;
}

id sub_1D4467828()
{
  return sub_1D446749C();
}

uint64_t sub_1D4467834(uint64_t a1)
{
  return sub_1D438387C(a1);
}

double sub_1D446783C(double a1, double a2, double a3, double a4, double a5)
{
  return a5 / a1 * (a2 - a4) + a5 / a1 * a3;
}

uint64_t sub_1D4467854(uint64_t a1)
{
  return sub_1D438387C(a1);
}

void sub_1D446785C()
{
  void *v0;

}

double sub_1D4467864()
{
  float v0;

  return v0;
}

void type metadata accessor for StatefulMap()
{
  JUMPOUT(0x1D825E3A4);
}

uint64_t sub_1D44678A8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1D4467924(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if ((*(_DWORD *)(v5 + 80) & 0x1000F8) != 0
    || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    *a1 = *a2;
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
    v8 = (_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v9 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v10 = v9[1];
    *v8 = *v9;
    v8[1] = v10;
    v11 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
    v12 = (_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    swift_retain();
  }
  swift_retain();
  sub_1D42CB15C();
}

uint64_t sub_1D44679F4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  swift_release();
  return swift_release();
}

void sub_1D4467A44()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  sub_1D4468818();
  (*(void (**)(void))(v0 + 16))();
  sub_1D446882C();
  v2 = v1[1];
  *v3 = *v1;
  v3[1] = v2;
  v4 = (_QWORD *)(((unint64_t)v3 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)v1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = v5[1];
  *v4 = *v5;
  v4[1] = v6;
  swift_retain();
  swift_retain();
  sub_1D42CB15C();
}

void sub_1D4467A9C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  sub_1D4468818();
  (*(void (**)(void))(v0 + 24))();
  sub_1D4468848();
  v2 = v1 & 0xFFFFFFFFFFFFFFF8;
  v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(_QWORD *)v0 = *(_QWORD *)(v1 & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)(v0 + 8) = v3;
  swift_retain();
  sub_1D42BE93C();
  v4 = (_QWORD *)((v0 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_QWORD *)((v2 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = v5[1];
  *v4 = *v5;
  v4[1] = v6;
  swift_retain();
  sub_1D42BE93C();
  sub_1D42CB15C();
}

void sub_1D4467B04()
{
  uint64_t v0;
  _OWORD *v1;
  _OWORD *v2;

  sub_1D4468818();
  (*(void (**)(void))(v0 + 32))();
  sub_1D446882C();
  *v2 = *v1;
  *(_OWORD *)(((unint64_t)v2 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v1 + 23) & 0xFFFFFFFFFFFFF8);
  sub_1D42CB15C();
}

void sub_1D4467B48()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  sub_1D4468818();
  (*(void (**)(void))(v0 + 40))();
  sub_1D4468848();
  v2 = (v1 & 0xFFFFFFFFFFFFFFF8) + 23;
  *(_OWORD *)v0 = *(_OWORD *)(v1 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  *(_OWORD *)((v0 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(v2 & 0xFFFFFFFFFFFFF8);
  swift_release();
  sub_1D42CB15C();
}

uint64_t sub_1D4467BA4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v6, v4);
    }
  }
  else
  {
    if (((((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1D4467C28 + 4 * byte_1D4544068[v11]))();
  }
}

void sub_1D4467CA8(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
  }
  else
  {
    if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1D4467D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0x7FFFFFFF)
    {
      v8 = (_QWORD *)((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      if ((a2 & 0x80000000) != 0)
      {
        v9 = a2 ^ 0x80000000;
        v8[1] = 0;
      }
      else
      {
        v9 = (a2 - 1);
      }
      *v8 = v9;
    }
    else
    {
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v5, a2, a3, a4);
    }
  }
  return result;
}

void type metadata accessor for StatefulTryMap()
{
  JUMPOUT(0x1D825E3A4);
}

void sub_1D4467E38(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  MEMORY[0x1E0C80A78](a1);
  sub_1D42CB210();
  v8 = v7 - v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7 - v6, v3, v10);
  sub_1D4467F00(v8, a2, a3);
}

void sub_1D4467EE0()
{
  swift_retain();
  swift_retain();
  sub_1D42CB520();
}

void sub_1D4467F00(uint64_t a1@<X0>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for StatefulTryMap();
}

uint64_t sub_1D4467F70(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v6 = (_QWORD *)(v5 + *(int *)(result + 52));
  *v6 = v4;
  v6[1] = v3;
  v7 = (_QWORD *)(v5 + *(int *)(result + 56));
  *v7 = v2;
  v7[1] = v1;
  return result;
}

void sub_1D4467FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v36 = a4;
  v34 = a3;
  v38 = a1;
  v6 = *(_QWORD *)(a2 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x1E0C80A78](a1);
  v30 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v9 + 16);
  v31 = *(_QWORD *)(v10 - 8);
  v11 = v31;
  MEMORY[0x1E0C80A78](v8);
  sub_1D42CB210();
  v14 = v13 - v12;
  v28 = v13 - v12;
  v16 = *(_QWORD *)(v15 + 24);
  v32 = *(_QWORD *)(v15 + 40);
  v35 = sub_1D451A0D4();
  v37 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v33 = (char *)&v27 - v17;
  v18 = *(_QWORD *)(a2 + 32);
  v29 = swift_allocBox();
  (*(void (**)(void))(v4 + *(int *)(a2 + 52)))();
  sub_1D438E938(v14, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
  v27 = v6;
  v19 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v30, v4, a2);
  v20 = (*(unsigned __int8 *)(v6 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v21 = (char *)swift_allocObject();
  *((_QWORD *)v21 + 2) = v10;
  *((_QWORD *)v21 + 3) = v16;
  v22 = v34;
  *((_QWORD *)v21 + 4) = v18;
  *((_QWORD *)v21 + 5) = v22;
  v23 = v36;
  *((_QWORD *)v21 + 6) = v32;
  *((_QWORD *)v21 + 7) = v23;
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(&v21[v20], v19, a2);
  *(_QWORD *)&v21[(v7 + v20 + 7) & 0xFFFFFFFFFFFFFFF8] = v29;
  swift_retain();
  v24 = v33;
  v25 = v28;
  sub_1D451A308();
  sub_1D42BE93C();
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v25, v10);
  v26 = v35;
  MEMORY[0x1D825E41C](MEMORY[0x1E0C95950], v35);
  sub_1D451A3F8();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v24, v26);
  swift_release();
  sub_1D42CB520();
}

void sub_1D44681E8()
{
  swift_projectBox();
  type metadata accessor for StatefulMap();
}

uint64_t sub_1D4468240(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);

  v4 = *(void (**)(uint64_t, uint64_t))(v1 + *(int *)(a1 + 56));
  swift_beginAccess();
  v4(v2, v3);
  return swift_endAccess();
}

void sub_1D4468294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D4467FA8(a1, a4, a2, a3);
}

void sub_1D44682A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v35 = a3;
  v36 = a4;
  v34 = a1;
  v6 = *(_QWORD *)(a2 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x1E0C80A78](a1);
  v31 = (uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v9 + 16);
  v32 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1D42CB210();
  v13 = v12 - v11;
  v15 = *(_QWORD *)(v14 + 24);
  v27 = *(_QWORD *)(v14 + 40);
  v28 = v15;
  v16 = sub_1D451A11C();
  v29 = *(_QWORD *)(v16 - 8);
  v30 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v27 - v17;
  v19 = *(_QWORD *)(a2 + 32);
  v33 = swift_allocBox();
  (*(void (**)(void))(v4 + *(int *)(a2 + 52)))();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v13, v4, v10);
  sub_1D438E938(v31, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
  v20 = (*(unsigned __int8 *)(v6 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v21 = (v7 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (_QWORD *)swift_allocObject();
  v23 = v28;
  v22[2] = v10;
  v22[3] = v23;
  v24 = v35;
  v22[4] = v19;
  v22[5] = v24;
  v25 = v36;
  v22[6] = v27;
  v22[7] = v25;
  sub_1D438E938((uint64_t)v22 + v20, v31, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
  *(_QWORD *)((char *)v22 + v21) = v33;
  swift_retain();
  sub_1D451A3A4();
  sub_1D42BE93C();
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v13, v10);
  v26 = v30;
  MEMORY[0x1D825E41C](MEMORY[0x1E0C95B48], v30);
  sub_1D451A3F8();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v18, v26);
  swift_release();
  sub_1D42CB520();
}

void sub_1D4468518()
{
  swift_projectBox();
  type metadata accessor for StatefulTryMap();
}

uint64_t sub_1D4468578(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);

  v4 = *(void (**)(uint64_t, uint64_t))(v1 + *(int *)(a1 + 56));
  swift_beginAccess();
  v4(v2, v3);
  return swift_endAccess();
}

void sub_1D44685DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D44682A8(a1, a4, a2, a3);
}

void sub_1D44685F0()
{
  sub_1D4468698((void (*)(_QWORD, __int128 *))type metadata accessor for StatefulTryMap);
}

void sub_1D44685FC()
{
  type metadata accessor for StatefulTryMap();
}

void sub_1D4468644()
{
  sub_1D44687EC();
  sub_1D4468518();
}

void sub_1D446868C()
{
  sub_1D4468698((void (*)(_QWORD, __int128 *))type metadata accessor for StatefulMap);
}

void sub_1D4468698(void (*a1)(_QWORD, __int128 *))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 48);
  v4 = *(_OWORD *)(v1 + 16);
  v5 = v2;
  v6 = v3;
  a1(0, &v4);
  JUMPOUT(0x1D44686D4);
}

void sub_1D446875C()
{
  type metadata accessor for StatefulMap();
}

void sub_1D44687A4()
{
  sub_1D44687EC();
  sub_1D44681E8();
}

uint64_t AudioFileSequence.init(url:audioFormat:bufferFrameCapacity:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)()@<X2>, void (**a4)()@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;

  v8 = sub_1D42CB348();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = swift_allocObject();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 32))(v12 + v10, a1, v8);
  *(_QWORD *)(v12 + v11) = a2;
  *a4 = sub_1D430679C;
  a4[1] = (void (*)())v12;
  a4[2] = a3;
  return result;
}

uint64_t sub_1D4468910(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2)
  {
    while (a2 != -1 || result != 0x8000000000000000)
    {
      v3 = a2;
      a2 = result % a2;
      result = v3;
      if (!a2)
        return v3;
    }
    __break(1u);
  }
  else
  {
    return result;
  }
  return result;
}

uint64_t sub_1D446894C(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = sub_1D42DC8DC(a1, a2, a3);
  swift_release();
  return v3;
}

id sub_1D446897C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v8;

  v0 = sub_1D42CB348();
  v1 = MEMORY[0x1E0C80A78](v0);
  MEMORY[0x1E0C80A78](v1);
  sub_1D446B6E8((uint64_t)&v8 - v2);
  v3 = objc_allocWithZone(MEMORY[0x1E0C89A98]);
  sub_1D446B0DC();
  v5 = v4;
  v6 = objc_msgSend(v4, sel_length);

  return v6;
}

void sub_1D4468C20(void **a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  void *v5;
  id v6;
  id v7;
  id v8;
  unint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  unsigned int v14;
  id v15;
  id v16[2];

  v16[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = *a1;
  v6 = sub_1D435EBD4((uint64_t)a1, sel_framePosition);
  v7 = sub_1D435EBD4((uint64_t)v6, sel_length);
  if ((uint64_t)v6 >= (uint64_t)v7)
    goto LABEL_8;
  v8 = sub_1D435EBD4((uint64_t)v7, sel_processingFormat);
  v9 = *(_QWORD *)(a2 + 8);
  if ((v9 & 0x8000000000000000) != 0)
  {
    sub_1D42DCED4();
    sub_1D43831DC();
LABEL_14:
    sub_1D43074E8();
    __break(1u);
    return;
  }
  if (HIDWORD(v9))
  {
    sub_1D42DCED4();
    sub_1D43831CC();
    goto LABEL_14;
  }
  v10 = v8;
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C89AC0]), sel_initWithPCMFormat_frameCapacity_, v8, v9);

  if (v11)
  {
    v16[0] = 0;
    v12 = v11;
    if ((objc_msgSend(v5, sel_readIntoBuffer_error_, v12, v16) & 1) != 0)
    {
      v13 = v16[0];
      v14 = objc_msgSend(v12, sel_frameLength);

      if (v14)
      {
LABEL_9:
        *a3 = v11;
        return;
      }

LABEL_8:
      v11 = 0;
      goto LABEL_9;
    }
    v15 = v16[0];
    sub_1D4519AA4();

    sub_1D42B7124();
  }
  else
  {
    sub_1D446B49C();
    swift_allocError();
    swift_willThrow();
  }
}

AVAudioPCMBuffer_optional __swiftcall AudioFileSequence.Iterator.next()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  objc_class *v4;
  void *v5;
  Swift::Bool v6;
  void *v7;
  objc_class *v8;
  void *v9;
  objc_class *v10;
  AVAudioPCMBuffer_optional result;

  v1 = *v0;
  v2 = swift_retain();
  v3 = (void *)MEMORY[0x1D825DB34](v2);
  if (!*(_QWORD *)(v1 + 16))
  {
    sub_1D42B28FC(&qword_1EFE4A098);
    sub_1D42DCD28();
    v7 = (void *)swift_allocError();
    swift_willThrow();
    objc_autoreleasePoolPop(v3);
    sub_1D42BE93C();

LABEL_5:
    sub_1D446AF80();
    v4 = 0;
    goto LABEL_6;
  }
  v9 = *(void **)(v1 + 16);
  sub_1D4468C20(&v9, (uint64_t)v0, &v10);
  v4 = v10;
  objc_autoreleasePoolPop(v3);
  sub_1D42BE93C();
  if (!v4)
    goto LABEL_5;
LABEL_6:
  v8 = v4;
  result.value.super._impl = v5;
  result.value.super.super.isa = v8;
  result.is_nil = v6;
  return result;
}

unint64_t sub_1D4468EE4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = (unint64_t)AudioFileSequence.Iterator.next()();
  *a1 = result;
  return result;
}

void sub_1D4468F08()
{
  sub_1D42B28FC(&qword_1EFE4A090);
  swift_allocObject();
  sub_1D446AEF4((void (*)(uint64_t *__return_ptr))sub_1D446B4D8);
}

uint64_t sub_1D4468F60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1D42CB348();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t AudioFileSequence.makeIterator()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 16);
  result = (*(uint64_t (**)(void))v1)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D4469030@<X0>(uint64_t *a1@<X8>)
{
  AudioFileSequence.makeIterator()(a1);
  return swift_release();
}

uint64_t sub_1D4469048()
{
  return sub_1D42CB5B0();
}

uint64_t sub_1D4469054()
{
  uint64_t v0;

  return sub_1D446894C(*(uint64_t (**)(uint64_t))v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1D4469060(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1D43E79E4(a1, a2, a3, *(uint64_t (**)(void))v3, *(_QWORD *)(v3 + 8), *(_QWORD *)(v3 + 16));
}

void sub_1D446906C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;

  sub_1D42CB348();
  sub_1D446B620();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  v8 = objc_msgSend(a2, sel_settings);
  v9 = sub_1D451A5CC();

  v10 = objc_msgSend(a2, sel_commonFormat);
  LOBYTE(a2) = objc_msgSend(a2, sel_isInterleaved);
  v11 = objc_allocWithZone(MEMORY[0x1E0C89A98]);
  sub_1D446B26C((uint64_t)v6, v9, (uint64_t)v10, (char)a2);
  sub_1D42DD1D8();
}

void *sub_1D4469168(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v9;

  sub_1D42CB348();
  sub_1D446B620();
  MEMORY[0x1E0C80A78](v4);
  sub_1D446B5F0(v5, v9);
  v6 = objc_allocWithZone(MEMORY[0x1E0C89A98]);
  sub_1D446B0DC();
  if (!v2)
  {
    sub_1D44691F4(v7, a2);
    sub_1D446B70C();
  }
  return a2;
}

id sub_1D44691F4(void *a1, void *a2)
{
  id v4;
  unsigned int v5;
  id v7;
  id v8;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = objc_msgSend(a1, sel_processingFormat);
  v5 = objc_msgSend(a2, sel_isEqual_, v4);

  if (v5)
    return a1;
  sub_1D446B3C8();
  v9[0] = 0;
  v7 = sub_1D4469E1C(a1, a2, (uint64_t)v9);
  v8 = v9[0];
  return v7;
}

void sub_1D44692F8(void *a1)
{
  id v2;
  double v3;
  double v4;
  char v5;
  char v6;
  int32_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  CMTime *v11;
  CMTime *v12;
  CMTimeRange *v13;
  CMTimeRange *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  double v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v38;

  v2 = objc_msgSend(a1, sel_fileFormat);
  objc_msgSend(v2, sel_sampleRate);
  v4 = v3;

  sub_1D446B5D0();
  if (v5)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v4 <= -2147483650.0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1D446B5E0();
  if (v6)
  {
    v7 = (int)v4;
    CMTimeMake((CMTime *)&v30, 0, (int)v4);
    v8 = v30;
    v9 = v32;
    v10 = v31;
    CMTimeMake((CMTime *)&v30, (int64_t)objc_msgSend(a1, sel_length), v7);
    v35 = v32;
    v36 = v8;
    v37 = v10;
    v38 = v9;
    sub_1D446B65C();
    v14 = CMTimeRangeMake(v13, v11, v12);
    sub_1D42DCD6C((uint64_t)v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32,
      v33,
      v34);
    return;
  }
LABEL_8:
  __break(1u);
}

void sub_1D44693F0(void *a1@<X0>, _OWORD *a2@<X8>, double a3@<D0>)
{
  char v5;
  char v6;
  __int128 v7;
  uint64_t v8[6];
  _OWORD v9[3];

  sub_1D44692F8(a1);
  type metadata accessor for SNTimeUtils();
  sub_1D446B5D0();
  if (v5)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (a3 <= -2147483650.0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1D446B5E0();
  if (v6)
  {
    sub_1D42D9358(v8, (uint64_t)v9);
    v7 = v9[1];
    *a2 = v9[0];
    a2[1] = v7;
    a2[2] = v9[2];
    return;
  }
LABEL_8:
  __break(1u);
}

void sub_1D4469484(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  sub_1D42CB348();
  sub_1D446B620();
  MEMORY[0x1E0C80A78](v4);
  sub_1D446B5F0(v5, v9);
  v6 = objc_allocWithZone(MEMORY[0x1E0C89A98]);
  sub_1D446B19C(v2, (void *)1, 0);
  if (!v1)
  {
    v8 = v7;
    sub_1D44692F8(v7);

    *a1 = v9;
    a1[1] = v10;
    a1[2] = v11;
  }
  sub_1D4377BF8();
}

double sub_1D4469518@<D0>(_OWORD *a1@<X8>)
{
  __int128 v2;
  double result;
  _OWORD v4[2];
  __int128 v5;

  type metadata accessor for SNTimeUtils();
  sub_1D42DAE28((_QWORD *(*)(uint64_t *__return_ptr))sub_1D446B484, (uint64_t)v4);
  v2 = v4[1];
  *a1 = v4[0];
  a1[1] = v2;
  result = *(double *)&v5;
  a1[2] = v5;
  return result;
}

double sub_1D4469588@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  double result;
  __int128 v4;
  _OWORD v5[2];
  __int128 v6;

  sub_1D4469484(v5);
  if (!v1)
  {
    v4 = v5[1];
    *a1 = v5[0];
    a1[1] = v4;
    result = *(double *)&v6;
    a1[2] = v6;
  }
  return result;
}

void sub_1D44696B4(void *a1, uint64_t (*a2)(id *), uint64_t a3, uint64_t (*a4)(void *, id *), uint64_t a5, uint64_t a6, void *a7)
{
  void *v7;
  void *v8;
  uint32_t *p_ivar_base_size;
  uint32_t *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  unsigned int v17;
  id v18;
  id v19;
  id v20;
  uint32_t *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  unsigned int v26;
  BOOL v27;
  char v28;
  id v29;
  id v30;
  id v34;
  unint64_t v35;
  uint64_t v36;

  v7 = a7;
  v8 = a1;
  v36 = *MEMORY[0x1E0C80C00];
  if (!(_DWORD)a1)
  {

    return;
  }
  p_ivar_base_size = &SNVGGishMusicModel__metaData.ivar_base_size;
  v11 = &SNVGGishMusicModel__metaData.ivar_base_size;
  while (1)
  {
    v34 = 0;
    v12 = a2(&v34);
    if (!v12)
    {
      if (v34)
      {
        v34;
        swift_willThrow();
        goto LABEL_19;
      }

      __break(1u);
LABEL_34:

      __break(1u);
LABEL_35:

      __break(1u);
      return;
    }
    v13 = (void *)v12;
    v14 = v34;
    v15 = v8;
    if (objc_msgSend(v13, sel_frameCapacity) < v8)
      v15 = objc_msgSend(v13, sel_frameCapacity);
    objc_msgSend(v13, *((SEL *)p_ivar_base_size + 472), 0);
    v16 = objc_msgSend(v7, sel_framePosition);
    if ((uint64_t)v16 >= (uint64_t)objc_msgSend(v7, sel_length))
    {
      objc_msgSend(v13, *((SEL *)p_ivar_base_size + 472), 0);
      goto LABEL_13;
    }
    v34 = 0;
    v17 = objc_msgSend(v7, sel_readIntoBuffer_frameCount_error_, v13, v15, &v34);
    if ((v17 & 1) != 0)
    {
      v18 = v34;
      v19 = v14;
    }
    else
    {
      v20 = v34;
      v21 = v11;
      v22 = a5;
      v23 = sub_1D4519AA4();

      swift_willThrow();
      v19 = (id)sub_1D4519A98();
      v24 = (void *)v23;
      a5 = v22;
      v11 = v21;
      v7 = a7;

    }
    v25 = v19;

    if (!v17)
      break;
    v14 = v25;
LABEL_13:
    if (!objc_msgSend(v13, *((SEL *)v11 + 326)))
    {

      return;
    }
    if (v8 < objc_msgSend(v13, *((SEL *)v11 + 326)))
    {
      type metadata accessor for SNError();
      v34 = 0;
      v35 = 0xE000000000000000;
      sub_1D451B400();
      swift_bridgeObjectRelease();
      v34 = (id)0xD000000000000029;
      v35 = 0x80000001D455A3B0;
      if (objc_msgSend(v13, *((SEL *)v11 + 326)) >= v8)
      {
        sub_1D451B7C0();
        sub_1D451A794();
        swift_bridgeObjectRelease();
        sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 2, 0, (uint64_t)v34, v35);
        swift_bridgeObjectRelease();
        swift_willThrow();

        goto LABEL_31;
      }
LABEL_32:
      __break(1u);
    }
    v26 = objc_msgSend(v13, *((SEL *)v11 + 326));
    v27 = v8 >= v26;
    v8 = (void *)(v8 - v26);
    if (!v27)
    {
      __break(1u);
      goto LABEL_32;
    }
    v34 = v14;
    v28 = a4(v13, &v34);
    v29 = v34;

    if ((v28 & 1) == 0)
    {
      if (v29)
      {
        v30 = v29;
        goto LABEL_30;
      }
      goto LABEL_34;
    }

    p_ivar_base_size = (_DWORD *)(&SNVGGishMusicModel__metaData + 8);
    if (!(_DWORD)v8)
      goto LABEL_19;
  }
  if (!v25)
    goto LABEL_35;
  v30 = v25;
LABEL_30:
  swift_willThrow();

LABEL_31:
  v7 = v13;
LABEL_19:

}

void sub_1D4469A78(void *a1, uint64_t (*a2)(id *), uint64_t a3, uint64_t (*a4)(void *, id, id *), uint64_t a5, uint64_t (*a6)(void *, id *))
{
  uint64_t v6;
  void *v7;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  id v15;
  unsigned int v16;
  BOOL v17;
  char v18;
  id v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v27;
  unint64_t v28;
  uint64_t v29;

  v7 = a1;
  v29 = *MEMORY[0x1E0C80C00];
  if ((_DWORD)a1)
  {
    v25 = v6;
    while (1)
    {
      v27 = 0;
      v10 = a2(&v27);
      if (!v10)
      {
        if (!v27)
        {
          __break(1u);
          goto LABEL_28;
        }
        v27;
        swift_willThrow();
        return;
      }
      v11 = (void *)v10;
      v12 = v27;
      v13 = v7;
      if (objc_msgSend(v11, sel_frameCapacity) < v7)
        v13 = objc_msgSend(v11, sel_frameCapacity);
      objc_msgSend(v11, sel_setFrameLength_, 0, v25);
      v27 = v12;
      v14 = a4(v11, v13, &v27);
      v15 = v27;

      if ((v14 & 1) == 0)
      {
        if (v15)
        {
          v20 = v15;
          goto LABEL_23;
        }
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        return;
      }
      if (!sub_1D446B614())
      {

        return;
      }
      if (v7 < sub_1D446B614())
      {
        type metadata accessor for SNError();
        v27 = 0;
        v28 = 0xE000000000000000;
        sub_1D451B400();
        swift_bridgeObjectRelease();
        v27 = (id)0xD000000000000029;
        v28 = 0x80000001D455A3B0;
        if (sub_1D446B614() >= v7)
        {
          sub_1D451B7C0();
          sub_1D451A794();
          swift_bridgeObjectRelease();
          v21 = v28;
          v22 = sub_1D446B6C4();
          sub_1D43EC59C(v22, v23, 2, 0, v24, v21);
          swift_bridgeObjectRelease();
          swift_willThrow();

          goto LABEL_24;
        }
LABEL_26:
        __break(1u);
      }
      v16 = sub_1D446B614();
      v17 = v7 >= v16;
      v7 = (void *)(v7 - v16);
      if (!v17)
      {
        __break(1u);
        goto LABEL_26;
      }
      v27 = v15;
      v18 = a6(v11, &v27);
      v19 = v27;

      if ((v18 & 1) == 0)
        break;

      if (!(_DWORD)v7)
        return;
    }
    if (!v19)
      goto LABEL_29;
    v20 = v19;
LABEL_23:
    swift_willThrow();

LABEL_24:
  }
}

uint64_t sub_1D4469D38(uint64_t result)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if ((_DWORD)result)
  {
    type metadata accessor for SNError();
    sub_1D451B400();
    swift_bridgeObjectRelease();
    sub_1D451B7C0();
    sub_1D451A794();
    swift_bridgeObjectRelease();
    v1 = sub_1D446B6C4();
    sub_1D43EC59C(v1, v2, 1, 0, v3, 0x80000001D455A3E0);
    swift_bridgeObjectRelease();
    return sub_1D42B7124();
  }
  return result;
}

id sub_1D4469E1C(void *a1, void *a2, uint64_t a3)
{
  id v5;

  v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initSecondaryReader_format_error_, a1, a2, a3);

  return v5;
}

void sub_1D4469E7C(void *a1, uint64_t a2)
{
  id v4;
  id v5;
  id v6;

  v4 = objc_msgSend(a1, sel_processingFormat);
  v5 = objc_msgSend(v4, sel_channelLayout);

  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C89AA8]), sel_initWithStreamDescription_channelLayout_, a2, v5);
  if (v6)
  {
    sub_1D44691F4(a1, v6);
    sub_1D446B70C();
    sub_1D42DD1D8();
  }
  else
  {
    __break(1u);
  }
}

void sub_1D4469F28(void *a1, double a2)
{
  id v4;
  char *v5;
  double v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v4 = objc_msgSend(a1, sel_processingFormat);
  v5 = (char *)objc_msgSend(v4, sel_streamDescription);

  v7 = *(_OWORD *)(v5 + 8);
  v8 = *(_OWORD *)(v5 + 24);
  v6 = a2;
  sub_1D4469E7C(a1, (uint64_t)&v6);
}

void *(*sub_1D4469FE0(void *a1, uint64_t a2, char a3))()
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v10;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_DWORD *)(v6 + 24) = a2;
  if ((a3 & 1) != 0)
  {
    v7 = sub_1D43211DC();
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C89AC0]), sel_initWithPCMFormat_frameCapacity_, a1, a2);
    swift_release();
    *(_QWORD *)(v7 + 16) = 0;
    if (v8)
    {
      *(_QWORD *)(sub_1D43211DC() + 16) = v8;
      sub_1D42BE93C();
      return sub_1D446B460;
    }
    else
    {
      return (void *(*)())sub_1D446B458;
    }
  }
  else
  {
    v10 = a1;
    return (void *(*)())sub_1D446B428;
  }
}

id sub_1D446A0CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C89AC0]), sel_initWithPCMFormat_frameCapacity_, a2, a3);
}

uint64_t sub_1D446A108(_QWORD *a1, uint64_t a2)
{
  void *v4;
  id v5;
  id v6;

  if (a1)
  {
    swift_beginAccess();
    v4 = *(void **)(a2 + 16);
    v5 = v4;
    *a1 = v4;
    v6 = v5;
  }
  return 0;
}

void sub_1D446A160(void *a1, unint64_t a2, uint64_t (*a3)(id *), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  if ((a2 & 0x8000000000000000) != 0)
    goto LABEL_8;
  if (HIDWORD(a2))
  {
LABEL_9:
    sub_1D42DCED4();
    sub_1D43831CC();
    goto LABEL_10;
  }
  sub_1D446A594(a2, a1);
  if (v5)
    return;
  objc_msgSend(a1, sel_setFramePosition_, v10);
  if ((v11 & 0x8000000000000000) != 0)
  {
LABEL_8:
    sub_1D42DCED4();
    sub_1D43831DC();
LABEL_10:
    sub_1D43074E8();
    __break(1u);
    return;
  }
  if (HIDWORD(v11))
    goto LABEL_9;
  sub_1D44696B4((void *)v11, a3, a4, (uint64_t (*)(void *, id *))_s13SoundAnalysis17_SNClassificationC20supportsSecureCodingSbvgZ_0, 0, v4, a1);
  sub_1D4469D38(v9);
}

void sub_1D446A27C(void *a1, unsigned int a2)
{
  id v3;
  double v4;
  double v5;
  char v6;
  char v7;
  CMTime v8;

  v3 = objc_msgSend(a1, sel_processingFormat);
  objc_msgSend(v3, sel_sampleRate);
  v5 = v4;

  sub_1D446B5D0();
  if (v6)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v5 <= -2147483650.0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1D446B5E0();
  if (v7)
  {
    CMTimeMake(&v8, a2, (int)v5);
    return;
  }
LABEL_8:
  __break(1u);
}

CMTimeValue sub_1D446A318(uint64_t a1, uint64_t a2)
{
  CMTimeValue result;
  CMTime v5;

  result = sub_1D4468910(a1, a2);
  if (result)
  {
    if (a1 == 0x8000000000000000 && result == -1)
      goto LABEL_12;
    if (a1 >= (uint64_t)0xFFFFFFFF80000000)
    {
      if (a1 <= 0x7FFFFFFF)
      {
        CMTimeMake(&v5, a1 / result, a1);
        return v5.value;
      }
      goto LABEL_11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_11:
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1D446A394(void *a1, unint64_t a2, CMTimeRoundingMethod a3)
{
  uint64_t v3;
  id v7;
  double v8;
  double v9;
  char v10;
  id v11;
  double v12;
  double v13;
  CMTimeValue v14;
  uint64_t v15;
  CMTimeEpoch v16;
  uint64_t v17;
  uint64_t v18;
  CMTimeEpoch v19;
  CMTimeValue v20;
  CMTimeValue v21;
  uint64_t v22;
  uint64_t v23;
  CMTimeEpoch v24;
  CMTimeEpoch v25;
  uint64_t result;
  uint64_t v27;

  v7 = objc_msgSend(a1, sel_fileFormat);
  objc_msgSend(v7, sel_sampleRate);
  v9 = v8;

  sub_1D446B5D0();
  if (v10)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v9 >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v11 = objc_msgSend(a1, sel_processingFormat);
  objc_msgSend(v11, sel_sampleRate);
  v13 = v12;

  if ((~*(_QWORD *)&v13 & 0x7FF0000000000000) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v13 <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v13 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v14 = sub_1D446A318((uint64_t)v9, (uint64_t)v13);
  if ((a2 & 0x8000000000000000) != 0)
  {
LABEL_18:
    sub_1D42DCED4();
    sub_1D43831DC();
LABEL_20:
    result = sub_1D43074E8();
    __break(1u);
    return result;
  }
  if (HIDWORD(a2))
  {
    sub_1D42DCED4();
    sub_1D43831CC();
    goto LABEL_20;
  }
  v17 = v14;
  v18 = v15;
  v19 = v16;
  sub_1D446A27C(a1, a2);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  type metadata accessor for SNTimeUtils();
  result = sub_1D42DAEDC(v21, v23, v25, v17, v18, v19, *MEMORY[0x1E0CA2E68], *(_QWORD *)(MEMORY[0x1E0CA2E68] + 8), *(_QWORD *)(MEMORY[0x1E0CA2E68] + 16), a3);
  if (v3)
    return v27;
  return result;
}

void sub_1D446A594(unsigned int a1, void *a2)
{
  uint64_t v2;
  CMTimeValue v5;
  CMTimeValue v6;
  uint64_t v7;
  uint64_t v8;
  CMTimeEpoch v9;
  CMTimeEpoch v10;
  CMTimeValue v11;
  uint64_t v12;
  CMTimeEpoch v13;
  CMTimeRange *v14;
  CMTimeValue value;
  uint64_t v16;
  CMTimeValue v17;
  CMTimeEpoch epoch;
  uint64_t v19;
  CMTimeEpoch v20;
  id v21;
  double v22;
  double v23;
  char v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  char v32;
  CMTime *v33;
  CMTimeValue v34;
  uint64_t v35;
  CMTimeEpoch v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  CMTime *v44;
  CMTime *v45;
  CMTimeRange *v46;
  CMTimeRange *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  CMTimeRange v63;
  CMTime end;
  CMTime start;

  sub_1D446A27C(a2, a1);
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v11 = sub_1D446A394(a2, a1, kCMTimeRoundingMethod_RoundTowardNegativeInfinity);
  if (v2)
    return;
  end.epoch = v10;
  start.value = v11;
  *(_QWORD *)&start.timescale = v12;
  start.epoch = v13;
  end.value = v6;
  *(_QWORD *)&end.timescale = v8;
  v14 = CMTimeRangeFromTimeToTime(&v63, &start, &end);
  value = v63.start.value;
  v16 = *(_QWORD *)&v63.start.timescale;
  epoch = v63.start.epoch;
  v17 = v63.duration.value;
  v19 = *(_QWORD *)&v63.duration.timescale;
  v20 = v63.duration.epoch;
  v21 = sub_1D435EBD4((uint64_t)v14, sel_fileFormat);
  objc_msgSend(v21, sel_sampleRate);
  v23 = v22;

  sub_1D446B5D0();
  if (v24)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v23 <= -2147483650.0)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1D446B5E0();
  if (!v32)
    goto LABEL_14;
  v33 = sub_1D446B6A4(v25, (int)v23, v26, v27, v28, v29, v30, v31, value, v16, epoch, v63.duration.value, *(uint64_t *)&v63.duration.timescale, v63.duration.epoch, end.value, *(uint64_t *)&end.timescale, end.epoch, (CMTime *)start.value);
  v34 = start.value;
  v35 = *(_QWORD *)&start.timescale;
  v36 = start.epoch;
  objc_msgSend(sub_1D435EBD4((uint64_t)v33, sel_processingFormat), sel_sampleRate);
  sub_1D446B6E0();
  sub_1D446B5D0();
  if (v24)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v23 <= -2147483650.0)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    return;
  }
  sub_1D446B5E0();
  if (!v32)
    goto LABEL_17;
  sub_1D446B6A4(v37, (int)v23, v38, v39, v40, v41, v42, v43, v17, v19, v20, v63.duration.value, *(uint64_t *)&v63.duration.timescale, v63.duration.epoch, end.value, *(uint64_t *)&end.timescale, end.epoch, (CMTime *)start.value);
  end.epoch = start.epoch;
  start.value = v34;
  *(_QWORD *)&start.timescale = v35;
  start.epoch = v36;
  sub_1D446B65C();
  v47 = CMTimeRangeMake(v46, v44, v45);
  sub_1D42DCD6C((uint64_t)v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63.start.value, *(double *)&v63.start.timescale, *(__int128 *)&v63.start.epoch,
    *(uint64_t *)&v63.duration.timescale,
    v63.duration.epoch);
}

void sub_1D446A764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(id *), uint64_t a5, uint64_t (*a6)(void *, id, id *), uint64_t a7, uint64_t (*a8)(void *, id, id *), uint64_t a9, uint64_t (*a10)(void *, id *), uint64_t a11)
{
  CMTimeRange *v11;
  uint64_t v12;
  void *v13;
  double v14;
  char v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v28;
  char v30[24];
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  CMTimeRange v35;

  sub_1D446B674();
  objc_msgSend(objc_msgSend(v13, sel_processingFormat), sel_sampleRate);
  sub_1D446B6E0();
  sub_1D446B5D0();
  if (v19)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v14 <= -2147483650.0)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_1D446B5E0();
  if (!v20)
    goto LABEL_18;
  sub_1D42DB410((uint64_t)v11, (int)v14);
  if (!v12)
  {
    sub_1D44693F0(v13, &v35, (double)v11->duration.timescale);
    sub_1D42DA6B0(v11, &v35, (uint64_t)v30);
    if ((v31 & 0x8000000000000000) == 0)
    {
      if (HIDWORD(v31))
        goto LABEL_20;
      v21 = v32;
      v25 = v34;
      v26 = v33;
      sub_1D446B6B4((void *)v31, a4, a5, a6, a7);
      sub_1D446B6D8(v22);
      if ((v26 & 0x8000000000000000) == 0)
      {
        if (!HIDWORD(v26))
        {
          if (v21 != a3)
            sub_1D446A160(v13, v21, a4, a5);
          sub_1D44696B4((void *)v26, a4, a5, a10, a11, v28, v13);
          sub_1D446B6D8(v23);
          if ((v25 & 0x8000000000000000) != 0)
            goto LABEL_19;
          if (!HIDWORD(v25))
          {
            sub_1D446B6B4((void *)v25, a4, a5, a8, a9);
            sub_1D446B6D8(v24);
            return;
          }
        }
LABEL_20:
        sub_1D42DCED4();
        sub_1D43831CC();
        goto LABEL_21;
      }
    }
LABEL_19:
    sub_1D42DCED4();
    sub_1D43831DC();
LABEL_21:
    sub_1D43074E8();
    __break(1u);
  }
}

uint64_t sub_1D446A9AC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t (*a6)(void *, id, id *), uint64_t a7, uint64_t (*a8)(void *, id, id *), uint64_t a9, uint64_t (*a10)(void *, id *), uint64_t a11)
{
  id v18;
  void *(*v19)();
  uint64_t v20;
  uint64_t v21;

  v18 = objc_msgSend(a1, sel_processingFormat);
  v19 = sub_1D4469FE0(v18, a4, a5);
  v21 = v20;

  sub_1D446A764((uint64_t)a1, a2, a3, (uint64_t (*)(id *))v19, v21, a6, a7, a8, a9, a10, a11);
  return swift_release();
}

uint64_t sub_1D446AA8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(id *), uint64_t a5, uint64_t (*a6)(void *, id *), uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  double v10;
  char v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  unint64_t v24;
  _OWORD v28[6];
  _OWORD v29[4];

  sub_1D446B674();
  objc_msgSend(objc_msgSend(v9, sel_processingFormat), sel_sampleRate);
  sub_1D446B6E0();
  sub_1D446B5D0();
  if (v13)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v10 <= -2147483650.0)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1D446B5E0();
  if (!v14)
    goto LABEL_14;
  result = sub_1D42DB410(v7, (int)v10);
  if (!v8)
  {
    sub_1D44693F0(v9, v28, (double)*(int *)(v7 + 32));
    v16 = sub_1D42DBE40((CMTimeValue *)v7, (uint64_t *)v28);
    v17 = v16;
    v18 = *(_QWORD *)(v16 + 16);
    if (!v18)
    {
LABEL_16:
      result = sub_1D42BE8B4();
      __break(1u);
      return result;
    }
    v23 = v16 + 32;
    swift_bridgeObjectRetain();
    v19 = 32;
    v24 = v18;
    do
    {
      v20 = *(_OWORD *)(v17 + v19 + 16);
      v29[0] = *(_OWORD *)(v17 + v19);
      v29[1] = v20;
      v29[2] = *(_OWORD *)(v17 + v19 + 32);
      sub_1D446A764((uint64_t)v9, (uint64_t)v29, a3, a4, a5, (uint64_t (*)(void *, id, id *))sub_1D446AD60, 0, (uint64_t (*)(void *, id, id *))sub_1D446AD60, 0, a6, a7);
      a3 = sub_1D451AEE4();
      v19 += 48;
      --v18;
    }
    while (v18);
    sub_1D42BE8B4();
    if (v24 <= *(_QWORD *)(v17 + 16))
    {
      v21 = v23 + 48 * v24;
      v22 = *(_OWORD *)(v21 - 32);
      v28[3] = *(_OWORD *)(v21 - 48);
      v28[4] = v22;
      v28[5] = *(_OWORD *)(v21 - 16);
      sub_1D42BE8B4();
      return sub_1D451AEE4();
    }
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_1D446AC7C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t (*a6)(void *, id *), uint64_t a7)
{
  uint64_t v7;
  id v15;
  void *(*v16)();
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v15 = objc_msgSend(a1, sel_processingFormat);
  v16 = sub_1D4469FE0(v15, a4, a5);
  v18 = v17;

  v19 = sub_1D446AA8C((uint64_t)a1, a2, a3, (uint64_t (*)(id *))v16, v18, a6, a7);
  if (!v21)
    v7 = v19;
  swift_release();
  return v7;
}

uint64_t sub_1D446AD60(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  id v4;
  id v5;

  if (a3)
  {
    type metadata accessor for SNError();
    v4 = sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 2, 0, 0xD000000000000019, 0x80000001D455A410);
    v5 = v4;
    *a3 = v4;
  }
  return 0;
}

void *sub_1D446ADDC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  void *result;

  type metadata accessor for SNAudioFileUtils();
  result = sub_1D4469168(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

void sub_1D446AE30(uint64_t a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;

  type metadata accessor for SNAudioFileUtils();
  sub_1D446906C(a1, a2);
  if (!v3)
    *a3 = v7;
  sub_1D4377BF8();
}

id sub_1D446AE74()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SNAudioFileUtils();
  return objc_msgSendSuper2(&v2, sel_init);
}

id sub_1D446AEC4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SNAudioFileUtils();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D446AEF4(void (*a1)(uint64_t *__return_ptr))
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  uint64_t v6;

  *(_QWORD *)(v1 + 16) = 0;
  v4 = (void *)MEMORY[0x1D825DB34]();
  a1(&v6);
  if (v2)
  {
    objc_autoreleasePoolPop(v4);
    swift_release();
  }
  else
  {
    v5 = *(void **)(v1 + 16);
    *(_QWORD *)(v1 + 16) = v6;

    objc_autoreleasePoolPop(v4);
  }
  sub_1D42DD1D8();
}

uint64_t sub_1D446AF74()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = 0;
  return result;
}

BOOL sub_1D446AF80()
{
  uint64_t v0;
  void *v1;
  _BOOL8 v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1 != 0;
  *(_QWORD *)(v0 + 16) = 0;

  return v2;
}

unint64_t sub_1D446AFB4()
{
  unint64_t result;

  result = qword_1EFE53290;
  if (!qword_1EFE53290)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for AudioFileSequence.Iterator, &type metadata for AudioFileSequence.Iterator);
    atomic_store(result, (unint64_t *)&qword_1EFE53290);
  }
  return result;
}

void type metadata accessor for AudioFileSequence()
{
  sub_1D42CB35C();
}

_QWORD *initializeBufferWithCopyOfBuffer for AudioFileSequence.Iterator(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for AudioFileSequence.Iterator(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

_QWORD *assignWithTake for AudioFileSequence.Iterator(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

void type metadata accessor for AudioFileSequence.Iterator()
{
  sub_1D42CB35C();
}

uint64_t type metadata accessor for SNAudioFileUtils()
{
  return objc_opt_self();
}

void sub_1D446B0DC()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = (void *)sub_1D4519B28();
  v6[0] = 0;
  v3 = objc_msgSend(v0, sel_initForReading_error_, v2, v6);

  if (v3)
  {
    sub_1D42CB348();
    sub_1D446B684();
    sub_1D446B700();
  }
  else
  {
    v4 = v6[0];
    sub_1D42F20F0();

    sub_1D42B7124();
    v5 = sub_1D42CB348();
    sub_1D446B634(v5);
  }
  sub_1D446B648();
}

void sub_1D446B19C(uint64_t a1, void *a2, char a3)
{
  void *v3;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v6 = (void *)sub_1D4519B28();
  v10[0] = 0;
  v7 = objc_msgSend(v3, sel_initForReading_commonFormat_interleaved_error_, v6, a2, a3 & 1, v10);

  if (v7)
  {
    sub_1D42CB348();
    sub_1D446B684();
    sub_1D446B700();
  }
  else
  {
    v8 = v10[0];
    sub_1D42F20F0();

    sub_1D42B7124();
    v9 = sub_1D42CB348();
    sub_1D446B634(v9);
  }
  sub_1D446B648();
}

id sub_1D446B26C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  void *v4;
  void *v5;
  void *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  id v15;
  id v16;
  uint64_t v17;
  id v19[2];

  v5 = v4;
  v19[1] = *(id *)MEMORY[0x1E0C80C00];
  v9 = (void *)sub_1D4519B28();
  v10 = (void *)sub_1D451A5A8();
  swift_bridgeObjectRelease();
  v19[0] = 0;
  v11 = objc_msgSend(v5, sel_initForWriting_settings_commonFormat_interleaved_error_, v9, v10, a3, a4 & 1, v19);

  v12 = v19[0];
  if (v11)
  {
    v13 = sub_1D4519BC4();
    v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
    v15 = v12;
    v14(a1, v13);
  }
  else
  {
    v16 = v19[0];
    sub_1D4519AA4();

    swift_willThrow();
    v17 = sub_1D4519BC4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a1, v17);
  }
  return v11;
}

unint64_t sub_1D446B3C8()
{
  unint64_t result;

  result = qword_1EFE53298;
  if (!qword_1EFE53298)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFE53298);
  }
  return result;
}

uint64_t sub_1D446B404()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1D446B428(uint64_t a1)
{
  uint64_t v1;

  return sub_1D446A0CC(a1, *(_QWORD *)(v1 + 16), *(unsigned int *)(v1 + 24));
}

uint64_t sub_1D446B434()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1D446B458(_QWORD *a1)
{
  uint64_t v1;

  return sub_1D446A108(a1, v1);
}

void *sub_1D446B460()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

double sub_1D446B484@<D0>(_OWORD *a1@<X8>)
{
  return sub_1D4469588(a1);
}

unint64_t sub_1D446B49C()
{
  unint64_t result;

  result = qword_1EFE532A0;
  if (!qword_1EFE532A0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4544298, &unk_1E97A1C68);
    atomic_store(result, (unint64_t *)&qword_1EFE532A0);
  }
  return result;
}

void *sub_1D446B4D8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1D446ADDC(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_1D446B4F0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D446B530 + 4 * byte_1D4544140[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D446B550 + 4 * byte_1D4544145[v4]))();
}

_BYTE *sub_1D446B530(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D446B550(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D446B558(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D446B560(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D446B568(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D446B570(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for AudioFileSequence.DomainError()
{
  sub_1D42CB35C();
}

unint64_t sub_1D446B58C()
{
  unint64_t result;

  result = qword_1EFE532A8;
  if (!qword_1EFE532A8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4544270, &unk_1E97A1C68);
    atomic_store(result, (unint64_t *)&qword_1EFE532A8);
  }
  return result;
}

double sub_1D446B5E0()
{
  return 2147483650.0;
}

uint64_t sub_1D446B5F0@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(char *, uint64_t))(v2 + 16))((char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
}

id sub_1D446B614()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 3862));
}

uint64_t sub_1D446B634(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_1D446B674()
{
  return type metadata accessor for SNTimeUtils();
}

id sub_1D446B684()
{
  void *v0;

  return v0;
}

uint64_t sub_1D446B694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

CMTime *sub_1D446B6A4(int a1, int32_t a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, CMTime *a18)
{
  return CMTimeConvertScale((CMTime *)&a18, (CMTime *)&a9, a2, kCMTimeRoundingMethod_RoundTowardNegativeInfinity);
}

void sub_1D446B6B4(void *a1, uint64_t (*a2)(id *), uint64_t a3, uint64_t (*a4)(void *, id, id *), uint64_t a5)
{
  uint64_t (*v5)(void *, id *);

  sub_1D4469A78(a1, a2, a3, a4, a5, v5);
}

unint64_t sub_1D446B6C4()
{
  return 0xD000000000000017;
}

uint64_t sub_1D446B6D8(uint64_t result)
{
  return sub_1D4469D38(result);
}

double sub_1D446B6E0()
{
  void *v0;
  double result;

  return result;
}

uint64_t sub_1D446B6E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

uint64_t sub_1D446B6F4()
{
  return swift_arrayDestroy();
}

uint64_t sub_1D446B700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

void sub_1D446B70C()
{
  void *v0;

}

uint64_t sub_1D446B718()
{
  _OWORD *v0;
  __int128 v1;
  __int128 v2;
  _OWORD v4[4];

  v1 = v0[1];
  v4[0] = *v0;
  v4[1] = v1;
  v2 = v0[3];
  v4[2] = v0[2];
  v4[3] = v2;
  sub_1D4364330((uint64_t)v4);
  sub_1D446F290();
  sub_1D4364384((uint64_t)v4);
  sub_1D446CF14();
  sub_1D438C720();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D446B788(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t result;
  char v14;
  BOOL v15;
  char v16;
  BOOL v17;
  char v18;
  BOOL v19;
  char v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v24 = a1[7];
  v25 = a1[6];
  v8 = a2[2];
  v9 = a2[3];
  v10 = a2[4];
  v11 = a2[5];
  v12 = *a1 == *a2 && a1[1] == a2[1];
  v22 = a2[6];
  v23 = a2[7];
  if (v12 || (sub_1D42F1F04(), result = sub_1D43073F0(), (v14 & 1) != 0))
  {
    v15 = v4 == v8 && v5 == v9;
    if (v15 || (sub_1D42F1F04(), result = sub_1D43073F0(), (v16 & 1) != 0))
    {
      v17 = v6 == v10 && v7 == v11;
      if (v17 || (sub_1D42F1F04(), result = sub_1D43073F0(), (v18 & 1) != 0))
      {
        v19 = v25 == v22 && v24 == v23;
        if (v19 || (sub_1D42F1F04(), result = sub_1D43073F0(), (v20 & 1) != 0))
        {
          if (a1[8] == a2[8] && a1[9] == a2[9])
            return 1;
          else
            return sub_1D451B820();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1D446B8D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6E49726576726573 && a2 == 0xEA00000000006F66;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461507972657571 && a2 == 0xE900000000000068)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D446B9D4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7461507972657571;
  else
    return 0x6E49726576726573;
}

uint64_t sub_1D446BA14(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_1D42B28FC(&qword_1EFE532E0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1D42CB210();
  v7 = v6 - v5;
  sub_1D42B5528(a1, a1[3]);
  sub_1D446CB10();
  sub_1D451BA24();
  sub_1D43642F4();
  sub_1D451B760();
  if (!v1)
    sub_1D451B724();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1D446BB40()
{
  _OWORD *v0;
  __int128 v1;
  __int128 v2;
  _OWORD v4[4];

  sub_1D451B958();
  v1 = v0[1];
  v4[0] = *v0;
  v4[1] = v1;
  v2 = v0[3];
  v4[2] = v0[2];
  v4[3] = v2;
  sub_1D4364330((uint64_t)v4);
  sub_1D446F290();
  sub_1D4364384((uint64_t)v4);
  sub_1D446CF14();
  sub_1D438C720();
  swift_bridgeObjectRelease();
  return sub_1D451B994();
}

uint64_t sub_1D446BBB8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = sub_1D42B28FC(&qword_1EFE532C8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1D42CB210();
  sub_1D42B5528(a1, a1[3]);
  sub_1D446CB10();
  sub_1D451BA0C();
  if (v2)
    return sub_1D42CB9B4();
  sub_1D4364258();
  sub_1D451B688();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1D451B64C();
  v9 = v8;
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  v11 = v7;
  sub_1D43071DC(v10);
  swift_bridgeObjectRetain();
  sub_1D42CB9B4();
  sub_1D42B7204();
  sub_1D42D3258();
  sub_1D435EB80();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v13;
  a2[1] = v14;
  a2[2] = v15;
  a2[3] = v16;
  a2[4] = v17;
  a2[5] = v18;
  a2[6] = v19;
  a2[7] = v20;
  a2[8] = v11;
  a2[9] = v9;
  return result;
}

uint64_t sub_1D446BDCC()
{
  char *v0;

  return sub_1D446B9D4(*v0);
}

uint64_t sub_1D446BDD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D446B8D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D446BDF8()
{
  sub_1D446CB10();
  return sub_1D451BA3C();
}

uint64_t sub_1D446BE20()
{
  sub_1D446CB10();
  return sub_1D451BA48();
}

void *sub_1D446BE48@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  void *result;
  _QWORD v5[10];

  result = (void *)sub_1D446BBB8(a1, v5);
  if (!v2)
    return memcpy(a2, v5, 0x50uLL);
  return result;
}

uint64_t sub_1D446BE90(_QWORD *a1)
{
  return sub_1D446BA14(a1);
}

uint64_t sub_1D446BEAC()
{
  _OWORD *v0;
  __int128 v1;
  __int128 v2;
  _OWORD v4[4];

  v1 = v0[1];
  v4[0] = *v0;
  v4[1] = v1;
  v2 = v0[3];
  v4[2] = v0[2];
  v4[3] = v2;
  sub_1D451B958();
  sub_1D4364330((uint64_t)v4);
  sub_1D446F290();
  sub_1D4364384((uint64_t)v4);
  swift_bridgeObjectRetain();
  sub_1D451A74C();
  swift_bridgeObjectRelease();
  return sub_1D451B994();
}

id sub_1D446BF38(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  char *v13;
  char *v14;
  id v15;
  objc_super v19;

  v5 = *(_QWORD *)&a1[OBJC_IVAR___SNFileServerInfo_impl];
  v4 = *(_QWORD *)&a1[OBJC_IVAR___SNFileServerInfo_impl + 8];
  v6 = *(_QWORD *)&a1[OBJC_IVAR___SNFileServerInfo_impl + 16];
  v7 = *(_QWORD *)&a1[OBJC_IVAR___SNFileServerInfo_impl + 24];
  v8 = *(_QWORD *)&a1[OBJC_IVAR___SNFileServerInfo_impl + 32];
  v9 = *(_QWORD *)&a1[OBJC_IVAR___SNFileServerInfo_impl + 40];
  v10 = *(_QWORD *)&a1[OBJC_IVAR___SNFileServerInfo_impl + 48];
  v11 = *(_QWORD *)&a1[OBJC_IVAR___SNFileServerInfo_impl + 56];
  v12 = (objc_class *)type metadata accessor for SNListFilesRequest();
  v13 = (char *)objc_allocWithZone(v12);
  v14 = &v13[OBJC_IVAR___SNListFilesRequest_impl];
  *(_QWORD *)v14 = v5;
  *((_QWORD *)v14 + 1) = v4;
  *((_QWORD *)v14 + 2) = v6;
  *((_QWORD *)v14 + 3) = v7;
  *((_QWORD *)v14 + 4) = v8;
  *((_QWORD *)v14 + 5) = v9;
  *((_QWORD *)v14 + 6) = v10;
  *((_QWORD *)v14 + 7) = v11;
  *((_QWORD *)v14 + 8) = a2;
  *((_QWORD *)v14 + 9) = a3;
  v19.receiver = v13;
  v19.super_class = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = objc_msgSendSuper2(&v19, sel_init);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v15;
}

id (*sub_1D446C084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  v10 = sub_1D42B28FC(&qword_1EFE4DC70);
  MEMORY[0x1E0C80A78](v10);
  sub_1D42CB210();
  v13 = v12 - v11;
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D83900]), sel_init);
  objc_msgSend(v14, sel_setDispatchQueue_, a1);
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D1B360]), sel_init);
  sub_1D43E5B7C(0xD000000000000017, 0x80000001D4555FF0, v15);
  v16 = (_QWORD *)(v5 + OBJC_IVAR___SNListFilesRequest_impl);
  v17 = *(_QWORD *)(v5 + OBJC_IVAR___SNListFilesRequest_impl + 16);
  v18 = v16[3];
  swift_bridgeObjectRetain();
  sub_1D446CB4C(v17, v18, v15);
  v20 = v16[8];
  v19 = v16[9];
  v21 = sub_1D451AAC4();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v13, 1, 1, v21);
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = 0;
  v22[3] = 0;
  v22[4] = v15;
  v22[5] = v20;
  v22[6] = v19;
  v22[7] = a4;
  v22[8] = a5;
  v22[9] = a2;
  v22[10] = a3;
  v22[11] = v14;
  swift_bridgeObjectRetain();
  v23 = v15;
  swift_retain();
  swift_retain();
  v24 = v14;
  sub_1D444D358();
  v26 = v25;
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = v26;
  v27[3] = v24;
  v27[4] = v23;
  return sub_1D446CCD0;
}

uint64_t sub_1D446C24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int128 v10;
  uint64_t v11;

  *(_QWORD *)(v8 + 328) = v11;
  *(_OWORD *)(v8 + 312) = v10;
  *(_QWORD *)(v8 + 296) = a7;
  *(_QWORD *)(v8 + 304) = a8;
  *(_QWORD *)(v8 + 280) = a5;
  *(_QWORD *)(v8 + 288) = a6;
  *(_QWORD *)(v8 + 272) = a4;
  return swift_task_switch();
}

uint64_t sub_1D446C284()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[34];
  v0[2] = v0;
  v0[3] = sub_1D446C310;
  v2 = swift_continuation_init();
  v0[18] = MEMORY[0x1E0C809B0];
  v3 = v0 + 18;
  v3[1] = 0x40000000;
  v3[2] = sub_1D44C3644;
  v3[3] = &unk_1E97B3700;
  v3[4] = v2;
  objc_msgSend(v1, sel_activateWithCompletion_, v3);
  return swift_continuation_await();
}

uint64_t sub_1D446C310()
{
  uint64_t v0;

  sub_1D43E61DC();
  *(_QWORD *)(v0 + 336) = *(_QWORD *)(v0 + 48);
  return sub_1D42B8DA8();
}

uint64_t sub_1D446C358()
{
  uint64_t *v0;
  _QWORD *v1;

  type metadata accessor for SNFileSharingUtils();
  v1 = (_QWORD *)swift_task_alloc();
  v0[43] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_1D446C3B4;
  return sub_1D4329064(v0[35], v0[36], v0[34]);
}

uint64_t sub_1D446C3B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 352) = a1;
  *(_QWORD *)(v3 + 360) = v1;
  swift_task_dealloc();
  return sub_1D42B8DA8();
}

uint64_t sub_1D446C418()
{
  objc_super *v0;
  Class super_class;
  void (*v2)(_QWORD);
  void (*v3)(objc_super *);
  uint64_t v4;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;

  super_class = v0[20].super_class;
  v2 = (void (*)(_QWORD))v0[19].super_class;
  v3 = (void (*)(objc_super *))v0[18].super_class;
  v4 = sub_1D446CCDC(v0[22].receiver);
  if (v4)
    v5 = v4;
  else
    v5 = MEMORY[0x1E0DEE9D8];
  v6 = (objc_class *)type metadata accessor for SNFileListingResult();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR___SNFileListingResult_fileItems] = v5;
  v0[16].receiver = v7;
  v0[16].super_class = v6;
  v8 = objc_msgSendSuper2(v0 + 16, sel_init);
  v0[23].receiver = v8;
  v0[15].super_class = v6;
  v0[14].receiver = v8;
  v9 = v8;
  v3(v0 + 14);
  sub_1D42B5400((uint64_t)&v0[14]);
  v2(0);
  v0[5].receiver = v0;
  v0[5].super_class = (Class)sub_1D446C550;
  v10 = swift_continuation_init();
  v0[11].super_class = (Class)MEMORY[0x1E0C809B0];
  v0[12].receiver = (id)0x40000000;
  v0[12].super_class = (Class)sub_1D44C3644;
  v0[13].receiver = &unk_1E97B3A80;
  v0[13].super_class = (Class)v10;
  -[objc_class activateWithCompletion:](super_class, sel_activateWithCompletion_, &v0[11].super_class);
  return swift_continuation_await();
}

uint64_t sub_1D446C550()
{
  uint64_t v0;

  sub_1D43E61DC();
  *(_QWORD *)(v0 + 376) = *(_QWORD *)(v0 + 112);
  return sub_1D42B8DA8();
}

uint64_t sub_1D446C598()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 352);

  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D446C5C8()
{
  uint64_t v0;

  swift_willThrow();
  sub_1D446CF00();
  sub_1D446CF0C();
  sub_1D4311F78();
  sub_1D4311F78();
  return sub_1D42E3A2C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D446C608()
{
  uint64_t v0;

  sub_1D446CF00();
  sub_1D446CF0C();
  sub_1D4311F78();
  sub_1D4311F78();
  return sub_1D42E3A2C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D446C640()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 368);
  v2 = *(void **)(v0 + 352);
  swift_willThrow();

  sub_1D446CF00();
  sub_1D446CF0C();
  sub_1D4311F78();
  sub_1D4311F78();
  return sub_1D42E3A2C(*(uint64_t (**)(void))(v0 + 8));
}

id sub_1D446C68C(uint64_t a1, void *a2, void *a3)
{
  sub_1D451AB3C();
  objc_msgSend(a2, sel_invalidate);
  return objc_msgSend(a3, sel_invalidate);
}

id SNListFilesRequest.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SNListFilesRequest.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SNListFilesRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SNListFilesRequest();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SNListFilesRequest()
{
  return objc_opt_self();
}

id (*sub_1D446C7F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  sub_1D446C084(a1, a2, a3, a4, a5);
  return sub_1D446CCD0;
}

uint64_t method lookup function for SNListFilesRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t destroy for ListFilesRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ListFilesRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ListFilesRequest(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for ListFilesRequest(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

_QWORD *assignWithTake for ListFilesRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ListFilesRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ListFilesRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ListFilesRequest()
{
  return &type metadata for ListFilesRequest;
}

unint64_t sub_1D446CAD4()
{
  unint64_t result;

  result = qword_1EFE532C0;
  if (!qword_1EFE532C0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4544344, &type metadata for ListFilesRequest);
    atomic_store(result, (unint64_t *)&qword_1EFE532C0);
  }
  return result;
}

unint64_t sub_1D446CB10()
{
  unint64_t result;

  result = qword_1EFE532D0;
  if (!qword_1EFE532D0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45444C0, &type metadata for ListFilesRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE532D0);
  }
  return result;
}

void sub_1D446CB4C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_1D451A6C8();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setDestinationID_, v4);

}

uint64_t sub_1D446CB9C()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1D446CBE8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1D4322434;
  return sub_1D446C24C(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1D446CC9C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

id sub_1D446CCD0()
{
  uint64_t v0;

  return sub_1D446C68C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1D446CCDC(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_fileItems);
  if (!v1)
    return 0;
  v2 = v1;
  sub_1D446CD38();
  v3 = sub_1D451A92C();

  return v3;
}

unint64_t sub_1D446CD38()
{
  unint64_t result;

  result = qword_1EFE56790;
  if (!qword_1EFE56790)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFE56790);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ListFilesRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D446CDC0 + 4 * byte_1D45442E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D446CDF4 + 4 * byte_1D45442E0[v4]))();
}

uint64_t sub_1D446CDF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D446CDFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D446CE04);
  return result;
}

uint64_t sub_1D446CE10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D446CE18);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D446CE1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D446CE24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ListFilesRequest.CodingKeys()
{
  return &type metadata for ListFilesRequest.CodingKeys;
}

unint64_t sub_1D446CE44()
{
  unint64_t result;

  result = qword_1EFE53300;
  if (!qword_1EFE53300)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4544498, &type metadata for ListFilesRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE53300);
  }
  return result;
}

unint64_t sub_1D446CE84()
{
  unint64_t result;

  result = qword_1EFE53308;
  if (!qword_1EFE53308)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4544408, &type metadata for ListFilesRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE53308);
  }
  return result;
}

unint64_t sub_1D446CEC4()
{
  unint64_t result;

  result = qword_1EFE53310[0];
  if (!qword_1EFE53310[0])
  {
    result = MEMORY[0x1D825E41C](&unk_1D4544430, &type metadata for ListFilesRequest.CodingKeys);
    atomic_store(result, qword_1EFE53310);
  }
  return result;
}

id sub_1D446CF00()
{
  void *v0;

  return v0;
}

uint64_t sub_1D446CF0C()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  return v1(v0);
}

uint64_t sub_1D446CF14()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D446CF20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1D825E41C](&unk_1D452AA50, a4);
  return sub_1D446CF90();
}

uint64_t sub_1D446CF90()
{
  return sub_1D4519924();
}

uint64_t sub_1D446CFD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _BYTE *v6;

  v4 = a2 - a1;
  if (!a1)
    v4 = 0;
  if (a3)
  {
    if (v4 == a4 - a3)
      return sub_1D451B1A8();
  }
  else if (!v4)
  {
    return sub_1D451B1A8();
  }
  sub_1D4370694();
  sub_1D42B6D0C();
  *v6 = 0;
  return sub_1D4312028();
}

void sub_1D446D038(uint64_t a1, void *a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = (void *)MEMORY[0x1D825DB34]();
  v5 = *(void **)(a1 + 16);
  if (v5)
  {
    v9[0] = 0;
    v6 = v5;
    if ((objc_msgSend(v6, sel_writeFromBuffer_error_, a2, v9) & 1) != 0)
    {
      v7 = v9[0];
    }
    else
    {
      v8 = v9[0];
      sub_1D4519AA4();

      swift_willThrow();
    }

  }
  else
  {
    sub_1D42B28FC(&qword_1EFE4A098);
    sub_1D42DCD28();
    sub_1D42B6D0C();
    sub_1D4312028();
  }
  objc_autoreleasePoolPop(v4);

}

uint64_t sub_1D446D140()
{
  return sub_1D451A980();
}

uint64_t sub_1D446D160()
{
  return sub_1D451B220();
}

uint64_t sub_1D446D188()
{
  return sub_1D4519C30();
}

uint64_t sub_1D446D1A4()
{
  return sub_1D451A890();
}

uint64_t sub_1D446D1C0()
{
  return sub_1D451B19C();
}

uint64_t sub_1D446D1DC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D451B160();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1D446D24C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = MEMORY[0x1D825C1D8](a1, a2, AssociatedTypeWitness);
  return a3(v7);
}

uint64_t sub_1D446D2CC()
{
  sub_1D451B958();
  sub_1D42BA2F0();
  return sub_1D451B994();
}

uint64_t sub_1D446D304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 88);
  v2 = sub_1D451B160();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1D446D348()
{
  sub_1D446D304();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ReleasingContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ReleasingContainer);
}

uint64_t sub_1D446D378()
{
  return sub_1D446D46C();
}

uint64_t sub_1D446D384()
{
  uint64_t v0;

  sub_1D451B178();
  return v0;
}

uint64_t sub_1D446D3A8()
{
  sub_1D446D384();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FixedAddressMutableBuffer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FixedAddressMutableBuffer);
}

uint64_t sub_1D446D3D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_slowAlloc();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)(v1 + 24) = v3 + a1;
  return v1;
}

uint64_t sub_1D446D40C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
    MEMORY[0x1D825E524](v1, -1, -1);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FixedAddressMutableRawBuffer()
{
  return objc_opt_self();
}

uint64_t sub_1D446D45C()
{
  return sub_1D446D46C();
}

uint64_t sub_1D446D46C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1D446D4A4()
{
  uint64_t v0;

  sub_1D451B154();
  return v0;
}

uint64_t sub_1D446D4C8()
{
  sub_1D446D4A4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FixedAddressMutablePointer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FixedAddressMutablePointer);
}

uint64_t sub_1D446D4F4(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D446D534 + 4 * byte_1D4544510[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D446D554 + 4 * byte_1D4544515[v4]))();
}

_BYTE *sub_1D446D534(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D446D554(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D446D55C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D446D564(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D446D56C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D446D574(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t type metadata accessor for ReleasingContainer.DomainError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ReleasingContainer.DomainError);
}

void sub_1D446D58C()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D446D59C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D446D24C(a1, a2, *(uint64_t (**)(uint64_t))(v2 + 40));
}

uint64_t sub_1D446D5BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _BYTE *v6;

  v4 = a4 - a3;
  if (!a3)
    v4 = 0;
  if (a1)
  {
    if (v4 == a2 - a1)
      return sub_1D451B1A8();
  }
  else if (!v4)
  {
    return sub_1D451B1A8();
  }
  sub_1D4370694();
  sub_1D42B6D0C();
  *v6 = 0;
  return sub_1D4312028();
}

uint64_t sub_1D446D63C(uint64_t result, uint64_t a2, uint64_t a3)
{
  char v3;
  char *v4;

  if (a3 < 0)
    goto LABEL_6;
  if (!result)
  {
    if (!a3)
    {
      v3 = 2;
      goto LABEL_7;
    }
LABEL_6:
    v3 = 1;
LABEL_7:
    sub_1D4370694();
    sub_1D42B6D0C();
    *v4 = v3;
    return sub_1D4312028();
  }
  if (a2 - result < a3)
    goto LABEL_6;
  return result;
}

uint64_t storeEnumTagSinglePayload for MemUtils.DomainError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D446D6FC + 4 * byte_1D454451F[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D446D730 + 4 * byte_1D454451A[v4]))();
}

uint64_t sub_1D446D730(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D446D738(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D446D740);
  return result;
}

uint64_t sub_1D446D74C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D446D754);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D446D758(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D446D760(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MemUtils.DomainError()
{
  return &type metadata for MemUtils.DomainError;
}

unint64_t sub_1D446D780()
{
  unint64_t result;

  result = qword_1EFE53520;
  if (!qword_1EFE53520)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454484C, &type metadata for MemUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE53520);
  }
  return result;
}

void sub_1D446D7BC(void *a1)
{
  void *v1;
  double v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  sub_1D446D970(a1);
  if (v1)
  {
    swift_getErrorValue();
    v5 = sub_1D451B8E0();
    v7 = v6;
    sub_1D43F7BB0();
    swift_allocError();
    *v8 = 0xD000000000000016;
    v8[1] = 0x80000001D455A4C0;
    v8[2] = v5;
    v8[3] = v7;
    sub_1D4312028();

  }
  else
  {
    sub_1D446D9E4(a1);
    sub_1D446DA80();
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v3);
    sub_1D4443168();

  }
}

_DWORD *sub_1D446D970(void *a1)
{
  _DWORD *result;
  uint64_t v2;
  uint64_t v3;

  result = objc_msgSend(a1, sel_streamDescription);
  if (result[2] != 1819304813)
  {
    sub_1D42DCEE8();
    sub_1D430740C();
    sub_1D446DA64(v2, v3, (uint64_t)"Audio format must be PCM");
    return (_DWORD *)sub_1D4312028();
  }
  return result;
}

id sub_1D446D9E4(void *a1)
{
  id result;
  double v3;
  uint64_t v4;
  uint64_t v5;

  if (!objc_msgSend(a1, sel_channelCount) || (result = objc_msgSend(a1, sel_sampleRate), v3 <= 0.0))
  {
    sub_1D42DCEE8();
    sub_1D430740C();
    sub_1D446DA64(v4, v5, (uint64_t)"Audio format channel count and sample rate must be nonzero");
    return (id)sub_1D4312028();
  }
  return result;
}

id sub_1D446DA64@<X0>(uint64_t a1@<X1>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  return sub_1D43EC59C(0xD000000000000017, a1, 3, 0, a2, (a3 - 32) | 0x8000000000000000);
}

id sub_1D446DA80()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 3672));
}

void sub_1D446DA8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  id v45;
  unint64_t v46;
  uint64_t v47;

  v47 = *MEMORY[0x1E0C80C00];
  type metadata accessor for SNUtils();
  sub_1D44BD08C();
  v1 = v0;
  v2 = sub_1D44BD6F0();
  v3 = sub_1D446F218(v2, sel_inputDescriptionsByName);
  sub_1D42EA3E0((uint64_t)v3, (unint64_t *)&qword_1EFE40360);
  v4 = sub_1D43B1C18();

  v5 = *(_QWORD *)(v4 + 16);
  v6 = swift_bridgeObjectRelease();
  if (v5 != 1)
    goto LABEL_13;
  v7 = sub_1D446F218(v6, sel_inputDescriptionsByName);
  v8 = sub_1D43B1C18();

  v9 = (void *)sub_1D4396600(v8);
  v10 = swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_13;
  if (sub_1D43B1BA0(v10, sel_type) != (id)5
    || (v11 = sub_1D43B1BA0(5, sel_multiArrayConstraint)) == 0)
  {

LABEL_13:
    sub_1D42CB8F4();
    sub_1D42D3258();
    sub_1D42DCEE8();
    sub_1D43F8880(0x80000001D4551120, 0xD000000000000026, (uint64_t)"Must only have one input audio feature");
    sub_1D4312028();
    return;
  }
  v12 = v11;
  v45 = 0;
  if ((sub_1D446EF8C(v1, (uint64_t)&v45, v11) & 1) == 0)
  {
    v25 = v45;
    sub_1D42CB8F4();
    v26 = (void *)sub_1D4519AA4();

    swift_willThrow();
    sub_1D42DCEE8();
    sub_1D446F228();
    sub_1D451B400();
    swift_bridgeObjectRelease();
    sub_1D446F1B8();
    v28 = sub_1D42EA3E0(v27, (unint64_t *)&qword_1EFE404B0);
    MEMORY[0x1D825C280](v1, v28);
    sub_1D446F274();
    sub_1D42D3258();
    sub_1D42CB338();
    sub_1D451A794();
    v29 = v46;
    v30 = sub_1D43F8944();
    sub_1D43EC59C(v30, v31, v32, v33, v34, v29);
    sub_1D42D3258();
    swift_willThrow();

LABEL_17:
    return;
  }
  v13 = v45;
  v14 = sub_1D42D3258();
  v15 = sub_1D446F218(v14, sel_outputDescriptionsByName);
  v16 = sub_1D43B1C18();

  v17 = *(_QWORD *)(v16 + 16);
  v18 = sub_1D435EB80();
  if (v17 != 1
    || (v19 = sub_1D446F218(v18, sel_outputDescriptionsByName),
        v20 = sub_1D43B1C18(),
        v19,
        v21 = (void *)sub_1D4396600(v20),
        sub_1D42B7204(),
        !v21))
  {
LABEL_16:
    sub_1D42CB8F4();
    sub_1D42DCEE8();
    sub_1D43F8880(0x80000001D4551120, 0xD00000000000002CLL, (uint64_t)"Must only have one output multiarray feature");
    sub_1D4312028();
    goto LABEL_17;
  }
  if (objc_msgSend(v21, sel_type) != (id)5
    || (v22 = objc_msgSend(v21, sel_multiArrayConstraint)) == 0)
  {

    goto LABEL_16;
  }
  v23 = v22;
  v45 = 0;
  if ((sub_1D446EF8C(v2, (uint64_t)&v45, v22) & 1) != 0)
  {
    v24 = v45;
    sub_1D42CB8F4();
  }
  else
  {
    v35 = v45;
    v36 = (void *)sub_1D4519AA4();

    swift_willThrow();
    sub_1D42DCEE8();
    sub_1D446F228();
    sub_1D451B400();
    swift_bridgeObjectRelease();
    sub_1D446F1B8();
    v38 = sub_1D42EA3E0(v37, (unint64_t *)&qword_1EFE404B0);
    MEMORY[0x1D825C280](v2, v38);
    sub_1D446F274();
    sub_1D42CB8F4();
    sub_1D4347994();
    sub_1D446F274();
    v39 = v46;
    v40 = sub_1D43F8944();
    sub_1D43EC59C(v40, v41, v42, v43, v44, v39);
    sub_1D42CB8F4();
    swift_willThrow();

  }
}

void sub_1D446DF34(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t ObjectType;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  void *v35;
  uint64_t inited;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  objc_class *v51;
  uint64_t v52;
  id v53;
  id v54;
  objc_super v55;
  id v56;
  id v57;
  objc_super v58;
  void *v59;
  _QWORD v60[3];
  char v61;
  __int128 v62;
  uint64_t v63;
  id v64;

  ObjectType = swift_getObjectType();
  sub_1D42CB5C8();
  v5 = v1;
  sub_1D446DA8C();
  if (v2)
  {

    swift_deallocPartialClassInstance();
  }
  else
  {
    v55.receiver = v5;
    v55.super_class = (Class)ObjectType;
    v60[0] = 0x40467A0000;
    v60[1] = 0x45EA600042FA0000;
    v60[2] = 0x3C23D70A00000002;
    v61 = 0;
    v62 = xmmword_1D452E6F0;
    v63 = 0;
    sub_1D42B28FC(&qword_1EFE40410);
    v6 = sub_1D42B6F40();
    *(_OWORD *)(v6 + 16) = xmmword_1D45448C0;
    *(_QWORD *)(v6 + 32) = sub_1D446F1E4();
    v7 = sub_1D446F1E4();
    *(_QWORD *)(v6 + 48) = sub_1D446F27C(v7);
    sub_1D446F1AC();
    v64 = v59;
    v8 = sub_1D42B6F40();
    *(_OWORD *)(v8 + 16) = xmmword_1D45448D0;
    *(_QWORD *)(v8 + 32) = sub_1D446F1E4();
    *(_QWORD *)(v8 + 40) = sub_1D446F1E4();
    *(_QWORD *)(v8 + 48) = sub_1D451AC44();
    *(_QWORD *)(v8 + 56) = sub_1D451AC44();
    v9 = sub_1D446F1AC();
    v10 = (uint64_t)v59;
    sub_1D42EA3E0(v9, &qword_1EFE53530);
    v11 = sub_1D42B6F40();
    *(_OWORD *)(v11 + 16) = xmmword_1D45448C0;
    v12 = (void *)objc_opt_self();
    *(_QWORD *)(v11 + 32) = sub_1D446F1A4(v12, sel_valueWithRange_, 1);
    *(_QWORD *)(v11 + 40) = sub_1D446F188();
    *(_QWORD *)(v11 + 48) = sub_1D446F1A4(v12, sel_valueWithRange_, 15600);
    sub_1D446F1AC();
    v13 = sub_1D446F23C();
    v14 = sub_1D42B6F40();
    *(_OWORD *)(v14 + 16) = xmmword_1D45448D0;
    *(_QWORD *)(v14 + 32) = sub_1D446F188();
    *(_QWORD *)(v14 + 40) = sub_1D446F188();
    *(_QWORD *)(v14 + 48) = sub_1D446F1A4(v12, sel_valueWithRange_, 64);
    *(_QWORD *)(v14 + 56) = sub_1D446F1A4(v12, sel_valueWithRange_, 96);
    sub_1D446F1AC();
    v15 = sub_1D446F23C();
    sub_1D44418D8();
    v16 = v10;
    sub_1D4345DEC(v17);
    sub_1D42B7204();
    sub_1D44418BC();
    sub_1D4345DEC(v18);
    v19 = sub_1D42B7204();
    sub_1D42EA3E0(v19, &qword_1EFE53538);
    v56 = v13;
    v20 = sub_1D446E5EC((uint64_t)v64, 65568, v56);
    v64 = v15;
    v21 = sub_1D446E5EC(v16, 65568, v64);
    sub_1D42EA3E0((uint64_t)v21, (unint64_t *)&qword_1EFE40360);
    v22 = sub_1D42B6F40();
    *(_OWORD *)(v22 + 16) = xmmword_1D4525300;
    *(_QWORD *)(v22 + 32) = v20;
    sub_1D446F268(v22);
    v54 = v20;
    sub_1D446F248();
    v28 = (void *)sub_1D44BD7A4(v23, v24, v25, v26, v27);
    v29 = sub_1D42B6F40();
    *(_OWORD *)(v29 + 16) = xmmword_1D4525300;
    *(_QWORD *)(v29 + 32) = v21;
    sub_1D446F268(v29);
    v57 = v21;
    sub_1D446F248();
    v35 = (void *)sub_1D44BD7A4(v30, v31, v32, v33, v34);
    sub_1D42B28FC(&qword_1EFE53540);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D45261D0;
    v37 = sub_1D43F8A08(inited, sel_name);
    v38 = sub_1D451A6EC();
    v40 = v39;

    *(_QWORD *)(inited + 32) = v38;
    *(_QWORD *)(inited + 40) = v40;
    *(_QWORD *)(inited + 48) = v28;
    v53 = v28;
    v52 = sub_1D451A5E4();
    v41 = swift_initStackObject();
    *(_OWORD *)(v41 + 16) = xmmword_1D45261D0;
    v42 = sub_1D43B1BA0(v41, sel_name);
    v43 = sub_1D451A6EC();
    v45 = v44;

    *(_QWORD *)(v41 + 32) = v43;
    *(_QWORD *)(v41 + 40) = v45;
    *(_QWORD *)(v41 + 48) = v35;
    v46 = v35;
    v47 = sub_1D451A5E4();
    v48 = objc_allocWithZone(MEMORY[0x1E0C9E968]);
    v49 = sub_1D44425EC(v52, v47, 0, 0xE000000000000000, 0, 0xE000000000000000, 0);
    v50 = objc_allocWithZone((Class)type metadata accessor for _SNLogMelSpectrogramCustomModel());
    v51 = sub_1D4485194(v49, (uint64_t)v60);

    *(_QWORD *)((char *)v55.receiver + OBJC_IVAR____SNVGGishFrontEndProcessingCustomModel_underlyingModel) = v51;
    v58 = v55;
    objc_msgSendSuper2(&v58, sel_init);

  }
  sub_1D43CAE8C();
}

id sub_1D446E568()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_1D42E9D88(0, (unint64_t *)&qword_1EFE47310);
  v1 = (void *)sub_1D451A908();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithSizeRangeForDimension_, v1);

  return v2;
}

id sub_1D446E5EC(uint64_t a1, uint64_t a2, void *a3)
{
  void *v5;
  id v6;

  sub_1D42E9D88(0, (unint64_t *)&qword_1EFE404B0);
  v5 = (void *)sub_1D451A908();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_constraintWithShape_dataType_shapeConstraint_, v5, a2, a3);

  return v6;
}

void sub_1D446E738(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  void *v21;
  unint64_t v22;
  id v23;
  id v24;
  _BYTE *v25;
  _BYTE *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t inited;
  void *v31;
  id v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  id v45;
  _QWORD *v46;
  id v47;
  void *v48;
  unint64_t v49;
  id v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  id v78;
  id v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  id v120;
  id v121;
  id v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  id v137;
  uint64_t v138;
  id v139;
  uint64_t v140;
  uint64_t v141;

  sub_1D42B28FC(&qword_1EFE40410);
  v3 = sub_1D42B6F40();
  *(_OWORD *)(v3 + 16) = xmmword_1D45448C0;
  *(_QWORD *)(v3 + 32) = sub_1D446F1E4();
  v4 = sub_1D446F1E4();
  *(_QWORD *)(v3 + 48) = sub_1D446F27C(v4);
  sub_1D451A950();
  v5 = v3;
  type metadata accessor for SNUtils();
  sub_1D44BD08C();
  v6 = sub_1D44BD6F0();
  v7 = sub_1D43F8A08(v6, sel_featureNames);
  sub_1D451ABFC();
  sub_1D446F288();
  v8 = sub_1D446F25C();
  if (v1)
  {
    sub_1D42B7204();
    sub_1D42CB338();
    sub_1D42D3258();
    sub_1D42CB8F4();
  }
  else
  {
    v10 = v9;
    v141 = v6;
    v11 = v8;
    sub_1D42B7204();
    v12 = v11;
    v13 = (void *)sub_1D451A6C8();
    v14 = objc_msgSend(a1, sel_featureValueForName_, v13);

    if (v14
      && (v16 = sub_1D43F8A08(v15, sel_multiArrayValue), v14, v16))
    {
      v17 = (uint64_t)objc_msgSend(v16, sel_shape);
      v18 = sub_1D42EA3E0(v17, (unint64_t *)&qword_1EFE404B0);
      sub_1D451A92C();

      LOBYTE(v17) = sub_1D42FE5D4();
      sub_1D435EB80();
      sub_1D42CB8F4();
      if ((v17 & 1) != 0)
      {
        v19 = (_QWORD *)sub_1D42B6F40();
        v19[2] = v16;
        v137 = objc_retainAutorelease(v16);
        v139 = objc_msgSend(v137, sel_dataPointer);
        v20 = objc_msgSend(v137, sel_dataType);
        v21 = (void *)sub_1D451A908();
        v22 = sub_1D443472C(v21);

        v23 = objc_allocWithZone(MEMORY[0x1E0C9E970]);
        swift_retain();
        v24 = sub_1D44372DC((uint64_t)v139, v5, (uint64_t)v20, v22, sub_1D446F064, v19);
        v140 = (uint64_t)v19;
        v27 = v24;
        v28 = sub_1D4434A1C(v24);
        v29 = sub_1D42B28FC((uint64_t *)&unk_1EFE498B0);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1D45261D0;
        *(_QWORD *)(inited + 32) = v12;
        *(_QWORD *)(inited + 40) = v10;
        v31 = (void *)objc_opt_self();
        v32 = objc_msgSend(v31, sel_featureValueWithMultiArray_, v28);
        v33 = sub_1D42E9D88(0, (unint64_t *)&qword_1EFE4D470);
        *(_QWORD *)(inited + 72) = v33;
        *(_QWORD *)(inited + 48) = v32;
        sub_1D451A5E4();
        v34 = objc_allocWithZone(MEMORY[0x1E0C9E8F8]);
        v116 = v33;
        v120 = v31;
        v124 = v29;
        v128 = v27;
        v35 = v28;
        v36 = sub_1D446F1F4();
        v37 = (void *)sub_1D4483D84(v36);

        v38 = objc_msgSend(v37, sel_featureNames);
        sub_1D451ABFC();
        sub_1D446F288();
        v39 = sub_1D446F25C();
        v41 = v40;
        sub_1D42B7204();
        v42 = v39;
        v43 = (void *)sub_1D451A6C8();
        v44 = objc_msgSend(v37, sel_featureValueForName_, v43);

        if (v44
          && (v45 = objc_msgSend(v44, sel_multiArrayValue), sub_1D446F288(), v43))
        {
          v112 = v41;
          v46 = (_QWORD *)sub_1D42B6F40();
          v46[2] = v43;
          v47 = objc_retainAutorelease(v43);
          v107 = objc_msgSend(v47, sel_dataPointer);
          v102 = objc_msgSend(v47, sel_dataType);
          v48 = (void *)sub_1D451A908();
          v49 = sub_1D443472C(v48);

          v50 = objc_allocWithZone(MEMORY[0x1E0C9E970]);
          swift_retain();
          v76 = sub_1D44372DC((uint64_t)v107, v141, (uint64_t)v102, v49, sub_1D446F064, v46);
          v77 = swift_initStackObject();
          *(_OWORD *)(v77 + 16) = xmmword_1D45261D0;
          *(_QWORD *)(v77 + 32) = v42;
          *(_QWORD *)(v77 + 40) = v112;
          v78 = objc_msgSend(v120, sel_featureValueWithMultiArray_, v76);
          *(_QWORD *)(v77 + 72) = v116;
          *(_QWORD *)(v77 + 48) = v78;
          sub_1D451A5E4();
          v79 = objc_allocWithZone(MEMORY[0x1E0C9E8F8]);
          sub_1D446F1F4();
          v80 = v137;
          sub_1D446F19C();
          sub_1D42B6F8C();
          v81 = sub_1D4442D78();
          sub_1D446F1DC(v81, v82, v83, v84, v85, v86, v87, v88, v97, (uint64_t)v102, (uint64_t)v107, v112, v116, (uint64_t)v120, v124, v128);

          sub_1D446F210(v89, v90, v91, v92, v93, v94, v95, v96, v100, v105, v110, v115, v119, (uint64_t)v123, v127, v131, 1, 2, v134,
            v18,
            (uint64_t)v137,
            v140,
            v36);

        }
        else
        {
          sub_1D435EB80();
          sub_1D42BE8B4();
          sub_1D446F004();
          sub_1D42B6D0C();
          *v51 = 1;
          v52 = sub_1D4312028();
          sub_1D446F1EC(v52, v53, v54, v55, v56, v57, v58, v59, v97, v101, v106, v111, v116, (uint64_t)v120, v124, (uint64_t)v128, 1, 2, v134,
            v18,
            v137);
          v60 = sub_1D446F19C();
          sub_1D446F1DC(v60, v61, v62, v63, v64, v65, v66, v67, v98, v103, v108, v113, v117, (uint64_t)v121, v125, v129);

          sub_1D446F210(v68, v69, v70, v71, v72, v73, v74, v75, v99, v104, v109, v114, v118, (uint64_t)v122, v126, v130, v132, v133, v135,
            v136,
            v138,
            v140,
            v36);
          sub_1D4442D78();
        }
      }
      else
      {
        sub_1D42CB5C8();
        sub_1D446F208();
        sub_1D42CB338();
        sub_1D446F004();
        sub_1D42B6D0C();
        *v26 = 2;
        sub_1D4312028();

      }
    }
    else
    {
      sub_1D446F208();
      sub_1D42CB8F4();
      sub_1D42CB5C8();
      sub_1D42CB338();
      sub_1D446F004();
      sub_1D42B6D0C();
      *v25 = 0;
      sub_1D4312028();
    }
  }
  sub_1D43CAE8C();
}

void sub_1D446EF24()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for _SNVGGishFrontEndProcessingCustomModel()
{
  return objc_opt_self();
}

id sub_1D446EF8C(uint64_t a1, uint64_t a2, void *a3)
{
  void *v5;
  id v6;

  sub_1D42E9D88(0, (unint64_t *)&qword_1EFE404B0);
  v5 = (void *)sub_1D451A908();
  v6 = objc_msgSend(a3, sel_isAllowedShape_error_, v5, a2);

  return v6;
}

unint64_t sub_1D446F004()
{
  unint64_t result;

  result = qword_1EFE53548;
  if (!qword_1EFE53548)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454499C, &type metadata for _SNVGGishFrontEndProcessingCustomModel.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE53548);
  }
  return result;
}

uint64_t sub_1D446F040()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1D446F064(uint64_t a1)
{
  uint64_t v1;

  sub_1D4436EB0(a1, v1);
}

uint64_t storeEnumTagSinglePayload for _SNVGGishFrontEndProcessingCustomModel.DomainError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D446F0C8 + 4 * byte_1D45448E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D446F0FC + 4 * byte_1D45448E0[v4]))();
}

uint64_t sub_1D446F0FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D446F104(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D446F10CLL);
  return result;
}

uint64_t sub_1D446F118(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D446F120);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D446F124(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D446F12C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for _SNVGGishFrontEndProcessingCustomModel.DomainError()
{
  return &type metadata for _SNVGGishFrontEndProcessingCustomModel.DomainError;
}

unint64_t sub_1D446F14C()
{
  unint64_t result;

  result = qword_1EFE53550;
  if (!qword_1EFE53550)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4544974, &type metadata for _SNVGGishFrontEndProcessingCustomModel.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE53550);
  }
  return result;
}

id sub_1D446F188()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, (SEL)(v0 + 4006), 1, 1);
}

uint64_t sub_1D446F19C()
{
  return swift_release();
}

id sub_1D446F1A4(id a1, SEL a2, uint64_t a3)
{
  return objc_msgSend(a1, a2, a3, 1);
}

uint64_t sub_1D446F1AC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = v0;
  return sub_1D451A950();
}

void sub_1D446F1DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{

}

uint64_t sub_1D446F1E4()
{
  return sub_1D451AC44();
}

void sub_1D446F1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21)
{

}

id sub_1D446F1F4()
{
  return sub_1D4392954();
}

uint64_t sub_1D446F208()
{
  return swift_bridgeObjectRelease();
}

void sub_1D446F210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{

}

id sub_1D446F218(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

void sub_1D446F220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{

}

id sub_1D446F23C()
{
  return sub_1D446E568();
}

uint64_t sub_1D446F25C()
{
  uint64_t v0;

  return sub_1D4345DEC(v0);
}

uint64_t sub_1D446F268(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = a1;
  return sub_1D451A950();
}

uint64_t sub_1D446F274()
{
  return sub_1D451A794();
}

uint64_t sub_1D446F27C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return sub_1D451AC44();
}

void sub_1D446F288()
{
  void *v0;

}

uint64_t sub_1D446F290()
{
  sub_1D42DCE84();
  sub_1D4419570();
  sub_1D42CB208();
  sub_1D42DCE84();
  sub_1D4419570();
  sub_1D42CB208();
  sub_1D42DCE84();
  sub_1D4419570();
  sub_1D42CB208();
  sub_1D42CB6CC();
  sub_1D451A74C();
  return sub_1D42CB514();
}

uint64_t sub_1D446F2F8(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  BOOL v7;
  char v8;
  BOOL v9;
  char v10;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_1D42F1F04(), result = 0, (v5 & 1) != 0))
  {
    v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (v8 = sub_1D42F1F04(), result = 0, (v8 & 1) != 0))
    {
      v9 = a1[4] == a2[4] && a1[5] == a2[5];
      if (v9 || (v10 = sub_1D42F1F04(), result = 0, (v10 & 1) != 0))
      {
        if (a1[6] == a2[6] && a1[7] == a2[7])
          return 1;
        else
          return sub_1D451B820();
      }
    }
  }
  return result;
}

uint64_t sub_1D446F3B0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6369766544736469 && a2 == 0xEB00000000444965;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000;
      if (v7 || (sub_1D451B820() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 1701667182 && a2 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_1D451B820();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_1D446F568(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D446F5A0 + 4 * byte_1D45449E0[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1D446F5A0()
{
  return 0x6369766544736469;
}

uint64_t sub_1D446F5C0()
{
  return 0x6C65646F6DLL;
}

uint64_t sub_1D446F5D4()
{
  return 1701667182;
}

uint64_t sub_1D446F5E4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = sub_1D42B28FC(&qword_1EFE53578);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D42B5528(a1, a1[3]);
  sub_1D446FD14();
  sub_1D451BA24();
  v8[15] = 0;
  sub_1D446FEDC();
  if (!v1)
  {
    v8[14] = 1;
    sub_1D446FEDC();
    v8[13] = 2;
    sub_1D446FEDC();
    v8[12] = 3;
    sub_1D446FEDC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1D446F718()
{
  sub_1D451B958();
  sub_1D446F290();
  return sub_1D451B994();
}

uint64_t sub_1D446F754@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;

  v5 = sub_1D42B28FC(&qword_1EFE53568);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42B5528(a1, a1[3]);
  sub_1D446FD14();
  sub_1D451BA0C();
  if (v2)
    return sub_1D42BE944();
  v32 = 0;
  v9 = sub_1D443429C();
  v11 = v10;
  v27 = v9;
  v31 = 1;
  sub_1D4326750();
  v12 = sub_1D443429C();
  v28 = v13;
  v26 = v12;
  v30 = 2;
  sub_1D4326750();
  v24 = sub_1D451B64C();
  v25 = v14;
  v29 = 3;
  sub_1D4326750();
  v15 = sub_1D443429C();
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19 = v15;
  v18(v8, v5);
  swift_bridgeObjectRetain();
  v20 = v28;
  swift_bridgeObjectRetain();
  sub_1D42CB6CC();
  sub_1D42CB5C8();
  swift_bridgeObjectRelease();
  sub_1D42BE944();
  swift_bridgeObjectRelease();
  v21 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = sub_1D42CB5C8();
  *a2 = v27;
  a2[1] = v11;
  a2[2] = v26;
  a2[3] = v20;
  a2[4] = v24;
  a2[5] = v21;
  a2[6] = v19;
  a2[7] = v17;
  return result;
}

uint64_t sub_1D446F998()
{
  unsigned __int8 *v0;

  return sub_1D446F568(*v0);
}

uint64_t sub_1D446F9A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D446F3B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D446F9C4()
{
  sub_1D446FD14();
  return sub_1D451BA3C();
}

uint64_t sub_1D446F9EC()
{
  sub_1D446FD14();
  return sub_1D451BA48();
}

double sub_1D446FA14@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  sub_1D446F754(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    result = *(double *)&v8;
    v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_1D446FA54(_QWORD *a1)
{
  return sub_1D446F5E4(a1);
}

uint64_t sub_1D446FA70()
{
  sub_1D451B958();
  sub_1D446F290();
  return sub_1D451B994();
}

void sub_1D446FAB8()
{
  sub_1D42CB6CC();
  sub_1D42F1F54();
  sub_1D42B6E24();
}

void sub_1D446FAF0()
{
  sub_1D42CB6CC();
  sub_1D42F1F54();
  sub_1D42B6E24();
}

void sub_1D446FB28()
{
  sub_1D42CB6CC();
  sub_1D42F1F54();
  sub_1D42B6E24();
}

id sub_1D446FB60(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  void *v3;

  a3();
  v3 = (void *)sub_1D451A6C8();
  swift_bridgeObjectRelease();
  return v3;
}

void sub_1D446FB98()
{
  sub_1D42CB6CC();
  sub_1D42F1F54();
  sub_1D42B6E24();
}

id SNFileServerInfo.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SNFileServerInfo.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SNFileServerInfo.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SNFileServerInfo();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SNFileServerInfo()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNFileServerInfo()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for FileServerInfo()
{
  return &type metadata for FileServerInfo;
}

unint64_t sub_1D446FCD8()
{
  unint64_t result;

  result = qword_1EFE53560;
  if (!qword_1EFE53560)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4544A30, &type metadata for FileServerInfo);
    atomic_store(result, (unint64_t *)&qword_1EFE53560);
  }
  return result;
}

unint64_t sub_1D446FD14()
{
  unint64_t result;

  result = qword_1EFE53570;
  if (!qword_1EFE53570)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4544BAC, &type metadata for FileServerInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE53570);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FileServerInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D446FD9C + 4 * byte_1D45449E9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D446FDD0 + 4 * byte_1D45449E4[v4]))();
}

uint64_t sub_1D446FDD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D446FDD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D446FDE0);
  return result;
}

uint64_t sub_1D446FDEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D446FDF4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D446FDF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D446FE00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FileServerInfo.CodingKeys()
{
  return &type metadata for FileServerInfo.CodingKeys;
}

unint64_t sub_1D446FE20()
{
  unint64_t result;

  result = qword_1EFE53580;
  if (!qword_1EFE53580)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4544B84, &type metadata for FileServerInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE53580);
  }
  return result;
}

unint64_t sub_1D446FE60()
{
  unint64_t result;

  result = qword_1EFE53588;
  if (!qword_1EFE53588)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4544AF4, &type metadata for FileServerInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE53588);
  }
  return result;
}

unint64_t sub_1D446FEA0()
{
  unint64_t result;

  result = qword_1EFE53590;
  if (!qword_1EFE53590)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4544B1C, &type metadata for FileServerInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE53590);
  }
  return result;
}

uint64_t sub_1D446FEDC()
{
  return sub_1D451B724();
}

void sub_1D446FEEC()
{
  sub_1D446FF0C();
}

void sub_1D446FF0C()
{
  swift_retain();
  swift_retain();
  sub_1D44713D4();
}

uint64_t sub_1D446FF5C(uint64_t a1)
{
  swift_release();
  swift_release();
  return a1;
}

void sub_1D446FF90()
{
  sub_1D44725E4();
  sub_1D446FFB0();
}

void sub_1D446FFA8()
{
  sub_1D43AB0A0();
}

void sub_1D446FFB0()
{
  swift_retain();
  sub_1D446FF0C();
}

uint64_t sub_1D446FFD0(uint64_t a1)
{
  swift_release();
  return a1;
}

void sub_1D446FFF8()
{
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1D446FF0C();
}

uint64_t sub_1D4470030(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

void sub_1D447006C()
{
  sub_1D44725E4();
  sub_1D446FFF8();
}

void sub_1D4470084()
{
  sub_1D43AB0A0();
}

id sub_1D447008C(const void *a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  objc_class *v5;
  _QWORD *v6;
  id v7;
  id v8;
  id v9;
  objc_super v11;

  v3 = (void *)MEMORY[0x1D825DB34]();
  v4 = *(void **)(v1 + 16);
  v5 = (objc_class *)sub_1D42B28FC(&qword_1EFE535B8);
  v6 = objc_allocWithZone(v5);
  memcpy((char *)v6 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v6) + 0x60), a1, 0x78uLL);
  v7 = v4;
  sub_1D435C664();
  v11.receiver = v6;
  v11.super_class = v5;
  v8 = objc_msgSendSuper2(&v11, sel_init);
  v9 = objc_msgSend(v7, sel_objectForKey_, v8);

  objc_autoreleasePoolPop(v3);
  return v9;
}

id sub_1D4470168(const void *a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  objc_class *v5;
  _QWORD *v6;
  id v7;
  id v8;
  id v9;
  objc_super v11;

  v3 = (void *)MEMORY[0x1D825DB34]();
  v4 = *(void **)(v1 + 16);
  v5 = (objc_class *)sub_1D42B28FC(&qword_1EFE535D0);
  v6 = objc_allocWithZone(v5);
  memcpy((char *)v6 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v6) + 0x60), a1, 0x50uLL);
  v7 = v4;
  sub_1D435C664();
  v11.receiver = v6;
  v11.super_class = v5;
  v8 = objc_msgSendSuper2(&v11, sel_init);
  v9 = objc_msgSend(v7, sel_objectForKey_, v8);

  objc_autoreleasePoolPop(v3);
  return v9;
}

void sub_1D4470244()
{
  sub_1D4472668();
}

#error "1D44702A4: call analysis failed (funcsize=32)"

id sub_1D44702E0(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  objc_class *v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  objc_super v11;

  v3 = (void *)MEMORY[0x1D825DB34]();
  v4 = *(void **)(v1 + 16);
  v5 = (objc_class *)sub_1D42B28FC(&qword_1EFE53630);
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v6) + 0x60)] = a1;
  v11.receiver = v6;
  v11.super_class = v5;
  v7 = v4;
  swift_bridgeObjectRetain();
  v8 = objc_msgSendSuper2(&v11, sel_init);
  v9 = objc_msgSend(v7, sel_objectForKey_, v8, v11.receiver, v11.super_class);

  objc_autoreleasePoolPop(v3);
  return v9;
}

void sub_1D44703A8()
{
  sub_1D4472660();
}

id sub_1D44703C0()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  objc_class *v3;
  id v4;
  id v5;
  id v6;
  objc_super v8;

  v2 = *(void **)(v1 + 16);
  v3 = (objc_class *)sub_1D42B28FC(v0);
  v8.receiver = objc_allocWithZone(v3);
  v8.super_class = v3;
  v4 = v2;
  v5 = objc_msgSendSuper2(&v8, sel_init);
  v6 = objc_msgSend(v4, sel_objectForKey_, v5, v8.receiver, v8.super_class);

  sub_1D4472650();
  return v6;
}

void sub_1D4470440()
{
  sub_1D4472668();
}

#error "1D44704A0: call analysis failed (funcsize=32)"

void sub_1D44704DC(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  void *v7;
  objc_class *v8;
  _QWORD *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  objc_super v21;

  MEMORY[0x1D825DB34]();
  v7 = (void *)*((_QWORD *)v3 + 2);
  v8 = (objc_class *)sub_1D4398684();
  v9 = sub_1D4472648(v8);
  v10 = (_QWORD *)((char *)v9 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v9) + 0x60));
  *v10 = a1;
  v10[1] = a2;
  v21.receiver = v9;
  v21.super_class = v3;
  v11 = v7;
  v19 = sub_1D44724E4((uint64_t)v11, v12, v13, v14, v15, v16, v17, v18, v21);
  v20 = sub_1D4472588(a3, sel_objectForKey_);

  sub_1D4434358();
  sub_1D42CB6D4();
}

id sub_1D4470580(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  objc_class *v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  objc_super v11;

  v3 = (void *)MEMORY[0x1D825DB34]();
  v4 = *(void **)(v1 + 16);
  v5 = (objc_class *)sub_1D42B28FC(&qword_1EFE53610);
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v6) + 0x60)] = a1;
  v11.receiver = v6;
  v11.super_class = v5;
  v7 = v4;
  v8 = objc_msgSendSuper2(&v11, sel_init);
  v9 = objc_msgSend(v7, sel_objectForKey_, v8, v11.receiver, v11.super_class);

  objc_autoreleasePoolPop(v3);
  return v9;
}

id sub_1D4470640(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  objc_class *v5;
  char *v6;
  char *v7;
  __int128 v8;
  id v9;
  id v10;
  id v11;
  objc_super v13;

  v3 = (void *)MEMORY[0x1D825DB34]();
  v4 = *(void **)(v1 + 16);
  v5 = (objc_class *)sub_1D42B28FC(&qword_1EFE53608);
  v6 = (char *)objc_allocWithZone(v5);
  v7 = &v6[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v6) + 0x60)];
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v7 = *(_OWORD *)a1;
  *((_OWORD *)v7 + 1) = v8;
  *((_OWORD *)v7 + 2) = *(_OWORD *)(a1 + 32);
  *((_DWORD *)v7 + 12) = *(_DWORD *)(a1 + 48);
  v13.receiver = v6;
  v13.super_class = v5;
  v9 = v4;
  v10 = objc_msgSendSuper2(&v13, sel_init);
  v11 = objc_msgSend(v9, sel_objectForKey_, v10, v13.receiver, v13.super_class);

  objc_autoreleasePoolPop(v3);
  return v11;
}

void sub_1D4470718(uint64_t a1, const void *a2)
{
  uint64_t v2;
  void *v5;
  void *v6;
  objc_class *v7;
  _QWORD *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  objc_super v13;
  objc_super v14;

  v5 = (void *)MEMORY[0x1D825DB34]();
  v6 = *(void **)(v2 + 16);
  v7 = (objc_class *)sub_1D42B28FC(&qword_1EFE535B8);
  v8 = objc_allocWithZone(v7);
  memcpy((char *)v8 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v8) + 0x60), a2, 0x78uLL);
  if (a1)
  {
    swift_retain_n();
    v9 = v6;
    sub_1D435C664();
    v13.receiver = v8;
    v13.super_class = v7;
    v10 = objc_msgSendSuper2(&v13, sel_init);
    objc_msgSend(v9, sel_setObject_forKey_, a1, v10);

    swift_release_n();
  }
  else
  {
    sub_1D435C664();
    v14.receiver = v8;
    v14.super_class = v7;
    v11 = v6;
    v12 = objc_msgSendSuper2(&v14, sel_init);
    objc_msgSend(v11, sel_removeObjectForKey_, v12);

  }
  objc_autoreleasePoolPop(v5);
  swift_release();
  sub_1D44722A0();
}

void sub_1D447086C(uint64_t a1, const void *a2)
{
  uint64_t v2;
  void *v5;
  void *v6;
  objc_class *v7;
  _QWORD *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  objc_super v13;
  objc_super v14;

  v5 = (void *)MEMORY[0x1D825DB34]();
  v6 = *(void **)(v2 + 16);
  v7 = (objc_class *)sub_1D42B28FC(&qword_1EFE535D0);
  v8 = objc_allocWithZone(v7);
  memcpy((char *)v8 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v8) + 0x60), a2, 0x50uLL);
  if (a1)
  {
    swift_retain_n();
    v9 = v6;
    sub_1D435C664();
    v13.receiver = v8;
    v13.super_class = v7;
    v10 = objc_msgSendSuper2(&v13, sel_init);
    objc_msgSend(v9, sel_setObject_forKey_, a1, v10);

    swift_release_n();
  }
  else
  {
    sub_1D435C664();
    v14.receiver = v8;
    v14.super_class = v7;
    v11 = v6;
    v12 = objc_msgSendSuper2(&v14, sel_init);
    objc_msgSend(v11, sel_removeObjectForKey_, v12);

  }
  objc_autoreleasePoolPop(v5);
  swift_release();
  sub_1D44722A0();
}

void sub_1D44709C0()
{
  sub_1D4472590();
}

#error "1D4470A30: call analysis failed (funcsize=52)"

uint64_t sub_1D4470AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  void *v6;
  objc_class *v7;
  _QWORD *v8;
  id v9;
  id v10;
  id v11;
  objc_super v13;
  objc_super v14;

  v5 = (void *)MEMORY[0x1D825DB34]();
  v6 = *(void **)(v2 + 16);
  v7 = (objc_class *)sub_1D42B28FC(&qword_1EFE53630);
  v8 = objc_allocWithZone(v7);
  *(_QWORD *)((char *)v8 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v8) + 0x60)) = a2;
  if (a1)
  {
    v13.receiver = v8;
    v13.super_class = v7;
    swift_retain_n();
    v9 = v6;
    swift_bridgeObjectRetain();
    v10 = objc_msgSendSuper2(&v13, sel_init);
    objc_msgSend(v9, sel_setObject_forKey_, a1, v10, v13.receiver, v13.super_class);

    swift_release_n();
  }
  else
  {
    v14.receiver = v8;
    v14.super_class = v7;
    swift_bridgeObjectRetain();
    v11 = v6;
    v10 = objc_msgSendSuper2(&v14, sel_init);
    objc_msgSend(v11, sel_removeObjectForKey_, v10);

  }
  objc_autoreleasePoolPop(v5);
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1D4470BEC()
{
  sub_1D4472660();
}

uint64_t sub_1D4470C0C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  objc_class *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  objc_super v18;
  objc_super v19;

  v4 = *(void **)(v2 + 16);
  v5 = (objc_class *)sub_1D4398684();
  v6 = objc_allocWithZone(v5);
  if (v1)
  {
    v18.receiver = v6;
    v18.super_class = v5;
    sub_1D4307010();
    v7 = v4;
    v15 = sub_1D44724E4((uint64_t)v7, v8, v9, v10, v11, v12, v13, v14, v18);
    sub_1D44725BC((uint64_t)v15, sel_setObject_forKey_);

    sub_1D43E1590();
  }
  else
  {
    v19.receiver = v6;
    v19.super_class = v5;
    v16 = v4;
    v15 = sub_1D4472504(&v19);
    sub_1D4472588(v16, sel_removeObjectForKey_);

  }
  objc_autoreleasePoolPop(a1);
  return swift_release();
}

void sub_1D4470CC0()
{
  sub_1D4472590();
}

#error "1D4470D30: call analysis failed (funcsize=52)"

void sub_1D4470DB0()
{
  sub_1D4472660();
}

#error "1D4470E2C: call analysis failed (funcsize=49)"

uint64_t sub_1D4470EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  void *v6;
  objc_class *v7;
  _QWORD *v8;
  id v9;
  id v10;
  id v11;
  objc_super v13;
  objc_super v14;

  v5 = (void *)MEMORY[0x1D825DB34]();
  v6 = *(void **)(v2 + 16);
  v7 = (objc_class *)sub_1D42B28FC(&qword_1EFE53610);
  v8 = objc_allocWithZone(v7);
  *(_QWORD *)((char *)v8 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v8) + 0x60)) = a2;
  if (a1)
  {
    v13.receiver = v8;
    v13.super_class = v7;
    swift_retain_n();
    v9 = v6;
    v10 = objc_msgSendSuper2(&v13, sel_init);
    objc_msgSend(v9, sel_setObject_forKey_, a1, v10, v13.receiver, v13.super_class);

    swift_release_n();
  }
  else
  {
    v14.receiver = v8;
    v14.super_class = v7;
    v11 = v6;
    v10 = objc_msgSendSuper2(&v14, sel_init);
    objc_msgSend(v11, sel_removeObjectForKey_, v10);

  }
  objc_autoreleasePoolPop(v5);
  return swift_release();
}

uint64_t sub_1D4470FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  void *v6;
  objc_class *v7;
  _QWORD *v8;
  char *v9;
  __int128 v10;
  id v11;
  id v12;
  id v13;
  objc_super v15;
  objc_super v16;

  v5 = (void *)MEMORY[0x1D825DB34]();
  v6 = *(void **)(v2 + 16);
  v7 = (objc_class *)sub_1D42B28FC(&qword_1EFE53608);
  v8 = objc_allocWithZone(v7);
  v9 = (char *)v8 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v8) + 0x60);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v9 = *(_OWORD *)a2;
  *((_OWORD *)v9 + 1) = v10;
  *((_OWORD *)v9 + 2) = *(_OWORD *)(a2 + 32);
  *((_DWORD *)v9 + 12) = *(_DWORD *)(a2 + 48);
  if (a1)
  {
    v15.receiver = v8;
    v15.super_class = v7;
    swift_retain_n();
    v11 = v6;
    v12 = objc_msgSendSuper2(&v15, sel_init);
    objc_msgSend(v11, sel_setObject_forKey_, a1, v12, v15.receiver, v15.super_class);

    swift_release_n();
  }
  else
  {
    v16.receiver = v8;
    v16.super_class = v7;
    v13 = v6;
    v12 = objc_msgSendSuper2(&v16, sel_init);
    objc_msgSend(v13, sel_removeObjectForKey_, v12);

  }
  objc_autoreleasePoolPop(v5);
  return swift_release();
}

uint64_t sub_1D4471100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_1D4398684();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = sub_1D42BE1BC;
  v7[3] = v1;
  v7[4] = v6;
  swift_retain();
  sub_1D42BE984();
  sub_1D42B28FC(&qword_1EFE4A100);
  sub_1D42BE210(&qword_1EFE4A108, &qword_1EFE4A100, MEMORY[0x1E0C95D90]);
  sub_1D451A2C0();
  sub_1D42BE210(&qword_1EFE535E8, &qword_1EFE535E0, MEMORY[0x1E0C96148]);
  v8 = sub_1D451A2E4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v8;
}

void sub_1D4471230()
{
  sub_1D4471328();
}

void sub_1D447124C()
{
  sub_1D4471444();
}

void sub_1D4471268()
{
  void (*v0)(uint64_t *__return_ptr, id *);
  uint64_t v1;
  uint64_t v2;
  const void *v3;

  sub_1D4472430();
  sub_1D44725DC();
  v0 = (void (*)(uint64_t *__return_ptr, id *))sub_1D44724AC();
  sub_1D44717B0(v0, v1, v2, v3);
  sub_1D4472478();
  sub_1D42E3F48();
  sub_1D447250C();
  sub_1D44380AC();
}

uint64_t sub_1D44712AC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t *), uint64_t a4)
{
  return sub_1D447149C(a1, a2, a3, a4, &unk_1EFE53600);
}

void sub_1D44712C8()
{
  void (*v0)(uint64_t *__return_ptr, id *);
  uint64_t v1;
  uint64_t v2;
  const void *v3;

  sub_1D4472430();
  sub_1D44725DC();
  v0 = (void (*)(uint64_t *__return_ptr, id *))sub_1D44724AC();
  sub_1D447189C(v0, v1, v2, v3);
  sub_1D4472478();
  sub_1D42E3F48();
  sub_1D447250C();
  sub_1D44380AC();
}

void sub_1D447130C()
{
  sub_1D4471328();
}

void sub_1D4471328()
{
  sub_1D447240C();
  sub_1D4472658();
  sub_1D447253C();
  sub_1D4471988();
}

void sub_1D4471350()
{
  sub_1D44724F4();
  sub_1D42EA438();
  sub_1D447250C();
  sub_1D4472498();
}

void sub_1D4471364()
{
  sub_1D4471328();
}

void sub_1D4471380()
{
  sub_1D4471558();
}

void sub_1D447139C()
{
  sub_1D44713D4();
}

void sub_1D44713B8()
{
  sub_1D44713D4();
}

void sub_1D44713D4()
{
  sub_1D4472430();
  sub_1D44725DC();
  sub_1D4471B00();
}

void sub_1D4471414()
{
  sub_1D4472478();
  sub_1D42E3F48();
  sub_1D447250C();
  sub_1D44380AC();
}

void sub_1D4471428()
{
  sub_1D4471444();
}

void sub_1D4471444()
{
  sub_1D447240C();
  sub_1D4472658();
  sub_1D447253C();
  sub_1D4471BD0();
}

void sub_1D447146C()
{
  sub_1D44724F4();
  sub_1D42EA438();
  sub_1D447250C();
  sub_1D4472498();
}

uint64_t sub_1D4471480(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t *), uint64_t a4)
{
  return sub_1D447149C(a1, a2, a3, a4, &unk_1EFE53618);
}

uint64_t sub_1D447149C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t *), uint64_t a4, void *a5)
{
  uint64_t v5;
  os_unfair_lock_s *v11;

  v11 = *(os_unfair_lock_s **)(*(_QWORD *)(v5 + 24) + 16);
  swift_retain();
  os_unfair_lock_lock(v11);
  sub_1D4471C5C(a3, a4, v5, a1, a2, a5);
  os_unfair_lock_unlock(v11);
  sub_1D42B6F8C();
  return sub_1D447250C();
}

void sub_1D447153C()
{
  sub_1D4471558();
}

void sub_1D4471558()
{
  void (*v0)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1D447240C();
  sub_1D4472658();
  v0(v3, v2, v1, v4);
  sub_1D44724F4();
  sub_1D42EA438();
  sub_1D447250C();
  sub_1D4472498();
}

void sub_1D44715A4()
{
  void (*v0)(uint64_t *__return_ptr, id *);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D4472430();
  sub_1D44725DC();
  v0 = (void (*)(uint64_t *__return_ptr, id *))sub_1D44724AC();
  sub_1D4471E30(v0, v1, v2, v3);
  sub_1D4472478();
  sub_1D42E3F48();
  sub_1D447250C();
  sub_1D44380AC();
}

uint64_t sub_1D44715E8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_1D42B28FC(&qword_1EFE535F0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42B5528(a1, a1[3]);
  sub_1D4472340();
  sub_1D451BA24();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1D44716AC()
{
  sub_1D4472340();
  return sub_1D451BA3C();
}

uint64_t sub_1D44716D4()
{
  sub_1D4472340();
  return sub_1D451BA48();
}

uint64_t sub_1D44716FC(_QWORD *a1)
{
  return sub_1D44715E8(a1);
}

uint64_t type metadata accessor for SharedSecureMicrophone.Instance()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for SharedSecureMicrophone()
{
  return &type metadata for SharedSecureMicrophone;
}

ValueMetadata *type metadata accessor for SharedSecureMicrophone.Configuration()
{
  return &type metadata for SharedSecureMicrophone.Configuration;
}

unint64_t sub_1D4471754()
{
  unint64_t result;

  result = qword_1EFE53598;
  if (!qword_1EFE53598)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4544C98, &type metadata for SharedSecureMicrophone.Configuration);
    atomic_store(result, (unint64_t *)&qword_1EFE53598);
  }
  return result;
}

uint64_t sub_1D4471790()
{
  return sub_1D42E22B8();
}

uint64_t sub_1D44717B0(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t v4;
  uint64_t v8;
  id v10;
  uint64_t v11;

  swift_beginAccess();
  v10 = sub_1D447008C(a4);
  swift_endAccess();
  a1(&v11, &v10);
  swift_release();
  if (!v4)
  {
    a2 = v11;
    swift_beginAccess();
    sub_1D435C664();
    v8 = swift_retain();
    sub_1D4470718(v8, a4);
    swift_endAccess();
  }
  return a2;
}

uint64_t sub_1D447189C(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t v4;
  uint64_t v8;
  id v10;
  uint64_t v11;

  swift_beginAccess();
  v10 = sub_1D4470168(a4);
  swift_endAccess();
  a1(&v11, &v10);
  swift_release();
  if (!v4)
  {
    a2 = v11;
    swift_beginAccess();
    sub_1D435C664();
    v8 = swift_retain();
    sub_1D447086C(v8, a4);
    swift_endAccess();
  }
  return a2;
}

void sub_1D4471988()
{
  sub_1D4472448();
  sub_1D4470244();
}

void sub_1D44719B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1D44725FC();
  sub_1D4472558(v1);
  sub_1D42B6F8C();
  if (!v0)
  {
    sub_1D42B8E84();
    sub_1D4472674();
    swift_retain();
    sub_1D44709C0();
  }
  sub_1D4472518();
}

uint64_t sub_1D4471A14(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  id v10;
  uint64_t v11;

  swift_beginAccess();
  v10 = sub_1D44702E0(a4);
  swift_endAccess();
  a1(&v11, &v10);
  swift_release();
  if (!v4)
  {
    a2 = v11;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v8 = swift_retain();
    sub_1D4470AB0(v8, a4);
    swift_endAccess();
  }
  return a2;
}

void sub_1D4471B00()
{
  sub_1D42B8E84();
  sub_1D44703A8();
}

uint64_t sub_1D4471B50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v5;
  uint64_t v6;

  v5 = a1;
  sub_1D42B8E7C();
  v3(&v6, &v5);
  sub_1D42EA438();
  if (!v1)
  {
    sub_1D42B8E84();
    swift_retain();
    sub_1D4470BEC();
  }
  return v2;
}

void sub_1D4471BD0()
{
  sub_1D4472448();
  sub_1D4470440();
}

void sub_1D4471C00()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1D44725FC();
  sub_1D4472558(v1);
  sub_1D42B6F8C();
  if (!v0)
  {
    sub_1D42B8E84();
    sub_1D4472674();
    swift_retain();
    sub_1D4470CC0();
  }
  sub_1D4472518();
}

void sub_1D4471C5C(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1D42B8E84();
  sub_1D44704DC(a4, a5, a6);
  v12 = v11;
  sub_1D42B8E7C();
  a1(&v13, &v12);
  swift_release();
  if (!v6)
  {
    sub_1D42B8E84();
    swift_retain();
    sub_1D4470DB0();
  }
  sub_1D43341E8();
}

uint64_t sub_1D4471D4C(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  id v10;
  uint64_t v11;

  swift_beginAccess();
  v10 = sub_1D4470580(a4);
  swift_endAccess();
  a1(&v11, &v10);
  swift_release();
  if (!v4)
  {
    a2 = v11;
    swift_beginAccess();
    v8 = swift_retain();
    sub_1D4470EA0(v8, a4);
    swift_endAccess();
  }
  return a2;
}

uint64_t sub_1D4471E30(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  id v10;
  uint64_t v11;

  swift_beginAccess();
  v10 = sub_1D4470640(a4);
  swift_endAccess();
  a1(&v11, &v10);
  swift_release();
  if (!v4)
  {
    a2 = v11;
    swift_beginAccess();
    v8 = swift_retain();
    sub_1D4470FC4(v8, a4);
    swift_endAccess();
  }
  return a2;
}

void sub_1D4471F14()
{
  sub_1D4472058();
}

void sub_1D4471F28(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1D44724C4(a1, a2, a3, a4);
  if (v5 || (sub_1D4472488((uint64_t)v6, v7, v8, v9, v10, v11, v12, v13, v14), !v4))
    sub_1D42BE984();
  sub_1D44725B0();
  sub_1D43341E8();
}

uint64_t sub_1D4471F78()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  const void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_1D447256C();
  v4 = memcpy(v2, v3, 0x78uLL);
  if (v1 || (sub_1D4472488((uint64_t)v4, v5, v6, v7, v8, v9, v10, v11, v13), !v0))
    sub_1D42BE984();
  return sub_1D44725B0();
}

uint64_t sub_1D4471FD4(uint64_t a1, void (*a2)(uint64_t *__return_ptr, _QWORD *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D447214C(a1, a2, a3, a4, a5);
}

void sub_1D4471FE8(uint64_t a1, void (*a2)(uint64_t *__return_ptr, _BYTE *), int a3, void *__src)
{
  uint64_t v4;
  _BYTE __dst[80];
  uint64_t v8;

  memcpy(__dst, __src, sizeof(__dst));
  if (a1 || (a2(&v8, __dst), !v4))
    sub_1D42BE984();
  sub_1D44725B0();
  sub_1D43AAC8C();
}

void sub_1D4472058()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  const void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1D447256C();
  v4 = memcpy(v2, v3, 0x58uLL);
  if (v1 || (sub_1D4472488((uint64_t)v4, v5, v6, v7, v8, v9, v10, v11, v12), !v0))
    sub_1D42BE984();
  sub_1D44725B0();
  sub_1D43AAC8C();
}

void sub_1D44720A8(uint64_t a1, uint64_t (*a2)(uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  if (a1 || (sub_1D4472530(0, a2, a3, a4, a5, a6, a7, a8, a4), !v8))
    sub_1D42E3CA4();
  sub_1D42CB964();
}

void sub_1D44720F0(uint64_t a1, void (*a2)(uint64_t *__return_ptr))
{
  sub_1D4472104(a1, a2);
}

void sub_1D4472104(uint64_t a1, void (*a2)(uint64_t *__return_ptr))
{
  uint64_t v2;
  uint64_t v3;

  if (a1 || (a2(&v3), !v2))
    sub_1D42E3CA4();
  sub_1D42CB964();
}

uint64_t sub_1D447214C(uint64_t a1, void (*a2)(uint64_t *__return_ptr, _QWORD *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];
  uint64_t v9;

  v8[0] = a4;
  v8[1] = a5;
  if (a1)
  {
    v6 = a1;
  }
  else
  {
    v6 = a3;
    a2(&v9, v8);
    if (v5)
      return v6;
    v6 = v9;
  }
  sub_1D42E3CA4();
  return v6;
}

uint64_t sub_1D44721A4(uint64_t a1, uint64_t (*a2)(uint64_t *), uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  if (a1)
  {
    v8 = a1;
  }
  else
  {
    sub_1D4472530(0, a2, a3, (uint64_t)a4, a5, a6, a7, a8, *a4);
    if (v9)
      return v8;
    v8 = v11;
  }
  sub_1D42E3CA4();
  return v8;
}

void sub_1D4472208(uint64_t *a1@<X0>, void (*a2)(uint64_t *__return_ptr)@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  sub_1D4472104(*a1, a2);
  if (!v3)
    *a3 = v5;
}

uint64_t sub_1D4472234@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1D4471790();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_1D4472260@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D4472234(a1);
}

void sub_1D4472284(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1D4472208(a1, *(void (**)(uint64_t *__return_ptr))(v2 + 16), a2);
}

void sub_1D44722A0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D42CB15C();
}

void sub_1D44722E0()
{
  sub_1D44A5780();
}

uint64_t sub_1D44722F8(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t sub_1D4472308()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1D4472334()
{
  sub_1D44722E0();
}

unint64_t sub_1D4472340()
{
  unint64_t result;

  result = qword_1EFE535F8;
  if (!qword_1EFE535F8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4544DAC, &type metadata for SharedSecureMicrophone.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE535F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedSecureMicrophone.Configuration.CodingKeys()
{
  return &type metadata for SharedSecureMicrophone.Configuration.CodingKeys;
}

unint64_t sub_1D4472390()
{
  unint64_t result;

  result = qword_1EFE53638;
  if (!qword_1EFE53638)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4544D5C, &type metadata for SharedSecureMicrophone.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE53638);
  }
  return result;
}

unint64_t sub_1D44723D0()
{
  unint64_t result;

  result = qword_1EFE53640;
  if (!qword_1EFE53640)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4544D84, &type metadata for SharedSecureMicrophone.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE53640);
  }
  return result;
}

uint64_t sub_1D447240C()
{
  return swift_retain();
}

uint64_t sub_1D4472430()
{
  return swift_retain();
}

uint64_t sub_1D4472448()
{
  return swift_beginAccess();
}

void sub_1D4472478()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_unlock(v0);
}

uint64_t sub_1D4472488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t (*v9)(uint64_t *);

  return v9(&a9);
}

uint64_t sub_1D44724AC()
{
  uint64_t v0;

  return v0;
}

void *sub_1D44724C4(uint64_t a1, uint64_t a2, uint64_t a3, void *__src, ...)
{
  va_list va;

  va_start(va, __src);
  return memcpy(va, __src, 0x41uLL);
}

id sub_1D44724E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  const char *v9;

  return objc_msgSendSuper2(&a9, v9);
}

void sub_1D44724F4()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_unlock(v0);
}

id sub_1D4472504(objc_super *a1)
{
  const char *v1;

  return objc_msgSendSuper2(a1, v1);
}

uint64_t sub_1D447250C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4472530(uint64_t a1, uint64_t (*a2)(uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return a2(&a9);
}

uint64_t sub_1D447253C()
{
  uint64_t v0;

  return v0;
}

_QWORD *sub_1D4472558(uint64_t a1, ...)
{
  _QWORD *(*v1)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  va_list va1;

  va_start(va1, a1);
  va_start(va, a1);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  return v1((uint64_t *)va1, (uint64_t *)va);
}

id sub_1D4472588(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

void sub_1D4472590()
{
  JUMPOUT(0x1D825DB34);
}

uint64_t sub_1D44725A0()
{
  uint64_t *v0;

  return sub_1D42B28FC(v0);
}

uint64_t sub_1D44725B0()
{
  uint64_t v0;

  return v0;
}

id sub_1D44725BC(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  return objc_msgSend(v4, a2, v2, v3);
}

id sub_1D44725CC(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  return objc_msgSend(v2, a2, v4, v3);
}

void sub_1D44725DC()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_lock(v0);
}

__n128 sub_1D44725E4()
{
  uint64_t v0;

  return *(__n128 *)v0;
}

uint64_t sub_1D44725FC()
{
  return swift_endAccess();
}

void sub_1D447260C()
{
  sub_1D435C664();
}

void sub_1D4472614()
{
  sub_1D435C664();
}

uint64_t sub_1D4472620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return a1 + *(_QWORD *)((v2 & a2) + 0x60);
}

uint64_t sub_1D4472634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return a1 + *(_QWORD *)((v2 & a2) + 0x60);
}

id sub_1D4472648(Class a1)
{
  return objc_allocWithZone(a1);
}

void sub_1D4472650()
{
  void *v0;

  objc_autoreleasePoolPop(v0);
}

void sub_1D4472658()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_lock(v0);
}

void sub_1D4472660()
{
  JUMPOUT(0x1D825DB34);
}

void sub_1D4472668()
{
  JUMPOUT(0x1D825DB34);
}

void sub_1D4472674()
{
  sub_1D435C664();
}

uint64_t sub_1D4472680@<X0>(void (*a1)(uint64_t)@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v17 = a5;
  v18 = a3;
  v9 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78]();
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v13, v12);
  a1(v14);
  if (!v5)
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v17, v11, v18);
  return (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a2, a4);
}

void sub_1D4472764()
{
  uint64_t v0;

  os_unfair_lock_lock(*(os_unfair_lock_t *)(v0 + 16));
}

void sub_1D4472770()
{
  uint64_t v0;

  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v0 + 16));
}

void sub_1D4472778()
{
  sub_1D4472764();
  sub_1D42B6E24();
}

void sub_1D4472794()
{
  sub_1D4472770();
  sub_1D42B6E24();
}

uint64_t sub_1D44727B0()
{
  uint64_t v0;

  MEMORY[0x1D825E524](*(_QWORD *)(v0 + 16), -1, -1);
  return swift_deallocClassInstance();
}

uint64_t sub_1D44727DC()
{
  return os_unfair_recursive_lock_lock_with_options();
}

uint64_t sub_1D44727E8()
{
  return os_unfair_recursive_lock_unlock();
}

void sub_1D44727F0()
{
  sub_1D44727DC();
  sub_1D42B6E24();
}

void sub_1D447280C()
{
  sub_1D44727E8();
  sub_1D42B6E24();
}

id sub_1D4472828()
{
  return sub_1D4472848();
}

id sub_1D4472848()
{
  void *v0;

  return objc_msgSend(v0, sel_lock);
}

id sub_1D4472858()
{
  return sub_1D4472878();
}

id sub_1D4472878()
{
  void *v0;

  return objc_msgSend(v0, sel_unlock);
}

uint64_t type metadata accessor for SafeLock()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SafeRecursiveLock()
{
  return objc_opt_self();
}

uint64_t sub_1D44728C8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D451A374();
  v0 = sub_1D451A0EC();
  MEMORY[0x1D825E41C](MEMORY[0x1E0C95AA0], v0);
  v1 = sub_1D43E2EF8(v0);
  swift_release();
  return v1;
}

uint64_t sub_1D4472948@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = result;
  *(_BYTE *)(a3 + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CombineUtils()
{
  return &type metadata for CombineUtils;
}

ValueMetadata *type metadata accessor for CombineUtils.Activation()
{
  return &type metadata for CombineUtils.Activation;
}

uint64_t sub_1D4472978(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x657669746361 && a2 == 0xE600000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6576697463616E69 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D4472A5C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6576697463616E69;
  else
    return 0x657669746361;
}

uint64_t sub_1D4472A90(_QWORD *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v3 = sub_1D42B28FC(&qword_1EFE53678);
  v4 = sub_1D4445AA8(v3);
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB210();
  v7 = v6 - v5;
  v18 = sub_1D42B28FC(&qword_1EFE53680);
  v8 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  sub_1D42CB210();
  v11 = v10 - v9;
  v12 = sub_1D42B28FC(&qword_1EFE53688);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  sub_1D42CB210();
  v16 = v15 - v14;
  sub_1D42B5528(a1, a1[3]);
  sub_1D447309C();
  sub_1D451BA24();
  if ((a2 & 1) != 0)
  {
    sub_1D44733FC();
    sub_1D437EC40();
    (*(void (**)(uint64_t))(v19 + 8))(v7);
  }
  else
  {
    sub_1D4473114();
    sub_1D437EC40();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
}

uint64_t sub_1D4472C1C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = sub_1D42B28FC(&qword_1EFE53648);
  v3 = sub_1D4445AA8(v2);
  MEMORY[0x1E0C80A78](v3);
  sub_1D42CB210();
  v29 = v5 - v4;
  v28 = sub_1D42B28FC(&qword_1EFE53650);
  v6 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  sub_1D42CB210();
  v9 = v8 - v7;
  v10 = sub_1D42B28FC(&qword_1EFE53658);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1D42CB210();
  v14 = v13 - v12;
  sub_1D42B5528(a1, a1[3]);
  sub_1D447309C();
  sub_1D451BA0C();
  if (v31)
    return sub_1D42B5400((uint64_t)a1);
  v27 = v11;
  v15 = sub_1D451B6D0();
  v16 = *(_QWORD *)(v15 + 16);
  if (!v16
    || (v17 = *(unsigned __int8 *)(v15 + 32),
        sub_1D43B7948(1, v16, v15, v15 + 32, 0, (2 * v16) | 1),
        v19 = v18,
        v21 = v20,
        swift_bridgeObjectRelease(),
        v19 != v21 >> 1))
  {
    v23 = sub_1D451B460();
    swift_allocError();
    v25 = v24;
    sub_1D42B28FC(&qword_1EFE49ED0);
    *v25 = &type metadata for CombineUtils.Activation;
    sub_1D451B61C();
    sub_1D451B454();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x1E0DEC450], v23);
    swift_willThrow();
    sub_1D4371170();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v14, v10);
    return sub_1D42B5400((uint64_t)a1);
  }
  if ((v17 & 1) != 0)
  {
    sub_1D44733FC();
    sub_1D43FABB8();
    v22 = v27;
    (*(void (**)(uint64_t))(v30 + 8))(v29);
  }
  else
  {
    sub_1D4473114();
    sub_1D43FABB8();
    v22 = v27;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v28);
  }
  sub_1D4371170();
  (*(void (**)(uint64_t, unint64_t))(v22 + 8))(v14, v21);
  sub_1D42B5400((uint64_t)a1);
  return v17;
}

uint64_t sub_1D4472F38()
{
  sub_1D4473114();
  return sub_1D451BA3C();
}

uint64_t sub_1D4472F60()
{
  sub_1D4473114();
  return sub_1D451BA48();
}

uint64_t sub_1D4472F88()
{
  char *v0;

  return sub_1D4472A5C(*v0);
}

uint64_t sub_1D4472F90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D4472978(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D4472FB4()
{
  sub_1D447309C();
  return sub_1D451BA3C();
}

uint64_t sub_1D4472FDC()
{
  sub_1D447309C();
  return sub_1D451BA48();
}

uint64_t sub_1D4473004()
{
  sub_1D44730D8();
  return sub_1D451BA3C();
}

uint64_t sub_1D447302C()
{
  sub_1D44730D8();
  return sub_1D451BA48();
}

uint64_t sub_1D4473054@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1D4472C1C(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_1D4473080(_QWORD *a1)
{
  char *v1;

  return sub_1D4472A90(a1, *v1);
}

unint64_t sub_1D447309C()
{
  unint64_t result;

  result = qword_1EFE53660;
  if (!qword_1EFE53660)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45451DC, &type metadata for CombineUtils.Activation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE53660);
  }
  return result;
}

unint64_t sub_1D44730D8()
{
  unint64_t result;

  result = qword_1EFE53668;
  if (!qword_1EFE53668)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454518C, &type metadata for CombineUtils.Activation.InactiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE53668);
  }
  return result;
}

unint64_t sub_1D4473114()
{
  unint64_t result;

  result = qword_1EFE53670;
  if (!qword_1EFE53670)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454513C, &type metadata for CombineUtils.Activation.ActiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE53670);
  }
  return result;
}

uint64_t _s13SoundAnalysis12CombineUtilsV10ActivationOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D447319C + 4 * byte_1D4544EB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D44731D0 + 4 * byte_1D4544EB0[v4]))();
}

uint64_t sub_1D44731D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D44731D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D44731E0);
  return result;
}

uint64_t sub_1D44731EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D44731F4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D44731F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4473200(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CombineUtils.Activation.CodingKeys()
{
  return &type metadata for CombineUtils.Activation.CodingKeys;
}

ValueMetadata *type metadata accessor for CombineUtils.Activation.ActiveCodingKeys()
{
  return &type metadata for CombineUtils.Activation.ActiveCodingKeys;
}

ValueMetadata *type metadata accessor for CombineUtils.Activation.InactiveCodingKeys()
{
  return &type metadata for CombineUtils.Activation.InactiveCodingKeys;
}

unint64_t sub_1D4473240()
{
  unint64_t result;

  result = qword_1EFE53690;
  if (!qword_1EFE53690)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4545114, &type metadata for CombineUtils.Activation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE53690);
  }
  return result;
}

unint64_t sub_1D4473280()
{
  unint64_t result;

  result = qword_1EFE53698;
  if (!qword_1EFE53698)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4545034, &type metadata for CombineUtils.Activation.ActiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE53698);
  }
  return result;
}

unint64_t sub_1D44732C0()
{
  unint64_t result;

  result = qword_1EFE536A0;
  if (!qword_1EFE536A0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454505C, &type metadata for CombineUtils.Activation.ActiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE536A0);
  }
  return result;
}

unint64_t sub_1D4473300()
{
  unint64_t result;

  result = qword_1EFE536A8;
  if (!qword_1EFE536A8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4544FE4, &type metadata for CombineUtils.Activation.InactiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE536A8);
  }
  return result;
}

unint64_t sub_1D4473340()
{
  unint64_t result;

  result = qword_1EFE536B0;
  if (!qword_1EFE536B0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454500C, &type metadata for CombineUtils.Activation.InactiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE536B0);
  }
  return result;
}

unint64_t sub_1D4473380()
{
  unint64_t result;

  result = qword_1EFE536B8;
  if (!qword_1EFE536B8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4545084, &type metadata for CombineUtils.Activation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE536B8);
  }
  return result;
}

unint64_t sub_1D44733C0()
{
  unint64_t result;

  result = qword_1EFE536C0;
  if (!qword_1EFE536C0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45450AC, &type metadata for CombineUtils.Activation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE536C0);
  }
  return result;
}

unint64_t sub_1D44733FC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_1D44730D8();
}

uint64_t sub_1D4473408(uint64_t result)
{
  if ((unint64_t)(result - 4) < 0xFFFFFFFFFFFFFFFDLL)
  {
    type metadata accessor for SNError();
    sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 4, 0, 0xD00000000000001BLL, 0x80000001D4554DD0);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1D447348C(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 >= 3)
    return *(_QWORD *)(a1 + 8 * v1 + 8);
  else
    return 0;
}

uint64_t sub_1D44734B4(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v9;

  if (qword_1EFE40338 != -1)
    swift_once();
  v4 = sub_1D451A014();
  sub_1D42CC880(v4, (uint64_t)qword_1EFEA7700);
  swift_bridgeObjectRetain_n();
  v5 = sub_1D4519FFC();
  v6 = sub_1D451AF68();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    sub_1D43D72EC(a1, a2, &v9);
    sub_1D451B1A8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D42A7000, v5, v6, "Would-be Fatal Error! %s", v7, 0xCu);
    swift_arrayDestroy();
    sub_1D42CC934();
  }

  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1D4473640(void *a1)
{
  id v1;
  unsigned __int8 v3;

  v1 = a1;
  sub_1D42B28FC(&qword_1EFE49BB0);
  if (swift_dynamicCast())
    return v3;
  else
    return 0;
}

uint64_t sub_1D4473694(uint64_t a1, unint64_t a2, void (*a3)(uint64_t *__return_ptr), uint64_t a4, void (*a5)(uint64_t *))
{
  void *v5;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;

  a3(&v20);
  if (v5)
  {
    if (qword_1EFE40338 != -1)
      swift_once();
    v9 = sub_1D451A014();
    sub_1D42CC880(v9, (uint64_t)qword_1EFEA7700);
    swift_bridgeObjectRetain();
    v10 = v5;
    swift_bridgeObjectRetain();
    v11 = v5;
    v12 = sub_1D4519FFC();
    v13 = sub_1D451AF5C();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v15 = swift_slowAlloc();
      v20 = v15;
      *(_DWORD *)v14 = 136315394;
      swift_bridgeObjectRetain();
      sub_1D43D72EC(a1, a2, &v20);
      sub_1D451B1A8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v14 + 12) = 2080;
      v16 = v5;
      sub_1D42B28FC(&qword_1EFE49BB0);
      v17 = sub_1D451A728();
      sub_1D43D72EC(v17, v18, &v20);
      sub_1D451B1A8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D42A7000, v12, v13, "%serror logging: %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D825E524](v15, -1, -1);
      MEMORY[0x1D825E524](v14, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    return swift_willThrow();
  }
  else
  {
    a5(&v20);
    return v20;
  }
}

uint64_t sub_1D4473908()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t v4;
  void *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1D4474060();
  v2();
  if (!v0)
    return sub_1D4474054();
  if (qword_1EFE40338 != -1)
    swift_once();
  v4 = sub_1D451A014();
  sub_1D42CC880(v4, (uint64_t)qword_1EFEA7700);
  sub_1D42DCE84();
  sub_1D4311FD8();
  sub_1D42DCE84();
  sub_1D4311FD8();
  v5 = (void *)sub_1D4519FFC();
  v6 = sub_1D451AF5C();
  if (sub_1D4473FE8(v6))
  {
    sub_1D43FAC38();
    v13 = sub_1D4474018();
    *(_DWORD *)v1 = 136315394;
    v7 = sub_1D42DCE84();
    sub_1D4474008(v7);
    sub_1D4473FA0();
    sub_1D43AFBE8();
    *(_WORD *)(v1 + 12) = 2080;
    sub_1D4311FD8();
    sub_1D42B28FC(&qword_1EFE49BB0);
    v8 = sub_1D4473FF8();
    sub_1D4474048(v8, v9, v10, v0, v13);
    sub_1D4473FBC();
    swift_bridgeObjectRelease();
    sub_1D4311F78();
    sub_1D4311F78();
    sub_1D4473FD4(&dword_1D42A7000, v11, v12, "%serror logging: %s");
    sub_1D4474028();
    sub_1D42CC934();
  }
  sub_1D439E0A0();
  sub_1D4311F78();
  sub_1D4311F78();

  return swift_willThrow();
}

uint64_t sub_1D4473A80()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t *__return_ptr);
  uint64_t v3;
  void *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_1D4474060();
  v2(&v13);
  if (v0)
  {
    if (qword_1EFE40338 != -1)
      swift_once();
    v3 = sub_1D451A014();
    sub_1D42CC880(v3, (uint64_t)qword_1EFEA7700);
    sub_1D42DCE84();
    sub_1D4311FD8();
    sub_1D42DCE84();
    sub_1D4311FD8();
    v4 = (void *)sub_1D4519FFC();
    v5 = sub_1D451AF5C();
    if (sub_1D4473FE8(v5))
    {
      sub_1D43FAC38();
      v13 = sub_1D4474018();
      *(_DWORD *)v1 = 136315394;
      v6 = sub_1D42DCE84();
      sub_1D4474008(v6);
      sub_1D4473FA0();
      sub_1D43AFBE8();
      *(_WORD *)(v1 + 12) = 2080;
      sub_1D4311FD8();
      sub_1D42B28FC(&qword_1EFE49BB0);
      v7 = sub_1D4473FF8();
      sub_1D4474048(v7, v8, v9, v0);
      sub_1D4473FBC();
      swift_bridgeObjectRelease();
      sub_1D4311F78();
      sub_1D4311F78();
      sub_1D4473FD4(&dword_1D42A7000, v10, v11, "%serror logging: %s");
      sub_1D4474028();
      sub_1D42CC934();
    }
    sub_1D439E0A0();
    sub_1D4311F78();
    sub_1D4311F78();

    return swift_willThrow();
  }
  else
  {
    sub_1D4474054();
    return v13;
  }
}

id sub_1D4473C08(void *a1)
{
  id v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v11;
  uint64_t v12;

  if (!a1)
  {
    v4 = (id)*MEMORY[0x1E0C99768];
    v5 = 0xED0000726F727265;
    v6 = 0x206E776F6E6B6E75;
LABEL_6:
    v9 = objc_allocWithZone(MEMORY[0x1E0C99DA0]);
    return sub_1D4473ECC(v4, v6, v5, 0);
  }
  v1 = a1;
  sub_1D42B28FC(&qword_1EFE49BB0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v7 = (void *)*MEMORY[0x1E0C99768];
    swift_getErrorValue();
    v4 = v7;
    v6 = sub_1D451B8E0();
    v5 = v8;
    goto LABEL_6;
  }
  v2 = (void *)sub_1D451A6C8();
  objc_allocWithZone(MEMORY[0x1E0C99DA0]);
  sub_1D42DCE84();
  v3 = sub_1D4473ECC(v2, v11, v12, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1D4473DAC(uint64_t a1, unint64_t a2, void (*a3)(uint64_t *__return_ptr), uint64_t a4, void (*a5)(uint64_t *))
{
  void *v5;
  uint64_t v6;
  char v7;
  _BYTE *v8;

  v6 = sub_1D4473694(a1, a2, a3, a4, a5);
  if (v5)
  {
    v7 = sub_1D4473640(v5);

    sub_1D43778D4();
    swift_willThrowTypedImpl();
    sub_1D4474038();
    *v8 = v7;
  }
  return v6;
}

uint64_t sub_1D4473E34()
{
  return sub_1D4473E48();
}

uint64_t sub_1D4473E48()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;

  v1 = sub_1D4473A80();
  if (!v0)
    return v1;
  v2 = sub_1D4473640(v0);

  sub_1D43778D4();
  swift_willThrowTypedImpl();
  sub_1D4474038();
  *v3 = v2;
  return v2;
}

id sub_1D4473ECC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v7;
  void *v8;
  id v9;

  if (!a3)
  {
    v7 = 0;
    if (a4)
      goto LABEL_3;
LABEL_5:
    v8 = 0;
    goto LABEL_6;
  }
  v7 = (void *)sub_1D451A6C8();
  swift_bridgeObjectRelease();
  if (!a4)
    goto LABEL_5;
LABEL_3:
  v8 = (void *)sub_1D451A5A8();
  swift_bridgeObjectRelease();
LABEL_6:
  v9 = objc_msgSend(v4, sel_initWithName_reason_userInfo_, a1, v7, v8);

  return v9;
}

ValueMetadata *_s9ExceptionVMa()
{
  return &_s9ExceptionVN;
}

uint64_t sub_1D4473FA0()
{
  return sub_1D451B1A8();
}

uint64_t sub_1D4473FBC()
{
  return sub_1D451B1A8();
}

void sub_1D4473FD4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

BOOL sub_1D4473FE8(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1D4473FF8()
{
  return sub_1D451A728();
}

uint64_t sub_1D4474008(uint64_t a1, ...)
{
  unint64_t v1;
  uint64_t v2;
  va_list va;

  va_start(va, a1);
  return sub_1D43D72EC(v2, v1, (uint64_t *)va);
}

uint64_t sub_1D4474018()
{
  return swift_slowAlloc();
}

uint64_t sub_1D4474028()
{
  return swift_arrayDestroy();
}

uint64_t sub_1D4474038()
{
  return swift_allocError();
}

uint64_t sub_1D4474048(uint64_t a1, unint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return sub_1D43D72EC(a1, a2, (uint64_t *)va);
}

uint64_t sub_1D4474054()
{
  uint64_t (*v0)(void);

  return v0();
}

void sub_1D4474074(uint64_t a1)
{
  uint64_t v1;
  _BYTE *v2;
  _BYTE v3[32];
  _BYTE v4[32];

  sub_1D44959F4(a1);
  if (!v1)
  {
    sub_1D42B294C((uint64_t)v4, (uint64_t)v3);
    if ((swift_dynamicCast() & 1) == 0)
    {
      sub_1D42BE058();
      sub_1D42B6D0C();
      *v2 = 7;
      sub_1D4312028();
    }
    sub_1D42B5400((uint64_t)v4);
  }
}

void sub_1D4474118(uint64_t a1)
{
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  _BYTE v4[32];

  sub_1D44959F4(a1);
  if (!v1)
  {
    sub_1D42B294C((uint64_t)v4, (uint64_t)&v3);
    sub_1D432BEDC();
    if ((swift_dynamicCast() & 1) == 0)
    {
      sub_1D42BE058();
      sub_1D42B6D0C();
      *v2 = 7;
      sub_1D4312028();
    }
    sub_1D42B5400((uint64_t)v4);
  }
}

void sub_1D44741C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _BYTE *v4;
  _BYTE v5[32];
  _BYTE v6[32];

  sub_1D4495A5C(a1, a2, a3);
  if (!v3)
  {
    sub_1D42B294C((uint64_t)v6, (uint64_t)v5);
    if ((swift_dynamicCast() & 1) == 0)
    {
      sub_1D42BE058();
      swift_allocError();
      *v4 = 7;
      swift_willThrow();
    }
    sub_1D42B5400((uint64_t)v6);
  }
}

void sub_1D4474274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _BYTE *v4;
  _BYTE v5[32];
  _BYTE v6[32];

  sub_1D4495A5C(a1, a2, a3);
  if (!v3)
  {
    sub_1D42B294C((uint64_t)v6, (uint64_t)v5);
    if ((swift_dynamicCast() & 1) == 0)
    {
      sub_1D42BE058();
      swift_allocError();
      *v4 = 7;
      swift_willThrow();
    }
    sub_1D42B5400((uint64_t)v6);
  }
}

void sub_1D4474328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE v6[32];

  sub_1D4495A5C(a1, a2, a3);
  if (!v3)
  {
    sub_1D42B294C((uint64_t)v6, (uint64_t)&v5);
    sub_1D42B28FC(&qword_1EFE536F8);
    if ((swift_dynamicCast() & 1) == 0)
    {
      sub_1D42BE058();
      swift_allocError();
      *v4 = 7;
      swift_willThrow();
    }
    sub_1D42B5400((uint64_t)v6);
  }
}

double sub_1D4474400()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___SNDetectSoundActionsRequest_impl + 8);
}

void sub_1D4474434(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR___SNDetectSoundActionsRequest_impl + 8) = a1;
}

uint64_t sub_1D4474468()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___SNDetectSoundActionsRequest_impl + 16);
}

uint64_t sub_1D44744A0(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR___SNDetectSoundActionsRequest_impl + 16) = result;
  return result;
}

uint64_t sub_1D44744D4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___SNDetectSoundActionsRequest_impl + 24);
}

uint64_t sub_1D447450C(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR___SNDetectSoundActionsRequest_impl + 24) = result;
  return result;
}

uint64_t sub_1D4474570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  objc_super v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___SNDetectSoundActionsRequest_impl + 32);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1D451B49C();
    v4 = (objc_class *)type metadata accessor for SNSoundActionCommand();
    v5 = (uint64_t *)(v1 + 56);
    do
    {
      v7 = *(v5 - 3);
      v6 = *(v5 - 2);
      v8 = *(v5 - 1);
      v9 = *v5;
      v5 += 4;
      v10 = (char *)objc_allocWithZone(v4);
      v11 = &v10[OBJC_IVAR___SNSoundActionCommand_impl];
      *(_QWORD *)v11 = v7;
      *((_QWORD *)v11 + 1) = v6;
      *((_QWORD *)v11 + 2) = v8;
      *((_QWORD *)v11 + 3) = v9;
      v13.receiver = v10;
      v13.super_class = v4;
      swift_bridgeObjectRetain();
      objc_msgSendSuper2(&v13, sel_init);
      sub_1D451B484();
      sub_1D451B4A8();
      sub_1D451B4B4();
      sub_1D451B490();
      --v2;
    }
    while (v2);
    v3 = v14;
    swift_bridgeObjectRelease();
  }
  return v3;
}

void sub_1D44746FC(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v2 = v1;
  v3 = a1;
  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    *(_QWORD *)(v2 + OBJC_IVAR___SNDetectSoundActionsRequest_impl + 32) = v6;
    swift_bridgeObjectRelease();
    return;
  }
  v4 = sub_1D451B5A4();
  if (!v4)
    goto LABEL_13;
LABEL_3:
  v18 = MEMORY[0x1E0DEE9D8];
  sub_1D42C7ACC();
  if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = 0;
    v6 = v18;
    v16 = v1;
    v17 = v3 & 0xC000000000000001;
    v7 = v3;
    do
    {
      if (v17)
        v8 = (char *)MEMORY[0x1D825CD78](v5, v3);
      else
        v8 = (char *)*(id *)(v3 + 8 * v5 + 32);
      v9 = v8;
      v10 = *(_QWORD *)&v8[OBJC_IVAR___SNSoundActionCommand_impl];
      v11 = *(_QWORD *)&v8[OBJC_IVAR___SNSoundActionCommand_impl + 8];
      v12 = *(_QWORD *)&v8[OBJC_IVAR___SNSoundActionCommand_impl + 16];
      v13 = *(_QWORD *)&v8[OBJC_IVAR___SNSoundActionCommand_impl + 24];
      swift_bridgeObjectRetain();

      v14 = *(_QWORD *)(v18 + 16);
      if (v14 >= *(_QWORD *)(v18 + 24) >> 1)
        sub_1D42C7ACC();
      ++v5;
      *(_QWORD *)(v18 + 16) = v14 + 1;
      v15 = (_QWORD *)(v18 + 32 * v14);
      v15[4] = v10;
      v15[5] = v11;
      v15[6] = v12;
      v15[7] = v13;
      v3 = v7;
    }
    while (v4 != v5);
    swift_bridgeObjectRelease();
    v2 = v16;
    goto LABEL_14;
  }
  __break(1u);
}

_UNKNOWN **sub_1D4474898()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  type metadata accessor for SNSoundActionsDetector();
  v2 = sub_1D42B6F40();
  sub_1D44750D0((char *)v0);
  if (v1)
    return &off_1E97A6F68;
  else
    return (_UNKNOWN **)v2;
}

void sub_1D44748F0(void *a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  objc_class *ObjectType;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  objc_class *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _QWORD *v31;
  BOOL v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  char *v45;
  id v46;
  objc_class *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  objc_class *v53;
  unint64_t v54;
  id v55;
  unint64_t v56;
  objc_super v57;
  unint64_t v58;

  v4 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v8 = v4;
  sub_1D44741C0(a2, 0xD000000000000013, 0x80000001D455A800);
  if (v3)
  {

    sub_1D42B7204();
LABEL_4:
    sub_1D43C3A38();
    return;
  }
  v10 = v9;
  sub_1D4474274(a2, 0x6D61536F69647541, 0xEF65746152656C70);
  v12 = v11;
  sub_1D44741C0(a2, 0xD000000000000015, 0x80000001D455A820);
  v14 = v13;
  sub_1D4474328(a2, 0x73646E616D6D6F43, 0xE800000000000000);
  v16 = v15;
  sub_1D42B7204();
  v17 = *(_QWORD *)(v16 + 16);
  v18 = MEMORY[0x1E0DEE9D8];
  v52 = a1;
  v53 = ObjectType;
  v50 = v14;
  v51 = v10;
  if (v17)
  {
    v58 = MEMORY[0x1E0DEE9D8];
    v19 = v17;
    v55 = a1;
    v49 = v19;
    sub_1D451B49C();
    v20 = v16 + 32;
    v21 = (objc_class *)type metadata accessor for SNSoundActionCommand();
    v22 = 0;
    v47 = v21;
    v48 = v16 + 32;
    while (1)
    {
      v23 = *(_QWORD *)(v20 + 8 * v22);
      v24 = objc_allocWithZone(v21);
      swift_bridgeObjectRetain_n();
      v25 = (char *)sub_1D44405AC(v23);
      v26 = sub_1D447617C(objc_msgSend(v55, sel_modelDescription));
      if (!v26)
        break;
      v27 = sub_1D4474DD8(v26);
      sub_1D435EB80();
      if (!v27)
        break;
      v28 = *(_QWORD *)(v27 + 16);
      if (!v28)
      {
LABEL_21:
        sub_1D42B7204();
        break;
      }
      v29 = v22 + 1;
      v30 = &v25[OBJC_IVAR___SNSoundActionCommand_impl];
      v31 = (_QWORD *)(v27 + 40);
      while (1)
      {
        v32 = *(v31 - 1) == *(_QWORD *)v30 && *v31 == *((_QWORD *)v30 + 1);
        if (v32 || (sub_1D451B820() & 1) != 0)
          break;
        v31 += 2;
        if (!--v28)
          goto LABEL_21;
      }
      sub_1D4476388();
      sub_1D42B7204();
      sub_1D451B484();
      sub_1D451B4A8();
      sub_1D451B4B4();
      sub_1D451B490();
      v20 = v48;
      v32 = v29 == v49;
      a1 = v52;
      ObjectType = v53;
      v22 = v29;
      v10 = v51;
      v21 = v47;
      if (v32)
      {
        v33 = v58;
        v14 = v50;
        swift_bridgeObjectRelease();

        v18 = MEMORY[0x1E0DEE9D8];
        goto LABEL_24;
      }
    }
    type metadata accessor for SNError();
    sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0, 0xE000000000000000);
    sub_1D4312028();
    sub_1D4476388();

    sub_1D435EB80();
    swift_release();
    goto LABEL_4;
  }
  sub_1D435EB80();
  v33 = MEMORY[0x1E0DEE9D8];
LABEL_24:
  v34 = v14;
  if (!(v33 >> 62))
  {
    v35 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v35)
      goto LABEL_26;
LABEL_36:
    sub_1D4347994();
LABEL_37:
    v45 = &v8[OBJC_IVAR___SNDetectSoundActionsRequest_impl];
    *(_QWORD *)v45 = a1;
    *((_QWORD *)v45 + 1) = v12;
    *((_QWORD *)v45 + 2) = v10;
    *((_QWORD *)v45 + 3) = v34;
    *((_QWORD *)v45 + 4) = v18;
    v46 = a1;

    v57.receiver = v8;
    v57.super_class = ObjectType;
    objc_msgSendSuper2(&v57, sel_init);

    return;
  }
  swift_bridgeObjectRetain();
  v35 = sub_1D451B5A4();
  sub_1D4347994();
  if (!v35)
    goto LABEL_36;
LABEL_26:
  v58 = v18;
  sub_1D42C7ACC();
  if ((v35 & 0x8000000000000000) == 0)
  {
    v36 = 0;
    v18 = v58;
    v54 = v33 & 0xC000000000000001;
    v56 = v33;
    do
    {
      if (v54)
        v37 = (char *)MEMORY[0x1D825CD78](v36, v33);
      else
        v37 = (char *)*(id *)(v33 + 8 * v36 + 32);
      v38 = v37;
      v39 = *(_QWORD *)&v37[OBJC_IVAR___SNSoundActionCommand_impl];
      v40 = *(_QWORD *)&v37[OBJC_IVAR___SNSoundActionCommand_impl + 8];
      v41 = *(_QWORD *)&v37[OBJC_IVAR___SNSoundActionCommand_impl + 16];
      v42 = *(_QWORD *)&v37[OBJC_IVAR___SNSoundActionCommand_impl + 24];
      swift_bridgeObjectRetain();

      v58 = v18;
      v43 = *(_QWORD *)(v18 + 16);
      if (v43 >= *(_QWORD *)(v18 + 24) >> 1)
      {
        sub_1D42C7ACC();
        v18 = v58;
      }
      ++v36;
      *(_QWORD *)(v18 + 16) = v43 + 1;
      v44 = (_QWORD *)(v18 + 32 * v43);
      v44[4] = v39;
      v44[5] = v40;
      v44[6] = v41;
      v44[7] = v42;
      v33 = v56;
    }
    while (v35 != v36);
    sub_1D4347994();
    a1 = v52;
    ObjectType = v53;
    v34 = v50;
    v10 = v51;
    goto LABEL_37;
  }
  __break(1u);
}

uint64_t sub_1D4474DD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[32];
  uint64_t v11;

  v2 = *(_QWORD *)(a1 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  sub_1D42C71F0();
  v3 = v11;
  if (v2)
  {
    for (i = a1 + 32; ; i += 32)
    {
      sub_1D42B294C(i, (uint64_t)v10);
      if (!swift_dynamicCast())
        break;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D42C71F0();
        v3 = v11;
      }
      v5 = *(_QWORD *)(v3 + 16);
      if (v5 >= *(_QWORD *)(v3 + 24) >> 1)
      {
        sub_1D42C71F0();
        v3 = v11;
      }
      *(_QWORD *)(v3 + 16) = v5 + 1;
      v6 = v3 + 16 * v5;
      *(_QWORD *)(v6 + 32) = v8;
      *(_QWORD *)(v6 + 40) = v9;
      if (!--v2)
        return v3;
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

id SNDetectSoundActionsRequest.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SNDetectSoundActionsRequest.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SNDetectSoundActionsRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_UNKNOWN **sub_1D4475090()
{
  return sub_1D4474898();
}

uint64_t type metadata accessor for SNDetectSoundActionsRequest()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNDetectSoundActionsRequest()
{
  return swift_lookUpClassMethod();
}

void sub_1D44750D0(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  double (*v25)@<D0>(uint64_t@<X0>, uint64_t *@<X1>, uint64_t@<X8>);
  uint64_t v26;
  double (*v27)@<D0>(uint64_t@<X0>, uint64_t *@<X1>, uint64_t@<X8>);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41[3];

  v5 = v2;
  v6 = v1;
  *(_QWORD *)(v1 + 16) = 0;
  v8 = sub_1D4474570();
  v11 = *(double *)&a1[OBJC_IVAR___SNDetectSoundActionsRequest_impl + 8];
  if ((~*(_QWORD *)&v11 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v11 <= -2147483650.0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v11 >= 2147483650.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v3 = v8;
  v4 = *(_QWORD *)&a1[OBJC_IVAR___SNDetectSoundActionsRequest_impl + 24];
  v8 = sub_1D451B0A0();
  if (!(v3 >> 62))
  {
    v12 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_6;
  }
LABEL_22:
  v39 = v8;
  v30 = v10;
  v31 = v9;
  swift_bridgeObjectRetain();
  v12 = sub_1D451B5A4();
  sub_1D42CB8F4();
  v9 = v31;
  v8 = v39;
  v10 = v30;
LABEL_6:
  v13 = MEMORY[0x1E0DEE9D8];
  if (v12)
  {
    v36 = v9;
    v37 = v10;
    v38 = v8;
    v41[0] = MEMORY[0x1E0DEE9D8];
    sub_1D42C7584();
    if (v12 < 0)
    {
      __break(1u);
      return;
    }
    v32 = v4;
    v33 = v2;
    v34 = a1;
    v35 = v6;
    v14 = 0;
    v13 = v41[0];
    v40 = v3 & 0xC000000000000001;
    v15 = v3;
    v16 = v12;
    do
    {
      if (v40)
        v17 = (char *)MEMORY[0x1D825CD78](v14, v3);
      else
        v17 = (char *)*(id *)(v3 + 8 * v14 + 32);
      v18 = v17;
      v19 = *(_QWORD *)&v17[OBJC_IVAR___SNSoundActionCommand_impl];
      v20 = *(_QWORD *)&v17[OBJC_IVAR___SNSoundActionCommand_impl + 8];
      v21 = *(_QWORD *)&v17[OBJC_IVAR___SNSoundActionCommand_impl + 24];
      v22 = *(_QWORD *)&v17[OBJC_IVAR___SNSoundActionCommand_impl + 16];
      swift_bridgeObjectRetain();

      v41[0] = v13;
      v23 = *(_QWORD *)(v13 + 16);
      if (v23 >= *(_QWORD *)(v13 + 24) >> 1)
      {
        sub_1D42C7584();
        v13 = v41[0];
      }
      ++v14;
      *(_QWORD *)(v13 + 16) = v23 + 1;
      v24 = (_QWORD *)(v13 + 32 * v23);
      v24[4] = v19;
      v24[5] = v20;
      v24[6] = v21;
      v24[7] = v22;
      v3 = v15;
    }
    while (v16 != v14);
    a1 = v34;
    v6 = v35;
    v4 = v32;
    v5 = v33;
    v10 = v37;
    v8 = v38;
    v9 = v36;
  }
  v41[0] = v8;
  v41[1] = v9;
  v41[2] = v10;
  v25 = sub_1D4406090(v13, v4, v41);
  if (v5)
  {
    sub_1D42CB8F4();

    sub_1D42B7204();
    sub_1D43C3A38();
  }
  else
  {
    v27 = v25;
    v28 = v26;
    sub_1D42B7204();
    v29 = sub_1D42B6F40();
    *(_QWORD *)(v29 + 16) = v27;
    *(_QWORD *)(v29 + 24) = v28;
    sub_1D42CB8F4();
    *(_QWORD *)(v6 + 32) = sub_1D4476204;
    *(_QWORD *)(v6 + 40) = v29;
    *(_QWORD *)(v6 + 24) = a1;
  }
}

uint64_t sub_1D4475388(void *a1, unint64_t a2, double a3)
{
  id v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  __int128 *v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  uint64_t result;
  id v59;
  int v60;
  __int128 v61;
  __int128 v62;
  id v63;
  id v64;
  __int128 v65;
  __int128 v66;
  int v67;
  uint64_t v68;

  v68 = *MEMORY[0x1E0C80C00];
  type metadata accessor for SNUtils();
  v6 = objc_msgSend(a1, sel_modelDescription);
  v7 = sub_1D44BC6AC(v6);

  v8 = sub_1D44BE0AC(v7, 1u);
  sub_1D42CB8F4();
  if ((~*(_QWORD *)&a3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (a3 <= -1.0)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (a3 >= 4294967300.0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if ((a2 & 0x8000000000000000) == 0 && !HIDWORD(a2))
  {
    v9 = objc_opt_self();
    sub_1D450053C(a3, a2, 1, (uint64_t)&v64);
    sub_1D4500620(a3, a2, v8, 1, (uint64_t)&v64);
    v10 = v64;
    v61 = v66;
    v62 = v65;
    v60 = v67;
    v64 = 0;
    v11 = sub_1D45001AC(v9, (uint64_t)&v64);
    if (!v11)
    {
      v52 = v64;
      sub_1D4519AA4();
      sub_1D4476378();
      sub_1D42B7124();
      return (uint64_t)v11;
    }
    v12 = v64;
    v13 = (void *)sub_1D451A6C8();
    v14 = sub_1D4476364();
    v17 = sub_1D44FD014(v14, v15, v13, v16);

    if (v17)
    {
      v18 = v64;
      v19 = (void *)sub_1D451A6C8();
      v20 = sub_1D4476364();
      v23 = sub_1D44FEE98(v20, v21, v19, v22);

      if (v23)
      {
        v24 = v64;
        v25 = (void *)sub_1D4476348();
        v26 = sub_1D4476364();
        v29 = sub_1D44FF500(v26, v27, v25, v28);

        v30 = v64;
        if (v29)
        {
          v64 = 0;
          v31 = v30;
          if (sub_1D44FF7D0(v9, v29, a1, (uint64_t)&v64)
            && (v32 = v64,
                v33 = (void *)sub_1D451A6C8(),
                v64 = 0,
                v34 = sub_1D44FD534(v9, v11, v33, 1, (uint64_t)&v64),
                v33,
                v34))
          {
            sub_1D4476380();
            v35 = sub_1D44762F8();
            v41 = v63;
            if (sub_1D42F1E90(v35, v36, v17, v23, v37, v38, v39, v40)
              && (sub_1D4476380(),
                  v64 = v10,
                  v65 = v62,
                  v66 = v61,
                  v67 = v60,
                  v44 = sub_1D42F1E90(v9, v11, v23, v29, v42, v43, (__int128 *)&v64, (uint64_t)&v63),
                  v41 = v63,
                  v44))
            {
              sub_1D4476380();
              v45 = sub_1D44762F8();
              if (sub_1D42F1E90(v45, v46, v29, v34, v47, v48, v49, v50))
              {
                if (a3 > -9.22337204e18)
                {
                  if (a3 < 9.22337204e18)
                  {
                    v51 = v63;
                    sub_1D44F3DE8((uint64_t)v11);
                    sub_1D44F44A0((uint64_t)v11);

                    return (uint64_t)v11;
                  }
LABEL_33:
                  __break(1u);
                }
LABEL_32:
                __break(1u);
                goto LABEL_33;
              }
              v59 = v63;
            }
            else
            {
              v56 = v41;
            }
            sub_1D4519AA4();
            sub_1D4476378();
            sub_1D42B7124();

          }
          else
          {
            v57 = v64;
            sub_1D4519AA4();
            sub_1D4476378();
            sub_1D42B7124();

          }
        }
        else
        {
          v55 = v64;
          sub_1D4519AA4();
          sub_1D4476378();
          sub_1D42B7124();

        }
      }
      else
      {
        v54 = v64;
        sub_1D4519AA4();
        sub_1D4476378();
        sub_1D42B7124();

      }
    }
    else
    {
      v53 = v64;
      sub_1D4519AA4();

      sub_1D42B7124();
    }

    return (uint64_t)v11;
  }
  sub_1D42DCED4();
  result = sub_1D451B550();
  __break(1u);
  return result;
}

CMTimeValue sub_1D44758B8(void *a1, int64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t))
{
  CMTimeValue v3;
  uint64_t v4;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  _BYTE *v21;
  _BYTE *v22;
  id v23;
  int32_t v24;
  int32_t v25;
  uint64_t v26;
  id v27;
  int32_t v28;
  int32_t v29;
  CMTimeValue v30;
  CMTimeEpoch epoch;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  uint64_t v34;
  uint64_t v35;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  CMTimeValue v45;
  CMTimeValue v46;
  uint64_t value;
  CMTimeEpoch valuea;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  CMTime v50;
  double v51[8];
  _QWORD v52[8];
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[8];

  v56[6] = *MEMORY[0x1E0C80C00];
  v8 = objc_opt_self();
  v50.value = 0;
  v9 = sub_1D4500090(v8, a1, (uint64_t)&v50);
  if (!v9)
  {
    v20 = (id)v50.value;
    sub_1D4519AA4();

    swift_willThrow();
    return v3;
  }
  v10 = v9;
  v11 = *(void **)(*(_QWORD *)(v3 + 24) + OBJC_IVAR___SNDetectSoundActionsRequest_impl);
  v12 = (id)v50.value;
  sub_1D43F7750(objc_msgSend(v11, sel_modelDescription));
  if (!v13)
  {
    sub_1D42B7F2C();
    sub_1D42B6D0C();
    *v22 = 0;
    sub_1D4312028();
    goto LABEL_10;
  }
  v14 = (void *)sub_1D451A6C8();
  sub_1D435EB80();
  v15 = objc_msgSend(v10, sel_featureValueForName_, v14);

  if (!v15)
    goto LABEL_8;
  v16 = objc_msgSend(v15, sel_dictionaryValue);

  sub_1D432BEDC();
  v49 = a3;
  v17 = sub_1D451A5CC();

  sub_1D43F5D4C(v17);
  v19 = v18;
  swift_bridgeObjectRelease();
  if (!v19)
  {
LABEL_8:
    sub_1D42B7F2C();
    sub_1D42B6D0C();
    *v21 = 0;
    sub_1D4312028();
    swift_bridgeObjectRelease();
LABEL_10:
    sub_1D42E3CCC();
    return v3;
  }
  sub_1D44C87E0(a1, 0, (uint64_t)v51);
  if (v4)
  {
    sub_1D42E3CCC();
    swift_bridgeObjectRelease();
    return v3;
  }
  if ((~*(_QWORD *)&v51[0] & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v51[0] <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
  }
  if (v51[0] >= 9.22337204e18)
    goto LABEL_21;
  value = (uint64_t)v51[0];
  v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedInt_, sub_1D44F2078((uint64_t)a1));
  sub_1D42DC694(v23);
  v25 = v24;

  CMTimeMake(&v50, value, v25);
  v46 = v50.value;
  valuea = v50.epoch;
  v26 = *(_QWORD *)&v50.timescale;
  v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedInt_, sub_1D44F2078((uint64_t)a1));
  sub_1D42DC694(v27);
  v29 = v28;

  CMTimeMake(&v50, a2, v29);
  v30 = v50.value;
  epoch = v50.epoch;
  v32 = *(_QWORD *)&v50.timescale;
  v33 = *(uint64_t (**)(uint64_t, _QWORD *))(v3 + 32);
  sub_1D4365794();
  v35 = v34;
  sub_1D435EB80();
  v56[0] = v46;
  v56[1] = v26;
  v56[2] = valuea;
  v56[3] = v30;
  v56[4] = v32;
  v56[5] = epoch;
  v37 = (void *)v33(v35, v56);
  swift_bridgeObjectRelease();
  if (v37)
  {
    SNSoundActionsResult.timeRange.getter((uint64_t)v52);
    v38 = v52[0];
    v39 = v52[1];
    v40 = v52[2];
    v41 = v37;
    v49(v38, v39, v40);
    v42 = sub_1D451AEE4();
    ((void (*)(uint64_t))v49)(v42);
    sub_1D451AEF0();
    v43 = v55;
    v44 = &v41[OBJC_IVAR___SNSoundActionsResult_impl];
    *(_QWORD *)v44 = v52[6];
    *((_QWORD *)v44 + 1) = v52[7];
    *((_OWORD *)v44 + 1) = v53;
    *((_QWORD *)v44 + 4) = v54;
    *((_QWORD *)v44 + 5) = v43;

    sub_1D42B28FC(&qword_1EFE40410);
    v45 = sub_1D42B6F40();
    *(_OWORD *)(v45 + 16) = xmmword_1D4525300;
    *(_QWORD *)(v45 + 32) = v41;
    v50.value = v45;
    sub_1D451A950();
    v3 = v50.value;
    sub_1D42E3CCC();
  }
  else
  {
    sub_1D42E3CCC();
    return MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

id sub_1D4475D60()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  if (v1)
    return v1;
  sub_1D4476104();
  sub_1D42B6D0C();
  return (id)sub_1D4312028();
}

void sub_1D4475DAC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *v0;
  v3 = sub_1D42B6F40();
  *(_QWORD *)(v3 + 16) = v0;
  *(_QWORD *)(v3 + 24) = v2;
  swift_retain();
  v4 = sub_1D42CEEA4();
  swift_release();
  if (!v1)
  {
    v5 = (void *)v0[2];
    v0[2] = v4;

  }
}

void sub_1D4475E2C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  double v6;
  id v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 + 24) + OBJC_IVAR___SNDetectSoundActionsRequest_impl;
  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(double *)(v4 + 8);
  v7 = *(id *)v4;
  v8 = sub_1D4475388(v7, v5, v6);

  if (!v2)
    *a2 = v8;
}

id sub_1D4475EA8()
{
  uint64_t v0;
  id result;
  void *v2;
  void *v3;
  id v4;

  result = sub_1D4475D60();
  if (!v0)
  {
    v2 = result;
    v3 = (void *)sub_1D4476348();
    v4 = sub_1D44F590C(v2, v3);

    return v4;
  }
  return result;
}

uint64_t sub_1D4475F08()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t sub_1D4475F34()
{
  sub_1D4475F08();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SNSoundActionsDetector()
{
  return objc_opt_self();
}

uint64_t destroy for DetectSoundActionsRequest(id *a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DetectSoundActionsRequest(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DetectSoundActionsRequest(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DetectSoundActionsRequest(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DetectSoundActionsRequest()
{
  return &type metadata for DetectSoundActionsRequest;
}

CMTimeValue sub_1D44760B4(void *a1, int64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t))
{
  return sub_1D44758B8(a1, a2, a3);
}

id sub_1D44760C8()
{
  return sub_1D4475EA8();
}

void sub_1D44760DC()
{
  sub_1D4475DAC();
}

id sub_1D44760F0()
{
  return sub_1D4475D60();
}

unint64_t sub_1D4476104()
{
  unint64_t result;

  result = qword_1EFE536E0;
  if (!qword_1EFE536E0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45453E0, &type metadata for SNSoundActionsDetector.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE536E0);
  }
  return result;
}

uint64_t sub_1D4476140()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1D4476164(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_1D4475E2C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1D447617C(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_classLabels);

  if (!v2)
    return 0;
  v3 = sub_1D451A92C();

  return v3;
}

uint64_t sub_1D44761E0()
{
  swift_release();
  return swift_deallocObject();
}

char *sub_1D4476204(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D4406300(a1, a2, *(void (**)(uint64_t *__return_ptr))(v2 + 16), *(char **)(v2 + 24));
}

uint64_t storeEnumTagSinglePayload for SNSoundActionsDetector.DomainError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D447625C + 4 * byte_1D4545280[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D447627C + 4 * byte_1D4545285[v4]))();
}

_BYTE *sub_1D447625C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D447627C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4476284(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D447628C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4476294(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D447629C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SNSoundActionsDetector.DomainError()
{
  return &type metadata for SNSoundActionsDetector.DomainError;
}

unint64_t sub_1D44762BC()
{
  unint64_t result;

  result = qword_1EFE53700;
  if (!qword_1EFE53700)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45453B8, &type metadata for SNSoundActionsDetector.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE53700);
  }
  return result;
}

uint64_t sub_1D44762F8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4476348()
{
  return sub_1D451A6C8();
}

uint64_t sub_1D4476364()
{
  uint64_t v0;

  return v0;
}

void sub_1D4476378()
{
  void *v0;

}

id sub_1D4476380()
{
  void *v0;

  return v0;
}

uint64_t sub_1D4476388()
{
  return swift_bridgeObjectRelease();
}

uint64_t AnyAsyncIterator.next()()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))(*(int *)*v0 + *v0);
  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_1D42B8F00(v1);
  v3 = sub_1D42B8EF0(v2);
  return v5(v3);
}

void AsyncSequence.toAnyAsyncSequence()(uint64_t a1, uint64_t a2)
{
  sub_1D4476708(a1, a2, MEMORY[0x1E0DF09E0], MEMORY[0x1E0DF0588], (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1D44767B4);
}

_QWORD *sub_1D4476404()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *result;

  sub_1D447732C();
  v4 = swift_allocBox();
  sub_1D4477344(v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32));
  result = (_QWORD *)sub_1D430C350();
  result[2] = v2;
  result[3] = v1;
  result[4] = v0;
  result[5] = v4;
  *v3 = &unk_1EFE53868;
  v3[1] = result;
  return result;
}

uint64_t sub_1D447646C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  v5[8] = swift_projectBox();
  return swift_task_switch();
}

uint64_t sub_1D44764B4()
{
  uint64_t v0;
  _QWORD *v1;

  swift_beginAccess();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_1D447651C;
  return sub_1D451AAA0();
}

uint64_t sub_1D447651C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return sub_1D42E3818();
  swift_endAccess();
  return sub_1D42E39E4(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1D4476584()
{
  uint64_t v0;

  swift_endAccess();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D44765B0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1D42F9A58;
  return AnyAsyncIterator.next()();
}

uint64_t sub_1D4476600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 24) = a4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v5;
  *v5 = v4;
  v5[1] = sub_1D4476698;
  return sub_1D451AAAC();
}

uint64_t sub_1D4476698()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    **(_QWORD **)(v2 + 24) = *(_QWORD *)(v2 + 16);
  return sub_1D42E39E4(*(uint64_t (**)(void))(v3 + 8));
}

void AsyncIteratorProtocol.toAnyAsyncIterator()(uint64_t a1, uint64_t a2)
{
  sub_1D4476708(a1, a2, MEMORY[0x1E0DF06B0], MEMORY[0x1E0DF0580], (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1D4476404);
}

void sub_1D4476708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;

  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v10, v5, a1);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  a5(v10, AssociatedTypeWitness, a1, a2);
  sub_1D42CB0F8();
}

void sub_1D44767B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;

  sub_1D447732C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v2;
  v7[3] = v1;
  v7[4] = v0;
  sub_1D4477344((uint64_t)v7 + v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
  *v3 = sub_1D4477300;
  v3[1] = v7;
  sub_1D42CB0F8();
}

double sub_1D4476824@<D0>(uint64_t a1@<X0>, uint64_t a2@<X2>, _OWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  double result;
  uint64_t v16;
  _OWORD *v17;
  __int128 v18;

  v17 = a3;
  v5 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v16 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, a2);
  sub_1D451AB6C();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, AssociatedTypeWitness);
  swift_getAssociatedConformanceWitness();
  sub_1D4476404();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, AssociatedTypeWitness);
  result = *(double *)&v18;
  *v17 = v18;
  return result;
}

uint64_t AnyAsyncSequence.makeAsyncIterator()()
{
  uint64_t (**v0)(void);

  return (*v0)();
}

void sub_1D44769BC()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D44769CC()
{
  AnyAsyncSequence.makeAsyncIterator()();
  return swift_release();
}

uint64_t sub_1D44769E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v7 = *v3;
  v6 = v3[1];
  sub_1D42B7714();
  v9 = v8;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = *(_QWORD *)(a2 + 16);
  v10[3] = a3;
  v10[4] = v7;
  v10[5] = v6;
  v11 = sub_1D451B160();
  v14 = a3;
  swift_retain();
  swift_retain();
  v12 = MEMORY[0x1D825E41C](&unk_1D4546BD0, v11, &v14);
  sub_1D42F94F8((void (*)(_QWORD *))sub_1D4477198, v9, (uint64_t)&unk_1EFE53858, (uint64_t)v10, v11, v12);
  swift_release_n();
  return swift_release();
}

uint64_t sub_1D4476ACC(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1D42F9A58;
  return v6(a1);
}

uint64_t sub_1D4476B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D44769E4(a1, a2, *(_QWORD *)(a3 - 8));
}

uint64_t sub_1D4476B48(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  v5 = *a3;
  result = MEMORY[0x1D825E41C](&unk_1D45454B0, a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D4476B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch();
}

uint64_t sub_1D4476BA4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v1 = v0[5];
  v2 = v0[6];
  v3 = (_QWORD *)v0[4];
  v4 = v3[2];
  v5 = v3[3];
  v6 = v3[4];
  v7 = v3[5];
  type metadata accessor for XPCProxyDecoder.SingleValueContainer();
  v8 = (_QWORD *)sub_1D430C350();
  v0[7] = v8;
  v8[2] = v4;
  v8[3] = v5;
  v8[4] = v6;
  v8[5] = v7;
  sub_1D42B7FE4(v4);
  v9 = sub_1D4476DA8((uint64_t)v8, v1, v2);
  v11 = v10;
  v0[8] = v10;
  v12 = (_QWORD *)swift_task_alloc();
  v0[9] = v12;
  v13 = sub_1D451B160();
  v0[2] = v2;
  MEMORY[0x1D825E41C](&unk_1D4546BA8, v13, v0 + 2);
  *v12 = v0;
  v12[1] = sub_1D4476C98;
  return sub_1D42F97D0((uint64_t)v9, v11, v13);
}

uint64_t sub_1D4476C98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 80) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    swift_release();
    *(_QWORD *)(v6 + 88) = a2;
    *(_QWORD *)(v6 + 96) = a1;
  }
  return sub_1D42E3818();
}

uint64_t sub_1D4476D14()
{
  uint64_t v0;
  int8x16_t *v1;
  int8x16_t v3;

  v1 = *(int8x16_t **)(v0 + 24);
  v3 = *(int8x16_t *)(v0 + 88);
  swift_release();
  sub_1D42B8F48();
  *v1 = vextq_s8(v3, v3, 8uLL);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D4476D6C()
{
  uint64_t v0;

  swift_release();
  sub_1D42B8F48();
  swift_release();
  return sub_1D42E39E4(*(uint64_t (**)(void))(v0 + 8));
}

void *sub_1D4476DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;

  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = a1;
  swift_retain();
  return &unk_1EFE53848;
}

uint64_t sub_1D4476E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = (_QWORD *)swift_task_alloc();
  v3[7] = v5;
  v6 = sub_1D451B160();
  v8 = type metadata accessor for XPCFunction(0, (uint64_t)&type metadata for XPCVoid, v6, v7);
  v3[6] = a3;
  v9 = MEMORY[0x1D825E41C](&unk_1D4546BA8, v6, v3 + 6);
  v3[4] = &off_1E97ACAE0;
  v3[5] = v9;
  v10 = MEMORY[0x1D825E41C](&unk_1D452875C, v8, v3 + 4);
  *v5 = v3;
  v5[1] = sub_1D4476EE4;
  return sub_1D4368744((uint64_t)(v3 + 2), v8, v10);
}

uint64_t sub_1D4476EE4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D4476F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  _QWORD *v10;

  swift_retain();
  v9 = swift_task_alloc();
  v10 = (_QWORD *)sub_1D42B8F00(v9);
  *v10 = v4;
  v10[1] = sub_1D42F9A58;
  return sub_1D4476B88(a1, a2, a3, a4);
}

uint64_t sub_1D4476FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v8 = *(_QWORD *)(a4 - 8);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  v10 = *(_QWORD *)(a3 + 16);
  *v9 = v4;
  v9[1] = sub_1D42F9A58;
  return sub_1D4476F48(a1, a2, v10, v8);
}

uint64_t sub_1D4477038(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  v5 = *a3;
  result = MEMORY[0x1D825E41C](&unk_1D4545500, a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for AnyAsyncIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyAsyncIterator);
}

_QWORD *sub_1D4477090(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  sub_1D42B8F48();
  return a1;
}

uint64_t type metadata accessor for AnyAsyncSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyAsyncSequence);
}

uint64_t sub_1D44770D0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D44770F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1D4477154;
  return sub_1D4476E0C(v4, v2, v3);
}

uint64_t sub_1D4477154(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1D42F9A68();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(a1, a2);
}

void sub_1D4477198()
{
  sub_1D42B7B80();
}

uint64_t sub_1D44771AC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D44771D0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = *(int **)(v0 + 32);
  v2 = swift_task_alloc();
  v3 = (_QWORD *)sub_1D42B8F00(v2);
  v4 = sub_1D42B8EF0(v3);
  return sub_1D4476ACC(v4, v1);
}

uint64_t sub_1D447723C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v1 = v0[2];
  v2 = v0[3];
  v4 = v0[4];
  v3 = v0[5];
  v5 = swift_task_alloc();
  v6 = (_QWORD *)sub_1D42B8F00(v5);
  v7 = sub_1D42B8EF0(v6);
  return sub_1D447646C(v7, v3, v1, v2, v4);
}

uint64_t sub_1D44772A8()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80)));
  return swift_deallocObject();
}

double sub_1D4477300@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_1D4476824(v1 + ((v3 + 40) & ~v3), v2, a1);
}

uint64_t sub_1D4477344@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

void sub_1D4477350()
{
  type metadata accessor for AudioStreamAnalyzerEnvironmentImpl();
}

uint64_t sub_1D44773DC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v6, v4);
    }
  }
  else
  {
    if (((((((((((((((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 8) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1D4477488 + 4 * byte_1D45455B0[v11]))();
  }
}

void sub_1D4477508(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
  }
  else
  {
    if (((((((((((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
             + 15) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((((((((((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
             + 15) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((((((((((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1D4477624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0x7FFFFFFF)
    {
      v8 = (_QWORD *)((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      if ((a2 & 0x80000000) != 0)
      {
        v9 = a2 ^ 0x80000000;
        v8[1] = 0;
        v8[2] = 0;
      }
      else
      {
        v9 = (a2 - 1);
      }
      *v8 = v9;
    }
    else
    {
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v5, a2, a3, a4);
    }
  }
  return result;
}

void type metadata accessor for AudioStreamAnalyzerEnvironment()
{
  JUMPOUT(0x1D825E3A4);
}

void type metadata accessor for AudioStreamAnalyzerEnvironmentImpl()
{
  JUMPOUT(0x1D825E3A4);
}

uint64_t sub_1D44776CC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1D4477758(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if ((*(_DWORD *)(v5 + 80) & 0x1000F8) != 0
    || (v6 = *(_QWORD *)(v5 + 64),
        ((((((((((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8 > 0x18))
  {
    *a1 = *a2;
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
    v7 = (_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v8 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v7 = *v8;
    v7[1] = v8[1];
    v7[2] = v8[2];
    *(_QWORD *)(((unint64_t)v7 + 31) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + 31) & 0xFFFFFFFFFFFFF8);
    sub_1D44782A0();
    *v10 = *v9;
    sub_1D44782A0();
    *v12 = *v11;
    sub_1D44782A0();
    *v14 = *v13;
    sub_1D44782A0();
    *v16 = *v15;
    sub_1D44782A0();
    *v18 = *v17;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  sub_1D42CB0F8();
}

uint64_t sub_1D44778D0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  swift_release();
  swift_release();
  sub_1D4478274();
  sub_1D4478274();
  sub_1D4478274();
  sub_1D4478274();
  return swift_release();
}

void sub_1D4477938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;

  sub_1D4478280();
  (*(void (**)(void))(v2 + 16))();
  v3 = *(_QWORD *)(v2 + 64) + 7;
  v4 = (_QWORD *)((v3 + v0) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_QWORD *)((v3 + v1) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v4[1] = v5[1];
  v4[2] = v5[2];
  *(_QWORD *)(((unint64_t)v4 + 31) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v5 + 31) & 0xFFFFFFFFFFFFFFF8);
  sub_1D4478294();
  *v7 = *v6;
  sub_1D4478294();
  *v9 = *v8;
  sub_1D4478294();
  *v11 = *v10;
  sub_1D4478294();
  *v13 = *v12;
  sub_1D4478294();
  *v15 = *v14;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1D42CB0F8();
}

void sub_1D4477A20()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1D4478280();
  (*(void (**)(void))(v0 + 24))();
  sub_1D44782AC();
  v2 = v1 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v0 = *(_QWORD *)(v1 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  sub_1D42B8F48();
  *(_QWORD *)(v0 + 8) = *(_QWORD *)(v2 + 8);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v2 + 16);
  v3 = (_QWORD *)((v0 + 31) & 0xFFFFFFFFFFFFFFF8);
  v4 = (_QWORD *)((v2 + 31) & 0xFFFFFFFFFFFFF8);
  *v3 = *v4;
  swift_retain();
  sub_1D42B8F48();
  sub_1D4478244();
  sub_1D42B8F48();
  sub_1D4478244();
  sub_1D42B8F48();
  sub_1D4478244();
  sub_1D42B8F48();
  sub_1D4478244();
  sub_1D42B8F48();
  *(_QWORD *)(((unint64_t)v3 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  sub_1D42B8F48();
  sub_1D42CB15C();
}

void sub_1D4477AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v8 + 16);
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *(_QWORD *)(v7 + 16) = v9;
  v10 = (_QWORD *)((v7 + 31) & 0xFFFFFFFFFFFFF8);
  v11 = (_QWORD *)((v8 + 31) & 0xFFFFFFFFFFFFF8);
  *v10 = *v11;
  v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  v14 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFF8);
  v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFF8);
  *v14 = *v15;
  v16 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8);
  *v16 = *v17;
  *(_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFF8);
  sub_1D4478294();
  *v19 = *v18;
  sub_1D42CB15C();
}

void sub_1D4477B90()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1D4478280();
  (*(void (**)(void))(v0 + 40))();
  sub_1D44782AC();
  v2 = v1 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v0 = *(_QWORD *)(v1 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  *(_QWORD *)(v0 + 8) = *(_QWORD *)(v2 + 8);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v2 + 16);
  v3 = (_QWORD *)((v0 + 31) & 0xFFFFFFFFFFFFFFF8);
  v4 = (_QWORD *)((v2 + 31) & 0xFFFFFFFFFFFFF8);
  *v3 = *v4;
  swift_release();
  sub_1D447825C();
  sub_1D447825C();
  sub_1D447825C();
  sub_1D447825C();
  *(_QWORD *)(((unint64_t)v3 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFF8);
  swift_release();
  sub_1D42CB15C();
}

uint64_t sub_1D4477C28(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v6, v4);
    }
  }
  else
  {
    if (((((((((((((((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 8) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1D4477CD4 + 4 * byte_1D45455BF[v11]))();
  }
}

void sub_1D4477D54(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
  }
  else
  {
    if (((((((((((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
             + 15) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((((((((((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
             + 15) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((((((((((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1D4477E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0x7FFFFFFF)
    {
      v8 = (_QWORD *)((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      if ((a2 & 0x80000000) != 0)
      {
        v9 = a2 ^ 0x80000000;
        v8[1] = 0;
        v8[2] = 0;
      }
      else
      {
        v9 = (a2 - 1);
      }
      *v8 = v9;
    }
    else
    {
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v5, a2, a3, a4);
    }
  }
  return result;
}

uint64_t sub_1D4477F00()
{
  return swift_retain();
}

uint64_t sub_1D4477F34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = sub_1D4477F00();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
    a1[2] = v5;
  }
  return result;
}

void sub_1D4477F64()
{
  type metadata accessor for AudioStreamAnalyzerEnvironmentImpl();
}

uint64_t sub_1D4477F8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

void sub_1D4477FC0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(a1 + 8);
  sub_1D44AA2D4(*(void **)a1);
  if (!v2)
  {
    *(_QWORD *)a2 = v5;
    *(_QWORD *)(a2 + 8) = v6;
    *(_QWORD *)(a2 + 16) = v7;
    *(_BYTE *)(a2 + 24) = v8 & 1;
    *(_QWORD *)(a2 + 32) = v4;
  }
}

unint64_t sub_1D4478000@<X0>(unint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)result;
  v3 = *(_QWORD *)(result + 8);
  v5 = *(_QWORD *)(result + 16);
  v6 = *(_QWORD *)(result + 32);
  if (*(_BYTE *)(result + 24) != 1)
  {
    result = swift_bridgeObjectRetain();
    goto LABEL_5;
  }
  if ((unsigned __int128)(v3 * (__int128)v5) >> 64 == (v3 * v5) >> 63)
  {
    j__swift_bridgeObjectRetain(*(_QWORD *)result, v3, v5, 1);
    result = sub_1D44AB1B0(v3 * v5, v4, v3, v5);
    v4 = result;
LABEL_5:
    *a2 = v4;
    a2[1] = v3;
    a2[2] = v5;
    a2[3] = v6;
    return result;
  }
  __break(1u);
  return result;
}

id sub_1D44780B0@<X0>(id *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  id v6;
  id result;

  v5 = *a2;
  v6 = *a1;
  result = objc_msgSend(v6, sel_frameLength);
  if (__OFADD__(v5, result))
  {
    __break(1u);
  }
  else
  {
    *a2 = v5 + result;
    *a3 = v6;
    a3[1] = v5;
  }
  return result;
}

_QWORD *sub_1D4478108@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v3 = result[2];
  v4 = *a2 + v3;
  if (__OFADD__(*a2, v3))
  {
    __break(1u);
  }
  else
  {
    v7 = result;
    v5 = *result;
    v6 = v7[1];
    *a2 = v4;
    *a3 = v5;
    a3[1] = v6;
    a3[2] = v3;
    a3[3] = v4;
    return (_QWORD *)swift_bridgeObjectRetain();
  }
  return result;
}

_UNKNOWN **sub_1D4478130()
{
  return &off_1E97A9AB0;
}

uint64_t sub_1D447813C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1D825E41C](&unk_1D4545768);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D4478168(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1D825E41C](&unk_1D45457A0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D4478194(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1D825E41C](&unk_1D45457D8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D44781C0(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1D825E41C](&unk_1D4545810);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D44781EC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1D825E41C](&unk_1D4545848);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D4478218(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1D825E41C](&unk_1D4545864);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D4478244()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(v1 & 0xFFFFFFFFFFFFF8);
  return swift_retain();
}

uint64_t sub_1D447825C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(v0 & 0xFFFFFFFFFFFFF8);
  return swift_release();
}

uint64_t sub_1D4478274()
{
  return swift_release();
}

uint64_t sub_1D44782C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  return sub_1D4478C74(a1, a2, a3, a4, a5, a6, a8, a5, a7);
}

uint64_t sub_1D447831C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  os_unfair_lock_s *v7;
  uint64_t result;
  _BYTE v9[48];

  v7 = *(os_unfair_lock_s **)(*(_QWORD *)(a2 + 24) + 16);
  swift_retain();
  os_unfair_lock_lock(v7);
  sub_1D44785E8(a2, a1, (uint64_t)v9);
  os_unfair_lock_unlock(v7);
  result = swift_release();
  if (!v3)
    return sub_1D4377088((uint64_t)v9, a3, (uint64_t *)&unk_1EFE539F0);
  return result;
}

void sub_1D44783B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D4478F0C();
  swift_getAssociatedTypeWitness();
  sub_1D451B160();
  v0 = sub_1D4478F64();
  sub_1D4478F34(v0, (void (*)(uint64_t))sub_1D4478EF0, v1, v2, v3, (uint64_t)&off_1E97ACF08);
  sub_1D4478F70();
  sub_1D430C580();
}

void sub_1D4478428()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D4478F0C();
  swift_getAssociatedTypeWitness();
  v0 = sub_1D4478F64();
  sub_1D4478F34(v0, (void (*)(uint64_t))sub_1D4478C58, v1, v2, v3, (uint64_t)&off_1E97ACF08);
  sub_1D4478F70();
  sub_1D430C580();
}

void sub_1D447848C()
{
  JUMPOUT(0x1D825BF2CLL);
}

uint64_t sub_1D44784A4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t *sub_1D4478520()
{
  uint64_t *v0;

  sub_1D4478F50(*v0);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1D4478548()
{
  sub_1D4478520();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for AsyncCache(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncCache);
}

uint64_t sub_1D447856C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

double sub_1D44785E8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  IONotificationPort *v11;
  double result;
  io_connect_t connect;
  void *v14;
  _QWORD v15[5];
  io_object_t notifier[12];
  _QWORD v17[6];
  _BYTE v18[48];
  uint64_t v19;
  io_object_t v20;
  IONotificationPort *v21;
  void *v22;
  io_connect_t v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  swift_beginAccess();
  sub_1D4364980(a2, *(_QWORD *)(a1 + 16), (uint64_t)v15);
  v6 = (void *)v15[0];
  v7 = v15[1];
  v8 = v15[2];
  v9 = v15[3];
  v10 = (void *)v15[4];
  swift_endAccess();
  sub_1D4377088((uint64_t)v15, (uint64_t)v17, (uint64_t *)&unk_1EFE539F0);
  if (v17[0] != 1)
  {
    sub_1D4377088((uint64_t)v17, (uint64_t)v18, &qword_1EFE4A570);
    sub_1D4377088((uint64_t)v18, (uint64_t)&v19, &qword_1EFE4A570);
    if (v19)
    {
      v11 = v21;
      v14 = v22;
      connect = v23;
      notifier[0] = v20;
      sub_1D4367748(v6, v7, v8, v9, v10);
      IODeregisterForSystemPower(notifier);
      IONotificationPortDestroy(v11);
      IOServiceClose(connect);

      swift_release();
    }
    sub_1D4312AFC((uint64_t)v15);
  }
  swift_beginAccess();
  sub_1D42E7D70(a2, (uint64_t)notifier);
  swift_endAccess();
  sub_1D4312AFC((uint64_t)notifier);
  *(_QWORD *)a3 = 1;
  result = 0.0;
  *(_OWORD *)(a3 + 8) = 0u;
  *(_OWORD *)(a3 + 24) = 0u;
  *(_DWORD *)(a3 + 40) = 0;
  return result;
}

uint64_t sub_1D44787B0@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *);
  uint64_t v27;
  uint64_t v28;

  v26 = a1;
  v25 = a2;
  v28 = a5;
  v7 = *(_QWORD *)(*(_QWORD *)a3 + 80);
  v6 = *(_QWORD *)(*(_QWORD *)a3 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v21 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v22 = AssociatedTypeWitness;
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v23 = (char *)&v21 - v9;
  swift_getAssociatedTypeWitness();
  v10 = sub_1D451B160();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v21 - v15;
  swift_beginAccess();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v24 = a4;
  v17(a4, v7, v6);
  swift_endAccess();
  v18 = v27;
  v26(v16);
  if (v18)
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  v20 = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, v24, v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v28, v10);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t, uint64_t))(v6 + 32))(v14, v20, v7, v6);
  return swift_endAccess();
}

uint64_t sub_1D44789BC@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *);
  uint64_t v34;

  v32 = a2;
  v33 = a1;
  v8 = *(_QWORD *)(*(_QWORD *)a3 + 80);
  v7 = *(_QWORD *)(*(_QWORD *)a3 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v26 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v27 = AssociatedTypeWitness;
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v30 = (char *)&v23 - v10;
  v25 = swift_getAssociatedTypeWitness();
  v11 = sub_1D451B160();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v24 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v23 - v15;
  swift_beginAccess();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v28 = a4;
  v31 = v8;
  v17(a4, v8, v7);
  swift_endAccess();
  v29 = a5;
  v18 = v34;
  v33(v16);
  if (v18)
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v16, v11);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
  v20 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v30, v28, v27);
  v22 = (uint64_t)v24;
  v21 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v24, v29, v25);
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v22, 0, 1, v21);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v7 + 32))(v22, v20, v31, v7);
  return swift_endAccess();
}

uint64_t *sub_1D4478BF8()
{
  uint64_t *v0;

  sub_1D4478F50(*v0);
  swift_release();
  return v0;
}

uint64_t sub_1D4478C28()
{
  sub_1D4478BF8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SyncCache(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SyncCache);
}

uint64_t sub_1D4478C58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D44789BC(*(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

uint64_t sub_1D4478C74@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v20 = a6;
  v21 = a3;
  v22 = a4;
  v23 = a7;
  v11 = *a2;
  v12 = *(_QWORD *)(a8 - 8);
  v13 = MEMORY[0x1E0C80A78](a1);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16(v13);
  v24 = a5;
  v25 = v20;
  v17 = *(_QWORD *)(v11 + 80);
  v18 = *(_QWORD *)(v11 + 88);
  v26 = a8;
  v27 = v17;
  v28 = a9;
  v29 = v18;
  v30 = v21;
  v31 = v22;
  v32 = a1;
  sub_1D4478428();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, a8);
}

uint64_t sub_1D4478D68@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v18)(char *, char *, uint64_t);
  _QWORD v19[2];
  uint64_t (*v20)(_QWORD);

  v19[0] = a4;
  v19[1] = a3;
  v20 = a2;
  v9 = sub_1D451B160();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v19 - v12;
  v14 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](v11);
  v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v13, 1, a5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    return v20(v19[0]);
  }
  else
  {
    v18 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v18(v16, v13, a5);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v18)(a6, v16, a5);
  }
}

uint64_t sub_1D4478EA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1D4478D68(a1, *(uint64_t (**)(_QWORD))(v2 + 64), *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1D4478ED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 16) - 8) + 16))(a2, a1);
}

uint64_t sub_1D4478EF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D44787B0(*(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

uint64_t sub_1D4478F0C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 40) = *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
  return type metadata accessor for SafeLock();
}

uint64_t sub_1D4478F34(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  return sub_1D4472680(a2, v6, v7, a6, v8);
}

uint64_t sub_1D4478F50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 80) - 8) + 8))(v2 + v1);
}

uint64_t sub_1D4478F64()
{
  return swift_retain();
}

uint64_t sub_1D4478F70()
{
  return swift_release();
}

id sub_1D4478F7C(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char *v9;
  objc_super v11;

  v3 = (char *)sub_1D42CB9E4();
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 64);
  v8 = *(_BYTE *)(a1 + 72);
  v9 = &v3[OBJC_IVAR___SNDetectionResult_impl];
  *(_QWORD *)v9 = *(_QWORD *)a1;
  *((_QWORD *)v9 + 1) = *(_QWORD *)(a1 + 8);
  *((_OWORD *)v9 + 1) = *(_OWORD *)(a1 + 16);
  *((_QWORD *)v9 + 4) = *(_QWORD *)(a1 + 32);
  *((_QWORD *)v9 + 5) = v4;
  *((_QWORD *)v9 + 6) = v5;
  *((_QWORD *)v9 + 7) = v6;
  *((_QWORD *)v9 + 8) = v7;
  v9[72] = v8;
  *((_OWORD *)v9 + 5) = *(_OWORD *)(a1 + 80);
  v11.receiver = v3;
  v11.super_class = v1;
  return objc_msgSendSuper2(&v11, sel_init);
}

void sub_1D447900C()
{
  void *v0;
  uint64_t v1;

  sub_1D42CB9E4();
  sub_1D4334124();
  v0 = (void *)sub_1D451A6C8();
  v1 = sub_1D42BE8B4();
  sub_1D447ACE4(v1, sel_initWithIdentifier_detectedValue_);

  sub_1D42CB15C();
}

void SNDetectionResult.confidence.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 48) = a1;
}

uint64_t SNDetectionResult.detected.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 72) = result;
  return result;
}

double SNDetectionResult.confidence.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___SNDetectionResult_impl + 48);
}

uint64_t SNDetectionResult.detectorIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR___SNDetectionResult_impl;
  *(_QWORD *)(v3 + 80) = a1;
  *(_QWORD *)(v3 + 88) = a2;
  return sub_1D447ACCC();
}

double SNDetectionResult.timeRange.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = v1 + OBJC_IVAR___SNDetectionResult_impl;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 40);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SNDetectionResult_impl);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(v2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 + 16);
  result = *(double *)(v2 + 32);
  *(double *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v3;
  return result;
}

double SNDetectionResult.timeRange.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = v1 + OBJC_IVAR___SNDetectionResult_impl;
  *(_QWORD *)v3 = *(_QWORD *)a1;
  *(_QWORD *)(v3 + 8) = *(_QWORD *)(a1 + 8);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a1 + 16);
  result = *(double *)(a1 + 32);
  *(double *)(v3 + 32) = result;
  *(_QWORD *)(v3 + 40) = v2;
  return result;
}

uint64_t sub_1D4479120()
{
  sub_1D42BE9A8();
  sub_1D451B964();
  return sub_1D451B994();
}

double (*SNDetectionResult.timeRange.modify(_QWORD *a1))(void **a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  SNDetectionResult.timeRange.getter((uint64_t)v3);
  return sub_1D4479254;
}

double sub_1D4479254(void **a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  double result;

  v1 = *a1;
  v2 = v1[5];
  v3 = v1[6] + OBJC_IVAR___SNDetectionResult_impl;
  v4 = v1[1];
  v5 = v1[4];
  v6 = *((_OWORD *)v1 + 1);
  *(_QWORD *)v3 = *v1;
  *(_QWORD *)(v3 + 8) = v4;
  *(_OWORD *)(v3 + 16) = v6;
  *(_QWORD *)(v3 + 32) = v5;
  *(_QWORD *)(v3 + 40) = v2;
  free(v1);
  return result;
}

double (*SNDetectionResult.confidence.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR___SNDetectionResult_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(_QWORD *)(v1 + v2 + 48);
  return sub_1D4315264;
}

uint64_t SNDetectionResult.detected.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___SNDetectionResult_impl + 72);
}

uint64_t (*SNDetectionResult.detected.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR___SNDetectionResult_impl;
  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(v1 + v2 + 72);
  return sub_1D447937C;
}

uint64_t sub_1D447937C(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)result + *(_QWORD *)(result + 8) + 72) = *(_BYTE *)(result + 16);
  return result;
}

void SNDetectionResult.identifier.getter()
{
  swift_bridgeObjectRetain();
  sub_1D42B6E24();
}

uint64_t SNDetectionResult.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR___SNDetectionResult_impl;
  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = a2;
  return sub_1D447ACCC();
}

void SNDetectionResult.identifier.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 64);
  *a1 = *(_QWORD *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 56);
  a1[1] = v3;
  swift_bridgeObjectRetain();
  sub_1D42B6E24();
}

void sub_1D4479438(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    sub_1D42CB7B8();
    sub_1D447ACF4();
    sub_1D42CB514();
  }
  else
  {
    sub_1D447ACF4();
    sub_1D42CB15C();
  }
}

id sub_1D4479480(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  void *v3;

  a3();
  v3 = (void *)sub_1D451A6C8();
  sub_1D42BE8B4();
  return v3;
}

void SNDetectionResult.detectorIdentifier.getter()
{
  swift_bridgeObjectRetain();
  sub_1D42B6E24();
}

void sub_1D4479508(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v6 = sub_1D451A6EC();
  v8 = v7;
  v9 = a1;
  a4(v6, v8);

}

void sub_1D4479568(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  v7 = *a1;
  v6 = a1[1];
  sub_1D42CB7F8();
  a5(v7, v6);
  sub_1D42CB15C();
}

void SNDetectionResult.detectorIdentifier.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  a1[2] = v1;
  SNDetectionResult.detectorIdentifier.getter();
  *a1 = v3;
  a1[1] = v4;
  sub_1D42B6E24();
}

void sub_1D44795CC(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    sub_1D42CB7B8();
    sub_1D447AD00();
    sub_1D42CB514();
  }
  else
  {
    sub_1D447AD00();
    sub_1D42CB15C();
  }
}

id sub_1D4479608()
{
  void *v0;
  void *v1;
  id v2;

  v1 = (void *)sub_1D451A6C8();
  v2 = objc_msgSend(v0, sel_initWithIdentifier_, v1);

  return v2;
}

void sub_1D4479670()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)sub_1D451A6C8();
  v1 = sub_1D42BE8B4();
  sub_1D447ACE4(v1, sel_initWithIdentifier_detectedValue_);

  sub_1D42CB15C();
}

void sub_1D44796D8(uint64_t a1, uint64_t a2, char a3)
{
  sub_1D42CB9E4();
  sub_1D4479714(a1, a2, a3);
  sub_1D42CB15C();
}

id sub_1D4479714(uint64_t a1, uint64_t a2, char a3)
{
  char *v3;
  objc_class *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  objc_super v12;

  v7 = (objc_class *)sub_1D42B7104();
  v8 = MEMORY[0x1E0CA2E40];
  v9 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 40);
  v10 = &v3[OBJC_IVAR___SNDetectionResult_impl];
  *(_QWORD *)v10 = *MEMORY[0x1E0CA2E40];
  *((_QWORD *)v10 + 1) = *(_QWORD *)(v8 + 8);
  *((_OWORD *)v10 + 1) = *(_OWORD *)(v8 + 16);
  *((_QWORD *)v10 + 4) = *(_QWORD *)(v8 + 32);
  *((_QWORD *)v10 + 5) = v9;
  *((_QWORD *)v10 + 6) = 0;
  *((_QWORD *)v10 + 7) = a1;
  *((_QWORD *)v10 + 8) = a2;
  v10[72] = a3;
  *((_OWORD *)v10 + 5) = xmmword_1D4545B10;
  v12.receiver = v3;
  v12.super_class = v7;
  return objc_msgSendSuper2(&v12, sel_init);
}

id SNDetectionResult.copy(with:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  id result;
  _QWORD v11[9];
  char v12;
  uint64_t v13;
  uint64_t v14;

  v3 = sub_1D42B7104();
  sub_1D447ACD4(v1 + OBJC_IVAR___SNDetectionResult_impl);
  v5 = *(_QWORD *)(v4 + 64);
  sub_1D447AC78();
  v11[7] = v6;
  v11[8] = v5;
  v12 = v7;
  v13 = v9;
  v14 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_1D4478F7C((uint64_t)v11);
  a1[3] = v3;
  *a1 = result;
  return result;
}

uint64_t SNDetectionResult.hash.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D447ACD4(v0 + OBJC_IVAR___SNDetectionResult_impl);
  sub_1D42BE9A8();
  sub_1D42CB7F8();
  sub_1D42CB7B8();
  sub_1D42EA530();
  v1 = sub_1D451B994();
  swift_bridgeObjectRelease();
  sub_1D42BE8B4();
  return v1;
}

uint64_t SNDetectionResult.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  double v9;
  double v10;
  char v11;
  uint64_t v12;
  char v13;
  double v15[9];
  char v16;
  __int128 v17;
  double v18[2];
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  __int128 v26;
  _OWORD v27[2];
  __int128 v28;
  uint64_t v29;

  sub_1D42B7104();
  sub_1D42B28B4(a1, (uint64_t)&v28);
  if (v29)
  {
    sub_1D42B293C(&v28, v27);
    sub_1D42B294C((uint64_t)v27, (uint64_t)v18);
    if (swift_dynamicCast())
    {
      v3 = v15[0];
      v4 = *(_QWORD *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 40);
      v5 = *(_QWORD *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 48);
      v6 = *(_QWORD *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 56);
      v7 = *(_QWORD *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 64);
      v8 = *(_BYTE *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 72);
      v18[0] = *(double *)(v1 + OBJC_IVAR___SNDetectionResult_impl);
      v18[1] = *(double *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 8);
      v19 = *(_OWORD *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 16);
      v20 = *(_QWORD *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 32);
      v21 = v4;
      v22 = v5;
      v23 = v6;
      v24 = v7;
      v25 = v8;
      v26 = *(_OWORD *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 80);
      sub_1D447ACD4(*(_QWORD *)&v15[0] + OBJC_IVAR___SNDetectionResult_impl);
      sub_1D447AC78();
      v15[7] = v9;
      v15[8] = v10;
      v16 = v11;
      v17 = *(_OWORD *)(v12 + 80);
      v13 = sub_1D42EA65C(v18, v15);

    }
    else
    {
      v13 = 0;
    }
    sub_1D42B5400((uint64_t)v27);
  }
  else
  {
    v13 = 0;
  }
  return v13 & 1;
}

id SNDetectionResult.__allocating_init(coder:)(void *a1)
{
  sub_1D42CB9E4();
  return SNDetectionResult.init(coder:)(a1);
}

id SNDetectionResult.init(coder:)(void *a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  char *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  __int128 v28;
  uint64_t v29;
  objc_super v30;
  uint64_t v31;
  unint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1D42CB340((uint64_t)ObjectType, (unint64_t *)&qword_1EFE47310);
  v5 = v2;
  v6 = sub_1D451B0D0();
  if (!v6)
  {

LABEL_9:
    sub_1D4334124();
    swift_deallocPartialClassInstance();
    return 0;
  }
  v7 = (void *)v6;
  v8 = (void *)sub_1D447AC54();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v8);
  v10 = v9;

  v11 = (void *)sub_1D447ACA0();
  v12 = objc_msgSend(a1, sel_decodeBoolForKey_, v11);

  sub_1D42CB340(v13, &qword_1EFE4BE88);
  v14 = sub_1D451B0D0();
  if (!v14 || (v15 = (void *)v14, sub_1D447AD0C(), v15, (v16 = v32) == 0))
  {

    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v29 = v31;
  v17 = sub_1D451B0D0();
  if (v17)
  {
    v18 = (void *)v17;
    sub_1D447AD0C();

    v19 = v32;
    v20 = v31;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = 0;
    v19 = 0xE000000000000000;
  }
  objc_msgSend(v7, sel_CMTimeRangeValue);
  v22 = v31;
  v23 = v35;
  v24 = v32;
  v25 = v34;
  v28 = v33;

  v26 = &v5[OBJC_IVAR___SNDetectionResult_impl];
  *(_QWORD *)v26 = v22;
  *((_QWORD *)v26 + 1) = v24;
  *((_OWORD *)v26 + 1) = v28;
  *((_QWORD *)v26 + 4) = v25;
  *((_QWORD *)v26 + 5) = v23;
  *((_QWORD *)v26 + 6) = v10;
  *((_QWORD *)v26 + 7) = v29;
  *((_QWORD *)v26 + 8) = v16;
  v26[72] = v12;
  *((_QWORD *)v26 + 10) = v20;
  *((_QWORD *)v26 + 11) = v19;

  v30.receiver = v5;
  v30.super_class = ObjectType;
  v21 = objc_msgSendSuper2(&v30, sel_init);

  return v21;
}

Swift::Void __swiftcall SNDetectionResult.encode(with:)(NSCoder with)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  double v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  _QWORD v19[6];
  _QWORD v20[6];

  SNDetectionResult.timeRange.getter((uint64_t)v20);
  v3 = v20[0];
  v4 = v20[2];
  v5 = v20[3];
  v6 = v20[5];
  v7 = (void *)objc_opt_self();
  v19[0] = v3;
  v19[1] = v20[1];
  v19[2] = v4;
  v19[3] = v5;
  v19[4] = v20[4];
  v19[5] = v6;
  v8 = objc_msgSend(v7, sel_valueWithCMTimeRange_, v19);
  v9 = (void *)sub_1D451A6C8();
  sub_1D447ACB8();

  v10 = v1 + OBJC_IVAR___SNDetectionResult_impl;
  v11 = *(double *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 48);
  v12 = (void *)sub_1D447AC54();
  -[objc_class encodeDouble:forKey:](with.super.isa, sel_encodeDouble_forKey_, v12, v11);

  v13 = *(unsigned __int8 *)(v10 + 72);
  v14 = (void *)sub_1D447ACA0();
  -[objc_class encodeBool:forKey:](with.super.isa, sel_encodeBool_forKey_, v13, v14);

  swift_bridgeObjectRetain();
  v15 = (void *)sub_1D451A6C8();
  sub_1D42CB208();
  v16 = (void *)sub_1D451A6C8();
  sub_1D447ACB8();

  SNDetectionResult.detectorIdentifier.getter();
  v17 = (void *)sub_1D451A6C8();
  swift_bridgeObjectRelease();
  v18 = (void *)sub_1D451A6C8();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v17, v18);

}

uint64_t static SNDetectionResult.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t SNDetectionResult.description.getter()
{
  void *v0;
  objc_class *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  _QWORD v11[6];
  objc_super v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = (objc_class *)sub_1D42B7104();
  v15 = 0;
  v16 = 0xE000000000000000;
  sub_1D451B400();
  v13 = 0;
  v14 = 0xE000000000000000;
  v12.receiver = v0;
  v12.super_class = v1;
  v2 = objc_msgSendSuper2(&v12, sel_description);
  sub_1D451A6EC();
  sub_1D42B722C();
  sub_1D42B7190();
  sub_1D42CB208();
  sub_1D4334150();
  swift_bridgeObjectRetain();
  sub_1D42B7190();
  sub_1D42CB208();
  sub_1D4334150();
  sub_1D451A794();
  swift_bridgeObjectRelease();
  sub_1D451A794();
  sub_1D451ABD8();
  sub_1D451A794();
  SNDetectionResult.timeRange.getter((uint64_t)&v15);
  v3 = v15;
  v4 = v17;
  v5 = v18;
  v6 = v20;
  v7 = (void *)objc_opt_self();
  v11[0] = v3;
  v11[1] = v16;
  v11[2] = v4;
  v11[3] = v5;
  v11[4] = v19;
  v11[5] = v6;
  v8 = objc_msgSend(v7, sel_valueWithCMTimeRange_, v11);
  v9 = objc_msgSend(v8, sel_description);
  sub_1D451A6EC();
  sub_1D42B722C();
  sub_1D42B7190();

  sub_1D42CB208();
  return v13;
}

void sub_1D447A220()
{
  uint64_t v0;
  unint64_t v1;

  sub_1D42CB9E4();
  v0 = sub_1D4334124();
  sub_1D447A250(v0, v1);
  sub_1D42CB15C();
}

id sub_1D447A250(uint64_t a1, unint64_t a2)
{
  void *v2;
  objc_class *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  objc_super v32;

  v5 = (objc_class *)sub_1D42B7104();
  sub_1D42CB340((uint64_t)v5, (unint64_t *)&unk_1EFE4BEF0);
  v6 = v2;
  v7 = sub_1D451AF98();
  v14 = (void *)v7;
  if (v7)
  {
    v15 = v7 + OBJC_IVAR___SNDetectionResult_impl;
    v16 = *(_QWORD *)(v7 + OBJC_IVAR___SNDetectionResult_impl);
    v17 = *(_QWORD *)(v7 + OBJC_IVAR___SNDetectionResult_impl + 16);
    v18 = *(_QWORD *)(v7 + OBJC_IVAR___SNDetectionResult_impl + 48);
    v19 = *(_QWORD *)(v7 + OBJC_IVAR___SNDetectionResult_impl + 64);
    v30 = *(_QWORD *)(v7 + OBJC_IVAR___SNDetectionResult_impl + 56);
    v31 = *(_QWORD *)(v7 + OBJC_IVAR___SNDetectionResult_impl + 40);
    v29 = *(_BYTE *)(v7 + OBJC_IVAR___SNDetectionResult_impl + 72);
    v20 = *(_QWORD *)(v7 + OBJC_IVAR___SNDetectionResult_impl + 88);
    v27 = *(_QWORD *)(v7 + OBJC_IVAR___SNDetectionResult_impl + 24);
    v28 = *(_QWORD *)(v7 + OBJC_IVAR___SNDetectionResult_impl + 80);
    swift_bridgeObjectRetain();
    sub_1D42CB7F8();
    v21 = *(_QWORD *)(v15 + 8);
    v22 = *(_QWORD *)(v15 + 32);

    v23 = &v6[OBJC_IVAR___SNDetectionResult_impl];
    *(_QWORD *)v23 = v16;
    *((_QWORD *)v23 + 1) = v21;
    *((_QWORD *)v23 + 2) = v17;
    *((_QWORD *)v23 + 3) = v27;
    *((_QWORD *)v23 + 4) = v22;
    *((_QWORD *)v23 + 5) = v31;
    *((_QWORD *)v23 + 6) = v18;
    *((_QWORD *)v23 + 7) = v30;
    *((_QWORD *)v23 + 8) = v19;
    v23[72] = v29;
    *((_QWORD *)v23 + 10) = v28;
    *((_QWORD *)v23 + 11) = v20;
  }
  else
  {
    sub_1D447AB3C();
    v26 = (void *)swift_allocError();
    swift_willThrow();
    sub_1D44734B4(0xD000000000000042, 0x80000001D455A890);
    v8 = MEMORY[0x1E0CA2E40];
    v9 = *MEMORY[0x1E0CA2E40];
    v10 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 16);
    v11 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 24);
    v12 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 40);

    v13 = &v6[OBJC_IVAR___SNDetectionResult_impl];
    *(_QWORD *)v13 = v9;
    *((_QWORD *)v13 + 1) = *(_QWORD *)(v8 + 8);
    *((_QWORD *)v13 + 2) = v10;
    *((_QWORD *)v13 + 3) = v11;
    *((_QWORD *)v13 + 4) = *(_QWORD *)(v8 + 32);
    *((_QWORD *)v13 + 5) = v12;
    *((_QWORD *)v13 + 6) = 0;
    *((_QWORD *)v13 + 7) = 0;
    *((_QWORD *)v13 + 8) = 0xE000000000000000;
    v13[72] = 0;
    *((_QWORD *)v13 + 10) = 0;
    *((_QWORD *)v13 + 11) = 0;
  }

  v32.receiver = v6;
  v32.super_class = v5;
  v24 = objc_msgSendSuper2(&v32, sel_init);
  sub_1D42B5420(a1, a2);
  return v24;
}

uint64_t sub_1D447A4A8()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x1E0C80C00];
  v7[0] = 0;
  v1 = objc_msgSend((id)objc_opt_self(), sel_archivedDataWithRootObject_requiringSecureCoding_error_, v0, 1, v7);
  v2 = v7[0];
  if (v1)
  {
    v3 = sub_1D4519C54();

  }
  else
  {
    v4 = v2;
    v5 = (void *)sub_1D4519AA4();

    swift_willThrow();
    sub_1D44734B4(0xD00000000000003ELL, 0x80000001D455A8E0);

    return 0;
  }
  return v3;
}

void sub_1D447A690(uint64_t *a1@<X8>)
{
  uint64_t v1;
  const __CFAllocator *v3;
  CFDictionaryRef v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  const __CFDictionary *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  CMTimeRange range;
  CMTimeRange v22;

  SNDetectionResult.timeRange.getter((uint64_t)&v22);
  v3 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
  range = v22;
  v4 = CMTimeRangeCopyAsDictionary(&range, v3);
  if (!v4)
    v4 = (CFDictionaryRef)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D80]), sel_init);
  sub_1D42B28FC((uint64_t *)&unk_1EFE498B0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D452EC90;
  *(_QWORD *)(inited + 32) = 0x696669746E656469;
  *(_QWORD *)(inited + 40) = 0xEA00000000007265;
  v6 = v1 + OBJC_IVAR___SNDetectionResult_impl;
  v7 = *(_QWORD *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 64);
  v8 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = *(_QWORD *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 56);
  *(_QWORD *)(inited + 56) = v7;
  *(_QWORD *)(inited + 72) = v8;
  *(_QWORD *)(inited + 80) = 0x6E656469666E6F63;
  *(_QWORD *)(inited + 88) = 0xEA00000000006563;
  v9 = *(double *)(v6 + 48);
  v10 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  swift_bridgeObjectRetain();
  v11 = objc_msgSend(v10, sel_initWithDouble_, v9);
  sub_1D42CA5D0(0, (unint64_t *)&qword_1EFE404B0);
  v13 = v12;
  *(_QWORD *)(inited + 96) = v11;
  *(_QWORD *)(inited + 120) = v12;
  *(_QWORD *)(inited + 128) = 0x676E6152656D6974;
  *(_QWORD *)(inited + 136) = 0xE900000000000065;
  sub_1D42CA5D0(0, (unint64_t *)&qword_1EFE403E0);
  *(_QWORD *)(inited + 144) = v4;
  *(_QWORD *)(inited + 168) = v14;
  *(_QWORD *)(inited + 176) = 0x6465746365746564;
  *(_QWORD *)(inited + 184) = 0xE800000000000000;
  v15 = *(unsigned __int8 *)(v6 + 72);
  v16 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  v17 = v4;
  *(_QWORD *)(inited + 192) = objc_msgSend(v16, sel_initWithBool_, v15);
  *(_QWORD *)(inited + 216) = v13;
  *(_QWORD *)(inited + 224) = 0xD000000000000012;
  *(_QWORD *)(inited + 232) = 0x80000001D4551A80;
  SNDetectionResult.detectorIdentifier.getter();
  *(_QWORD *)(inited + 264) = v8;
  *(_QWORD *)(inited + 240) = v18;
  *(_QWORD *)(inited + 248) = v19;
  v20 = sub_1D451A5E4();
  a1[3] = sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);

  *a1 = v20;
}

id SNDetectionResult.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1D42B7104();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D447A9D4(uint64_t a1@<X8>)
{
  SNDetectionResult.timeRange.getter(a1);
  sub_1D42B6E24();
}

void sub_1D447A9F0(uint64_t a1)
{
  SNDetectionResult.timeRange.setter(a1);
  sub_1D42B6E24();
}

void sub_1D447AA0C()
{
  double *v0;

  sub_1D42CB12C();
  *v0 = SNDetectionResult.confidence.getter();
  sub_1D42B6E24();
}

void sub_1D447AA2C(double *a1)
{
  SNDetectionResult.confidence.setter(*a1);
  sub_1D42B6E24();
}

void sub_1D447AA4C()
{
  _BYTE *v0;

  sub_1D42CB12C();
  *v0 = SNDetectionResult.detected.getter() & 1;
  sub_1D42B6E24();
}

void sub_1D447AA70(unsigned __int8 *a1)
{
  SNDetectionResult.detected.setter(*a1);
  sub_1D42B6E24();
}

void sub_1D447AA90()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D42CB12C();
  SNDetectionResult.identifier.getter();
  *v0 = v1;
  v0[1] = v2;
  sub_1D42B6E24();
}

void sub_1D447AAB0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D4479568(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))SNDetectionResult.identifier.setter);
}

void sub_1D447AACC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D42CB12C();
  SNDetectionResult.detectorIdentifier.getter();
  *v0 = v1;
  v0[1] = v2;
  sub_1D42B6E24();
}

void sub_1D447AAEC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D4479568(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))SNDetectionResult.detectorIdentifier.setter);
}

uint64_t type metadata accessor for SNDetectionResult()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNDetectionResult()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SNDetectionResult.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

unint64_t sub_1D447AB3C()
{
  unint64_t result;

  result = qword_1EFE53A10;
  if (!qword_1EFE53A10)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4545AC4, &type metadata for SNDetectionResult.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE53A10);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SNDetectionResult.DomainError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D447ABB8 + 4 * byte_1D45459F5[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D447ABD8 + 4 * byte_1D45459FA[v4]))();
}

_BYTE *sub_1D447ABB8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D447ABD8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D447ABE0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D447ABE8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D447ABF0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D447ABF8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SNDetectionResult.DomainError()
{
  return &type metadata for SNDetectionResult.DomainError;
}

unint64_t sub_1D447AC18()
{
  unint64_t result;

  result = qword_1EFE53A18[0];
  if (!qword_1EFE53A18[0])
  {
    result = MEMORY[0x1D825E41C](&unk_1D4545A9C, &type metadata for SNDetectionResult.DomainError);
    atomic_store(result, qword_1EFE53A18);
  }
  return result;
}

uint64_t sub_1D447AC54()
{
  return sub_1D451A6C8();
}

uint64_t sub_1D447ACA0()
{
  return sub_1D451A6C8();
}

id sub_1D447ACB8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return objc_msgSend(v0, (SEL)(v3 + 328), v1, v2);
}

uint64_t sub_1D447ACCC()
{
  return swift_bridgeObjectRelease();
}

double sub_1D447ACD4@<D0>(uint64_t a1@<X8>)
{
  return *(double *)(a1 + 48);
}

id sub_1D447ACE4(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3, 0);
}

uint64_t sub_1D447ACF4()
{
  uint64_t v0;
  uint64_t v1;

  return SNDetectionResult.identifier.setter(v1, v0);
}

uint64_t sub_1D447AD00()
{
  uint64_t v0;
  uint64_t v1;

  return SNDetectionResult.detectorIdentifier.setter(v1, v0);
}

uint64_t sub_1D447AD0C()
{
  return sub_1D451A6E0();
}

uint64_t type metadata accessor for UnsafeOutputNode()
{
  return objc_opt_self();
}

uint64_t sub_1D447AD38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  result = type metadata accessor for Future.State(319, *(_QWORD *)(a1 + 80), a3, a4);
  if (v5 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t *sub_1D447ADB8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  swift_release();
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 96);
  v5 = type metadata accessor for Future.State(0, *(_QWORD *)(v1 + 80), v3, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);
  return v0;
}

uint64_t sub_1D447AE14()
{
  sub_1D447ADB8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Future(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Future);
}

uint64_t type metadata accessor for Future.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Future.State);
}

uint64_t sub_1D447AE50()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1D447AEC8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X13 }
    }
    if (v9 == 1)
    {
      (*(void (**)(uint64_t *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 1;
    }
    else
    {
      *a1 = *a2;
      *((_BYTE *)a1 + v5) = 0;
      swift_bridgeObjectRetain();
    }
  }
  return v3;
}

uint64_t sub_1D447AFE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 8)
    v3 = 8;
  v4 = *(unsigned __int8 *)(a1 + v3);
  if (v4 < 2)
  {
    if (v4 == 1)
      return (*(uint64_t (**)(void))(v2 + 8))();
    else
      return swift_bridgeObjectRelease();
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    return ((uint64_t (*)(void))((char *)&loc_1D447B028 + 4 * byte_1D4545BD5[v5]))();
  }
}

_QWORD *sub_1D447B080(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    (*(void (**)(_QWORD *))(v4 + 16))(a1);
    v8 = 1;
  }
  else
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
    v8 = 0;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

_QWORD *sub_1D447B158(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    else
      swift_bridgeObjectRelease();
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
      *((_BYTE *)a1 + v7) = 1;
    }
    else
    {
      *a1 = *a2;
      *((_BYTE *)a1 + v7) = 0;
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

_QWORD *sub_1D447B2E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    (*(void (**)(_QWORD *))(v4 + 32))(a1);
    v8 = 1;
  }
  else
  {
    v8 = 0;
    *a1 = *a2;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

_QWORD *sub_1D447B3BC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    else
      swift_bridgeObjectRelease();
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 1;
    }
    else
    {
      v12 = 0;
      *a1 = *a2;
    }
    *((_BYTE *)a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_1D447B548(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1D447B60C + 4 * byte_1D4545BF8[(v4 - 1)]))();
}

void sub_1D447B658(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    v8 = 0u;
  }
  else if (v6 <= 3)
  {
    v10 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v9 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }
      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t sub_1D447B7FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 8uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1D447B844 + 4 * byte_1D4545C06[v3]))();
}

void sub_1D447B88C(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 8uLL)
    v4 = 8;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_1D447B954(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D447B994 + 4 * byte_1D4545C0B[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D447B9B4 + 4 * byte_1D4545C10[v4]))();
}

_BYTE *sub_1D447B994(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D447B9B4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D447B9BC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D447B9C4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D447B9CC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D447B9D4(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t type metadata accessor for Future.DomainError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Future.DomainError);
}

void sub_1D447B9EC()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D447B9FC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_1D447BA6C(uint64_t a1)
{
  MEMORY[0x1E0C80A78](a1);
  type metadata accessor for SplitStreamResult.Inner();
}

uint64_t sub_1D447BAE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v2, v1);
  *(_QWORD *)(v5 - 112) = sub_1D447BB60(v3);
  MEMORY[0x1D825E41C](&unk_1D4545E3C, a1);
  sub_1D451A2CC();
  return swift_release();
}

uint64_t sub_1D447BB60(uint64_t a1)
{
  swift_allocObject();
  return sub_1D447BB98(a1);
}

uint64_t sub_1D447BB98(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 96) - 8) + 32))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 120), a1);
  return v1;
}

uint64_t sub_1D447BBCC()
{
  return sub_1D451A164();
}

uint64_t sub_1D447BBF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v18;
  id v19;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StreamResult(0, v3, v7, v8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (id *)((char *)&v18 - v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v18 - v10, a1, v9);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v19 = *v11;
      v14 = v19;
      v15 = v19;
      sub_1D451A158();

      v16 = sub_1D451A1AC();
    }
    else
    {
      v19 = 0;
      sub_1D451A158();
      return sub_1D451A1AC();
    }
  }
  else
  {
    (*(void (**)(char *, id *, uint64_t))(v4 + 32))(v6, v11, v3);
    v16 = sub_1D451A170();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v16;
}

uint64_t sub_1D447BD88(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  void *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  void *v27;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v25 = *(_QWORD *)(v2 - 8);
  v26 = a1;
  MEMORY[0x1E0C80A78](a1);
  v24 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v24 - v9;
  swift_getAssociatedConformanceWitness();
  v11 = sub_1D451A188();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v24 - v12;
  (*(void (**)(char *, char *))(v14 + 16))((char *)&v24 - v12, v26);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v13, 1, AssociatedTypeWitness) == 1)
  {
    v27 = 0;
    return sub_1D451A158();
  }
  else
  {
    v16 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v16(v10, v13, AssociatedTypeWitness);
    v17 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 120);
    v18 = v24;
    v19 = v25;
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v24, v17, v2);
    v20 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v26 = v10;
    v20(v8, v10, AssociatedTypeWitness);
    v21 = sub_1D451B7FC();
    if (v21)
    {
      v22 = (void *)v21;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, AssociatedTypeWitness);
    }
    else
    {
      v22 = (void *)swift_allocError();
      v16(v23, v8, AssociatedTypeWitness);
    }
    v27 = v22;
    sub_1D451A158();

    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v26, AssociatedTypeWitness);
  }
}

uint64_t sub_1D447C000()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 96) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120));
  return v0;
}

uint64_t sub_1D447C030()
{
  sub_1D447C000();
  return swift_deallocClassInstance();
}

void type metadata accessor for SplitStreamResult.Inner()
{
  JUMPOUT(0x1D825E3A4);
}

uint64_t sub_1D447C05C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

id *sub_1D447C0CC(id *__dst, id *a2, uint64_t a3)
{
  id *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char *v8;
  unsigned int v9;
  uint64_t v10;
  id v11;
  id v12;

  v3 = __dst;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = (char *)*a2;
    *v3 = *a2;
    v3 = (id *)&v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X14 }
    }
    if (v9 == 1)
    {
      v11 = *a2;
      v12 = *a2;
      *v3 = v11;
      *((_BYTE *)v3 + v5) = 1;
    }
    else
    {
      (*(void (**)(id *))(v4 + 16))(__dst);
      *((_BYTE *)v3 + v5) = 0;
    }
  }
  return v3;
}

void sub_1D447C204(id *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 8)
    v3 = 8;
  v4 = *((unsigned __int8 *)a1 + v3);
  if (v4 < 2)
  {
    if (v4 == 1)

    else
      (*(void (**)(void))(v2 + 8))();
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    ((void (*)(void))((char *)&loc_1D447C24C + 4 * byte_1D4545D45[v5]))();
  }
}

_BYTE *sub_1D447C2AC(_BYTE *__dst, id *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  id v8;
  id v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    v8 = *a2;
    v9 = *a2;
    *(_QWORD *)__dst = v8;
    __dst[v5] = 1;
  }
  else
  {
    (*(void (**)(_BYTE *))(v4 + 16))(__dst);
    __dst[v5] = 0;
  }
  return __dst;
}

id *sub_1D447C3A4(id *__dst, void **__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  void *v12;
  id v13;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)__dst + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)

    else
      (*(void (**)(id *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)__src + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      v12 = *__src;
      v13 = v12;
      *__dst = v12;
      *((_BYTE *)__dst + v7) = 1;
    }
    else
    {
      (*(void (**)(id *, void **, uint64_t))(v6 + 16))(__dst, __src, v5);
      *((_BYTE *)__dst + v7) = 0;
    }
  }
  return __dst;
}

_BYTE *sub_1D447C550(_BYTE *__dst, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    *(_QWORD *)__dst = *a2;
    __dst[v5] = 1;
  }
  else
  {
    (*(void (**)(_BYTE *))(v4 + 32))(__dst);
    __dst[v5] = 0;
  }
  return __dst;
}

id *sub_1D447C638(id *__dst, id *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)__dst + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)

    else
      (*(void (**)(id *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)__src + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      *__dst = *__src;
      *((_BYTE *)__dst + v7) = 1;
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *((_BYTE *)__dst + v7) = 0;
    }
  }
  return __dst;
}

uint64_t sub_1D447C7DC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 253) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 3)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 254);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1D447C8A0 + 4 * byte_1D4545D68[(v4 - 1)]))();
}

void sub_1D447C8EC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if (a3 < 0xFE)
  {
    v8 = 0u;
  }
  else if (v6 <= 3)
  {
    v10 = ((a3 + ~(-1 << v7) - 253) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v9 = a2 - 254;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }
      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t sub_1D447CA90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 8uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1D447CAD8 + 4 * byte_1D4545D76[v3]))();
}

uint64_t type metadata accessor for StreamResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StreamResult);
}

uint64_t sub_1D447CB2C()
{
  return sub_1D447BBCC();
}

uint64_t sub_1D447CB4C(uint64_t a1)
{
  return sub_1D447BBF8(a1);
}

uint64_t sub_1D447CB6C(char *a1)
{
  return sub_1D447BD88(a1);
}

void sub_1D447CB8C()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D447CB9C()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1D447CBBC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D447CC28(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1D447CCD8 + 4 * byte_1D4545D7B[(v8 - 1)]))();
}

void sub_1D447CD24(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0u;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t type metadata accessor for SplitStreamResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SplitStreamResult);
}

void sub_1D447CED8(uint64_t a1)
{
  sub_1D447BA6C(a1);
}

uint64_t sub_1D447CEEC(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  _QWORD *v25;
  uint64_t *v26;
  _QWORD *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t result;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;

  v33 = a2 + 64;
  v4 = -1 << *(_BYTE *)(a2 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a2 + 64);
  v32 = (unint64_t)(63 - v4) >> 6;
  swift_bridgeObjectRetain();
  v34 = a2;
  swift_bridgeObjectRetain();
  v35 = 0;
  if (!v6)
    goto LABEL_6;
LABEL_5:
  v7 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v8 = v7 | (v35 << 6);
  while (1)
  {
    v13 = (uint64_t *)(*(_QWORD *)(v34 + 48) + 16 * v8);
    v15 = *v13;
    v14 = v13[1];
    v16 = (uint64_t *)(*(_QWORD *)(v34 + 56) + 16 * v8);
    v17 = *v16;
    v18 = v16[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_isUniquelyReferenced_nonNull_native();
    v19 = sub_1D4366B34(v15, v14);
    if (__OFADD__(a1[2], (v20 & 1) == 0))
    {
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    v21 = v19;
    v22 = v20;
    sub_1D42B28FC(&qword_1EFE40370);
    if ((sub_1D451B52C() & 1) != 0)
    {
      v23 = sub_1D4366B34(v15, v14);
      if ((v22 & 1) != (v24 & 1))
        goto LABEL_35;
      v21 = v23;
    }
    if ((v22 & 1) != 0)
    {
      v25 = (_QWORD *)(a1[7] + 16 * v21);
      swift_bridgeObjectRelease();
      *v25 = v17;
      v25[1] = v18;
    }
    else
    {
      a1[(v21 >> 6) + 8] |= 1 << v21;
      v26 = (uint64_t *)(a1[6] + 16 * v21);
      *v26 = v15;
      v26[1] = v14;
      v27 = (_QWORD *)(a1[7] + 16 * v21);
      *v27 = v17;
      v27[1] = v18;
      v28 = a1[2];
      v29 = __OFADD__(v28, 1);
      v30 = v28 + 1;
      if (v29)
        goto LABEL_32;
      a1[2] = v30;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_5;
LABEL_6:
    v9 = v35 + 1;
    if (__OFADD__(v35, 1))
      goto LABEL_33;
    if (v9 >= v32)
      goto LABEL_30;
    v10 = *(_QWORD *)(v33 + 8 * v9);
    v11 = v35 + 1;
    if (!v10)
    {
      v11 = v35 + 2;
      if (v35 + 2 >= v32)
        goto LABEL_30;
      v10 = *(_QWORD *)(v33 + 8 * v11);
      if (!v10)
      {
        v11 = v35 + 3;
        if (v35 + 3 >= v32)
          goto LABEL_30;
        v10 = *(_QWORD *)(v33 + 8 * v11);
        if (!v10)
          break;
      }
    }
LABEL_19:
    v6 = (v10 - 1) & v10;
    v8 = __clz(__rbit64(v10)) + (v11 << 6);
    v35 = v11;
  }
  v12 = v35 + 4;
  if (v35 + 4 >= v32)
  {
LABEL_30:
    sub_1D4367684();
    return (uint64_t)a1;
  }
  v10 = *(_QWORD *)(v33 + 8 * v12);
  if (v10)
  {
    v11 = v35 + 4;
    goto LABEL_19;
  }
  while (1)
  {
    v11 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v11 >= v32)
      goto LABEL_30;
    v10 = *(_QWORD *)(v33 + 8 * v11);
    ++v12;
    if (v10)
      goto LABEL_19;
  }
LABEL_34:
  __break(1u);
LABEL_35:
  result = sub_1D451B8BC();
  __break(1u);
  return result;
}

uint64_t sub_1D447D1CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  id v23[2];

  v23[1] = *(id *)MEMORY[0x1E0C80C00];
  v6 = sub_1D451A71C();
  MEMORY[0x1E0C80A78](v6);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3958]), sel_init);
  v8 = (void *)sub_1D4519B28();
  sub_1D447D724((uint64_t)v8, sel_setExecutableURL_);

  sub_1D447D5E8(a2, v7);
  if (a3)
  {
    v9 = a3;
  }
  else
  {
    v10 = sub_1D451A5E4();
    v11 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
    v12 = objc_msgSend(v11, sel_environment);

    v3 = (_QWORD *)sub_1D451A5CC();
    v9 = sub_1D447CEEC(v3, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1D447D634(v9, v7);
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3860]), sel_init);
  sub_1D447D724((uint64_t)v13, sel_setStandardOutput_);
  v23[0] = 0;
  if (!objc_msgSend(v7, sel_launchAndReturnError_, v23))
  {
    v22 = v23[0];
    sub_1D4519AA4();

    swift_willThrow();
    v7 = v13;
    goto LABEL_9;
  }
  v14 = v23[0];
  objc_msgSend(v7, sel_waitUntilExit);
  v15 = sub_1D447D730();
  v16 = objc_msgSend(v15, sel_readDataToEndOfFile);

  sub_1D4519C54();
  v17 = sub_1D447D730();
  objc_msgSend(v17, sel_closeFile);

  sub_1D451A710();
  result = sub_1D451A6F8();
  if (v19)
  {
    v3 = (_QWORD *)result;
    if (!sub_1D447D73C())
    {
      sub_1D42B6CCC();

      return (uint64_t)v3;
    }
    swift_bridgeObjectRelease();
    v20 = (int)sub_1D447D73C();
    sub_1D447D698();
    swift_allocError();
    *v21 = v20;
    swift_willThrow();

    sub_1D42B6CCC();
LABEL_9:

    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D447D50C()
{
  sub_1D451B964();
  return sub_1D451B964();
}

uint64_t sub_1D447D53C()
{
  sub_1D451B958();
  sub_1D451B964();
  sub_1D451B964();
  return sub_1D451B994();
}

uint64_t sub_1D447D58C()
{
  return sub_1D447D53C();
}

uint64_t sub_1D447D594()
{
  return sub_1D447D50C();
}

uint64_t sub_1D447D59C()
{
  sub_1D451B958();
  sub_1D451B964();
  sub_1D451B964();
  return sub_1D451B994();
}

void sub_1D447D5E8(uint64_t a1, void *a2)
{
  id v3;

  v3 = (id)sub_1D451A908();
  objc_msgSend(a2, sel_setArguments_, v3);

}

void sub_1D447D634(uint64_t a1, void *a2)
{
  id v3;

  v3 = (id)sub_1D451A5A8();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setEnvironment_, v3);

}

unint64_t sub_1D447D698()
{
  unint64_t result;

  result = qword_1EFE53D20;
  if (!qword_1EFE53D20)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4545F68, &type metadata for ProcUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE53D20);
  }
  return result;
}

ValueMetadata *type metadata accessor for ProcUtils.DomainError()
{
  return &type metadata for ProcUtils.DomainError;
}

unint64_t sub_1D447D6E8()
{
  unint64_t result;

  result = qword_1EFE53D28[0];
  if (!qword_1EFE53D28[0])
  {
    result = MEMORY[0x1D825E41C](&unk_1D4545F00, &type metadata for ProcUtils.DomainError);
    atomic_store(result, qword_1EFE53D28);
  }
  return result;
}

id sub_1D447D724(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;

  return objc_msgSend(v3, a2, v2);
}

id sub_1D447D730()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, (SEL)(v0 + 1036));
}

id sub_1D447D73C()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, (SEL)(v0 + 2741));
}

uint64_t sub_1D447D748(void *a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 v4;
  id v5;
  id v6;
  id v7;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x1E0C80C00];
  v9[0] = 0;
  v4 = objc_msgSend(a1, sel_setActive_withOptions_error_, 1, a2, v9);
  v5 = v9[0];
  if ((v4 & 1) != 0)
  {
    *(_QWORD *)(v2 + 16) = a1;
    v6 = v5;
  }
  else
  {
    v7 = v9[0];
    sub_1D4519AA4();

    swift_willThrow();
    swift_deallocPartialClassInstance();
  }
  return v2;
}

uint64_t sub_1D447D820()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  void *v10;
  id v12[2];

  v1 = v0;
  v12[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = *(void **)(v0 + 16);
  v12[0] = 0;
  if (objc_msgSend(v2, sel_setActive_error_, 0, v12))
  {
    v3 = v12[0];
  }
  else
  {
    v4 = v12[0];
    sub_1D4519AA4();

    swift_willThrow();
    if (qword_1EFE40338 != -1)
      swift_once();
    v5 = sub_1D451A014();
    sub_1D42CC880(v5, (uint64_t)qword_1EFEA7700);
    sub_1D44505BC();
    sub_1D44505BC();
    v6 = sub_1D4519FFC();
    v7 = sub_1D451AF5C();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v8 = 138412290;
      sub_1D44505BC();
      v10 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v12[0] = v10;
      sub_1D451B1A8();
      *v9 = v10;
      sub_1D43D6754();
      sub_1D43D6754();
      _os_log_impl(&dword_1D42A7000, v6, v7, "Failed to deactivate audio session: %@", v8, 0xCu);
      sub_1D42B28FC((uint64_t *)&unk_1EFE50850);
      swift_arrayDestroy();
      sub_1D42CC934();
    }
    sub_1D43D6754();
    sub_1D43D6754();
    sub_1D43D6754();

  }
  return v1;
}

uint64_t sub_1D447DA2C()
{
  sub_1D447D820();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SessionActivation()
{
  return objc_opt_self();
}

id sub_1D447DA6C()
{
  void *v0;
  unsigned int v1;
  char **v2;

  v1 = objc_msgSend(v0, sel_decoupledIO);
  v2 = &selRef_inputSampleRate;
  if (!v1)
    v2 = &selRef_sampleRate;
  return objc_msgSend(v0, *v2);
}

uint64_t sub_1D447DAC4()
{
  return sub_1D447DEA0((uint64_t (*)(uint64_t))sub_1D439E5C4, (uint64_t (*)(uint64_t))sub_1D42B7714, (void (*)(uint64_t))type metadata accessor for XPCEncoder.SingleValueContainer);
}

void sub_1D447DAE0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);

  sub_1D447E270();
  v3 = sub_1D42B8DB4();
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v4 + 32);
  v6 = *(_QWORD *)(v4 + 40);
  sub_1D447E268();
  v7 = (_QWORD *)sub_1D42B6F40();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v5;
  v7[5] = v6;
  type metadata accessor for XPCEncoder();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v3;
  *(_QWORD *)(inited + 24) = v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = sub_1D42B8DB4();
  *(_QWORD *)(v10 + 16) = sub_1D447E224;
  *(_QWORD *)(v10 + 24) = v3;
  sub_1D4312004();
  v11 = *(_QWORD *)(v9 + 16);
  if (v11)
  {
    v12 = *(_QWORD *)(v9 + 24);
    sub_1D42B7F2C();
    v13 = sub_1D42B6D0C();
    sub_1D447E254(v13, v14);
    swift_retain();
    sub_1D42EA410();
    swift_willThrow();
    *(_QWORD *)(v9 + 16) = v11;
    *(_QWORD *)(v9 + 24) = v12;
  }
  else
  {
    v15 = sub_1D42B8DB4();
    *(_QWORD *)(v15 + 16) = sub_1D447E1A0;
    *(_QWORD *)(v15 + 24) = v10;
    *(_QWORD *)(v9 + 16) = sub_1D439E974;
    *(_QWORD *)(v9 + 24) = v15;
    sub_1D42B8E7C();
    v16 = *(_QWORD *)(v1 + 24);
    v17 = *(_QWORD *)(inited + 24);
    v18 = sub_1D42B8DB4();
    *(_QWORD *)(v18 + 16) = sub_1D447E1B8;
    *(_QWORD *)(v18 + 24) = v17;
    sub_1D4312004();
    v19 = *(_QWORD *)(v16 + 16);
    if (!v19)
    {
      v23 = sub_1D42B8DB4();
      *(_QWORD *)(v23 + 16) = sub_1D447E1D0;
      *(_QWORD *)(v23 + 24) = v18;
      *(_QWORD *)(v16 + 16) = sub_1D42B7F14;
      *(_QWORD *)(v16 + 24) = v23;
      sub_1D42B8E7C();
      v24 = a1[3];
      v25 = a1[4];
      sub_1D42B5528(a1, v24);
      v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 8);
      swift_retain();
      sub_1D42EA410();
      sub_1D42BE934();
      v26(inited, v24, v25);
      swift_setDeallocating();
      sub_1D43761A8();
      sub_1D42E3F50();
      goto LABEL_6;
    }
    v20 = *(_QWORD *)(v16 + 24);
    sub_1D42B7F2C();
    v21 = sub_1D42B6D0C();
    sub_1D447E254(v21, v22);
    sub_1D42EA410();
    swift_retain();
    sub_1D42BE934();
    swift_willThrow();
    *(_QWORD *)(v16 + 16) = v19;
    *(_QWORD *)(v16 + 24) = v20;
  }
  sub_1D42B8E7C();
  swift_release();
  swift_setDeallocating();
  sub_1D43761A8();
  sub_1D42E3F50();
  swift_release();
LABEL_6:
  sub_1D447E238();
}

uint64_t sub_1D447DD10@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  _QWORD *v12;
  uint64_t inited;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;

  sub_1D447E270();
  v11 = sub_1D42B8DB4();
  sub_1D447E268();
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  v12 = (_QWORD *)sub_1D42B6F40();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = a1;
  v12[5] = a2;
  type metadata accessor for XPCEncoder();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v11;
  *(_QWORD *)(inited + 24) = v12;
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 8);
  sub_1D4307398();
  v14(inited, a3, a4);
  if (v5)
    return swift_release();
  sub_1D42BE934();
  v15 = sub_1D42B738C();
  v17 = v16;
  v19 = v18;
  v21 = v20;
  swift_release();
  sub_1D42BE934();
  v22 = sub_1D439E26C();
  v25 = v23;
  swift_release();
  swift_setDeallocating();
  sub_1D43761A8();
  result = sub_1D42E3F50();
  *a5 = v22;
  a5[1] = v25;
  a5[2] = v15;
  a5[3] = v17;
  a5[4] = v19;
  a5[5] = v21;
  return result;
}

uint64_t sub_1D447DE84()
{
  return sub_1D447DEA0((uint64_t (*)(uint64_t))sub_1D439E2E4, (uint64_t (*)(uint64_t))sub_1D42B740C, (void (*)(uint64_t))type metadata accessor for XPCEncoder.UnkeyedContainer);
}

uint64_t sub_1D447DEA0(uint64_t (*a1)(uint64_t), uint64_t (*a2)(uint64_t), void (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v6 = sub_1D42BE934();
  v7 = a1(v6);
  swift_release();
  v8 = sub_1D42BE934();
  v9 = a2(v8);
  v10 = swift_release();
  a3(v10);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v7;
  *(_QWORD *)(result + 24) = v9;
  return result;
}

void sub_1D447DF1C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  sub_1D447E270();
  v4 = sub_1D42B8DB4();
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v5 + 24);
  v7 = *(_QWORD *)(v5 + 32);
  sub_1D447E268();
  v8 = (_QWORD *)sub_1D42B6F40();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v6;
  v8[5] = v7;
  type metadata accessor for XPCEncoder();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v4;
  *(_QWORD *)(inited + 24) = v8;
  v10 = *(_QWORD *)(v2 + 16);
  v11 = sub_1D42B8DB4();
  *(_QWORD *)(v11 + 16) = sub_1D439EB20;
  *(_QWORD *)(v11 + 24) = v4;
  sub_1D4312004();
  swift_retain();
  sub_1D4307398();
  swift_retain();
  sub_1D43A242C();
  v12 = *(_QWORD *)(*(_QWORD *)(v10 + 16) + 16);
  sub_1D43A24D8(v12);
  v13 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v13 + 16) = v12 + 1;
  v14 = v13 + 16 * v12;
  *(_QWORD *)(v14 + 32) = sub_1D447E1FC;
  *(_QWORD *)(v14 + 40) = v11;
  sub_1D42B8E7C();
  swift_release();
  v15 = *(_QWORD *)(v2 + 24);
  v16 = *(_QWORD *)(inited + 24);
  v17 = sub_1D42B8DB4();
  *(_QWORD *)(v17 + 16) = sub_1D447E1B8;
  *(_QWORD *)(v17 + 24) = v16;
  sub_1D4312004();
  swift_retain();
  sub_1D4307398();
  sub_1D43A2408();
  v18 = *(_QWORD *)(*(_QWORD *)(v15 + 16) + 16);
  sub_1D43A24B0(v18);
  v19 = *(_QWORD *)(v15 + 16);
  *(_QWORD *)(v19 + 16) = v18 + 1;
  v20 = v19 + 16 * v18;
  *(_QWORD *)(v20 + 32) = sub_1D447E210;
  *(_QWORD *)(v20 + 40) = v17;
  sub_1D42B8E7C();
  swift_release();
  v21 = a1[3];
  v22 = a1[4];
  sub_1D42B5528(a1, v21);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 8))(inited, v21, v22);
  swift_setDeallocating();
  sub_1D43761A8();
  sub_1D42E3F50();
  sub_1D447E238();
}

uint64_t sub_1D447E0DC()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1D42B738C();
  if (v0)
    return v2;
  return result;
}

uint64_t type metadata accessor for XPCEncoder()
{
  return objc_opt_self();
}

void type metadata accessor for XPCEncoder.KeyedContainer()
{
  JUMPOUT(0x1D825E3A4);
}

uint64_t type metadata accessor for XPCEncoder.UnkeyedContainer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for XPCEncoder.SingleValueContainer()
{
  return objc_opt_self();
}

uint64_t sub_1D447E17C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D447E1A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1D439E280(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1D447E1B8()
{
  return sub_1D447E0DC();
}

uint64_t sub_1D447E1D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1D42B73A0(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1D447E1FC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D447E1A0(a1);
}

uint64_t sub_1D447E210@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D447E1D0(a1);
}

uint64_t sub_1D447E224()
{
  return sub_1D439EB20();
}

uint64_t sub_1D447E254(uint64_t a1, _BYTE *a2)
{
  *a2 = 1;
  return swift_retain();
}

uint64_t sub_1D447E268()
{
  return type metadata accessor for XPCProxyEncoder();
}

uint64_t sub_1D447E270()
{
  return type metadata accessor for XPCDataEncoder();
}

void sub_1D447E278(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v9;
  unsigned int v10;
  double v11;
  CMTimeValue v12;
  CMTimeEpoch v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  CMTime duration;
  CMTime start;
  CMTimeRange v23;

  v4 = v3;
  v5 = *(void **)(v3 + 24);
  if (v5)
  {
    v9 = v5;
    v10 = objc_msgSend(a1, sel_frameLength);
    objc_msgSend(*(id *)(v4 + 16), sel_sampleRate);
    if ((~*(_QWORD *)&v11 & 0x7FF0000000000000) != 0)
    {
      if (v11 > -2147483650.0)
      {
        if (v11 < 2147483650.0)
        {
          CMTimeMake(&v23.start, v10, (int)v11);
          v12 = *(_QWORD *)(v4 + 32);
          v13 = *(_QWORD *)(v4 + 48);
          duration.epoch = v23.start.epoch;
          start.value = v12;
          *(_QWORD *)&start.timescale = *(_QWORD *)(v4 + 40);
          start.epoch = v13;
          duration.value = v23.start.value;
          *(_QWORD *)&duration.timescale = *(_QWORD *)&v23.start.timescale;
          CMTimeRangeMake(&v23, &start, &duration);
          type metadata accessor for SNAudioFileUtils();
          v14 = *(_QWORD *)(v4 + 32);
          v15 = swift_allocObject();
          *(_QWORD *)(v15 + 16) = a2;
          *(_QWORD *)(v15 + 24) = a3;
          swift_retain();
          v16 = sub_1D446AC7C(v9, (uint64_t)&v23, v14, v10, 0, (uint64_t (*)(void *, id *))sub_1D447E620, v15);
          v18 = v17;
          v20 = v19;
          swift_release();

          *(_QWORD *)(v4 + 32) = v16;
          *(_QWORD *)(v4 + 40) = v18;
          *(_QWORD *)(v4 + 48) = v20;
          return;
        }
LABEL_9:
        __break(1u);
        swift_unexpectedError();
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_9;
  }
}

_QWORD *sub_1D447E454(uint64_t a1, void *a2)
{
  _QWORD *v2;
  uint64_t v3;
  id v5;
  _QWORD *result;
  double v7;
  CMTimeEpoch epoch;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  CMTime v15;

  v2[2] = a2;
  v2[3] = 0;
  v5 = a2;
  result = objc_msgSend(v5, sel_sampleRate);
  if ((~*(_QWORD *)&v7 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v7 <= -2147483650.0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v7 >= 2147483650.0)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  CMTimeMake(&v15, 0, (int)v7);
  epoch = v15.epoch;
  v9 = *(_QWORD *)&v15.timescale;
  v2[4] = v15.value;
  v2[5] = v9;
  v2[6] = epoch;
  type metadata accessor for SNAudioFileUtils();
  v10 = sub_1D4469168(a1, v5);
  if (v3)
  {
    swift_release();

    v11 = sub_1D4519BC4();
    sub_1D447E644(v11);
  }
  else
  {
    v12 = v10;

    v13 = sub_1D4519BC4();
    sub_1D447E644(v13);
    v14 = (void *)v2[3];
    v2[3] = v12;

  }
  return v2;
}

uint64_t sub_1D447E574()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = (void *)MEMORY[0x1D825DB34]();
  v2 = *(void **)(v0 + 24);
  *(_QWORD *)(v0 + 24) = 0;

  objc_autoreleasePoolPop(v1);
  return v0;
}

uint64_t sub_1D447E5BC()
{
  sub_1D447E574();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SNFileInjectOperator()
{
  return objc_opt_self();
}

uint64_t sub_1D447E5FC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D447E620()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 16))();
  return 1;
}

uint64_t sub_1D447E644(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_1D447E658(uint64_t a1, void *a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t *a6, uint64_t a7, uint64_t a8)
{
  unint64_t v8;
  uint64_t result;
  _BYTE *v10;

  if ((a4 & 0x8000000000000000) != 0 || HIDWORD(a4) || (v8 = *a6, (v8 & 0x8000000000000000) != 0) || HIDWORD(v8))
  {
    sub_1D42DCED4();
    result = sub_1D451B550();
    __break(1u);
  }
  else
  {
    result = (uint64_t)sub_1D44F7048(a2, a3, a4, a5, a1, v8, a7, a8);
    if (!(_DWORD)result)
    {
      sub_1D4383190();
      swift_allocError();
      *v10 = 0;
      return swift_willThrow();
    }
  }
  return result;
}

_QWORD *sub_1D447E754@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  void *v5;
  unsigned int v6;

  result = sub_1D44F6A44((uint64_t)a1);
  if (result)
  {
    v5 = result;
    v6 = sub_1D44F0E74((uint64_t)result, 0);

    sub_1D44F4884((uint64_t)a1);
    *a2 = a1;
    a2[1] = v6;
    return a1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D447E7CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t storeEnumTagSinglePayload for DSPGraphError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D447E838 + 4 * byte_1D45460FD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D447E86C + 4 * asc_1D45460F8[v4]))();
}

uint64_t sub_1D447E86C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D447E874(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D447E87CLL);
  return result;
}

uint64_t sub_1D447E888(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D447E890);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D447E894(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D447E89C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DSPGraphError()
{
  return &type metadata for DSPGraphError;
}

unint64_t sub_1D447E8BC()
{
  unint64_t result;

  result = qword_1EFE53DB0[0];
  if (!qword_1EFE53DB0[0])
  {
    result = MEMORY[0x1D825E41C](&unk_1D4546154, &type metadata for DSPGraphError);
    atomic_store(result, qword_1EFE53DB0);
  }
  return result;
}

uint64_t sub_1D447E8F8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1D447E980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  sub_1D447E9D4(a1, a2, a3);
  return v6;
}

uint64_t *sub_1D447E9D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  _QWORD *v8;
  _OWORD v10[2];
  uint64_t v11;

  v7 = *v3;
  *((_OWORD *)v3 + 2) = 0u;
  v3[6] = 0;
  *((_OWORD *)v3 + 1) = 0u;
  v11 = 0;
  memset(v10, 0, sizeof(v10));
  sub_1D42B8E84();
  sub_1D431CC80((uint64_t)v10, (uint64_t)(v3 + 2));
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 + 96) - 8) + 32))((uint64_t)v3 + *(_QWORD *)(*v3 + 128), a1);
  v8 = (uint64_t *)((char *)v3 + *(_QWORD *)(*v3 + 136));
  *v8 = a2;
  v8[1] = a3;
  return v3;
}

void sub_1D447EA88(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD v3[5];

  v2 = *v1;
  sub_1D42E2D8C(a1, (uint64_t)v3);
  sub_1D42B8E84();
  sub_1D431CC80((uint64_t)v3, (uint64_t)(v1 + 2));
  swift_endAccess();
  v3[3] = v2;
  v3[4] = MEMORY[0x1D825E41C](&unk_1D454628C, v2);
  v3[0] = v1;
  swift_retain();
  sub_1D451A164();
  sub_1D42B5400((uint64_t)v3);
  sub_1D42D7120();
}

uint64_t sub_1D447EB2C()
{
  return sub_1D451A170();
}

void sub_1D447EB5C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v3 = *v1;
  swift_getAssociatedConformanceWitness();
  v4 = sub_1D451A188();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v8 - v6;
  (*(void (**)(uint64_t))((char *)v1 + *(_QWORD *)(v3 + 136)))(a1);
  sub_1D451A158();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1D42CB0F8();
}

void sub_1D447EC2C()
{
  uint64_t v0;
  _QWORD v1[4];

  sub_1D42B8E84();
  if (*(_QWORD *)(v0 + 40))
  {
    sub_1D42E2D8C(v0 + 16, (uint64_t)v1);
    sub_1D42B5528(v1, v1[3]);
    sub_1D451A1DC();
    sub_1D42B5400((uint64_t)v1);
  }
  sub_1D42D7120();
}

uint64_t sub_1D447ECA0()
{
  uint64_t v0;
  uint64_t result;
  _QWORD v2[4];

  result = sub_1D42B8E84();
  if (*(_QWORD *)(v0 + 40))
  {
    sub_1D42E2D8C(v0 + 16, (uint64_t)v2);
    sub_1D42B5528(v2, v2[3]);
    sub_1D451A17C();
    return sub_1D42B5400((uint64_t)v2);
  }
  return result;
}

uint64_t *sub_1D447ED10()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1D431CE20((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 96) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 128));
  swift_release();
  return v0;
}

uint64_t sub_1D447ED68()
{
  sub_1D447ED10();
  return swift_deallocClassInstance();
}

void type metadata accessor for MapCompletion.Instance()
{
  JUMPOUT(0x1D825E3A4);
}

void sub_1D447ED98(uint64_t a1)
{
  sub_1D447EA88(a1);
}

uint64_t sub_1D447EDB8()
{
  return sub_1D447EB2C();
}

void sub_1D447EDD8(uint64_t a1)
{
  sub_1D447EB5C(a1);
}

void sub_1D447EDF8()
{
  sub_1D447EC2C();
}

uint64_t sub_1D447EE18()
{
  return sub_1D447ECA0();
}

void sub_1D447EE38()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D447EE48()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D447EE58()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D447EED0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v6, v4);
    }
  }
  else
  {
    if (((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1D447EF4C + 4 * byte_1D45461C0[v11]))();
  }
}

void sub_1D447EFCC(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1D447F0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0x7FFFFFFF)
    {
      v8 = (_QWORD *)((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      if ((a2 & 0x80000000) != 0)
      {
        v9 = a2 ^ 0x80000000;
        v8[1] = 0;
      }
      else
      {
        v9 = (a2 - 1);
      }
      *v8 = v9;
    }
    else
    {
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v5, a2, a3, a4);
    }
  }
  return result;
}

void type metadata accessor for MapCompletion()
{
  JUMPOUT(0x1D825E3A4);
}

void sub_1D447F154(uint64_t a1)
{
  MEMORY[0x1E0C80A78](a1);
  type metadata accessor for MapCompletion.Instance();
}

void sub_1D447F1CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v4, v2);
  v9 = (uint64_t *)(v1 + *(int *)(v3 + 52));
  v10 = *v9;
  v11 = v9[1];
  swift_retain();
  *(_QWORD *)(v7 - 112) = sub_1D447E980(v5, v10, v11);
  MEMORY[0x1D825E41C](&unk_1D45462C4, a1);
  sub_1D451A2CC();
  swift_release();
  sub_1D42CB0F8();
}

void sub_1D447F258(uint64_t a1)
{
  sub_1D447F154(a1);
}

uint64_t sub_1D447F26C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1D447F320@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DEDFE8];
  v3 = sub_1D451B9B8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1D447F364()
{
  sub_1D451B958();
  sub_1D42BA52C();
  return sub_1D451B994();
}

void sub_1D447F3A0(uint64_t a1)
{
  MEMORY[0x1E0C80A78](a1);
  type metadata accessor for CollectByCountWithStride.Inner();
}

uint64_t sub_1D447F414(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v4, v2);
  *(_QWORD *)(v7 - 112) = sub_1D447F4A8(v5, *(_QWORD *)(v1 + v3[9]), *(_QWORD *)(v1 + v3[10]), *(_BYTE *)(v1 + v3[11]));
  MEMORY[0x1D825E41C](&unk_1D45465F0, a1);
  sub_1D451A3F8();
  return swift_release();
}

uint64_t *sub_1D447F4A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v7;

  v7 = a4 & 1;
  swift_allocObject();
  return sub_1D447F830(a1, a2, a3, v7);
}

uint64_t sub_1D447F508()
{
  return 0x427463656C6C6F43;
}

void sub_1D447F52C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)v0;
  v2 = sub_1D451B9B8();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D42B28FC(qword_1EFE54038);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(*(_QWORD *)(v0 + *(_QWORD *)(v1 + 184)) + 16));
  v22 = v0;
  sub_1D42B28FC((uint64_t *)&unk_1EFE498B0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1D452EC90;
  *(_QWORD *)(v8 + 32) = 0x657274736E776F64;
  *(_QWORD *)(v8 + 40) = 0xEA00000000006D61;
  v9 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 112);
  v10 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)(v8 + 72) = v10;
  v11 = sub_1D430BBF0((uint64_t *)(v8 + 48));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v11, v9, v10);
  *(_QWORD *)(v8 + 80) = 0xD000000000000014;
  *(_QWORD *)(v8 + 88) = 0x80000001D455AB60;
  v12 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 160);
  swift_beginAccess();
  *(_QWORD *)(v8 + 120) = sub_1D42B28FC(qword_1EFE4B8C8);
  v13 = swift_allocObject();
  *(_QWORD *)(v8 + 96) = v13;
  sub_1D431CDD8(v12, v13 + 16);
  *(_QWORD *)(v8 + 128) = 0x726566667562;
  *(_QWORD *)(v8 + 136) = 0xE600000000000000;
  v14 = (uint64_t *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 152));
  swift_beginAccess();
  v15 = *v14;
  swift_getAssociatedTypeWitness();
  v16 = sub_1D451AA1C();
  *(_QWORD *)(v8 + 144) = v15;
  *(_QWORD *)(v8 + 168) = v16;
  *(_QWORD *)(v8 + 176) = 0x746E756F63;
  *(_QWORD *)(v8 + 184) = 0xE500000000000000;
  v17 = *(_QWORD *)v0;
  v18 = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v8 + 192) = *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120));
  *(_QWORD *)(v8 + 216) = v18;
  *(_QWORD *)(v8 + 224) = 0x656469727473;
  *(_QWORD *)(v8 + 232) = 0xE600000000000000;
  v19 = *(_QWORD *)(v0 + *(_QWORD *)(v17 + 128));
  *(_QWORD *)(v8 + 264) = v18;
  *(_QWORD *)(v8 + 240) = v19;
  v20 = sub_1D451B9AC();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v7, 1, 1, v20);
  sub_1D447F320((uint64_t)v4);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1D451B9DC();
  sub_1D447F7E8(v0);
}

void sub_1D447F7E8(uint64_t a1)
{
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 184)) + 16));
}

void sub_1D447F7FC(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEA968];
  strcpy((char *)a1, "CollectByCount");
  *(_BYTE *)(a1 + 15) = -18;
}

uint64_t *sub_1D447F830(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t *v4;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _DWORD *v14;

  v8 = a4 & 1;
  v9 = *v4;
  *((_BYTE *)v4 + *(_QWORD *)(*v4 + 144)) = 0;
  v10 = *(_QWORD *)(*v4 + 152);
  swift_getAssociatedTypeWitness();
  *(uint64_t *)((char *)v4 + v10) = sub_1D451A9A4();
  v11 = (uint64_t)v4 + *(_QWORD *)(*v4 + 160);
  *(_QWORD *)(v11 + 32) = 0;
  *(_OWORD *)v11 = 0u;
  *(_OWORD *)(v11 + 16) = 0u;
  *((_BYTE *)v4 + *(_QWORD *)(*v4 + 168)) = 0;
  *((_BYTE *)v4 + *(_QWORD *)(*v4 + 176)) = 0;
  v12 = *(_QWORD *)(*v4 + 184);
  type metadata accessor for SafeLock();
  v13 = swift_allocObject();
  v14 = (_DWORD *)swift_slowAlloc();
  *v14 = 0;
  *(_QWORD *)(v13 + 16) = v14;
  *(uint64_t *)((char *)v4 + v12) = v13;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v9 + 88) - 8) + 32))((uint64_t)v4 + *(_QWORD *)(*v4 + 112), a1);
  *(uint64_t *)((char *)v4 + *(_QWORD *)(*v4 + 120)) = a2;
  *(uint64_t *)((char *)v4 + *(_QWORD *)(*v4 + 128)) = a3;
  *((_BYTE *)v4 + *(_QWORD *)(*v4 + 136)) = v8;
  return v4;
}

void sub_1D447F964(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[3];
  uint64_t v10;

  sub_1D451A1B8();
  if ((sub_1D451A1A0() & 1) == 0)
  {
    if (a1 < 0)
    {
      __break(1u);
    }
    else if (a1)
    {
      goto LABEL_4;
    }
    __break(1u);
    goto LABEL_17;
  }
LABEL_4:
  v3 = *(uint64_t *)((char *)v1 + *(_QWORD *)(*v1 + 184));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v3 + 16));
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 160);
  swift_beginAccess();
  sub_1D431CDD8(v4, (uint64_t)&v7);
  if (!v8)
  {
    sub_1D431CE20((uint64_t)&v7);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
    return;
  }
  sub_1D42E33E0(&v7, (uint64_t)v9);
  sub_1D451A1B8();
  if ((sub_1D451A1A0() & 1) == 0)
  {
    v5 = *v1;
    v6 = *(_QWORD *)(*v1 + 144);
    if (*((_BYTE *)v1 + v6) == 1)
    {
      v5 = *(_QWORD *)(v5 + 128);
      if ((*(uint64_t *)((char *)v1 + v5) & 0x8000000000000000) == 0)
      {
LABEL_12:
        *((_BYTE *)v1 + v6) = 1;
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
        sub_1D42B5528(v9, v10);
        goto LABEL_13;
      }
      __break(1u);
    }
    if ((*(uint64_t *)((char *)v1 + *(_QWORD *)(v5 + 120)) & 0x8000000000000000) == 0)
      goto LABEL_12;
LABEL_17:
    __break(1u);
    return;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  sub_1D42B5528(v9, v10);
  sub_1D451A1B8();
LABEL_13:
  sub_1D451A1DC();
  sub_1D42B5400((uint64_t)v9);
}

void sub_1D447FACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  _QWORD v8[4];

  v1 = *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 184));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  v2 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 160);
  swift_beginAccess();
  sub_1D431CDD8(v2, (uint64_t)&v5);
  if (*((_QWORD *)&v6 + 1))
  {
    sub_1D42E33E0(&v5, (uint64_t)v8);
    swift_getAssociatedTypeWitness();
    v3 = sub_1D451A9A4();
    v4 = (uint64_t *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 152));
    swift_beginAccess();
    *v4 = v3;
    swift_bridgeObjectRelease();
    v7 = 0;
    v5 = 0u;
    v6 = 0u;
    swift_beginAccess();
    sub_1D431CC80((uint64_t)&v5, v2);
    swift_endAccess();
    *(_BYTE *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 168)) = 1;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
    sub_1D42B5528(v8, v8[3]);
    sub_1D451A17C();
    sub_1D42B5400((uint64_t)v8);
  }
  else
  {
    sub_1D431CE20((uint64_t)&v5);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  }
}

uint64_t sub_1D447FC34(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  v3 = *v1;
  v4 = *(uint64_t *)((char *)v1 + *(_QWORD *)(*v1 + 184));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v4 + 16));
  if ((*((_BYTE *)v1 + *(_QWORD *)(*v1 + 168)) & 1) != 0
    || (v5 = (uint64_t)v1 + *(_QWORD *)(*v1 + 160),
        swift_beginAccess(),
        sub_1D431CDD8(v5, (uint64_t)v8),
        v6 = v9,
        sub_1D431CE20((uint64_t)v8),
        v6))
  {
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
    sub_1D42B5528(a1, a1[3]);
    return sub_1D451A17C();
  }
  else
  {
    sub_1D42E2D8C((uint64_t)a1, (uint64_t)v8);
    swift_beginAccess();
    sub_1D431CC80((uint64_t)v8, v5);
    swift_endAccess();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
    v9 = v3;
    v10 = MEMORY[0x1D825E41C](&unk_1D45465B8, v3);
    v8[0] = v1;
    swift_retain();
    sub_1D451A164();
    return sub_1D42B5400((uint64_t)v8);
  }
}

uint64_t sub_1D447FD80(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[5];

  v2 = v1;
  v4 = *v2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v8 = (char *)v19 - v7;
  v9 = *(uint64_t *)((char *)v2 + *(_QWORD *)(v4 + 184));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v9 + 16));
  v10 = (uint64_t)v2 + *(_QWORD *)(*v2 + 160);
  swift_beginAccess();
  sub_1D431CDD8(v10, (uint64_t)v19);
  v11 = v19[3];
  sub_1D431CE20((uint64_t)v19);
  if (!v11)
    goto LABEL_4;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, AssociatedTypeWitness);
  v12 = (uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 152));
  swift_beginAccess();
  v13 = sub_1D451AA1C();
  sub_1D451A9F8();
  swift_endAccess();
  v14 = swift_bridgeObjectRetain();
  v15 = MEMORY[0x1D825C328](v14, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  if (v15 == *(uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 120)))
  {
    v16 = *v12;
    v17 = swift_bridgeObjectRetain();
    MEMORY[0x1D825C328](v17, AssociatedTypeWitness);
    swift_beginAccess();
    MEMORY[0x1D825E41C](MEMORY[0x1E0DEAF58], v13);
    sub_1D451ADF4();
    swift_endAccess();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));
    v19[0] = v16;
    sub_1D451A170();
    swift_bridgeObjectRelease();
    return sub_1D451A194();
  }
  else
  {
LABEL_4:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));
    return sub_1D451A1AC();
  }
}

uint64_t sub_1D447FF98(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD v33[2];
  uint64_t v34;

  v2 = v1;
  v31 = a1;
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 96);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v28 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v30 = (uint64_t)&v27 - v6;
  v29 = v4;
  swift_getAssociatedConformanceWitness();
  v7 = sub_1D451A188();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v27 - v12;
  v14 = *(uint64_t *)((char *)v2 + *(_QWORD *)(v3 + 184));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v14 + 16));
  v34 = 0;
  memset(v33, 0, sizeof(v33));
  v15 = (uint64_t)v2 + *(_QWORD *)(*v2 + 160);
  swift_beginAccess();
  sub_1D431CC80((uint64_t)v33, v15);
  swift_endAccess();
  *((_BYTE *)v2 + *(_QWORD *)(*v2 + 168)) = 1;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v17 = v31;
  v31 = v7;
  v16(v13, v17, v7);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v13, 1, AssociatedTypeWitness) != 1)
  {
    v22 = v28;
    (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v13, AssociatedTypeWitness);
    swift_getAssociatedTypeWitness();
    v23 = sub_1D451A9A4();
    v24 = (uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 152));
    swift_beginAccess();
    *v24 = v23;
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
    v25 = v30;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v11, v30, AssociatedTypeWitness);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v11, 0, 1, AssociatedTypeWitness);
    sub_1D451A158();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v31);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v25, AssociatedTypeWitness);
  }
  v30 = AssociatedTypeWitness;
  v18 = v8;
  v19 = (uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 152));
  swift_beginAccess();
  v32 = *v19;
  swift_getAssociatedTypeWitness();
  v20 = sub_1D451AA1C();
  MEMORY[0x1D825E41C](MEMORY[0x1E0DEAF50], v20);
  if ((sub_1D451AD64() & 1) != 0)
    goto LABEL_7;
  if (*((_BYTE *)v2 + *(_QWORD *)(*v2 + 136)) != 1)
  {
    *v19 = sub_1D451A9A4();
    swift_bridgeObjectRelease();
LABEL_7:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
    goto LABEL_8;
  }
  v21 = *v19;
  swift_bridgeObjectRetain();
  *v19 = sub_1D451A9A4();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
  v32 = v21;
  sub_1D451A170();
  swift_bridgeObjectRelease();
LABEL_8:
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v11, 1, 1, v30);
  sub_1D451A158();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v31);
}

uint64_t sub_1D4480390()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 88) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
  swift_bridgeObjectRelease();
  sub_1D431CE20(v0 + *(_QWORD *)(*(_QWORD *)v0 + 160));
  swift_release();
  return v0;
}

uint64_t sub_1D44803F0()
{
  sub_1D4480390();
  return swift_deallocClassInstance();
}

void type metadata accessor for CollectByCountWithStride.Inner()
{
  JUMPOUT(0x1D825E3A4);
}

uint64_t sub_1D448041C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D44804A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    *v10 = *v11;
    v12 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
    v13 = ((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  }
  return v4;
}

uint64_t sub_1D4480570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  return a1;
}

uint64_t sub_1D44805E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  return a1;
}

uint64_t sub_1D4480658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  return a1;
}

uint64_t sub_1D44806CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  return a1;
}

uint64_t sub_1D4480740(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v15;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0xFE)
    v7 = 254;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0xFE)
    {
      v15 = *(unsigned __int8 *)(((((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8) + 8);
      if (v15 >= 2)
        return v15 - 1;
      else
        return 0;
    }
    else
    {
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v6, v4);
    }
  }
  else
  {
    v9 = ((((v8 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 9;
    v10 = (a2 - v7 + 255) >> (8 * v9);
    if (v9 < 4)
      v11 = v10 + 1;
    else
      v11 = 2;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1D44807D0 + 4 * byte_1D4546370[v13]))();
  }
}

void sub_1D4480860(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFEu)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v6 >= a3)
  {
    v10 = 0u;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
  }
  if (v6 < a2)
  {
    v11 = ~v6 + a2;
    v12 = (~(_BYTE)v6 + a2);
    if (v7 >= 4)
      v13 = v11;
    else
      v13 = v12;
    bzero(a1, v7);
    if ((_DWORD)v7 == 1)
      *a1 = v13;
    else
      *(_DWORD *)a1 = v13;
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

void sub_1D4480980()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1D4480988(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1D4480990);
}

void sub_1D44809D0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_1D44809D8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_1D44809E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!(_DWORD)a2)
LABEL_2:
    JUMPOUT(0x1D44809E8);
  if (a3 < 0xFE)
  {
    *(_BYTE *)(((((v6 + v5 + 7) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8) + 8) = a2 + 1;
    goto LABEL_2;
  }
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v6, a2, a3, a4);
}

uint64_t type metadata accessor for CollectByCountWithStride(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CollectByCountWithStride);
}

uint64_t sub_1D4480A0C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D4480A58 + 4 * byte_1D4546384[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D4480A8C + 4 * byte_1D454637F[v4]))();
}

uint64_t sub_1D4480A8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4480A94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4480A9CLL);
  return result;
}

uint64_t sub_1D4480AA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4480AB0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D4480AB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4480ABC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for CollectByCountWithStride.CompletionStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CollectByCountWithStride.CompletionStrategy);
}

void sub_1D4480AD4()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D4480AE4(_QWORD *a1)
{
  return sub_1D447FC34(a1);
}

uint64_t sub_1D4480B04(uint64_t a1)
{
  return sub_1D447FD80(a1);
}

uint64_t sub_1D4480B24(uint64_t a1)
{
  return sub_1D447FF98(a1);
}

void sub_1D4480B44(uint64_t a1)
{
  sub_1D447F964(a1);
}

uint64_t sub_1D4480B64()
{
  return sub_1D447F508();
}

void sub_1D4480B84()
{
  sub_1D447F52C();
}

void sub_1D4480BA4(uint64_t a1@<X8>)
{
  sub_1D447F7FC(a1);
}

void sub_1D4480BC4()
{
  sub_1D447FACC();
}

void sub_1D4480BE4(uint64_t a1)
{
  sub_1D447F3A0(a1);
}

void sub_1D4480BF8()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D4480C08()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D4480C18()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    sub_1D42B5400(v0 + 16);
  return swift_deallocObject();
}

void _s15StatefulFlatMapVMa()
{
  JUMPOUT(0x1D825E3A4);
}

uint64_t sub_1D4480C70()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1D4480CFC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  sub_1D4482318();
  sub_1D4482318();
  if ((*(_DWORD *)(v6 + 80) & 0x1000F8) != 0 || (unint64_t)(v7 + 8) > 0x18)
  {
    *a1 = *a2;
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *))(v6 + 16))(a1, a2);
    v9 = (_QWORD *)(((unint64_t)a1 + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
    v10 = (_QWORD *)(((unint64_t)a2 + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    sub_1D4482318();
    v13 = v12[1];
    *v14 = *v12;
    v14[1] = v13;
    *(_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFF8);
    swift_retain();
  }
  swift_retain();
  sub_1D42CB15C();
}

void sub_1D4480DE4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;

  sub_1D4468818();
  (*(void (**)(void))(v0 + 16))();
  sub_1D446882C();
  v2 = v1[1];
  *v3 = *v1;
  v3[1] = v2;
  sub_1D4482318();
  v5 = (_QWORD *)((v4 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = v5[1];
  *v7 = *v5;
  v7[1] = v6;
  *(_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_retain();
  sub_1D42CB15C();
}

void sub_1D4480E54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D4468818();
  (*(void (**)(void))(v0 + 24))();
  sub_1D4468848();
  sub_1D44822D8(v2);
  sub_1D42BE93C();
  sub_1D44822D8(v1 + 23);
  sub_1D42BE93C();
  *(_QWORD *)((((v0 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v1 + 23) & 0xFFFFFFFFFFFFF8);
  sub_1D42CB15C();
}

void sub_1D4480EB8()
{
  uint64_t v0;
  _OWORD *v1;
  _OWORD *v2;
  _OWORD *v3;
  _OWORD *v4;

  sub_1D4468818();
  (*(void (**)(void))(v0 + 32))();
  sub_1D446882C();
  *v2 = *v1;
  v3 = (_OWORD *)(((unint64_t)v2 + 23) & 0xFFFFFFFFFFFFF8);
  v4 = (_OWORD *)(((unint64_t)v1 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v3 = *v4;
  *(_QWORD *)(((unint64_t)v3 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v4 + 23) & 0xFFFFFFFFFFFFF8);
  sub_1D42CB15C();
}

void sub_1D4480F10()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  sub_1D4468818();
  (*(void (**)(void))(v0 + 40))();
  sub_1D4468848();
  v2 = v1 & 0xFFFFFFFFFFFFFFF8;
  sub_1D44822FC();
  sub_1D44822FC();
  *(_QWORD *)((((v0 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(v2 & 0xFFFFFFFFFFFFF8);
  sub_1D42CB15C();
}

uint64_t sub_1D4480F68(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v6, v4);
    }
  }
  else
  {
    if (((((((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1D4480FF4 + 4 * byte_1D4546650[v11]))();
  }
}

void sub_1D4481074(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
  }
  else
  {
    if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 8);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1D4481170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0x7FFFFFFF)
    {
      v8 = (_QWORD *)((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      if ((a2 & 0x80000000) != 0)
      {
        v9 = a2 ^ 0x80000000;
        v8[1] = 0;
      }
      else
      {
        v9 = (a2 - 1);
      }
      *v8 = v9;
    }
    else
    {
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v5, a2, a3, a4);
    }
  }
  return result;
}

void _s18StatefulTryFlatMapVMa()
{
  JUMPOUT(0x1D825E3A4);
}

void sub_1D448120C(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];

  v13[1] = a5;
  v13[2] = a2;
  v13[3] = a4;
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v10, v6, v12);
  sub_1D44812E4((uint64_t)v10, a3, a6);
}

void sub_1D44812C4()
{
  swift_retain();
  swift_retain();
  sub_1D42CB520();
}

void sub_1D44812E4(uint64_t a1@<X0>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  sub_1D44822EC();
}

void sub_1D4481358(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v7 = (_QWORD *)(v6 + a1[15]);
  *v7 = v4;
  v7[1] = v3;
  v8 = (_QWORD *)(v6 + a1[16]);
  *v8 = v2;
  v8[1] = v1;
  *(_QWORD *)(v6 + a1[17]) = v5;
  sub_1D43A1908();
}

void sub_1D4481380(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  MEMORY[0x1E0C80A78](a1);
  sub_1D4482324();
  MEMORY[0x1E0C80A78](v1);
  sub_1D42BE768();
  sub_1D451A0D4();
  sub_1D42BA1F0();
  MEMORY[0x1E0C80A78](v2);
  sub_1D448230C();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1D451B9E8();
  v3 = sub_1D451A0D4();
  v4 = sub_1D451A278();
  MEMORY[0x1D825E41C](MEMORY[0x1E0C95950], v3);
  MEMORY[0x1D825E41C](MEMORY[0x1E0C960B0], v4);
  sub_1D451A0E0();
  sub_1D44822D0();
}

void sub_1D4481550(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 120) = v1;
  *(_QWORD *)(v4 - 112) = v2;
  *(_QWORD *)(v4 - 104) = a1;
  *(_QWORD *)(v4 - 96) = v3;
  sub_1D451A0A4();
  sub_1D44822D0();
}

void sub_1D4481574()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = v0;
  sub_1D4482344();
}

void sub_1D4481584(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 248) = a1;
  *(_QWORD *)(v4 - 120) = v1;
  *(_QWORD *)(v4 - 112) = v2;
  *(_QWORD *)(v4 - 104) = v3;
  *(_QWORD *)(v4 - 96) = a1;
  sub_1D451A128();
  sub_1D44822D0();
}

void sub_1D44815AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 120) = v1;
  *(_QWORD *)(v4 - 112) = v3;
  *(_QWORD *)(v4 - 104) = v2;
  *(_QWORD *)(v4 - 96) = a1;
  type metadata accessor for ExpandResult();
}

void sub_1D44815C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_QWORD *)(v3 - 264) = a1;
  *(_QWORD *)(v3 - 232) = *(_QWORD *)(a1 - 8);
  sub_1D42BA1F0();
  MEMORY[0x1E0C80A78](v4);
  sub_1D448230C();
  *(_QWORD *)(v3 - 272) = v5;
  v6 = v2;
  v7 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v3 - 288) = v7;
  *(_QWORD *)(v3 - 280) = swift_allocBox();
  v8 = *(_QWORD *)(v3 - 152);
  (*(void (**)(void))(v8 + *(int *)(v2 + 64)))();
  v9 = v1;
  sub_1D448234C(*(_QWORD *)(v3 - 160), v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 136) + 16));
  v11 = *(_QWORD *)(v3 - 216);
  v10 = *(_QWORD *)(v3 - 208);
  sub_1D4340978(v11, v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
  v12 = v10;
  v13 = (*(unsigned __int8 *)(v10 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v14 = (*(_QWORD *)(v3 - 192) + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = (_QWORD *)swift_allocObject();
  v16 = *(_QWORD *)(v3 - 240);
  v15[2] = v1;
  v15[3] = v16;
  v15[4] = v7;
  v17 = *(_QWORD *)(v3 - 184);
  v18 = *(_QWORD *)(v3 - 224);
  v15[5] = v17;
  v15[6] = v18;
  v19 = *(_QWORD *)(v3 - 128);
  v15[7] = *(_QWORD *)(v3 - 144);
  v15[8] = v19;
  sub_1D4340978((uint64_t)v15 + v13, v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 32));
  *(_QWORD *)((char *)v15 + v14) = *(_QWORD *)(v3 - 280);
  swift_retain();
  v20 = *(_QWORD *)(v3 - 200);
  v21 = *(_QWORD *)(v3 - 160);
  sub_1D451A308();
  sub_1D42BE93C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 136) + 8))(v21, v9);
  v22 = *(_QWORD *)(*(_QWORD *)(v3 - 152) + *(int *)(v6 + 68));
  v23 = (_QWORD *)sub_1D43479CC();
  v23[2] = v9;
  v23[3] = v16;
  v23[4] = *(_QWORD *)(v3 - 288);
  v23[5] = v17;
  v24 = *(_QWORD *)(v3 - 144);
  v23[6] = v18;
  v23[7] = v24;
  v23[8] = *(_QWORD *)(v3 - 128);
  sub_1D43D6770(v22, (uint64_t)sub_1D44820F4, (uint64_t)v23, *(_QWORD *)(v3 - 256), v16, *(_QWORD *)(v3 - 248), v24, *(_QWORD *)(v3 - 272));
  swift_release();
  sub_1D42F1FA0(v20, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 176) + 8));
  sub_1D44822D0();
}

void sub_1D44817AC()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D451A3F8();
  sub_1D42F1FA0(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 232) + 8));
  swift_release();
  sub_1D42CB520();
}

void sub_1D44817EC()
{
  swift_projectBox();
  _s15StatefulFlatMapVMa();
}

uint64_t sub_1D4481850(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);

  v4 = *(void (**)(uint64_t, uint64_t))(v1 + *(int *)(a1 + 60));
  swift_beginAccess();
  v4(v2, v3);
  return swift_endAccess();
}

void sub_1D44818A8(uint64_t a1)
{
  sub_1D4481380(a1);
}

void sub_1D44818BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x1E0C80A78](a1);
  sub_1D4482324();
  MEMORY[0x1E0C80A78](v1);
  sub_1D42BE768();
  sub_1D451A11C();
  sub_1D42BA1F0();
  MEMORY[0x1E0C80A78](v2);
  sub_1D448230C();
  sub_1D42B8B10(&qword_1EFE49BB0);
  sub_1D4482338();
  v3 = sub_1D451A134();
  swift_getAssociatedTypeWitness();
  sub_1D451B9E8();
  MEMORY[0x1D825E41C](MEMORY[0x1E0C95BC8], v3);
  v4 = sub_1D451A0D4();
  v5 = sub_1D451A278();
  MEMORY[0x1D825E41C](MEMORY[0x1E0C95950], v4);
  MEMORY[0x1D825E41C](MEMORY[0x1E0C960B0], v5);
  sub_1D4482338();
  v6 = sub_1D451A0E0();
  MEMORY[0x1D825E41C](MEMORY[0x1E0C959F8], v6);
  sub_1D4482338();
  sub_1D451A0A4();
  sub_1D4482344();
}

void sub_1D4481AA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v5 = MEMORY[0x1D825E41C](MEMORY[0x1E0C95B48], v2);
  *(_QWORD *)(v3 - 136) = v1;
  *(_QWORD *)(v3 - 128) = v2;
  *(_QWORD *)(v3 - 192) = v2;
  *(_QWORD *)(v3 - 120) = a1;
  *(_QWORD *)(v3 - 112) = v5;
  sub_1D4482338();
  sub_1D451A128();
  sub_1D4482344();
}

void sub_1D4481AE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 136) = v3;
  *(_QWORD *)(v4 - 128) = v2;
  *(_QWORD *)(v4 - 120) = v1;
  *(_QWORD *)(v4 - 112) = a1;
  type metadata accessor for ExpandResult();
}

void sub_1D4481AF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v7 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  sub_1D448230C();
  *(_QWORD *)(v5 - 280) = v8;
  *(_QWORD *)(v5 - 184) = *(_QWORD *)(v2 + 32);
  v9 = swift_allocBox();
  (*(void (**)(void))(v3 + *(int *)(v2 + 64)))();
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 168) + 16);
  *(_QWORD *)(v5 - 288) = v7;
  v11 = *(_QWORD *)(v5 - 224);
  v12 = v3;
  *(_QWORD *)(v5 - 304) = v3;
  *(_QWORD *)(v5 - 296) = a1;
  v13 = *(_QWORD *)(v5 - 272);
  sub_1D4340978(v11, v3, v10);
  v14 = v1;
  *(_QWORD *)(v5 - 312) = v1;
  v15 = *(_QWORD *)(v5 - 232);
  v16 = *(_QWORD *)(v5 - 248);
  sub_1D448234C(v16, v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16));
  v17 = (*(unsigned __int8 *)(v15 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v18 = *(_QWORD *)(v5 - 256) + v17 + 7;
  *(_QWORD *)(v5 - 256) = v4;
  v19 = v18 & 0xFFFFFFFFFFFFFFF8;
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v13;
  v20[3] = v14;
  v21 = *(_QWORD *)(v5 - 152);
  v20[4] = *(_QWORD *)(v5 - 184);
  v20[5] = v21;
  v22 = *(_QWORD *)(v5 - 216);
  v23 = *(_QWORD *)(v5 - 176);
  v20[6] = v22;
  v20[7] = v23;
  v20[8] = *(_QWORD *)(v5 - 144);
  sub_1D448234C((uint64_t)v20 + v17, v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 32));
  *(_QWORD *)((char *)v20 + v19) = v9;
  swift_retain();
  v24 = *(_QWORD *)(v5 - 208);
  v25 = *(_QWORD *)(v5 - 312);
  sub_1D451A3A4();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 168) + 8))(v11, v13);
  v26 = *(_QWORD *)(*(_QWORD *)(v5 - 304) + *(int *)(v2 + 68));
  v27 = (_QWORD *)sub_1D43479CC();
  v27[2] = v13;
  v27[3] = v25;
  v28 = *(_QWORD *)(v5 - 192);
  v29 = *(_QWORD *)(v5 - 152);
  v30 = *(_QWORD *)(v5 - 144);
  v27[4] = *(_QWORD *)(v5 - 184);
  v27[5] = v29;
  v31 = *(_QWORD *)(v5 - 176);
  v27[6] = v22;
  v27[7] = v31;
  v27[8] = v30;
  sub_1D43D6770(v26, (uint64_t)sub_1D4482278, (uint64_t)v27, v28, *(_QWORD *)(v5 - 240), *(_QWORD *)(v5 - 256), *(_QWORD *)(v5 - 264), *(_QWORD *)(v5 - 280));
  swift_release();
  sub_1D42F1FA0(v24, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 200) + 8));
  sub_1D44822D0();
}

void sub_1D4481DB0()
{
  swift_projectBox();
  _s18StatefulTryFlatMapVMa();
}

uint64_t sub_1D4481E14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);

  v4 = *(void (**)(uint64_t, uint64_t))(v1 + *(int *)(a1 + 60));
  swift_beginAccess();
  v4(v2, v3);
  return swift_endAccess();
}

uint64_t sub_1D4481E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v15;

  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a2;
  v15[3] = a3;
  v15[4] = a4;
  v15[5] = a5;
  v15[6] = a6;
  v15[7] = a7;
  v15[8] = a8;
  sub_1D42B28FC(&qword_1EFE49BB0);
  sub_1D451A3EC();
  return swift_release();
}

uint64_t sub_1D4481F38@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v7 = (char *)&v12 - v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v12 - v6, a1, AssociatedTypeWitness);
  swift_getAssociatedConformanceWitness();
  v8 = sub_1D451B7FC();
  if (v8)
  {
    v9 = v8;
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
  }
  else
  {
    v9 = swift_allocError();
    result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v11, v7, AssociatedTypeWitness);
  }
  *a2 = v9;
  return result;
}

void sub_1D448205C(uint64_t a1)
{
  sub_1D44818BC(a1);
}

void sub_1D4482070()
{
  sub_1D4482118((void (*)(_QWORD, __int128 *))_s15StatefulFlatMapVMa);
}

void sub_1D448207C()
{
  sub_1D44822EC();
}

void sub_1D44820C0()
{
  sub_1D44822A4();
  sub_1D44817EC();
}

void sub_1D44820E8()
{
  sub_1D43A1908();
}

uint64_t sub_1D44820F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 24) - 8) + 16))(a2, a1);
}

void sub_1D448210C()
{
  sub_1D4482118((void (*)(_QWORD, __int128 *))_s18StatefulTryFlatMapVMa);
}

void sub_1D4482118(void (*a1)(_QWORD, __int128 *))
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  __int128 v5;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_OWORD *)(v1 + 16);
  v4 = v2;
  v5 = *(_OWORD *)(v1 + 48);
  a1(0, &v3);
  JUMPOUT(0x1D4482158);
}

void sub_1D44821E0()
{
  _s18StatefulTryFlatMapVMa();
}

void sub_1D4482230()
{
  sub_1D44822A4();
  sub_1D4481DB0();
}

uint64_t sub_1D4482278(uint64_t a1)
{
  uint64_t *v1;

  return sub_1D4481E78(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t sub_1D4482290@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1D4481F38(a1, a2);
}

void sub_1D44822D0()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D44822D8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8);
  *v1 = *(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF8);
  v1[1] = v2;
  return swift_retain();
}

void sub_1D44822EC()
{
  _s15StatefulFlatMapVMa();
}

uint64_t sub_1D44822FC()
{
  _OWORD *v0;
  _OWORD *v1;

  *v1 = *v0;
  return swift_release();
}

uint64_t sub_1D4482338()
{
  return 255;
}

void sub_1D4482344()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D448234C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_1D4482354()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v1;
  *v1 = v0;
  v1[1] = sub_1D44823A4;
  return sub_1D4376DAC(v0 + 16);
}

uint64_t sub_1D44823A4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D4483BA4();
  if (v0)
    return (*(uint64_t (**)(_QWORD))(v1 + 8))(0);
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D44823EC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  sub_1D438C1B0();
  v3 = sub_1D438C548();
  sub_1D430C5D4(v3, v0);
  sub_1D438C088();
  v4 = sub_1D438C0A0();
  v2[29] = v4;
  sub_1D430C5D4(v0, v4 + 16);
  sub_1D430C5D4((uint64_t)(v2 + 4), v1);
  sub_1D438C040();
  v5 = sub_1D438C098();
  v2[30] = v5;
  sub_1D430C5D4(v1, v5 + 16);
  sub_1D438C090();
  v6 = sub_1D438C078();
  v2[31] = v6;
  sub_1D438BF60(v6);
  sub_1D438C080();
  v7 = (_QWORD *)swift_task_alloc();
  v2[32] = v7;
  sub_1D438BF90(v7, (uint64_t)sub_1D44824A0);
  return sub_1D438BF10();
}

uint64_t sub_1D44824A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_1D4483BC4(a1);
  if (v2)
    *(_QWORD *)(v1 + 280) = v2;
  sub_1D42B8EC8();
  return sub_1D431B32C();
}

uint64_t sub_1D44824E0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 272);
  sub_1D438C0E8();
  v2 = sub_1D43A83CC();
  if (v1)
  {
    swift_release();
    sub_1D42B8F48();
    *(_QWORD *)(v0 + 280) = v1;
    sub_1D42B8EC8();
    return sub_1D438C3C4();
  }
  else
  {
    v4 = v2;
    sub_1D4483C24();
    sub_1D42B8F48();
    v5 = swift_setDeallocating();
    sub_1D4376FD4(v5);
    sub_1D42E3F50();
    sub_1D42B8C84(0);
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(v4 & 1);
  }
}

uint64_t sub_1D448257C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1D4483BEC();
  sub_1D4376FD4(v1);
  sub_1D42E3F50();
  sub_1D438C1CC();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1D44825BC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v1;
  v2 = sub_1D42B8EF0(v1);
  return sub_1D4483B98(v2);
}

uint64_t sub_1D44825FC()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D4483BA4();
  if (v0)
    return (*(uint64_t (**)(void))(v1 + 8))();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4482640()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  sub_1D438C1B0();
  v3 = sub_1D438C548();
  sub_1D430C5D4(v3, v0);
  sub_1D438C088();
  v4 = sub_1D438C0A0();
  v2[29] = v4;
  sub_1D430C5D4(v0, v4 + 16);
  sub_1D430C5D4((uint64_t)(v2 + 4), v1);
  sub_1D438C040();
  v5 = sub_1D438C098();
  v2[30] = v5;
  sub_1D430C5D4(v1, v5 + 16);
  sub_1D438C090();
  v6 = sub_1D438C078();
  v2[31] = v6;
  sub_1D438BF60(v6);
  sub_1D438C080();
  v7 = (_QWORD *)swift_task_alloc();
  v2[32] = v7;
  sub_1D438BF90(v7, (uint64_t)sub_1D44826F4);
  return sub_1D438BF10();
}

uint64_t sub_1D44826F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_1D4483BC4(a1);
  if (v2)
    *(_QWORD *)(v1 + 280) = v2;
  sub_1D42B8EC8();
  return sub_1D431B32C();
}

uint64_t sub_1D4482734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 272);
  sub_1D438C0E8();
  sub_1D43A8414();
  if (v1)
  {
    swift_release();
    sub_1D42B8F48();
    *(_QWORD *)(v0 + 280) = v1;
    sub_1D42B8EC8();
    return sub_1D438C3C4();
  }
  else
  {
    v4 = v2;
    sub_1D4483C24();
    sub_1D42B8F48();
    v5 = swift_setDeallocating();
    sub_1D4376FD4(v5);
    sub_1D42E3F50();
    sub_1D42B8C84(0);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
  }
}

uint64_t sub_1D44827D0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1D4483BEC();
  sub_1D4376FD4(v1);
  sub_1D42E3F50();
  sub_1D438C1CC();
  return sub_1D42E39E4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4482804()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v1;
  v2 = sub_1D42B8EF0(v1);
  return sub_1D4483B98(v2);
}

uint64_t sub_1D4482844()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D4483BA4();
  if (v0)
    return (*(uint64_t (**)(void))(v1 + 8))();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4482888()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  sub_1D438C1B0();
  v3 = sub_1D438C548();
  sub_1D430C5D4(v3, v0);
  sub_1D438C088();
  v4 = sub_1D438C0A0();
  v2[29] = v4;
  sub_1D430C5D4(v0, v4 + 16);
  sub_1D430C5D4((uint64_t)(v2 + 4), v1);
  sub_1D438C040();
  v5 = sub_1D438C098();
  v2[30] = v5;
  sub_1D430C5D4(v1, v5 + 16);
  sub_1D438C090();
  v6 = sub_1D438C078();
  v2[31] = v6;
  sub_1D438BF60(v6);
  sub_1D438C080();
  v7 = (_QWORD *)swift_task_alloc();
  v2[32] = v7;
  sub_1D438BF90(v7, (uint64_t)sub_1D448293C);
  return sub_1D438BF10();
}

uint64_t sub_1D448293C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(*v2 + 264) = a1;
  swift_task_dealloc();
  if (v1)
    *(_QWORD *)(v3 + 312) = v1;
  sub_1D42B8EC8();
  return sub_1D431B32C();
}

uint64_t sub_1D44829A0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v0[34] = *(_QWORD *)(v0[33] + 24);
  v3 = (uint64_t (*)(void))((char *)&dword_1EFE4E390 + dword_1EFE4E390);
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  v0[35] = v1;
  *v1 = v0;
  v1[1] = sub_1D4482A0C;
  return sub_1D430C35C(v3);
}

uint64_t sub_1D4482A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 288) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    swift_release();
    *(_QWORD *)(v6 + 296) = a2;
    *(_QWORD *)(v6 + 304) = a1;
  }
  sub_1D42B8EC8();
  return swift_task_switch();
}

uint64_t sub_1D4482A88()
{
  uint64_t v0;

  swift_release();
  sub_1D42B8F48();
  *(_QWORD *)(v0 + 312) = *(_QWORD *)(v0 + 288);
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4482AC4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1D4483BEC();
  sub_1D4376FD4(v1);
  sub_1D42E3F50();
  sub_1D438C1CC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D4482B00()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v0[32] = sub_1D42B28FC(&qword_1EFE54180);
  v0[33] = sub_1D42F9B80();
  v1 = (_QWORD *)swift_task_alloc();
  v0[34] = v1;
  v2 = sub_1D42B8EF0(v1);
  return sub_1D4483B98(v2);
}

uint64_t sub_1D4482B5C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D438BFFC();
  if (v0)
  {
    swift_task_dealloc();
    return sub_1D42E39E4(*(uint64_t (**)(void))(v1 + 8));
  }
  else
  {
    sub_1D42B8EC8();
    return sub_1D431B32C();
  }
}

uint64_t sub_1D4482BA0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  sub_1D438C1B0();
  v3 = sub_1D438C05C();
  sub_1D430C5D4(v3, v0);
  sub_1D438C088();
  v4 = sub_1D438C0A0();
  v2[35] = v4;
  sub_1D430C5D4(v0, v4 + 16);
  sub_1D430C5D4((uint64_t)(v2 + 4), v1);
  sub_1D438C040();
  v5 = sub_1D438C098();
  v2[36] = v5;
  sub_1D430C5D4(v1, v5 + 16);
  sub_1D438C090();
  v6 = sub_1D438C078();
  v2[37] = v6;
  sub_1D438BF60(v6);
  sub_1D438C080();
  swift_retain();
  v7 = (_QWORD *)swift_task_alloc();
  v2[38] = v7;
  sub_1D438BF90(v7, (uint64_t)sub_1D4482C60);
  return sub_1D438BF10();
}

uint64_t sub_1D4482C60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v5)(void);
  uint64_t v6;

  sub_1D438BF6C(a1);
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42F1DEC();
  }
  else
  {
    v4 = (_QWORD *)sub_1D42E3968();
    *(_QWORD *)(v2 + 328) = v4;
    v5 = (uint64_t (*)(void))sub_1D438C048(v4, (uint64_t)sub_1D4482CBC, v6);
    return sub_1D430C35C(v5);
  }
}

uint64_t sub_1D4482CBC(uint64_t a1, uint64_t a2)
{
  sub_1D438BEE8(a1, a2);
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

void sub_1D4482CF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 312) + 24) + 16))
  {
    sub_1D4483BFC();
    v2 = sub_1D4483C34();
    sub_1D4388368(v2, v3, v4, v5);
    swift_release();
    swift_release();
    sub_1D4483B5C(&qword_1EFE54188, &qword_1EFE54180);
    sub_1D438C118();
    sub_1D4483C60();
    swift_release();
    sub_1D4483C54();
    v6 = swift_setDeallocating();
    sub_1D4376FD4(v6);
    sub_1D42E3F50();
    sub_1D438C1CC();
    swift_task_dealloc();
    sub_1D438BF24(v1, *(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D4482DAC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1[28] = a1;
  v2 = sub_1D4519D20();
  v1[29] = v2;
  v1[30] = *(_QWORD *)(v2 - 8);
  v1[31] = swift_task_alloc();
  v1[32] = swift_task_alloc();
  v3 = (_QWORD *)swift_task_alloc();
  v1[33] = v3;
  v4 = sub_1D42B8EF0(v3);
  return sub_1D4376DAC(v4);
}

uint64_t sub_1D4482E38()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return sub_1D42E39E4(*(uint64_t (**)(void))(v2 + 8));
  }
  else
  {
    sub_1D42B8EC8();
    return sub_1D431B32C();
  }
}

uint64_t sub_1D4482E9C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  sub_1D438C1B0();
  v3 = sub_1D438C548();
  sub_1D430C5D4(v3, v0);
  sub_1D438C088();
  v4 = sub_1D438C0A0();
  v2[34] = v4;
  sub_1D430C5D4(v0, v4 + 16);
  sub_1D430C5D4((uint64_t)(v2 + 4), v1);
  sub_1D438C040();
  v5 = sub_1D438C098();
  v2[35] = v5;
  sub_1D430C5D4(v1, v5 + 16);
  sub_1D438C090();
  v6 = sub_1D438C078();
  v2[36] = v6;
  sub_1D438BF60(v6);
  sub_1D438C080();
  v7 = (_QWORD *)swift_task_alloc();
  v2[37] = v7;
  sub_1D438BF90(v7, (uint64_t)sub_1D4482F50);
  return sub_1D438BF10();
}

uint64_t sub_1D4482F50(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[38] = a1;
  v3[39] = v1;
  swift_task_dealloc();
  if (v1)
    v3[40] = v1;
  sub_1D42B8EC8();
  return sub_1D431B32C();
}

uint64_t sub_1D4482FB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 312);
  v2 = *(_QWORD *)(v0 + 248);
  sub_1D438C0E8();
  sub_1D43A7E34(v2);
  if (v1)
  {
    swift_release();
    sub_1D42B8F48();
    *(_QWORD *)(v0 + 320) = v1;
    sub_1D42B8EC8();
    return swift_task_switch();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 248);
    v4 = *(_QWORD *)(v0 + 256);
    v6 = *(_QWORD *)(v0 + 232);
    v7 = *(_QWORD *)(v0 + 240);
    v8 = *(_QWORD *)(v0 + 224);
    swift_release();
    sub_1D42B8F48();
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
    v9(v4, v5, v6);
    swift_release();
    sub_1D438C1CC();
    v9(v8, v4, v6);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1D44830B4()
{
  uint64_t v0;

  swift_release();
  sub_1D42B8C84((uint64_t *)(v0 + 16));
  swift_task_dealloc();
  swift_task_dealloc();
  return sub_1D42E39E4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D44830FC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v0[32] = sub_1D42B28FC(&qword_1EFE54168);
  v0[33] = sub_1D42F9B80();
  v1 = (_QWORD *)swift_task_alloc();
  v0[34] = v1;
  v2 = sub_1D42B8EF0(v1);
  return sub_1D4483B98(v2);
}

uint64_t sub_1D4483158()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D438BFFC();
  if (v0)
  {
    swift_task_dealloc();
    return sub_1D42E39E4(*(uint64_t (**)(void))(v1 + 8));
  }
  else
  {
    sub_1D42B8EC8();
    return sub_1D431B32C();
  }
}

uint64_t sub_1D448319C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  sub_1D438C1B0();
  v3 = sub_1D438C05C();
  sub_1D430C5D4(v3, v0);
  sub_1D438C088();
  v4 = sub_1D438C0A0();
  v2[35] = v4;
  sub_1D430C5D4(v0, v4 + 16);
  sub_1D430C5D4((uint64_t)(v2 + 4), v1);
  sub_1D438C040();
  v5 = sub_1D438C098();
  v2[36] = v5;
  sub_1D430C5D4(v1, v5 + 16);
  sub_1D438C090();
  v6 = sub_1D438C078();
  v2[37] = v6;
  sub_1D438BF60(v6);
  sub_1D438C080();
  swift_retain();
  v7 = (_QWORD *)swift_task_alloc();
  v2[38] = v7;
  sub_1D438BF90(v7, (uint64_t)sub_1D448325C);
  return sub_1D438BF10();
}

uint64_t sub_1D448325C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v5)(void);
  uint64_t v6;

  sub_1D438BF6C(a1);
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42F1DEC();
  }
  else
  {
    v4 = (_QWORD *)sub_1D42E3968();
    *(_QWORD *)(v2 + 328) = v4;
    v5 = (uint64_t (*)(void))sub_1D438C048(v4, (uint64_t)sub_1D44832B8, v6);
    return sub_1D430C35C(v5);
  }
}

uint64_t sub_1D44832B8(uint64_t a1, uint64_t a2)
{
  sub_1D438BEE8(a1, a2);
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

void sub_1D44832F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 312) + 24) + 16))
  {
    sub_1D4483BFC();
    v2 = sub_1D4483C34();
    sub_1D438837C(v2, v3, v4, v5);
    swift_release();
    swift_release();
    sub_1D4483B5C(&qword_1EFE54170, &qword_1EFE54168);
    sub_1D438C118();
    sub_1D4483C60();
    swift_release();
    sub_1D4483C54();
    v6 = swift_setDeallocating();
    sub_1D4376FD4(v6);
    sub_1D42E3F50();
    sub_1D438C1CC();
    swift_task_dealloc();
    sub_1D438BF24(v1, *(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1D44833A8(uint64_t a1)
{
  unint64_t result;

  result = sub_1D439EAC0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1D44833CC(uint64_t a1)
{
  unint64_t result;

  result = sub_1D43AA60C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

void sub_1D44833F0(uint64_t a1)
{
  uint64_t v2;

  sub_1D4483458(&qword_1EFE4EE60, MEMORY[0x1E0CB09B8]);
  *(_QWORD *)(a1 + 16) = v2;
}

void sub_1D4483424(uint64_t a1)
{
  uint64_t v2;

  sub_1D4483458(&qword_1EFE50C60, MEMORY[0x1E0CB09E0]);
  *(_QWORD *)(a1 + 16) = v2;
}

void sub_1D4483458(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = sub_1D4519D20();
    atomic_store(MEMORY[0x1D825E41C](a2, v4), a1);
  }
  sub_1D42B6E24();
}

uint64_t sub_1D4483494(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  v5 = *a3;
  result = MEMORY[0x1D825E41C](&unk_1D4546A68, a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D44834D4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  v5 = *a3;
  result = MEMORY[0x1D825E41C](&unk_1D4546A90, a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D4483514(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  v5 = *a3;
  result = MEMORY[0x1D825E41C](&unk_1D4546AB8, a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D4483554(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  v5 = *a3;
  result = MEMORY[0x1D825E41C](&unk_1D4546AE0, a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D4483594(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1D44835BC(a1, a2, a3, (uint64_t)&unk_1D4546B08, MEMORY[0x1E0DEAF10]);
}

uint64_t sub_1D44835A8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1D44835BC(a1, a2, a3, (uint64_t)&unk_1D4546B30, MEMORY[0x1E0DEAF40]);
}

uint64_t sub_1D44835BC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  v11 = *a3;
  v8 = v11;
  *(_QWORD *)(a1 + 8) = MEMORY[0x1D825E41C](a4, a2, &v11);
  v10 = v8;
  result = MEMORY[0x1D825E41C](a5, a2, &v10);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1D4483620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;

  v4[3] = a3;
  v4[4] = a4;
  v4[2] = a1;
  v5 = sub_1D451B160();
  v4[5] = v5;
  v4[6] = *(_QWORD *)(v5 - 8);
  v4[7] = sub_1D42F9B80();
  v6 = (_QWORD *)swift_task_alloc();
  v4[8] = v6;
  *v6 = v4;
  v6[1] = sub_1D4483690;
  return sub_1D4376978();
}

uint64_t sub_1D4483690(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t (*v4)(void);
  _QWORD *v5;
  uint64_t v7;

  v3 = (_QWORD *)*v2;
  v3[9] = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    v4 = (uint64_t (*)(void))v3[1];
  }
  else
  {
    v5 = (_QWORD *)sub_1D42E3968();
    v3[10] = v5;
    v4 = (uint64_t (*)(void))sub_1D438C048(v5, (uint64_t)sub_1D4483708, v7);
  }
  return sub_1D430C35C(v4);
}

uint64_t sub_1D4483708(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 88) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_BYTE *)(v4 + 112) = a1 & 1;
  sub_1D42B8EC8();
  return sub_1D42F1DEC();
}

uint64_t sub_1D4483770()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  if (*(_BYTE *)(v0 + 112) == 1)
  {
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v1;
    *v1 = v0;
    v1[1] = sub_1D4483808;
    return sub_1D4376B14(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 16);
    v4 = *(_QWORD *)(v0 + 24);
    swift_release();
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v3, 1, 1, v4);
    sub_1D4483C4C();
    return sub_1D42E39E4(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_1D4483808()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4483860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  swift_release();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v1, 0, 1, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v5, v1, v3);
  sub_1D4483C4C();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D44838DC()
{
  uint64_t v0;

  swift_release();
  sub_1D4483C4C();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D448390C()
{
  uint64_t v0;

  swift_release();
  sub_1D4483C4C();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D448393C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v8 = *(_QWORD *)(a4 - 8);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  v10 = *(_QWORD *)(a3 + 16);
  *v9 = v4;
  v9[1] = sub_1D4322434;
  return sub_1D4483620(a1, a2, v10, v8);
}

uint64_t sub_1D44839AC(uint64_t a1, uint64_t a2, _UNKNOWN **a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v18[3];
  uint64_t v19;
  _UNKNOWN **v20;
  _UNKNOWN **v21;

  v21 = a3;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v18[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v8);
  v14 = (char *)&v18[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D447DE84();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v3, a2);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v14, 1, v6) == 1)
  {
    v19 = MEMORY[0x1E0DEAFA0];
    v20 = &off_1E97AD880;
    LOBYTE(v18[0]) = 0;
    sub_1D4483C18();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v14, v6);
    v19 = MEMORY[0x1E0DEAFA0];
    v20 = &off_1E97AD880;
    LOBYTE(v18[0]) = 1;
    sub_1D4483C18();
    if (!v4)
    {
      sub_1D42B5400((uint64_t)v18);
      v19 = v6;
      v20 = v21;
      v15 = sub_1D430BBF0(v18);
      (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 16))(v15, v10, v6);
      sub_1D4483C18();
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  swift_release();
  return sub_1D42B5400((uint64_t)v18);
}

uint64_t sub_1D4483B44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D44839AC(a1, a2, *(_UNKNOWN ***)(a3 - 8));
}

void sub_1D4483B5C(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = sub_1D42B8B10(a2);
    atomic_store(MEMORY[0x1D825E41C](&unk_1D4532BA0, v3), a1);
  }
  sub_1D42B6E24();
}

uint64_t sub_1D4483B98(uint64_t a1)
{
  return sub_1D4376DAC(a1);
}

uint64_t sub_1D4483BA4()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t sub_1D4483BC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v3 - 8) = *v2;
  *(_QWORD *)(v3 - 8) = *v2;
  *(_QWORD *)(v4 + 264) = a1;
  *(_QWORD *)(v4 + 272) = v1;
  return swift_task_dealloc();
}

uint64_t sub_1D4483BEC()
{
  return swift_setDeallocating();
}

uint64_t sub_1D4483BFC()
{
  return swift_retain();
}

void sub_1D4483C18()
{
  uint64_t v0;

  sub_1D447DF1C((_QWORD *)(v0 - 120));
}

uint64_t sub_1D4483C24()
{
  return swift_release();
}

uint64_t sub_1D4483C34()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4483C4C()
{
  return swift_task_dealloc();
}

void sub_1D4483C54()
{
  uint64_t v0;
  uint64_t *v1;

  sub_1D42D7018(v0, v1);
}

uint64_t sub_1D4483C60()
{
  return swift_release();
}

uint64_t sub_1D4483C6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  _BYTE *v7;
  _BYTE v9[32];

  v5 = v3;
  sub_1D42B294C(a2, (uint64_t)v9);
  if (swift_dynamicCast())
  {
    v5 = a3(a1);
    sub_1D42CB5C8();
  }
  else
  {
    sub_1D42BE058();
    sub_1D42B6D0C();
    *v7 = 6;
    sub_1D4312028();
  }
  return v5;
}

uint64_t sub_1D4483D2C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  _BYTE *v3;

  if (*(_QWORD *)(result + 16) <= a2)
  {
    sub_1D42BE058();
    v2 = sub_1D42B6D0C();
    return sub_1D4485668(v2, v3);
  }
  else if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    return *(_QWORD *)(result + 16 * a2 + 32);
  }
  return result;
}

uint64_t sub_1D4483D84(void *a1)
{
  _BYTE *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t p_ivar_base_size;
  id v17;
  uint64_t inited;
  unint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t result;
  uint64_t v39;
  int v40;
  uint64_t v41;
  id v42;
  int v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  unint64_t v49;
  uint64_t v50;
  _DWORD v51[2];
  uint64_t v52;
  int v53;
  int v54;
  char v55;
  __int128 v56;
  uint64_t v57;
  _BYTE *v58;

  sub_1D437C144(a1);
  if (v2)
    return (uint64_t)v1;
  v4 = v3;
  v5 = objc_msgSend(v3, sel_shape);
  sub_1D42E9D88(0, (unint64_t *)&qword_1EFE404B0);
  v6 = sub_1D44856A4();

  sub_1D42D2E5C(0, (v6 & 0xC000000000000001) == 0, v6);
  if ((v6 & 0xC000000000000001) != 0)
    v7 = (id)MEMORY[0x1D825CD78](0, v6);
  else
    v7 = *(id *)(v6 + 32);
  v8 = v7;
  sub_1D42CB5C8();
  v58 = objc_msgSend(v8, sel_integerValue);

  v10 = sub_1D435EBD4(v9, sel_shape);
  v11 = sub_1D44856A4();

  v13 = sub_1D435EBD4(v12, sel_shape);
  v14 = sub_1D44856A4();

  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_1D42EA3D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  p_ivar_base_size = v15 - 1;
  if (__OFSUB__(v15, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  sub_1D42D2E5C(v15 - 1, (v11 & 0xC000000000000001) == 0, v11);
  if ((v11 & 0xC000000000000001) != 0)
  {
LABEL_34:
    v17 = (id)MEMORY[0x1D825CD78](v15 - 1, v11);
    goto LABEL_9;
  }
  v17 = *(id *)(v11 + 8 * p_ivar_base_size + 32);
LABEL_9:
  inited = (uint64_t)v17;
  swift_bridgeObjectRelease();
  v19 = (unint64_t)objc_msgSend((id)inited, sel_integerValue);

  if ((v19 & 0x8000000000000000) == 0 && !HIDWORD(v19))
  {
    v50 = (uint64_t)v1;
    v20 = *(unsigned int *)&v1[OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters + 4];
    v21 = *(_DWORD *)&v1[OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters + 16];
    v22 = *(_DWORD *)&v1[OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters + 20];
    v23 = v1[OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters + 24];
    v51[0] = *(_DWORD *)&v1[OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters];
    v52 = *(_QWORD *)&v1[OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters + 8];
    v51[1] = v20;
    v53 = v21;
    v54 = v22;
    v55 = v23;
    v56 = *(_OWORD *)&v1[OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters + 28];
    v57 = *(_QWORD *)&v1[OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters + 44];
    v24 = sub_1D44F30FC(v19, v51);
    v25 = v24;
    v26 = v20 * (unint64_t)v24;
    if ((v20 * (unsigned __int128)v24) >> 64 == v26 >> 63)
    {
      v49 = v19;
      v19 = sub_1D42B28FC((uint64_t *)&unk_1EFE403A0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1D4533EC0;
      p_ivar_base_size = 1;
      v1 = v58;
      *(_QWORD *)(inited + 32) = v58;
      *(_QWORD *)(inited + 40) = 1;
      *(_QWORD *)(inited + 48) = v20;
      *(_QWORD *)(inited + 56) = v25;
      v27 = swift_initStackObject();
      *(_OWORD *)(v27 + 16) = xmmword_1D4533EC0;
      *(_QWORD *)(v27 + 32) = v26;
      *(_QWORD *)(v27 + 40) = v26;
      *(_QWORD *)(v27 + 48) = 1;
      *(_QWORD *)(v27 + 56) = v20;
      sub_1D4436950(v27, inited);
      if ((unint64_t)(v28 - 0x2000000000000000) >> 62 == 3)
      {
        v29 = 0;
        sub_1D4434AD0(4 * v28, 4, inited, 65568, v27);
        v19 = v30;
        sub_1D435EB80();
        v31 = swift_setDeallocating();
        p_ivar_base_size = (uint64_t)&SNVGGishMusicModel__metaData.ivar_base_size;
        v32 = sub_1D435EBD4(v31, sel_strides);
        inited = sub_1D44856A4();

        if (!((unint64_t)inited >> 62))
        {
          v33 = *(_QWORD *)((inited & 0xFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_15;
        }
LABEL_37:
        if (inited < 0)
          v29 = inited;
        else
          v29 = inited & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v33 = sub_1D42EA3D8();
        sub_1D435EB80();
LABEL_15:
        if (v33 >= 1)
        {
          sub_1D42D2E5C(0, (inited & 0xC000000000000001) == 0, inited);
          if ((inited & 0xC000000000000001) != 0)
            v34 = (id)MEMORY[0x1D825CD78](0, inited);
          else
            v34 = *(id *)(inited + 32);
          v35 = (uint64_t)v34;
          sub_1D435EB80();
          sub_1D44856B8();
          if (v29)
          {
LABEL_19:

LABEL_21:
            return (uint64_t)v1;
          }
          v39 = p_ivar_base_size;
          v40 = sub_1D44856F4();

          v35 = (uint64_t)objc_msgSend((id)v19, (SEL)(v39 + 310));
          v41 = sub_1D44856A4();

          if ((unint64_t)v41 >> 62)
          {
            if (v41 < 0)
              v29 = v41;
            else
              v29 = v41 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain();
            sub_1D42EA3D8();
            sub_1D44856DC();
          }
          else
          {
            v35 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          if (v35 >= 1)
          {
            sub_1D42D2E5C(0, (v41 & 0xC000000000000001) == 0, v41);
            if ((v41 & 0xC000000000000001) != 0)
              MEMORY[0x1D825CD78](0, v41);
            else
              v42 = *(id *)(v41 + 32);
            sub_1D44856DC();
            sub_1D44856B8();
            if (!v29)
            {
              v43 = sub_1D44856F4();

              v44 = objc_retainAutorelease(v4);
              v45 = objc_msgSend(v44, sel_dataPointer);
              sub_1D435EBD4((uint64_t)v45, sel_count);
              sub_1D448528C((uint64_t)v45, (id)v19, (uint64_t)v1, v40, v43, v49, v50);
              sub_1D42B28FC((uint64_t *)&unk_1EFE40390);
              v46 = swift_initStackObject();
              *(_OWORD *)(v46 + 16) = xmmword_1D45261D0;
              v47 = *(_QWORD *)(v50 + OBJC_IVAR____SNLogMelSpectrogramCustomModel_outputFeatureName + 8);
              *(_QWORD *)(v46 + 32) = *(_QWORD *)(v50 + OBJC_IVAR____SNLogMelSpectrogramCustomModel_outputFeatureName);
              *(_QWORD *)(v46 + 40) = v47;
              v48 = (void *)objc_opt_self();
              swift_bridgeObjectRetain();
              *(_QWORD *)(v46 + 48) = objc_msgSend(v48, sel_featureValueWithMultiArray_, v19);
              sub_1D42E9D88(0, (unint64_t *)&qword_1EFE4D470);
              sub_1D451A5E4();
              sub_1D4364B70();
              sub_1D42B7204();
              objc_allocWithZone(MEMORY[0x1E0C9E8F8]);
              v1 = sub_1D4392954();

              return (uint64_t)v1;
            }
            goto LABEL_19;
          }
        }
        sub_1D42BE058();
        v36 = sub_1D42B6D0C();
        sub_1D4485668(v36, v37);
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_37;
  }
  sub_1D42DCED4();
  result = sub_1D451B550();
  __break(1u);
  return result;
}

uint64_t sub_1D4484418()
{
  uint64_t result;

  type metadata accessor for SNLogMelType(0);
  result = sub_1D451A5E4();
  qword_1EFEA7A40 = result;
  return result;
}

uint64_t sub_1D4484458()
{
  uint64_t result;

  type metadata accessor for SNLogMelSpectrumNormalizationStrategy(0);
  result = sub_1D451A5E4();
  qword_1EFEA7A48 = result;
  return result;
}

uint64_t sub_1D4484498()
{
  uint64_t result;

  sub_1D42B28FC(qword_1EFE541B8);
  result = sub_1D451A5E4();
  qword_1EFEA7A50 = result;
  return result;
}

void sub_1D44844DC(uint64_t a1, uint64_t a2)
{
  float *v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  float v6;

  sub_1D448565C(a1, a2);
  if (!v3)
  {
    sub_1D44856AC();
    sub_1D435EBD4(v5, sel_doubleValue);
    sub_1D446B6E0();
    v6 = v4;
    *v2 = v6;
  }
  sub_1D43073C8();
}

void sub_1D4484534(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  sub_1D448565C(a1, a2);
  if (!v3)
  {
    sub_1D448567C();
    sub_1D435EBD4(v5, sel_unsignedIntValue);
    sub_1D4485688();
    *(_DWORD *)(v2 + 4) = v4;
  }
  sub_1D4377BF8();
}

void sub_1D4484584(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  float v6;

  sub_1D448565C(a1, a2);
  if (!v3)
  {
    sub_1D44856AC();
    sub_1D435EBD4(v5, sel_doubleValue);
    sub_1D446B6E0();
    v6 = v4;
    *(float *)(v2 + 8) = v6;
  }
  sub_1D43073C8();
}

void sub_1D44845DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  float v6;

  sub_1D448565C(a1, a2);
  if (!v3)
  {
    sub_1D44856AC();
    sub_1D435EBD4(v5, sel_doubleValue);
    sub_1D446B6E0();
    v6 = v4;
    *(float *)(v2 + 12) = v6;
  }
  sub_1D43073C8();
}

void sub_1D4484634(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v4;

  if (qword_1EFE48EF8 != -1)
    swift_once();
  v4 = sub_1D44856E8(qword_1EFEA7A40, a2, (uint64_t (*)(uint64_t))sub_1D4495AB8);
  if (!v2)
    *(_DWORD *)(a1 + 16) = v4;
  sub_1D42BE888();
}

void sub_1D448469C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v4;

  if (qword_1EFE48F00 != -1)
    swift_once();
  v4 = sub_1D44856E8(qword_1EFEA7A48, a2, (uint64_t (*)(uint64_t))sub_1D4495AB8);
  if (!v2)
    *(_DWORD *)(a1 + 48) = v4;
  sub_1D42BE888();
}

void sub_1D4484704(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  sub_1D448565C(a1, a2);
  if (!v3)
  {
    sub_1D448567C();
    sub_1D435EBD4(v5, sel_unsignedIntValue);
    sub_1D4485688();
    *(_DWORD *)(v2 + 28) = v4;
  }
  sub_1D4377BF8();
}

void sub_1D4484754(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  sub_1D448565C(a1, a2);
  if (!v3)
  {
    sub_1D448567C();
    sub_1D435EBD4(v5, sel_unsignedIntValue);
    sub_1D4485688();
    *(_DWORD *)(v2 + 32) = v4;
  }
  sub_1D4377BF8();
}

void sub_1D44847A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  sub_1D448565C(a1, a2);
  if (!v3)
  {
    sub_1D448567C();
    sub_1D435EBD4(v5, sel_unsignedIntValue);
    sub_1D4485688();
    *(_DWORD *)(v2 + 36) = v4;
  }
  sub_1D4377BF8();
}

void sub_1D44847F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  sub_1D448565C(a1, a2);
  if (!v3)
  {
    sub_1D448567C();
    sub_1D435EBD4(v5, sel_unsignedIntValue);
    sub_1D4485688();
    *(_DWORD *)(v2 + 40) = v4;
  }
  sub_1D4377BF8();
}

void sub_1D4484844(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  sub_1D448565C(a1, a2);
  if (!v3)
  {
    sub_1D4442D80();
    sub_1D435EBD4(v5, sel_intValue);
    sub_1D4485688();
    *(_DWORD *)(v2 + 44) = v4;
  }
  sub_1D4377BF8();
}

uint64_t sub_1D448489C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t (*v23)(__int128 *, __int128 *);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  int v33;
  int v34;
  int v35;
  char v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v46;
  __int128 v47;
  _OWORD v48[2];
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  _BYTE v53[36];
  int64_t v54;

  v5 = a1[1];
  v52 = *a1;
  *(_OWORD *)v53 = v5;
  *(_OWORD *)&v53[16] = a1[2];
  *(_DWORD *)&v53[32] = *((_DWORD *)a1 + 12);
  v46 = a2 + 64;
  v6 = 1 << *(_BYTE *)(a2 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a2 + 64);
  v54 = (unint64_t)(v6 + 63) >> 6;
  v44 = v54 - 1;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (v8)
  {
    v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v12 = v11 | (v10 << 6);
LABEL_6:
    v13 = *(_QWORD *)(a2 + 56);
    v14 = (_QWORD *)(*(_QWORD *)(a2 + 48) + 16 * v12);
    v15 = v14[1];
    *(_QWORD *)&v47 = *v14;
    *((_QWORD *)&v47 + 1) = v15;
    sub_1D42B294C(v13 + 32 * v12, (uint64_t)v48);
    swift_bridgeObjectRetain();
LABEL_16:
    sub_1D44045E4((uint64_t)&v47, (uint64_t)&v49);
    v18 = v50;
    if (!v50)
    {
      result = swift_release();
      v33 = DWORD1(v52);
      v34 = *(_DWORD *)v53;
      v35 = *(_DWORD *)&v53[4];
      v36 = v53[8];
      v37 = *(_OWORD *)&v53[12];
      v38 = *(_QWORD *)&v53[28];
      v39 = *((_QWORD *)&v52 + 1);
      *(_DWORD *)a3 = v52;
      *(_DWORD *)(a3 + 4) = v33;
      *(_QWORD *)(a3 + 8) = v39;
      *(_DWORD *)(a3 + 16) = v34;
      *(_DWORD *)(a3 + 20) = v35;
      *(_BYTE *)(a3 + 24) = v36;
      *(_OWORD *)(a3 + 28) = v37;
      *(_QWORD *)(a3 + 44) = v38;
      return result;
    }
    v19 = v49;
    sub_1D42B293C(&v51, &v47);
    if (qword_1EFE48F08 != -1)
      swift_once();
    v20 = qword_1EFEA7A50;
    if (*(_QWORD *)(qword_1EFEA7A50 + 16) && (v21 = sub_1D4366B34(v19, v18), (v22 & 1) != 0))
    {
      v23 = *(uint64_t (**)(__int128 *, __int128 *))(*(_QWORD *)(v20 + 56) + 16 * v21);
      swift_retain();
      swift_bridgeObjectRelease();
      v24 = v23(&v52, &v47);
      if (v3)
      {
        v40 = swift_release();
        sub_1D43CBA70(v40, v41, v42, v43);
        return swift_release();
      }
      sub_1D43CBA70(v24, v25, v26, v27);
      result = swift_release();
    }
    else
    {
      v28 = swift_bridgeObjectRelease();
      result = sub_1D43CBA70(v28, v29, v30, v31);
    }
  }
  v16 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v16 >= v54)
    goto LABEL_15;
  v17 = *(_QWORD *)(v46 + 8 * v16);
  if (v17)
  {
LABEL_10:
    v8 = (v17 - 1) & v17;
    v12 = __clz(__rbit64(v17)) + (v16 << 6);
    v10 = v16;
    goto LABEL_6;
  }
  v10 += 2;
  if (v16 + 1 >= v54)
  {
    v10 = v16;
LABEL_15:
    v8 = 0;
    memset(v48, 0, sizeof(v48));
    v47 = 0u;
    goto LABEL_16;
  }
  v17 = *(_QWORD *)(v46 + 8 * v10);
  if (v17)
  {
    ++v16;
    goto LABEL_10;
  }
  if (v16 + 2 >= v54)
    goto LABEL_15;
  v17 = *(_QWORD *)(v46 + 8 * (v16 + 2));
  if (v17)
  {
    v16 += 2;
    goto LABEL_10;
  }
  v32 = v16 + 3;
  if (v16 + 3 >= v54)
  {
    v10 = v16 + 2;
    goto LABEL_15;
  }
  v17 = *(_QWORD *)(v46 + 8 * v32);
  if (v17)
  {
    v16 += 3;
    goto LABEL_10;
  }
  while (1)
  {
    v16 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v16 >= v54)
    {
      v10 = v44;
      goto LABEL_15;
    }
    v17 = *(_QWORD *)(v46 + 8 * v16);
    ++v32;
    if (v17)
      goto LABEL_10;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1D4484BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  BOOL v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  unsigned __int8 v34;
  uint64_t v35[3];
  uint64_t v36[2];
  uint64_t v37;
  char v38;

  v9 = sub_1D44856D0(a1, a2, a3, a4, a5, a6, a7, a8, v28);
  v17 = sub_1D4404834(v9, v10, v11, v12, v13, v14, v15, v16, v28, v31, v33);
  if (v34 > 0xFDu
    || (sub_1D4404750(v17, v18, v19, v20, v21, v22, v23, v24, v29, v30, v32, v33), !v27)
    || (sub_1D437D768(v35, (uint64_t)v36), sub_1D437D768(v36, (uint64_t)&v37), v38)
    || *(_QWORD *)(v37 + 16) != 3)
  {
LABEL_13:
    type metadata accessor for SNError();
    sub_1D4342D78(0x80000001D4551120, 0xD00000000000004ALL, (uint64_t)"expected constraint: <BATCH>x<NCHAN>x<NSAMPLES> (NCHAN is in range [1, 1])");
    return sub_1D4312028();
  }
  result = sub_1D4483D2C(v37, 1);
  if (v8)
    return result;
  if (result == v26)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (__OFSUB__(v26, 1))
  {
LABEL_16:
    __break(1u);
    return result;
  }
  v27 = result == 1 && v26 == 2;
  if (!v27)
    goto LABEL_13;
  return result;
}

uint64_t sub_1D4484CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  unsigned __int8 v38;
  uint64_t v39[3];
  uint64_t v40[2];
  uint64_t v41;
  char v42;

  v10 = sub_1D44856D0(a1, a2, a3, a4, a5, a6, a7, a8, v32);
  v18 = sub_1D4404834(v10, v11, v12, v13, v14, v15, v16, v17, v32, v35, v37);
  if (v38 > 0xFDu
    || (sub_1D4404750(v18, v19, v20, v21, v22, v23, v24, v25, v33, v34, v36, v37), !v29)
    || (sub_1D437D768(v39, (uint64_t)v40), sub_1D437D768(v40, (uint64_t)&v41), v42)
    || (v26 = v41, *(_QWORD *)(v41 + 16) != 4))
  {
LABEL_13:
    type metadata accessor for SNError();
    return sub_1D4312028();
  }
  result = sub_1D4483D2C(v41, 1);
  if (v8)
    return result;
  if (result == v28)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (__OFSUB__(v28, 1))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v29 = result == 1 && v28 == 2;
  if (!v29)
    goto LABEL_13;
  result = sub_1D4483D2C(v26, 2);
  if (result == v30)
    goto LABEL_25;
  if (__OFSUB__(v30, 1))
  {
LABEL_26:
    __break(1u);
    return result;
  }
  if (result != a2 || v30 - 1 != a2)
    goto LABEL_13;
  return result;
}

uint64_t sub_1D4484DE8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[24];
  _BYTE v26[24];

  sub_1D437C1B8(a1);
  if (!v3)
  {
    v5 = swift_bridgeObjectRetain();
    sub_1D4345D48(v5, (uint64_t)&v21);
    sub_1D42B7204();
    v6 = swift_bridgeObjectRetain();
    sub_1D4345D48(v6, (uint64_t)&v23);
    sub_1D430729C();
    sub_1D42B7204();
    sub_1D4484BC0((uint64_t)&v21, v7, v8, v9, v10, v11, v12, v13);
    sub_1D4484CAC((uint64_t)&v23, *(unsigned int *)(a2 + 4), v14, v15, v16, v17, v18, v19);
    v2 = v21;
    sub_1D437CD10(&v24, (uint64_t)v26);
    sub_1D437CD28((uint64_t)v26);
    sub_1D437CD10(&v22, (uint64_t)v25);
    sub_1D437CD28((uint64_t)v25);
  }
  return v2;
}

void *sub_1D4484FD4(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  objc_class *v5;
  id v6;
  id v7;
  void *v8;
  _BYTE v10[52];
  __int128 v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  uint64_t v15;

  v5 = (objc_class *)sub_1D44856C4();
  *(_QWORD *)&v11 = 0x40467A0000;
  *((_QWORD *)&v11 + 1) = 0x45F8700042480000;
  v12 = 0x38D1B71700000001;
  v13 = 1;
  v14 = xmmword_1D453D8C0;
  v15 = 0x100000000;
  v6 = v2;
  sub_1D448489C(&v11, a2, (uint64_t)v10);
  if (v3)
  {
    sub_1D42CB5C8();

    swift_getObjectType();
    sub_1D4485690();
  }
  else
  {

    sub_1D42CB5C8();
    v7 = objc_allocWithZone(v5);
    v8 = v2;
    v2 = v7;
    sub_1D4485194(v8, (uint64_t)v10);
    sub_1D44856C4();
    sub_1D4485690();
  }
  return v2;
}

objc_class *sub_1D4485194(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  char *v4;
  objc_class *ObjectType;
  char *v8;
  __int128 v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  char *v16;
  objc_super v18;

  v4 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v8 = &v4[OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters];
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v8 = *(_OWORD *)a2;
  *((_OWORD *)v8 + 1) = v9;
  *((_OWORD *)v8 + 2) = *(_OWORD *)(a2 + 32);
  *((_DWORD *)v8 + 12) = *(_DWORD *)(a2 + 48);
  v10 = v4;
  v11 = sub_1D4484DE8(a1, a2);
  if (v3)
  {

    swift_deallocPartialClassInstance();
  }
  else
  {
    v15 = (uint64_t *)&v10[OBJC_IVAR____SNLogMelSpectrogramCustomModel_inputFeatureName];
    *v15 = v11;
    v15[1] = v12;
    v16 = &v10[OBJC_IVAR____SNLogMelSpectrogramCustomModel_outputFeatureName];
    *(_QWORD *)v16 = v13;
    *((_QWORD *)v16 + 1) = v14;

    v18.receiver = v10;
    v18.super_class = ObjectType;
    ObjectType = (objc_class *)objc_msgSendSuper2(&v18, sel_init);

  }
  return ObjectType;
}

uint64_t sub_1D448528C(uint64_t a1, id a2, uint64_t a3, int a4, int a5, unint64_t a6, uint64_t a7)
{
  id v13;
  id v14;

  v13 = objc_retainAutorelease(a2);
  v14 = objc_msgSend(v13, sel_dataPointer);
  objc_msgSend(v13, sel_count);
  return sub_1D4485338((uint64_t)v14, a3, a1, a4, a5, a6, a7);
}

uint64_t sub_1D4485338(uint64_t result, uint64_t a2, uint64_t a3, int a4, int a5, unint64_t a6, uint64_t a7)
{
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  __int128 v21;
  int v22;
  _DWORD v24[2];
  uint64_t v25;
  int v26;
  int v27;
  char v28;
  __int128 v29;
  uint64_t v30;
  unint64_t v31;

  if (a2 < 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v31 = a6;
  if (!a2)
    return result;
  v8 = v31;
  if ((v31 & 0x8000000000000000) != 0 || HIDWORD(v31))
  {
LABEL_14:
    result = sub_1D451B550();
    __break(1u);
    return result;
  }
  v9 = result;
  v10 = a4;
  v11 = a5;
  v12 = *(_DWORD *)(a7 + OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters);
  v22 = *(_DWORD *)(a7 + OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters + 4);
  v13 = *(_QWORD *)(a7 + OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters + 8);
  v14 = *(_DWORD *)(a7 + OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters + 16);
  v15 = *(_DWORD *)(a7 + OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters + 20);
  v16 = *(_BYTE *)(a7 + OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters + 24);
  v21 = *(_OWORD *)(a7 + OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters + 28);
  v17 = *(_QWORD *)(a7 + OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters + 44);
  v18 = 4 * a5;
  v19 = 4 * a4;
  for (i = 1; ; ++i)
  {
    v24[0] = v12;
    v24[1] = v22;
    v25 = v13;
    v26 = v14;
    v27 = v15;
    v28 = v16;
    v29 = v21;
    v30 = v17;
    result = sub_1D44F3B08(v9, a3, v8, (uint64_t)v24);
    if (a2 == i)
      break;
    if ((unsigned __int128)(v10 * (__int128)i) >> 64 != (v10 * i) >> 63)
    {
      __break(1u);
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    if ((unsigned __int128)(v11 * (__int128)i) >> 64 != (v11 * i) >> 63)
      goto LABEL_12;
    v9 += v18;
    a3 += v19;
    v8 = v31;
  }
  return result;
}

void sub_1D44855C4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for _SNLogMelSpectrogramCustomModel()
{
  return objc_opt_self();
}

uint64_t sub_1D448565C(uint64_t a1, uint64_t a2)
{
  return sub_1D42FAEE0(a2);
}

uint64_t sub_1D4485668(uint64_t a1, _BYTE *a2)
{
  *a2 = 5;
  return swift_willThrow();
}

void sub_1D448567C()
{
  sub_1D4442E48();
}

void sub_1D4485688()
{
  void *v0;

}

uint64_t sub_1D4485690()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1D44856A4()
{
  return sub_1D451A92C();
}

void sub_1D44856AC()
{
  sub_1D4443088();
}

void sub_1D44856B8()
{
  sub_1D4442D80();
}

uint64_t sub_1D44856C4()
{
  return swift_getObjectType();
}

uint64_t sub_1D44856D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1D437CD10((__int128 *)(a1 + 24), (uint64_t)&a9);
}

uint64_t sub_1D44856DC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D44856E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;

  return sub_1D4483C6C(a1, v3, a3);
}

id sub_1D44856F4()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, (SEL)(v0 + 2888));
}

uint64_t sub_1D4485700()
{
  return swift_initClassMetadata2();
}

double sub_1D4485740()
{
  uint64_t v0;
  double result;

  v0 = swift_allocObject();
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_QWORD *)(v0 + 48) = 0;
  return result;
}

void sub_1D448576C(uint64_t a1)
{
  swift_allocObject();
  sub_1D448596C(a1);
  sub_1D42CB15C();
}

uint64_t sub_1D44857B0(_QWORD *a1)
{
  uint64_t v1;
  _BYTE v4[40];

  sub_1D42E2D8C((uint64_t)a1, (uint64_t)v4);
  sub_1D4312004();
  sub_1D431CC80((uint64_t)v4, v1 + 16);
  swift_endAccess();
  sub_1D42B5528(a1, a1[3]);
  sub_1D451A1B8();
  return sub_1D451A1DC();
}

uint64_t sub_1D448582C()
{
  uint64_t v0;
  _OWORD v2[2];
  uint64_t v3;

  v3 = 0;
  memset(v2, 0, sizeof(v2));
  sub_1D4312004();
  sub_1D431CC80((uint64_t)v2, v0 + 16);
  return swift_endAccess();
}

uint64_t sub_1D448587C()
{
  uint64_t v0;

  sub_1D431CE20(v0 + 16);
  return swift_deallocClassInstance();
}

void type metadata accessor for CompletingTee.TeeSink()
{
  JUMPOUT(0x1D825E3A4);
}

uint64_t sub_1D44858AC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1D448592C(_QWORD *a1)
{
  return sub_1D44857B0(a1);
}

uint64_t sub_1D448594C()
{
  return sub_1D448582C();
}

char *sub_1D448596C(uint64_t a1)
{
  char *v1;
  uint64_t v2;

  v2 = *(_QWORD *)v1;
  *((_QWORD *)v1 + 2) = a1;
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(v2 + 96) - 8) + 32))(&v1[*(_QWORD *)(v2 + 136)]);
  return v1;
}

uint64_t *sub_1D44859A0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v1 = *v0;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v3 = sub_1D451A188();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v8 - v5;
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)&v8 - v5, 1, 1, AssociatedTypeWitness);
  sub_1D451A20C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 96) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 136));
  return v0;
}

uint64_t sub_1D4485ABC()
{
  sub_1D44859A0();
  return swift_deallocClassInstance();
}

void type metadata accessor for CompletingTee.TeeFork()
{
  JUMPOUT(0x1D825E3A4);
}

uint64_t sub_1D4485AEC()
{
  return sub_1D451A164();
}

void sub_1D4485B1C()
{
  sub_1D4485C1C();
  sub_1D451A218();
  sub_1D4485C00();
  sub_1D451A170();
  sub_1D42CB15C();
}

uint64_t sub_1D4485B44()
{
  sub_1D4485C1C();
  sub_1D451A20C();
  sub_1D4485C00();
  return sub_1D451A158();
}

uint64_t sub_1D4485B74()
{
  return sub_1D4485AEC();
}

void sub_1D4485B94()
{
  sub_1D4485B1C();
}

uint64_t sub_1D4485BB4()
{
  return sub_1D4485B44();
}

void sub_1D4485BD4()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D4485BE4()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D4485BF4()
{
  return MEMORY[0x1E0DEDD18];
}

uint64_t sub_1D4485C00()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4485C30()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1D4485CAC()
{
  uint64_t v0;

  sub_1D4485D54(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96), *(_QWORD *)(*(_QWORD *)v0 + 80));
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1D4485CDC()
{
  sub_1D4485CAC();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for AsyncSharedValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncSharedValue);
}

uint64_t sub_1D4485D00()
{
  uint64_t v0;

  sub_1D4485D54(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88), *(_QWORD *)(*(_QWORD *)v0 + 80));
  return v0;
}

uint64_t sub_1D4485D24()
{
  sub_1D4485D00();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnsafeAsyncSharedValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UnsafeAsyncSharedValue);
}

uint64_t sub_1D4485D54(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a2 - 8) + 8))();
}

uint64_t sub_1D4485D60(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1D4485D78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);

  sub_1D44868D0();
  sub_1D44868D0();
  v0 = sub_1D44868E4();
  sub_1D42B8CF0(v0);
  v1 = sub_1D44868E4();
  return v2(v1);
}

uint64_t sub_1D4485DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1D42B7714();
  sub_1D42B7C80(a2, a3, a4, a5);
  return sub_1D42B8F48();
}

uint64_t sub_1D4485E38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_1D44868CC;
  return sub_1D4485D60(a2);
}

uint64_t sub_1D4485E88(uint64_t a1)
{
  uint64_t *v1;

  return sub_1D4485DCC(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1D4485EA4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1D4485EEC;
  return sub_1D43768A8();
}

uint64_t sub_1D4485EEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  _QWORD *v6;
  uint64_t (*v7)(void);
  uint64_t v8;

  v8 = *v2;
  v4 = v8;
  sub_1D42E3E84(&v8);
  *(_QWORD *)(v4 + 24) = a1;
  swift_task_dealloc();
  if (v1)
    return ((uint64_t (*)(void))v2[1])();
  v7 = (uint64_t (*)(void))((char *)&dword_1EFE4E1A0 + dword_1EFE4E1A0);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v6;
  *v6 = v2;
  v6[1] = sub_1D4485F84;
  return sub_1D430C35C(v7);
}

uint64_t sub_1D4485F84(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v6;

  v6 = *v2;
  v4 = v6;
  sub_1D42E3E84(&v6);
  *(_QWORD *)(v4 + 40) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_BYTE *)(v4 + 104) = a1 & 1;
  return swift_task_switch();
}

uint64_t sub_1D4485FF8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  if (*(_BYTE *)(v0 + 104) == 1)
  {
    *(_QWORD *)(v0 + 48) = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 24);
    v3 = (uint64_t (*)(void))((char *)&dword_1EFE4E1A8 + dword_1EFE4E1A8);
    sub_1D42BE934();
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v1;
    *v1 = v0;
    v1[1] = sub_1D448609C;
    return sub_1D430C35C(v3);
  }
  else
  {
    swift_release();
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, _QWORD))(v0 + 8))(1, 0, 0, 0);
  }
}

uint64_t sub_1D448609C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v10;

  sub_1D430C61C();
  sub_1D42E3E84(v10);
  v6[8] = v4;
  swift_task_dealloc();
  if (!v4)
  {
    swift_release();
    v6[9] = a4;
    v6[10] = a3;
    v6[11] = a2;
    v6[12] = v5;
  }
  return swift_task_switch();
}

uint64_t sub_1D4486120()
{
  uint64_t v0;

  sub_1D43AC294();
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 72));
}

uint64_t sub_1D4486158()
{
  uint64_t v0;

  sub_1D43AC294();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4486180()
{
  uint64_t v0;

  sub_1D43AC294();
  swift_release();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D44861B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  _QWORD v12[5];

  sub_1D447DAC4();
  v12[3] = MEMORY[0x1E0DEAFA0];
  v12[4] = &off_1E97AD8A8;
  LOBYTE(v12[0]) = a2 != 1;
  sub_1D42BE934();
  sub_1D439E75C(v12);
  if (v5)
  {
    swift_release();
    sub_1D42B8F48();
    return sub_1D42B5400((uint64_t)v12);
  }
  else
  {
    sub_1D42B8F48();
    sub_1D42B5400((uint64_t)v12);
    if (a2 == 1)
      v11 = 0;
    else
      v11 = a2;
    if (a2 == 1)
    {
      a3 = 0;
      a4 = 0;
      a5 = 0;
    }
    sub_1D42BE934();
    sub_1D42B7C80(v11, a3, a4, a5);
    swift_release();
    return sub_1D42B8F48();
  }
}

uint64_t sub_1D44862B4(uint64_t a1)
{
  uint64_t *v1;

  return sub_1D44861B4(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1D44862D0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1D4486320;
  return sub_1D4485EA4();
}

uint64_t sub_1D4486320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v11;
  _QWORD *v12;

  sub_1D430C61C();
  sub_1D42E3E84(v11);
  swift_task_dealloc();
  if (!v4)
  {
    v12 = *(_QWORD **)(v7 + 16);
    *v12 = v6;
    v12[1] = a2;
    v12[2] = a3;
    v12[3] = a4;
  }
  return (*(uint64_t (**)(void))(v5 + 8))();
}

_QWORD *destroy for OptionalOptionalProxy(_QWORD *result)
{
  if (*result >= 2uLL)
  {
    swift_release();
    return (_QWORD *)swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for OptionalOptionalProxy(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;

  v3 = *a2;
  if (*a2 && v3 != 1)
  {
    *(_QWORD *)a1 = v3;
    v5 = a2[3];
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_QWORD *)(a1 + 24) = v5;
    swift_retain();
    swift_retain();
  }
  else
  {
    v4 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
  }
  return a1;
}

unint64_t *assignWithCopy for OptionalOptionalProxy(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v4 = *a2;
  if (*a1 != 1)
  {
    if (v4 == 1)
    {
      sub_1D44864FC(a1);
    }
    else
    {
      if (!*a1)
      {
        if (!v4)
          goto LABEL_3;
LABEL_11:
        v9 = a2[1];
        *a1 = v4;
        a1[1] = v9;
        v10 = a2[3];
        a1[2] = a2[2];
        a1[3] = v10;
        swift_retain();
        swift_retain();
        return a1;
      }
      if (v4)
      {
        v7 = a2[1];
        *a1 = v4;
        a1[1] = v7;
        swift_retain();
        swift_release();
        v8 = a2[3];
        a1[2] = a2[2];
        a1[3] = v8;
        swift_retain();
        swift_release();
        return a1;
      }
      sub_1D43386E8((uint64_t)a1);
    }
    v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v6;
    return a1;
  }
  if (v4 > 1)
    goto LABEL_11;
LABEL_3:
  v5 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v5;
  return a1;
}

_QWORD *sub_1D44864FC(_QWORD *a1)
{
  destroy for OptionalProxy(a1);
  return a1;
}

uint64_t assignWithTake for OptionalOptionalProxy(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  if (*(_QWORD *)a1 == 1)
    goto LABEL_8;
  v4 = *a2;
  if (*a2 == 1)
  {
    sub_1D44864FC((_QWORD *)a1);
LABEL_8:
    v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (!*(_QWORD *)a1)
    goto LABEL_8;
  if (!v4)
  {
    sub_1D43386E8(a1);
    goto LABEL_8;
  }
  v5 = a2[1];
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  swift_release();
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for OptionalOptionalProxy(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;
  int v4;
  BOOL v5;

  if (a2)
  {
    if (a2 > 0x7FFFFFFD && *((_BYTE *)a1 + 32))
    {
      v2 = *(_DWORD *)a1 + 2147483645;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v4 = v3 - 1;
      if (v4 < 0)
        v4 = -1;
      v5 = __OFSUB__(v4, 1);
      v2 = v4 - 1;
      if (v2 < 0 != v5)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OptionalOptionalProxy(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 2147483646;
    *(_QWORD *)(result + 8) = 0;
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for OptionalOptionalProxy()
{
  return &type metadata for OptionalOptionalProxy;
}

_QWORD *destroy for OptionalProxy(_QWORD *result)
{
  if (*result)
  {
    swift_release();
    return (_QWORD *)swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for OptionalProxy(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  if (*(_QWORD *)a2)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v3 = *(_QWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 24) = v3;
    swift_retain();
    swift_retain();
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
  }
  return a1;
}

_QWORD *assignWithCopy for OptionalProxy(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_retain();
      swift_release();
      v6 = a2[3];
      a1[2] = a2[2];
      a1[3] = v6;
      swift_retain();
      swift_release();
    }
    else
    {
      sub_1D43386E8((uint64_t)a1);
      v9 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v9;
    }
  }
  else if (v4)
  {
    v7 = a2[1];
    *a1 = v4;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    swift_retain();
    swift_retain();
  }
  else
  {
    v10 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v10;
  }
  return a1;
}

uint64_t assignWithTake for OptionalProxy(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  if (!*(_QWORD *)a1)
    goto LABEL_5;
  if (!*(_QWORD *)a2)
  {
    sub_1D43386E8(a1);
LABEL_5:
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    return a1;
  }
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for OptionalProxy(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 32))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OptionalProxy(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for OptionalProxy()
{
  return &type metadata for OptionalProxy;
}

uint64_t sub_1D44868D0()
{
  uint64_t v0;

  return sub_1D42B7FE4(v0);
}

uint64_t sub_1D44868E4()
{
  uint64_t v0;

  return v0;
}

ValueMetadata *type metadata accessor for AudioConverterError()
{
  return &type metadata for AudioConverterError;
}

uint64_t sub_1D4486908()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1D4486984(void (*a1)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v2;
  uint64_t v3;

  a1(&v3, &v2);
  return v3;
}

void sub_1D44869DC(uint64_t a1)
{
  swift_allocObject();
  sub_1D4486A20(a1);
  sub_1D42CB15C();
}

uint64_t sub_1D4486A20(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 88) - 8) + 32))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 112));
  *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 120)) = a1;
  return v1;
}

uint64_t sub_1D4486A68()
{
  return sub_1D451A164();
}

uint64_t sub_1D4486A94()
{
  uint64_t v0;
  void *v2;

  v2 = (void *)sub_1D4486984((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1D4486CCC);
  v0 = sub_1D451A170();
  sub_1D4486CE8(v2);
  return v0;
}

void sub_1D4486B14(uint64_t a1@<X0>, void *a2@<X1>, _QWORD *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  id v8;
  id v9;

  v7 = *(_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 120));
  v8 = a2;
  sub_1D446D038(v7, v8);
  if (v4)
  {
    *a3 = v4;
  }
  else
  {
    *a4 = v8;
    v9 = v8;
  }
}

uint64_t sub_1D4486B8C()
{
  sub_1D446AF80();
  return sub_1D451A158();
}

uint64_t sub_1D4486BE8()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 88) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
  swift_release();
  return v0;
}

uint64_t sub_1D4486C28()
{
  sub_1D4486BE8();
  return swift_deallocClassInstance();
}

void type metadata accessor for WriteToFile.Impl.Inner()
{
  JUMPOUT(0x1D825E3A4);
}

uint64_t sub_1D4486C58()
{
  return sub_1D4486A68();
}

uint64_t sub_1D4486C78()
{
  return sub_1D4486A94();
}

uint64_t sub_1D4486C9C()
{
  return sub_1D4486B8C();
}

void sub_1D4486CBC()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D4486CCC(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1D4486B14(*(_QWORD *)(v2 + 16), *(void **)(v2 + 24), a1, a2);
}

void sub_1D4486CE8(id a1)
{

}

uint64_t type metadata accessor for WriteToFile(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WriteToFile);
}

void sub_1D4486D24(uint64_t a1)
{
  MEMORY[0x1E0C80A78](a1);
  sub_1D42CB210();
  sub_1D42B28FC(&qword_1EFE4A090);
  swift_allocObject();
  sub_1D446AEF4((void (*)(uint64_t *__return_ptr))sub_1D44877F0);
  type metadata accessor for WriteToFile.Impl.Inner();
}

void sub_1D4486E90(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(a6, a1, a4);
  v12 = type metadata accessor for WriteToFile.Impl(0, a4, a5, v11);
  v13 = a6 + *(int *)(v12 + 36);
  v14 = sub_1D42CB348();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v13, a2, v14);
  *(_QWORD *)(a6 + *(int *)(v12 + 40)) = a3;
  sub_1D42CB084();
}

void sub_1D4486F18(uint64_t a1)
{
  sub_1D4486D24(a1);
}

void sub_1D4486F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = sub_1D42CB348();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42CB210();
  v3 = *(_QWORD *)(a2 + 16);
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB210();
  v6 = type metadata accessor for WriteToFile.Impl(0, v3, *(_QWORD *)(a2 + 24), v5);
  MEMORY[0x1E0C80A78](v6);
  sub_1D4487130();
  sub_1D42B8B10(&qword_1EFE49BB0);
  MEMORY[0x1D825E41C](&unk_1D45470B0, v6);
  type metadata accessor for ExpandResult();
}

void sub_1D4487040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, _QWORD);
  uint64_t v22;
  void *v23;
  id v24;

  *(_QWORD *)(v16 - 176) = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v18 = (char *)&a9 - v17;
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v20 = *(_QWORD *)(v16 - 168);
  v19(v15, v20, v13);
  v21 = *(void (**)(uint64_t, uint64_t, _QWORD))(v12 + 16);
  v22 = *(_QWORD *)(v16 - 152);
  v21(v22, v20 + *(int *)(v11 + 36), *(_QWORD *)(v16 - 144));
  v23 = *(void **)(v20 + *(int *)(v11 + 40));
  sub_1D4486E90(v15, v22, (uint64_t)v23, v13, *(_QWORD *)(v16 - 160), v10);
  sub_1D441CAFC(v10, v9, (uint64_t)v18);
  v24 = v23;
  sub_1D441CB14(*(_QWORD *)(v16 - 136));
}

void sub_1D44870F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 176) + 8))(v0, v1);
  sub_1D42CB520();
}

void sub_1D4487110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D4486F2C(a1, a4);
}

uint64_t type metadata accessor for WriteToFile.Impl(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WriteToFile.Impl);
}

unint64_t sub_1D4487130()
{
  unint64_t result;

  result = qword_1EFE544E0[0];
  if (!qword_1EFE544E0[0])
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, qword_1EFE544E0);
  }
  return result;
}

uint64_t sub_1D448716C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = sub_1D4519BC4();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1D4487200(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  id v23;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_1D42CB348();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10;
  v12 = v7 + v10;
  v13 = *(_QWORD *)(v9 + 64) + 7;
  v14 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  v15 = (*(_DWORD *)(v6 + 80) | v10) & 0x100000;
  if (v14 > 7 || v15 != 0 || ((v13 + (v12 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + (((v14 | 7) + 16) & ~(unint64_t)(v14 | 7)));
    swift_retain();
  }
  else
  {
    v19 = v8;
    v20 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    v21 = ((unint64_t)a2 + v12) & v20;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v12) & v20, v21, v19);
    v22 = *(void **)((v13 + v21) & 0xFFFFFFFFFFFFF8);
    *(_QWORD *)((v13 + (((unint64_t)a1 + v12) & v20)) & 0xFFFFFFFFFFFFF8) = v22;
    v23 = v22;
  }
  return a1;
}

void sub_1D448731C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64);
  v5 = sub_1D42CB348();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);

}

void sub_1D4487390()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;

  sub_1D4468818();
  (*(void (**)(void))(v0 + 16))();
  sub_1D42CB348();
  sub_1D4487808();
  sub_1D430DCCC(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16));
  sub_1D448782C();
  v3 = v2;
  sub_1D42CB15C();
}

void sub_1D44873D4()
{
  uint64_t v0;
  uint64_t v1;
  void **v2;
  void *v3;
  void *v4;
  id v5;

  sub_1D4468818();
  (*(void (**)(void))(v0 + 24))();
  sub_1D42CB348();
  sub_1D4487808();
  sub_1D430DCCC(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24));
  sub_1D4487850();
  v3 = *v2;
  *v2 = v4;
  v5 = v4;

  sub_1D42CB15C();
}

void sub_1D4487424()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D4468818();
  (*(void (**)(void))(v0 + 32))();
  sub_1D42CB348();
  sub_1D4487808();
  sub_1D430DCCC(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 32));
  sub_1D448782C();
  sub_1D42CB15C();
}

void sub_1D4487464()
{
  uint64_t v0;
  uint64_t v1;
  void **v2;
  void *v3;
  void *v4;

  sub_1D4468818();
  (*(void (**)(void))(v0 + 40))();
  sub_1D42CB348();
  sub_1D4487808();
  sub_1D430DCCC(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 40));
  sub_1D4487850();
  v3 = *v2;
  *v2 = v4;

  sub_1D42CB15C();
}

uint64_t sub_1D44874B0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v20;
  unint64_t v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = sub_1D42CB348();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v7)
    v11 = v7;
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (v11 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v12 = v8;
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = *(_QWORD *)(v6 + 64) + v13;
  v15 = *(_QWORD *)(v9 + 64) + 7;
  if (v11 < a2)
  {
    if (((((v15 + (v14 & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v16 = 2;
    else
      v16 = a2 - v11 + 1;
    if (v16 >= 0x10000)
      v17 = 4;
    else
      v17 = 2;
    if (v16 < 0x100)
      v17 = 1;
    if (v16 >= 2)
      v18 = v17;
    else
      v18 = 0;
    __asm { BR              X16 }
  }
  if ((_DWORD)v7 == v11)
  {
    v20 = a1;
    v10 = v7;
    v12 = v5;
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v20, v10, v12);
  }
  v20 = (v14 + a1) & ~v13;
  if ((_DWORD)v10 == v11)
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v20, v10, v12);
  v21 = *(_QWORD *)((v15 + v20) & 0xFFFFFFFFFFFFF8);
  if (v21 >= 0xFFFFFFFF)
    LODWORD(v21) = -1;
  return (v21 + 1);
}

void sub_1D4487634(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  size_t v11;
  unsigned int v12;
  int v13;
  int v14;
  unsigned int v15;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_1D42CB348() - 8);
  if (*(_DWORD *)(v9 + 84) <= v8)
    v10 = v8;
  else
    v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  v11 = ((*(_QWORD *)(v9 + 64)
        + 7
        + ((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v10 >= a3)
  {
    v14 = 0u;
  }
  else
  {
    if ((_DWORD)v11)
      v12 = 2;
    else
      v12 = a3 - v10 + 1;
    if (v12 >= 0x10000)
      v13 = 4;
    else
      v13 = 2;
    if (v12 < 0x100)
      v13 = 1;
    if (v12 >= 2)
      v14 = v13;
    else
      v14 = 0;
  }
  if (a2 > v10)
  {
    if ((_DWORD)v11)
    {
      v15 = ~v10 + a2;
      bzero(a1, v11);
      *a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void sub_1D4487754(uint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  *(_BYTE *)(v6 + v10) = 0;
  if ((_DWORD)v7)
  {
    if ((_DWORD)v9 == a3)
    {
      v11 = v6;
      v12 = v7;
      a1 = v9;
      a2 = v8;
LABEL_6:
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v11, v12, a1, a2);
      return;
    }
    v11 = (v4 + v6) & v5;
    if ((_DWORD)a1 == a3)
    {
      v12 = v7;
      goto LABEL_6;
    }
    v13 = (_QWORD *)((v3 + v11) & 0xFFFFFFFFFFFFFFF8);
    if ((v7 & 0x80000000) != 0)
      v14 = v7 ^ 0x80000000;
    else
      v14 = (v7 - 1);
    *v13 = v14;
  }
  sub_1D42CB084();
}

void sub_1D44877F0(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1D446AE30(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), a1);
}

void sub_1D448782C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)((*(_QWORD *)(v2 + 64) + 7 + v1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v2 + 64) + 7 + v0) & 0xFFFFFFFFFFFFF8);
}

uint64_t type metadata accessor for HashableCodableNSObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HashableCodableNSObject);
}

uint64_t sub_1D448787C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[10];

  v8[9] = a1;
  sub_1D451B958();
  v5 = type metadata accessor for HashableCodableNSObject(0, a2, v3, v4);
  v6 = MEMORY[0x1D825E41C](&unk_1D45471C0, v5);
  sub_1D444C2EC((uint64_t)v8, v5, v6);
  return sub_1D451B994();
}

uint64_t sub_1D44878EC(uint64_t a1)
{
  uint64_t *v1;

  return sub_1D448787C(*v1, *(_QWORD *)(a1 + 16));
}

uint64_t sub_1D44878FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = MEMORY[0x1D825E41C](&unk_1D45471C0);
  return sub_1D444C2EC(a1, a2, v4);
}

uint64_t sub_1D448793C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _BYTE v5[72];

  sub_1D451B958();
  v3 = MEMORY[0x1D825E41C](&unk_1D45471C0, a2);
  sub_1D444C2EC((uint64_t)v5, a2, v3);
  return sub_1D451B994();
}

uint64_t sub_1D4487990(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = MEMORY[0x1D825E41C](&unk_1D45471A4);
  return sub_1D4493454(a1, a2, v4);
}

uint64_t sub_1D44879E4(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = MEMORY[0x1D825E41C](&unk_1D45471A4);
  return sub_1D4493594(a1, a2, v4);
}

id sub_1D4487A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = MEMORY[0x1D825E41C](&unk_1D45471C0, a3);
  return sub_1D444C258(a1, a2, a3, v6);
}

void sub_1D4487A7C()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D4487A8C(_QWORD *a1, uint64_t a2)
{
  uint64_t result;

  a1[1] = MEMORY[0x1D825E41C](&unk_1D4547148);
  a1[2] = MEMORY[0x1D825E41C](&unk_1D4547204, a2);
  result = MEMORY[0x1D825E41C](&unk_1D45471DC, a2);
  a1[3] = result;
  return result;
}

uint64_t sub_1D4487AE4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = MEMORY[0x1D825E41C](&unk_1D4547148);
  result = MEMORY[0x1D825E41C](&unk_1D4547164, a2);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for DeinterleavedSignalBuffer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DeinterleavedSignalBuffer);
}

uint64_t type metadata accessor for DeinterleavedSignalBuffer.ContiguousSamples(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DeinterleavedSignalBuffer.ContiguousSamples);
}

void sub_1D4487B5C()
{
  JUMPOUT(0x1D825E41CLL);
}

_QWORD *sub_1D4487B6C(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D4487B80(a1, a2, a3, a4);
}

_QWORD *sub_1D4487B80(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[4];

  v10[3] = a4;
  v6 = *(_QWORD *)(a3 + 16);
  v7 = sub_1D451B280();
  sub_1D451B298();
  sub_1D451B22C();
  v10[0] = *(_QWORD *)(v4 + 8) + *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * *(_QWORD *)(v4 + 16);
  v8 = v10[0];
  v10[1] = v7;
  a1(v10);
  return sub_1D448C218(v10, v8, v7);
}

uint64_t sub_1D4487C50()
{
  return sub_1D451B238();
}

void sub_1D4487C64(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v3 = a1 + 1;
  if (__OFADD__(a1, 1))
  {
    __break(1u);
  }
  else
  {
    v7 = *((_QWORD *)v2 + 5);
    v6 = *((_QWORD *)v2 + 6);
    v8 = *((_QWORD *)v2 + 2);
    v9 = *v2;
    sub_1D448CCD4();
    *(_OWORD *)a2 = v9;
    *(_QWORD *)(a2 + 16) = v8;
    *(_QWORD *)(a2 + 24) = a1;
    *(_QWORD *)(a2 + 32) = v3;
    *(_QWORD *)(a2 + 40) = v7;
    *(_QWORD *)(a2 + 48) = v6;
    sub_1D42EA18C();
  }
}

uint64_t sub_1D4487CC4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v1 = v0[2];
  v2 = v0[3];
  v3 = v2 * v1;
  if ((unsigned __int128)(v2 * (__int128)v1) >> 64 != (v2 * v1) >> 63)
  {
    __break(1u);
    goto LABEL_9;
  }
  v4 = v0[5];
  v5 = __OFADD__(v3, v4);
  v6 = v3 + v4;
  if (v5)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v7 = v0[4];
  v8 = v7 - 1;
  if (__OFSUB__(v7, 1))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v9 = v8 * v1;
  if ((unsigned __int128)(v8 * (__int128)v1) >> 64 != (v8 * v1) >> 63)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v10 = v0[6];
  if (__OFADD__(v9, v10))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v9 + v10 >= v6)
    return sub_1D451AA4C();
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1D4487D3C()
{
  return sub_1D451AC74();
}

uint64_t sub_1D4487D4C()
{
  return sub_1D451AC8C();
}

uint64_t sub_1D4487D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D825E41C](&unk_1D4547BD4, a3);
  return sub_1D451AC74();
}

uint64_t sub_1D4487DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1D825E41C](&unk_1D4547BD4, a4);
  return sub_1D451AC68();
}

uint64_t sub_1D4487E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D825E41C](&unk_1D4547BD4, a3);
  return sub_1D451AC8C();
}

uint64_t (*sub_1D4487E74(_QWORD *a1, uint64_t *a2))()
{
  uint64_t v2;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v5 = malloc(0x80uLL);
  *a1 = v5;
  v6 = *a2;
  v7 = *(_OWORD *)(v2 + 16);
  *v5 = *(_OWORD *)v2;
  v5[1] = v7;
  v5[2] = *(_OWORD *)(v2 + 32);
  *((_QWORD *)v5 + 6) = *(_QWORD *)(v2 + 48);
  *((_QWORD *)v5 + 15) = sub_1D4487F04((_QWORD *)v5 + 7, v6);
  v9 = *v8;
  *((_QWORD *)v5 + 11) = v10;
  *((_QWORD *)v5 + 12) = v11;
  *(_OWORD *)((char *)v5 + 104) = v9;
  return sub_1D4487F00;
}

uint64_t (*sub_1D4487F04(_QWORD *a1, uint64_t a2))()
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_1D4489454(a2);
  a1[1] = v4;
  a1[2] = v3;
  *a1 = v5;
  return sub_1D448C9A4;
}

double sub_1D4487F50@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_1D448A4F0(*a1, a1[1], (void (*)(__int128 *))sub_1D448C9BC, a2).n128_u64[0];
  return result;
}

uint64_t sub_1D4487FA0(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4547BD4, a1);
  return sub_1D451AC80();
}

void sub_1D4487FEC()
{
  sub_1D448B318();
}

uint64_t sub_1D4487FF8(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4547C84, a1);
  return sub_1D451ACF8();
}

uint64_t sub_1D448802C(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4547C84, a1);
  return sub_1D451AD28();
}

uint64_t sub_1D4488060()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D42B28FC(qword_1EFE40540);
  v0 = swift_allocObject();
  v1 = MEMORY[0x1E0DEA968];
  *(_OWORD *)(v0 + 16) = xmmword_1D45261D0;
  *(_QWORD *)(v0 + 56) = v1;
  *(_QWORD *)(v0 + 32) = 7303014;
  *(_QWORD *)(v0 + 40) = 0xE300000000000000;
  sub_1D451B940();
  return swift_bridgeObjectRelease();
}

void sub_1D44880D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  sub_1D448CC90();
  sub_1D448CC68();
  MEMORY[0x1E0C80A78](v8);
  (*(void (**)(_BYTE *))(v10 + 16))(&v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  v11 = *(_QWORD *)(v6 + 16);
  type metadata accessor for DeinterleavedSignalBuffer.NoncontiguousFrames(0, v11, v12, v13);
  if (!swift_dynamicCast())
    goto LABEL_9;
  v26 = *(_OWORD *)&v22[8];
  v27 = v23;
  v28 = v24;
  v29 = v25;
  v14 = v4[5];
  v15 = v4[6];
  v16 = __OFSUB__(v15, v14);
  v17 = v15 - v14;
  if (v16)
  {
    __break(1u);
    goto LABEL_11;
  }
  v18 = v29 - *((_QWORD *)&v28 + 1);
  if (__OFSUB__(v29, *((_QWORD *)&v28 + 1)))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v20 = v28 - *((_QWORD *)&v27 + 1);
  if (__OFSUB__((_QWORD)v28, *((_QWORD *)&v27 + 1)))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if ((unsigned __int128)(v19 * (__int128)v20) >> 64 != (v19 * v20) >> 63)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  MEMORY[0x1E0C80A78](v19 * v20);
  *(_QWORD *)&v22[-48] = v11;
  *(_QWORD *)&v22[-40] = v5;
  *(_QWORD *)&v22[-32] = a4;
  *(_QWORD *)&v22[-24] = v4;
  *(_QWORD *)&v22[-16] = v19;
  *(_QWORD *)&v22[-8] = &v26;
  v21 = sub_1D451A9C8();
  sub_1D4362718((uint64_t)&v26);
  if (((v19 | v20) & 0x8000000000000000) == 0)
  {
    swift_bridgeObjectRelease();
    *v4 = v21;
    v4[1] = v20;
    v4[2] = v19;
    v4[3] = 0;
    v4[4] = v20;
    v4[5] = 0;
    v4[6] = v19;
LABEL_9:
    sub_1D42CB0F8();
    return;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_1D4488244()
{
  swift_bridgeObjectRetain();
  sub_1D451A9B0();
  swift_bridgeObjectRelease();
  return sub_1D451A9B0();
}

uint64_t sub_1D4488328(uint64_t result, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v7 = a3[4];
  v24 = a3[3];
  v23 = v7;
  v21 = v7 - v24;
  if (v7 != v24)
  {
    if (v7 >= v24)
    {
      v11 = 0;
      while (1)
      {
        v12 = v24 + v11;
        if (v24 + v11 >= v23)
          break;
        if (__OFADD__(v11, 1))
          goto LABEL_16;
        result = sub_1D451A6A4();
        if (!result)
          goto LABEL_23;
        v13 = a3[2];
        v14 = v13 * v12;
        if ((unsigned __int128)(v13 * (__int128)v12) >> 64 != (v13 * v12) >> 63)
          goto LABEL_17;
        v15 = result;
        v16 = *(_QWORD *)(*(_QWORD *)(a7 - 8) + 72);
        v17 = a3[5];
        result = sub_1D451A6A4();
        if (!result)
          goto LABEL_24;
        if ((unsigned __int128)(a5 * (__int128)v11) >> 64 != (a5 * v11) >> 63)
          goto LABEL_18;
        v18 = a3[5];
        v19 = a3[6];
        v20 = v19 - v18;
        if (__OFSUB__(v19, v18))
          goto LABEL_19;
        if ((unsigned __int128)(v16 * (__int128)v20) >> 64 != (v16 * v20) >> 63)
          goto LABEL_20;
        result = (uint64_t)memmove((void *)(result + v16 * a5 * v11), (const void *)(v15 + v16 * v14 + v17 * v16), v16 * v20);
        if (__OFADD__(*a6, v20))
          goto LABEL_21;
        *a6 += v20;
        if (v21 == ++v11)
          return result;
      }
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }
  return result;
}

uint64_t sub_1D4488488(uint64_t result, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v29;
  uint64_t v30;

  v8 = a3[4];
  v30 = a3[3];
  v29 = v8;
  v26 = v8 - v30;
  if (v8 != v30)
  {
    if (v8 >= v30)
    {
      v11 = 0;
      v12 = a3[2];
      v13 = a3[6];
      v24 = a3[5];
      v14 = v13 - v24;
      v15 = __OFSUB__(v13, v24);
      v25 = v15;
      while (1)
      {
        v16 = v30 + v11;
        if (v30 + v11 >= v29)
          break;
        if (__OFADD__(v11, 1))
          goto LABEL_20;
        result = sub_1D451A6A4();
        if (!result)
          goto LABEL_28;
        v17 = v12 * v16;
        if ((unsigned __int128)(v12 * (__int128)v16) >> 64 != (v12 * v16) >> 63)
          goto LABEL_21;
        v18 = result;
        v19 = *(_QWORD *)(*(_QWORD *)(a8 - 8) + 72);
        result = sub_1D451A6A4();
        if (!result)
          goto LABEL_29;
        v20 = *(_QWORD *)(a5 + 40);
        v21 = *(_QWORD *)(a5 + 48);
        v22 = __OFSUB__(v21, v20);
        v23 = v21 - v20;
        if (v22)
          goto LABEL_22;
        if ((unsigned __int128)(a6 * (__int128)v11) >> 64 != (a6 * v11) >> 63)
          goto LABEL_23;
        if (v25)
          goto LABEL_24;
        if ((unsigned __int128)(v19 * (__int128)v14) >> 64 != (v19 * v14) >> 63)
          goto LABEL_25;
        result = (uint64_t)memmove((void *)(result + v23 * v19 + v19 * a6 * v11), (const void *)(v18 + v19 * v17 + v19 * v24), v19 * v14);
        if (__OFADD__(*a7, v14))
          goto LABEL_26;
        *a7 += v14;
        if (v26 == ++v11)
          return result;
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
  }
  return result;
}

double sub_1D4488614@<D0>(uint64_t a1@<X8>)
{
  __int128 v2;
  double result;
  _OWORD v4[2];
  __int128 v5;
  uint64_t v6;

  sub_1D4489C18((uint64_t)v4);
  v2 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v2;
  result = *(double *)&v5;
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  return result;
}

uint64_t sub_1D4488660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D4488060();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a2, a3);
}

uint64_t sub_1D448869C()
{
  return sub_1D451AE9C();
}

uint64_t sub_1D44886B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D44880D4(a1, a4, a2, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
}

uint64_t sub_1D4488708()
{
  return sub_1D451AE54();
}

uint64_t sub_1D448873C()
{
  return sub_1D451AE84();
}

uint64_t sub_1D4488750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D825E41C](&unk_1D45477E4, a3);
  return sub_1D451AC74();
}

uint64_t sub_1D44887B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1D825E41C](&unk_1D45477E4, a4);
  return sub_1D451AC68();
}

uint64_t sub_1D4488818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D825E41C](&unk_1D45477E4, a3);
  return sub_1D451AC8C();
}

uint64_t (*sub_1D448886C(_QWORD *a1, uint64_t *a2))()
{
  uint64_t v2;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v5 = malloc(0x98uLL);
  *a1 = v5;
  v6 = *a2;
  v7 = *(_OWORD *)(v2 + 16);
  *v5 = *(_OWORD *)v2;
  v5[1] = v7;
  v5[2] = *(_OWORD *)(v2 + 32);
  *((_QWORD *)v5 + 6) = *(_QWORD *)(v2 + 48);
  *((_QWORD *)v5 + 18) = sub_1D4488910((_QWORD *)v5 + 14, v6);
  v9 = *(_OWORD *)(v8 + 8);
  v10 = *(_OWORD *)(v8 + 24);
  v11 = *(_OWORD *)(v8 + 40);
  *((_QWORD *)v5 + 7) = *(_QWORD *)v8;
  v5 = (_OWORD *)((char *)v5 + 56);
  *(_OWORD *)((char *)v5 + 8) = v9;
  *(_OWORD *)((char *)v5 + 24) = v10;
  *(_OWORD *)((char *)v5 + 40) = v11;
  return sub_1D448890C;
}

uint64_t (*sub_1D4488910(_QWORD *a1, uint64_t a2))()
{
  void *v4;

  v4 = malloc(0x38uLL);
  *a1 = v4;
  sub_1D4489C88(a2, (void (*)(__int128 *))sub_1D448C9BC, (uint64_t)v4);
  return sub_1D448CA5C;
}

void sub_1D4488968(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1D4489CF4(*a1, a1[1], (void (*)(__int128 *))sub_1D448C9BC, a2);
}

void sub_1D44889B8()
{
  sub_1D448B318();
}

uint64_t sub_1D44889C4(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4547A8C, a1);
  return sub_1D451ACF8();
}

uint64_t sub_1D44889F8(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4547A8C, a1);
  return sub_1D451AD28();
}

uint64_t sub_1D4488A30()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_1D451B298();
  MEMORY[0x1D825E41C](MEMORY[0x1E0DEBF80], v0);
  sub_1D451AC80();
  return v2;
}

void sub_1D4488A9C()
{
  uint64_t v0;

  sub_1D448CCDC();
  if (!v0)
    sub_1D448CBA0();
  sub_1D42BE888();
}

uint64_t sub_1D4488AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  v5 = v4;
  sub_1D448CC68();
  MEMORY[0x1E0C80A78](v9);
  (*(void (**)(char *))(v11 + 16))((char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    v13 = v28;
    v24 = a4;
    v25 = v29;
    *(_QWORD *)&v26 = v30;
    v14 = *(_QWORD *)(a2 + 16);
    swift_unknownObjectRetain();
    v15 = sub_1D448CB2C();
    sub_1D44191B0();
    if (v15)
    {
      swift_unknownObjectRetain();
      v16 = sub_1D448CB2C();
      sub_1D44191B0();
      v17 = v26;
      v18 = sub_1D451B244();
      v19 = __OFADD__(v16, v18);
      result = v16 + v18;
      if (v19)
      {
        __break(1u);
      }
      else
      {
        MEMORY[0x1E0C80A78](result);
        *(&v24 - 8) = v14;
        *(&v24 - 7) = a3;
        *(&v24 - 6) = v24;
        *(&v24 - 5) = v5;
        *((_OWORD *)&v24 - 2) = v13;
        *(&v24 - 2) = v13;
        *(&v24 - 1) = v17;
        v27 = sub_1D451A9C8();
        v20 = sub_1D451AA1C();
        MEMORY[0x1D825E41C](MEMORY[0x1E0DEAF28], v20);
        sub_1D451A68C();
        sub_1D42CB0C4();
        swift_unknownObjectRelease();
        v21 = v29;
        v22 = v30;
        v26 = v28;
        result = swift_unknownObjectRelease();
        *(_OWORD *)v5 = v26;
        *(_QWORD *)(v5 + 16) = v21;
        *(_QWORD *)(v5 + 24) = v22;
      }
    }
    else
    {
      result = sub_1D44191B0();
      *(_OWORD *)v4 = v13;
      v23 = v26;
      *(_QWORD *)(v4 + 16) = v25;
      *(_QWORD *)(v4 + 24) = v23;
    }
  }
  return result;
}

uint64_t sub_1D4488CB4()
{
  swift_unknownObjectRetain();
  sub_1D451B238();
  swift_unknownObjectRelease();
  return sub_1D451B238();
}

uint64_t sub_1D4488D9C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  uint64_t result;

  result = sub_1D451A6A4();
  if (!result
    || (unsigned __int128)(*(uint64_t *)(*(_QWORD *)(a5 - 8) + 72) * (__int128)a2) >> 64 == (*(_QWORD *)(*(_QWORD *)(a5 - 8) + 72)
                                                                                            * a2) >> 63)
  {
    result = sub_1D451A6A4();
    if (result
      && (unsigned __int128)(*(uint64_t *)(*(_QWORD *)(a5 - 8) + 72) * (__int128)a2) >> 64 != (*(_QWORD *)(*(_QWORD *)(a5 - 8) + 72)
                                                                                              * a2) >> 63)
    {
      goto LABEL_9;
    }
    result = sub_1D451B1A8();
    if (!__OFADD__(*a4, a2))
    {
      *a4 += a2;
      return result;
    }
    __break(1u);
  }
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1D4488E80@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = sub_1D4488A2C(*(_QWORD *)(a1 + 16));
  *a2 = result;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  return result;
}

uint64_t sub_1D4488EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a2, a3);
}

uint64_t sub_1D4488EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D4488AC8(a1, a4, a2, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
}

uint64_t sub_1D4488F0C(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4547468, a1);
  return sub_1D451AEA8();
}

uint64_t sub_1D4488F58()
{
  MEMORY[0x1D825E41C](&unk_1D4547468);
  return sub_1D451AEB4();
}

void sub_1D4488FA8(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_1D448ABBC(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D448CA1C, a3);
}

void sub_1D4488FB4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_1D448AC00(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D448CA1C);
}

uint64_t sub_1D4488FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D825E41C](&unk_1D4547580, a3);
  return sub_1D451AC74();
}

uint64_t sub_1D4489024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1D825E41C](&unk_1D4547580, a4);
  return sub_1D451AC68();
}

uint64_t sub_1D4489088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D825E41C](&unk_1D4547580, a3);
  return sub_1D451AC8C();
}

void sub_1D44890DC()
{
  sub_1D448AB24();
}

void sub_1D44890E8()
{
  sub_1D448AB24();
}

uint64_t (*sub_1D44890F4(_QWORD *a1, uint64_t *a2, uint64_t a3))()
{
  uint64_t *v3;
  _QWORD *v7;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[4] = sub_1D4489158(v7, *a2, *v3, v3[1], v3[2], v3[3], *(_QWORD *)(a3 + 16));
  return sub_1D433AEF8;
}

uint64_t (*sub_1D4489158(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7))()
{
  uint64_t v7;

  v7 = *(_QWORD *)(a7 - 8);
  *a1 = a7;
  a1[1] = v7;
  a1[2] = malloc(*(_QWORD *)(v7 + 64));
  sub_1D451B2D4();
  return sub_1D433AF70;
}

void sub_1D44891E8(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_1D448AB44(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D4488A98, a3);
}

void sub_1D44891F4()
{
  sub_1D448AB90();
}

void sub_1D4489200(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_1D448ABBC(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D448CA20, a3);
}

void sub_1D448920C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_1D448AC00(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D448CA20);
}

void sub_1D4489218(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1D448AC44(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D448CA14, a2);
}

uint64_t sub_1D4489224(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4547388, a1);
  return sub_1D451ACF8();
}

uint64_t sub_1D4489258(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4547388, a1);
  return sub_1D451AD28();
}

uint64_t sub_1D448928C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D4382D18(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1D4488A9C);
}

void sub_1D44892A8()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D44892B8()
{
  return sub_1D4489354((uint64_t *)&qword_1EFE50250);
}

void sub_1D44892DC()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D44892EC()
{
  return sub_1D4489354((uint64_t *)&qword_1EFE501F8);
}

void sub_1D4489310()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D4489320()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D4489330()
{
  return sub_1D4489354((uint64_t *)&qword_1EFE50230);
}

uint64_t sub_1D4489354(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    sub_1D42B8B10(&qword_1EFE4DDA8);
    sub_1D43E793C();
    sub_1D43BDA74();
  }
  return result;
}

void sub_1D44893BC()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D44893CC()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D44893DC()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D44893EC()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D44893FC()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D448940C(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1D825E41C](&unk_1D45475EC);
  return MEMORY[0x1D825E41C](MEMORY[0x1E0DEDE40], a1, &v3);
}

uint64_t sub_1D4489454(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = v1[2];
  v3 = v2 * result;
  if ((unsigned __int128)(v2 * (__int128)result) >> 64 != (v2 * result) >> 63)
  {
    __break(1u);
    goto LABEL_7;
  }
  v4 = v1[5];
  result = v3 + v4;
  if (__OFADD__(v3, v4))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v5 = v1[6];
  v6 = __OFADD__(v3, v5);
  v7 = v3 + v5;
  if (v6)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v7 >= result)
    return sub_1D448CAC8();
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1D448949C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D825E41C](&unk_1D45480E8, a3);
  return sub_1D451AC74();
}

uint64_t sub_1D4489500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1D825E41C](&unk_1D45480E8, a4);
  return sub_1D451AC68();
}

uint64_t sub_1D4489564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D825E41C](&unk_1D45480E8, a3);
  return sub_1D451AC8C();
}

uint64_t sub_1D44895B8(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D45480E8, a1);
  return sub_1D451AC80();
}

uint64_t sub_1D4489604(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4548198, a1);
  return sub_1D451ACF8();
}

uint64_t sub_1D4489638(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4548198, a1);
  return sub_1D451AD28();
}

uint64_t sub_1D448966C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v1 = v0[2];
  v2 = v0[3];
  v3 = v2 * v1;
  if ((unsigned __int128)(v2 * (__int128)v1) >> 64 != (v2 * v1) >> 63)
  {
    __break(1u);
    goto LABEL_5;
  }
  v4 = v0[5];
  result = v3 + v4;
  if (__OFADD__(v3, v4))
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_1D4489698()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v1 = v0[2];
  v2 = v0[4];
  v3 = v2 * v1;
  if ((unsigned __int128)(v2 * (__int128)v1) >> 64 != (v2 * v1) >> 63)
  {
    __break(1u);
    goto LABEL_5;
  }
  v4 = v0[5];
  result = v3 + v4;
  if (__OFADD__(v3, v4))
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_1D44896C8(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1[2];
  if (!v2)
  {
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (result == 0x8000000000000000 && v2 == -1)
    goto LABEL_15;
  v4 = result / v2;
  if (result % v2 != v1[5])
    goto LABEL_12;
  v5 = v4 - 1;
  if (__OFSUB__(v4, 1))
    goto LABEL_16;
  v6 = v5 * v2;
  if ((unsigned __int128)(v5 * (__int128)v2) >> 64 != (v5 * v2) >> 63)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v7 = v1[6];
  result = v6 + v7;
  if (!__OFADD__(v6, v7))
    return result;
  __break(1u);
LABEL_12:
  if (__OFSUB__(result--, 1))
LABEL_18:
    __break(1u);
  return result;
}

uint64_t sub_1D448973C(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v1[2];
  if (!v2)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (result == 0x8000000000000000 && v2 == -1)
    goto LABEL_17;
  v4 = v1[6];
  v5 = __OFSUB__(v4, 1);
  v6 = v4 - 1;
  if (v5)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v7 = result / v2;
  if (result % v2 != v6)
    goto LABEL_13;
  v5 = __OFADD__(v7, 1);
  v8 = v7 + 1;
  if (v5)
    goto LABEL_18;
  v9 = v8 * v2;
  if ((unsigned __int128)(v8 * (__int128)v2) >> 64 != (v8 * v2) >> 63)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v10 = v1[5];
  result = v9 + v10;
  if (!__OFADD__(v9, v10))
    return result;
  __break(1u);
LABEL_13:
  v5 = __OFADD__(result++, 1);
  if (v5)
LABEL_20:
    __break(1u);
  return result;
}

void sub_1D44897BC()
{
  JUMPOUT(0x1D825C328);
}

void sub_1D44897CC()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D44897DC(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1D825E41C](&unk_1D454763C);
  return MEMORY[0x1D825E41C](MEMORY[0x1E0DEDE28], a1, &v3);
}

uint64_t sub_1D4489824@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1D44896C8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1D448984C(uint64_t *a1)
{
  uint64_t result;

  result = sub_1D44896C8(*a1);
  *a1 = result;
  return result;
}

uint64_t sub_1D4489874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D825E41C](&unk_1D45475EC, a3);
  return sub_1D451AC74();
}

uint64_t sub_1D44898D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1D825E41C](&unk_1D45475EC, a4);
  return sub_1D451AC68();
}

uint64_t sub_1D448993C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D825E41C](&unk_1D45475EC, a3);
  return sub_1D451AC8C();
}

void sub_1D4489990()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D44899A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D448966C();
  *a1 = result;
  return result;
}

uint64_t sub_1D44899C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D4489698();
  *a1 = result;
  return result;
}

uint64_t (*sub_1D44899E8(_QWORD *a1, uint64_t *a2, uint64_t a3))()
{
  uint64_t v3;
  _OWORD *v7;
  uint64_t v8;
  __int128 v9;

  v7 = malloc(0x60uLL);
  *a1 = v7;
  v8 = *a2;
  v9 = *(_OWORD *)(v3 + 16);
  *v7 = *(_OWORD *)v3;
  v7[1] = v9;
  v7[2] = *(_OWORD *)(v3 + 32);
  *((_QWORD *)v7 + 6) = *(_QWORD *)(v3 + 48);
  *((_QWORD *)v7 + 11) = sub_1D4489A68((_QWORD *)v7 + 7, v8, a3);
  return sub_1D4489A64;
}

uint64_t (*sub_1D4489A68(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = malloc(*(_QWORD *)(v4 + 64));
  sub_1D448AF94();
  return sub_1D433AF70;
}

uint64_t sub_1D4489AD4(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D45475EC, a1);
  return sub_1D451AC80();
}

uint64_t sub_1D4489B24@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1D448973C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1D4489B4C(uint64_t *a1)
{
  uint64_t result;

  result = sub_1D448973C(*a1);
  *a1 = result;
  return result;
}

void sub_1D4489B74()
{
  sub_1D448B318();
}

uint64_t sub_1D4489B80(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D454769C, a1);
  return sub_1D451ACF8();
}

uint64_t sub_1D4489BB4(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D454769C, a1);
  return sub_1D451AD28();
}

void sub_1D4489BE8()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D4489BF8()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D4489C08()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D4489C18(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = sub_1D451A9A4();
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  sub_1D42B6E24();
}

void sub_1D4489C50()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t (*v4)(__n128);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  __int128 v14;
  __int128 v15;

  v2 = sub_1D448CB4C();
  v3 = *(_QWORD *)(v1 + 48);
  v5 = v4(v2);
  sub_1D448CC00(v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  *(_QWORD *)(v0 + 48) = v3;
}

void sub_1D4489C88(uint64_t a1@<X0>, void (*a2)(__int128 *)@<X2>, uint64_t a3@<X8>)
{
  __int128 *v3;
  uint64_t v4;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  v4 = a1 + 1;
  if (__OFADD__(a1, 1))
  {
    __break(1u);
  }
  else
  {
    v7 = *((_QWORD *)v3 + 4);
    v8 = *v3;
    v9 = v3[1];
    a2(v3);
    *(_OWORD *)a3 = v8;
    *(_OWORD *)(a3 + 16) = v9;
    *(_QWORD *)(a3 + 32) = v7;
    *(_QWORD *)(a3 + 40) = a1;
    *(_QWORD *)(a3 + 48) = v4;
    sub_1D43AAC44();
  }
}

void sub_1D4489CF4(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(__int128 *)@<X3>, uint64_t a4@<X8>)
{
  __int128 *v4;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  v9 = v4[1];
  v10 = *v4;
  v8 = *((_QWORD *)v4 + 4);
  a3(v4);
  *(_OWORD *)a4 = v10;
  *(_OWORD *)(a4 + 16) = v9;
  *(_QWORD *)(a4 + 32) = v8;
  *(_QWORD *)(a4 + 40) = a1;
  *(_QWORD *)(a4 + 48) = a2;
  sub_1D43AAC44();
}

void sub_1D4489D58()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D4489D68()
{
  return sub_1D451AE3C();
}

uint64_t sub_1D4489D80(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4547884, a1);
  return sub_1D451AEA8();
}

uint64_t sub_1D4489DCC()
{
  MEMORY[0x1D825E41C](&unk_1D4547884);
  return sub_1D451AEB4();
}

uint64_t sub_1D4489E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D825E41C](&unk_1D4547834, a3);
  return sub_1D451AC74();
}

uint64_t sub_1D4489E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1D825E41C](&unk_1D4547834, a4);
  return sub_1D451AC68();
}

uint64_t sub_1D4489EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D825E41C](&unk_1D4547834, a3);
  return sub_1D451AC8C();
}

void sub_1D4489F30()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D4489F40(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D45478E4, a1);
  return sub_1D451ACF8();
}

uint64_t sub_1D4489F74(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D45478E4, a1);
  return sub_1D451AD28();
}

void sub_1D4489FA8()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D4489FB8()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D4489FC8()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D4489FD8()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D4489FE8()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D4489FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x1D825E41C](&unk_1D4547E18, a1, &v4);
}

uint64_t sub_1D448A030()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t sub_1D448A038()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t sub_1D448A040()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t sub_1D448A048(uint64_t result)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + 40) >= result || *(_QWORD *)(v1 + 48) < result)
    __break(1u);
  else
    --result;
  return result;
}

uint64_t sub_1D448A064(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 40);
  v2 = *(_QWORD *)(v1 + 48);
  if (v2 < v3)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v3 > result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v2 > result)
    return ++result;
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1D448A094(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v1[1];
  v3 = v2 * result;
  if ((unsigned __int128)(v2 * (__int128)result) >> 64 != (v2 * result) >> 63)
  {
    __break(1u);
    goto LABEL_8;
  }
  v4 = v1[3];
  result = v3 + v4;
  if (__OFADD__(v3, v4))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v5 = v1[4];
  v6 = __OFSUB__(v5, v4);
  v7 = v5 - v4;
  if (v6)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v6 = __OFADD__(result, v7);
  v8 = result + v7;
  if (v6)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v8 >= result)
    return sub_1D448CAC8();
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1D448A0E8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1D448A048(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1D448A110(uint64_t *a1)
{
  uint64_t result;

  result = sub_1D448A048(*a1);
  *a1 = result;
  return result;
}

uint64_t sub_1D448A138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D825E41C](&unk_1D4548A8C, a3);
  return sub_1D451AC74();
}

uint64_t sub_1D448A19C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1D825E41C](&unk_1D4548A8C, a4);
  return sub_1D451AC68();
}

uint64_t sub_1D448A200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D825E41C](&unk_1D4548A8C, a3);
  return sub_1D451AC8C();
}

uint64_t sub_1D448A254@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D448A038();
  *a1 = result;
  return result;
}

uint64_t sub_1D448A278@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D448A040();
  *a1 = result;
  return result;
}

uint64_t (*sub_1D448A29C(_QWORD *a1, uint64_t *a2))()
{
  uint64_t v2;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v5 = malloc(0x80uLL);
  *a1 = v5;
  v6 = *a2;
  v7 = *(_OWORD *)(v2 + 16);
  *v5 = *(_OWORD *)v2;
  v5[1] = v7;
  v5[2] = *(_OWORD *)(v2 + 32);
  *((_QWORD *)v5 + 6) = *(_QWORD *)(v2 + 48);
  *((_QWORD *)v5 + 15) = sub_1D448A350((_QWORD *)v5 + 7, v6);
  v9 = *v8;
  *((_QWORD *)v5 + 11) = v10;
  *((_QWORD *)v5 + 12) = v11;
  *(_OWORD *)((char *)v5 + 104) = v9;
  return sub_1D4487F00;
}

void sub_1D448A328(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 120))(*(_QWORD *)a1 + 56);
  sub_1D43409C0(v1);
}

uint64_t (*sub_1D448A350(_QWORD *a1, uint64_t a2))()
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_1D448A094(a2);
  a1[1] = v4;
  a1[2] = v3;
  *a1 = v5;
  return sub_1D448A39C;
}

uint64_t sub_1D448A39C()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1D448A3A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1D448A030();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D448A3C8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1D448A064(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1D448A3F0(uint64_t *a1)
{
  uint64_t result;

  result = sub_1D448A064(*a1);
  *a1 = result;
  return result;
}

void sub_1D448A418()
{
  sub_1D448B318();
}

uint64_t sub_1D448A424(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4548B3C, a1);
  return sub_1D451ACF8();
}

uint64_t sub_1D448A458(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4548B3C, a1);
  return sub_1D451AD28();
}

uint64_t sub_1D448A48C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_1D448A494()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_1D448A49C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t sub_1D448A4A4(uint64_t result)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + 24) >= result || *(_QWORD *)(v1 + 32) < result)
    __break(1u);
  else
    --result;
  return result;
}

uint64_t sub_1D448A4C0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 24);
  v2 = *(_QWORD *)(v1 + 32);
  if (v2 < v3)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v3 > result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v2 > result)
    return ++result;
LABEL_7:
  __break(1u);
  return result;
}

__n128 sub_1D448A4F0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(__int128 *)@<X3>, uint64_t a4@<X8>)
{
  __int128 *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 result;
  __int128 v12;

  v12 = *v4;
  v8 = *((_QWORD *)v4 + 2);
  v9 = *((_QWORD *)v4 + 5);
  v10 = *((_QWORD *)v4 + 6);
  a3(v4);
  *(_OWORD *)a4 = v12;
  *(_QWORD *)(a4 + 16) = v8;
  *(_QWORD *)(a4 + 24) = a1;
  *(_QWORD *)(a4 + 32) = a2;
  *(_QWORD *)(a4 + 40) = v9;
  *(_QWORD *)(a4 + 48) = v10;
  sub_1D42EA18C();
  return result;
}

uint64_t sub_1D448A54C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1D448A4A4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1D448A574(uint64_t *a1)
{
  uint64_t result;

  result = sub_1D448A4A4(*a1);
  *a1 = result;
  return result;
}

uint64_t sub_1D448A59C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D825E41C](&unk_1D4548C84, a3);
  return sub_1D451AC74();
}

uint64_t sub_1D448A600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1D825E41C](&unk_1D4548C84, a4);
  return sub_1D451AC68();
}

uint64_t sub_1D448A664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D825E41C](&unk_1D4548C84, a3);
  return sub_1D451AC8C();
}

uint64_t sub_1D448A6B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D448A494();
  *a1 = result;
  return result;
}

uint64_t sub_1D448A6DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D448A49C();
  *a1 = result;
  return result;
}

uint64_t (*sub_1D448A700(_QWORD *a1, uint64_t *a2))()
{
  uint64_t v2;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v5 = malloc(0x98uLL);
  *a1 = v5;
  v6 = *a2;
  v7 = *(_OWORD *)(v2 + 16);
  *v5 = *(_OWORD *)v2;
  v5[1] = v7;
  v5[2] = *(_OWORD *)(v2 + 32);
  *((_QWORD *)v5 + 6) = *(_QWORD *)(v2 + 48);
  *((_QWORD *)v5 + 18) = sub_1D448A7C8((_QWORD *)v5 + 14, v6);
  v9 = *(_OWORD *)(v8 + 8);
  v10 = *(_OWORD *)(v8 + 24);
  v11 = *(_OWORD *)(v8 + 40);
  *((_QWORD *)v5 + 7) = *(_QWORD *)v8;
  v5 = (_OWORD *)((char *)v5 + 56);
  *(_OWORD *)((char *)v5 + 8) = v9;
  *(_OWORD *)((char *)v5 + 24) = v10;
  *(_OWORD *)((char *)v5 + 40) = v11;
  return sub_1D448890C;
}

void sub_1D448A7A0(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 144))(*(_QWORD *)a1 + 112);
  sub_1D43409C0(v1);
}

void (*sub_1D448A7C8(_QWORD *a1, uint64_t a2))(uint64_t *a1)
{
  void *v4;

  v4 = malloc(0x38uLL);
  *a1 = v4;
  sub_1D4487C64(a2, (uint64_t)v4);
  return sub_1D448A818;
}

void sub_1D448A818(uint64_t *a1)
{
  void *v1;

  v1 = (void *)*a1;
  sub_1D4362718(*a1);
  sub_1D43409C0(v1);
}

double sub_1D448A83C@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_1D448A4F0(*a1, a1[1], (void (*)(__int128 *))sub_1D42BE0D0, a2).n128_u64[0];
  return result;
}

uint64_t sub_1D448A88C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1D448A48C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D448A8B0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1D448A4C0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1D448A8D8(uint64_t *a1)
{
  uint64_t result;

  result = sub_1D448A4C0(*a1);
  *a1 = result;
  return result;
}

void sub_1D448A900()
{
  sub_1D448B318();
}

uint64_t sub_1D448A90C(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4548D34, a1);
  return sub_1D451ACF8();
}

uint64_t sub_1D448A940(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4548D34, a1);
  return sub_1D451AD28();
}

uint64_t sub_1D448A974()
{
  uint64_t v0;
  uint64_t result;

  sub_1D448CA74();
  v0 = sub_1D451B214();
  sub_1D448CC7C();
  result = sub_1D451B274();
  if (result >= v0)
    return v0;
  __break(1u);
  return result;
}

void sub_1D448A9D8(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_1D448ABBC(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D448A9D0, a3);
}

void sub_1D448A9E4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_1D448AC00(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D448A9D0);
}

uint64_t sub_1D448A9F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D825E41C](&unk_1D45487C0, a3);
  return sub_1D451AC74();
}

uint64_t sub_1D448AA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1D825E41C](&unk_1D45487C0, a4);
  return sub_1D451AC68();
}

uint64_t sub_1D448AAB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D825E41C](&unk_1D45487C0, a3);
  return sub_1D451AC8C();
}

void sub_1D448AB0C()
{
  sub_1D448AB24();
}

void sub_1D448AB18()
{
  sub_1D448AB24();
}

void sub_1D448AB24()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);

  v1 = sub_1D448CB84();
  *v0 = v2(v1);
  sub_1D42B6E24();
}

void sub_1D448AB44(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD)@<X3>, _QWORD *a4@<X8>)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *a4 = a3(*a1, a1[1], *v4, v4[1], v4[2], v4[3], *(_QWORD *)(a2 + 16));
  a4[1] = v6;
  a4[2] = v7;
  a4[3] = v8;
  sub_1D42B6E24();
}

void sub_1D448AB84()
{
  sub_1D448AB90();
}

void sub_1D448AB90()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v1 = sub_1D448CB84();
  *v0 = v2(v1);
  v0[1] = v3;
  sub_1D42B6E24();
}

void sub_1D448ABB0(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_1D448ABBC(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D448A9D4, a3);
}

void sub_1D448ABBC(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD)@<X3>, _QWORD *a4@<X8>)
{
  _QWORD *v4;

  *a4 = a3(*a1, *v4, v4[1], v4[2], v4[3], *(_QWORD *)(a2 + 16));
  sub_1D42B6E24();
}

void sub_1D448ABF4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_1D448AC00(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D448A9D4);
}

void sub_1D448AC00(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v4;

  *a1 = a4(*a1, *v4, v4[1], v4[2], v4[3], *(_QWORD *)(a2 + 16));
  sub_1D42B6E24();
}

void sub_1D448AC38(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1D448AC44(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D448A9C8, a2);
}

void sub_1D448AC44(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X2>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *v3;
  v7 = v3[1];
  v9 = v3[2];
  v8 = v3[3];
  v10 = *(_QWORD *)(a1 + 16);
  v11 = swift_unknownObjectRetain();
  v12 = a2(v11, v7, v9, v8, v10);
  swift_unknownObjectRelease();
  *a3 = v6;
  a3[1] = v7;
  a3[2] = v9;
  a3[3] = v8;
  a3[4] = v12;
  sub_1D42CB0F8();
}

uint64_t sub_1D448ACAC(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4548680, a1);
  return sub_1D451ACF8();
}

uint64_t sub_1D448ACE0(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4548680, a1);
  return sub_1D451AD28();
}

void sub_1D448AD14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = sub_1D448CC9C();
  if (v1)
  {
    if (v1 == -1 && v3 == 0x8000000000000000)
    {
      __break(1u);
      JUMPOUT(0x1D448AE28);
    }
    if (!__OFSUB__(v3 % v1, v2))
      sub_1D448CCA8();
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  JUMPOUT(0x1D448AE0CLL);
}

uint64_t sub_1D448AE34()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v1 = v0[1];
  v2 = v0[5];
  v3 = v2 * v1;
  if ((unsigned __int128)(v2 * (__int128)v1) >> 64 != (v2 * v1) >> 63)
  {
    __break(1u);
    goto LABEL_5;
  }
  v4 = v0[3];
  result = v3 + v4;
  if (__OFADD__(v3, v4))
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_1D448AE64()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v1 = v0[1];
  v2 = v0[6];
  v3 = v2 * v1;
  if ((unsigned __int128)(v2 * (__int128)v1) >> 64 != (v2 * v1) >> 63)
  {
    __break(1u);
    goto LABEL_5;
  }
  v4 = v0[3];
  result = v3 + v4;
  if (__OFADD__(v3, v4))
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_1D448AE94(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  v2 = v1[1];
  if (!v2)
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (result == 0x8000000000000000 && v2 == -1)
    goto LABEL_16;
  v4 = result / v2;
  if (result % v2 != v1[3])
    goto LABEL_13;
  v5 = v4 - 1;
  if (__OFSUB__(v4, 1))
    goto LABEL_17;
  v6 = v5 * v2;
  if ((unsigned __int128)(v5 * (__int128)v2) >> 64 != (v5 * v2) >> 63)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v7 = v1[4];
  v8 = __OFSUB__(v7, 1);
  v9 = v7 - 1;
  if (v8)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  result = v6 + v9;
  if (!__OFADD__(v6, v9))
    return result;
  __break(1u);
LABEL_13:
  v8 = __OFSUB__(result--, 1);
  if (v8)
LABEL_20:
    __break(1u);
  return result;
}

uint64_t sub_1D448AF14(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1[1];
  if (!v2)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (result == 0x8000000000000000 && v2 == -1)
    goto LABEL_17;
  v4 = result / v2;
  if (__OFADD__(result % v2, 1))
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (result % v2 + 1 != v1[4])
    goto LABEL_13;
  v5 = v4 + 1;
  if (__OFADD__(v4, 1))
    goto LABEL_18;
  v6 = v5 * v2;
  if ((unsigned __int128)(v5 * (__int128)v2) >> 64 != (v5 * v2) >> 63)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v7 = v1[3];
  result = v6 + v7;
  if (!__OFADD__(v6, v7))
    return result;
  __break(1u);
LABEL_13:
  if (__OFADD__(result++, 1))
LABEL_20:
    __break(1u);
  return result;
}

uint64_t sub_1D448AF94()
{
  return sub_1D451AA58();
}

uint64_t sub_1D448AFA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v10;

  sub_1D448CC90();
  v10 = sub_1D451AA34() & (v7 == a5);
  if (v6 == a6)
    return v10;
  else
    return 0;
}

void sub_1D448AFF4()
{
  sub_1D448CA74();
  swift_bridgeObjectRetain();
  sub_1D448CC5C();
  swift_bridgeObjectRelease();
  sub_1D451B964();
  sub_1D451B964();
  sub_1D42CB084();
}

void sub_1D448B048()
{
  sub_1D448CC90();
  sub_1D42BE9A8();
  sub_1D448CC7C();
  sub_1D448AFF4();
  sub_1D42CB230();
  sub_1D42CB2D0();
}

uint64_t sub_1D448B090@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1D448AE94(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1D448B0B8(uint64_t *a1)
{
  uint64_t result;

  result = sub_1D448AE94(*a1);
  *a1 = result;
  return result;
}

uint64_t sub_1D448B0E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D825E41C](&unk_1D4548894, a3);
  return sub_1D451AC74();
}

uint64_t sub_1D448B144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1D825E41C](&unk_1D4548894, a4);
  return sub_1D451AC68();
}

uint64_t sub_1D448B1A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D825E41C](&unk_1D4548894, a3);
  return sub_1D451AC8C();
}

uint64_t sub_1D448B1FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D448AE34();
  *a1 = result;
  return result;
}

uint64_t sub_1D448B220@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D448AE64();
  *a1 = result;
  return result;
}

void sub_1D448B244(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 88))(*(_QWORD *)a1 + 56);
  sub_1D43409C0(v1);
}

uint64_t sub_1D448B26C(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4548894, a1);
  return sub_1D451AC80();
}

uint64_t sub_1D448B2BC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1D448AF14(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1D448B2E4(uint64_t *a1)
{
  uint64_t result;

  result = sub_1D448AF14(*a1);
  *a1 = result;
  return result;
}

void sub_1D448B30C()
{
  sub_1D448B318();
}

void sub_1D448B318()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t (*v4)(__n128);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;

  v2 = sub_1D448CB4C();
  v3 = *(_QWORD *)(v1 + 48);
  v5 = v4(v2);
  sub_1D448CC00(v5, v6, v7, v8, v9, v10, v11, v12, v13, v15, v16);
  *(_QWORD *)(v0 + 48) = v3;
  *(_QWORD *)(v0 + 56) = v14;
  sub_1D43AAC44();
}

uint64_t sub_1D448B350(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4548944, a1);
  return sub_1D451ACF8();
}

uint64_t sub_1D448B384(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4548944, a1);
  return sub_1D451AD28();
}

uint64_t sub_1D448B3B8(uint64_t *a1, uint64_t *a2)
{
  return sub_1D448AFA4(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

void sub_1D448B3E0()
{
  sub_1D448B048();
}

void sub_1D448B3F8()
{
  sub_1D448AFF4();
}

uint64_t sub_1D448B410()
{
  sub_1D451B958();
  sub_1D448AFF4();
  return sub_1D451B994();
}

void sub_1D448B468(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __n128 *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1D448CCC0();
  type metadata accessor for DeinterleavedSignalBuffer.ContiguousFrames(v6, v7, v8, v9);
  sub_1D4487CC4();
  sub_1D448CC48();
  sub_1D448CC24();
  sub_1D448CAE0();
  sub_1D448CCE8();
  swift_unknownObjectRelease();
  if ((a4 & 1) != 0)
  {
    sub_1D42BE0D0((uint64_t)v4);
    sub_1D448CBE8(v4[2].n128_f64[0], v4[1], *v4);
    sub_1D4375D88();
  }
  sub_1D448CA98();
}

uint64_t sub_1D448B60C()
{
  return sub_1D451B2B0();
}

uint64_t sub_1D448B618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D448BCF8(a1, a2, a3, a4, (uint64_t (*)(_OWORD *, _OWORD *, _QWORD, uint64_t))sub_1D448B468);
}

void sub_1D448B624()
{
  sub_1D448B89C();
}

void sub_1D448B63C()
{
  sub_1D448B810();
}

void sub_1D448B658(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1D448CCC0();
  type metadata accessor for DeinterleavedSignalBuffer.ContiguousChannels(v6, v7, v8, v9);
  sub_1D4487CC4();
  sub_1D448CC48();
  sub_1D448CC24();
  sub_1D448CAE0();
  sub_1D448CCE8();
  swift_unknownObjectRelease();
  if ((a4 & 1) != 0)
  {
    sub_1D448CAD8();
    type metadata accessor for DeinterleavedSignalBuffer.ContiguousFrames(0, a3, v10, v11);
    sub_1D4375D88();
  }
  sub_1D448CA98();
}

uint64_t sub_1D448B804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D448BCF8(a1, a2, a3, a4, (uint64_t (*)(_OWORD *, _OWORD *, _QWORD, uint64_t))sub_1D448B658);
}

void sub_1D448B810()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D448CC90();
  sub_1D4487CC4();
  sub_1D448B918();
  swift_unknownObjectRelease();
  if (__OFSUB__(v0[4], v0[3]))
  {
    __break(1u);
  }
  else
  {
    v2 = v0[5];
    v1 = v0[6];
    sub_1D42D708C();
    if (!__OFSUB__(v1, v2))
    {
      sub_1D42D708C();
      sub_1D42CB084();
      return;
    }
  }
  __break(1u);
}

void sub_1D448B89C()
{
  sub_1D42BE9A8();
  sub_1D448B810();
  sub_1D42CB230();
  sub_1D42CB708();
}

void sub_1D448B8D8()
{
  sub_1D451B958();
  sub_1D448B810();
  sub_1D42CB230();
  sub_1D42CB708();
}

uint64_t sub_1D448B918()
{
  swift_unknownObjectRetain();
  sub_1D448CB10();
  sub_1D451B2A4();
  return swift_unknownObjectRelease();
}

void sub_1D448B97C()
{
  sub_1D448CA74();
  sub_1D42BE9A8();
  sub_1D448CB10();
  sub_1D448B918();
  sub_1D42CB230();
  sub_1D42CB2D0();
}

uint64_t sub_1D448B9B8()
{
  return sub_1D448B60C() & 1;
}

void sub_1D448BA00()
{
  sub_1D448B97C();
}

uint64_t sub_1D448BA18()
{
  return sub_1D448B918();
}

uint64_t sub_1D448BA30()
{
  sub_1D451B958();
  sub_1D448B918();
  return sub_1D451B994();
}

void sub_1D448BA88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE v6[56];
  _BYTE v7[288];

  sub_1D448CAD8();
  sub_1D448CAD8();
  sub_1D448BC50((uint64_t)v6, (uint64_t)v7, a3, a4);
}

uint64_t sub_1D448BAEC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v8;
  _BYTE v9[72];
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  sub_1D4362718((uint64_t)v9);
  sub_1D4362718((uint64_t)&v8);
  if ((a1 & 1) != 0)
  {
    type metadata accessor for DeinterleavedSignalBuffer.NoncontiguousFrames(0, v1, v4, v5);
    sub_1D448CAD8();
    v6 = v10;
    *(_OWORD *)(v2 - 144) = *(_OWORD *)&v9[56];
    *(_OWORD *)(v2 - 128) = v6;
    *(_OWORD *)(v2 - 112) = v11;
    *(_QWORD *)(v2 - 96) = v12;
    sub_1D4375D88();
  }
  return 0;
}

void sub_1D448BC50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for DeinterleavedSignalBuffer.NoncontiguousSamples(0, a3, a3, a4);
  sub_1D43BDA74();
}

uint64_t sub_1D448BCB4()
{
  return sub_1D451A884() & 1;
}

uint64_t sub_1D448BCEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D448BCF8(a1, a2, a3, a4, (uint64_t (*)(_OWORD *, _OWORD *, _QWORD, uint64_t))sub_1D448BA88);
}

uint64_t sub_1D448BCF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_OWORD *, _OWORD *, _QWORD, uint64_t))
{
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[3];
  uint64_t v10;
  _OWORD v11[3];
  uint64_t v12;

  v5 = *(_QWORD *)(a4 - 8);
  v6 = *(_OWORD *)(a1 + 16);
  v9[0] = *(_OWORD *)a1;
  v9[1] = v6;
  v9[2] = *(_OWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 48);
  v7 = *(_OWORD *)(a2 + 16);
  v11[0] = *(_OWORD *)a2;
  v11[1] = v7;
  v11[2] = *(_OWORD *)(a2 + 32);
  v12 = *(_QWORD *)(a2 + 48);
  return a5(v9, v11, *(_QWORD *)(a3 + 16), v5) & 1;
}

void sub_1D448BD58(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  sub_1D448CAC0();
  type metadata accessor for DeinterleavedSignalBuffer.NoncontiguousSamples(0, *(_QWORD *)(a2 + 16), v3, v4);
  sub_1D448BF30();
}

void sub_1D448BDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,__int128 a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  sub_1D4362718((uint64_t)&a17);
  sub_1D448CAB4();
  v33 = *(_OWORD *)(v31 + 16);
  v34 = *(_OWORD *)(v31 + 32);
  *(_OWORD *)(v32 - 144) = a24;
  *(_OWORD *)(v32 - 128) = v33;
  *(_OWORD *)(v32 - 112) = v34;
  *(_QWORD *)(v32 - 96) = a29;
  MEMORY[0x1D825E41C](&unk_1D45478E4, v30);
  sub_1D451AD34();
  sub_1D4362718((uint64_t)&a24);
  sub_1D42D708C();
  sub_1D448CAB4();
  sub_1D448CB68();
  type metadata accessor for DeinterleavedSignalBuffer.NoncontiguousChannels(0, v29, v35, v36);
  sub_1D43BDA74();
}

uint64_t sub_1D448BE44()
{
  uint64_t v0;

  sub_1D451AD34();
  sub_1D4362718(v0 - 144);
  return sub_1D42D708C();
}

void sub_1D448BE88(uint64_t a1, uint64_t a2)
{
  sub_1D4373F14(a1, *(_QWORD *)(a2 - 8), (void (*)(_BYTE *, uint64_t, uint64_t))sub_1D448BD58);
}

void sub_1D448BED4(uint64_t a1, uint64_t a2)
{
  sub_1D448BD58(a1, a2);
}

void sub_1D448BF18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D448C054(a1, a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))sub_1D448BD58);
}

void sub_1D448BF24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D448BC50(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8));
}

void sub_1D448BF30()
{
  sub_1D448CCD4();
  sub_1D43BDA74();
}

uint64_t sub_1D448BF7C()
{
  sub_1D451AA40();
  sub_1D448CC5C();
  return sub_1D42CB0C4();
}

void sub_1D448BFB8(uint64_t a1, uint64_t a2)
{
  sub_1D4373F14(a1, *(_QWORD *)(a2 - 8), (void (*)(_BYTE *, uint64_t, uint64_t))sub_1D448BF30);
}

void sub_1D448C004()
{
  sub_1D448BF30();
}

void sub_1D448C048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D448C054(a1, a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))sub_1D448BF30);
}

void sub_1D448C054(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, uint64_t, uint64_t))
{
  __int128 *v4;
  uint64_t v7;
  __int128 v8;
  _BYTE v9[72];
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v7 = *(_QWORD *)(a3 - 8);
  sub_1D451B958();
  v8 = v4[1];
  v10 = *v4;
  v11 = v8;
  v12 = v4[2];
  v13 = *((_QWORD *)v4 + 6);
  a4(v9, a2, v7);
  JUMPOUT(0x1D448C0A8);
}

uint64_t sub_1D448C0C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x1D825E41C](&unk_1D4547E98, a1, &v4);
}

uint64_t sub_1D448C0F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x1D825E41C](&unk_1D4547F18, a1, &v4);
}

uint64_t sub_1D448C130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x1D825E41C](&unk_1D4547F98, a1, &v4);
}

uint64_t sub_1D448C168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x1D825E41C](&unk_1D4548018, a1, &v4);
}

uint64_t sub_1D448C1A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x1D825E41C](&unk_1D4548098, a1, &v4);
}

void sub_1D448C1D8()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D448C1E8()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D448C1F8()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D448C208()
{
  JUMPOUT(0x1D825E41CLL);
}

_QWORD *sub_1D448C218(_QWORD *result, uint64_t a2, uint64_t a3)
{
  if (*result)
  {
    if (*result == a2)
    {
      if (result[1] == a3)
        return (_QWORD *)sub_1D451B298();
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DeinterleavedSignalBuffer.ContiguousFrames(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DeinterleavedSignalBuffer.ContiguousFrames);
}

uint64_t type metadata accessor for DeinterleavedSignalBuffer.ContiguousChannels(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DeinterleavedSignalBuffer.ContiguousChannels);
}

uint64_t type metadata accessor for DeinterleavedSignalBuffer.NoncontiguousFrames(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DeinterleavedSignalBuffer.NoncontiguousFrames);
}

uint64_t type metadata accessor for DeinterleavedSignalBuffer.NoncontiguousChannels(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DeinterleavedSignalBuffer.NoncontiguousChannels);
}

uint64_t type metadata accessor for DeinterleavedSignalBuffer.NoncontiguousSamples(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DeinterleavedSignalBuffer.NoncontiguousSamples);
}

void sub_1D448C288()
{
  sub_1D4488CB4();
  sub_1D42B6F28();
}

uint64_t sub_1D448C2B4(uint64_t a1, uint64_t a2)
{
  return sub_1D448C2C8(a1, a2);
}

uint64_t sub_1D448C2C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D4488D9C(a1, a2, *(_QWORD *)(v2 + 40), *(_QWORD **)(v2 + 48), *(_QWORD *)(v2 + 16));
}

uint64_t sub_1D448C2FC()
{
  return swift_unknownObjectRelease();
}

void sub_1D448C304(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_1D448CBD0(a1, a2);
  *(_QWORD *)(v2 + 24) = *(_QWORD *)(v3 + 24);
  swift_unknownObjectRetain();
  sub_1D42B6E24();
}

void sub_1D448C32C(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  sub_1D448CBB4();
  sub_1D42CB15C();
}

_OWORD *sub_1D448C36C(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;

  swift_unknownObjectRelease();
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  return a1;
}

uint64_t sub_1D448C3A0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return sub_1D42CB898(-1);
  if (a2 < 0 && *((_BYTE *)a1 + 32))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    v2 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v2) = -1;
  }
  return sub_1D42CB898(v2);
}

_QWORD *sub_1D448C3DC(_QWORD *result, int a2, int a3)
{
  if (a2 < 0)
  {
    result[2] = 0;
    result[3] = 0;
    *result = a2 ^ 0x80000000;
    result[1] = 0;
    if (a3 < 0)
      *((_BYTE *)result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return sub_1D448CB40(result, a2);
    }
    *((_BYTE *)result + 32) = 0;
    if (a2)
      return sub_1D448CB40(result, a2);
  }
  return result;
}

uint64_t type metadata accessor for InterleavedSignalBuffer.ContiguousSamples(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InterleavedSignalBuffer.ContiguousSamples);
}

void sub_1D448C420()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D448C430()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D448C440()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D448C450()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D448C460()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D448C470()
{
  return sub_1D4488244();
}

void sub_1D448C490(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1D4488328(a1, a2, *(_QWORD **)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD **)(v2 + 64), *(_QWORD *)(v2 + 16));
  sub_1D42B6F28();
}

void sub_1D448C4BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1D4488488(a1, a2, *(_QWORD **)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD **)(v2 + 72), *(_QWORD *)(v2 + 16));
  sub_1D42B6F28();
}

uint64_t type metadata accessor for DeinterleavedSignalBuffer.BufferSlice(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DeinterleavedSignalBuffer.BufferSlice);
}

uint64_t sub_1D448C4F4(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1D448C528(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_1D448CAF8(a1, a2);
  sub_1D42CB0C4();
  *(_QWORD *)(v3 + 8) = *(_QWORD *)(v2 + 8);
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v2 + 16);
  sub_1D42CB15C();
}

uint64_t sub_1D448C55C(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t sub_1D448C598(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return sub_1D42CB898(-1);
  if (a2 < 0 && *((_BYTE *)a1 + 24))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    v2 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v2) = -1;
  }
  return sub_1D42CB898(v2);
}

_QWORD *sub_1D448C5D4(_QWORD *result, int a2, int a3)
{
  if (a2 < 0)
  {
    result[1] = 0;
    result[2] = 0;
    *result = a2 ^ 0x80000000;
    if (a3 < 0)
      *((_BYTE *)result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return sub_1D448CB40(result, a2);
    }
    *((_BYTE *)result + 24) = 0;
    if (a2)
      return sub_1D448CB40(result, a2);
  }
  return result;
}

uint64_t type metadata accessor for InterleavedSignalBuffer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InterleavedSignalBuffer);
}

void sub_1D448C618()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D448C628()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D448C638()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D448C648()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D448C658(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1D825E41C](&unk_1D4548894);
  return MEMORY[0x1D825E41C](MEMORY[0x1E0DEDE40], a1, &v3);
}

void sub_1D448C6A0()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D448C6B0(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1D825E41C](&unk_1D45488E4);
  return MEMORY[0x1D825E41C](MEMORY[0x1E0DEDE28], a1, &v3);
}

void sub_1D448C6F8()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D448C708()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D448C718(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1D825E41C](&unk_1D4548A8C);
  return MEMORY[0x1D825E41C](MEMORY[0x1E0DEDE40], a1, &v3);
}

void sub_1D448C760()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D448C770(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1D825E41C](&unk_1D4548ADC);
  return MEMORY[0x1D825E41C](MEMORY[0x1E0DEDE28], a1, &v3);
}

void sub_1D448C7B8()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D448C7C8()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D448C7D8()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D448C7E8()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t type metadata accessor for InterleavedSignalBuffer.NoncontiguousSamples(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InterleavedSignalBuffer.NoncontiguousSamples);
}

uint64_t type metadata accessor for InterleavedSignalBuffer.ContiguousChannels(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InterleavedSignalBuffer.ContiguousChannels);
}

uint64_t type metadata accessor for InterleavedSignalBuffer.ContiguousFrames(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InterleavedSignalBuffer.ContiguousFrames);
}

void sub_1D448C81C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_1D448CBD0(a1, a2);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(v3 + 24);
  *(_OWORD *)(v2 + 40) = *(_OWORD *)(v3 + 40);
  swift_bridgeObjectRetain();
  sub_1D42B6E24();
}

void sub_1D448C84C(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;

  sub_1D448CAF8(a1, a2);
  sub_1D42CB0C4();
  sub_1D448CBB4();
  v3[4] = v2[4];
  v3[5] = v2[5];
  v3[6] = v2[6];
  sub_1D42CB15C();
}

void sub_1D448C88C(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  sub_1D42B6E24();
}

uint64_t sub_1D448C8D4(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return sub_1D42CB898(-1);
  if (a2 < 0 && *((_BYTE *)a1 + 56))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    v2 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v2) = -1;
  }
  return sub_1D42CB898(v2);
}

_QWORD *sub_1D448C910(_QWORD *result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 5) = 0u;
    *(_OWORD *)(result + 3) = 0u;
    *(_OWORD *)(result + 1) = 0u;
    *result = a2 ^ 0x80000000;
    if (a3 < 0)
      *((_BYTE *)result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return sub_1D448CB40(result, a2);
    }
    *((_BYTE *)result + 56) = 0;
    if (a2)
      return sub_1D448CB40(result, a2);
  }
  return result;
}

uint64_t type metadata accessor for InterleavedSignalBuffer.BufferSlice(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InterleavedSignalBuffer.BufferSlice);
}

uint64_t sub_1D448C9A8()
{
  return sub_1D4487C50();
}

uint64_t sub_1D448CA68()
{
  return sub_1D451AD34();
}

uint64_t sub_1D448CA8C()
{
  return sub_1D451AD34();
}

void sub_1D448CAB4()
{
  sub_1D4489C50();
}

void sub_1D448CAC0()
{
  sub_1D4489C50();
}

uint64_t sub_1D448CAC8()
{
  return sub_1D451AA4C();
}

void sub_1D448CAD8()
{
  sub_1D4489C50();
}

uint64_t sub_1D448CAE0()
{
  return sub_1D451B2B0();
}

uint64_t sub_1D448CAF8(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D448CB2C()
{
  return sub_1D451B244();
}

_QWORD *sub_1D448CB40(_QWORD *result, int a2)
{
  *result = (a2 - 1);
  return result;
}

__n128 sub_1D448CB4C()
{
  __n128 *v0;

  return v0[2];
}

__n128 sub_1D448CB68()
{
  uint64_t v0;

  return *(__n128 *)(v0 - 112);
}

uint64_t sub_1D448CB84()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_1D448CBA0()
{
  uint64_t v0;
  uint64_t v1;

  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v1, 0, 1, v0);
}

void sub_1D448CBB4()
{
  _QWORD *v0;
  _QWORD *v1;

  v1[1] = v0[1];
  v1[2] = v0[2];
  v1[3] = v0[3];
}

__n128 sub_1D448CBD0(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  result = *(__n128 *)(a2 + 8);
  *(__n128 *)(a1 + 8) = result;
  return result;
}

__n128 sub_1D448CBE8(double a1, __n128 a2, __n128 a3)
{
  __n128 *v3;
  uint64_t v4;
  __n128 result;

  *(__n128 *)(v4 - 160) = a3;
  *(__n128 *)(v4 - 144) = a2;
  result = v3[2];
  *(__n128 *)(v4 - 128) = result;
  *(_QWORD *)(v4 - 112) = v3[3].n128_u64[0];
  return result;
}

__n128 sub_1D448CC00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9, __int128 a10, __int128 a11)
{
  _OWORD *v11;
  __n128 result;

  *v11 = a11;
  v11[1] = a10;
  result = a9;
  v11[2] = a9;
  return result;
}

uint64_t sub_1D448CC18()
{
  return sub_1D451AD34();
}

uint64_t sub_1D448CC24()
{
  return sub_1D4487CC4();
}

uint64_t sub_1D448CC5C()
{
  return sub_1D451AA28();
}

uint64_t sub_1D448CC9C()
{
  return sub_1D451A938();
}

void sub_1D448CCA8()
{
  JUMPOUT(0x1D825C340);
}

uint64_t sub_1D448CCB4()
{
  uint64_t v0;

  return sub_1D4362718(v0 - 160);
}

uint64_t sub_1D448CCC0()
{
  return 0;
}

uint64_t sub_1D448CCD4()
{
  uint64_t v0;

  return sub_1D42BE0D0(v0);
}

uint64_t sub_1D448CCDC()
{
  return sub_1D451B238();
}

uint64_t sub_1D448CCE8()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1D448CCF4()
{
  uint64_t v0;

  return sub_1D448CD48(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D448CD04()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1D43644A0;
  return sub_1D448CCF4();
}

uint64_t sub_1D448CD48(uint64_t (*a1)(void))
{
  return a1();
}

ValueMetadata *type metadata accessor for XPCVoid()
{
  return &type metadata for XPCVoid;
}

uint64_t sub_1D448CD68()
{
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *sub_1D448CD98(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1D448CDE4(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

void type metadata accessor for SNUltronReportOperator()
{
  sub_1D42CB35C();
}

void sub_1D448CE3C(uint64_t a1)
{
  uint64_t v1;
  char *v3;
  int64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  int64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v20 = MEMORY[0x1E0DEE9D8];
    v3 = (char *)sub_1D4493180();
    sub_1D42C72A8(v3, v4, v5);
    type metadata accessor for CMTime(0);
    v6 = a1 + 48;
    do
    {
      sub_1D42B28FC(&qword_1EFE55D90);
      sub_1D4367904();
      v7 = v20;
      if ((sub_1D4306F10() & 1) == 0)
      {
        v8 = (char *)sub_1D4493278();
        sub_1D42C72A8(v8, v9, v10);
        v7 = v20;
      }
      v11 = *(_QWORD *)(v7 + 16);
      if (v11 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_1D44933DC();
        sub_1D42C72A8(v13, v14, v15);
        v7 = v20;
      }
      v6 += 24;
      *(_QWORD *)(v7 + 16) = v11 + 1;
      v12 = v7 + 28 * v11;
      *(_QWORD *)(v12 + 32) = v16;
      *(_QWORD *)(v12 + 40) = v17;
      *(_QWORD *)(v12 + 48) = v18;
      *(_BYTE *)(v12 + 56) = v19;
      --v1;
    }
    while (v1);
  }
  sub_1D43A1908();
}

uint64_t sub_1D448CF58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v4;
  int64_t v5;
  char v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  _BYTE v17[48];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    v4 = (char *)sub_1D4493180();
    sub_1D42C72C4(v4, v5, v6);
    v7 = a1 + 32;
    v2 = v21;
    do
    {
      sub_1D4492180(v7, (uint64_t)v17);
      sub_1D44932CC();
      sub_1D42B28FC(&qword_1EFE52880);
      sub_1D4367904();
      if ((sub_1D4306F10() & 1) == 0)
      {
        v8 = (char *)sub_1D4493278();
        sub_1D42C72C4(v8, v9, v10);
        v2 = v21;
      }
      v12 = *(_QWORD *)(v2 + 16);
      v11 = *(_QWORD *)(v2 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1D42C72C4((char *)(v11 > 1), v12 + 1, 1);
        v2 = v21;
      }
      *(_QWORD *)(v2 + 16) = v12 + 1;
      v13 = (_OWORD *)(v2 + 48 * v12);
      v14 = v18;
      v15 = v20;
      v13[3] = v19;
      v13[4] = v15;
      v13[2] = v14;
      v7 += 48;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1D448D080(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1D4493180();
    sub_1D42C7314();
    v2 = v14;
    v4 = (unint64_t *)(a1 + 56);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1D42DD16C(v5, v6);
      sub_1D42B28FC(&qword_1EFE519C8);
      sub_1D44932CC();
      sub_1D4367904();
      if ((sub_1D4306F10() & 1) == 0)
      {
        sub_1D4493278();
        sub_1D42C7314();
        v2 = v14;
      }
      v7 = *(_QWORD *)(v2 + 16);
      if (v7 >= *(_QWORD *)(v2 + 24) >> 1)
      {
        sub_1D44933DC();
        sub_1D42C7314();
        v2 = v14;
      }
      v4 += 4;
      *(_QWORD *)(v2 + 16) = v7 + 1;
      v8 = (_QWORD *)(v2 + 32 * v7);
      v8[4] = v10;
      v8[5] = v11;
      v8[6] = v12;
      v8[7] = v13;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_1D448D1B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    sub_1D4493180();
    sub_1D42C7418();
    v3 = v10;
    v4 = a1 + 48;
    do
    {
      sub_1D43E6278();
      sub_1D42B28FC(&qword_1EFE40418);
      sub_1D44932CC();
      sub_1D4367904();
      swift_bridgeObjectRelease();
      if ((sub_1D4306F10() & 1) == 0)
      {
        sub_1D4493278();
        sub_1D42C7418();
        v3 = v10;
      }
      v5 = *(_QWORD *)(v3 + 16);
      if (v5 >= *(_QWORD *)(v3 + 24) >> 1)
      {
        sub_1D44933DC();
        sub_1D42C7418();
        v3 = v10;
      }
      *(_QWORD *)(v3 + 16) = v5 + 1;
      v6 = v3 + 24 * v5;
      *(_BYTE *)(v6 + 32) = v7;
      v4 += 24;
      *(_QWORD *)(v6 + 40) = v8;
      *(_QWORD *)(v6 + 48) = v9;
      --v1;
    }
    while (v1);
  }
  sub_1D43A1908();
}

void sub_1D448D2D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v7 = MEMORY[0x1E0DEE9D8];
    sub_1D4493180();
    sub_1D42C75EC();
    v3 = a1 + 32;
    v4 = v7;
    do
    {
      sub_1D43E6278();
      sub_1D42B28FC((uint64_t *)&unk_1EFE472F0);
      sub_1D44932CC();
      sub_1D4367904();
      swift_bridgeObjectRelease();
      if ((sub_1D4306F10() & 1) == 0)
      {
        sub_1D4493278();
        sub_1D42C75EC();
        v4 = v7;
      }
      v5 = *(_QWORD *)(v4 + 16);
      if (v5 >= *(_QWORD *)(v4 + 24) >> 1)
      {
        sub_1D44933DC();
        sub_1D42C75EC();
        v4 = v7;
      }
      *(_QWORD *)(v4 + 16) = v5 + 1;
      *(_QWORD *)(v4 + 8 * v5 + 32) = v6;
      v3 += 8;
      --v1;
    }
    while (v1);
  }
  sub_1D42EA500();
}

void sub_1D448D3E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t i;
  uint64_t v31;
  unint64_t v32;

  sub_1D44932E4();
  a24 = v26;
  a25 = v27;
  v29 = v28;
  if (v28 >> 62)
  {
    sub_1D449312C();
    sub_1D431204C();
    sub_1D449326C();
  }
  else
  {
    sub_1D44933D0();
  }
  if (!v25)
  {
LABEL_13:
    sub_1D4493044();
    return;
  }
  sub_1D44931C4();
  if ((v25 & 0x8000000000000000) == 0)
  {
    for (i = 0; i != v25; ++i)
    {
      if ((v29 & 0xC000000000000001) != 0)
        sub_1D4311FE0();
      swift_unknownObjectRetain();
      sub_1D4367904();
      v31 = a13;
      if ((sub_1D4306F10() & 1) == 0)
      {
        sub_1D4493214();
        v31 = a13;
      }
      v32 = *(_QWORD *)(v31 + 16);
      if (v32 >= *(_QWORD *)(v31 + 24) >> 1)
      {
        sub_1D44932A4();
        v31 = a13;
      }
      *(_QWORD *)(v31 + 16) = v32 + 1;
      sub_1D42B293C(&a10, (_OWORD *)(v31 + 32 * v32 + 32));
    }
    goto LABEL_13;
  }
  __break(1u);
}

void sub_1D448D4EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t i;
  uint64_t v31;
  unint64_t v32;

  sub_1D44932E4();
  a24 = v26;
  a25 = v27;
  v29 = v28;
  if (v28 >> 62)
  {
    sub_1D449312C();
    sub_1D431204C();
    sub_1D449326C();
  }
  else
  {
    sub_1D44933D0();
  }
  if (!v25)
  {
LABEL_13:
    sub_1D4493044();
    return;
  }
  sub_1D44931C4();
  if ((v25 & 0x8000000000000000) == 0)
  {
    for (i = 0; i != v25; ++i)
    {
      if ((v29 & 0xC000000000000001) != 0)
        sub_1D4311FE0();
      sub_1D42CB2A4(v29 + 8 * i);
      sub_1D42B28FC((uint64_t *)&unk_1EFE4A4F0);
      sub_1D4367904();
      v31 = a13;
      if ((sub_1D4306F10() & 1) == 0)
      {
        sub_1D4493214();
        v31 = a13;
      }
      v32 = *(_QWORD *)(v31 + 16);
      if (v32 >= *(_QWORD *)(v31 + 24) >> 1)
      {
        sub_1D44932A4();
        v31 = a13;
      }
      *(_QWORD *)(v31 + 16) = v32 + 1;
      sub_1D42B293C(&a10, (_OWORD *)(v31 + 32 * v32 + 32));
    }
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_1D448D5F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v5 = MEMORY[0x1E0DEE9D8];
    sub_1D451B49C();
    v4 = a1 + 32;
    do
    {
      v4 += 8;
      sub_1D451AC44();
      sub_1D451B484();
      sub_1D451B4A8();
      sub_1D451B4B4();
      sub_1D451B490();
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

uint64_t sub_1D448D694(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  __int128 v7;
  _BYTE v8[32];
  __int128 v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    sub_1D42C7B00();
    v4 = a1 + 32;
    v2 = v10;
    do
    {
      sub_1D42B294C(v4, (uint64_t)v8);
      sub_1D42B28FC(&qword_1EFE54D50);
      swift_dynamicCast();
      v7 = v9;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D42C7B00();
        v2 = v10;
      }
      v5 = *(_QWORD *)(v2 + 16);
      if (v5 >= *(_QWORD *)(v2 + 24) >> 1)
      {
        sub_1D42C7B00();
        v2 = v10;
      }
      *(_QWORD *)(v2 + 16) = v5 + 1;
      *(_OWORD *)(v2 + 16 * v5 + 32) = v7;
      v4 += 32;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1D448D7C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id *v4;
  id v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1D42C7550();
    v4 = (id *)(a1 + 32);
    v2 = v9;
    do
    {
      v5 = *v4;
      sub_1D42B28FC(&qword_1EFE54D50);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D42C7550();
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      if (v6 >= *(_QWORD *)(v2 + 24) >> 1)
      {
        sub_1D42C7550();
        v2 = v9;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_1D42B293C(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      v4 += 2;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_1D448D8F4(unint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  id v4;
  uint64_t v5;
  unint64_t v6;
  __int128 v7;
  uint64_t v8;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1D451B5A4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    sub_1D42C7550();
    if (v2 < 0)
    {
      __break(1u);
    }
    else
    {
      for (i = 0; i != v2; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
          MEMORY[0x1D825CD78](i, a1);
        else
          v4 = *(id *)(a1 + 8 * i + 32);
        type metadata accessor for SNDetectionResult();
        swift_dynamicCast();
        v5 = v8;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D42C7550();
          v5 = v8;
        }
        v6 = *(_QWORD *)(v5 + 16);
        if (v6 >= *(_QWORD *)(v5 + 24) >> 1)
        {
          sub_1D42C7550();
          v5 = v8;
        }
        *(_QWORD *)(v5 + 16) = v6 + 1;
        sub_1D42B293C(&v7, (_OWORD *)(v5 + 32 * v6 + 32));
      }
    }
  }
}

uint64_t sub_1D448DA74(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v6 = MEMORY[0x1E0DEE9D8];
    sub_1D451B49C();
    v4 = a1 + 32;
    do
    {
      sub_1D42B294C(v4, (uint64_t)&v5);
      type metadata accessor for SNDetectionResult();
      swift_dynamicCast();
      sub_1D451B484();
      sub_1D451B4A8();
      sub_1D451B4B4();
      sub_1D451B490();
      v4 += 32;
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

uint64_t sub_1D448DB4C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, void *a7, CMTimeValue a8, uint64_t a9, CMTimeEpoch a10)
{
  uint64_t v10;
  uint64_t v11;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v45;
  _QWORD v46[4];
  uint64_t v47;

  v11 = v10;
  sub_1D42D6A2C();
  v46[3] = swift_getObjectType();
  v46[0] = a1;
  swift_unknownObjectRetain();
  v16 = sub_1D42E6C50(v46);
  v17 = sub_1D43648D4((uint64_t)v16, a3);
  v45 = v18;
  v20 = v19;
  v21 = v16;
  sub_1D4364944((uint64_t)v21, a6);
  v23 = v22;

  if (v23)
    v24 = v23;
  else
    v24 = MEMORY[0x1E0DEE9D8];
  if ((a4 & 1) != 0)
  {
    v40 = v20;
    if (v24 >> 62)
    {
      sub_1D42DCE84();
      sub_1D42B28FC(&qword_1EFE54C78);
      v26 = sub_1D451B568();
      sub_1D42CB208();
    }
    else
    {
      v25 = v24 & 0xFFFFFFFFFFFFFF8;
      sub_1D42DCE84();
      sub_1D451B868();
      sub_1D42B28FC(&qword_1EFE54C78);
      v26 = v24;
      if (!swift_dynamicCastMetatype())
      {
        v27 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v26 = v24;
        if (v27)
        {
          v28 = v25 + 32;
          while (swift_dynamicCastObjCProtocolConditional())
          {
            v28 += 8;
            if (!--v27)
            {
              v26 = v24;
              goto LABEL_17;
            }
          }
          v26 = v25 | 1;
LABEL_17:
          v11 = v10;
        }
      }
    }
    v32 = v40;
    v39 = a3;
    v33 = sub_1D448F294(a1, v17, v45, v40, a2, a5, v26, a7, a8, a9, a10);
    v34 = v17;
    sub_1D42CB208();
    swift_bridgeObjectRelease();
    if (v11)
    {
      sub_1D4491ED8(v17);

      return v32;
    }
    v46[0] = v39;
    if (v33)
    {
      v35 = v21;
      swift_bridgeObjectRetain();
      sub_1D44933E8();
      sub_1D4491F10(v36);
      swift_isUniquelyReferenced_nonNull_native();
      v47 = v39;
      v46[0] = 0x8000000000000000;
      sub_1D44933E8();
      sub_1D42E845C();
      v32 = v47;

      swift_bridgeObjectRelease();
      sub_1D44933E8();
      sub_1D4491ED8(v37);
      sub_1D4491ED8(v34);
      return v32;
    }
  }
  else
  {
    if (v17)
    {
      v46[0] = 0;
      sub_1D42EA340();
      swift_retain();
      swift_retain();
      sub_1D451A20C();
      sub_1D4493284();
    }
    sub_1D42CB208();
    v46[0] = a3;
  }
  v29 = v21;
  sub_1D438C74C();
  sub_1D42E7B4C();
  v31 = v30;

  sub_1D4491ED8(v31);
  sub_1D4493284();
  return v46[0];
}

uint64_t sub_1D448DEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  _QWORD v7[4];

  sub_1D4493260();
  sub_1D42D6A2C();
  v7[3] = swift_getObjectType();
  v7[0] = v2;
  swift_unknownObjectRetain();
  v4 = sub_1D42E6C50(v7);
  if (sub_1D43648D4((uint64_t)v4, a2))
  {
    v7[0] = 0;
    sub_1D451A20C();
    swift_release();
    swift_release();
    swift_release();
  }
  v7[0] = a2;
  sub_1D42CB7B8();
  sub_1D42E7B4C();
  sub_1D4491ED8(v5);

  return v7[0];
}

uint64_t sub_1D448DF68()
{
  sub_1D4493260();
  return sub_1D451B964();
}

void sub_1D448DF88()
{
  sub_1D42BE9A8();
  sub_1D451B964();
  sub_1D451B994();
  sub_1D42EA500();
}

void sub_1D448DFC4(uint64_t a1, int32_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id *v7;
  uint64_t v8;
  id v9;
  void *value;
  uint64_t ObjectType;
  CMTimeValue v12;
  CMTimeEpoch epoch;
  CMTimeValue v14;
  CMTimeEpoch v15;
  uint64_t v16;
  uint64_t v17;
  CMTimeValue v18;
  CMTimeEpoch v19;
  uint64_t v20;
  CMTimeEpoch v21;
  unint64_t v22;
  int64_t v23;
  __int128 v25;
  CMTime duration;
  CMTime rhs;
  CMTimeRange lhs;
  uint64_t v29;
  CMTimeRange v30;

  v4 = *(_QWORD *)(a4 + 16);
  if (v4)
  {
    v29 = MEMORY[0x1E0DEE9D8];
    sub_1D42C7B00();
    v23 = -a1;
    if (__OFSUB__(0, a1))
    {
      __break(1u);
    }
    else
    {
      v7 = (id *)(a4 + 32);
      v8 = v29;
      do
      {
        v9 = *v7;
        objc_msgSend(v9, sel_copy);
        sub_1D451B208();
        swift_unknownObjectRelease();
        sub_1D42B28FC(&qword_1EFE54D50);
        sub_1D4367904();
        v25 = *(_OWORD *)&rhs.value;
        value = (void *)rhs.value;
        ObjectType = swift_getObjectType();
        objc_msgSend(value, sel_timeRange);
        v12 = lhs.start.value;
        epoch = lhs.start.epoch;
        v14 = lhs.duration.value;
        v15 = lhs.duration.epoch;
        v16 = *(_QWORD *)&lhs.start.timescale;
        v17 = *(_QWORD *)&lhs.duration.timescale;
        CMTimeMake(&lhs.start, v23, a2);
        v18 = lhs.start.value;
        v19 = lhs.start.epoch;
        v20 = *(_QWORD *)&lhs.start.timescale;
        lhs.start.value = v12;
        *(_QWORD *)&lhs.start.timescale = v16;
        lhs.start.epoch = epoch;
        rhs.value = v18;
        *(_QWORD *)&rhs.timescale = v20;
        rhs.epoch = v19;
        CMTimeAdd(&duration, &lhs.start, &rhs);
        v21 = duration.epoch;
        duration.epoch = v15;
        rhs.value = duration.value;
        *(_QWORD *)&rhs.timescale = *(_QWORD *)&duration.timescale;
        rhs.epoch = v21;
        duration.value = v14;
        *(_QWORD *)&duration.timescale = v17;
        CMTimeRangeMake(&lhs, &rhs, &duration);
        v30 = lhs;
        (*(void (**)(CMTimeRange *, uint64_t))(*((_QWORD *)&v25 + 1) + 8))(&v30, ObjectType);

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D4493278();
          sub_1D42C7B00();
          v8 = v29;
        }
        v22 = *(_QWORD *)(v8 + 16);
        if (v22 >= *(_QWORD *)(v8 + 24) >> 1)
        {
          sub_1D42C7B00();
          v8 = v29;
        }
        *(_QWORD *)(v8 + 16) = v22 + 1;
        *(_OWORD *)(v8 + 16 * v22 + 32) = v25;
        v7 += 2;
        --v4;
      }
      while (v4);
    }
  }
}

uint64_t sub_1D448E220(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  if (!*(_QWORD *)(a1 + 16))
    return MEMORY[0x1E0DEE9D8];
  v2 = *(id *)(a1 + 32);
  objc_msgSend(v2, sel_timeRange);
  sub_1D448DFC4(v7, v8, v3, a1);
  v5 = v4;

  return v5;
}

uint64_t sub_1D448E28C(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  id v5;

  v3 = sub_1D43E17D8();
  v4 = (void *)sub_1D4519C90();
  v5 = objc_msgSend(v3, sel_stringFromDate_, v4);

  sub_1D451A6EC();
  sub_1D42CB7B8();
  sub_1D451A794();
  sub_1D451A794();
  swift_bridgeObjectRelease();
  return a2;
}

#error "1D448E438: call analysis failed (funcsize=141)"

void sub_1D448E590(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[6];

  if (a1 >> 62)
  {
    sub_1D449312C();
    sub_1D431204C();
    sub_1D449326C();
  }
  else
  {
    sub_1D44933D0();
  }
  if (v1)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    sub_1D42C7B34();
    if (v1 < 0)
    {
      __break(1u);
    }
    else
    {
      v3 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v4 = (id)MEMORY[0x1D825CD78](v3, a1);
        else
          v4 = sub_1D42CB2A4(a1 + 8 * v3);
        v5 = v4;
        SNDetectionResult.timeRange.getter((uint64_t)v9);

        v6 = *(_QWORD *)(v8 + 16);
        if (v6 >= *(_QWORD *)(v8 + 24) >> 1)
          sub_1D42C7B34();
        ++v3;
        v7 = v9[0];
        *(_QWORD *)(v8 + 16) = v6 + 1;
        *(_QWORD *)(v8 + 8 * v6 + 32) = v7;
      }
      while (v1 != v3);
    }
  }
}

void sub_1D448E6A4(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t i;
  _BYTE *v13;
  char v14;
  unint64_t v15;
  uint64_t inited;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1D448E590(a1);
  v3 = v2;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1D431204C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v5 = MEMORY[0x1E0DEE9D8];
  if (!v4)
  {
    v7 = MEMORY[0x1E0DEE9D8];
LABEL_21:
    sub_1D42B28FC((uint64_t *)&unk_1EFE498B0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D4526260;
    *(_QWORD *)(inited + 32) = 0x6D617473656D6974;
    *(_QWORD *)(inited + 40) = 0xE900000000000070;
    v17 = sub_1D42B28FC(&qword_1EFE54D38);
    *(_QWORD *)(inited + 48) = v3;
    *(_QWORD *)(inited + 72) = v17;
    *(_QWORD *)(inited + 80) = 0x6E656469666E6F63;
    *(_QWORD *)(inited + 88) = 0xEA00000000006563;
    v18 = sub_1D42B28FC(&qword_1EFE4CC80);
    *(_QWORD *)(inited + 96) = v7;
    *(_QWORD *)(inited + 120) = v18;
    *(_QWORD *)(inited + 128) = 0x6465746365746564;
    *(_QWORD *)(inited + 136) = 0xE800000000000000;
    *(_QWORD *)(inited + 168) = sub_1D42B28FC(&qword_1EFE54D40);
    *(_QWORD *)(inited + 144) = v5;
    sub_1D451A5E4();
    return;
  }
  v20 = MEMORY[0x1E0DEE9D8];
  sub_1D42C7654();
  if ((v4 & 0x8000000000000000) == 0)
  {
    v19 = v3;
    v6 = 0;
    v7 = v20;
    v8 = a1 & 0xC000000000000001;
    do
    {
      if (v8)
        v9 = (char *)MEMORY[0x1D825CD78](v6, a1);
      else
        v9 = (char *)sub_1D42CB2A4(a1 + 8 * v6);
      v10 = *(_QWORD *)&v9[OBJC_IVAR___SNDetectionResult_impl + 48];

      v11 = *(_QWORD *)(v20 + 16);
      if (v11 >= *(_QWORD *)(v20 + 24) >> 1)
        sub_1D42C7654();
      ++v6;
      *(_QWORD *)(v20 + 16) = v11 + 1;
      *(_QWORD *)(v20 + 8 * v11 + 32) = v10;
    }
    while (v4 != v6);
    sub_1D42C7B68();
    for (i = 0; i != v4; ++i)
    {
      if (v8)
        v13 = (_BYTE *)MEMORY[0x1D825CD78](i, a1);
      else
        v13 = sub_1D42CB2A4(a1 + 8 * i);
      v14 = v13[OBJC_IVAR___SNDetectionResult_impl + 72];

      v15 = *(_QWORD *)(v5 + 16);
      if (v15 >= *(_QWORD *)(v5 + 24) >> 1)
        sub_1D42C7B68();
      *(_QWORD *)(v5 + 16) = v15 + 1;
      *(_BYTE *)(v5 + v15 + 32) = v14;
    }
    v3 = v19;
    goto LABEL_21;
  }
  __break(1u);
}

uint64_t sub_1D448E980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v12 = sub_1D448E350(a4);
  sub_1D4490B14(v12);
  swift_bridgeObjectRelease();
  sub_1D4365A34();
  v28 = v13;
  swift_release();
  v14 = sub_1D43E17F0();
  v15 = (void *)sub_1D4519C90();
  v16 = objc_msgSend(v14, sel_stringFromDate_, v15);

  v17 = sub_1D451A6EC();
  v19 = v18;

  v20 = sub_1D448E28C(a1, a2);
  v22 = v21;
  sub_1D42B28FC((uint64_t *)&unk_1EFE498B0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D45276D0;
  strcpy((char *)(inited + 32), "buildVersion");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  v24 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = a5;
  *(_QWORD *)(inited + 56) = a6;
  *(_QWORD *)(inited + 72) = v24;
  *(_QWORD *)(inited + 80) = 0x79546E657473696CLL;
  *(_QWORD *)(inited + 88) = 0xEA00000000006570;
  *(_QWORD *)(inited + 96) = a2;
  *(_QWORD *)(inited + 104) = a3;
  *(_QWORD *)(inited + 120) = v24;
  *(_QWORD *)(inited + 128) = 0x656D614E656C6966;
  *(_QWORD *)(inited + 136) = 0xE800000000000000;
  *(_QWORD *)(inited + 144) = v20;
  *(_QWORD *)(inited + 152) = v22;
  *(_QWORD *)(inited + 168) = v24;
  *(_QWORD *)(inited + 176) = 0x7274536F69647561;
  *(_QWORD *)(inited + 184) = 0xEF65746144676E69;
  *(_QWORD *)(inited + 192) = v17;
  *(_QWORD *)(inited + 200) = v19;
  *(_QWORD *)(inited + 216) = v24;
  *(_QWORD *)(inited + 224) = 0xD000000000000010;
  *(_QWORD *)(inited + 232) = 0x80000001D455ACF0;
  v25 = sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);
  *(_QWORD *)(inited + 240) = v28;
  *(_QWORD *)(inited + 264) = v25;
  strcpy((char *)(inited + 272), "userFeedback");
  v26 = MEMORY[0x1E0DEB418];
  *(_BYTE *)(inited + 285) = 0;
  *(_WORD *)(inited + 286) = -5120;
  *(_QWORD *)(inited + 288) = -1;
  *(_QWORD *)(inited + 312) = v26;
  *(_QWORD *)(inited + 320) = 0x664F7265626D756ELL;
  *(_QWORD *)(inited + 360) = MEMORY[0x1E0DEDC60];
  *(_QWORD *)(inited + 328) = 0xEF73656C706D6153;
  *(_QWORD *)(inited + 336) = a7;
  sub_1D42DCE84();
  sub_1D42CB7B8();
  return sub_1D451A5E4();
}

void sub_1D448EBF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;

  sub_1D42BE910();
  v41 = v28;
  v42 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v43 = v35;
  v44 = v36;
  v40 = v37;
  sub_1D42CB348();
  sub_1D4493440();
  MEMORY[0x1E0C80A78](v38);
  sub_1D42D7108();
  sub_1D448E28C(v34, v32);
  sub_1D449340C();
  sub_1D451A794();
  sub_1D4519B40();
  sub_1D435EB80();
  sub_1D448E980(v34, v32, v30, v41, a21, a22, a23);
  sub_1D4493260();
  type metadata accessor for SNFileUtils();
  v39 = (void *)sub_1D451A5A8();
  sub_1D42B7204();
  sub_1D44D2E68(v25, (uint64_t)v39, v42, v43, v44);

  if (!v24)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v40, v25, v23);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v23);
  sub_1D42BE844();
}

void sub_1D448ED54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  id v5;
  void *v6;
  _QWORD v7[2];

  v7[1] = *MEMORY[0x1E0C80C00];
  v7[0] = 0;
  v5 = objc_msgSend((id)objc_opt_self(), sel_copyRecentFramesOfAudioRingBufferToAVAudioBufferFrom_frameCount_ringBufferStartSampleTime_, a4, a5, v7);
  if (v5)
  {
    v6 = v5;
    sub_1D4493420();

  }
}

uint64_t sub_1D448EDEC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t i;
  id v8;

  if (!(a4 >> 62))
  {
    sub_1D44933D0();
    result = sub_1D42CB7B8();
    if (v4)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  sub_1D42CB7B8();
  result = sub_1D451B5A4();
  v4 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((a4 & 0xC000000000000001) != 0)
        sub_1D4311FE0();
      v8 = sub_1D42CB2A4(a4 + 8 * i);
      sub_1D4493420();

    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_1D448EEBC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, unint64_t a5, CMTimeValue a6, uint64_t a7, CMTimeEpoch a8)
{
  uint64_t v8;
  CMTimeValue value;
  CMTimeScale timescale;
  CMTimeFlags flags;
  CMTimeEpoch epoch;
  CMTimeValue v20;
  CMTimeEpoch v21;
  CMTimeEpoch v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  CMTimeValue v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  CMTimeEpoch v43;
  CMTimeFlags v44;
  CMTime v45;
  CMTime rhs;
  CMTimeRange range;
  CMTimeRange v48;
  CMTimeValue v49[7];
  CMTimeEpoch v50;

  sub_1D430E4AC(a4, (uint64_t)&v48);
  if (v8)
    return;
  v42 = a2;
  v40 = a4;
  v41 = a1;
  value = v48.start.value;
  timescale = v48.start.timescale;
  flags = v48.start.flags;
  epoch = v48.start.epoch;
  v20 = v48.duration.value;
  LODWORD(v50) = v48.duration.timescale;
  v44 = v48.duration.flags;
  v43 = v48.duration.epoch;
  range = v48;
  CMTimeRangeGetEnd(&rhs, &range);
  v21 = rhs.epoch;
  rhs.epoch = a8;
  range.start.value = rhs.value;
  *(_QWORD *)&range.start.timescale = *(_QWORD *)&rhs.timescale;
  range.start.epoch = v21;
  rhs.value = a6;
  *(_QWORD *)&rhs.timescale = a7;
  CMTimeSubtract(&v45, &range.start, &rhs);
  rhs = v45;
  range.start.value = value;
  range.start.timescale = timescale;
  range.start.flags = flags;
  range.start.epoch = epoch;
  range.duration.value = v20;
  range.duration.timescale = v50;
  range.duration.flags = v44;
  range.duration.epoch = v43;
  CMTimeClampToRange(&v45, &rhs, &range);
  v22 = v45.epoch;
  if (a5 >> 62)
  {
    sub_1D438C74C();
    v23 = sub_1D42EA3D8();
    sub_1D42D3258();
  }
  else
  {
    v23 = *(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v24 = MEMORY[0x1E0DEE9D8];
  if (v23)
  {
    range.start.value = MEMORY[0x1E0DEE9D8];
    sub_1D451B49C();
    if (v23 < 0)
    {
      __break(1u);
      goto LABEL_33;
    }
    v50 = v22;
    v25 = 0;
    do
    {
      if ((a5 & 0xC000000000000001) != 0)
        MEMORY[0x1D825CD78](v25, a5);
      else
        v26 = *(id *)(a5 + 8 * v25 + 32);
      ++v25;
      sub_1D451B484();
      sub_1D451B4A8();
      sub_1D451B4B4();
      sub_1D451B490();
    }
    while (v23 != v25);
    v27 = range.start.value;
    v24 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v27 = MEMORY[0x1E0DEE9D8];
  }
  v28 = sub_1D430E15C(v27);
  sub_1D42B7204();
  if (v28 >> 62)
  {
    sub_1D438C74C();
    v29 = sub_1D42EA3D8();
    sub_1D42D3258();
  }
  else
  {
    v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v29)
  {
    range.start.value = v24;
    sub_1D451B49C();
    if ((v29 & 0x8000000000000000) == 0)
    {
      v30 = 0;
      do
      {
        if ((v28 & 0xC000000000000001) != 0)
          MEMORY[0x1D825CD78](v30, v28);
        else
          v31 = *(id *)(v28 + 8 * v30 + 32);
        ++v30;
        type metadata accessor for SNDetectionResult();
        sub_1D44931DC();
        sub_1D451B484();
        sub_1D451B4A8();
        sub_1D451B4B4();
        sub_1D451B490();
      }
      while (v29 != v30);
      v24 = range.start.value;
      goto LABEL_23;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
LABEL_23:
  v32 = sub_1D42D3258();
  sub_1D448EDEC(v32, v42, v33, v24);
  v23 = v41;
  if (v24 >> 62)
  {
    sub_1D42DCE84();
    v39 = sub_1D42EA3D8();
    sub_1D42CB208();
    if (v39)
    {
LABEL_25:
      sub_1D42D2E5C(0, (v24 & 0xC000000000000001) == 0, v24);
      if ((v24 & 0xC000000000000001) == 0)
      {
        v34 = *(id *)(v24 + 32);
LABEL_27:
        v35 = v34;
        sub_1D42CB208();
        SNDetectionResult.timeRange.getter((uint64_t)v49);

        sub_1D430E65C(v49[0], v49[1], v49[2], v40);
        sub_1D448ED54(v23, v37, v38, (uint64_t)v40, v36);
        return;
      }
LABEL_34:
      v34 = (id)MEMORY[0x1D825CD78](0, v24);
      goto LABEL_27;
    }
  }
  else if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_25;
  }
  sub_1D42CB208();
}

uint64_t sub_1D448F294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, void *a8, CMTimeValue a9, uint64_t a10, CMTimeEpoch a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;
  void *v23;
  unint64_t v24;

  if (a2)
  {
    v12 = a2;
    swift_retain();
    sub_1D42BE9A0();
    sub_1D42EA340();
LABEL_3:
    sub_1D451A218();
    return v12;
  }
  sub_1D448F4B8();
  if (v11)
    return v12;
  v12 = v15;
  v17 = v16;
  if (a7 >> 62)
  {
    swift_retain();
    sub_1D42BE9A0();
    sub_1D42EA340();
    swift_bridgeObjectRetain();
    v18 = sub_1D42EA3D8();
    sub_1D435EB80();
  }
  else
  {
    v18 = *(_QWORD *)((a7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    sub_1D42BE9A0();
    sub_1D42EA340();
  }
  v20 = MEMORY[0x1E0DEE9D8];
  if (!v18)
  {
LABEL_15:
    sub_1D448EEBC(v12, v17, v19, a8, v20, a9, a10, a11);
    swift_release();
    swift_release();
    swift_release();
    sub_1D42B7204();
    goto LABEL_3;
  }
  v23 = a8;
  v24 = MEMORY[0x1E0DEE9D8];
  result = sub_1D451B49C();
  if ((v18 & 0x8000000000000000) == 0)
  {
    v22 = 0;
    do
    {
      if ((a7 & 0xC000000000000001) != 0)
        MEMORY[0x1D825CD78](v22, a7);
      else
        swift_unknownObjectRetain();
      ++v22;
      type metadata accessor for SNDetectionResult();
      sub_1D44931DC();
      sub_1D451B484();
      sub_1D451B4A8();
      sub_1D451B4B4();
      sub_1D451B490();
    }
    while (v18 != v22);
    v20 = v24;
    a8 = v23;
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

void sub_1D448F4B8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  sub_1D42BE910();
  v3 = sub_1D4493260();
  v4 = type metadata accessor for SNUltronUtils.UltronReportingPlan(v3);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42F1ED4();
  v6 = sub_1D4493418();
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42D7108();
  v8 = (id)MobileGestalt_get_current_device();
  if (v8)
  {
    v9 = v8;
    v10 = (id)MobileGestalt_copy_buildVersion_obj();

    if (v10)
    {
      v11 = sub_1D451A6EC();
      v13 = v12;

      sub_1D4457598();
      sub_1D4519B10();
      sub_1D435EB80();
      v14 = (uint64_t *)(v2 + *(int *)(v4 + 20));
      *v14 = v11;
      v14[1] = v13;
      type metadata accessor for SNUtils();
      v15 = sub_1D44BD854(v0);
      v17 = v16;
      sub_1D4519CD8();
      sub_1D44933E8();
      sub_1D4491FE0(v18, v19);
      v20 = (uint64_t *)(v1 + *(int *)(v6 + 24));
      *v20 = v15;
      v20[1] = v17;
      sub_1D4491F70(v2, (void (*)(_QWORD))type metadata accessor for SNUltronUtils.UltronReportingPlan);
      sub_1D448FDA0();
      sub_1D4491F70(v1, (void (*)(_QWORD))type metadata accessor for SNUltronUtils.UltronReportTemplate);
      sub_1D42BE844();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1D448F640()
{
  sub_1D42CB348();
  sub_1D43287AC(&qword_1EFE49A80, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  sub_1D451A614();
  type metadata accessor for SNUltronUtils.UltronReportingPlan(0);
  swift_bridgeObjectRetain();
  sub_1D451A74C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D448F6C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  if ((MEMORY[0x1D825B4AC]() & 1) == 0)
    return 0;
  v4 = *(int *)(type metadata accessor for SNUltronUtils.UltronReportingPlan(0) + 20);
  v5 = *(_QWORD *)(a1 + v4);
  v6 = *(_QWORD *)(a1 + v4 + 8);
  v7 = (_QWORD *)(a2 + v4);
  if (v5 == *v7 && v6 == v7[1])
    return 1;
  else
    return sub_1D451B820();
}

uint64_t sub_1D448F734(uint64_t a1, uint64_t a2)
{
  char v6;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001D455AD10 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726556646C697562 && a2 == 0xEC0000006E6F6973)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D448F834(char a1)
{
  if ((a1 & 1) != 0)
    return 0x726556646C697562;
  else
    return 0xD000000000000014;
}

uint64_t sub_1D448F878(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1D42B28FC(&qword_1EFE54DA0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1D42CB18C();
  sub_1D42B5528(a1, a1[3]);
  sub_1D4492CCC();
  sub_1D451BA24();
  sub_1D42CB348();
  sub_1D43287AC(qword_1EFE49980, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  sub_1D451B760();
  if (!v1)
  {
    type metadata accessor for SNUltronUtils.UltronReportingPlan(0);
    sub_1D451B724();
  }
  return sub_1D42BE98C(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
}

void sub_1D448F9B0()
{
  sub_1D42BE9A8();
  sub_1D42CB348();
  sub_1D43287AC(&qword_1EFE49A80, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  sub_1D451A614();
  type metadata accessor for SNUltronUtils.UltronReportingPlan(0);
  swift_bridgeObjectRetain();
  sub_1D451A74C();
  swift_bridgeObjectRelease();
  sub_1D451B994();
  sub_1D42EA500();
}

void sub_1D448FA40()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;

  sub_1D42BE910();
  v3 = v2;
  v19 = v4;
  v22 = sub_1D42CB348();
  v20 = *(_QWORD *)(v22 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  v23 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1D42B28FC(&qword_1EFE54D90);
  v7 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  sub_1D42D7108();
  v8 = type metadata accessor for SNUltronUtils.UltronReportingPlan(0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  sub_1D42F1ED4();
  sub_1D42B5528(v3, v3[3]);
  sub_1D4492CCC();
  sub_1D451BA0C();
  if (v0)
  {
    sub_1D42B5400((uint64_t)v3);
  }
  else
  {
    v17 = v3;
    v18 = v7;
    v10 = v20;
    sub_1D43287AC(qword_1EFE49960, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v11 = v22;
    sub_1D451B688();
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v1, v23, v11);
    v12 = sub_1D451B64C();
    v14 = v13;
    sub_1D4493100();
    v15 = (uint64_t *)(v1 + *(int *)(v8 + 20));
    *v15 = v12;
    v15[1] = v14;
    sub_1D4491FE0(v1, v19);
    sub_1D42B5400((uint64_t)v17);
    sub_1D4491F70(v1, (void (*)(_QWORD))type metadata accessor for SNUltronUtils.UltronReportingPlan);
  }
  sub_1D42BE844();
}

uint64_t sub_1D448FC50()
{
  char *v0;

  return sub_1D448F834(*v0);
}

uint64_t sub_1D448FC58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D448F734(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D448FC7C()
{
  sub_1D4492CCC();
  return sub_1D451BA3C();
}

uint64_t sub_1D448FCA4()
{
  sub_1D4492CCC();
  return sub_1D451BA48();
}

void sub_1D448FCCC()
{
  sub_1D448FA40();
}

uint64_t sub_1D448FCE0(_QWORD *a1)
{
  return sub_1D448F878(a1);
}

uint64_t sub_1D448FCFC()
{
  sub_1D451B958();
  sub_1D4519BC4();
  sub_1D43287AC(&qword_1EFE49A80, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  sub_1D451A614();
  swift_bridgeObjectRetain();
  sub_1D451A74C();
  swift_bridgeObjectRelease();
  return sub_1D451B994();
}

void sub_1D448FDA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;

  sub_1D42BE910();
  v4 = v3;
  v6 = v5;
  sub_1D42B28FC(&qword_1EFE54C80);
  sub_1D4493440();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42CB18C();
  sub_1D42B28FC(&qword_1EFE4AF08);
  sub_1D42B6D94();
  v8 = (void *)sub_1D451A230();
  sub_1D42B28FC(&qword_1EFE54C88);
  sub_1D42B6D94();
  v9 = (void *)sub_1D451A230();
  sub_1D448FEBC(v8, v9, v6, v4, v1);
  if (v0)
  {
    swift_release();
    swift_release();
  }
  else
  {
    sub_1D42E33F8(&qword_1EFE54C90, &qword_1EFE54C80);
    sub_1D451A344();
    sub_1D42BE98C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  sub_1D42BE844();
}

uint64_t sub_1D448FEBC@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (**v18)@<X0>(uint64_t *@<X8>);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void (*v50)(char *, uint64_t);
  id v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  id v100[5];

  v83 = a4;
  v96 = a5;
  v100[4] = *(id *)MEMORY[0x1E0C80C00];
  v67 = type metadata accessor for SNUltronUtils.UltronReportTemplate(0);
  v91 = *(_QWORD *)(v67 - 8);
  MEMORY[0x1E0C80A78](v67);
  v93 = v8;
  v95 = (uint64_t)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D42B28FC(&qword_1EFE54C98);
  v88 = *(_QWORD *)(v9 - 8);
  v89 = v9;
  MEMORY[0x1E0C80A78](v9);
  v87 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_1D42B28FC(&qword_1EFE54CA0);
  v92 = *(_QWORD *)(v94 - 8);
  MEMORY[0x1E0C80A78](v94);
  v90 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_1D42B28FC(&qword_1EFE54CA8);
  v73 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  v72 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1D42B28FC(&qword_1EFE54CB0);
  MEMORY[0x1E0C80A78](v76);
  v74 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_1D42B28FC(&qword_1EFE54CB8);
  v78 = *(_QWORD *)(v79 - 8);
  MEMORY[0x1E0C80A78](v79);
  v77 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1D42B28FC(&qword_1EFE54CC0);
  v85 = *(_QWORD *)(v15 - 8);
  v86 = v15;
  MEMORY[0x1E0C80A78](v15);
  v84 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v70 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v18 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v69 = sub_1D451A0B0();
  v68 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1D42B28FC(&qword_1EFE54CC8);
  v66 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_1D42B28FC(&qword_1EFE54CD0);
  v81 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v80 = (char *)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1D4519BC4();
  v97 = *(_QWORD *)(v25 - 8);
  v98 = v25;
  MEMORY[0x1E0C80A78](v25);
  v99 = (char *)&v65 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100[2] = a2;
  v100[3] = a1;
  v27 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v28 = a3;
  sub_1D4519B94();
  v29 = (void *)sub_1D451A6C8();
  swift_bridgeObjectRelease();
  v100[0] = 0;
  LOBYTE(a3) = objc_msgSend(v27, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v29, 1, 0, v100);

  if ((a3 & 1) != 0)
  {
    v30 = v28;
    v31 = v28 + *(int *)(v67 + 20);
    v32 = (uint64_t *)(v30 + *(int *)(v67 + 24));
    v65 = v30;
    v33 = *v32;
    v34 = v100[0];
    v100[0] = (id)sub_1D448E28C(v31, v33);
    v100[1] = v35;
    sub_1D451A794();
    sub_1D451A794();
    sub_1D4519B40();
    swift_bridgeObjectRelease();
    sub_1D42B28FC(&qword_1EFE54C88);
    sub_1D42E33F8(&qword_1EFE54CD8, &qword_1EFE54C88);
    sub_1D451A3BC();
    sub_1D42E33F8(&qword_1EFE54CE0, &qword_1EFE54CC8);
    v36 = sub_1D451A374();
    sub_1D42B28FC(&qword_1EFE54CE8);
    swift_allocObject();
    v37 = (void *)sub_1D43AEFD8(v36);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v23, v21);
    v100[0] = v37;
    v38 = v68;
    v39 = v69;
    (*(void (**)(char *, _QWORD, uint64_t))(v68 + 104))(v20, *MEMORY[0x1E0C958B0], v69);
    *v18 = sub_1D4490ACC;
    v18[1] = 0;
    v40 = v70;
    v41 = v71;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), _QWORD, uint64_t))(v70 + 104))(v18, *MEMORY[0x1E0C958F0], v71);
    sub_1D42E33F8(&qword_1EFE54CF0, &qword_1EFE54CE8);
    v42 = v80;
    sub_1D451A380();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v40 + 8))(v18, v41);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v20, v39);
    swift_release();
    sub_1D42B28FC(&qword_1EFE4AF08);
    sub_1D42E33F8(&qword_1EFE54CF8, &qword_1EFE4AF08);
    sub_1D42E33F8(&qword_1EFE54D00, &qword_1EFE54CD0);
    v43 = v72;
    v44 = v82;
    sub_1D451A398();
    v45 = v73;
    v46 = (uint64_t)v74;
    v47 = v75;
    (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v74, v43, v75);
    v48 = v76;
    (*(void (**)(uint64_t, char *, uint64_t))(v97 + 16))(v46 + *(int *)(v76 + 36), v99, v98);
    v49 = v83;
    *(_QWORD *)(v46 + *(int *)(v48 + 40)) = v83;
    v50 = *(void (**)(char *, uint64_t))(v45 + 8);
    v51 = v49;
    v50(v43, v47);
    sub_1D42E33F8(&qword_1EFE54D08, &qword_1EFE54CB0);
    v52 = v77;
    sub_1D451A38C();
    sub_1D4491FA0(v46);
    sub_1D42E33F8(&qword_1EFE54D10, &qword_1EFE54CB8);
    v53 = v84;
    v54 = v79;
    sub_1D451A3BC();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v52, v54);
    sub_1D42E33F8(&qword_1EFE54D18, &qword_1EFE54CC0);
    v56 = v86;
    v55 = v87;
    sub_1D451A314();
    sub_1D42B28FC(&qword_1EFE54D20);
    sub_1D42E33F8(&qword_1EFE54D28, &qword_1EFE54C98);
    v57 = v89;
    v58 = v90;
    sub_1D451A308();
    (*(void (**)(char *, uint64_t))(v88 + 8))(v55, v57);
    v59 = v95;
    sub_1D4491FE0(v65, v95);
    v60 = (*(unsigned __int8 *)(v91 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80);
    v61 = swift_allocObject();
    sub_1D44920BC(v59, v61 + v60);
    v62 = v94;
    sub_1D451A0BC();
    swift_release();
    (*(void (**)(char *, uint64_t))(v92 + 8))(v58, v62);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v53, v56);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v42, v44);
    return (*(uint64_t (**)(char *, uint64_t))(v97 + 8))(v99, v98);
  }
  else
  {
    v64 = v100[0];
    sub_1D4519AA4();

    return swift_willThrow();
  }
}

#error "1D44909FC: call analysis failed (funcsize=155)"

uint64_t sub_1D4490ACC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1D4492144();
  result = swift_allocError();
  *a1 = result;
  return result;
}

uint64_t sub_1D4490B08@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D4490B14(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;

  sub_1D42B28FC(&qword_1EFE54D30);
  result = sub_1D451B5B0();
  v3 = (_QWORD *)result;
  v4 = 0;
  v29 = a1;
  v7 = *(_QWORD *)(a1 + 64);
  v6 = a1 + 64;
  v5 = v7;
  v8 = 1 << *(_BYTE *)(v6 - 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v5;
  v27 = v6;
  v28 = (unint64_t)(v8 + 63) >> 6;
  v11 = result + 64;
  if ((v9 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v12 | (v4 << 6); ; i = __clz(__rbit64(v15)) + (v4 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v29 + 48) + 16 * i);
    v18 = *v17;
    v19 = v17[1];
    swift_bridgeObjectRetain();
    v20 = swift_bridgeObjectRetain();
    sub_1D448E6A4(v20);
    v22 = v21;
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v11 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v23 = (_QWORD *)(v3[6] + 16 * i);
    *v23 = v18;
    v23[1] = v19;
    *(_QWORD *)(v3[7] + 8 * i) = v22;
    v24 = v3[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v26;
    if (v10)
      goto LABEL_4;
LABEL_5:
    v14 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v14 >= v28)
      return (uint64_t)v3;
    v15 = *(_QWORD *)(v27 + 8 * v14);
    ++v4;
    if (!v15)
    {
      v4 = v14 + 1;
      if (v14 + 1 >= v28)
        return (uint64_t)v3;
      v15 = *(_QWORD *)(v27 + 8 * v4);
      if (!v15)
      {
        v4 = v14 + 2;
        if (v14 + 2 >= v28)
          return (uint64_t)v3;
        v15 = *(_QWORD *)(v27 + 8 * v4);
        if (!v15)
          break;
      }
    }
LABEL_18:
    v10 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v28)
    return (uint64_t)v3;
  v15 = *(_QWORD *)(v27 + 8 * v16);
  if (v15)
  {
    v4 = v16;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v4 >= v28)
      return (uint64_t)v3;
    v15 = *(_QWORD *)(v27 + 8 * v4);
    ++v16;
    if (v15)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1D4490D18()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t i;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;

  sub_1D4492ED0();
  sub_1D42B28FC(&qword_1EFE528D0);
  sub_1D449322C();
  sub_1D449301C();
  sub_1D4493114();
  if (v4)
  {
    v35 = v0;
    v5 = 0;
    v37 = v1 + 64;
    v38 = v1;
    v6 = 1 << *(_BYTE *)(v1 + 32);
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v1 + 64);
    sub_1D449342C();
    v9 = 48;
    if (!v8)
      goto LABEL_7;
LABEL_6:
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (i = v10 | (v5 << 6); ; i = __clz(__rbit64(v13)) + (v5 << 6))
    {
      v19 = *(_QWORD *)(v1 + 56) + i * v9;
      v20 = *(_QWORD *)v19;
      v21 = *(_BYTE *)(v19 + 8);
      v22 = *(_QWORD *)(v19 + 16);
      v23 = *(_QWORD *)(v19 + 24);
      v39 = *(_OWORD *)(v19 + 32);
      if ((v2 & 1) == 0)
      {
        sub_1D438C74C();
        swift_retain();
      }
      sub_1D451B958();
      sub_1D451B964();
      sub_1D451B994();
      sub_1D4493330();
      if (((v26 << v25) & ~*(_QWORD *)(v3 + 8 * v24)) == 0)
      {
        sub_1D4367A40();
        while (1)
        {
          sub_1D44930F4();
          if (v29)
          {
            if ((v28 & 1) != 0)
              break;
          }
          sub_1D4493060();
          if (!v29)
          {
            sub_1D4367A18();
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return;
      }
      sub_1D4367A54();
LABEL_30:
      sub_1D44930BC(v27);
      v32 = v31 + 48 * v30;
      *(_QWORD *)v32 = v20;
      *(_BYTE *)(v32 + 8) = v21;
      *(_QWORD *)(v32 + 16) = v22;
      *(_QWORD *)(v32 + 24) = v23;
      *(_OWORD *)(v32 + 32) = v39;
      sub_1D4492FC8();
      v1 = v38;
      if (v8)
        goto LABEL_6;
LABEL_7:
      v12 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_41;
      if (v12 >= v36)
        goto LABEL_32;
      v13 = *(_QWORD *)(v37 + 8 * v12);
      ++v5;
      if (!v13)
      {
        v5 = v12 + 1;
        if (v12 + 1 >= v36)
          goto LABEL_32;
        v13 = *(_QWORD *)(v37 + 8 * v5);
        if (!v13)
        {
          sub_1D449323C();
          if (v17 == v18)
          {
LABEL_32:
            if ((v2 & 1) == 0)
            {
              sub_1D42CFC14();
              v0 = v35;
              goto LABEL_39;
            }
            sub_1D4492F44();
            if (v17 != v18)
              *v33 = -1 << v34;
            else
              sub_1D4493294(v33, v34);
            v0 = v35;
            *(_QWORD *)(v1 + 16) = 0;
            break;
          }
          v13 = *(_QWORD *)(v14 + 8 * v15);
          if (!v13)
          {
            while (1)
            {
              v5 = v15 + 1;
              if (__OFADD__(v15, 1))
                goto LABEL_42;
              if (v5 >= v16)
                goto LABEL_32;
              v13 = *(_QWORD *)(v14 + 8 * v5);
              ++v15;
              if (v13)
                goto LABEL_19;
            }
          }
          v5 = v15;
        }
      }
LABEL_19:
      v8 = (v13 - 1) & v13;
    }
  }
  sub_1D42CFC14();
LABEL_39:
  *v0 = v2;
}

void sub_1D4490F68(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  char v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  int64_t v27;
  _QWORD *v28;
  _OWORD v29[2];

  v5 = v2;
  sub_1D4492F58();
  sub_1D42B28FC(&qword_1EFE4D458);
  sub_1D449322C();
  sub_1D451B5BC();
  sub_1D4493114();
  if (v7)
  {
    sub_1D44932B4();
    v28 = v10;
    if (v8 < 64)
      v11 = ~(-1 << v8);
    else
      v11 = -1;
    v12 = v11 & v9;
    v27 = (unint64_t)(v8 + 63) >> 6;
    sub_1D4493120();
    v13 = 0;
    if (!v12)
      goto LABEL_7;
LABEL_6:
    sub_1D44933AC();
    while (1)
    {
      sub_1D4493158();
      v18 = (_OWORD *)(v17 + 32 * v16);
      if ((a2 & 1) != 0)
      {
        sub_1D42B293C(v18, v29);
      }
      else
      {
        sub_1D42B294C((uint64_t)v18, (uint64_t)v29);
        sub_1D438C74C();
      }
      sub_1D4493400();
      sub_1D44930E8();
      sub_1D451B994();
      sub_1D4492F24();
      if (v19)
      {
        sub_1D4367A40();
        while (1)
        {
          sub_1D44930F4();
          if (v19)
          {
            if ((v21 & 1) != 0)
              break;
          }
          sub_1D4493060();
          if (!v19)
          {
            sub_1D4367A18();
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return;
      }
      sub_1D4367A54();
LABEL_30:
      sub_1D4492EA0(v20);
      sub_1D42B293C(v29, (_OWORD *)(v23 + 32 * v22));
      sub_1D4492FC8();
      if (v12)
        goto LABEL_6;
LABEL_7:
      v14 = v13 + 1;
      if (__OFADD__(v13, 1))
        goto LABEL_39;
      if (v14 >= v27)
        goto LABEL_32;
      ++v13;
      if (!v28[v14])
      {
        v13 = v14 + 1;
        if (v14 + 1 >= v27)
          goto LABEL_32;
        if (!v28[v13])
        {
          v15 = v14 + 2;
          if (v15 >= v27)
          {
LABEL_32:
            sub_1D42CFC14();
            v5 = v2;
            if ((a2 & 1) != 0)
            {
              sub_1D4492F44();
              if (v25 != v26)
                *v28 = -1 << v24;
              else
                sub_1D4491EBC(0, (unint64_t)(v24 + 63) >> 6, v28);
              *(_QWORD *)(v3 + 16) = 0;
            }
            break;
          }
          if (!v28[v15])
          {
            while (1)
            {
              v13 = v15 + 1;
              if (__OFADD__(v15, 1))
                goto LABEL_40;
              if (v13 >= v27)
                goto LABEL_32;
              ++v15;
              if (v28[v13])
                goto LABEL_18;
            }
          }
          v13 = v15;
        }
      }
LABEL_18:
      sub_1D4493370();
    }
  }
  sub_1D42CFC14();
  *v5 = v4;
  sub_1D4493190();
}

void sub_1D4491150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10, uint64_t a11, uint64_t a12, int a13, char a14)
{
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  unint64_t v34;
  char v35;
  _QWORD *v36;
  uint64_t v37;

  sub_1D4493028();
  sub_1D4492ED0();
  sub_1D42B28FC(&qword_1EFE528A0);
  sub_1D4492F08();
  sub_1D4493114();
  if (v23)
  {
    sub_1D4492F80();
    v24 = 0;
    if (!v22)
      goto LABEL_4;
LABEL_3:
    sub_1D4493140();
    while (1)
    {
      sub_1D4493348();
      if ((v32 & 1) == 0)
      {
        sub_1D42CB9DC();
        swift_retain();
      }
      sub_1D44930A0();
      sub_1D44931AC();
      sub_1D44931BC();
      sub_1D44931F4();
      if (v33)
      {
        sub_1D4367A40();
        while (1)
        {
          sub_1D44930F4();
          if (v33)
          {
            if ((v35 & 1) != 0)
              break;
          }
          sub_1D4493300();
          if (!v33)
          {
            sub_1D4367A18();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return;
      }
      sub_1D4367A54();
LABEL_28:
      *(_QWORD *)(v18 + ((v34 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v34;
      v36 = (_QWORD *)(*(_QWORD *)(v17 + 48) + 16 * v34);
      *v36 = v21;
      v36[1] = v20;
      *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v34) = v19;
      sub_1D4492FC8();
      if (v22)
        goto LABEL_3;
LABEL_4:
      if (__OFADD__(v24, 1))
        goto LABEL_38;
      sub_1D44933A0();
      if (v25 == v26)
        break;
      sub_1D4493310();
      if (!v29)
      {
        v24 = v27 + 1;
        if (v27 + 1 >= v28)
          goto LABEL_30;
        if (!*(_QWORD *)(v15 + 8 * v24))
        {
          sub_1D449323C();
          if (v25 == v26)
          {
LABEL_30:
            sub_1D42CFC14();
            v14 = a10;
            goto LABEL_31;
          }
          if (!*(_QWORD *)(v15 + 8 * v30))
          {
            while (1)
            {
              v24 = v30 + 1;
              if (__OFADD__(v30, 1))
                goto LABEL_39;
              if (v24 >= v31)
                goto LABEL_30;
              ++v30;
              if (*(_QWORD *)(v15 + 8 * v24))
                goto LABEL_17;
            }
          }
          v24 = v30;
        }
      }
LABEL_17:
      sub_1D4493168();
    }
    sub_1D42CFC14();
    sub_1D44933C4();
LABEL_31:
    if ((a14 & 1) != 0)
    {
      sub_1D4492F44();
      if (v25 != v26)
        sub_1D44930AC(v37);
      else
        sub_1D4492F6C(v37);
      *(_QWORD *)(v16 + 16) = 0;
    }
  }
  sub_1D42CFC14();
  *v14 = v17;
  sub_1D4492EEC();
}

void sub_1D44912DC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  int64_t v23;
  _QWORD *v24;
  __int128 v25;

  v4 = v2;
  sub_1D4492F58();
  sub_1D42B28FC(&qword_1EFE52890);
  sub_1D449322C();
  sub_1D449301C();
  sub_1D4493114();
  if (v6)
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v24 = (_QWORD *)(v3 + 64);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 64);
    v23 = (unint64_t)(v7 + 63) >> 6;
    sub_1D4493120();
    v10 = 0;
    if (!v9)
      goto LABEL_7;
LABEL_6:
    sub_1D4493088();
    while (1)
    {
      sub_1D4493158();
      v25 = *(_OWORD *)(v14 + 16 * v13);
      if ((a2 & 1) == 0)
      {
        sub_1D438C74C();
        sub_1D42DD16C(v25, *((unint64_t *)&v25 + 1));
      }
      sub_1D451B958();
      sub_1D44930E8();
      sub_1D451B994();
      sub_1D4492F24();
      if (v15)
      {
        sub_1D4367A40();
        while (1)
        {
          sub_1D44930F4();
          if (v15)
          {
            if ((v17 & 1) != 0)
              break;
          }
          sub_1D4493060();
          if (!v15)
          {
            sub_1D4367A18();
            goto LABEL_29;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return;
      }
      sub_1D4367A54();
LABEL_29:
      sub_1D4492EA0(v16);
      *(_OWORD *)(v19 + 16 * v18) = v25;
      sub_1D4492FC8();
      if (v9)
        goto LABEL_6;
LABEL_7:
      v11 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_38;
      if (v11 >= v23)
        goto LABEL_31;
      ++v10;
      if (!v24[v11])
      {
        v10 = v11 + 1;
        if (v11 + 1 >= v23)
          goto LABEL_31;
        if (!v24[v10])
        {
          v12 = v11 + 2;
          if (v12 >= v23)
          {
LABEL_31:
            sub_1D42CFC14();
            v4 = v2;
            if ((a2 & 1) != 0)
            {
              sub_1D4492F44();
              if (v21 != v22)
                *v24 = -1 << v20;
              else
                sub_1D4491EBC(0, (unint64_t)(v20 + 63) >> 6, v24);
              *(_QWORD *)(v3 + 16) = 0;
            }
            break;
          }
          if (!v24[v12])
          {
            while (1)
            {
              v10 = v12 + 1;
              if (__OFADD__(v12, 1))
                goto LABEL_39;
              if (v10 >= v23)
                goto LABEL_31;
              ++v12;
              if (v24[v10])
                goto LABEL_18;
            }
          }
          v10 = v12;
        }
      }
LABEL_18:
      sub_1D4493070();
    }
  }
  sub_1D42CFC14();
  *v4 = a2;
  sub_1D4493190();
}

void sub_1D44914D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, char a14)
{
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;

  sub_1D4493028();
  sub_1D4492ED0();
  sub_1D42B28FC(&qword_1EFE528C8);
  sub_1D4492F08();
  sub_1D4493114();
  if (v18)
  {
    v19 = 1 << *(_BYTE *)(v16 + 32);
    if (v19 < 64)
      v20 = ~(-1 << v19);
    else
      v20 = -1;
    v21 = v20 & *(_QWORD *)(v16 + 64);
    v46 = v14;
    v22 = v17 + 64;
    swift_retain();
    v23 = 0;
    if (!v21)
      goto LABEL_7;
LABEL_6:
    sub_1D4493140();
    while (1)
    {
      v32 = (uint64_t *)(*(_QWORD *)(v16 + 48) + 16 * v24);
      v34 = *v32;
      v33 = v32[1];
      v35 = *(_QWORD *)(v16 + 56) + 16 * v24;
      v14 = *(_QWORD **)v35;
      v36 = *(_QWORD *)(v35 + 8);
      if ((a14 & 1) == 0)
      {
        sub_1D42CB9DC();
        sub_1D438C74C();
      }
      sub_1D44930A0();
      sub_1D44931AC();
      sub_1D44931BC();
      sub_1D4493330();
      if (((v39 << v38) & ~*(_QWORD *)(v22 + 8 * v37)) == 0)
      {
        sub_1D4367A40();
        while (1)
        {
          sub_1D44930F4();
          if (v42)
          {
            if ((v41 & 1) != 0)
              break;
          }
          sub_1D4493300();
          if (!v42)
          {
            sub_1D4367A18();
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return;
      }
      sub_1D4367A54();
LABEL_31:
      *(_QWORD *)(v22 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      v43 = (_QWORD *)(*(_QWORD *)(v17 + 48) + 16 * v40);
      *v43 = v34;
      v43[1] = v33;
      v44 = (_QWORD *)(*(_QWORD *)(v17 + 56) + 16 * v40);
      *v44 = v14;
      v44[1] = v36;
      sub_1D4492FC8();
      if (v21)
        goto LABEL_6;
LABEL_7:
      if (__OFADD__(v23, 1))
        goto LABEL_41;
      sub_1D44933A0();
      if (v25 == v26)
        break;
      sub_1D4493310();
      if (!v29)
      {
        v23 = v27 + 1;
        if (v27 + 1 >= v28)
          goto LABEL_33;
        if (!*(_QWORD *)(v15 + 8 * v23))
        {
          sub_1D449323C();
          if (v25 == v26)
          {
LABEL_33:
            sub_1D42CFC14();
            v14 = v46;
            goto LABEL_34;
          }
          if (!*(_QWORD *)(v15 + 8 * v30))
          {
            while (1)
            {
              v23 = v30 + 1;
              if (__OFADD__(v30, 1))
                goto LABEL_42;
              if (v23 >= v31)
                goto LABEL_33;
              ++v30;
              if (*(_QWORD *)(v15 + 8 * v23))
                goto LABEL_20;
            }
          }
          v23 = v30;
        }
      }
LABEL_20:
      sub_1D4493168();
    }
    sub_1D42CFC14();
    sub_1D44933C4();
LABEL_34:
    if ((a14 & 1) != 0)
    {
      sub_1D4492F44();
      if (v25 != v26)
        sub_1D44930AC(v45);
      else
        sub_1D4492F6C(v45);
      *(_QWORD *)(v16 + 16) = 0;
    }
  }
  sub_1D42CFC14();
  *v14 = v17;
  sub_1D4492EEC();
}

void sub_1D44916C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, char a14)
{
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;

  sub_1D4493028();
  sub_1D4492ED0();
  sub_1D42B28FC((uint64_t *)&unk_1EFE404D0);
  sub_1D4492F08();
  sub_1D4493114();
  if (v17)
  {
    v40 = v14;
    v18 = 0;
    v41 = v15 + 64;
    v19 = 1 << *(_BYTE *)(v15 + 32);
    if (v19 < 64)
      v20 = ~(-1 << v19);
    else
      v20 = -1;
    v21 = v20 & *(_QWORD *)(v15 + 64);
    sub_1D449342C();
    if (!v21)
      goto LABEL_7;
LABEL_6:
    sub_1D44933AC();
    while (1)
    {
      v29 = (uint64_t *)(*(_QWORD *)(v15 + 56) + 16 * v22);
      v30 = *v29;
      v31 = v29[1];
      if ((a14 & 1) == 0)
        sub_1D438C74C();
      sub_1D44930A0();
      sub_1D451B964();
      sub_1D44931BC();
      sub_1D4492F24();
      if (v32)
      {
        sub_1D4367A40();
        while (1)
        {
          sub_1D44930F4();
          if (v32)
          {
            if ((v34 & 1) != 0)
              break;
          }
          sub_1D4493060();
          if (!v32)
          {
            sub_1D4367A18();
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return;
      }
      sub_1D4367A54();
LABEL_30:
      sub_1D44930BC(v33);
      v37 = (_QWORD *)(v36 + 16 * v35);
      *v37 = v30;
      v37[1] = v31;
      sub_1D4492FC8();
      if (v21)
        goto LABEL_6;
LABEL_7:
      v23 = v18 + 1;
      if (__OFADD__(v18, 1))
        goto LABEL_41;
      if (v23 >= a11)
        goto LABEL_32;
      ++v18;
      if (!*(_QWORD *)(v41 + 8 * v23))
      {
        v18 = v23 + 1;
        if (v23 + 1 >= a11)
          goto LABEL_32;
        if (!*(_QWORD *)(v41 + 8 * v18))
        {
          sub_1D449323C();
          if (v27 == v28)
          {
LABEL_32:
            if ((a14 & 1) == 0)
            {
              sub_1D42CFC14();
              v14 = v40;
              goto LABEL_39;
            }
            sub_1D4492F44();
            if (v27 != v28)
              *v38 = -1 << v39;
            else
              sub_1D4493294(v38, v39);
            v14 = v40;
            *(_QWORD *)(v15 + 16) = 0;
            break;
          }
          if (!*(_QWORD *)(v24 + 8 * v25))
          {
            while (1)
            {
              v18 = v25 + 1;
              if (__OFADD__(v25, 1))
                goto LABEL_42;
              if (v18 >= v26)
                goto LABEL_32;
              ++v25;
              if (*(_QWORD *)(v24 + 8 * v18))
                goto LABEL_19;
            }
          }
          v18 = v25;
        }
      }
LABEL_19:
      sub_1D4493370();
    }
  }
  sub_1D42CFC14();
LABEL_39:
  *v14 = v16;
  sub_1D4492EEC();
}

void sub_1D4491878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10, uint64_t a11, uint64_t a12, int a13, char a14)
{
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D4493028();
  sub_1D4492ED0();
  sub_1D42B28FC(&qword_1EFE40378);
  sub_1D4492F08();
  sub_1D4493114();
  if (v18)
  {
    sub_1D4492FD8();
    v19 = 0;
    if (!v17)
      goto LABEL_4;
LABEL_3:
    sub_1D4493088();
    while (1)
    {
      sub_1D4493158();
      v14 = *(_QWORD **)(v27 + 8 * v26);
      if ((a14 & 1) == 0)
      {
        sub_1D438C74C();
        v28 = v14;
      }
      sub_1D44930A0();
      sub_1D44930E8();
      sub_1D44931BC();
      sub_1D4492F24();
      if (v29)
      {
        sub_1D4367A40();
        while (1)
        {
          sub_1D44930F4();
          if (v29)
          {
            if ((v31 & 1) != 0)
              break;
          }
          sub_1D4493060();
          if (!v29)
          {
            sub_1D4367A18();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return;
      }
      sub_1D4367A54();
LABEL_28:
      sub_1D4492EA0(v30);
      *(_QWORD *)(v33 + 8 * v32) = v14;
      sub_1D4492FC8();
      if (v17)
        goto LABEL_3;
LABEL_4:
      if (__OFADD__(v19, 1))
        goto LABEL_38;
      sub_1D44933A0();
      if (v22 == v23)
        break;
      v19 = v20;
      if (!*(_QWORD *)(a12 + 8 * v20))
      {
        v19 = v20 + 1;
        if (v20 + 1 >= v21)
          goto LABEL_30;
        if (!*(_QWORD *)(a12 + 8 * v19))
        {
          sub_1D449323C();
          if (v22 == v23)
          {
LABEL_30:
            sub_1D42CFC14();
            v14 = a10;
            goto LABEL_31;
          }
          if (!*(_QWORD *)(a12 + 8 * v24))
          {
            while (1)
            {
              v19 = v24 + 1;
              if (__OFADD__(v24, 1))
                goto LABEL_39;
              if (v19 >= v25)
                goto LABEL_30;
              ++v24;
              if (*(_QWORD *)(a12 + 8 * v19))
                goto LABEL_17;
            }
          }
          v19 = v24;
        }
      }
LABEL_17:
      sub_1D4493070();
    }
    sub_1D42CFC14();
    sub_1D44933C4();
LABEL_31:
    if ((a14 & 1) != 0)
    {
      sub_1D4492F44();
      if (v22 != v23)
        sub_1D44930AC(v34);
      else
        sub_1D4492F6C(v34);
      *(_QWORD *)(v15 + 16) = 0;
    }
  }
  sub_1D42CFC14();
  *v14 = v16;
  sub_1D4492EEC();
}

void sub_1D44919EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;

  sub_1D4492ED0();
  sub_1D42B28FC(&qword_1EFE4BF10);
  sub_1D449322C();
  sub_1D449301C();
  sub_1D4493114();
  if (v3)
  {
    sub_1D44932B4();
    v24 = v0;
    v25 = v6;
    if (v4 < 64)
      v7 = ~(-1 << v4);
    else
      v7 = -1;
    v8 = v7 & v5;
    v9 = (unint64_t)(v4 + 63) >> 6;
    sub_1D4493120();
    v10 = 0;
    if (!v8)
      goto LABEL_7;
LABEL_6:
    sub_1D4493088();
    while (1)
    {
      sub_1D4493158();
      v15 = *(_QWORD *)(v14 + 8 * v13);
      if ((v2 & 1) == 0)
        sub_1D438C74C();
      sub_1D4493400();
      sub_1D44930E8();
      sub_1D451B994();
      sub_1D4492F24();
      if (v16)
      {
        sub_1D4367A40();
        while (1)
        {
          sub_1D44930F4();
          if (v16)
          {
            if ((v18 & 1) != 0)
              break;
          }
          sub_1D4493060();
          if (!v16)
          {
            sub_1D4367A18();
            goto LABEL_29;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return;
      }
      sub_1D4367A54();
LABEL_29:
      sub_1D4492EA0(v17);
      *(_QWORD *)(v20 + 8 * v19) = v15;
      sub_1D4492FC8();
      if (v8)
        goto LABEL_6;
LABEL_7:
      v11 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_38;
      if (v11 >= v9)
        goto LABEL_31;
      ++v10;
      if (!*(_QWORD *)(v25 + 8 * v11))
      {
        v10 = v11 + 1;
        if (v11 + 1 >= v9)
          goto LABEL_31;
        if (!*(_QWORD *)(v25 + 8 * v10))
        {
          v12 = v11 + 2;
          if (v12 >= v9)
          {
LABEL_31:
            sub_1D42CFC14();
            v0 = v24;
            if ((v2 & 1) != 0)
            {
              sub_1D4492F44();
              if (v22 != v23)
                sub_1D44930AC(v21);
              else
                sub_1D4492F6C(v21);
              *(_QWORD *)(v1 + 16) = 0;
            }
            break;
          }
          if (!*(_QWORD *)(v25 + 8 * v12))
          {
            while (1)
            {
              v10 = v12 + 1;
              if (__OFADD__(v12, 1))
                goto LABEL_39;
              if (v10 >= v9)
                goto LABEL_31;
              ++v12;
              if (*(_QWORD *)(v25 + 8 * v10))
                goto LABEL_18;
            }
          }
          v10 = v12;
        }
      }
LABEL_18:
      sub_1D4493070();
    }
  }
  sub_1D42CFC14();
  *v0 = v2;
}

void sub_1D4491BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10, uint64_t a11, uint64_t a12, int a13, char a14)
{
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_1D4493028();
  sub_1D4492ED0();
  sub_1D42B28FC(&qword_1EFE528B8);
  sub_1D4492F08();
  sub_1D4493114();
  if (v18)
  {
    sub_1D4492FD8();
    v19 = 0;
    if (!v17)
      goto LABEL_4;
LABEL_3:
    sub_1D4493088();
    while (1)
    {
      sub_1D4493158();
      v14 = (_QWORD *)*(unsigned __int8 *)(v27 + v26);
      if ((a14 & 1) == 0)
        sub_1D438C74C();
      sub_1D44930A0();
      sub_1D44930E8();
      sub_1D44931BC();
      sub_1D4492F24();
      if (v28)
      {
        sub_1D4367A40();
        while (1)
        {
          sub_1D44930F4();
          if (v28)
          {
            if ((v30 & 1) != 0)
              break;
          }
          sub_1D4493060();
          if (!v28)
          {
            sub_1D4367A18();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return;
      }
      sub_1D4367A54();
LABEL_28:
      sub_1D4492EA0(v29);
      *(_BYTE *)(v32 + v31) = (_BYTE)v14;
      sub_1D4492FC8();
      if (v17)
        goto LABEL_3;
LABEL_4:
      if (__OFADD__(v19, 1))
        goto LABEL_38;
      sub_1D44933A0();
      if (v22 == v23)
        break;
      v19 = v20;
      if (!*(_QWORD *)(a12 + 8 * v20))
      {
        v19 = v20 + 1;
        if (v20 + 1 >= v21)
          goto LABEL_30;
        if (!*(_QWORD *)(a12 + 8 * v19))
        {
          sub_1D449323C();
          if (v22 == v23)
          {
LABEL_30:
            sub_1D42CFC14();
            v14 = a10;
            goto LABEL_31;
          }
          if (!*(_QWORD *)(a12 + 8 * v24))
          {
            while (1)
            {
              v19 = v24 + 1;
              if (__OFADD__(v24, 1))
                goto LABEL_39;
              if (v19 >= v25)
                goto LABEL_30;
              ++v24;
              if (*(_QWORD *)(a12 + 8 * v19))
                goto LABEL_17;
            }
          }
          v19 = v24;
        }
      }
LABEL_17:
      sub_1D4493070();
    }
    sub_1D42CFC14();
    sub_1D44933C4();
LABEL_31:
    if ((a14 & 1) != 0)
    {
      sub_1D4492F44();
      if (v22 != v23)
        sub_1D44930AC(v33);
      else
        sub_1D4492F6C(v33);
      *(_QWORD *)(v15 + 16) = 0;
    }
  }
  sub_1D42CFC14();
  *v14 = v16;
  sub_1D4492EEC();
}

void sub_1D4491D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10, uint64_t a11, uint64_t a12, int a13, char a14)
{
  sub_1D4491D38(a1, a2, (uint64_t)&unk_1EFE528B0, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

void sub_1D4491D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10, uint64_t a11, uint64_t a12, int a13, char a14)
{
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  unint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t v38;

  sub_1D4493028();
  sub_1D4492ED0();
  sub_1D42B28FC(v23);
  sub_1D4492F08();
  sub_1D4493114();
  if (v24)
  {
    sub_1D4492F80();
    v25 = 0;
    if (!v22)
      goto LABEL_4;
LABEL_3:
    sub_1D4493140();
    while (1)
    {
      sub_1D4493348();
      if ((v33 & 1) == 0)
      {
        sub_1D42CB9DC();
        sub_1D438C74C();
      }
      sub_1D44930A0();
      sub_1D44931AC();
      sub_1D44931BC();
      sub_1D44931F4();
      if (v34)
      {
        sub_1D4367A40();
        while (1)
        {
          sub_1D44930F4();
          if (v34)
          {
            if ((v36 & 1) != 0)
              break;
          }
          sub_1D4493300();
          if (!v34)
          {
            sub_1D4367A18();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return;
      }
      sub_1D4367A54();
LABEL_28:
      *(_QWORD *)(v18 + ((v35 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v35;
      v37 = (_QWORD *)(*(_QWORD *)(v17 + 48) + 16 * v35);
      *v37 = v21;
      v37[1] = v20;
      *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v35) = v19;
      sub_1D4492FC8();
      if (v22)
        goto LABEL_3;
LABEL_4:
      if (__OFADD__(v25, 1))
        goto LABEL_38;
      sub_1D44933A0();
      if (v26 == v27)
        break;
      sub_1D4493310();
      if (!v30)
      {
        v25 = v28 + 1;
        if (v28 + 1 >= v29)
          goto LABEL_30;
        if (!*(_QWORD *)(v15 + 8 * v25))
        {
          sub_1D449323C();
          if (v26 == v27)
          {
LABEL_30:
            sub_1D42CFC14();
            v14 = a10;
            goto LABEL_31;
          }
          if (!*(_QWORD *)(v15 + 8 * v31))
          {
            while (1)
            {
              v25 = v31 + 1;
              if (__OFADD__(v31, 1))
                goto LABEL_39;
              if (v25 >= v32)
                goto LABEL_30;
              ++v31;
              if (*(_QWORD *)(v15 + 8 * v25))
                goto LABEL_17;
            }
          }
          v25 = v31;
        }
      }
LABEL_17:
      sub_1D4493168();
    }
    sub_1D42CFC14();
    sub_1D44933C4();
LABEL_31:
    if ((a14 & 1) != 0)
    {
      sub_1D4492F44();
      if (v26 != v27)
        sub_1D44930AC(v38);
      else
        sub_1D4492F6C(v38);
      *(_QWORD *)(v16 + 16) = 0;
    }
  }
  sub_1D42CFC14();
  *v14 = v17;
  sub_1D4492EEC();
}

uint64_t sub_1D4491EBC(uint64_t result, uint64_t a2, _QWORD *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

uint64_t sub_1D4491ED8(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D4491F10(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t type metadata accessor for SNUltronUtils.UltronReportingPlan(uint64_t a1)
{
  return sub_1D42BFA18(a1, (uint64_t *)&unk_1EFE54D70);
}

uint64_t type metadata accessor for SNUltronUtils.UltronReportTemplate(uint64_t a1)
{
  return sub_1D42BFA18(a1, (uint64_t *)&unk_1EFE54D60);
}

void sub_1D4491F70(uint64_t a1, void (*a2)(_QWORD))
{
  void (*v3)(uint64_t);

  a2(0);
  sub_1D44932D4();
  v3(a1);
  sub_1D42B6E24();
}

uint64_t sub_1D4491FA0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D42B28FC(&qword_1EFE54CB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1D4491FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;

  v4 = sub_1D4493260();
  v6 = v5(v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, v2, v6);
  sub_1D42B6E24();
}

uint64_t sub_1D449201C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  void (*v6)(uint64_t);

  v1 = type metadata accessor for SNUltronUtils.UltronReportTemplate(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  sub_1D42CB348();
  sub_1D44932D4();
  v4(v3);
  type metadata accessor for SNUltronUtils.UltronReportingPlan(0);
  sub_1D44933F4();
  v5 = v3 + *(int *)(v1 + 20);
  sub_1D43341C8();
  sub_1D44932D4();
  v6(v5);
  sub_1D44933F4();
  return swift_deallocObject();
}

uint64_t sub_1D44920BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SNUltronUtils.UltronReportTemplate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D4492100(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1D4493418() - 8) + 80);
  return sub_1D449085C(v1 + ((v3 + 16) & ~v3), *a1);
}

unint64_t sub_1D4492144()
{
  unint64_t result;

  result = qword_1EFE54D58;
  if (!qword_1EFE54D58)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4549144, &unk_1E979F628);
    atomic_store(result, (unint64_t *)&qword_1EFE54D58);
  }
  return result;
}

uint64_t sub_1D4492180(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D42B28FC(&qword_1EFE51AB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D44921C8(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D4492208 + 4 * asc_1D4548F80[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D4492228 + 4 * byte_1D4548F85[v4]))();
}

_BYTE *sub_1D4492208(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D4492228(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4492230(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4492238(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4492240(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4492248(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for SNUltronUtils.DomainError()
{
  sub_1D42CB35C();
}

uint64_t *sub_1D4492260(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D4519BC4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(type metadata accessor for SNUltronUtils.UltronReportingPlan(0) + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = *(int *)(a3 + 20);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_1D4519CE4();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    v17 = *(int *)(a3 + 24);
    v18 = (uint64_t *)((char *)a1 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1D4492358(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D4519BC4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for SNUltronUtils.UltronReportingPlan(0);
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1D4519CE4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D44923E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v6 = sub_1D4519BC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for SNUltronUtils.UltronReportingPlan(0) + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = *(int *)(a3 + 20);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1D4519CE4();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  v16 = *(int *)(a3 + 24);
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D44924B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  v6 = sub_1D4519BC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for SNUltronUtils.UltronReportingPlan(0) + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 20);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1D4519CE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = *(int *)(a3 + 24);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D4492594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1D4519BC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for SNUltronUtils.UltronReportingPlan(0);
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = *(int *)(a3 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1D4519CE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1D4492638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1D4519BC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for SNUltronUtils.UltronReportingPlan(0) + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 20);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1D4519CE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = *(int *)(a3 + 24);
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D44926FC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1D4492708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for SNUltronUtils.UltronReportingPlan(0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
LABEL_5:
    sub_1D4493254(v8, a2, v7);
    return;
  }
  v9 = sub_1D43341C8();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v9;
    v8 = a1 + *(int *)(a3 + 20);
    goto LABEL_5;
  }
  sub_1D4493388(a1 + *(int *)(a3 + 24));
  sub_1D42CB15C();
}

uint64_t sub_1D4492788()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1D4492794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  type metadata accessor for SNUltronUtils.UltronReportingPlan(0);
  sub_1D4493360();
  if (v10)
  {
    v8 = v7;
    v9 = a1;
  }
  else
  {
    sub_1D43341C8();
    sub_1D4493360();
    if (!v10)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      sub_1D42CB15C();
      return;
    }
    v8 = v11;
    v9 = a1 + *(int *)(a4 + 20);
  }
  sub_1D4493248(v9, a2, a2, v8);
}

uint64_t sub_1D4492810()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for SNUltronUtils.UltronReportingPlan(319);
  if (v1 <= 0x3F)
  {
    result = sub_1D4519CE4();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1D449289C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D4519BC4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1D4492930(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D4519BC4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4492978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_1D4519BC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D44929E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1D4519BC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D4492A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1D4519BC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1D4492AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1D4519BC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D4492B24()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1D4492B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1D42CB348();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    sub_1D4493254(a1, a2, v6);
  }
  else
  {
    sub_1D4493388(a1 + *(int *)(a3 + 20));
    sub_1D42CB15C();
  }
}

uint64_t sub_1D4492B88()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1D4492B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  char v8;

  sub_1D4493260();
  sub_1D4519BC4();
  sub_1D4493360();
  if (v8)
  {
    sub_1D4493248(v4, a2, a2, v7);
  }
  else
  {
    *(_QWORD *)(v4 + *(int *)(a4 + 20) + 8) = (a2 - 1);
    sub_1D42CB15C();
  }
}

uint64_t sub_1D4492BF0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D4519BC4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1D4492C60()
{
  sub_1D43287AC(&qword_1EFE54D80, (void (*)(uint64_t))type metadata accessor for SNUltronUtils.UltronReportingPlan);
}

unint64_t sub_1D4492C90()
{
  unint64_t result;

  result = qword_1EFE54D88;
  if (!qword_1EFE54D88)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454911C, &unk_1E979F628);
    atomic_store(result, (unint64_t *)&qword_1EFE54D88);
  }
  return result;
}

unint64_t sub_1D4492CCC()
{
  unint64_t result;

  result = qword_1EFE54D98;
  if (!qword_1EFE54D98)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4549248, &type metadata for SNUltronUtils.UltronReportingPlan.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE54D98);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SNUltronUtils.UltronReportingPlan.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D4492D54 + 4 * byte_1D4548F8F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D4492D88 + 4 * byte_1D4548F8A[v4]))();
}

uint64_t sub_1D4492D88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4492D90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4492D98);
  return result;
}

uint64_t sub_1D4492DA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4492DACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D4492DB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4492DB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SNUltronUtils.UltronReportingPlan.CodingKeys()
{
  return &type metadata for SNUltronUtils.UltronReportingPlan.CodingKeys;
}

void type metadata accessor for SNUltronUtils()
{
  sub_1D42CB35C();
}

unint64_t sub_1D4492DE4()
{
  unint64_t result;

  result = qword_1EFE54DA8;
  if (!qword_1EFE54DA8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4549220, &type metadata for SNUltronUtils.UltronReportingPlan.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE54DA8);
  }
  return result;
}

unint64_t sub_1D4492E24()
{
  unint64_t result;

  result = qword_1EFE54DB0;
  if (!qword_1EFE54DB0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4549190, &type metadata for SNUltronUtils.UltronReportingPlan.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE54DB0);
  }
  return result;
}

unint64_t sub_1D4492E64()
{
  unint64_t result;

  result = qword_1EFE54DB8[0];
  if (!qword_1EFE54DB8[0])
  {
    result = MEMORY[0x1D825E41C](&unk_1D45491B8, &type metadata for SNUltronUtils.UltronReportingPlan.CodingKeys);
    atomic_store(result, qword_1EFE54DB8);
  }
  return result;
}

void sub_1D4492EA0(unint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << a1;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * a1);
  *v5 = v3;
  v5[1] = v2;
}

uint64_t sub_1D4492F08()
{
  return sub_1D451B5BC();
}

uint64_t sub_1D4492F6C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_1D4491EBC(0, (unint64_t)(a1 + 63) >> 6, v1);
}

uint64_t sub_1D4492F80()
{
  return swift_retain();
}

void sub_1D4492FC8()
{
  uint64_t v0;

  ++*(_QWORD *)(v0 + 16);
}

uint64_t sub_1D4492FD8()
{
  return swift_retain();
}

uint64_t sub_1D449301C()
{
  return sub_1D451B5BC();
}

uint64_t sub_1D44930A0()
{
  return sub_1D451B958();
}

void sub_1D44930AC(char a1@<W8>)
{
  _QWORD *v1;

  *v1 = -1 << a1;
}

void sub_1D44930BC(unint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;

  *(_QWORD *)(v3 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << a1;
  *(_BYTE *)(*(_QWORD *)(v1 + 48) + a1) = v2;
}

uint64_t sub_1D44930E8()
{
  return sub_1D451A74C();
}

uint64_t sub_1D4493100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 128) + 8))(v0, v1);
}

uint64_t sub_1D4493120()
{
  return swift_retain();
}

uint64_t sub_1D449312C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D4493180()
{
  return 0;
}

uint64_t sub_1D44931AC()
{
  return sub_1D451A74C();
}

uint64_t sub_1D44931BC()
{
  return sub_1D451B994();
}

void sub_1D44931C4()
{
  sub_1D42C7550();
}

uint64_t sub_1D44931DC()
{
  return swift_dynamicCastClassUnconditional();
}

void sub_1D4493214()
{
  sub_1D42C7550();
}

uint64_t sub_1D449322C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4493248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a1, a2, a3, a4);
}

uint64_t sub_1D4493254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, a2, a3);
}

uint64_t sub_1D4493260()
{
  return 0;
}

uint64_t sub_1D449326C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4493278()
{
  return 0;
}

uint64_t sub_1D4493284()
{
  uint64_t v0;

  return sub_1D4491ED8(v0);
}

uint64_t sub_1D4493294@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X8>)
{
  return sub_1D4491EBC(0, (unint64_t)(a2 + 63) >> 6, a1);
}

void sub_1D44932A4()
{
  sub_1D42C7550();
}

uint64_t sub_1D44932CC()
{
  uint64_t *v0;

  return sub_1D42B28FC(v0);
}

unint64_t sub_1D4493320()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1D4366B34(v1, v0);
}

uint64_t sub_1D4493388@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_1D44933F4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4493400()
{
  return sub_1D451B958();
}

uint64_t sub_1D449340C()
{
  return sub_1D451A794();
}

uint64_t sub_1D4493418()
{
  return type metadata accessor for SNUltronUtils.UltronReportTemplate(0);
}

uint64_t sub_1D4493420()
{
  return sub_1D451A218();
}

uint64_t sub_1D4493454(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[4];
  uint64_t v14;

  sub_1D42B5528(a1, a1[3]);
  sub_1D451BA00();
  if (!v3)
  {
    sub_1D42B5528(v13, v13[3]);
    v7 = *(_QWORD *)(a3 + 8);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v11 = type metadata accessor for TypedCodableByNSCoding(0, AssociatedTypeWitness, v9, v10);
    MEMORY[0x1D825E41C](&unk_1D453DC80, v11);
    sub_1D451B838();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 24))(&v14, a2, v7);
    sub_1D42B5400((uint64_t)v13);
  }
  return sub_1D42B5400((uint64_t)a1);
}

uint64_t sub_1D4493594(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t AssociatedTypeWitness;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[24];
  uint64_t v13;
  void *v14;

  sub_1D42B5528(a1, a1[3]);
  sub_1D451BA18();
  (*(void (**)(void **__return_ptr, uint64_t, _QWORD))(*(_QWORD *)(a3 + 8) + 16))(&v14, a2, *(_QWORD *)(a3 + 8));
  v5 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = (void *)nullsub_1(v5);
  v14 = v7;
  sub_1D42CAEF0((uint64_t)v12, v13);
  v10 = type metadata accessor for TypedCodableByNSCoding(0, AssociatedTypeWitness, v8, v9);
  MEMORY[0x1D825E41C](&unk_1D453DC58, v10);
  sub_1D451B850();

  return sub_1D42B5400((uint64_t)v12);
}

uint64_t sub_1D44936B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  unint64_t v7;

  sub_1D4493C0C(a2, a3, a4, a5);
  if (!v5)
  {
    v7 = sub_1D4493AF8(a1);
    a1 = sub_1D434595C(v7);
    sub_1D42B7204();
    sub_1D42CB5C8();
  }
  return a1;
}

void sub_1D4493744(uint64_t a1, uint64_t a2)
{
  io_object_t v2;
  mach_error_t v3;

  v2 = (*(uint64_t (**)(void))(a2 + 16))();
  v3 = IOObjectRelease(v2);
  sub_1D43CAE30(v3);
}

uint64_t sub_1D4493770()
{
  uint64_t v0;

  IONotificationPortDestroy(*(IONotificationPortRef *)(v0 + 16));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IONotificationPort()
{
  return objc_opt_self();
}

void sub_1D44937B4(int a1)
{
  uint64_t v1;
  uint64_t v2;

  if (!a1)
  {
    sub_1D42DCEE8();
    sub_1D44946AC();
    sub_1D430740C();
    sub_1D4342D78(v1, v2, (uint64_t)"expected non-null object");
    sub_1D4312028();
  }
  sub_1D42B6E24();
}

uint64_t sub_1D4493804()
{
  unsigned int *v0;

  return *v0;
}

void sub_1D449380C(int a1@<W0>, int *a2@<X8>)
{
  uint64_t v2;

  sub_1D44937B4(a1);
  if (!v2)
    *a2 = a1;
}

uint64_t sub_1D4493838()
{
  sub_1D44939E4();
  sub_1D449469C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IOObject()
{
  return objc_opt_self();
}

uint64_t sub_1D4493888(uint64_t a1)
{
  uint64_t v1;
  const __CFDictionary *v3;
  mach_error_t MatchingServices;
  io_iterator_t existing;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  existing = 0;
  v3 = (const __CFDictionary *)sub_1D451A5A8();
  MatchingServices = IOServiceGetMatchingServices(a1, v3, &existing);
  sub_1D43CAE30(MatchingServices);
  if (!v1)
  {
    a1 = sub_1D449394C(existing);
    MEMORY[0x1D825D510]();
  }
  return a1;
}

uint64_t sub_1D449394C(uint64_t a1)
{
  if (!(_DWORD)a1)
  {
    type metadata accessor for SNError();
    sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD000000000000018, 0x80000001D455ADE0);
    swift_willThrow();
  }
  return a1;
}

void sub_1D44939D0(int a1)
{
  sub_1D44937B4(a1);
}

uint64_t sub_1D44939E4()
{
  uint64_t v0;
  mach_error_t v1;

  v1 = IOObjectRelease(*(_DWORD *)(v0 + 16));
  sub_1D44C84C4(v1);
  return v0;
}

uint64_t sub_1D4493A3C()
{
  sub_1D44939E4();
  sub_1D449469C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IOService()
{
  return objc_opt_self();
}

uint64_t sub_1D4493A8C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1D4493AD0(int a1)
{
  uint64_t result;

  sub_1D449469C();
  result = swift_allocObject();
  *(_DWORD *)(result + 16) = a1;
  return result;
}

uint64_t sub_1D4493AF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v7;

  v3 = sub_1D4493888(a1);
  if (!v1)
  {
    v4 = v3;
    sub_1D42B28FC(&qword_1EFE54EC0);
    *(_DWORD *)(swift_initStackObject() + 16) = v4;
    v2 = MEMORY[0x1E0DEE9D8];
    v7 = MEMORY[0x1E0DEE9D8];
    if (sub_1D44940B0())
    {
      do
      {
        v5 = swift_retain();
        MEMORY[0x1D825C238](v5);
        if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1D451A98C();
        sub_1D451A9E0();
        sub_1D451A950();
        swift_release();
      }
      while (sub_1D44940B0());
      v2 = v7;
    }
    swift_setDeallocating();
    sub_1D4493F60();
    swift_deallocClassInstance();
  }
  return v2;
}

uint64_t sub_1D4493C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t inited;
  uint64_t v10;
  uint64_t v12;
  uint64_t i;
  uint64_t v14;
  uint64_t v15;

  sub_1D42B28FC(&qword_1EFE40400);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D45295F0;
  v10 = sub_1D4493D7C(a1, a2, MEMORY[0x1E0CBBA00]);
  if (v4)
  {
    *(_QWORD *)(inited + 16) = 0;
    swift_release();
  }
  else
  {
    *(_QWORD *)(inited + 32) = v10;
    *(_QWORD *)(inited + 40) = sub_1D4493D7C(a3, a4, MEMORY[0x1E0CBBA08]);
    swift_bridgeObjectRetain();
    v12 = MEMORY[0x1E0DEE9D8];
    for (i = 32; i != 48; i += 8)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D44B4338();
      sub_1D42CB5C8();
    }
    swift_bridgeObjectRelease();
    v14 = sub_1D448CF58(v12);
    sub_1D42CB5C8();
    sub_1D449558C(v14);
    a3 = v15;
    sub_1D42B7204();
    swift_setDeallocating();
    sub_1D43476AC();
  }
  return a3;
}

uint64_t sub_1D4493D7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  void *v5;
  id v6;
  _BYTE *v7;
  _BYTE *v8;

  v4 = sub_1D451A734();
  v5 = (void *)a3(v4 + 32);
  swift_release();
  if (v5)
  {
    v6 = v5;
    sub_1D451A5C0();

    v4 = 0;
    sub_1D42B7F2C();
    sub_1D42B6D0C();
    *v8 = 0;
    sub_1D4312028();

  }
  else
  {
    sub_1D42B7F2C();
    sub_1D42B6D0C();
    *v7 = 0;
    sub_1D4312028();
  }
  return v4;
}

uint64_t sub_1D4493E58(io_iterator_t a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  result = IOIteratorIsValid(a1);
  if (!(_DWORD)result)
  {
    sub_1D42DCEE8();
    sub_1D430740C();
    sub_1D43EC59C(v2, v3, 1, 0, 0xD000000000000013, 0x80000001D455ADC0);
    return sub_1D4312028();
  }
  return result;
}

uint64_t sub_1D4493ECC@<X0>(io_iterator_t a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = sub_1D4493E58(a1);
  if (!v4)
  {
    v10 = IOIteratorNext(a1);
    if ((_DWORD)v10)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 24))(v10, a2, a3);
      v11 = a4;
      v12 = 0;
    }
    else
    {
      v11 = a4;
      v12 = 1;
    }
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v11, v12, 1, a2);
  }
  return result;
}

uint64_t sub_1D4493F60()
{
  uint64_t v0;
  mach_error_t v1;

  v1 = IOObjectRelease(*(_DWORD *)(v0 + 16));
  sub_1D44C84C4(v1);
  return v0;
}

uint64_t sub_1D4493FBC()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v3;
  uint64_t v4;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v4 = type metadata accessor for UnsafeIOIterator(0, AssociatedTypeWitness, AssociatedConformanceWitness, v3);
  sub_1D4493744(v4, (uint64_t)&off_1EFE42AD0);
  return v0;
}

uint64_t sub_1D449408C()
{
  sub_1D4493FBC();
  sub_1D449469C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IOIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IOIterator);
}

uint64_t sub_1D44940B0()
{
  uint64_t v0;
  io_iterator_t v1;
  io_object_t v2;
  io_object_t v3;
  id v4;
  uint64_t result;

  v1 = *(_DWORD *)(v0 + 16);
  if (IOIteratorIsValid(v1))
  {
    v2 = IOIteratorNext(v1);
    if (v2)
    {
      v3 = v2;
      sub_1D44937B4(v2);
      type metadata accessor for IOService();
      result = swift_allocObject();
      *(_DWORD *)(result + 16) = v3;
      return result;
    }
  }
  else
  {
    type metadata accessor for SNError();
    v4 = sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD000000000000013, 0x80000001D455ADC0);
    swift_willThrow();

  }
  return 0;
}

uint64_t sub_1D4494188@<X0>(uint64_t a1@<X8>)
{
  _DWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  io_iterator_t v16;
  uint64_t AssociatedConformanceWitness;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v25 = a1;
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1D451B160();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - v8;
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = MEMORY[0x1E0C80A78](v7);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v24 - v14;
  v16 = v1[4];
  v26 = v2;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1D4493ECC(v16, AssociatedTypeWitness, AssociatedConformanceWitness, (uint64_t)v9);
  v18 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v9, 1, AssociatedTypeWitness);
  v19 = v25;
  if (v18 == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v20 = 1;
    v21 = v26;
  }
  else
  {
    v22 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v22(v15, v9, AssociatedTypeWitness);
    v22(v13, v15, AssociatedTypeWitness);
    v21 = v26;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v13, v26, v3);
    v20 = 0;
  }
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v19, v20, 1, v21);
}

uint64_t sub_1D4494358@<X0>(int *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1D4493AD0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1D4494380@<X0>(uint64_t a1@<X8>)
{
  return sub_1D4494188(a1);
}

void sub_1D44943A0(uint32_t selector, uint64_t *input, unint64_t inputCnt, void *inputStruct, uint64_t a5, uint64_t *output, unint64_t a7, void *outputStruct, uint64_t a9, mach_port_t connection)
{
  uint64_t v10;
  size_t v12;
  mach_error_t v13;
  size_t v14;
  uint32_t outputCnt;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  if ((a7 & 0x8000000000000000) != 0 || HIDWORD(a7))
    goto LABEL_15;
  outputCnt = a7;
  if (outputStruct)
  {
    v14 = a9 - (_QWORD)outputStruct;
    if ((inputCnt & 0x8000000000000000) != 0)
      goto LABEL_15;
  }
  else
  {
    v14 = 0;
    if ((inputCnt & 0x8000000000000000) != 0)
    {
LABEL_15:
      sub_1D42DCED4();
      sub_1D451B550();
      __break(1u);
      return;
    }
  }
  if (HIDWORD(inputCnt))
    goto LABEL_15;
  v12 = inputStruct ? a5 - (_QWORD)inputStruct : 0;
  v13 = IOConnectCallMethod(connection, selector, input, inputCnt, inputStruct, v12, output, &outputCnt, outputStruct, &v14);
  sub_1D43CAE30(v13);
  if (!v10 && ((v14 & 0x8000000000000000) != 0 || HIDWORD(v14)))
    goto LABEL_15;
}

void sub_1D44944F4(uint32_t a1, uint64_t *a2, unint64_t a3, void *a4, uint64_t a5, uint64_t *a6, unint64_t a7, void *a8, uint64_t a9)
{
  mach_port_t *v9;

  sub_1D44943A0(a1, a2, a3, a4, a5, a6, a7, a8, a9, *v9);
}

uint64_t sub_1D4494520()
{
  uint64_t v0;
  mach_error_t v1;

  v1 = IOServiceClose(*(_DWORD *)(v0 + 16));
  sub_1D44C84C4(v1);
  return v0;
}

uint64_t sub_1D4494574()
{
  sub_1D4494520();
  sub_1D449469C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IOConnect()
{
  return objc_opt_self();
}

void type metadata accessor for UnsafeIOConnect()
{
  sub_1D42CB35C();
}

uint64_t type metadata accessor for UnsafeIOIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UnsafeIOIterator);
}

void type metadata accessor for UnsafeIOService()
{
  sub_1D42CB35C();
}

void type metadata accessor for UnsafeIOObject()
{
  sub_1D42CB35C();
}

void type metadata accessor for UnsafeIONotificationPort()
{
  sub_1D42CB35C();
}

_UNKNOWN **sub_1D44945E8()
{
  return &off_1EFE42640;
}

void sub_1D44945F4(uint32_t a1, uint64_t *a2, unint64_t a3, void *a4, uint64_t a5, uint64_t *a6, unint64_t a7, void *a8, uint64_t a9)
{
  uint64_t v9;

  sub_1D44943A0(a1, a2, a3, a4, a5, a6, a7, a8, a9, *(_DWORD *)(v9 + 16));
}

_UNKNOWN **sub_1D4494620()
{
  return &off_1EFE42AD0;
}

_UNKNOWN **sub_1D449462C()
{
  return &off_1EFE42670;
}

_UNKNOWN **sub_1D4494638()
{
  return &off_1E97A1228;
}

_UNKNOWN **sub_1D4494644()
{
  return &off_1EFE42150;
}

void sub_1D4494650(uint32_t a1, uint64_t *a2, unint64_t a3, void *a4, uint64_t a5, uint64_t *a6, unint64_t a7, void *a8, uint64_t a9)
{
  sub_1D44945F4(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

void sub_1D4494688(int a1@<W0>, int *a2@<X8>)
{
  sub_1D449380C(a1, a2);
}

uint64_t sub_1D449469C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D44946C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  sub_1D42C71F0();
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v3 - 1);
      v4 = *v3;
      swift_bridgeObjectRetain();
      v6 = *(_QWORD *)(v9 + 16);
      if (v6 >= *(_QWORD *)(v9 + 24) >> 1)
        sub_1D42C71F0();
      v3 += 3;
      *(_QWORD *)(v9 + 16) = v6 + 1;
      v7 = v9 + 16 * v6;
      *(_QWORD *)(v7 + 32) = v5;
      *(_QWORD *)(v7 + 40) = v4;
      --v2;
    }
    while (v2);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1D44947A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  sub_1D42C71F0();
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v3 - 1);
      v4 = *v3;
      v7 = *(_QWORD *)(v10 + 16);
      v6 = *(_QWORD *)(v10 + 24);
      swift_bridgeObjectRetain();
      if (v7 >= v6 >> 1)
        sub_1D42C71F0();
      v3 += 3;
      *(_QWORD *)(v10 + 16) = v7 + 1;
      v8 = v10 + 16 * v7;
      *(_QWORD *)(v8 + 32) = v5;
      *(_QWORD *)(v8 + 40) = v4;
      --v2;
    }
    while (v2);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void sub_1D4494890(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 16);
  if (v4 >= v3)
    v5 = *(_QWORD *)(a1 + 16);
  else
    v5 = *(_QWORD *)(a2 + 16);
  v24 = MEMORY[0x1E0DEE9D8];
  sub_1D42C71F0();
  v22 = v3;
  v23 = a1;
  v21 = v5;
  if (v5)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = (uint64_t *)(a1 + 40);
    v7 = v4;
    v8 = v4;
    while (v3)
    {
      if (!v7)
        goto LABEL_23;
      v9 = *(v6 - 1);
      v10 = *v6;
      swift_bridgeObjectRetain();
      v11 = *(_QWORD *)(v24 + 16);
      if (v11 >= *(_QWORD *)(v24 + 24) >> 1)
        sub_1D42C71F0();
      *(_QWORD *)(v24 + 16) = v11 + 1;
      v12 = v24 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v9;
      *(_QWORD *)(v12 + 40) = v10;
      --v7;
      --v3;
      v6 += 2;
      if (!--v5)
        goto LABEL_13;
    }
    __break(1u);
LABEL_23:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = v4;
LABEL_13:
    if (v22 <= v8)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    v13 = v21;
    v14 = (uint64_t *)(v23 + 16 * v21 + 40);
    while (v13 < v22)
    {
      if (v8 == v13)
        goto LABEL_21;
      if (v13 >= v8)
        goto LABEL_25;
      v15 = v8;
      v16 = *(v14 - 1);
      v17 = *v14;
      v19 = *(_QWORD *)(v24 + 16);
      v18 = *(_QWORD *)(v24 + 24);
      swift_bridgeObjectRetain();
      if (v19 >= v18 >> 1)
        sub_1D42C71F0();
      ++v13;
      *(_QWORD *)(v24 + 16) = v19 + 1;
      v20 = v24 + 16 * v19;
      *(_QWORD *)(v20 + 32) = v16;
      *(_QWORD *)(v20 + 40) = v17;
      v14 += 2;
      v8 = v15;
      if (v22 == v13)
        goto LABEL_21;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
}

uint64_t sub_1D4494A88(uint64_t a1, void (*a2)(__int128 *, __int128 *, __int128 *))
{
  uint64_t v2;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _OWORD *v33;
  __int128 v34;
  __int128 v35;
  int64_t v36;
  int64_t v37;
  uint64_t v38;
  int64_t v39;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _QWORD v47[6];
  uint64_t v48;

  v4 = *(_QWORD *)(a1 + 16);
  v48 = MEMORY[0x1E0DEE9D8];
  sub_1D42C72C4(0, v4, 0);
  v5 = v48;
  sub_1D43F6E7C(v47, a1);
  v6 = v47[0];
  v7 = v47[3];
  v8 = v47[4];
  v38 = v47[1];
  v39 = (unint64_t)(v47[2] + 64) >> 6;
  v37 = v4;
  if (!v4)
  {
    result = swift_bridgeObjectRetain();
LABEL_28:
    if (!v8)
      goto LABEL_30;
LABEL_29:
    v24 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v25 = v24 | (v7 << 6);
    while (1)
    {
      v29 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v25);
      v5 = *v29;
      v30 = v29[1];
      sub_1D42B294C(*(_QWORD *)(v6 + 56) + 32 * v25, (uint64_t)&v42);
      *(_QWORD *)&v41 = v5;
      *((_QWORD *)&v41 + 1) = v30;
      v45 = v42;
      v46 = v43;
      v44 = v41;
      swift_bridgeObjectRetain();
      a2(&v41, &v42, &v44);
      sub_1D44A032C((uint64_t)&v44, &qword_1EFE51AB0);
      if (v2)
      {
        swift_release();
        swift_release();
        return v5;
      }
      v5 = v48;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1D42C72C4(0, *(_QWORD *)(v5 + 16) + 1, 1);
        v5 = v48;
      }
      v32 = *(_QWORD *)(v5 + 16);
      v31 = *(_QWORD *)(v5 + 24);
      if (v32 >= v31 >> 1)
      {
        result = (uint64_t)sub_1D42C72C4((char *)(v31 > 1), v32 + 1, 1);
        v5 = v48;
      }
      *(_QWORD *)(v5 + 16) = v32 + 1;
      v33 = (_OWORD *)(v5 + 48 * v32);
      v34 = v41;
      v35 = v43;
      v33[3] = v42;
      v33[4] = v35;
      v33[2] = v34;
      if (v8)
        goto LABEL_29;
LABEL_30:
      v26 = v7 + 1;
      if (__OFADD__(v7, 1))
        break;
      if (v26 >= v39)
        goto LABEL_56;
      v27 = *(_QWORD *)(v38 + 8 * v26);
      if (!v27)
      {
        v28 = v7 + 2;
        if (v7 + 2 >= v39)
          goto LABEL_56;
        v27 = *(_QWORD *)(v38 + 8 * v28);
        if (v27)
          goto LABEL_39;
        v28 = v7 + 3;
        if (v7 + 3 >= v39)
          goto LABEL_56;
        v27 = *(_QWORD *)(v38 + 8 * v28);
        if (v27)
          goto LABEL_39;
        v28 = v7 + 4;
        if (v7 + 4 >= v39)
          goto LABEL_56;
        v27 = *(_QWORD *)(v38 + 8 * v28);
        if (v27)
        {
LABEL_39:
          v26 = v28;
        }
        else
        {
          v26 = v7 + 5;
          if (v7 + 5 >= v39)
            goto LABEL_56;
          v27 = *(_QWORD *)(v38 + 8 * v26);
          if (!v27)
          {
            v36 = v7 + 6;
            while (v36 < v39)
            {
              v27 = *(_QWORD *)(v38 + 8 * v36++);
              if (v27)
              {
                v26 = v36 - 1;
                goto LABEL_40;
              }
            }
LABEL_56:
            swift_release();
            return v5;
          }
        }
      }
LABEL_40:
      v8 = (v27 - 1) & v27;
      v25 = __clz(__rbit64(v27)) + (v26 << 6);
      v7 = v26;
    }
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v7 << 6);
      goto LABEL_16;
    }
    if (__OFADD__(v7++, 1))
      goto LABEL_59;
    if (v7 >= v39)
      goto LABEL_60;
    v14 = *(_QWORD *)(v38 + 8 * v7);
    if (!v14)
      break;
LABEL_15:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v7 << 6);
LABEL_16:
    v16 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v12);
    v18 = *v16;
    v17 = v16[1];
    sub_1D42B294C(*(_QWORD *)(v6 + 56) + 32 * v12, (uint64_t)&v42);
    *(_QWORD *)&v41 = v18;
    *((_QWORD *)&v41 + 1) = v17;
    swift_bridgeObjectRetain();
    a2(&v44, &v45, &v41);
    if (v2)
    {
      swift_release();
      swift_release();
      sub_1D44A032C((uint64_t)&v41, &qword_1EFE51AB0);
      return v5;
    }
    sub_1D44A032C((uint64_t)&v41, &qword_1EFE51AB0);
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1D42C72C4(0, *(_QWORD *)(v5 + 16) + 1, 1);
      v5 = v48;
    }
    v20 = *(_QWORD *)(v5 + 16);
    v19 = *(_QWORD *)(v5 + 24);
    if (v20 >= v19 >> 1)
    {
      result = (uint64_t)sub_1D42C72C4((char *)(v19 > 1), v20 + 1, 1);
      v5 = v48;
    }
    ++v10;
    *(_QWORD *)(v5 + 16) = v20 + 1;
    v21 = (_OWORD *)(v5 + 48 * v20);
    v22 = v44;
    v23 = v46;
    v21[3] = v45;
    v21[4] = v23;
    v21[2] = v22;
    if (v10 == v37)
      goto LABEL_28;
  }
  v15 = v7 + 1;
  if (v7 + 1 >= v39)
    goto LABEL_63;
  v14 = *(_QWORD *)(v38 + 8 * v15);
  if (v14)
    goto LABEL_14;
  v15 = v7 + 2;
  if (v7 + 2 >= v39)
    goto LABEL_64;
  v14 = *(_QWORD *)(v38 + 8 * v15);
  if (v14)
    goto LABEL_14;
  v15 = v7 + 3;
  if (v7 + 3 >= v39)
    goto LABEL_65;
  v14 = *(_QWORD *)(v38 + 8 * v15);
  if (v14)
  {
LABEL_14:
    v7 = v15;
    goto LABEL_15;
  }
  while (1)
  {
    v7 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v7 >= v39)
      goto LABEL_62;
    v14 = *(_QWORD *)(v38 + 8 * v7);
    ++v15;
    if (v14)
      goto LABEL_15;
  }
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

void sub_1D4494F40(uint64_t a1, void (*a2)(uint64_t *__return_ptr, _QWORD *))
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[4];
  _QWORD v31[5];
  void (*v32)(uint64_t *__return_ptr, _QWORD *);

  v32 = a2;
  sub_1D43F6E7C(v31, a1);
  v3 = v31[0];
  v4 = v31[3];
  v5 = v31[4];
  v26 = v31[1];
  v27 = (unint64_t)(v31[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  v25 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v5)
    {
      v6 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v7 = v6 | (v4 << 6);
      goto LABEL_15;
    }
    v8 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v8 >= v27)
      goto LABEL_30;
    v9 = *(_QWORD *)(v26 + 8 * v8);
    if (!v9)
    {
      v10 = v4 + 2;
      if (v4 + 2 >= v27)
        goto LABEL_30;
      v9 = *(_QWORD *)(v26 + 8 * v10);
      if (v9)
        goto LABEL_13;
      v10 = v4 + 3;
      if (v4 + 3 >= v27)
        goto LABEL_30;
      v9 = *(_QWORD *)(v26 + 8 * v10);
      if (v9)
        goto LABEL_13;
      v10 = v4 + 4;
      if (v4 + 4 >= v27)
        goto LABEL_30;
      v9 = *(_QWORD *)(v26 + 8 * v10);
      if (v9)
      {
LABEL_13:
        v8 = v10;
      }
      else
      {
        v8 = v4 + 5;
        if (v4 + 5 >= v27)
          goto LABEL_30;
        v9 = *(_QWORD *)(v26 + 8 * v8);
        if (!v9)
        {
          v21 = v4 + 6;
          while (v21 < v27)
          {
            v9 = *(_QWORD *)(v26 + 8 * v21++);
            if (v9)
            {
              v8 = v21 - 1;
              goto LABEL_14;
            }
          }
LABEL_30:
          swift_release();
LABEL_31:
          swift_release();
          return;
        }
      }
    }
LABEL_14:
    v5 = (v9 - 1) & v9;
    v7 = __clz(__rbit64(v9)) + (v8 << 6);
    v4 = v8;
LABEL_15:
    v11 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v7);
    v12 = *v11;
    v13 = v11[1];
    v14 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 16 * v7);
    v16 = *v14;
    v15 = v14[1];
    v30[0] = v12;
    v30[1] = v13;
    v30[2] = v16;
    v30[3] = v15;
    swift_bridgeObjectRetain();
    sub_1D42DD16C(v16, v15);
    v32(&v28, v30);
    if (v2)
    {
      swift_bridgeObjectRelease();
      sub_1D42B5420(v16, v15);
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_31;
    }
    v17 = v29;
    if (v29)
    {
      v24 = v28;
      sub_1D42DD16C(v16, v15);
      swift_bridgeObjectRelease();
      sub_1D42B5420(v16, v15);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D442F714();
        v25 = v22;
      }
      v18 = *(_QWORD *)(v25 + 16);
      v19 = v18 + 1;
      if (v18 >= *(_QWORD *)(v25 + 24) >> 1)
      {
        sub_1D442F714();
        v19 = v18 + 1;
        v25 = v23;
      }
      *(_QWORD *)(v25 + 16) = v19;
      v20 = (_QWORD *)(v25 + 32 * v18);
      v20[4] = v24;
      v20[5] = v17;
      v20[6] = v16;
      v20[7] = v15;
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1D42B5420(v16, v15);
    }
  }
  __break(1u);
}

void sub_1D4495220(uint64_t isUniquelyReferenced_nonNull_native, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD v15[4];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  uint64_t v23;

  v21 = a2;
  v2 = isUniquelyReferenced_nonNull_native;
  v3 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16);
  if (v3)
  {
    v4 = 0;
    v5 = isUniquelyReferenced_nonNull_native + 40;
    v19 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16);
    v16 = v3 - 1;
    v6 = MEMORY[0x1E0DEE9D8];
    v20 = isUniquelyReferenced_nonNull_native;
    v17 = isUniquelyReferenced_nonNull_native + 40;
    do
    {
      v18 = v6;
      v7 = (uint64_t *)(v5 + 16 * v4);
      v8 = v4;
      while (1)
      {
        if (v8 >= *(_QWORD *)(v2 + 16))
        {
          __break(1u);
          return;
        }
        v9 = *(v7 - 1);
        v10 = *v7;
        v4 = v8 + 1;
        v22[0] = v9;
        v22[1] = v10;
        MEMORY[0x1E0C80A78](isUniquelyReferenced_nonNull_native);
        v15[2] = v22;
        swift_bridgeObjectRetain();
        v11 = v21;
        swift_bridgeObjectRetain();
        v12 = sub_1D4495B28(sub_1D4404654, (uint64_t)v15, v11);
        swift_bridgeObjectRelease();
        if ((v12 & 1) == 0)
          break;
        isUniquelyReferenced_nonNull_native = swift_bridgeObjectRelease();
        v7 += 2;
        ++v8;
        v2 = v20;
        if (v19 == v4)
          goto LABEL_13;
      }
      v6 = v18;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v23 = v6;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1D42C71F0();
        v6 = v23;
      }
      v13 = *(_QWORD *)(v6 + 16);
      if (v13 >= *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_1D42C71F0();
        v6 = v23;
      }
      *(_QWORD *)(v6 + 16) = v13 + 1;
      v14 = v6 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v9;
      *(_QWORD *)(v14 + 40) = v10;
      v5 = v17;
      v2 = v20;
    }
    while (v16 != v8);
  }
LABEL_13:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_1D44953F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v5 = 0;
    v6 = a1 + 40;
    v7 = MEMORY[0x1E0DEE9D8];
    v18 = a1 + 40;
    do
    {
      v19 = v7;
      v8 = (uint64_t *)(v6 + 16 * v5);
      v9 = v5;
      while (1)
      {
        if (v9 >= *(_QWORD *)(a1 + 16))
        {
          __break(1u);
          return;
        }
        v11 = *(v8 - 1);
        v10 = *v8;
        v5 = v9 + 1;
        v12 = *(_QWORD *)(a2 + 16);
        swift_bridgeObjectRetain();
        if (!v12)
          break;
        swift_bridgeObjectRetain();
        sub_1D4366B34(v11, v10);
        v14 = v13;
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0)
          break;
        swift_bridgeObjectRelease();
        v8 += 2;
        ++v9;
        if (v4 == v5)
          goto LABEL_14;
      }
      v7 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D42C71F0();
        v7 = v19;
      }
      v15 = *(_QWORD *)(v7 + 16);
      v16 = v15 + 1;
      if (v15 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_1D42C71F0();
        v16 = v15 + 1;
        v7 = v19;
      }
      *(_QWORD *)(v7 + 16) = v16;
      v17 = v7 + 16 * v15;
      *(_QWORD *)(v17 + 32) = v11;
      *(_QWORD *)(v17 + 40) = v10;
      v6 = v18;
    }
    while (v4 - 1 != v9);
  }
LABEL_14:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_1D449558C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE v15[32];
  _QWORD v16[2];
  uint64_t v17;
  _QWORD *v18;

  v2 = *(_QWORD *)(a1 + 16);
  v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v3 = &v18;
  sub_1D44A3E50();
  if (v2)
  {
    v4 = a1 + 32;
    sub_1D42DCE84();
    do
    {
      sub_1D42FC068(v4, (uint64_t)v16, &qword_1EFE52880);
      v5 = v16[0];
      v6 = v16[1];
      sub_1D42B294C((uint64_t)&v17, (uint64_t)v15);
      swift_bridgeObjectRetain();
      sub_1D42B5400((uint64_t)v15);
      sub_1D44A032C((uint64_t)v16, &qword_1EFE52880);
      if ((sub_1D44A3F70() & 1) == 0)
      {
        sub_1D44A3E2C();
        sub_1D42C71F0();
        v3 = v18;
      }
      v7 = v3[2];
      if (v7 >= v3[3] >> 1)
      {
        sub_1D42C71F0();
        v3 = v18;
      }
      v3[2] = v7 + 1;
      v8 = &v3[2 * v7];
      v8[4] = v5;
      v8[5] = v6;
      v4 += 48;
      --v2;
    }
    while (v2);
  }
  else
  {
    v3 = v18;
    sub_1D42DCE84();
  }
  sub_1D42CB5C8();
  v9 = swift_retain();
  v10 = sub_1D44C9228(v9);
  v11 = v3[2];
  swift_release();
  v12 = *(_QWORD *)(v10 + 16);
  sub_1D42BE8B4();
  if (v11 == v12)
  {
    v13 = swift_bridgeObjectRetain();
    sub_1D4459F68(v13);
  }
  else
  {
    sub_1D42BE058();
    sub_1D42B6D0C();
    *v14 = 3;
    sub_1D4312028();
  }
  sub_1D44A3C08();
}

void sub_1D4495718(uint64_t a1)
{
  sub_1D4495894(a1, (uint64_t (*)(void))sub_1D44946C0, (void (*)(uint64_t))sub_1D4459F7C);
}

void sub_1D449573C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;

  sub_1D42BE910();
  v1 = v0;
  v2 = *(_QWORD *)(v0 + 16);
  v15 = MEMORY[0x1E0DEE9D8];
  sub_1D44A3E50();
  if (v2)
  {
    sub_1D42DCE84();
    v3 = (uint64_t *)(v1 + 40);
    do
    {
      v5 = *(v3 - 1);
      v4 = *v3;
      v7 = *(_QWORD *)(v15 + 16);
      v6 = *(_QWORD *)(v15 + 24);
      swift_bridgeObjectRetain();
      if (v7 >= v6 >> 1)
        sub_1D42C71F0();
      v3 += 4;
      *(_QWORD *)(v15 + 16) = v7 + 1;
      v8 = v15 + 16 * v7;
      *(_QWORD *)(v8 + 32) = v5;
      *(_QWORD *)(v8 + 40) = v4;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  v9 = swift_retain();
  v10 = sub_1D44C9228(v9);
  v11 = *(_QWORD *)(v15 + 16);
  swift_release();
  v12 = *(_QWORD *)(v10 + 16);
  sub_1D42CB5C8();
  if (v11 == v12)
  {
    v13 = sub_1D42DCE84();
    sub_1D4459F90(v13);
  }
  else
  {
    sub_1D42BE058();
    sub_1D42B6D0C();
    *v14 = 3;
    sub_1D4312028();
  }
  sub_1D42BE844();
}

void sub_1D449584C(uint64_t a1)
{
  sub_1D4495894(a1, (uint64_t (*)(void))sub_1D44947A8, (void (*)(uint64_t))sub_1D4459FE0);
}

void sub_1D4495870(uint64_t a1)
{
  sub_1D4495894(a1, (uint64_t (*)(void))sub_1D44946C0, (void (*)(uint64_t))sub_1D445A008);
}

void sub_1D4495894(uint64_t a1, uint64_t (*a2)(void), void (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;

  v4 = a2();
  v5 = swift_bridgeObjectRetain();
  v6 = sub_1D44C9228(v5);
  v7 = *(_QWORD *)(v4 + 16);
  sub_1D42CB5C8();
  v8 = *(_QWORD *)(v6 + 16);
  swift_bridgeObjectRelease();
  if (v7 == v8)
  {
    v9 = sub_1D42DCE84();
    a3(v9);
  }
  else
  {
    sub_1D42BE058();
    sub_1D42B6D0C();
    *v10 = 3;
    sub_1D4312028();
  }
  sub_1D446B648();
}

uint64_t sub_1D449592C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v11;

  sub_1D4494890(a1, a2);
  v5 = v4;
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1D44C9228(v6);
  v8 = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(v7 + 16);
  swift_bridgeObjectRelease();
  if (v8 == v9)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_1D445A0A0(a1, a2);
  }
  else
  {
    sub_1D42BE058();
    swift_allocError();
    *v11 = 3;
    return swift_willThrow();
  }
}

void sub_1D44959F4(uint64_t a1)
{
  unint64_t v1;
  char v2;
  _BYTE *v3;

  if (*(_QWORD *)(a1 + 16) && (v1 = sub_1D4366D54(), (v2 & 1) != 0))
  {
    sub_1D44A3DE0(v1);
  }
  else
  {
    sub_1D42BE058();
    sub_1D42B6D0C();
    *v3 = 8;
    sub_1D4312028();
  }
  sub_1D42BE888();
}

void sub_1D4495A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  char v4;
  _BYTE *v5;

  if (*(_QWORD *)(a1 + 16) && (v3 = sub_1D44A3D84(a1, a2, a3), (v4 & 1) != 0))
  {
    sub_1D44A3DE0(v3);
  }
  else
  {
    sub_1D42BE058();
    sub_1D42B6D0C();
    *v5 = 8;
    sub_1D4312028();
  }
  sub_1D42BE888();
}

uint64_t sub_1D4495AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D4495ACC(a1, a2, a3);
}

uint64_t sub_1D4495ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  _BYTE *v7;

  if (*(_QWORD *)(a1 + 16))
  {
    v4 = sub_1D44A3D84(a1, a2, a3);
    if ((v5 & 1) != 0)
      return *(unsigned int *)(*(_QWORD *)(v3 + 56) + 4 * v4);
  }
  sub_1D42BE058();
  sub_1D42B6D0C();
  *v7 = 8;
  return sub_1D4312028();
}

uint64_t sub_1D4495B28(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  int64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char v17;
  char v18;
  int64_t v19;
  char v20;
  _QWORD v21[2];
  _QWORD v22[5];
  uint64_t v23;

  sub_1D43F6E7C(v22, a3);
  v5 = v22[0];
  v23 = v22[1];
  v6 = v22[3];
  v7 = v22[4];
  v8 = (unint64_t)(v22[2] + 64) >> 6;
  result = swift_bridgeObjectRetain();
  while (1)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (v6 << 6);
      goto LABEL_15;
    }
    v12 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    if (v12 >= v8)
      goto LABEL_25;
    v13 = *(_QWORD *)(v23 + 8 * v12);
    if (!v13)
    {
      v14 = v6 + 2;
      if (v6 + 2 >= v8)
        goto LABEL_25;
      v13 = *(_QWORD *)(v23 + 8 * v14);
      if (v13)
        goto LABEL_13;
      v14 = v6 + 3;
      if (v6 + 3 >= v8)
        goto LABEL_25;
      v13 = *(_QWORD *)(v23 + 8 * v14);
      if (v13)
        goto LABEL_13;
      v14 = v6 + 4;
      if (v6 + 4 >= v8)
        goto LABEL_25;
      v13 = *(_QWORD *)(v23 + 8 * v14);
      if (v13)
      {
LABEL_13:
        v12 = v14;
      }
      else
      {
        v12 = v6 + 5;
        if (v6 + 5 >= v8)
          goto LABEL_25;
        v13 = *(_QWORD *)(v23 + 8 * v12);
        if (!v13)
        {
          v19 = v6 + 6;
          while (v19 < v8)
          {
            v13 = *(_QWORD *)(v23 + 8 * v19++);
            if (v13)
            {
              v12 = v19 - 1;
              goto LABEL_14;
            }
          }
LABEL_25:
          swift_release();
          v20 = 0;
          return v20 & 1;
        }
      }
    }
LABEL_14:
    v7 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v12 << 6);
    v6 = v12;
LABEL_15:
    v15 = (_QWORD *)(*(_QWORD *)(v5 + 56) + 16 * v11);
    v16 = v15[1];
    v21[0] = *v15;
    v21[1] = v16;
    swift_bridgeObjectRetain();
    v17 = a1(v21);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v20 & 1;
    }
    v18 = v17;
    result = swift_bridgeObjectRelease();
    if ((v18 & 1) != 0)
    {
      swift_release();
      v20 = 1;
      return v20 & 1;
    }
  }
  __break(1u);
  return result;
}

void sub_1D4495CF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  char *v9;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D42BE910();
  v18 = v1;
  v19 = v2;
  v4 = v3;
  v6 = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v9 = (char *)&v16 - v8;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(0x6A2E657069636572, 0xEB000000006E6F73, AssociatedTypeWitness, AssociatedConformanceWitness);
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, v6, v4);
  if (v0)
  {
    sub_1D44A3B58();
  }
  else
  {
    v13 = v11;
    v14 = v12;
    v15 = sub_1D43A9078();
    v17 = v14;
    sub_1D449C60C(v15, v18);
    sub_1D44A3B58();
    sub_1D42B5420(v13, v17);
    swift_bridgeObjectRelease();
  }
  sub_1D42BE844();
}

uint64_t sub_1D4495E9C@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(result + 16);
  if (v3 >> 61)
  {
    __break(1u);
  }
  else
  {
    result = sub_1D43C3A7C(result + 32, result + 32 + 4 * v3);
    a2[3] = MEMORY[0x1E0CB0338];
    *a2 = result;
    a2[1] = v4;
  }
  return result;
}

uint64_t sub_1D4495EEC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1D4495F14(a1, a2, a3, a4, a5);
}

uint64_t sub_1D4495F00(_QWORD *a1, uint64_t a2)
{
  return sub_1D4496240(a1, a2);
}

uint64_t sub_1D4495F14(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  int v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v8 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v8 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v8 <= 0x7FFFFFFF)
  {
    v5 = a5;
    v6 = a3;
    v7 = a2;
    v9 = sub_1D44E4E48(a5, (a4 >> 1) - a3);
    sub_1D44AFEF8(*(int *)(v5 + 28) * (uint64_t)v9 / 8, (__n128)0, (__n128)0);
    v11 = v10;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_5;
    goto LABEL_13;
  }
LABEL_12:
  __break(1u);
LABEL_13:
  sub_1D43830C4();
  v11 = v16;
LABEL_5:
  v17 = 0;
  if ((sub_1D44E4E70(v5, (float32x4_t *)(v7 + 4 * v6), v11 + 32, v8, &v17) & 1) != 0)
  {
    v12 = *(_QWORD *)(v11 + 16);
    if (v12 >> 58)
      __break(1u);
    sub_1D42BD44C((int *)(v11 + 32), 8 * v12, *(int *)(v5 + 28));
    v14 = v13;
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = type metadata accessor for SNError();
    sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD000000000000025, 0x80000001D4552020);
    swift_willThrow();
    swift_bridgeObjectRelease();
  }
  return v14;
}

void sub_1D44960C4(float32x4_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  float32x4_t *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else
  {
    v4 = a2;
    if (a2 <= 0x7FFFFFFF)
    {
      v3 = a3;
      v5 = a1;
      v6 = sub_1D44E4E48(a3, a2);
      sub_1D44AFEF8(*(int *)(v3 + 28) * (uint64_t)v6 / 8, (__n128)0, (__n128)0);
      v8 = v7;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  __break(1u);
LABEL_11:
  sub_1D43830C4();
  v8 = v10;
LABEL_4:
  v11 = 0;
  if (sub_1D44E4E70(v3, v5, v8 + 32, v4, &v11))
  {
    v9 = *(_QWORD *)(v8 + 16);
    if (v9 >> 58)
      __break(1u);
    sub_1D42BD44C((int *)(v8 + 32), 8 * v9, *(int *)(v3 + 28));
    sub_1D42BE8B4();
  }
  else
  {
    type metadata accessor for SNError();
    sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD000000000000025, 0x80000001D4552020);
    sub_1D4312028();
    sub_1D42BE8B4();
  }
  sub_1D446B648();
}

uint64_t sub_1D4496240(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1D42B5528(a1, a1[3]);
  v5 = sub_1D4519930();
  if (v5 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v5 <= 0x7FFFFFFF)
  {
    v6 = sub_1D44E4E48(a2, v5);
    sub_1D44AFEF8(*(int *)(a2 + 28) * (uint64_t)v6 / 8, (__n128)0, (__n128)0);
    v8 = v7;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = v2;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_15;
  }
  __break(1u);
LABEL_15:
  sub_1D43830C4();
  v8 = isUniquelyReferenced_nonNull_native;
LABEL_4:
  v10 = v8 + 32;
  v14 = v8 + 32;
  MEMORY[0x1E0C80A78](isUniquelyReferenced_nonNull_native);
  sub_1D42B5528(a1, a1[3]);
  result = sub_1D4328C5C();
  if (v15)
  {
    if (v8 == -32)
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    if (v10 == v14)
    {
      swift_bridgeObjectRelease();
      return a2;
    }
    __break(1u);
    __break(1u);
    goto LABEL_17;
  }
  if (v8 != -32)
  {
    if (v10 == v14)
    {
      v12 = *(_QWORD *)(v8 + 16);
      if (!(v12 >> 58))
      {
        sub_1D42BD44C((int *)(v8 + 32), 8 * v12, *(int *)(a2 + 28));
        a2 = v13;
        swift_bridgeObjectRelease();
        return a2;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1D4496434(float32x4_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  int v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v10 = 0;
  v7 = *a4;
  sub_1D42B5528(a5, a5[3]);
  v8 = sub_1D4519930();
  if (v8 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
LABEL_7:
    __break(1u);
  }
  if (v8 > 0x7FFFFFFF)
    goto LABEL_7;
  result = sub_1D44E4E70(a3, a1, v7, v8, &v10);
  if ((result & 1) == 0)
  {
    type metadata accessor for SNError();
    sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD000000000000025, 0x80000001D4552020);
    return swift_willThrow();
  }
  return result;
}

_QWORD *sub_1D4496564(uint64_t a1, _QWORD *a2, _QWORD *(*a3)(uint64_t *__return_ptr, uint64_t *), uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t *), uint64_t a6, void (*a7)(_QWORD **, uint64_t *, uint64_t *))
{
  uint64_t v7;
  _QWORD *result;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v16 = a1;
  result = a3(&v15, &v16);
  if (!v7)
  {
    a5(&v14, &v15);
    a7(&v13, &v12, &v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = v13;
    *a2 = v12;
  }
  return result;
}

uint64_t sub_1D449663C(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;

  sub_1D42B28FC(&qword_1EFE54EF0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D45295F0;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = MEMORY[0x1E0DEE9D8];
  for (i = 32; i != 48; i += 8)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D44B4854();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1D448D080(v5);
  swift_bridgeObjectRelease();
  sub_1D449573C();
  v8 = v7;
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_1D4347744();
  return v8;
}

uint64_t sub_1D4496750(uint64_t a1, void (*a2)(uint64_t *__return_ptr, _QWORD *))
{
  uint64_t v2;

  swift_retain();
  sub_1D4494F40(a1, a2);
  if (!v2)
  {
    sub_1D449573C();
    sub_1D42CB5C8();
    sub_1D42CB7B8();
  }
  return a1;
}

uint64_t sub_1D44967CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  char v5;
  uint64_t v6;

  if (!*(_QWORD *)(a3 + 16))
    return 0;
  v4 = sub_1D4366B34(a1, a2);
  if ((v5 & 1) == 0)
    return 0;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 16 * v4);
  swift_bridgeObjectRetain();
  return v6;
}

uint64_t sub_1D4496828(_QWORD *a1)
{
  uint64_t v1;
  uint64_t result;
  _QWORD v4[6];

  v4[5] = *MEMORY[0x1E0C80C00];
  sub_1D42B5528(a1, a1[3]);
  result = sub_1D451BA00();
  if (!v1)
  {
    sub_1D42B5528(v4, v4[3]);
    sub_1D43AA60C();
    sub_1D451B838();
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_1D4496C00(uint64_t a1, _QWORD *a2)
{
  __int128 v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _OWORD v8[3];
  int v9;
  int v10;
  _BYTE v11[24];
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  sub_1D42B5528(a2, a2[3]);
  sub_1D451BA18();
  v3 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v3;
  v8[2] = *(_OWORD *)(a1 + 32);
  v9 = *(_DWORD *)(a1 + 48);
  v4 = sub_1D43C3A7C((uint64_t)v8, (uint64_t)&v10);
  v6 = v5;
  *(_QWORD *)&v8[0] = v4;
  *((_QWORD *)&v8[0] + 1) = v5;
  sub_1D42CAEF0((uint64_t)v11, v12);
  sub_1D439EAC0();
  sub_1D451B850();
  sub_1D42B5420(v4, v6);
  return sub_1D42B5400((uint64_t)v11);
}

uint64_t cdeclSavePipeline(outputPath:ebankInputCount:ebankInputStride:modelPath:feedbackConnectionStarts:feedbackConnectionDestinations:feedbackConnectionsCount:)()
{
  unsigned int v0;
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  sub_1D42CB740();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  sub_1D4519BC4();
  sub_1D44A3E1C();
  MEMORY[0x1E0C80A78](v6);
  sub_1D43479B4();
  sub_1D451A7A0();
  sub_1D4519B10();
  swift_bridgeObjectRelease();
  sub_1D451A7A0();
  v7 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v8 = v1;
    sub_1D44A3CAC();
    v9 = v1;
    do
    {
      v10 = sub_1D451A7A0();
      v12 = v11;
      v13 = *(_QWORD *)(v22 + 16);
      if (v13 >= *(_QWORD *)(v22 + 24) >> 1)
        sub_1D4442C54();
      *(_QWORD *)(v22 + 16) = v13 + 1;
      v14 = v22 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v10;
      *(_QWORD *)(v14 + 40) = v12;
      v5 += 8;
      --v9;
    }
    while (v9);
    sub_1D44A3CAC();
    v7 = v22;
    do
    {
      v15 = sub_1D451A7A0();
      v17 = v16;
      v18 = *(_QWORD *)(v22 + 16);
      if (v18 >= *(_QWORD *)(v22 + 24) >> 1)
        sub_1D4442C54();
      *(_QWORD *)(v22 + 16) = v18 + 1;
      v19 = v22 + 16 * v18;
      *(_QWORD *)(v19 + 32) = v15;
      *(_QWORD *)(v19 + 40) = v17;
      v3 += 8;
      --v8;
    }
    while (v8);
    v20 = v22;
  }
  else
  {
    v20 = MEMORY[0x1E0DEE9D8];
  }
  sub_1D449592C(v20, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D4496F2C();
  sub_1D44A3B8C();
  sub_1D42B7204();
  sub_1D42BE8B4();
  return 0;
}

void sub_1D4496F2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t inited;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  _BYTE *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  _QWORD v58[11];

  sub_1D42BE910();
  v55 = v3;
  v56 = (char *)v2;
  v57 = v4;
  v53 = v5;
  v54 = (char *)v6;
  v8 = v7;
  sub_1D42B28FC(qword_1EFE47450);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  sub_1D438E8B8();
  v10 = sub_1D4519BC4();
  sub_1D437EDFC();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v49 - v16;
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v49 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v49 - v21;
  sub_1D4519B64();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v1, 0, 1, v10);
  sub_1D4519AF8();
  sub_1D44A032C(v1, qword_1EFE47450);
  sub_1D436BB64();
  if (v0)
  {
    sub_1D44A3CD8((uint64_t)v22);
  }
  else
  {
    v24 = v23;
    v56 = v14;
    v57 = v8;
    type metadata accessor for E5RTExecutionStream();
    *(_QWORD *)(swift_initStackObject() + 16) = v24;
    sub_1D4519AC8();
    sub_1D4519B88();
    sub_1D44A3CD8((uint64_t)v20);
    v25 = sub_1D436BC04();
    type metadata accessor for E5RTExecutionStreamOperation();
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 16) = v25;
    sub_1D436D938(inited);
    sub_1D436BDB0(inited);
    sub_1D436C124(v25);
    v28 = sub_1D436C170(v27);
    v29 = v55;
    sub_1D42CB7F8();
    sub_1D4495220((uint64_t)v28, v29);
    v31 = sub_1D4345FE0(v30);
    v33 = v32;
    v52 = v31;
    sub_1D42D3258();
    sub_1D436C0BC(v25);
    v35 = sub_1D436C108(v34);
    v36 = v55;
    sub_1D42CB7F8();
    sub_1D44953F4((uint64_t)v35, v36);
    v38 = sub_1D4345FE0(v37);
    v50 = v39;
    v51 = v38;
    sub_1D42D3258();
    sub_1D42B28FC(&qword_1EFE54F00);
    v40 = sub_1D42B6F40();
    *(_OWORD *)(v40 + 16) = xmmword_1D45276D0;
    *(_QWORD *)(v40 + 32) = 0;
    *(_QWORD *)(v40 + 40) = 0;
    *(_QWORD *)(v40 + 48) = 0;
    *(_QWORD *)(v40 + 56) = 0x80000000;
    *(_QWORD *)(v40 + 64) = 0;
    *(_QWORD *)(v40 + 72) = 0;
    *(_DWORD *)(v40 + 80) = 0;
    *(_QWORD *)(v40 + 88) = 1;
    *(_QWORD *)(v40 + 96) = 0;
    *(_QWORD *)(v40 + 104) = 0;
    *(_QWORD *)(v40 + 112) = 0x80000000;
    *(_QWORD *)(v40 + 120) = 0;
    *(_QWORD *)(v40 + 128) = 0;
    *(_DWORD *)(v40 + 136) = 0;
    v41 = (uint64_t)v54;
    *(_QWORD *)(v40 + 144) = v53;
    *(_QWORD *)(v40 + 152) = v41;
    *(_OWORD *)(v40 + 160) = xmmword_1D45495B0;
    *(_QWORD *)(v40 + 176) = 0;
    *(_QWORD *)(v40 + 184) = 0;
    *(_DWORD *)(v40 + 192) = 0;
    *(_QWORD *)(v40 + 200) = 6;
    *(_QWORD *)(v40 + 208) = 0;
    *(_QWORD *)(v40 + 216) = 0;
    *(_QWORD *)(v40 + 224) = 0x80000000;
    *(_QWORD *)(v40 + 232) = 0;
    *(_QWORD *)(v40 + 240) = 0;
    *(_DWORD *)(v40 + 248) = 0;
    *(_QWORD *)(v40 + 256) = v52;
    *(_QWORD *)(v40 + 264) = v33;
    *(_OWORD *)(v40 + 272) = xmmword_1D45495C0;
    *(_DWORD *)(v40 + 304) = 0;
    *(_QWORD *)(v40 + 288) = 0;
    *(_QWORD *)(v40 + 296) = 0;
    v54 = v22;
    *(_QWORD *)(v40 + 312) = sub_1D4519B94();
    *(_QWORD *)(v40 + 320) = v42;
    *(_QWORD *)(v40 + 328) = v55;
    *(_QWORD *)(v40 + 336) = 0x20000000;
    *(_QWORD *)(v40 + 344) = 0;
    *(_QWORD *)(v40 + 352) = 0;
    *(_DWORD *)(v40 + 360) = 0;
    v43 = v50;
    *(_QWORD *)(v40 + 368) = v51;
    *(_QWORD *)(v40 + 376) = v43;
    *(_OWORD *)(v40 + 384) = xmmword_1D45495D0;
    *(_QWORD *)(v40 + 400) = 0;
    *(_QWORD *)(v40 + 408) = 0;
    *(_DWORD *)(v40 + 416) = 0;
    swift_bridgeObjectRetain();
    sub_1D4519B64();
    v44 = sub_1D4448FD4();
    sub_1D44A3CD8((uint64_t)v17);
    if ((v44 & 1) != 0)
    {
      v58[3] = &unk_1E97A6460;
      v58[4] = sub_1D44A039C();
      v58[0] = v40;
      swift_bridgeObjectRetain();
      v46 = sub_1D44C3224(v58);
      v48 = v47;
      sub_1D42B5400((uint64_t)v58);
      sub_1D44490D0(1, (uint64_t)v56);
      sub_1D44A3CD8((uint64_t)v56);
      sub_1D44A3F40();
      sub_1D4519C78();
      sub_1D42B5420(v46, v48);
    }
    else
    {
      sub_1D44A0360();
      sub_1D42B6D0C();
      *v45 = 2;
      sub_1D4312028();
    }
    sub_1D42BE998();
    sub_1D43070B8();
    sub_1D44A3CD8((uint64_t)v54);
    sub_1D42D3258();
  }
  sub_1D42BE844();
}

uint64_t sub_1D4497430()
{
  sub_1D44A2D30();
  return sub_1D451BA3C();
}

uint64_t sub_1D4497458()
{
  sub_1D44A2D30();
  return sub_1D451BA48();
}

void sub_1D4497480(uint64_t a1)
{
  sub_1D4497898(a1);
}

void sub_1D4497494()
{
  sub_1D4498530();
}

void sub_1D44974C0()
{
  sub_1D42F2AC8();
}

uint64_t sub_1D44974D4()
{
  sub_1D44A2BBC();
  return sub_1D451BA3C();
}

uint64_t sub_1D44974FC()
{
  sub_1D44A2BBC();
  return sub_1D451BA48();
}

void sub_1D4497524()
{
  sub_1D4498530();
}

uint64_t sub_1D4497550()
{
  sub_1D44A2CF4();
  return sub_1D451BA3C();
}

uint64_t sub_1D4497578()
{
  sub_1D44A2CF4();
  return sub_1D451BA48();
}

void sub_1D44975A0()
{
  sub_1D4498530();
}

uint64_t sub_1D44975CC(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _OWORD v8[3];
  int v9;
  _OWORD v10[3];
  int v11;

  v2 = *(_OWORD *)(a1 + 16);
  v10[0] = *(_OWORD *)a1;
  v10[1] = v2;
  v10[2] = *(_OWORD *)(a1 + 32);
  v11 = *(_DWORD *)(a1 + 48);
  v3 = *(_OWORD *)(a2 + 16);
  v8[0] = *(_OWORD *)a2;
  v8[1] = v3;
  v8[2] = *(_OWORD *)(a2 + 32);
  v9 = *(_DWORD *)(a2 + 48);
  v4 = sub_1D42D4D98((uint64_t)v10);
  v5 = sub_1D42D4D98((uint64_t)v8);
  v7 = sub_1D4305790(v4, v5);
  sub_1D42B7204();
  sub_1D42BE8B4();
  return v7 & 1;
}

uint64_t sub_1D4497680()
{
  uint64_t v0;
  __int128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[48];
  _OWORD v7[3];
  int v8;

  v1 = *(_OWORD *)(v0 + 16);
  v7[0] = *(_OWORD *)v0;
  v7[1] = v1;
  v7[2] = *(_OWORD *)(v0 + 32);
  v8 = *(_DWORD *)(v0 + 48);
  v2 = sub_1D42D4D98((uint64_t)v7);
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return swift_bridgeObjectRelease();
  v4 = v2 + 32;
  sub_1D42DCE84();
  do
  {
    sub_1D42D6F5C(v4, (uint64_t)v6);
    sub_1D451B3AC();
    sub_1D42D6F98((uint64_t)v6);
    v4 += 40;
    --v3;
  }
  while (v3);
  return swift_bridgeObjectRelease_n();
}

void sub_1D449776C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  char v10;
  __int128 v11;
  uint64_t v12;

  sub_1D4496828(a1);
  sub_1D42B5400((uint64_t)a1);
  if (!v2)
  {
    *(_DWORD *)a2 = v5;
    *(_DWORD *)(a2 + 4) = v6;
    *(_QWORD *)(a2 + 8) = v7;
    *(_DWORD *)(a2 + 16) = v8;
    *(_DWORD *)(a2 + 20) = v9;
    *(_BYTE *)(a2 + 24) = v10;
    *(_OWORD *)(a2 + 28) = v11;
    *(_QWORD *)(a2 + 44) = v12;
  }
  sub_1D42EA500();
}

void sub_1D44977F4(_QWORD *a1)
{
  uint64_t v1;
  __int128 v2;
  _OWORD v3[3];
  int v4;

  v2 = *(_OWORD *)(v1 + 16);
  v3[0] = *(_OWORD *)v1;
  v3[1] = v2;
  v3[2] = *(_OWORD *)(v1 + 32);
  v4 = *(_DWORD *)(v1 + 48);
  sub_1D4496C00((uint64_t)v3, a1);
  sub_1D4334190();
}

uint64_t sub_1D449782C()
{
  uint64_t v0;
  __int128 v1;
  _OWORD v3[3];
  int v4;

  sub_1D42BE9A8();
  v1 = *(_OWORD *)(v0 + 16);
  v3[0] = *(_OWORD *)v0;
  v3[1] = v1;
  v3[2] = *(_OWORD *)(v0 + 32);
  v4 = *(_DWORD *)(v0 + 48);
  sub_1D42D518C((uint64_t)v3);
  return sub_1D42CB230();
}

void sub_1D4497898(uint64_t a1)
{
  sub_1D44A3BAC(a1);
  sub_1D43AAC78();
}

uint64_t sub_1D44978B4(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x73676E697070616DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1D451B820();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1D4497938()
{
  return 0x73676E697070616DLL;
}

void sub_1D4497950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  sub_1D44A3C98();
  sub_1D44A3E60();
  sub_1D42B28FC(&qword_1EFE554D0);
  sub_1D42F29C8();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D44A3C78();
  sub_1D44A2AC0();
  sub_1D44A3BC4();
  v6 = v0;
  sub_1D42B28FC((uint64_t *)&unk_1EFE472F0);
  sub_1D44A2BF8((uint64_t)&unk_1EFE554C8);
  sub_1D44A3AAC();
  sub_1D4307058((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1D4472498();
}

void sub_1D4497A08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  sub_1D44A3C98();
  sub_1D44A3DC4();
  sub_1D42B28FC(&qword_1EFE55460);
  sub_1D42F29C8();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D44A39D0();
  sub_1D44A2AC0();
  sub_1D44A399C();
  if (!v0)
  {
    sub_1D42B28FC((uint64_t *)&unk_1EFE472F0);
    sub_1D44A2BF8((uint64_t)&unk_1EFE55458);
    sub_1D44A3A60();
    sub_1D4307058((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  sub_1D42BE944();
  sub_1D44A3DB8();
  sub_1D4472498();
}

uint64_t sub_1D4497AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  sub_1D44A3ED0();
  v6 = v5;
  sub_1D44A3F9C();
  sub_1D4406CEC();
  sub_1D42B7204();
  sub_1D42CB7B8();
  sub_1D4333DCC(v6, a4);
  return sub_1D42CB514();
}

void sub_1D4497B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v5;
  uint64_t v6;
  uint64_t v7;

  v5 = a1 == a4 && a2 == a5;
  if (v5 || (sub_1D42F1F04() & 1) != 0)
  {
    v6 = sub_1D437EC8C();
    sub_1D432F2E8(v6, v7);
  }
  else
  {
    sub_1D42B6E24();
  }
}

uint64_t sub_1D4497B6C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1752457584 && a2 == 0xE400000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D4558930)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D4497C48(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000013;
  else
    return 1752457584;
}

void sub_1D4497C7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_1D42BE910();
  v4 = v3;
  sub_1D42B28FC(&qword_1EFE554C0);
  sub_1D437EDFC();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42CB18C();
  sub_1D42B5528(v4, v4[3]);
  sub_1D44A2A84();
  sub_1D451BA24();
  sub_1D451B724();
  if (!v0)
  {
    sub_1D42B28FC((uint64_t *)&unk_1EFE472F0);
    sub_1D44A2BF8((uint64_t)&unk_1EFE554C8);
    sub_1D451B760();
  }
  sub_1D42F1FA0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_1D42BE844();
}

void sub_1D4497DA8()
{
  uint64_t v0;
  _BYTE v1[72];

  sub_1D44A3C54();
  sub_1D42BE9A8();
  sub_1D42CB6CC();
  sub_1D4406CEC();
  sub_1D42B7204();
  sub_1D42CB7B8();
  sub_1D4333DCC((uint64_t)v1, v0);
  sub_1D42BE8B4();
  sub_1D42CB230();
  sub_1D42CB708();
}

uint64_t sub_1D4497DF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D44A3C98();
  v2 = sub_1D42B28FC(&qword_1EFE55448);
  MEMORY[0x1E0C80A78](v2);
  sub_1D44A39D0();
  sub_1D44A2A84();
  sub_1D451BA0C();
  if (v0)
  {
    sub_1D42BE944();
  }
  else
  {
    v1 = sub_1D451B64C();
    sub_1D42B28FC((uint64_t *)&unk_1EFE472F0);
    sub_1D44A2BF8((uint64_t)&unk_1EFE55458);
    sub_1D438C74C();
    sub_1D451B688();
    sub_1D42CFC04();
    sub_1D42CB6CC();
    sub_1D42BE944();
    sub_1D42B7204();
    sub_1D42D3258();
  }
  return v1;
}

uint64_t sub_1D4497F78()
{
  sub_1D44A3C54();
  sub_1D44A3F9C();
  sub_1D438C720();
  return sub_1D42CB514();
}

void sub_1D4497FA4(uint64_t a1, uint64_t a2)
{
  if (a1 == 7955819 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D42F1F04();
    sub_1D42BE8B4();
  }
  sub_1D42B6E24();
}

uint64_t sub_1D449800C()
{
  return 7955819;
}

void sub_1D449801C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  void (*v3)(void);
  _QWORD *v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  sub_1D42BE910();
  v3 = v2;
  v5 = v4;
  v7 = sub_1D42B28FC(v6);
  sub_1D437EDFC();
  MEMORY[0x1E0C80A78](v8);
  sub_1D438E8B8();
  sub_1D42B5528(v5, v5[3]);
  v3();
  sub_1D451BA24();
  sub_1D451B724();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v7);
  sub_1D42BE844();
}

void sub_1D44980E0()
{
  sub_1D42BE9A8();
  sub_1D42CB7B8();
  sub_1D438C720();
  sub_1D42BE8B4();
  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t sub_1D4498118()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  void (*v3)(void);
  _QWORD *v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;

  sub_1D42BE910();
  v3 = v2;
  v5 = v4;
  v11 = *(_QWORD *)(sub_1D42B28FC(v6) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42F1ED4();
  v8 = sub_1D42B5528(v5, v5[3]);
  v3();
  v9 = (uint64_t)v8;
  sub_1D451BA0C();
  if (!v0)
  {
    v9 = sub_1D451B64C();
    sub_1D4307058(v1, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  }
  sub_1D42BE944();
  return v9;
}

void sub_1D4498210()
{
  sub_1D451B964();
  sub_1D42F86C8();
  sub_1D42B6E24();
}

BOOL sub_1D4498238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1 == a3 && a2 == a4;
}

uint64_t sub_1D4498248(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x746E756F63 && a2 == 0xE500000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656469727473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D4498324(char a1)
{
  if ((a1 & 1) != 0)
    return 0x656469727473;
  else
    return 0x746E756F63;
}

void sub_1D4498354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_1D42BE910();
  v4 = v3;
  sub_1D42B28FC(&qword_1EFE554A8);
  sub_1D42CB4F8();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42D7108();
  sub_1D42B5528(v4, v4[3]);
  sub_1D44A29D0();
  sub_1D44A3D78();
  sub_1D4406CB8();
  if (!v0)
    sub_1D4406CB8();
  sub_1D42F1FA0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_1D42BE844();
}

void sub_1D4498418()
{
  sub_1D42BE9A8();
  sub_1D451B964();
  sub_1D42CB3DC();
  sub_1D42CB230();
  sub_1D42CB708();
}

void sub_1D4498454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  _BYTE v4[16];

  sub_1D44A3C98();
  sub_1D44A3DC4();
  sub_1D42B28FC(&qword_1EFE55418);
  sub_1D42F29C8();
  MEMORY[0x1E0C80A78](v1);
  v3 = &v4[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D44A39D0();
  sub_1D44A29D0();
  sub_1D44A399C();
  v4[15] = 0;
  sub_1D44A3DD0();
  v4[14] = 1;
  sub_1D44A3DD0();
  sub_1D4307058((uint64_t)v3, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_1D42BE944();
  sub_1D44A3DB8();
  sub_1D4472498();
}

void sub_1D4498530()
{
  void (*v0)(void);
  void (*v1)(void);
  _QWORD *v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;

  sub_1D42BE910();
  v1 = v0;
  v3 = v2;
  sub_1D42B28FC(v4);
  sub_1D42CB4F8();
  MEMORY[0x1E0C80A78](v5);
  sub_1D434799C();
  sub_1D42B5528(v3, v3[3]);
  v1();
  sub_1D44A3D78();
  sub_1D42F8674();
  sub_1D42BE844();
}

uint64_t sub_1D44985B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1D451B964();
  if (v3)
  {
    sub_1D42CB7B8();
    v5 = a2 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1D42CB9EC();
      sub_1D451A74C();
      swift_bridgeObjectRelease();
      v5 += 16;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D4498648(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x736C6562616CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1D451B820();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1D44986C4()
{
  return 0x736C6562616CLL;
}

void sub_1D44986D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  sub_1D44A3C98();
  sub_1D44A3E60();
  sub_1D42B28FC(&qword_1EFE55480);
  sub_1D42F29C8();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D44A3C78();
  sub_1D44A2994();
  sub_1D44A3BC4();
  v6 = v0;
  sub_1D42B28FC((uint64_t *)&unk_1EFE51A80);
  sub_1D44A2B38((uint64_t)qword_1EFE56410);
  sub_1D44A3AAC();
  sub_1D4307058((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1D4472498();
}

void sub_1D4498790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  sub_1D44A3C98();
  sub_1D44A3DC4();
  sub_1D42B28FC(&qword_1EFE55408);
  sub_1D42F29C8();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D44A39D0();
  sub_1D44A2994();
  sub_1D44A399C();
  if (!v0)
  {
    sub_1D42B28FC((uint64_t *)&unk_1EFE51A80);
    sub_1D44A2B38((uint64_t)&qword_1EFE4D3D0);
    sub_1D44A3A60();
    sub_1D4307058((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  sub_1D42BE944();
  sub_1D44A3DB8();
  sub_1D4472498();
}

uint64_t sub_1D4498860()
{
  sub_1D4326750();
  sub_1D42D60DC();
  sub_1D42F86C8();
  return sub_1D42CB514();
}

void sub_1D449889C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D42FE0C4(a1, a3);
  sub_1D42B6E24();
}

uint64_t sub_1D44988CC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6E69727065756C62 && a2 == 0xE900000000000074)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1D451B820();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1D449895C()
{
  return 0x6E69727065756C62;
}

void sub_1D4498978()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  sub_1D42BE910();
  v1 = v0;
  sub_1D42B28FC(&qword_1EFE55470);
  sub_1D42CB4F8();
  MEMORY[0x1E0C80A78](v2);
  sub_1D434799C();
  sub_1D42B5528(v1, v1[3]);
  sub_1D44A291C();
  sub_1D44A3D78();
  sub_1D44A2AFC();
  sub_1D451B760();
  sub_1D42F8674();
  sub_1D42BE844();
}

void sub_1D4498A34()
{
  sub_1D42BE9A8();
  sub_1D42CB7F8();
  sub_1D42D60DC();
  sub_1D42CB3DC();
  swift_bridgeObjectRelease();
  sub_1D42CB230();
  sub_1D42CB708();
}

void sub_1D4498A7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  sub_1D44A3C98();
  sub_1D44A3DC4();
  sub_1D42B28FC(&qword_1EFE553F0);
  sub_1D42F29C8();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D44A39D0();
  sub_1D44A291C();
  sub_1D44A399C();
  if (!v0)
  {
    sub_1D44A2958();
    sub_1D451B688();
    sub_1D4307058((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  sub_1D42BE944();
  sub_1D42CB9EC();
  sub_1D44A3DB8();
  sub_1D4472498();
}

void sub_1D4498B44()
{
  __int128 *v0;
  _QWORD v1[3];

  sub_1D449FF6C(v0, (uint64_t)v1);
  __asm { BR              X11 }
}

uint64_t sub_1D4498B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  sub_1D44A3A24(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  sub_1D451B964();
  return sub_1D42D518C((uint64_t)&v11);
}

void sub_1D4498D88(__int128 *a1)
{
  _QWORD v1[3];

  sub_1D449FF6C(a1, (uint64_t)v1);
  __asm { BR              X11 }
}

uint64_t sub_1D4498DD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _OWORD *v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v16;
  __int128 v17;
  int v18;
  _BYTE v19[72];
  __int128 v20;
  __int128 v21;
  int v22;

  *((_QWORD *)&v20 + 1) = a2 & 0xFFFFFFFF0FFFFFFFLL;
  v4 = v21;
  *(_DWORD *)(v3 - 64) = v22;
  v5 = v20;
  *v2 = *(_OWORD *)&v19[56];
  v2[1] = v5;
  v2[2] = v4;
  v6 = sub_1D44A3EC4(a1);
  if ((v18 & 0xF0000000) != 0)
  {
    v14 = 0;
  }
  else
  {
    sub_1D44A3A24(v6, v7, v8, v9, v10, v11, v12, v13, v16, v17);
    v14 = sub_1D44975CC(v3 - 112, (uint64_t)v19);
  }
  return v14 & 1;
}

uint64_t sub_1D4499128(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  char v13;

  v2 = a1 == 0x6B6E616265 && a2 == 0xE500000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D455AE80 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D4557C00 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D455AEA0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D455AEC0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D455AEE0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = a1 == 0x7379654B70616DLL && a2 == 0xE700000000000000;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 6;
    }
    else
    {
      v7 = a1 == 0x65646F4D74723565 && a2 == 0xE90000000000006CLL;
      if (v7 || (sub_1D451B820() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 7;
      }
      else
      {
        v8 = a1 == 0x654B7463656C6573 && a2 == 0xE900000000000079;
        if (v8 || (sub_1D451B820() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 8;
        }
        else
        {
          v9 = a1 == 0x654B6E6769737361 && a2 == 0xE900000000000079;
          if (v9 || (sub_1D451B820() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 9;
          }
          else
          {
            v10 = a1 == 0x6563696C73 && a2 == 0xE500000000000000;
            if (v10 || (sub_1D451B820() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 10;
            }
            else
            {
              v11 = a1 == 0x6E657474616C66 && a2 == 0xE700000000000000;
              if (v11 || (sub_1D451B820() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 11;
              }
              else
              {
                v12 = a1 == 0x667542656772656DLL && a2 == 0xEC00000073726566;
                if (v12 || (sub_1D451B820() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 12;
                }
                else if (a1 == 0xD000000000000011 && a2 == 0x80000001D455AF00 || (sub_1D451B820() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 13;
                }
                else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D455AF20)
                {
                  swift_bridgeObjectRelease();
                  return 14;
                }
                else
                {
                  v13 = sub_1D451B820();
                  swift_bridgeObjectRelease();
                  if ((v13 & 1) != 0)
                    return 14;
                  else
                    return 15;
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1D44996D4()
{
  return 15;
}

uint64_t sub_1D44996DC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D449970C + 4 * byte_1D45495F2[a1]))(0x6B6E616265, 0xE500000000000000);
}

unint64_t sub_1D449970C()
{
  return 0xD000000000000010;
}

void sub_1D4499854(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D42F1F04();
    sub_1D42BE8B4();
  }
  sub_1D42B6E24();
}

void sub_1D44998B4()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _DWORD v17[58];

  sub_1D42BE910();
  sub_1D42B28FC(&qword_1EFE550E8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v1);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE550F0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v2);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE550F8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v3);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE55100);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE55108);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE55110);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v6);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE55118);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE55120);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v8);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE55128);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE55130);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v10);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE55138);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v11);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE55140);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v12);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE55148);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v13);
  sub_1D42F1ED4();
  sub_1D42B28FC(&qword_1EFE55150);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v14);
  sub_1D42BE768();
  v15 = sub_1D42B28FC(&qword_1EFE55158);
  MEMORY[0x1E0C80A78](v15);
  sub_1D43479B4();
  sub_1D42B28FC(&qword_1EFE55160);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v16);
  sub_1D438E8B8();
  sub_1D44A3F4C();
  sub_1D451BA24();
  sub_1D449FF6C(v0, (uint64_t)v17);
  __asm { BR              X11 }
}

void sub_1D4499C2C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  *(_QWORD *)(v1 + 448) = a1 & 0xFFFFFFFF0FFFFFFFLL;
  v4 = *(_OWORD *)(v1 + 456);
  *(_DWORD *)(v3 - 208) = *(_DWORD *)(v1 + 472);
  v5 = *(_OWORD *)(v1 + 440);
  *(_OWORD *)(v3 - 256) = *(_OWORD *)(v1 + 424);
  *(_OWORD *)(v3 - 240) = v5;
  *(_OWORD *)(v3 - 224) = v4;
  *(_BYTE *)(v1 + 368) = 2;
  sub_1D44A0F4C();
  v7 = *(_QWORD *)(v1 + 352);
  v6 = *(_QWORD *)(v1 + 360);
  sub_1D437EC08();
  v8 = *(_OWORD *)(v3 - 240);
  *(_OWORD *)(v1 + 368) = *(_OWORD *)(v3 - 256);
  *(_OWORD *)(v1 + 384) = v8;
  *(_OWORD *)(v1 + 400) = *(_OWORD *)(v3 - 224);
  *(_DWORD *)(v1 + 416) = *(_DWORD *)(v3 - 208);
  sub_1D44A1384();
  v9 = *(_QWORD *)(v1 + 160);
  sub_1D44A3A80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 152) + 8))(v2, v9);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 336) + 8))(v7, v6);
  sub_1D42BE844();
}

void sub_1D449A2E8()
{
  sub_1D42BE9A8();
  sub_1D4498B44();
  sub_1D42CB230();
  sub_1D42BE978();
}

void sub_1D449A310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[2];
  uint64_t v88;
  _QWORD v89[2];
  _QWORD v90[2];
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  sub_1D42BE910();
  a19 = v23;
  a20 = v24;
  v92 = v20;
  v26 = v25;
  v90[0] = v27;
  v28 = sub_1D42B28FC(&qword_1EFE54F70);
  sub_1D42BA240(v28, (uint64_t)&a14);
  v89[1] = v29;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v30);
  sub_1D44A3D10(v31, v84);
  v32 = sub_1D42B28FC(&qword_1EFE54F78);
  sub_1D42BA240(v32, (uint64_t)&a13);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v33);
  sub_1D43C2368(v34, v85);
  v35 = sub_1D42B28FC(&qword_1EFE54F80);
  sub_1D42BA240(v35, (uint64_t)&a11);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v36);
  sub_1D42BE768();
  v88 = v37;
  v38 = sub_1D42B28FC(&qword_1EFE54F88);
  sub_1D42BA240(v38, (uint64_t)&a9);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v39);
  sub_1D441907C(v40, v86);
  v41 = sub_1D42B28FC(&qword_1EFE54F90);
  sub_1D42BA240(v41, (uint64_t)&v96);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v42);
  sub_1D42BE768();
  v91 = v43;
  v44 = sub_1D42B28FC(&qword_1EFE54F98);
  sub_1D42BA240(v44, (uint64_t)&v95);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v45);
  sub_1D42BE768();
  v90[1] = v46;
  v47 = sub_1D42B28FC(&qword_1EFE54FA0);
  sub_1D42BA240(v47, (uint64_t)&v94);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v48);
  sub_1D42BE768();
  v87[1] = v49;
  v50 = sub_1D42B28FC(&qword_1EFE54FA8);
  sub_1D42BA240(v50, (uint64_t)&v93);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v51);
  sub_1D42BE768();
  v87[0] = v52;
  v53 = sub_1D42B28FC(&qword_1EFE54FB0);
  sub_1D42BA240(v53, (uint64_t)&v92);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v54);
  sub_1D42BE768();
  v55 = sub_1D42B28FC(&qword_1EFE54FB8);
  sub_1D42BA240(v55, (uint64_t)&v91);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v56);
  sub_1D42BE768();
  v57 = sub_1D42B28FC(&qword_1EFE54FC0);
  sub_1D42BA240(v57, (uint64_t)v90);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v58);
  sub_1D42BE768();
  sub_1D42BA180(v59);
  v60 = sub_1D42B28FC(&qword_1EFE54FC8);
  sub_1D42BA240(v60, (uint64_t)v89);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v61);
  sub_1D42BE768();
  sub_1D42BA180(v62);
  v63 = sub_1D42B28FC(&qword_1EFE54FD0);
  sub_1D42BA240(v63, (uint64_t)&v88);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v64);
  sub_1D42BE768();
  sub_1D42BA180(v65);
  v66 = sub_1D42B28FC(&qword_1EFE54FD8);
  sub_1D42BA240(v66, (uint64_t)v87);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v67);
  sub_1D42BE768();
  sub_1D42BA180(v68);
  v69 = sub_1D42B28FC(&qword_1EFE54FE0);
  MEMORY[0x1E0C80A78](v69);
  sub_1D437EC98();
  v70 = sub_1D42B28FC(&qword_1EFE54FE8);
  sub_1D44A3E1C();
  MEMORY[0x1E0C80A78](v71);
  sub_1D42D7108();
  a10 = v26;
  sub_1D44A3F4C();
  v72 = v92;
  sub_1D451BA0C();
  if (!v72)
  {
    v92 = v21;
    v73 = sub_1D451B6D0();
    v74 = *(_QWORD *)(v73 + 16);
    if (v74)
    {
      v75 = *(unsigned __int8 *)(v73 + 32);
      sub_1D43B7948(1, v74, v73, v73 + 32, 0, (2 * v74) | 1);
      v77 = v76;
      v79 = v78;
      swift_bridgeObjectRelease();
      if (v77 == v79 >> 1)
        __asm { BR              X9 }
    }
    v80 = v92;
    v81 = sub_1D451B460();
    sub_1D42B6D0C();
    v83 = v82;
    sub_1D42B28FC(&qword_1EFE49ED0);
    *v83 = &unk_1E97A5AB0;
    sub_1D451B61C();
    sub_1D451B454();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v81 - 8) + 104))(v83, *MEMORY[0x1E0DEC450], v81);
    swift_willThrow();
    sub_1D4442D78();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v80, v70);
  }
  sub_1D42B5400(a10);
  sub_1D42BE844();
}

void sub_1D449A8D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 - 144) = 1;
  sub_1D44A0FC4();
  sub_1D44A38B4();
  if (!v2)
  {
    sub_1D44A1000();
    v6 = *(_QWORD *)(v5 - 496);
    sub_1D44A3918();
    sub_1D44A398C();
    sub_1D44A3904(v5 - 248);
    sub_1D4442D78();
    sub_1D44A38D0();
    sub_1D44A3970();
    sub_1D42B5400(*(_QWORD *)(v5 - 72));
    *(_QWORD *)v4 = 1;
    *(_OWORD *)(v4 + 8) = *(_OWORD *)(v5 - 160);
    *(_QWORD *)(v4 + 24) = v3;
    *(_QWORD *)(v4 + 32) = v0;
    *(_QWORD *)(v4 + 40) = v1;
    *(_DWORD *)(v4 + 48) = v6;
    JUMPOUT(0x1D449A8C4);
  }
  sub_1D4442D78();
  sub_1D44A3C40();
  JUMPOUT(0x1D449A8B8);
}

void sub_1D449A948()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;

  *(_BYTE *)(v2 - 144) = 2;
  sub_1D44A0F4C();
  sub_1D44A38B4();
  if (!v0)
  {
    sub_1D44A0F88();
    sub_1D44A3918();
    sub_1D44A398C();
    sub_1D44A3904(v2 - 232);
    sub_1D4442D78();
    sub_1D44A38D0();
    v3 = *(_QWORD *)(v2 - 144);
    *(_OWORD *)(v2 - 160) = *(_OWORD *)(v2 - 136);
    v4 = *(_QWORD *)(v2 - 112);
    v5 = *(_QWORD *)(v2 - 104);
    v6 = *(_DWORD *)(v2 - 96);
    v7 = *(unsigned __int8 *)(v2 - 120) | ((unint64_t)*(unsigned int *)(v2 - 116) << 32);
    sub_1D42B5400(*(_QWORD *)(v2 - 72));
    *(_QWORD *)v1 = v3;
    *(_OWORD *)(v1 + 8) = *(_OWORD *)(v2 - 160);
    *(_QWORD *)(v1 + 24) = v7;
    *(_QWORD *)(v1 + 32) = v4;
    *(_QWORD *)(v1 + 40) = v5;
    *(_DWORD *)(v1 + 48) = v6;
    JUMPOUT(0x1D449A8C4);
  }
  sub_1D4442D78();
  sub_1D44A3C40();
  JUMPOUT(0x1D449A8B8);
}

void sub_1D449A9D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 - 144) = 3;
  sub_1D44A0ED4();
  sub_1D44A38B4();
  if (!v2)
  {
    sub_1D44A0F10();
    v6 = *(_QWORD *)(v5 - 464);
    sub_1D44A3918();
    sub_1D44A398C();
    sub_1D44A3904(v5 - 216);
    sub_1D4442D78();
    sub_1D44A38D0();
    sub_1D44A3970();
    sub_1D42B5400(*(_QWORD *)(v5 - 72));
    *(_QWORD *)v4 = 2;
    *(_OWORD *)(v4 + 8) = *(_OWORD *)(v5 - 160);
    *(_QWORD *)(v4 + 24) = v3;
    *(_QWORD *)(v4 + 32) = v0;
    *(_QWORD *)(v4 + 40) = v1;
    *(_DWORD *)(v4 + 48) = v6;
    JUMPOUT(0x1D449A8C4);
  }
  sub_1D4442D78();
  sub_1D44A3C40();
  JUMPOUT(0x1D449A8B8);
}

void sub_1D449AA4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 - 144) = 4;
  sub_1D44A0E5C();
  sub_1D44A38B4();
  if (!v2)
  {
    sub_1D44A0E98();
    v6 = *(_QWORD *)(v5 - 448);
    sub_1D44A3918();
    sub_1D44A398C();
    sub_1D44A3904(v5 - 200);
    sub_1D4442D78();
    sub_1D44A38D0();
    sub_1D44A3970();
    sub_1D42B5400(*(_QWORD *)(v5 - 72));
    *(_QWORD *)v4 = 3;
    *(_OWORD *)(v4 + 8) = *(_OWORD *)(v5 - 160);
    *(_QWORD *)(v4 + 24) = v3;
    *(_QWORD *)(v4 + 32) = v0;
    *(_QWORD *)(v4 + 40) = v1;
    *(_DWORD *)(v4 + 48) = v6;
    JUMPOUT(0x1D449A8C4);
  }
  sub_1D4442D78();
  sub_1D44A3C40();
  JUMPOUT(0x1D449A8B8);
}

void sub_1D449AAC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 - 144) = 5;
  sub_1D44A0DE4();
  sub_1D44A38B4();
  if (!v2)
  {
    sub_1D44A0E20();
    v6 = *(_QWORD *)(v5 - 432);
    sub_1D44A3918();
    sub_1D44A398C();
    sub_1D44A3904(v5 - 184);
    sub_1D4442D78();
    sub_1D44A38D0();
    sub_1D44A3970();
    sub_1D42B5400(*(_QWORD *)(v5 - 72));
    *(_QWORD *)v4 = 4;
    *(_OWORD *)(v4 + 8) = *(_OWORD *)(v5 - 160);
    *(_QWORD *)(v4 + 24) = v3;
    *(_QWORD *)(v4 + 32) = v0;
    *(_QWORD *)(v4 + 40) = v1;
    *(_DWORD *)(v4 + 48) = v6;
    JUMPOUT(0x1D449A8C4);
  }
  sub_1D4442D78();
  sub_1D44A3C40();
  JUMPOUT(0x1D449A8B8);
}

void sub_1D449AB30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v4 - 144) = 6;
  sub_1D44A0D6C();
  v5 = *(_QWORD *)(v4 - 248);
  sub_1D44A38B4();
  if (!v2)
  {
    sub_1D44A0DA8();
    v6 = *(_QWORD *)(v4 - 416);
    sub_1D44A3918();
    sub_1D44A398C();
    sub_1D44A3904(v4 - 168);
    sub_1D4442D78();
    sub_1D44A38D0();
    sub_1D44A3D5C();
    sub_1D42B5400(*(_QWORD *)(v4 - 72));
    *(_QWORD *)v3 = v5;
    *(_OWORD *)(v3 + 8) = *(_OWORD *)(v4 - 160);
    *(_QWORD *)(v3 + 24) = 0x10000000;
    *(_QWORD *)(v3 + 32) = v0;
    *(_QWORD *)(v3 + 40) = v1;
    *(_DWORD *)(v3 + 48) = v6;
    JUMPOUT(0x1D449A8C4);
  }
  sub_1D4442D78();
  sub_1D44A3C40();
  JUMPOUT(0x1D449A8B8);
}

void sub_1D449ABA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 - 144) = 7;
  sub_1D44A0CF4();
  sub_1D44A38B4();
  if (!v0)
  {
    sub_1D44A0D30();
    sub_1D44A3918();
    sub_1D44A398C();
    sub_1D44A3904(v2 - 152);
    sub_1D4442D78();
    sub_1D44A38D0();
    v3 = *(_QWORD *)(v2 - 144);
    *(_OWORD *)(v2 - 160) = *(_OWORD *)(v2 - 136);
    sub_1D42B5400(*(_QWORD *)(v2 - 72));
    *(_QWORD *)v1 = v3;
    *(_OWORD *)(v1 + 8) = *(_OWORD *)(v2 - 160);
    *(_QWORD *)(v1 + 24) = 0x20000000;
    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    *(_DWORD *)(v1 + 48) = 0;
    JUMPOUT(0x1D449A8C4);
  }
  sub_1D4442D78();
  sub_1D44A3C40();
  JUMPOUT(0x1D449A8B8);
}

void sub_1D449AC2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  *(_BYTE *)(v4 - 144) = 8;
  sub_1D44A0C7C();
  v5 = *(_QWORD *)(v4 - 232);
  sub_1D44A38B4();
  if (!v2)
  {
    sub_1D44A0CB8();
    v6 = *(_QWORD *)(v4 - 384);
    sub_1D44A3918();
    sub_1D44A398C();
    sub_1D44A3904(v4 - 136);
    sub_1D4442D78();
    sub_1D44A38D0();
    sub_1D44A3A88(v7);
    sub_1D42B5400(*(_QWORD *)(v4 - 72));
    *(_QWORD *)v3 = v5;
    *(_OWORD *)(v3 + 8) = *(_OWORD *)(v4 - 160);
    *(_QWORD *)(v3 + 24) = 805306368;
    *(_QWORD *)(v3 + 32) = v0;
    *(_QWORD *)(v3 + 40) = v1;
    *(_DWORD *)(v3 + 48) = v6;
    JUMPOUT(0x1D449A8C4);
  }
  sub_1D4442D78();
  sub_1D44A3C40();
  JUMPOUT(0x1D449A8B8);
}

void sub_1D449ACA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;

  *(_BYTE *)(v4 - 144) = 9;
  sub_1D44A0C04();
  sub_1D44A38B4();
  if (!v2)
  {
    sub_1D44A0C40();
    v5 = *(_QWORD *)(v4 - 360);
    sub_1D44A3918();
    sub_1D44A398C();
    sub_1D44A3904(v4 - 112);
    sub_1D4442D78();
    sub_1D44A38D0();
    sub_1D44A3A88(v6);
    sub_1D42B5400(*(_QWORD *)(v4 - 72));
    *(_QWORD *)v3 = v0;
    *(_OWORD *)(v3 + 8) = *(_OWORD *)(v4 - 160);
    *(_QWORD *)(v3 + 24) = 0x40000000;
    *(_QWORD *)(v3 + 32) = v0;
    *(_QWORD *)(v3 + 40) = v1;
    *(_DWORD *)(v3 + 48) = v5;
    JUMPOUT(0x1D449A8C4);
  }
  sub_1D4442D78();
  sub_1D44A3C40();
  JUMPOUT(0x1D449A8B8);
}

void sub_1D449AD14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;

  *(_BYTE *)(v4 - 144) = 10;
  sub_1D44A0B8C();
  v5 = *(_QWORD *)(v4 - 520);
  sub_1D44A38E4();
  if (v1)
    JUMPOUT(0x1D449AD4CLL);
  sub_1D44A0BC8();
  v6 = *(_QWORD *)(v4 - 352);
  sub_1D44A3AA4();
  v7 = *(_QWORD *)(v4 - 512);
  sub_1D4307058(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 376) + 8));
  sub_1D4442D78();
  sub_1D44A38F4(*(uint64_t (**)(uint64_t, _QWORD))(v7 + 8));
  sub_1D44A3A88(v8);
  sub_1D42B5400(*(_QWORD *)(v4 - 72));
  *(_QWORD *)v2 = v5;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(v4 - 160);
  *(_QWORD *)(v2 + 24) = 1342177280;
  *(_QWORD *)(v2 + 32) = v0;
  *(_QWORD *)(v2 + 40) = v7;
  *(_DWORD *)(v2 + 48) = v6;
  JUMPOUT(0x1D449A8C4);
}

void sub_1D449AD5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);

  *(_BYTE *)(v5 - 144) = 11;
  sub_1D44A0B14();
  sub_1D44A38B4();
  if (!v1)
  {
    sub_1D44A0B50();
    sub_1D44A3AA4();
    sub_1D44A398C();
    v6 = sub_1D44A3F88();
    v7(v6);
    sub_1D4442D78();
    sub_1D44A38D0();
    sub_1D44A3970();
    sub_1D42B5400(*(_QWORD *)(v5 - 72));
    *(_QWORD *)v4 = 5;
    *(_OWORD *)(v4 + 8) = *(_OWORD *)(v5 - 160);
    *(_QWORD *)(v4 + 24) = v3;
    *(_QWORD *)(v4 + 32) = v0;
    *(_QWORD *)(v4 + 40) = v2;
    *(_DWORD *)(v4 + 48) = v2;
    JUMPOUT(0x1D449A8C4);
  }
  sub_1D4442D78();
  sub_1D44A3C40();
  JUMPOUT(0x1D449A8B8);
}

void sub_1D449ADC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 - 144) = 12;
  sub_1D44A0A9C();
  sub_1D44A38B4();
  if (!v2)
  {
    sub_1D44A0AD8();
    v6 = *(_QWORD *)(v5 - 320);
    sub_1D44A3918();
    sub_1D44A398C();
    sub_1D44A3904(v5 - 72);
    sub_1D4442D78();
    sub_1D44A38D0();
    sub_1D44A3970();
    sub_1D42B5400(*(_QWORD *)(v5 - 72));
    *(_QWORD *)v4 = 6;
    *(_OWORD *)(v4 + 8) = *(_OWORD *)(v5 - 160);
    *(_QWORD *)(v4 + 24) = v3;
    *(_QWORD *)(v4 + 32) = v0;
    *(_QWORD *)(v4 + 40) = v1;
    *(_DWORD *)(v4 + 48) = v6;
    JUMPOUT(0x1D449A8C4);
  }
  sub_1D4442D78();
  sub_1D44A3C40();
  JUMPOUT(0x1D449A8B8);
}

void sub_1D449AE34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v4 - 144) = 13;
  sub_1D44A0A24();
  v5 = *(_QWORD *)(v4 - 216);
  sub_1D44A38B4();
  if (!v2)
  {
    sub_1D44A0A60();
    v6 = *(_QWORD *)(v4 - 304);
    sub_1D44A3918();
    sub_1D44A398C();
    sub_1D44A3904(v4 - 56);
    sub_1D4442D78();
    sub_1D44A38D0();
    sub_1D44A3D5C();
    sub_1D42B5400(*(_QWORD *)(v4 - 72));
    *(_QWORD *)v3 = v5;
    *(_OWORD *)(v3 + 8) = *(_OWORD *)(v4 - 160);
    *(_QWORD *)(v3 + 24) = 1610612736;
    *(_QWORD *)(v3 + 32) = v0;
    *(_QWORD *)(v3 + 40) = v1;
    *(_DWORD *)(v3 + 48) = v6;
    JUMPOUT(0x1D449A8C4);
  }
  sub_1D4442D78();
  sub_1D44A3C40();
  JUMPOUT(0x1D449A8B8);
}

void sub_1D449AEBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;

  *(_BYTE *)(v2 - 144) = 14;
  sub_1D44A09AC();
  v3 = *(_QWORD *)(v2 - 208);
  sub_1D44A38B4();
  if (v0)
    JUMPOUT(0x1D449AEECLL);
  sub_1D44A09E8();
  sub_1D44A3AA4();
  sub_1D44A398C();
  sub_1D4307058(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1D4442D78();
  sub_1D44A38D0();
  sub_1D44A3A88(v4);
  JUMPOUT(0x1D449B040);
}

uint64_t sub_1D449B064()
{
  void (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  sub_1D44A3C54();
  sub_1D4326750();
  v0(v2, v1);
  return sub_1D42CB514();
}

uint64_t sub_1D449B098(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x736567617473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1D451B820();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1D449B114()
{
  return 0x736567617473;
}

void sub_1D449B128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  sub_1D44A3C98();
  sub_1D44A3E60();
  sub_1D42B28FC(&qword_1EFE54F58);
  sub_1D42F29C8();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D44A3C78();
  sub_1D44A0834();
  sub_1D44A3BC4();
  v6 = v0;
  sub_1D42B28FC(&qword_1EFE54F40);
  sub_1D44A08AC((uint64_t)&unk_1EFE54F60);
  sub_1D44A3AAC();
  sub_1D4307058((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1D4472498();
}

void sub_1D449B1E0()
{
  uint64_t v0;

  sub_1D42BE9A8();
  v0 = sub_1D42CB6CC();
  sub_1D44A3E90(v0);
  sub_1D42B7204();
  sub_1D42CB230();
  sub_1D42BE978();
}

void sub_1D449B214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  sub_1D44A3C98();
  sub_1D44A3DC4();
  sub_1D42B28FC(&qword_1EFE54F30);
  sub_1D42F29C8();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D44A39D0();
  sub_1D44A0834();
  sub_1D44A399C();
  if (!v0)
  {
    sub_1D42B28FC(&qword_1EFE54F40);
    sub_1D44A08AC((uint64_t)&unk_1EFE54F48);
    sub_1D44A3A60();
    sub_1D4307058((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  sub_1D42BE944();
  sub_1D44A3DB8();
  sub_1D4472498();
}

double sub_1D449B2E4@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  int v8;

  sub_1D449776C(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(_DWORD *)(a2 + 48) = v8;
  }
  return result;
}

void sub_1D449B330(_QWORD *a1)
{
  sub_1D44977F4(a1);
}

uint64_t sub_1D449B34C()
{
  uint64_t v0;
  __int128 v1;
  _OWORD v3[3];
  int v4;

  v1 = *(_OWORD *)(v0 + 16);
  v3[0] = *(_OWORD *)v0;
  v3[1] = v1;
  v3[2] = *(_OWORD *)(v0 + 32);
  v4 = *(_DWORD *)(v0 + 48);
  sub_1D451B958();
  sub_1D42D518C((uint64_t)v3);
  return sub_1D451B994();
}

uint64_t sub_1D449B3D8()
{
  sub_1D44A2CB8();
  return sub_1D451BA3C();
}

uint64_t sub_1D449B400()
{
  sub_1D44A2CB8();
  return sub_1D451BA48();
}

void sub_1D449B428()
{
  sub_1D4498530();
}

uint64_t sub_1D449B454()
{
  sub_1D44A2C7C();
  return sub_1D451BA3C();
}

uint64_t sub_1D449B47C()
{
  sub_1D44A2C7C();
  return sub_1D451BA48();
}

void sub_1D449B4A4()
{
  sub_1D4498530();
}

uint64_t sub_1D449B4D0()
{
  sub_1D44A2C40();
  return sub_1D451BA3C();
}

uint64_t sub_1D449B4F8()
{
  sub_1D44A2C40();
  return sub_1D451BA48();
}

void sub_1D449B520()
{
  sub_1D4498530();
}

uint64_t sub_1D449B550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D44978B4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D449B578()
{
  sub_1D44A2AC0();
  return sub_1D451BA3C();
}

uint64_t sub_1D449B5A0()
{
  sub_1D44A2AC0();
  return sub_1D451BA48();
}

void sub_1D449B5C8(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D4497A08();
  if (!v1)
    *a1 = v3;
}

void sub_1D449B5F0()
{
  sub_1D4497950();
}

void sub_1D449B608()
{
  sub_1D449B1E0();
}

uint64_t sub_1D449B628()
{
  return sub_1D449B064();
}

void sub_1D449B648()
{
  sub_1D449C5CC();
}

uint64_t sub_1D449B654(_QWORD *a1, _QWORD *a2)
{
  return sub_1D44978B0(*a1, *a2);
}

uint64_t sub_1D449B660()
{
  char *v0;

  return sub_1D4497C48(*v0);
}

uint64_t sub_1D449B668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D4497B6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D449B68C()
{
  sub_1D44A2A84();
  return sub_1D451BA3C();
}

uint64_t sub_1D449B6B4()
{
  sub_1D44A2A84();
  return sub_1D451BA48();
}

uint64_t sub_1D449B6DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = sub_1D4497DF4();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
    a1[2] = v5;
  }
  return result;
}

void sub_1D449B708()
{
  sub_1D4497C7C();
}

void sub_1D449B724()
{
  sub_1D4497DA8();
}

uint64_t sub_1D449B730(uint64_t a1)
{
  uint64_t *v1;

  return sub_1D4497AD8(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1D449B73C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 16);
  sub_1D451B958();
  swift_bridgeObjectRetain();
  sub_1D451A74C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1D4333DCC((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_1D451B994();
}

void sub_1D449B7B8(uint64_t *a1, uint64_t *a2)
{
  sub_1D4497B20(*a1, a1[1], a1[2], *a2, a2[1]);
}

uint64_t sub_1D449B7D8()
{
  sub_1D44A2A48();
  return sub_1D451BA3C();
}

uint64_t sub_1D449B800()
{
  sub_1D44A2A48();
  return sub_1D451BA48();
}

void sub_1D449B828(uint64_t *a1@<X8>)
{
  sub_1D449B92C(a1);
}

void sub_1D449B854()
{
  sub_1D449801C();
}

void sub_1D449B888(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_1D4497FA4(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_1D449B8B0()
{
  sub_1D44A2A0C();
  return sub_1D451BA3C();
}

uint64_t sub_1D449B8D8()
{
  sub_1D44A2A0C();
  return sub_1D451BA48();
}

void sub_1D449B900(uint64_t *a1@<X8>)
{
  sub_1D449B92C(a1);
}

void sub_1D449B92C(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1D4498118();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
  }
  sub_1D43AAC78();
}

void sub_1D449B95C()
{
  sub_1D449801C();
}

void sub_1D449B98C()
{
  sub_1D44980E0();
}

uint64_t sub_1D449B9A4()
{
  return sub_1D4497F78();
}

void sub_1D449B9BC()
{
  sub_1D434955C();
  sub_1D42CB6CC();
  sub_1D451A74C();
  sub_1D42B7204();
  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t sub_1D449B9F8(uint64_t *a1, uint64_t *a2)
{
  return sub_1D43120A0(*a1, a1[1], *a2, a2[1]) & 1;
}

uint64_t sub_1D449BA20()
{
  char *v0;

  return sub_1D4498324(*v0);
}

uint64_t sub_1D449BA28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D4498248(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D449BA4C()
{
  sub_1D44A29D0();
  return sub_1D451BA3C();
}

uint64_t sub_1D449BA74()
{
  sub_1D44A29D0();
  return sub_1D451BA48();
}

void sub_1D449BA9C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_1D4498454();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
  }
}

void sub_1D449BAC4()
{
  sub_1D4498354();
}

void sub_1D449BADC()
{
  sub_1D4498418();
}

void sub_1D449BAE4()
{
  sub_1D4498210();
}

BOOL sub_1D449BAEC(uint64_t *a1, uint64_t *a2)
{
  return sub_1D4498238(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_1D449BB00()
{
  sub_1D44A2B80();
  return sub_1D451BA3C();
}

uint64_t sub_1D449BB28()
{
  sub_1D44A2B80();
  return sub_1D451BA48();
}

