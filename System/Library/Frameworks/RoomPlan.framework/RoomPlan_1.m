uint64_t sub_2264A1CD8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2264A1CFC()
{
  uint64_t v0;

  return sub_2264E9FD0(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_2264A1D08()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t MTLSizeMake@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  a3[2] = 1;
  return result;
}

uint64_t storeEnumTagSinglePayload for RubberBandingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2264A1D94 + 4 * byte_226562B05[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2264A1DC8 + 4 * byte_226562B00[v4]))();
}

uint64_t sub_2264A1DC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264A1DD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2264A1DD8);
  return result;
}

uint64_t sub_2264A1DE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2264A1DECLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2264A1DF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264A1DF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RubberBandingType()
{
  return &type metadata for RubberBandingType;
}

unint64_t sub_2264A1E14@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_2264A1E90(*a1);
  *a2 = result;
  return result;
}

void sub_2264A1E3C(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

unint64_t sub_2264A1E4C()
{
  unint64_t result;

  result = qword_255844F70;
  if (!qword_255844F70)
  {
    result = MEMORY[0x22769A794](&unk_226562BCC, &type metadata for RubberBandingType);
    atomic_store(result, (unint64_t *)&qword_255844F70);
  }
  return result;
}

unint64_t sub_2264A1E90(unint64_t result)
{
  if (result >= 5)
    return 5;
  return result;
}

uint64_t sub_2264A1EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

id sub_2264A1EA8(void *a1, void *a2)
{
  uint64_t v2;
  id v5;
  id result;
  void *v7;
  void *v8;

  *(_QWORD *)(v2 + 32) = 0;
  *(CFTimeInterval *)(v2 + 48) = CACurrentMediaTime();
  *(_QWORD *)(v2 + 88) = 0;
  *(_QWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 72) = 0;
  *(_QWORD *)(v2 + 56) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v2 + 96) = 60;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectRetain();
  v5 = a2;
  objc_msgSend(v5, sel_setDevice_, a1);
  objc_msgSend(v5, sel_setPresentsWithTransaction_, 1);
  result = objc_msgSend(a1, sel_newCommandQueue);
  if (result)
  {
    v7 = result;
    *(_QWORD *)(v2 + 40) = result;
    swift_unknownObjectRetain();
    v8 = (void *)sub_22655CD64();
    objc_msgSend(v7, sel_setLabel_, v8);
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    return (id)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2264A1FB0()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  v1 = objc_msgSend((id)objc_opt_self(), sel_displayLinkWithTarget_selector_, v0, sel_fire);
  v2 = *(void **)(v0 + 32);
  *(_QWORD *)(v0 + 32) = v1;

  v3 = *(void **)(v0 + 32);
  if (v3)
  {
    objc_msgSend(v3, sel_setPreferredFramesPerSecond_, *(_QWORD *)(v0 + 96));
    v4 = *(void **)(v0 + 32);
    if (v4)
    {
      v5 = (void *)objc_opt_self();
      v6 = v4;
      v7 = objc_msgSend(v5, sel_mainRunLoop);
      objc_msgSend(v6, sel_addToRunLoop_forMode_, v7, *MEMORY[0x24BDBCA90]);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_2264A20E4()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  double v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  double v14;

  v1 = objc_msgSend(*(id *)(v0 + 40), sel_commandBuffer);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(*(id *)(v0 + 24), sel_nextDrawable);
    if (!v3)
    {
LABEL_19:
      swift_unknownObjectRelease();
      return;
    }
    v4 = v3;
    v5 = (void *)sub_22655CD64();
    objc_msgSend(v2, sel_setLabel_, v5);

    v6 = CACurrentMediaTime();
    v7 = *(_QWORD *)(v0 + 64);
    v8 = __OFADD__(v7, 1);
    v9 = v7 + 1;
    if (!v8)
    {
      v10 = *(double *)(v0 + 56);
      *(_QWORD *)(v0 + 64) = v9;
      v11 = v6 - *(double *)(v0 + 48);
      *(double *)(v0 + 72) = v11;
      *(double *)(v0 + 48) = v6;
      *(double *)(v0 + 56) = v11 + v10;
      if (v9 >= 60)
      {
        if (MEMORY[0x22769A944](v0 + 80))
        {
          sub_22655CF74();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        *(_QWORD *)(v0 + 56) = 0;
        *(_QWORD *)(v0 + 64) = 0;
      }
      v12 = MEMORY[0x22769A944](v0 + 80);
      if (v12)
      {
        if (*(_QWORD *)(v12 + OBJC_IVAR____TtC8RoomPlan11ARGlyphView_renderer))
        {
          swift_retain();
          sub_22654EC7C(v4);
          swift_unknownObjectRelease();
          swift_release();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
      v13 = MEMORY[0x22769A944](v0 + 80);
      if (v13)
      {
        if (*(_QWORD *)(v13 + OBJC_IVAR____TtC8RoomPlan11ARGlyphView_renderer))
        {
          v14 = *(double *)(*(_QWORD *)(v13 + OBJC_IVAR____TtC8RoomPlan11ARGlyphView_renderTimer) + 72);
          swift_retain();
          sub_22654E0D8(v4, v2, v14);
          swift_unknownObjectRelease();
          swift_release();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
      objc_msgSend(v2, sel_commit);
      objc_msgSend(v2, sel_waitUntilScheduled);
      objc_msgSend(v4, sel_present);
      swift_unknownObjectRelease();
      goto LABEL_19;
    }
    __break(1u);
  }
}

void *sub_2264A2314()
{
  uint64_t v0;
  void *result;

  result = *(void **)(v0 + 32);
  if (result)
  {
    objc_msgSend(result, sel_invalidate);
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    sub_22644F0C0(v0 + 80);
    return (void *)swift_deallocClassInstance();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for RenderTimer()
{
  return objc_opt_self();
}

void sub_2264A2390()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t *v10;
  char isUniquelyReferenced_nonNull_native;
  char v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8RoomPlan9Analytics_bOptInApple) == 1)
  {
    v1 = (void *)objc_opt_self();
    v2 = objc_msgSend(v1, sel_currentDevice);
    v3 = objc_msgSend(v2, sel_model);

    if (!v3)
    {
      sub_22655CD88();
      v3 = (id)sub_22655CD64();
      swift_bridgeObjectRelease();
    }
    v4 = objc_msgSend(v1, sel_currentDevice);
    v5 = objc_msgSend(v4, sel_systemName);

    if (!v5)
    {
      sub_22655CD88();
      v5 = (id)sub_22655CD64();
      swift_bridgeObjectRelease();
    }
    v6 = objc_msgSend(v1, sel_currentDevice);
    v7 = objc_msgSend(v6, sel_systemVersion);

    if (!v7)
    {
      sub_22655CD88();
      v7 = (id)sub_22655CD64();
      swift_bridgeObjectRelease();
    }
    v8 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v9 = objc_msgSend(v8, sel_bundleIdentifier);

    if (v9)
    {
      sub_22655CD88();

    }
    v10 = (uint64_t *)(v0 + OBJC_IVAR____TtC8RoomPlan9Analytics_roomPlanStats);
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *v10;
    *v10 = 0x8000000000000000;
    sub_2265235F4((uint64_t)v3, 0x6F4D656369766544, 0xEB000000006C6564, isUniquelyReferenced_nonNull_native);
    *v10 = v16;
    swift_bridgeObjectRelease();
    v12 = swift_isUniquelyReferenced_nonNull_native();
    v17 = *v10;
    *v10 = 0x8000000000000000;
    sub_2265235F4((uint64_t)v5, 0x656D614E534FLL, 0xE600000000000000, v12);
    *v10 = v17;
    swift_bridgeObjectRelease();
    v13 = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v10;
    *v10 = 0x8000000000000000;
    sub_2265235F4((uint64_t)v7, 0x6F6973726556534FLL, 0xE90000000000006ELL, v13);
    *v10 = v18;
    swift_bridgeObjectRelease();
    swift_endAccess();
    v14 = sub_22655CD64();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v15 = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v10;
    *v10 = 0x8000000000000000;
    sub_2265235F4(v14, 0x646E75426E69614DLL, 0xEC0000004449656CLL, v15);
    *v10 = v19;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
}

id sub_2264A26EC(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_22643F548(0, &qword_2558432B8);
    v4 = (void *)sub_22655CCBC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

id sub_2264A2828(uint64_t a1)
{
  return sub_2264A51E8(a1, type metadata accessor for Analytics);
}

uint64_t type metadata accessor for Analytics()
{
  return objc_opt_self();
}

id sub_2264A2864(uint64_t a1)
{
  return sub_2264A5390(a1, 0, type metadata accessor for AnalyticsOnline, &qword_25585AEE8);
}

uint64_t sub_2264A287C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  _QWORD *v4;
  uint64_t v5;
  void (*v6)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t result;
  uint64_t v16;
  _BYTE v17[24];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255841200);
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = (_QWORD *)(v0 + OBJC_IVAR____TtC8RoomPlan9Analytics_roomPlanStats);
  swift_beginAccess();
  *v4 = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRelease();
  v5 = sub_22655C0E0();
  v6 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v3, 1, 1, v5);
  v7 = v0 + OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_launchTimeStart;
  swift_beginAccess();
  sub_2264ABB74((uint64_t)v3, v7);
  swift_endAccess();
  v6(v3, 1, 1, v5);
  v8 = v0 + OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_onlineScanTimeStart;
  swift_beginAccess();
  sub_2264ABB74((uint64_t)v3, v8);
  swift_endAccess();
  v9 = (_QWORD *)(v0 + OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_arframeDeltaTimeArray);
  swift_beginAccess();
  v10 = MEMORY[0x24BEE4AF8];
  *v9 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  v11 = v0 + OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_arframeLastTimeInterval;
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  v12 = (_QWORD *)(v0 + OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_keyframeDeltaTimeArray);
  swift_beginAccess();
  *v12 = v10;
  swift_bridgeObjectRelease();
  v13 = v0 + OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_keyframeLastTimeInterval;
  *(_QWORD *)v13 = 0;
  *(_BYTE *)(v13 + 8) = 1;
  v14 = (_QWORD *)(v0 + OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_onlineFloorPlanUpdateDeltaTimeArray);
  swift_beginAccess();
  *v14 = v10;
  result = swift_bridgeObjectRelease();
  v16 = v0 + OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_onlineFloorPlanUpdateLastTimeInterval;
  *(_QWORD *)v16 = 0;
  *(_BYTE *)(v16 + 8) = 1;
  return result;
}

void sub_2264A2A88()
{
  sub_2264A2CB4((uint64_t)&OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_queue, (uint64_t)&unk_24EDE37C0, (uint64_t)sub_2264ABF70, (uint64_t)&block_descriptor_158);
}

uint64_t sub_2264A2AAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255841200);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2264A287C();
  sub_22655C0D4();
  v5 = sub_22655C0E0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 0, 1, v5);
  v6 = a1 + OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_launchTimeStart;
  swift_beginAccess();
  sub_2264ABB74((uint64_t)v4, v6);
  return swift_endAccess();
}

void sub_2264A2B6C(double a1)
{
  sub_2264AA82C(a1, (uint64_t)&OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_queue, (uint64_t)&unk_24EDE3770, (uint64_t)sub_2264ABF64, (uint64_t)&block_descriptor_152);
}

uint64_t sub_2264A2B90(uint64_t result, double a2)
{
  uint64_t v3;
  double v4;
  _QWORD **v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;

  v3 = result + OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_arframeLastTimeInterval;
  if ((*(_BYTE *)(result + OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_arframeLastTimeInterval + 8) & 1) == 0)
  {
    v4 = *(double *)v3;
    v5 = (_QWORD **)(result + OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_arframeDeltaTimeArray);
    swift_beginAccess();
    v6 = *v5;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v5 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_22648878C(0, v6[2] + 1, 1, v6);
      *v5 = v6;
    }
    v9 = v6[2];
    v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      v6 = sub_22648878C((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
      *v5 = v6;
    }
    v6[2] = v9 + 1;
    *(double *)&v6[v9 + 4] = a2 - v4;
    result = swift_endAccess();
  }
  *(double *)v3 = a2;
  *(_BYTE *)(v3 + 8) = 0;
  return result;
}

void sub_2264A2C90()
{
  sub_2264A2CB4((uint64_t)&OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_queue, (uint64_t)&unk_24EDE3720, (uint64_t)sub_2264ABF38, (uint64_t)&block_descriptor_146);
}

void sub_2264A2CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  id v16;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v7 = sub_22655CBB4();
  v17[0] = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22655CBFC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_BYTE *)v4 + OBJC_IVAR____TtC8RoomPlan9Analytics_bOptInApple) == 1)
  {
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = v4;
    aBlock[4] = a3;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2264FA450;
    aBlock[3] = a4;
    v15 = _Block_copy(aBlock);
    v16 = v4;
    sub_22655CBCC();
    v17[1] = MEMORY[0x24BEE4AF8];
    sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
    sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
    sub_22655D214();
    MEMORY[0x22769975C](0, v13, v9, v15);
    _Block_release(v15);
    (*(void (**)(char *, uint64_t))(v17[0] + 8))(v9, v7);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    swift_release();
  }
}

uint64_t sub_2264A2EA4(uint64_t a1)
{
  uint64_t result;
  double v3;
  double v4;
  uint64_t v5;
  double v6;
  _QWORD **v7;
  _QWORD *v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;

  result = sub_22655C098();
  v4 = v3;
  v5 = a1 + OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_keyframeLastTimeInterval;
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_keyframeLastTimeInterval + 8) & 1) == 0)
  {
    v6 = *(double *)v5;
    v7 = (_QWORD **)(a1 + OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_keyframeDeltaTimeArray);
    swift_beginAccess();
    v8 = *v7;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v7 = v8;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v8 = sub_22648878C(0, v8[2] + 1, 1, v8);
      *v7 = v8;
    }
    v11 = v8[2];
    v10 = v8[3];
    if (v11 >= v10 >> 1)
    {
      v8 = sub_22648878C((_QWORD *)(v10 > 1), v11 + 1, 1, v8);
      *v7 = v8;
    }
    v8[2] = v11 + 1;
    *(double *)&v8[v11 + 4] = v4 - v6;
    result = swift_endAccess();
  }
  *(double *)v5 = v4;
  *(_BYTE *)(v5 + 8) = 0;
  return result;
}

void sub_2264A2FAC()
{
  sub_2264A2CB4((uint64_t)&OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_queue, (uint64_t)&unk_24EDE36D0, (uint64_t)sub_2264ABF30, (uint64_t)&block_descriptor_140);
}

uint64_t sub_2264A2FD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  _QWORD **v20;
  _QWORD *v21;
  char v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  char isUniquelyReferenced_nonNull_native;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255841200);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v31 - v6;
  v8 = sub_22655C0E0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v31 - v13;
  sub_22655C098();
  v16 = v15;
  v17 = a1 + OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_onlineFloorPlanUpdateLastTimeInterval;
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_onlineFloorPlanUpdateLastTimeInterval + 8) & 1) != 0)
  {
    v18 = a1 + OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_launchTimeStart;
    swift_beginAccess();
    sub_22643D7A0(v18, (uint64_t)v7, &qword_255841200);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_22643D7E4((uint64_t)v7, &qword_255841200);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
      sub_22655C0D4();
      sub_22655C0A4();
      v25 = sub_22655CF68();
      v26 = (uint64_t *)(a1 + OBJC_IVAR____TtC8RoomPlan9Analytics_roomPlanStats);
      swift_beginAccess();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v32 = *v26;
      *v26 = 0x8000000000000000;
      sub_2265235F4(v25, 0x4C79636E6574614CLL, 0xED000068636E7561, isUniquelyReferenced_nonNull_native);
      *v26 = v32;
      swift_bridgeObjectRelease();
      swift_endAccess();
      v28 = *(void (**)(char *, uint64_t))(v9 + 8);
      v28(v11, v8);
      v28(v14, v8);
    }
    sub_22655C0D4();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v4, 0, 1, v8);
    v29 = a1 + OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_onlineScanTimeStart;
    swift_beginAccess();
    sub_2264ABB74((uint64_t)v4, v29);
  }
  else
  {
    v19 = *(double *)v17;
    v20 = (_QWORD **)(a1 + OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_onlineFloorPlanUpdateDeltaTimeArray);
    swift_beginAccess();
    v21 = *v20;
    v22 = swift_isUniquelyReferenced_nonNull_native();
    *v20 = v21;
    if ((v22 & 1) == 0)
    {
      v21 = sub_22648878C(0, v21[2] + 1, 1, v21);
      *v20 = v21;
    }
    v24 = v21[2];
    v23 = v21[3];
    if (v24 >= v23 >> 1)
    {
      v21 = sub_22648878C((_QWORD *)(v23 > 1), v24 + 1, 1, v21);
      *v20 = v21;
    }
    v21[2] = v24 + 1;
    *(double *)&v21[v24 + 4] = v16 - v19;
  }
  result = swift_endAccess();
  *(double *)v17 = v16;
  *(_BYTE *)(v17 + 8) = 0;
  return result;
}

void sub_2264A3328(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  void *v14;
  char *v15;
  _QWORD v16[2];
  _QWORD aBlock[6];

  v5 = sub_22655CBB4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22655CBFC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v2[OBJC_IVAR____TtC8RoomPlan9Analytics_bOptInApple] == 1)
  {
    v16[0] = *(_QWORD *)&v2[OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_queue];
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = v2;
    v13[3] = a1;
    v13[4] = a2;
    aBlock[4] = sub_2264ABEF4;
    aBlock[5] = v13;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2264FA450;
    aBlock[3] = &block_descriptor_134;
    v14 = _Block_copy(aBlock);
    v15 = v2;
    swift_bridgeObjectRetain();
    sub_22655CBCC();
    v16[1] = MEMORY[0x24BEE4AF8];
    sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
    sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
    sub_22655D214();
    MEMORY[0x22769975C](0, v12, v8, v14);
    _Block_release(v14);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    swift_release();
  }
}

void sub_2264A3530(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  char *v13;
  id v14;
  _QWORD v15[2];
  _QWORD aBlock[6];

  v3 = sub_22655CBB4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22655CBFC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v1[OBJC_IVAR____TtC8RoomPlan9Analytics_bOptInApple] == 1)
  {
    v15[0] = *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_queue];
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v1;
    *(_QWORD *)(v11 + 24) = a1;
    aBlock[4] = sub_2264ABEAC;
    aBlock[5] = v11;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2264FA450;
    aBlock[3] = &block_descriptor_128;
    v12 = _Block_copy(aBlock);
    v13 = v1;
    v14 = a1;
    sub_22655CBCC();
    v15[1] = MEMORY[0x24BEE4AF8];
    sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
    sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
    sub_22655D214();
    MEMORY[0x22769975C](0, v10, v6, v12);
    _Block_release(v12);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_release();
  }
}

uint64_t sub_2264A372C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  char isUniquelyReferenced_nonNull_native;
  void (*v18)(char *, uint64_t);
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double *v24;
  uint64_t v25;
  uint64_t v26;
  double *v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  double *v40;
  uint64_t v41;
  uint64_t v42;
  double *v43;
  double v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  double *v54;
  uint64_t v55;
  uint64_t v56;
  double *v57;
  double v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  id v63;
  unint64_t v64;
  uint64_t v65;
  char v66;
  id v67;
  unint64_t v68;
  uint64_t v69;
  char v70;
  id v71;
  unint64_t v72;
  uint64_t v73;
  char v74;
  id v75;
  unint64_t v76;
  uint64_t v77;
  char v78;
  id v79;
  unint64_t v80;
  uint64_t v81;
  char v82;
  id v83;
  unint64_t v84;
  uint64_t v85;
  char v86;
  id v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  void *v92;
  uint64_t v93;
  id v94;
  void *v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  unint64_t v104;
  uint64_t v105;
  _BOOL8 v106;
  uint64_t v107;
  char v108;
  unint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  _BOOL8 v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  uint64_t *v121;
  uint64_t v122;
  BOOL v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int64_t v132;
  uint64_t v133;
  uint64_t v134;
  int64_t v135;
  uint64_t v136;
  int64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  _QWORD *v142;
  char v143;
  unint64_t v144;
  uint64_t v145;
  _BOOL8 v146;
  uint64_t v147;
  char v148;
  unint64_t v149;
  char v150;
  _QWORD *v151;
  uint64_t *v152;
  uint64_t v153;
  uint64_t v154;
  id v155;
  void *v156;
  id v157;
  char v158;
  id v159;
  char v160;
  uint64_t result;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  int64_t v166;
  unint64_t v167;
  _QWORD *v168;
  _QWORD *v169;
  unint64_t v170;
  unint64_t v171;
  unint64_t v172;
  uint64_t v173;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255841200);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v162 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22655C0E0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v162 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v162 - v12;
  v14 = a1 + OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_onlineScanTimeStart;
  swift_beginAccess();
  sub_22643D7A0(v14, (uint64_t)v6, &qword_255841200);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_22643D7E4((uint64_t)v6, &qword_255841200);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
    sub_22655C0D4();
    sub_22655C0A4();
    v15 = sub_22655CF68();
    v16 = (uint64_t *)(a1 + OBJC_IVAR____TtC8RoomPlan9Analytics_roomPlanStats);
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v173 = *v16;
    *v16 = 0x8000000000000000;
    sub_2265235F4(v15, 0xD000000000000011, 0x800000022656DCA0, isUniquelyReferenced_nonNull_native);
    *v16 = v173;
    swift_bridgeObjectRelease();
    swift_endAccess();
    v18 = *(void (**)(char *, uint64_t))(v8 + 8);
    v18(v10, v7);
    v18(v13, v7);
  }
  v19 = (uint64_t *)(a1 + OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_arframeDeltaTimeArray);
  swift_beginAccess();
  v20 = *v19;
  v21 = *(_QWORD *)(*v19 + 16);
  if (v21)
  {
    if (v21 == 1)
    {
      v22 = 0;
      v23 = 0.0;
LABEL_11:
      v26 = v21 - v22;
      v27 = (double *)(v20 + 8 * v22 + 32);
      do
      {
        v28 = *v27++;
        v23 = v23 + v28;
        --v26;
      }
      while (v26);
      goto LABEL_13;
    }
    v22 = v21 & 0x7FFFFFFFFFFFFFFELL;
    v24 = (double *)(v20 + 40);
    v23 = 0.0;
    v25 = v21 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      v23 = v23 + *(v24 - 1) + *v24;
      v24 += 2;
      v25 -= 2;
    }
    while (v25);
    if (v21 != v22)
      goto LABEL_11;
  }
LABEL_13:
  v29 = 0xEA0000000000656DLL;
  v30 = sub_22655CFBC();
  v163 = a1;
  v31 = a1 + OBJC_IVAR____TtC8RoomPlan9Analytics_roomPlanStats;
  swift_beginAccess();
  v32 = swift_isUniquelyReferenced_nonNull_native();
  v172 = *(_QWORD *)v31;
  *(_QWORD *)v31 = 0x8000000000000000;
  sub_2265235F4(v30, 0x61724652416D754ELL, 0xEA0000000000656DLL, v32);
  *(_QWORD *)v31 = v172;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (v21)
  {
    v33 = sub_22655CF68();
    swift_beginAccess();
    v34 = swift_isUniquelyReferenced_nonNull_native();
    v172 = *(_QWORD *)v31;
    *(_QWORD *)v31 = 0x8000000000000000;
    sub_2265235F4(v33, 0xD000000000000011, 0x800000022656DC80, v34);
    *(_QWORD *)v31 = v172;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  v35 = (uint64_t *)(v163 + OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_keyframeDeltaTimeArray);
  swift_beginAccess();
  v36 = *v35;
  v37 = *(_QWORD *)(*v35 + 16);
  if (v37)
  {
    if (v37 == 1)
    {
      v38 = 0;
      v39 = 0.0;
LABEL_22:
      v42 = v37 - v38;
      v43 = (double *)(v36 + 8 * v38 + 32);
      do
      {
        v44 = *v43++;
        v39 = v39 + v44;
        --v42;
      }
      while (v42);
      goto LABEL_24;
    }
    v38 = v37 & 0x7FFFFFFFFFFFFFFELL;
    v40 = (double *)(v36 + 40);
    v39 = 0.0;
    v41 = v37 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      v39 = v39 + *(v40 - 1) + *v40;
      v40 += 2;
      v41 -= 2;
    }
    while (v41);
    if (v37 != v38)
      goto LABEL_22;
  }
LABEL_24:
  v45 = sub_22655CFBC();
  swift_beginAccess();
  v46 = swift_isUniquelyReferenced_nonNull_native();
  v170 = *(_QWORD *)v31;
  *(_QWORD *)v31 = 0x8000000000000000;
  sub_2265235F4(v45, 0x726679654B6D754ELL, 0xEB00000000656D61, v46);
  *(_QWORD *)v31 = v170;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (v37)
  {
    v47 = sub_22655CF68();
    swift_beginAccess();
    v48 = swift_isUniquelyReferenced_nonNull_native();
    v170 = *(_QWORD *)v31;
    *(_QWORD *)v31 = 0x8000000000000000;
    sub_2265235F4(v47, 0xD000000000000015, 0x800000022656DC60, v48);
    *(_QWORD *)v31 = v170;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  v49 = (uint64_t *)(v163 + OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_onlineFloorPlanUpdateDeltaTimeArray);
  swift_beginAccess();
  v50 = *v49;
  v51 = *(_QWORD *)(*v49 + 16);
  if (v51)
  {
    if (v51 == 1)
    {
      v52 = 0;
      v53 = 0.0;
LABEL_33:
      v56 = v51 - v52;
      v57 = (double *)(v50 + 8 * v52 + 32);
      do
      {
        v58 = *v57++;
        v53 = v53 + v58;
        --v56;
      }
      while (v56);
      goto LABEL_35;
    }
    v52 = v51 & 0x7FFFFFFFFFFFFFFELL;
    v54 = (double *)(v50 + 40);
    v53 = 0.0;
    v55 = v51 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      v53 = v53 + *(v54 - 1) + *v54;
      v54 += 2;
      v55 -= 2;
    }
    while (v55);
    if (v51 != v52)
      goto LABEL_33;
  }
LABEL_35:
  v59 = sub_22655CFBC();
  swift_beginAccess();
  v60 = swift_isUniquelyReferenced_nonNull_native();
  v169 = *(_QWORD **)v31;
  *(_QWORD *)v31 = 0x8000000000000000;
  sub_2265235F4(v59, 0x6E696C6E4F6D754ELL, 0xEF65746164705565, v60);
  *(_QWORD *)v31 = v169;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (v51)
  {
    v61 = sub_22655CF68();
    swift_beginAccess();
    v62 = swift_isUniquelyReferenced_nonNull_native();
    v169 = *(_QWORD **)v31;
    *(_QWORD *)v31 = 0x8000000000000000;
    sub_2265235F4(v61, 0xD00000000000001CLL, 0x800000022656DC40, v62);
    *(_QWORD *)v31 = v169;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  v63 = objc_msgSend((id)a2, sel_walls);
  sub_22643F548(0, (unint64_t *)&qword_2558480B0);
  v64 = sub_22655CECC();

  if (v64 >> 62)
    goto LABEL_89;
  while (1)
  {
    swift_bridgeObjectRelease();
    v65 = sub_22655CFBC();
    swift_beginAccess();
    v66 = swift_isUniquelyReferenced_nonNull_native();
    v169 = *(_QWORD **)v31;
    *(_QWORD *)v31 = 0x8000000000000000;
    sub_2265235F4(v65, 0x6C6C61576D754ELL, 0xE700000000000000, v66);
    *(_QWORD *)v31 = v169;
    swift_bridgeObjectRelease();
    swift_endAccess();
    v67 = objc_msgSend((id)a2, sel_windows);
    v68 = sub_22655CECC();

    if (v68 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_22655D400();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v69 = sub_22655CFBC();
    swift_beginAccess();
    v70 = swift_isUniquelyReferenced_nonNull_native();
    v169 = *(_QWORD **)v31;
    *(_QWORD *)v31 = 0x8000000000000000;
    sub_2265235F4(v69, 0x6F646E69576D754ELL, 0xE900000000000077, v70);
    *(_QWORD *)v31 = v169;
    swift_bridgeObjectRelease();
    swift_endAccess();
    v71 = objc_msgSend((id)a2, sel_openings);
    v72 = sub_22655CECC();

    if (v72 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_22655D400();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v73 = sub_22655CFBC();
    swift_beginAccess();
    v74 = swift_isUniquelyReferenced_nonNull_native();
    v169 = *(_QWORD **)v31;
    *(_QWORD *)v31 = 0x8000000000000000;
    sub_2265235F4(v73, 0x696E65704F6D754ELL, v29 + 513, v74);
    *(_QWORD *)v31 = v169;
    swift_bridgeObjectRelease();
    swift_endAccess();
    v75 = objc_msgSend((id)a2, sel_objects);
    v29 = sub_22643F548(0, (unint64_t *)&unk_255849AB0);
    v76 = sub_22655CECC();

    if (v76 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_22655D400();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v77 = sub_22655CFBC();
    swift_beginAccess();
    v78 = swift_isUniquelyReferenced_nonNull_native();
    v169 = *(_QWORD **)v31;
    *(_QWORD *)v31 = 0x8000000000000000;
    sub_2265235F4(v77, 0x63656A624F6D754ELL, 0xE900000000000074, v78);
    *(_QWORD *)v31 = v169;
    swift_bridgeObjectRelease();
    swift_endAccess();
    v79 = objc_msgSend((id)a2, sel_doors);
    v80 = sub_22655CECC();

    if (v80 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_22655D400();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v81 = sub_22655CFBC();
    swift_beginAccess();
    v82 = swift_isUniquelyReferenced_nonNull_native();
    v169 = *(_QWORD **)v31;
    *(_QWORD *)v31 = 0x8000000000000000;
    sub_2265235F4(v81, 0x65736F6C436D754ELL, 0xEC000000726F6F44, v82);
    *(_QWORD *)v31 = v169;
    swift_bridgeObjectRelease();
    swift_endAccess();
    v83 = objc_msgSend((id)a2, sel_opendoors);
    v84 = sub_22655CECC();

    if (v84 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_22655D400();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v85 = sub_22655CFBC();
    swift_beginAccess();
    v86 = swift_isUniquelyReferenced_nonNull_native();
    v169 = *(_QWORD **)v31;
    *(_QWORD *)v31 = 0x8000000000000000;
    sub_2265235F4(v85, 0x446E65704F6D754ELL, 0xEB00000000726F6FLL, v86);
    *(_QWORD *)v31 = v169;
    swift_bridgeObjectRelease();
    swift_endAccess();
    v87 = objc_msgSend((id)a2, sel_objects);
    v88 = sub_22655CECC();

    if (!(v88 >> 62))
    {
      v89 = *(_QWORD *)((v88 & 0xFFFFFFFFFFFFF8) + 0x10);
      v168 = (_QWORD *)v31;
      if (!v89)
        break;
      goto LABEL_50;
    }
    swift_bridgeObjectRetain();
    v89 = sub_22655D400();
    swift_bridgeObjectRelease();
    v168 = (_QWORD *)v31;
    if (!v89)
      break;
LABEL_50:
    v166 = type metadata accessor for RSCoreAdaptor();
    a2 = MEMORY[0x24BEE4B00];
    v167 = v88 & 0xC000000000000001;
    v90 = 4;
    v165 = v88;
    v164 = v89;
    while (1)
    {
      v91 = v167 ? (id)MEMORY[0x2276999E4](v90 - 4, v88) : *(id *)(v88 + 8 * v90);
      v92 = v91;
      v93 = v90 - 3;
      if (__OFADD__(v90 - 4, 1))
        break;
      v94 = objc_msgSend(v91, sel_type);
      if (!v94)
        goto LABEL_129;
      v95 = v94;
      sub_2264EBEDC((char *)&v170);

      v96 = v170;
      v97 = sub_22655CDDC();
      if (!*(_QWORD *)(a2 + 16))
      {
        swift_bridgeObjectRelease();
LABEL_67:
        LOBYTE(v170) = v96;
        v111 = sub_22655CDDC();
        v113 = v112;
        v29 = swift_isUniquelyReferenced_nonNull_native();
        v170 = a2;
        v115 = sub_2265348F0(v111, v113);
        v116 = *(_QWORD *)(a2 + 16);
        v117 = (v114 & 1) == 0;
        v118 = v116 + v117;
        if (__OFADD__(v116, v117))
          goto LABEL_85;
        v31 = v114;
        if (*(_QWORD *)(a2 + 24) >= v118)
        {
          if ((v29 & 1) != 0)
          {
            a2 = v170;
            if ((v114 & 1) == 0)
              goto LABEL_74;
          }
          else
          {
            sub_226549E78();
            a2 = v170;
            if ((v31 & 1) == 0)
              goto LABEL_74;
          }
        }
        else
        {
          sub_226544C60(v118, v29);
          v119 = sub_2265348F0(v111, v113);
          if ((v31 & 1) != (v120 & 1))
            goto LABEL_130;
          v115 = v119;
          a2 = v170;
          if ((v31 & 1) == 0)
          {
LABEL_74:
            *(_QWORD *)(a2 + 8 * (v115 >> 6) + 64) |= 1 << v115;
            v121 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v115);
            *v121 = v111;
            v121[1] = v113;
            *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v115) = 1;
            v122 = *(_QWORD *)(a2 + 16);
            v123 = __OFADD__(v122, 1);
            v124 = v122 + 1;
            if (v123)
              goto LABEL_86;
            *(_QWORD *)(a2 + 16) = v124;
            swift_bridgeObjectRetain();
            goto LABEL_52;
          }
        }
        *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v115) = 1;
LABEL_52:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v31 = (uint64_t)v168;
        goto LABEL_53;
      }
      sub_2265348F0(v97, v98);
      v100 = v99;
      swift_bridgeObjectRelease();
      if ((v100 & 1) == 0)
        goto LABEL_67;
      LOBYTE(v170) = v96;
      v31 = sub_22655CDDC();
      v102 = v101;
      v29 = swift_isUniquelyReferenced_nonNull_native();
      v170 = a2;
      swift_bridgeObjectRetain();
      v104 = sub_2265348F0(v31, v102);
      v105 = *(_QWORD *)(a2 + 16);
      v106 = (v103 & 1) == 0;
      v107 = v105 + v106;
      if (__OFADD__(v105, v106))
        goto LABEL_87;
      v108 = v103;
      if (*(_QWORD *)(a2 + 24) >= v107)
      {
        v31 = (uint64_t)v168;
        if ((v29 & 1) != 0)
        {
          if ((v103 & 1) == 0)
            goto LABEL_83;
        }
        else
        {
          sub_226549E78();
          if ((v108 & 1) == 0)
            goto LABEL_83;
        }
      }
      else
      {
        sub_226544C60(v107, v29);
        v109 = sub_2265348F0(v31, v102);
        if ((v108 & 1) != (v110 & 1))
          goto LABEL_130;
        v104 = v109;
        v31 = (uint64_t)v168;
        if ((v108 & 1) == 0)
        {
LABEL_83:
          __break(1u);
          break;
        }
      }
      v125 = *(_QWORD *)(v170 + 56);
      v126 = *(_QWORD *)(v125 + 8 * v104);
      v123 = __OFADD__(v126, 1);
      v127 = v126 + 1;
      if (v123)
        goto LABEL_88;
      *(_QWORD *)(v125 + 8 * v104) = v127;
      swift_bridgeObjectRelease();
      a2 = v170;
      swift_bridgeObjectRelease();

LABEL_53:
      v88 = v165;
      ++v90;
      if (v93 == v164)
        goto LABEL_92;
    }
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    swift_bridgeObjectRetain();
    sub_22655D400();
    swift_bridgeObjectRelease();
  }
  a2 = MEMORY[0x24BEE4B00];
LABEL_92:
  swift_bridgeObjectRelease();
  v128 = *(_QWORD *)(a2 + 64);
  v165 = a2 + 64;
  v129 = 1 << *(_BYTE *)(a2 + 32);
  v130 = -1;
  if (v129 < 64)
    v130 = ~(-1 << v129);
  v131 = v130 & v128;
  v166 = (unint64_t)(v129 + 63) >> 6;
  swift_bridgeObjectRetain();
  v132 = 0;
  v167 = 0x800000022656D880;
  while (2)
  {
    if (v131)
    {
      v131 &= v131 - 1;
    }
    else
    {
      v135 = v132 + 1;
      if (__OFADD__(v132, 1))
        goto LABEL_127;
      if (v135 >= v166)
      {
LABEL_124:
        swift_release();
        v155 = objc_allocWithZone(MEMORY[0x24BDD17C8]);
        swift_bridgeObjectRetain();
        v156 = (void *)sub_22655CD64();
        swift_bridgeObjectRelease();
        v157 = objc_msgSend(v155, sel_initWithString_, v156);

        swift_beginAccess();
        v158 = swift_isUniquelyReferenced_nonNull_native();
        v169 = *(_QWORD **)v31;
        *(_QWORD *)v31 = 0x8000000000000000;
        sub_2265235F4((uint64_t)v157, 0x7245656E696C6E4FLL, 0xEF65707954726F72, v158);
        *(_QWORD *)v31 = v169;
        swift_bridgeObjectRelease();
        swift_endAccess();
        v159 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 1);
        swift_beginAccess();
        v160 = swift_isUniquelyReferenced_nonNull_native();
        v169 = *(_QWORD **)v31;
        *(_QWORD *)v31 = 0x8000000000000000;
        sub_2265235F4((uint64_t)v159, 0xD000000000000011, 0x800000022656DC20, v160);
        *(_QWORD *)v31 = v169;
        swift_bridgeObjectRelease();
        swift_endAccess();
        return swift_bridgeObjectRelease();
      }
      v136 = *(_QWORD *)(v165 + 8 * v135);
      ++v132;
      if (!v136)
      {
        v132 = v135 + 1;
        if (v135 + 1 >= v166)
          goto LABEL_124;
        v136 = *(_QWORD *)(v165 + 8 * v132);
        if (!v136)
        {
          v132 = v135 + 2;
          if (v135 + 2 >= v166)
            goto LABEL_124;
          v136 = *(_QWORD *)(v165 + 8 * v132);
          if (!v136)
          {
            v137 = v135 + 3;
            if (v137 >= v166)
              goto LABEL_124;
            v136 = *(_QWORD *)(v165 + 8 * v137);
            if (!v136)
            {
              while (1)
              {
                v132 = v137 + 1;
                if (__OFADD__(v137, 1))
                  goto LABEL_128;
                if (v132 >= v166)
                  goto LABEL_124;
                v136 = *(_QWORD *)(v165 + 8 * v132);
                ++v137;
                if (v136)
                  goto LABEL_112;
              }
            }
            v132 = v137;
          }
        }
      }
LABEL_112:
      v131 = (v136 - 1) & v136;
    }
    v170 = 0xD000000000000012;
    v171 = v167;
    sub_22655CE24();
    v139 = v170;
    v138 = v171;
    v140 = sub_22655CFBC();
    swift_beginAccess();
    v141 = swift_isUniquelyReferenced_nonNull_native();
    v169 = *(_QWORD **)v31;
    v142 = v169;
    *(_QWORD *)v31 = 0x8000000000000000;
    v144 = sub_2265348F0(v139, v138);
    v145 = v142[2];
    v146 = (v143 & 1) == 0;
    v147 = v145 + v146;
    if (!__OFADD__(v145, v146))
    {
      v148 = v143;
      if (v142[3] >= v147)
      {
        if ((v141 & 1) != 0)
        {
          v151 = v169;
          if ((v143 & 1) == 0)
            goto LABEL_120;
        }
        else
        {
          sub_226549CC8();
          v151 = v169;
          if ((v148 & 1) == 0)
            goto LABEL_120;
        }
      }
      else
      {
        sub_226544954(v147, v141);
        v149 = sub_2265348F0(v139, v138);
        if ((v148 & 1) != (v150 & 1))
          goto LABEL_130;
        v144 = v149;
        v151 = v169;
        if ((v148 & 1) == 0)
        {
LABEL_120:
          v151[(v144 >> 6) + 8] |= 1 << v144;
          v152 = (uint64_t *)(v151[6] + 16 * v144);
          *v152 = v139;
          v152[1] = v138;
          *(_QWORD *)(v151[7] + 8 * v144) = v140;
          v153 = v151[2];
          v123 = __OFADD__(v153, 1);
          v154 = v153 + 1;
          if (v123)
            goto LABEL_126;
          v151[2] = v154;
          swift_bridgeObjectRetain();
          goto LABEL_96;
        }
      }
      v133 = v151[7];
      v134 = 8 * v144;

      *(_QWORD *)(v133 + v134) = v140;
LABEL_96:
      v31 = (uint64_t)v168;
      *v168 = v151;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      continue;
    }
    break;
  }
  __break(1u);
LABEL_126:
  __break(1u);
LABEL_127:
  __break(1u);
LABEL_128:
  __break(1u);
LABEL_129:
  __break(1u);
LABEL_130:
  result = sub_22655D5A4();
  __break(1u);
  return result;
}

void sub_2264A4C0C(char a1)
{
  sub_2264A764C(a1, (uint64_t)&OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_queue, (uint64_t)&unk_24EDE34F0, (uint64_t)sub_2264ABE28, (uint64_t)&block_descriptor_101);
}

uint64_t sub_2264A4C30(void *a1, char a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v16;
  uint64_t v17;
  id (*v18)(uint64_t);
  void *v19;
  uint64_t (*v20)();
  uint64_t v21;

  if (*((_BYTE *)a1 + OBJC_IVAR____TtC8RoomPlan9Analytics_bOptInApple) == 1)
  {
    sub_2264A2390();
    v4 = (void *)sub_22655CD64();
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = a1;
    v20 = sub_2264ABABC;
    v21 = v5;
    v6 = MEMORY[0x24BDAC760];
    v16 = MEMORY[0x24BDAC760];
    v17 = 1107296256;
    v18 = sub_2264A26EC;
    v19 = &block_descriptor_122;
    v7 = _Block_copy(&v16);
    v8 = a1;
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v7);

    sub_2264A2390();
    if ((a2 & 1) != 0)
    {
      v9 = (void *)sub_22655CD64();
      v10 = swift_allocObject();
      *(_QWORD *)(v10 + 16) = v8;
      v20 = sub_2264ABABC;
      v21 = v10;
      v16 = v6;
      v17 = 1107296256;
      v11 = &block_descriptor_115;
    }
    else
    {
      v9 = (void *)sub_22655CD64();
      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = v8;
      v20 = sub_2264ABABC;
      v21 = v12;
      v16 = v6;
      v17 = 1107296256;
      v11 = &block_descriptor_108;
    }
    v18 = sub_2264A26EC;
    v19 = v11;
    v13 = _Block_copy(&v16);
    v14 = v8;
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v13);

  }
  return sub_2264A287C();
}

id sub_2264A4E38()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  objc_class *v16;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  objc_super v21;
  uint64_t v22;

  v20 = sub_22655D064();
  v1 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_22655D04C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v4);
  v6 = sub_22655CBFC();
  MEMORY[0x24BDAC7A8](v6);
  v19 = OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_queue;
  v18[1] = sub_22643F548(0, (unint64_t *)&qword_2558442A0);
  v7 = v0;
  sub_22655CBF0();
  v22 = MEMORY[0x24BEE4AF8];
  sub_226437F28((unint64_t *)&qword_2558491E0, v5, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558442B0);
  sub_2264ABAD4((unint64_t *)&qword_2558491F0, (uint64_t *)&unk_2558442B0);
  sub_22655D214();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5750], v20);
  *(_QWORD *)(v18[2] + v19) = sub_22655D088();
  v8 = &v7[OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_launchTimeStart];
  v9 = sub_22655C0E0();
  v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v10(v8, 1, 1, v9);
  v10(&v7[OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_onlineScanTimeStart], 1, 1, v9);
  v11 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v7[OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_arframeDeltaTimeArray] = MEMORY[0x24BEE4AF8];
  v12 = &v7[OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_arframeLastTimeInterval];
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_keyframeDeltaTimeArray] = v11;
  v13 = &v7[OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_keyframeLastTimeInterval];
  *(_QWORD *)v13 = 0;
  v13[8] = 1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_onlineFloorPlanUpdateDeltaTimeArray] = v11;
  v14 = &v7[OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_onlineFloorPlanUpdateLastTimeInterval];
  *(_QWORD *)v14 = 0;
  v14[8] = 1;
  v15 = &v7[OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_errorType];
  *(_QWORD *)v15 = 0x73736563637573;
  *((_QWORD *)v15 + 1) = 0xE700000000000000;

  v16 = (objc_class *)type metadata accessor for AnalyticsOnline(0);
  v21.receiver = v7;
  v21.super_class = v16;
  return objc_msgSendSuper2(&v21, sel_init);
}

uint64_t sub_2264A5140()
{
  uint64_t v0;

  sub_22643D7E4(v0 + OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_launchTimeStart, &qword_255841200);
  sub_22643D7E4(v0 + OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_onlineScanTimeStart, &qword_255841200);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_2264A51D8()
{
  return sub_2264A51E8(0, (uint64_t (*)(void))type metadata accessor for AnalyticsOnline);
}

id sub_2264A51E8(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_2264A52B4()
{
  return type metadata accessor for AnalyticsOnline(0);
}

uint64_t type metadata accessor for AnalyticsOnline(uint64_t a1)
{
  return sub_2264AA720(a1, (uint64_t *)&unk_2558451E8);
}

void sub_2264A52D0()
{
  unint64_t v0;

  sub_226453DCC();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

id sub_2264A5378(uint64_t a1)
{
  return sub_2264A5390(a1, 0, type metadata accessor for AnalyticsOffline, &qword_25585AEF0);
}

id sub_2264A5390(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), _QWORD *a4)
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)a3(a2)), sel_init);
  *a4 = result;
  return result;
}

void sub_2264A53C8()
{
  sub_2264A2CB4((uint64_t)&OBJC_IVAR____TtC8RoomPlan16AnalyticsOffline_queue, (uint64_t)&unk_24EDE3810, (uint64_t)sub_2264ABF78, (uint64_t)&block_descriptor_164);
}

void sub_2264A53EC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  _QWORD v25[2];
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[6];

  v27 = a4;
  v28 = a2;
  v29 = a3;
  v6 = sub_22655CBB4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22655CBFC();
  v30 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CapturedRoom(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v4[OBJC_IVAR____TtC8RoomPlan9Analytics_bOptInApple] == 1)
  {
    v25[1] = *(_QWORD *)&v4[OBJC_IVAR____TtC8RoomPlan16AnalyticsOffline_queue];
    v26 = v10;
    sub_22643D704(a1, (uint64_t)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CapturedRoom);
    v17 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v18 = v17 + v15;
    v25[0] = v7;
    v19 = (v17 + v15) & 0xFFFFFFFFFFFFFFF8;
    v20 = swift_allocObject();
    v21 = v19 + v20;
    *(_QWORD *)(v20 + 16) = v4;
    sub_22643F6AC((uint64_t)v16, v20 + v17, type metadata accessor for CapturedRoom);
    *(_BYTE *)(v20 + v18) = v27 & 1;
    v22 = v29;
    *(_QWORD *)(v21 + 8) = v28;
    *(_QWORD *)(v21 + 16) = v22;
    aBlock[4] = sub_2264ABDB8;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2264FA450;
    aBlock[3] = &block_descriptor_95;
    v23 = _Block_copy(aBlock);
    v24 = v4;
    swift_bridgeObjectRetain();
    sub_22655CBCC();
    v31 = MEMORY[0x24BEE4AF8];
    sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
    sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
    sub_22655D214();
    MEMORY[0x22769975C](0, v12, v9, v23);
    _Block_release(v23);
    (*(void (**)(char *, uint64_t))(v25[0] + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v26);
    swift_release();
  }
}

uint64_t sub_2264A5690(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char isUniquelyReferenced_nonNull_native;
  void (*v37)(char *, uint64_t);
  uint64_t *v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  int v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  char v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t *v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  unint64_t v74;
  _BOOL8 v75;
  uint64_t v76;
  char v77;
  unint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char v84;
  unint64_t v85;
  unint64_t v86;
  _BOOL8 v87;
  uint64_t v88;
  char v89;
  unint64_t v90;
  char v91;
  uint64_t *v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  _QWORD *v111;
  char v112;
  unint64_t v113;
  uint64_t v114;
  _BOOL8 v115;
  uint64_t v116;
  char v117;
  unint64_t v118;
  char v119;
  _QWORD *v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  float32x4_t *v141;
  uint64_t v142;
  double v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  uint64_t v148;
  char v149;
  uint64_t v150;
  char v151;
  uint64_t v152;
  char v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  char v157;
  uint64_t v158;
  char v159;
  uint64_t v160;
  char v161;
  uint64_t v162;
  char v163;
  uint64_t v164;
  char v165;
  uint64_t v166;
  char v167;
  uint64_t v168;
  char v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  char v185;
  uint64_t v186;
  char v187;
  uint64_t v188;
  char v189;
  uint64_t v190;
  char v191;
  uint64_t v192;
  uint64_t v193;
  _QWORD *v194;
  char v195;
  uint64_t v196;
  char v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  _QWORD *v207;
  char v208;
  uint64_t v209;
  char v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char v221;
  uint64_t v222;
  char v223;
  uint64_t v224;
  char v225;
  id v226;
  void *v227;
  id v228;
  char v229;
  id v230;
  char v231;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t *v241;
  char *v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  unint64_t *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  unint64_t *v251;
  _QWORD *v252;
  _QWORD *v253;
  unint64_t v254;
  unint64_t v255;

  v237 = a5;
  v236 = a4;
  v235 = a3;
  v241 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848090);
  MEMORY[0x24BDAC7A8](v6);
  v242 = (char *)&v233 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v238 = (char *)&v233 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v243 = (char *)&v233 - v11;
  v234 = type metadata accessor for CapturedRoom.Object(0);
  v239 = *(_QWORD *)(v234 - 8);
  MEMORY[0x24BDAC7A8](v234);
  v246 = (uint64_t)&v233 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v251 = (unint64_t *)((char *)&v233 - v14);
  v250 = type metadata accessor for CapturedRoom.Surface(0);
  v240 = *(_QWORD *)(v250 - 8);
  MEMORY[0x24BDAC7A8](v250);
  v244 = (uint64_t)&v233 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v245 = (uint64_t)&v233 - v17;
  MEMORY[0x24BDAC7A8](v18);
  v249 = (uint64_t)&v233 - v19;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (unsigned __int8 *)&v233 - v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255841200);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v233 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_22655C0E0();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v233 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v233 - v31;
  v33 = a1 + OBJC_IVAR____TtC8RoomPlan16AnalyticsOffline_offlineGenerationTimeStart;
  swift_beginAccess();
  sub_22643D7A0(v33, (uint64_t)v25, &qword_255841200);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    sub_22643D7E4((uint64_t)v25, &qword_255841200);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v32, v25, v26);
    sub_22655C0D4();
    sub_22655C0A4();
    v34 = sub_22655CF68();
    v35 = (_QWORD *)(a1 + OBJC_IVAR____TtC8RoomPlan9Analytics_roomPlanStats);
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v253 = (_QWORD *)*v35;
    *v35 = 0x8000000000000000;
    sub_2265235F4(v34, 0xD000000000000018, 0x800000022656DB60, isUniquelyReferenced_nonNull_native);
    *v35 = v253;
    swift_bridgeObjectRelease();
    swift_endAccess();
    v37 = *(void (**)(char *, uint64_t))(v27 + 8);
    v37(v29, v26);
    v37(v32, v26);
  }
  v38 = v241;
  v39 = sub_22655CFBC();
  v40 = a1 + OBJC_IVAR____TtC8RoomPlan9Analytics_roomPlanStats;
  swift_beginAccess();
  v41 = swift_isUniquelyReferenced_nonNull_native();
  v253 = *(_QWORD **)v40;
  *(_QWORD *)v40 = 0x8000000000000000;
  sub_2265235F4(v39, 0x6C6C61576D754ELL, 0xE700000000000000, v41);
  *(_QWORD *)v40 = v253;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v42 = sub_22655CFBC();
  swift_beginAccess();
  v43 = swift_isUniquelyReferenced_nonNull_native();
  v253 = *(_QWORD **)v40;
  *(_QWORD *)v40 = 0x8000000000000000;
  sub_2265235F4(v42, 0x6F646E69576D754ELL, 0xE900000000000077, v43);
  *(_QWORD *)v40 = v253;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v44 = sub_22655CFBC();
  swift_beginAccess();
  v45 = swift_isUniquelyReferenced_nonNull_native();
  v253 = *(_QWORD **)v40;
  *(_QWORD *)v40 = 0x8000000000000000;
  sub_2265235F4(v44, 0x696E65704F6D754ELL, 0xEA0000000000676ELL, v45);
  *(_QWORD *)v40 = v253;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v247 = (unint64_t *)v38[5];
  v46 = sub_22655CFBC();
  swift_beginAccess();
  v47 = swift_isUniquelyReferenced_nonNull_native();
  v253 = *(_QWORD **)v40;
  *(_QWORD *)v40 = 0x8000000000000000;
  sub_2265235F4(v46, 0x63656A624F6D754ELL, 0xE900000000000074, v47);
  *(_QWORD *)v40 = v253;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v48 = v38[1];
  v49 = *(_QWORD *)(v48 + 16);
  v252 = (_QWORD *)v40;
  if (!v49)
    goto LABEL_14;
  v50 = v48 + ((*(unsigned __int8 *)(v240 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v240 + 80));
  v51 = *(_QWORD *)(v240 + 72);
  swift_bridgeObjectRetain();
  v52 = 0;
  v53 = 0;
  while (1)
  {
    sub_22643D704(v50, (uint64_t)v22, type metadata accessor for CapturedRoom.Surface);
    v55 = *v22;
    sub_22643D748((uint64_t)v22, type metadata accessor for CapturedRoom.Surface);
    if ((v55 - 2) >= 4)
    {
      if ((v55 & 1) == 0)
      {
        v54 = __OFADD__(v53++, 1);
        if (v54)
          goto LABEL_155;
        goto LABEL_7;
      }
      v54 = __OFADD__(v52++, 1);
      if (v54)
        break;
    }
LABEL_7:
    v50 += v51;
    if (!--v49)
      goto LABEL_13;
  }
  __break(1u);
LABEL_13:
  swift_bridgeObjectRelease();
  v40 = (unint64_t)v252;
LABEL_14:
  v56 = sub_22655CFBC();
  swift_beginAccess();
  v57 = swift_isUniquelyReferenced_nonNull_native();
  v253 = *(_QWORD **)v40;
  *(_QWORD *)v40 = 0x8000000000000000;
  sub_2265235F4(v56, 0x65736F6C436D754ELL, 0xEC000000726F6F44, v57);
  *(_QWORD *)v40 = v253;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v58 = sub_22655CFBC();
  swift_beginAccess();
  v59 = swift_isUniquelyReferenced_nonNull_native();
  v253 = *(_QWORD **)v40;
  *(_QWORD *)v40 = 0x8000000000000000;
  sub_2265235F4(v58, 0x446E65704F6D754ELL, 0xEB00000000726F6FLL, v59);
  *(_QWORD *)v40 = v253;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v60 = v247[2];
  if (!v60)
  {
    v62 = (unint64_t *)MEMORY[0x24BEE4B00];
    goto LABEL_46;
  }
  v61 = (uint64_t)v247 + ((*(unsigned __int8 *)(v239 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v239 + 80));
  v248 = *(_QWORD *)(v239 + 72);
  swift_bridgeObjectRetain();
  v62 = (unint64_t *)MEMORY[0x24BEE4B00];
  v63 = v251;
  while (2)
  {
    sub_22643D704(v61, (uint64_t)v63, type metadata accessor for CapturedRoom.Object);
    v64 = *(_BYTE *)v63;
    LOBYTE(v254) = *(_BYTE *)v63;
    v65 = sub_22655CDDC();
    if (!v62[2])
    {
      swift_bridgeObjectRelease();
LABEL_27:
      LOBYTE(v254) = v64;
      v80 = sub_22655CDDC();
      v82 = v81;
      v83 = swift_isUniquelyReferenced_nonNull_native();
      v254 = (unint64_t)v62;
      v85 = sub_2265348F0(v80, v82);
      v86 = v62[2];
      v87 = (v84 & 1) == 0;
      v88 = v86 + v87;
      if (__OFADD__(v86, v87))
        goto LABEL_150;
      v89 = v84;
      if ((uint64_t)v62[3] < v88)
      {
        sub_226544C60(v88, v83);
        v90 = sub_2265348F0(v80, v82);
        if ((v89 & 1) != (v91 & 1))
          goto LABEL_162;
        v85 = v90;
        v62 = (unint64_t *)v254;
        if ((v89 & 1) == 0)
          goto LABEL_34;
LABEL_16:
        *(_QWORD *)(v62[7] + 8 * v85) = 1;
LABEL_17:
        swift_bridgeObjectRelease();
LABEL_18:
        swift_bridgeObjectRelease();
        v63 = v251;
        v40 = (unint64_t)v252;
        sub_22643D748((uint64_t)v251, type metadata accessor for CapturedRoom.Object);
        v61 += v248;
        if (!--v60)
          goto LABEL_44;
        continue;
      }
      if ((v83 & 1) != 0)
      {
        v62 = (unint64_t *)v254;
        if ((v84 & 1) != 0)
          goto LABEL_16;
      }
      else
      {
        sub_226549E78();
        v62 = (unint64_t *)v254;
        if ((v89 & 1) != 0)
          goto LABEL_16;
      }
LABEL_34:
      v62[(v85 >> 6) + 8] |= 1 << v85;
      v92 = (uint64_t *)(v62[6] + 16 * v85);
      *v92 = v80;
      v92[1] = v82;
      *(_QWORD *)(v62[7] + 8 * v85) = 1;
      v93 = v62[2];
      v54 = __OFADD__(v93, 1);
      v94 = v93 + 1;
      if (v54)
        goto LABEL_152;
      v62[2] = v94;
      swift_bridgeObjectRetain();
      goto LABEL_17;
    }
    break;
  }
  sub_2265348F0(v65, v66);
  v68 = v67;
  swift_bridgeObjectRelease();
  if ((v68 & 1) == 0)
    goto LABEL_27;
  LOBYTE(v254) = v64;
  v69 = sub_22655CDDC();
  v71 = v70;
  v72 = swift_isUniquelyReferenced_nonNull_native();
  v254 = (unint64_t)v62;
  swift_bridgeObjectRetain();
  v40 = sub_2265348F0(v69, v71);
  v74 = v62[2];
  v75 = (v73 & 1) == 0;
  v76 = v74 + v75;
  if (__OFADD__(v74, v75))
    goto LABEL_153;
  v77 = v73;
  if ((uint64_t)v62[3] >= v76)
  {
    if ((v72 & 1) != 0)
    {
      if ((v73 & 1) == 0)
        goto LABEL_43;
    }
    else
    {
      v62 = &v254;
      sub_226549E78();
      if ((v77 & 1) == 0)
        goto LABEL_43;
    }
    goto LABEL_38;
  }
  sub_226544C60(v76, v72);
  v62 = (unint64_t *)v254;
  v78 = sub_2265348F0(v69, v71);
  if ((v77 & 1) != (v79 & 1))
    goto LABEL_162;
  v40 = v78;
  if ((v77 & 1) != 0)
  {
LABEL_38:
    v95 = *(_QWORD *)(v254 + 56);
    v96 = *(_QWORD *)(v95 + 8 * v40);
    v54 = __OFADD__(v96, 1);
    v97 = v96 + 1;
    if (v54)
      goto LABEL_154;
    *(_QWORD *)(v95 + 8 * v40) = v97;
    swift_bridgeObjectRelease();
    v62 = (unint64_t *)v254;
    goto LABEL_18;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  swift_bridgeObjectRelease();
LABEL_46:
  v98 = v62[8];
  v247 = v62 + 8;
  v99 = 1 << *((_BYTE *)v62 + 32);
  v100 = -1;
  if (v99 < 64)
    v100 = ~(-1 << v99);
  v101 = v100 & v98;
  v248 = (unint64_t)(v99 + 63) >> 6;
  v251 = v62;
  swift_bridgeObjectRetain();
  v102 = 0;
  while (2)
  {
    if (v101)
    {
      v101 &= v101 - 1;
      goto LABEL_67;
    }
    v104 = v102 + 1;
    if (__OFADD__(v102, 1))
      goto LABEL_149;
    if (v104 < v248)
    {
      v105 = v247[v104];
      ++v102;
      if (!v105)
      {
        v102 = v104 + 1;
        if (v104 + 1 >= v248)
          break;
        v105 = v247[v102];
        if (!v105)
        {
          v102 = v104 + 2;
          if (v104 + 2 >= v248)
            break;
          v105 = v247[v102];
          if (!v105)
          {
            v106 = v104 + 3;
            if (v106 >= v248)
              break;
            v105 = v247[v106];
            if (!v105)
            {
              while (1)
              {
                v102 = v106 + 1;
                if (__OFADD__(v106, 1))
                  break;
                if (v102 >= v248)
                  goto LABEL_78;
                v105 = v247[v102];
                ++v106;
                if (v105)
                  goto LABEL_66;
              }
LABEL_156:
              __break(1u);
              JUMPOUT(0x2264A75D8);
            }
            v102 = v106;
          }
        }
      }
LABEL_66:
      v101 = (v105 - 1) & v105;
LABEL_67:
      v254 = 0xD000000000000012;
      v255 = 0x800000022656D880;
      sub_22655CE24();
      v108 = v254;
      v107 = v255;
      v109 = sub_22655CFBC();
      swift_beginAccess();
      v110 = swift_isUniquelyReferenced_nonNull_native();
      v253 = *(_QWORD **)v40;
      v111 = v253;
      *(_QWORD *)v40 = 0x8000000000000000;
      v113 = sub_2265348F0(v108, v107);
      v114 = v111[2];
      v115 = (v112 & 1) == 0;
      v116 = v114 + v115;
      if (!__OFADD__(v114, v115))
      {
        v117 = v112;
        if (v111[3] >= v116)
        {
          if ((v110 & 1) != 0)
          {
            v120 = v253;
            if ((v112 & 1) == 0)
              goto LABEL_74;
          }
          else
          {
            sub_226549CC8();
            v120 = v253;
            if ((v117 & 1) == 0)
              goto LABEL_74;
          }
        }
        else
        {
          sub_226544954(v116, v110);
          v118 = sub_2265348F0(v108, v107);
          if ((v117 & 1) != (v119 & 1))
            goto LABEL_162;
          v113 = v118;
          v120 = v253;
          if ((v117 & 1) == 0)
          {
LABEL_74:
            v120[(v113 >> 6) + 8] |= 1 << v113;
            v121 = (uint64_t *)(v120[6] + 16 * v113);
            *v121 = v108;
            v121[1] = v107;
            *(_QWORD *)(v120[7] + 8 * v113) = v109;
            v122 = v120[2];
            v54 = __OFADD__(v122, 1);
            v123 = v122 + 1;
            if (v54)
              goto LABEL_148;
            v120[2] = v123;
            swift_bridgeObjectRetain();
            goto LABEL_50;
          }
        }
        v103 = v120[7];

        *(_QWORD *)(v103 + 8 * v113) = v109;
LABEL_50:
        v40 = (unint64_t)v252;
        *v252 = v120;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        continue;
      }
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
      goto LABEL_156;
    }
    break;
  }
LABEL_78:
  swift_release();
  v124 = v241[5];
  v125 = *(_QWORD *)(v124 + 16);
  if (v125)
  {
    v126 = *(int *)(v234 + 36);
    v127 = v124 + ((*(unsigned __int8 *)(v239 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v239 + 80));
    v128 = *(_QWORD *)(v239 + 72);
    swift_bridgeObjectRetain();
    v129 = 0;
    while (1)
    {
      v130 = v246;
      sub_22643D704(v127, v246, type metadata accessor for CapturedRoom.Object);
      v131 = *(_QWORD *)(v130 + v126);
      swift_bridgeObjectRetain();
      sub_22643D748(v130, type metadata accessor for CapturedRoom.Object);
      v132 = *(_QWORD *)(v131 + 16);
      swift_bridgeObjectRelease();
      if (v132)
      {
        v54 = __OFADD__(v129++, 1);
        if (v54)
          break;
      }
      v127 += v128;
      if (!--v125)
        goto LABEL_85;
    }
    __break(1u);
LABEL_85:
    swift_bridgeObjectRelease();
    v40 = (unint64_t)v252;
  }
  else
  {
    v129 = 0;
  }
  v133 = sub_22655CFBC();
  swift_beginAccess();
  v134 = swift_isUniquelyReferenced_nonNull_native();
  v253 = *(_QWORD **)v40;
  *(_QWORD *)v40 = 0x8000000000000000;
  sub_2265235F4(v133, 0xD000000000000016, 0x800000022656D8A0, v134);
  *(_QWORD *)v40 = v253;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (*(_QWORD *)(v124 + 16))
  {
    if ((unsigned __int128)(v129 * (__int128)100) >> 64 != (100 * v129) >> 63)
    {
      __break(1u);
      goto LABEL_158;
    }
    v135 = sub_22655CF68();
    swift_beginAccess();
    v136 = swift_isUniquelyReferenced_nonNull_native();
    v253 = *(_QWORD **)v40;
    *(_QWORD *)v40 = 0x8000000000000000;
    sub_2265235F4(v135, 0xD000000000000027, 0x800000022656DB30, v136);
    *(_QWORD *)v40 = v253;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  v137 = v241[4];
  v138 = *(_QWORD *)(v137 + 16);
  if (!v138)
    goto LABEL_101;
  v139 = 0;
  v140 = 0;
  v141 = (float32x4_t *)(v137
                       + ((*(unsigned __int8 *)(v240 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v240 + 80)));
  v143 = 0.0;
  v144 = 0x7FFFFFFFFFFFFFFFLL;
  while (2)
  {
    v142 = *(int *)(v250 + 60);
    v145 = *(_QWORD *)(*(uint64_t *)((char *)v141->i64 + v142) + 16);
    if (!v145)
    {
LABEL_96:
      v143 = v143 + vmulq_lane_f32(v141[1], *(float32x2_t *)v141[1].f32, 1).f32[0];
      v141 = (float32x4_t *)((char *)v141 + *(_QWORD *)(v240 + 72));
      if (!--v138)
        goto LABEL_101;
      continue;
    }
    break;
  }
  v54 = __OFADD__(v140++, 1);
  if (!v54)
  {
    if (v145 > v139)
      v139 = *(_QWORD *)(*(uint64_t *)((char *)v141->i64 + v142) + 16);
    if (v145 < v144)
      v144 = *(_QWORD *)(*(uint64_t *)((char *)v141->i64 + v142) + 16);
    goto LABEL_96;
  }
  __break(1u);
LABEL_101:
  v146 = sub_22655CF68();
  swift_beginAccess();
  v147 = swift_isUniquelyReferenced_nonNull_native();
  v253 = *(_QWORD **)v40;
  *(_QWORD *)v40 = 0x8000000000000000;
  sub_2265235F4(v146, 0x657A69536D6F6F52, 0xEC00000061657241, v147);
  *(_QWORD *)v40 = v253;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v148 = sub_22655CFBC();
  swift_beginAccess();
  v149 = swift_isUniquelyReferenced_nonNull_native();
  v253 = *(_QWORD **)v40;
  *(_QWORD *)v40 = 0x8000000000000000;
  sub_2265235F4(v148, 0xD000000000000013, 0x800000022656D8C0, v149);
  *(_QWORD *)v40 = v253;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v150 = sub_22655CFBC();
  swift_beginAccess();
  v151 = swift_isUniquelyReferenced_nonNull_native();
  v253 = *(_QWORD **)v40;
  *(_QWORD *)v40 = 0x8000000000000000;
  sub_2265235F4(v150, 0xD00000000000001BLL, 0x800000022656D8E0, v151);
  *(_QWORD *)v40 = v253;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v152 = sub_22655CFBC();
  swift_beginAccess();
  v153 = swift_isUniquelyReferenced_nonNull_native();
  v253 = *(_QWORD **)v40;
  *(_QWORD *)v40 = 0x8000000000000000;
  sub_2265235F4(v152, 0xD00000000000001BLL, 0x800000022656D900, v153);
  *(_QWORD *)v40 = v253;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v154 = *(uint64_t *)((char *)v241 + *(int *)(type metadata accessor for CapturedRoom(0) + 44));
  if (*(_QWORD *)(v154 + 16))
    __asm { BR              X12 }
  v155 = sub_22655CFBC();
  v156 = v252;
  swift_beginAccess();
  v157 = swift_isUniquelyReferenced_nonNull_native();
  v253 = (_QWORD *)*v156;
  *v156 = 0x8000000000000000;
  sub_2265235F4(v155, 0x69746365536D754ELL, 0xEA00000000006E6FLL, v157);
  *v156 = v253;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v158 = sub_22655CFBC();
  swift_beginAccess();
  v159 = swift_isUniquelyReferenced_nonNull_native();
  v253 = (_QWORD *)*v156;
  *v156 = 0x8000000000000000;
  v248 = 0xD000000000000014;
  sub_2265235F4(v158, 0xD000000000000014, 0x800000022656D920, v159);
  *v156 = v253;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v160 = sub_22655CFBC();
  swift_beginAccess();
  v161 = swift_isUniquelyReferenced_nonNull_native();
  v253 = (_QWORD *)*v156;
  *v156 = 0x8000000000000000;
  sub_2265235F4(v160, 0xD000000000000011, 0x800000022656D940, v161);
  *v156 = v253;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v162 = sub_22655CFBC();
  swift_beginAccess();
  v163 = swift_isUniquelyReferenced_nonNull_native();
  v253 = (_QWORD *)*v156;
  *v156 = 0x8000000000000000;
  sub_2265235F4(v162, 0xD000000000000012, 0x800000022656D960, v163);
  *v156 = v253;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v164 = sub_22655CFBC();
  swift_beginAccess();
  v165 = swift_isUniquelyReferenced_nonNull_native();
  v253 = (_QWORD *)*v156;
  *v156 = 0x8000000000000000;
  sub_2265235F4(v164, 0xD000000000000011, 0x800000022656D980, v165);
  *v156 = v253;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v166 = sub_22655CFBC();
  swift_beginAccess();
  v167 = swift_isUniquelyReferenced_nonNull_native();
  v253 = (_QWORD *)*v156;
  *v156 = 0x8000000000000000;
  sub_2265235F4(v166, v248, 0x800000022656D9A0, v167);
  *v156 = v253;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v168 = sub_22655CFBC();
  swift_beginAccess();
  v169 = swift_isUniquelyReferenced_nonNull_native();
  v253 = (_QWORD *)*v156;
  *v156 = 0x8000000000000000;
  v247 = (unint64_t *)0xD000000000000010;
  sub_2265235F4(v168, 0xD000000000000010, 0x800000022656D9C0, v169);
  *v156 = v253;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v170 = *v241;
  v171 = *(_QWORD *)(*v241 + 16);
  if (v171)
  {
    v172 = v170 + ((*(unsigned __int8 *)(v240 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v240 + 80));
    v248 = *(_QWORD *)(v240 + 72);
    v246 = v170;
    swift_bridgeObjectRetain();
    v173 = 0;
    v174 = 0;
    v175 = 0;
    v176 = 0x7FFFFFFFFFFFFFFFLL;
    v177 = (uint64_t)v243;
    while (1)
    {
      v178 = v249;
      sub_22643D704(v172, v249, type metadata accessor for CapturedRoom.Surface);
      v179 = *(_QWORD *)(*(_QWORD *)(v178 + *(int *)(v250 + 60)) + 16);
      if (v179)
      {
        v54 = __OFADD__(v175++, 1);
        if (v54)
          goto LABEL_151;
        if (v179 > v174)
          v174 = *(_QWORD *)(*(_QWORD *)(v178 + *(int *)(v250 + 60)) + 16);
        if (v179 < v176)
          v176 = *(_QWORD *)(*(_QWORD *)(v178 + *(int *)(v250 + 60)) + 16);
      }
      v180 = v249;
      sub_22643D7A0(v249 + *(int *)(v250 + 52), v177, (uint64_t *)&unk_255848090);
      sub_22643D748(v180, type metadata accessor for CapturedRoom.Surface);
      v181 = type metadata accessor for CapturedRoom.Surface.Curve(0);
      LODWORD(v180) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v181 - 8) + 48))(v177, 1, v181);
      sub_22643D7E4(v177, (uint64_t *)&unk_255848090);
      if ((_DWORD)v180 != 1)
      {
        v54 = __OFADD__(v173++, 1);
        if (v54)
          break;
      }
      v172 += v248;
      if (!--v171)
        goto LABEL_116;
    }
    __break(1u);
LABEL_116:
    v182 = v246;
    swift_bridgeObjectRelease();
  }
  else
  {
    v173 = 0;
    v175 = 0;
    v182 = *v241;
  }
  v183 = sub_22655CFBC();
  v184 = v252;
  swift_beginAccess();
  v185 = swift_isUniquelyReferenced_nonNull_native();
  v253 = (_QWORD *)*v184;
  *v184 = 0x8000000000000000;
  sub_2265235F4(v183, 0xD000000000000012, 0x800000022656D9E0, v185);
  *v184 = v253;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v186 = sub_22655CFBC();
  swift_beginAccess();
  v187 = swift_isUniquelyReferenced_nonNull_native();
  v253 = (_QWORD *)*v184;
  *v184 = 0x8000000000000000;
  sub_2265235F4(v186, 0xD00000000000001ALL, 0x800000022656DA00, v187);
  *v184 = v253;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v188 = sub_22655CFBC();
  swift_beginAccess();
  v189 = swift_isUniquelyReferenced_nonNull_native();
  v253 = (_QWORD *)*v184;
  *v184 = 0x8000000000000000;
  sub_2265235F4(v188, 0xD00000000000001ALL, 0x800000022656DA20, v189);
  *v184 = v253;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v190 = sub_22655CFBC();
  swift_beginAccess();
  v191 = swift_isUniquelyReferenced_nonNull_native();
  v253 = (_QWORD *)*v184;
  *v184 = 0x8000000000000000;
  sub_2265235F4(v190, 0x65767275436D754ELL, 0xEC0000006C6C6157, v191);
  *v184 = v253;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v192 = (uint64_t)v238;
  if (*(_QWORD *)(v182 + 16))
  {
    if ((unsigned __int128)(v175 * (__int128)100) >> 64 == (100 * v175) >> 63)
    {
      v193 = sub_22655CF68();
      v194 = v252;
      swift_beginAccess();
      v195 = swift_isUniquelyReferenced_nonNull_native();
      v253 = (_QWORD *)*v194;
      *v194 = 0x8000000000000000;
      sub_2265235F4(v193, 0xD000000000000021, 0x800000022656DAE0, v195);
      *v194 = v253;
      swift_bridgeObjectRelease();
      swift_endAccess();
      if ((unsigned __int128)(v173 * (__int128)100) >> 64 == (100 * v173) >> 63)
      {
        v196 = sub_22655CF68();
        swift_beginAccess();
        v197 = swift_isUniquelyReferenced_nonNull_native();
        v253 = (_QWORD *)*v194;
        *v194 = 0x8000000000000000;
        sub_2265235F4(v196, 0xD00000000000001BLL, 0x800000022656DB10, v197);
        *v194 = v253;
        swift_bridgeObjectRelease();
        swift_endAccess();
        goto LABEL_122;
      }
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
LABEL_162:
      sub_22655D5A4();
      __break(1u);
      JUMPOUT(0x2264A7610);
    }
LABEL_158:
    __break(1u);
    goto LABEL_159;
  }
LABEL_122:
  v198 = v241[2];
  v199 = *(_QWORD *)(v198 + 16);
  if (v199)
  {
    v200 = v245 + *(int *)(v250 + 52);
    v201 = v198 + ((*(unsigned __int8 *)(v240 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v240 + 80));
    v202 = *(_QWORD *)(v240 + 72);
    swift_bridgeObjectRetain();
    v203 = 0;
    while (1)
    {
      v204 = v245;
      sub_22643D704(v201, v245, type metadata accessor for CapturedRoom.Surface);
      sub_22643D7A0(v200, v192, (uint64_t *)&unk_255848090);
      sub_22643D748(v204, type metadata accessor for CapturedRoom.Surface);
      v205 = type metadata accessor for CapturedRoom.Surface.Curve(0);
      LODWORD(v204) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v205 - 8) + 48))(v192, 1, v205);
      sub_22643D7E4(v192, (uint64_t *)&unk_255848090);
      if ((_DWORD)v204 != 1)
      {
        v54 = __OFADD__(v203++, 1);
        if (v54)
          break;
      }
      v201 += v202;
      if (!--v199)
        goto LABEL_129;
    }
    __break(1u);
LABEL_129:
    swift_bridgeObjectRelease();
  }
  else
  {
    v203 = 0;
  }
  v206 = sub_22655CFBC();
  v207 = v252;
  swift_beginAccess();
  v208 = swift_isUniquelyReferenced_nonNull_native();
  v253 = (_QWORD *)*v207;
  *v207 = 0x8000000000000000;
  sub_2265235F4(v206, 0x65767275436D754ELL, 0xEE00776F646E6957, v208);
  *v207 = v253;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (*(_QWORD *)(v198 + 16))
  {
    if ((unsigned __int128)(v203 * (__int128)100) >> 64 != (100 * v203) >> 63)
      goto LABEL_160;
    v209 = sub_22655CF68();
    swift_beginAccess();
    v210 = swift_isUniquelyReferenced_nonNull_native();
    v253 = (_QWORD *)*v207;
    *v207 = 0x8000000000000000;
    sub_2265235F4(v209, 0xD00000000000001FLL, 0x800000022656DAC0, v210);
    *v207 = v253;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  v211 = v241[1];
  v212 = *(_QWORD *)(v211 + 16);
  if (v212)
  {
    v213 = v244 + *(int *)(v250 + 52);
    v214 = v211 + ((*(unsigned __int8 *)(v240 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v240 + 80));
    v215 = *(_QWORD *)(v240 + 72);
    swift_bridgeObjectRetain();
    v216 = 0;
    v217 = (uint64_t)v242;
    while (1)
    {
      v218 = v244;
      sub_22643D704(v214, v244, type metadata accessor for CapturedRoom.Surface);
      sub_22643D7A0(v213, v217, (uint64_t *)&unk_255848090);
      sub_22643D748(v218, type metadata accessor for CapturedRoom.Surface);
      v219 = type metadata accessor for CapturedRoom.Surface.Curve(0);
      LODWORD(v218) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v219 - 8) + 48))(v217, 1, v219);
      sub_22643D7E4(v217, (uint64_t *)&unk_255848090);
      if ((_DWORD)v218 != 1)
      {
        v54 = __OFADD__(v216++, 1);
        if (v54)
          break;
      }
      v214 += v215;
      if (!--v212)
        goto LABEL_141;
    }
    __break(1u);
LABEL_141:
    swift_bridgeObjectRelease();
    v207 = v252;
  }
  else
  {
    v216 = 0;
  }
  v220 = sub_22655CFBC();
  swift_beginAccess();
  v221 = swift_isUniquelyReferenced_nonNull_native();
  v253 = (_QWORD *)*v207;
  *v207 = 0x8000000000000000;
  sub_2265235F4(v220, 0x65767275436D754ELL, 0xEC000000726F6F44, v221);
  *v207 = v253;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (*(_QWORD *)(v211 + 16))
  {
    if ((unsigned __int128)(v216 * (__int128)100) >> 64 != (100 * v216) >> 63)
      goto LABEL_161;
    v222 = sub_22655CF68();
    swift_beginAccess();
    v223 = swift_isUniquelyReferenced_nonNull_native();
    v253 = (_QWORD *)*v207;
    *v207 = 0x8000000000000000;
    sub_2265235F4(v222, 0xD00000000000001BLL, 0x800000022656DAA0, v223);
    *v207 = v253;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  v224 = sub_22655CFBC();
  swift_beginAccess();
  v225 = swift_isUniquelyReferenced_nonNull_native();
  v253 = (_QWORD *)*v207;
  *v207 = 0x8000000000000000;
  sub_2265235F4(v224, 0xD000000000000015, 0x800000022656DA40, v225);
  *v207 = v253;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v226 = objc_allocWithZone(MEMORY[0x24BDD17C8]);
  swift_bridgeObjectRetain();
  v227 = (void *)sub_22655CD64();
  swift_bridgeObjectRelease();
  v228 = objc_msgSend(v226, sel_initWithString_, v227);

  swift_beginAccess();
  v229 = swift_isUniquelyReferenced_nonNull_native();
  v253 = (_QWORD *)*v207;
  *v207 = 0x8000000000000000;
  sub_2265235F4((uint64_t)v228, (uint64_t)v247, 0x800000022656DA60, v229);
  *v207 = v253;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v230 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 1);
  swift_beginAccess();
  v231 = swift_isUniquelyReferenced_nonNull_native();
  v253 = (_QWORD *)*v207;
  *v207 = 0x8000000000000000;
  sub_2265235F4((uint64_t)v230, 0xD000000000000012, 0x800000022656DA80, v231);
  *v207 = v253;
  swift_bridgeObjectRelease();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

void sub_2264A7628(char a1)
{
  sub_2264A764C(a1, (uint64_t)&OBJC_IVAR____TtC8RoomPlan16AnalyticsOffline_queue, (uint64_t)&unk_24EDE3360, (uint64_t)sub_2264ABCB0, (uint64_t)&block_descriptor_68);
}

void sub_2264A764C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v9 = sub_22655CBB4();
  v22 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_22655CBFC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_BYTE *)v5 + OBJC_IVAR____TtC8RoomPlan9Analytics_bOptInApple) == 1)
  {
    v21 = v14;
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v5;
    *(_BYTE *)(v17 + 24) = a1 & 1;
    aBlock[4] = a4;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2264FA450;
    aBlock[3] = a5;
    v18 = _Block_copy(aBlock);
    v19 = v5;
    sub_22655CBCC();
    v23 = MEMORY[0x24BEE4AF8];
    sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
    sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
    sub_22655D214();
    MEMORY[0x22769975C](0, v16, v11, v18);
    _Block_release(v18);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v9);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v21);
    swift_release();
  }
}

uint64_t sub_2264A7848(char *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t aBlock;
  uint64_t v24;
  id (*v25)(uint64_t);
  void *v26;
  uint64_t (*v27)();
  uint64_t v28;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255841200);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1[OBJC_IVAR____TtC8RoomPlan9Analytics_bOptInApple] == 1)
  {
    sub_2264A2390();
    v7 = (void *)sub_22655CD64();
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = a1;
    v27 = sub_2264ABABC;
    v28 = v8;
    v9 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v24 = 1107296256;
    v25 = sub_2264A26EC;
    v26 = &block_descriptor_89;
    v10 = _Block_copy(&aBlock);
    v11 = a1;
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v10);

    sub_2264A2390();
    if ((a2 & 1) != 0)
    {
      v12 = (void *)sub_22655CD64();
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = v11;
      v27 = sub_2264ABABC;
      v28 = v13;
      aBlock = v9;
      v24 = 1107296256;
      v14 = &block_descriptor_82;
    }
    else
    {
      v12 = (void *)sub_22655CD64();
      v15 = swift_allocObject();
      *(_QWORD *)(v15 + 16) = v11;
      v27 = sub_2264ABABC;
      v28 = v15;
      aBlock = v9;
      v24 = 1107296256;
      v14 = &block_descriptor_75;
    }
    v25 = sub_2264A26EC;
    v26 = v14;
    v16 = _Block_copy(&aBlock);
    v17 = v11;
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v16);

  }
  v18 = &a1[OBJC_IVAR____TtC8RoomPlan9Analytics_roomPlanStats];
  swift_beginAccess();
  *(_QWORD *)v18 = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRelease();
  v19 = sub_22655C0E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v6, 1, 1, v19);
  v20 = (uint64_t)&a1[OBJC_IVAR____TtC8RoomPlan16AnalyticsOffline_offlineGenerationTimeStart];
  swift_beginAccess();
  sub_2264ABB74((uint64_t)v6, v20);
  return swift_endAccess();
}

id sub_2264A7B0C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  objc_class *v10;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  objc_super v15;
  uint64_t v16;

  v14 = sub_22655D064();
  v1 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_22655D04C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v4);
  v6 = sub_22655CBFC();
  MEMORY[0x24BDAC7A8](v6);
  v13 = OBJC_IVAR____TtC8RoomPlan16AnalyticsOffline_queue;
  v12[1] = sub_22643F548(0, (unint64_t *)&qword_2558442A0);
  v7 = v0;
  sub_22655CBF0();
  v16 = MEMORY[0x24BEE4AF8];
  sub_226437F28((unint64_t *)&qword_2558491E0, v5, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558442B0);
  sub_2264ABAD4((unint64_t *)&qword_2558491F0, (uint64_t *)&unk_2558442B0);
  sub_22655D214();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5750], v14);
  *(_QWORD *)(v12[2] + v13) = sub_22655D088();
  v8 = &v7[OBJC_IVAR____TtC8RoomPlan16AnalyticsOffline_offlineGenerationTimeStart];
  v9 = sub_22655C0E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);

  v10 = (objc_class *)type metadata accessor for AnalyticsOffline(0);
  v15.receiver = v7;
  v15.super_class = v10;
  return objc_msgSendSuper2(&v15, sel_init);
}

uint64_t sub_2264A7D64()
{
  uint64_t v0;

  return sub_22643D7E4(v0 + OBJC_IVAR____TtC8RoomPlan16AnalyticsOffline_offlineGenerationTimeStart, &qword_255841200);
}

id sub_2264A7D9C()
{
  return sub_2264A51E8(0, (uint64_t (*)(void))type metadata accessor for AnalyticsOffline);
}

uint64_t sub_2264A7DF0()
{
  return type metadata accessor for AnalyticsOffline(0);
}

uint64_t type metadata accessor for AnalyticsOffline(uint64_t a1)
{
  return sub_2264AA720(a1, (uint64_t *)&unk_255845230);
}

id sub_2264A7E10(uint64_t a1)
{
  return sub_2264A5390(a1, 0, type metadata accessor for AnalyticsOfflineMultiroom, &qword_25585AEF8);
}

void sub_2264A7E28()
{
  sub_2264A2CB4((uint64_t)&OBJC_IVAR____TtC8RoomPlan25AnalyticsOfflineMultiroom_queue, (uint64_t)&unk_24EDE3860, (uint64_t)sub_2264ABF98, (uint64_t)&block_descriptor_170);
}

uint64_t sub_2264A7E4C(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255841200);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22655C0D4();
  v7 = sub_22655C0E0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 0, 1, v7);
  v8 = a1 + *a2;
  swift_beginAccess();
  sub_2264ABB74((uint64_t)v6, v8);
  return swift_endAccess();
}

void sub_2264A7F10(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  _QWORD v25[2];
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[6];

  v27 = a4;
  v28 = a2;
  v29 = a3;
  v6 = sub_22655CBB4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22655CBFC();
  v30 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CapturedStructure(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v4[OBJC_IVAR____TtC8RoomPlan9Analytics_bOptInApple] == 1)
  {
    v25[1] = *(_QWORD *)&v4[OBJC_IVAR____TtC8RoomPlan25AnalyticsOfflineMultiroom_queue];
    v26 = v10;
    sub_22643D704(a1, (uint64_t)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CapturedStructure);
    v17 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v18 = v17 + v15;
    v25[0] = v7;
    v19 = (v17 + v15) & 0xFFFFFFFFFFFFFFF8;
    v20 = swift_allocObject();
    v21 = v19 + v20;
    *(_QWORD *)(v20 + 16) = v4;
    sub_22643F6AC((uint64_t)v16, v20 + v17, type metadata accessor for CapturedStructure);
    *(_BYTE *)(v20 + v18) = v27 & 1;
    v22 = v29;
    *(_QWORD *)(v21 + 8) = v28;
    *(_QWORD *)(v21 + 16) = v22;
    aBlock[4] = sub_2264ABC9C;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2264FA450;
    aBlock[3] = &block_descriptor_62;
    v23 = _Block_copy(aBlock);
    v24 = v4;
    swift_bridgeObjectRetain();
    sub_22655CBCC();
    v31 = MEMORY[0x24BEE4AF8];
    sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
    sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
    sub_22655D214();
    MEMORY[0x22769975C](0, v12, v9, v23);
    _Block_release(v23);
    (*(void (**)(char *, uint64_t))(v25[0] + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v26);
    swift_release();
  }
}

uint64_t sub_2264A81B4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char isUniquelyReferenced_nonNull_native;
  void (*v37)(char *, uint64_t);
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  int v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  char v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t *v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  unint64_t v74;
  _BOOL8 v75;
  uint64_t v76;
  char v77;
  unint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char v84;
  unint64_t v85;
  unint64_t v86;
  _BOOL8 v87;
  uint64_t v88;
  char v89;
  unint64_t v90;
  char v91;
  uint64_t *v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  _QWORD *v111;
  char v112;
  unint64_t v113;
  uint64_t v114;
  _BOOL8 v115;
  uint64_t v116;
  char v117;
  unint64_t v118;
  char v119;
  _QWORD *v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  uint64_t v135;
  char v136;
  _QWORD *v137;
  uint64_t v138;
  id v139;
  char v140;
  id v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  float32x4_t *v146;
  uint64_t v147;
  double v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  uint64_t v153;
  char v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  char v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  char v162;
  uint64_t v163;
  char v164;
  uint64_t v165;
  char v166;
  uint64_t v167;
  char v168;
  uint64_t v169;
  char v170;
  uint64_t v171;
  char v172;
  uint64_t v173;
  char v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  _QWORD *v189;
  char v190;
  uint64_t v191;
  char v192;
  uint64_t v193;
  char v194;
  uint64_t v195;
  char v196;
  uint64_t v197;
  uint64_t v198;
  _QWORD *v199;
  char v200;
  uint64_t v201;
  char v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  _QWORD *v213;
  char v214;
  uint64_t v215;
  char v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  char v226;
  uint64_t v227;
  char v228;
  uint64_t v229;
  char v230;
  id v231;
  void *v232;
  id v233;
  char v234;
  id v235;
  char v236;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  _QWORD *v249;
  char *v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  unint64_t *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  unint64_t *v258;
  _QWORD *v259;
  _QWORD *v260;
  unint64_t v261;
  unint64_t v262;

  v242 = a5;
  v241 = a4;
  v240 = a3;
  v249 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848090);
  MEMORY[0x24BDAC7A8](v6);
  v243 = (char *)&v238 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v250 = (char *)&v238 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v251 = (char *)&v238 - v11;
  v238 = type metadata accessor for CapturedRoom.Object(0);
  v246 = *(_QWORD *)(v238 - 8);
  MEMORY[0x24BDAC7A8](v238);
  v239 = (char *)&v238 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v258 = (unint64_t *)((char *)&v238 - v14);
  v257 = type metadata accessor for CapturedRoom.Surface(0);
  v248 = *(_QWORD *)(v257 - 8);
  MEMORY[0x24BDAC7A8](v257);
  v252 = (uint64_t)&v238 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v253 = (uint64_t)&v238 - v17;
  MEMORY[0x24BDAC7A8](v18);
  v256 = (uint64_t)&v238 - v19;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (unsigned __int8 *)&v238 - v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255841200);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v238 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_22655C0E0();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v238 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v238 - v31;
  v33 = a1 + OBJC_IVAR____TtC8RoomPlan25AnalyticsOfflineMultiroom_offlineMultiroomGenerationTimeStart;
  swift_beginAccess();
  sub_22643D7A0(v33, (uint64_t)v25, &qword_255841200);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    sub_22643D7E4((uint64_t)v25, &qword_255841200);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v32, v25, v26);
    sub_22655C0D4();
    sub_22655C0A4();
    v34 = sub_22655CF68();
    v35 = (_QWORD *)(a1 + OBJC_IVAR____TtC8RoomPlan9Analytics_roomPlanStats);
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v260 = (_QWORD *)*v35;
    *v35 = 0x8000000000000000;
    sub_2265235F4(v34, 0xD000000000000021, 0x800000022656D7A0, isUniquelyReferenced_nonNull_native);
    *v35 = v260;
    swift_bridgeObjectRelease();
    swift_endAccess();
    v37 = *(void (**)(char *, uint64_t))(v27 + 8);
    v37(v29, v26);
    v37(v32, v26);
  }
  v38 = v249;
  v39 = sub_22655CFBC();
  v40 = a1 + OBJC_IVAR____TtC8RoomPlan9Analytics_roomPlanStats;
  swift_beginAccess();
  v41 = swift_isUniquelyReferenced_nonNull_native();
  v260 = *(_QWORD **)v40;
  *(_QWORD *)v40 = 0x8000000000000000;
  v245 = 0xD000000000000010;
  sub_2265235F4(v39, 0xD000000000000010, 0x800000022656D2A0, v41);
  *(_QWORD *)v40 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v42 = sub_22655CFBC();
  swift_beginAccess();
  v43 = swift_isUniquelyReferenced_nonNull_native();
  v260 = *(_QWORD **)v40;
  *(_QWORD *)v40 = 0x8000000000000000;
  sub_2265235F4(v42, 0xD000000000000012, 0x800000022656D2C0, v43);
  *(_QWORD *)v40 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v44 = sub_22655CFBC();
  swift_beginAccess();
  v45 = swift_isUniquelyReferenced_nonNull_native();
  v260 = *(_QWORD **)v40;
  *(_QWORD *)v40 = 0x8000000000000000;
  v244 = 0xD000000000000013;
  sub_2265235F4(v44, 0xD000000000000013, 0x800000022656D2E0, v45);
  *(_QWORD *)v40 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v254 = (unint64_t *)v38[5];
  v46 = sub_22655CFBC();
  swift_beginAccess();
  v47 = swift_isUniquelyReferenced_nonNull_native();
  v260 = *(_QWORD **)v40;
  *(_QWORD *)v40 = 0x8000000000000000;
  sub_2265235F4(v46, 0xD000000000000012, 0x800000022656D300, v47);
  *(_QWORD *)v40 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v48 = v38[2];
  v49 = *(_QWORD *)(v48 + 16);
  v259 = (_QWORD *)v40;
  if (!v49)
    goto LABEL_14;
  v50 = v48 + ((*(unsigned __int8 *)(v248 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v248 + 80));
  v51 = *(_QWORD *)(v248 + 72);
  swift_bridgeObjectRetain();
  v52 = 0;
  v53 = 0;
  while (1)
  {
    sub_22643D704(v50, (uint64_t)v22, type metadata accessor for CapturedRoom.Surface);
    v55 = *v22;
    sub_22643D748((uint64_t)v22, type metadata accessor for CapturedRoom.Surface);
    if ((v55 - 2) >= 4)
    {
      if ((v55 & 1) == 0)
      {
        v54 = __OFADD__(v53++, 1);
        if (v54)
          goto LABEL_155;
        goto LABEL_7;
      }
      v54 = __OFADD__(v52++, 1);
      if (v54)
        break;
    }
LABEL_7:
    v50 += v51;
    if (!--v49)
      goto LABEL_13;
  }
  __break(1u);
LABEL_13:
  swift_bridgeObjectRelease();
  v40 = (unint64_t)v259;
LABEL_14:
  v56 = sub_22655CFBC();
  swift_beginAccess();
  v57 = swift_isUniquelyReferenced_nonNull_native();
  v260 = *(_QWORD **)v40;
  *(_QWORD *)v40 = 0x8000000000000000;
  v247 = 0xD000000000000015;
  sub_2265235F4(v56, 0xD000000000000015, 0x800000022656D320, v57);
  *(_QWORD *)v40 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v58 = sub_22655CFBC();
  swift_beginAccess();
  v59 = swift_isUniquelyReferenced_nonNull_native();
  v260 = *(_QWORD **)v40;
  *(_QWORD *)v40 = 0x8000000000000000;
  sub_2265235F4(v58, 0xD000000000000014, 0x800000022656D340, v59);
  *(_QWORD *)v40 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v60 = v254[2];
  if (!v60)
  {
    v62 = (unint64_t *)MEMORY[0x24BEE4B00];
    goto LABEL_46;
  }
  v61 = (uint64_t)v254 + ((*(unsigned __int8 *)(v246 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v246 + 80));
  v255 = *(_QWORD *)(v246 + 72);
  swift_bridgeObjectRetain();
  v62 = (unint64_t *)MEMORY[0x24BEE4B00];
  v63 = v258;
  while (2)
  {
    sub_22643D704(v61, (uint64_t)v63, type metadata accessor for CapturedRoom.Object);
    v64 = *(_BYTE *)v63;
    LOBYTE(v261) = *(_BYTE *)v63;
    v65 = sub_22655CDDC();
    if (!v62[2])
    {
      swift_bridgeObjectRelease();
LABEL_27:
      LOBYTE(v261) = v64;
      v80 = sub_22655CDDC();
      v82 = v81;
      v83 = swift_isUniquelyReferenced_nonNull_native();
      v261 = (unint64_t)v62;
      v85 = sub_2265348F0(v80, v82);
      v86 = v62[2];
      v87 = (v84 & 1) == 0;
      v88 = v86 + v87;
      if (__OFADD__(v86, v87))
        goto LABEL_150;
      v89 = v84;
      if ((uint64_t)v62[3] < v88)
      {
        sub_226544C60(v88, v83);
        v90 = sub_2265348F0(v80, v82);
        if ((v89 & 1) != (v91 & 1))
          goto LABEL_162;
        v85 = v90;
        v62 = (unint64_t *)v261;
        if ((v89 & 1) == 0)
          goto LABEL_34;
LABEL_16:
        *(_QWORD *)(v62[7] + 8 * v85) = 1;
LABEL_17:
        swift_bridgeObjectRelease();
LABEL_18:
        swift_bridgeObjectRelease();
        v63 = v258;
        v40 = (unint64_t)v259;
        sub_22643D748((uint64_t)v258, type metadata accessor for CapturedRoom.Object);
        v61 += v255;
        if (!--v60)
          goto LABEL_44;
        continue;
      }
      if ((v83 & 1) != 0)
      {
        v62 = (unint64_t *)v261;
        if ((v84 & 1) != 0)
          goto LABEL_16;
      }
      else
      {
        sub_226549E78();
        v62 = (unint64_t *)v261;
        if ((v89 & 1) != 0)
          goto LABEL_16;
      }
LABEL_34:
      v62[(v85 >> 6) + 8] |= 1 << v85;
      v92 = (uint64_t *)(v62[6] + 16 * v85);
      *v92 = v80;
      v92[1] = v82;
      *(_QWORD *)(v62[7] + 8 * v85) = 1;
      v93 = v62[2];
      v54 = __OFADD__(v93, 1);
      v94 = v93 + 1;
      if (v54)
        goto LABEL_152;
      v62[2] = v94;
      swift_bridgeObjectRetain();
      goto LABEL_17;
    }
    break;
  }
  sub_2265348F0(v65, v66);
  v68 = v67;
  swift_bridgeObjectRelease();
  if ((v68 & 1) == 0)
    goto LABEL_27;
  LOBYTE(v261) = v64;
  v69 = sub_22655CDDC();
  v71 = v70;
  v72 = swift_isUniquelyReferenced_nonNull_native();
  v261 = (unint64_t)v62;
  swift_bridgeObjectRetain();
  v40 = sub_2265348F0(v69, v71);
  v74 = v62[2];
  v75 = (v73 & 1) == 0;
  v76 = v74 + v75;
  if (__OFADD__(v74, v75))
    goto LABEL_153;
  v77 = v73;
  if ((uint64_t)v62[3] >= v76)
  {
    if ((v72 & 1) != 0)
    {
      if ((v73 & 1) == 0)
        goto LABEL_43;
    }
    else
    {
      v62 = &v261;
      sub_226549E78();
      if ((v77 & 1) == 0)
        goto LABEL_43;
    }
    goto LABEL_38;
  }
  sub_226544C60(v76, v72);
  v62 = (unint64_t *)v261;
  v78 = sub_2265348F0(v69, v71);
  if ((v77 & 1) != (v79 & 1))
    goto LABEL_162;
  v40 = v78;
  if ((v77 & 1) != 0)
  {
LABEL_38:
    v95 = *(_QWORD *)(v261 + 56);
    v96 = *(_QWORD *)(v95 + 8 * v40);
    v54 = __OFADD__(v96, 1);
    v97 = v96 + 1;
    if (v54)
      goto LABEL_154;
    *(_QWORD *)(v95 + 8 * v40) = v97;
    swift_bridgeObjectRelease();
    v62 = (unint64_t *)v261;
    goto LABEL_18;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  swift_bridgeObjectRelease();
LABEL_46:
  v98 = v62[8];
  v254 = v62 + 8;
  v99 = 1 << *((_BYTE *)v62 + 32);
  v100 = -1;
  if (v99 < 64)
    v100 = ~(-1 << v99);
  v101 = v100 & v98;
  v255 = (unint64_t)(v99 + 63) >> 6;
  v258 = v62;
  swift_bridgeObjectRetain();
  v102 = 0;
  while (2)
  {
    if (v101)
    {
      v101 &= v101 - 1;
      goto LABEL_67;
    }
    v104 = v102 + 1;
    if (__OFADD__(v102, 1))
      goto LABEL_149;
    if (v104 < v255)
    {
      v105 = v254[v104];
      ++v102;
      if (!v105)
      {
        v102 = v104 + 1;
        if (v104 + 1 >= v255)
          break;
        v105 = v254[v102];
        if (!v105)
        {
          v102 = v104 + 2;
          if (v104 + 2 >= v255)
            break;
          v105 = v254[v102];
          if (!v105)
          {
            v106 = v104 + 3;
            if (v106 >= v255)
              break;
            v105 = v254[v106];
            if (!v105)
            {
              while (1)
              {
                v102 = v106 + 1;
                if (__OFADD__(v106, 1))
                  break;
                if (v102 >= v255)
                  goto LABEL_78;
                v105 = v254[v102];
                ++v106;
                if (v105)
                  goto LABEL_66;
              }
LABEL_156:
              __break(1u);
              JUMPOUT(0x2264AA1F8);
            }
            v102 = v106;
          }
        }
      }
LABEL_66:
      v101 = (v105 - 1) & v105;
LABEL_67:
      v261 = 0xD00000000000001BLL;
      v262 = 0x800000022656D360;
      sub_22655CE24();
      v108 = v261;
      v107 = v262;
      v109 = sub_22655CFBC();
      swift_beginAccess();
      v110 = swift_isUniquelyReferenced_nonNull_native();
      v260 = *(_QWORD **)v40;
      v111 = v260;
      *(_QWORD *)v40 = 0x8000000000000000;
      v113 = sub_2265348F0(v108, v107);
      v114 = v111[2];
      v115 = (v112 & 1) == 0;
      v116 = v114 + v115;
      if (!__OFADD__(v114, v115))
      {
        v117 = v112;
        if (v111[3] >= v116)
        {
          if ((v110 & 1) != 0)
          {
            v120 = v260;
            if ((v112 & 1) == 0)
              goto LABEL_74;
          }
          else
          {
            sub_226549CC8();
            v120 = v260;
            if ((v117 & 1) == 0)
              goto LABEL_74;
          }
        }
        else
        {
          sub_226544954(v116, v110);
          v118 = sub_2265348F0(v108, v107);
          if ((v117 & 1) != (v119 & 1))
            goto LABEL_162;
          v113 = v118;
          v120 = v260;
          if ((v117 & 1) == 0)
          {
LABEL_74:
            v120[(v113 >> 6) + 8] |= 1 << v113;
            v121 = (uint64_t *)(v120[6] + 16 * v113);
            *v121 = v108;
            v121[1] = v107;
            *(_QWORD *)(v120[7] + 8 * v113) = v109;
            v122 = v120[2];
            v54 = __OFADD__(v122, 1);
            v123 = v122 + 1;
            if (v54)
              goto LABEL_148;
            v120[2] = v123;
            swift_bridgeObjectRetain();
            goto LABEL_50;
          }
        }
        v103 = v120[7];

        *(_QWORD *)(v103 + 8 * v113) = v109;
LABEL_50:
        v40 = (unint64_t)v259;
        *v259 = v120;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        continue;
      }
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
      goto LABEL_156;
    }
    break;
  }
LABEL_78:
  swift_release();
  v124 = v249[5];
  v125 = *(_QWORD *)(v124 + 16);
  if (v125)
  {
    v126 = *(int *)(v238 + 36);
    v127 = v124 + ((*(unsigned __int8 *)(v246 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v246 + 80));
    v128 = *(_QWORD *)(v246 + 72);
    swift_bridgeObjectRetain();
    v129 = 0;
    v130 = (uint64_t)v239;
    while (1)
    {
      sub_22643D704(v127, v130, type metadata accessor for CapturedRoom.Object);
      v131 = *(_QWORD *)(v130 + v126);
      swift_bridgeObjectRetain();
      sub_22643D748(v130, type metadata accessor for CapturedRoom.Object);
      v132 = *(_QWORD *)(v131 + 16);
      swift_bridgeObjectRelease();
      if (v132)
      {
        v54 = __OFADD__(v129++, 1);
        if (v54)
          break;
      }
      v127 += v128;
      if (!--v125)
        goto LABEL_85;
    }
    __break(1u);
LABEL_85:
    swift_bridgeObjectRelease();
    v40 = (unint64_t)v259;
  }
  else
  {
    v129 = 0;
  }
  v133 = sub_22655CFBC();
  swift_beginAccess();
  v134 = swift_isUniquelyReferenced_nonNull_native();
  v260 = *(_QWORD **)v40;
  *(_QWORD *)v40 = 0x8000000000000000;
  sub_2265235F4(v133, 0xD00000000000001FLL, 0x800000022656D380, v134);
  *(_QWORD *)v40 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (*(_QWORD *)(v124 + 16))
  {
    if ((unsigned __int128)(v129 * (__int128)100) >> 64 != (100 * v129) >> 63)
    {
      __break(1u);
      goto LABEL_158;
    }
    v135 = sub_22655CF68();
    swift_beginAccess();
    v136 = swift_isUniquelyReferenced_nonNull_native();
    v260 = *(_QWORD **)v40;
    *(_QWORD *)v40 = 0x8000000000000000;
    sub_2265235F4(v135, 0xD000000000000030, 0x800000022656D760, v136);
    *(_QWORD *)v40 = v260;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  v137 = v249;
  v138 = v249[6];
  v139 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, *(_QWORD *)(v138 + 16));
  swift_beginAccess();
  v140 = swift_isUniquelyReferenced_nonNull_native();
  v260 = *(_QWORD **)v40;
  *(_QWORD *)v40 = 0x8000000000000000;
  sub_2265235F4((uint64_t)v139, 0xD000000000000011, 0x800000022656D3A0, v140);
  *(_QWORD *)v40 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v141 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, *(_QWORD *)(*v137 + 16));
  swift_beginAccess();
  v142 = swift_isUniquelyReferenced_nonNull_native();
  v260 = *(_QWORD **)v40;
  *(_QWORD *)v40 = 0x8000000000000000;
  sub_2265235F4((uint64_t)v141, v245, 0x800000022656D3C0, v142);
  *(_QWORD *)v40 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v143 = *(_QWORD *)(v138 + 16);
  if (!v143)
    goto LABEL_101;
  v144 = 0;
  v145 = 0;
  v146 = (float32x4_t *)(v138
                       + ((*(unsigned __int8 *)(v248 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v248 + 80)));
  v148 = 0.0;
  v149 = 0x7FFFFFFFFFFFFFFFLL;
  while (2)
  {
    v147 = *(int *)(v257 + 60);
    v150 = *(_QWORD *)(*(uint64_t *)((char *)v146->i64 + v147) + 16);
    if (!v150)
    {
LABEL_96:
      v148 = v148 + vmulq_lane_f32(v146[1], *(float32x2_t *)v146[1].f32, 1).f32[0];
      v146 = (float32x4_t *)((char *)v146 + *(_QWORD *)(v248 + 72));
      if (!--v143)
        goto LABEL_101;
      continue;
    }
    break;
  }
  v54 = __OFADD__(v145++, 1);
  if (!v54)
  {
    if (v150 > v144)
      v144 = *(_QWORD *)(*(uint64_t *)((char *)v146->i64 + v147) + 16);
    if (v150 < v149)
      v149 = *(_QWORD *)(*(uint64_t *)((char *)v146->i64 + v147) + 16);
    goto LABEL_96;
  }
  __break(1u);
LABEL_101:
  v151 = sub_22655CF68();
  swift_beginAccess();
  v152 = swift_isUniquelyReferenced_nonNull_native();
  v260 = *(_QWORD **)v40;
  *(_QWORD *)v40 = 0x8000000000000000;
  sub_2265235F4(v151, 0xD00000000000001BLL, 0x800000022656D3E0, v152);
  *(_QWORD *)v40 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v153 = sub_22655CFBC();
  swift_beginAccess();
  v154 = swift_isUniquelyReferenced_nonNull_native();
  v260 = *(_QWORD **)v40;
  *(_QWORD *)v40 = 0x8000000000000000;
  sub_2265235F4(v153, 0xD00000000000001CLL, 0x800000022656D400, v154);
  *(_QWORD *)v40 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v155 = sub_22655CFBC();
  swift_beginAccess();
  v156 = swift_isUniquelyReferenced_nonNull_native();
  v260 = *(_QWORD **)v40;
  *(_QWORD *)v40 = 0x8000000000000000;
  sub_2265235F4(v155, 0xD000000000000024, 0x800000022656D420, v156);
  *(_QWORD *)v40 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v157 = sub_22655CFBC();
  swift_beginAccess();
  v158 = swift_isUniquelyReferenced_nonNull_native();
  v260 = *(_QWORD **)v40;
  *(_QWORD *)v40 = 0x8000000000000000;
  sub_2265235F4(v157, 0xD000000000000024, 0x800000022656D450, v158);
  *(_QWORD *)v40 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v159 = v249[7];
  if (*(_QWORD *)(v159 + 16))
    __asm { BR              X12 }
  v160 = sub_22655CFBC();
  v161 = v259;
  swift_beginAccess();
  v162 = swift_isUniquelyReferenced_nonNull_native();
  v260 = (_QWORD *)*v161;
  *v161 = 0x8000000000000000;
  sub_2265235F4(v160, v244, 0x800000022656D480, v162);
  *v161 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v163 = sub_22655CFBC();
  swift_beginAccess();
  v164 = swift_isUniquelyReferenced_nonNull_native();
  v260 = (_QWORD *)*v161;
  *v161 = 0x8000000000000000;
  v255 = 0xD00000000000001DLL;
  sub_2265235F4(v163, 0xD00000000000001DLL, 0x800000022656D4A0, v164);
  *v161 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v165 = sub_22655CFBC();
  swift_beginAccess();
  v166 = swift_isUniquelyReferenced_nonNull_native();
  v260 = (_QWORD *)*v161;
  *v161 = 0x8000000000000000;
  sub_2265235F4(v165, 0xD00000000000001ALL, 0x800000022656D4C0, v166);
  *v161 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v167 = sub_22655CFBC();
  swift_beginAccess();
  v168 = swift_isUniquelyReferenced_nonNull_native();
  v260 = (_QWORD *)*v161;
  *v161 = 0x8000000000000000;
  sub_2265235F4(v167, 0xD00000000000001BLL, 0x800000022656D4E0, v168);
  *v161 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v169 = sub_22655CFBC();
  swift_beginAccess();
  v170 = swift_isUniquelyReferenced_nonNull_native();
  v260 = (_QWORD *)*v161;
  *v161 = 0x8000000000000000;
  sub_2265235F4(v169, 0xD00000000000001ALL, 0x800000022656D500, v170);
  *v161 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v171 = sub_22655CFBC();
  swift_beginAccess();
  v172 = swift_isUniquelyReferenced_nonNull_native();
  v260 = (_QWORD *)*v161;
  *v161 = 0x8000000000000000;
  sub_2265235F4(v171, v255, 0x800000022656D520, v172);
  *v161 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v173 = sub_22655CFBC();
  swift_beginAccess();
  v174 = swift_isUniquelyReferenced_nonNull_native();
  v260 = (_QWORD *)*v161;
  *v161 = 0x8000000000000000;
  v254 = (unint64_t *)0xD000000000000019;
  sub_2265235F4(v173, 0xD000000000000019, 0x800000022656D540, v174);
  *v161 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v175 = v249[1];
  v176 = *(_QWORD *)(v175 + 16);
  if (v176)
  {
    v177 = v175 + ((*(unsigned __int8 *)(v248 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v248 + 80));
    v255 = *(_QWORD *)(v248 + 72);
    v246 = v175;
    swift_bridgeObjectRetain();
    v178 = 0;
    v179 = 0;
    v180 = 0;
    v181 = 0x7FFFFFFFFFFFFFFFLL;
    v182 = (uint64_t)v251;
    while (1)
    {
      v183 = v256;
      sub_22643D704(v177, v256, type metadata accessor for CapturedRoom.Surface);
      v184 = *(_QWORD *)(*(_QWORD *)(v183 + *(int *)(v257 + 60)) + 16);
      if (v184)
      {
        v54 = __OFADD__(v180++, 1);
        if (v54)
          goto LABEL_151;
        if (v184 > v179)
          v179 = *(_QWORD *)(*(_QWORD *)(v183 + *(int *)(v257 + 60)) + 16);
        if (v184 < v181)
          v181 = *(_QWORD *)(*(_QWORD *)(v183 + *(int *)(v257 + 60)) + 16);
      }
      v185 = v256;
      sub_22643D7A0(v256 + *(int *)(v257 + 52), v182, (uint64_t *)&unk_255848090);
      sub_22643D748(v185, type metadata accessor for CapturedRoom.Surface);
      v186 = type metadata accessor for CapturedRoom.Surface.Curve(0);
      LODWORD(v185) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v186 - 8) + 48))(v182, 1, v186);
      sub_22643D7E4(v182, (uint64_t *)&unk_255848090);
      if ((_DWORD)v185 != 1)
      {
        v54 = __OFADD__(v178++, 1);
        if (v54)
          break;
      }
      v177 += v255;
      if (!--v176)
        goto LABEL_116;
    }
    __break(1u);
LABEL_116:
    v187 = v246;
    swift_bridgeObjectRelease();
  }
  else
  {
    v178 = 0;
    v180 = 0;
    v187 = v249[1];
  }
  v188 = sub_22655CFBC();
  v189 = v259;
  swift_beginAccess();
  v190 = swift_isUniquelyReferenced_nonNull_native();
  v260 = (_QWORD *)*v189;
  *v189 = 0x8000000000000000;
  sub_2265235F4(v188, 0xD00000000000001BLL, 0x800000022656D560, v190);
  *v189 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v191 = sub_22655CFBC();
  swift_beginAccess();
  v192 = swift_isUniquelyReferenced_nonNull_native();
  v260 = (_QWORD *)*v189;
  *v189 = 0x8000000000000000;
  sub_2265235F4(v191, 0xD000000000000023, 0x800000022656D580, v192);
  *v189 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v193 = sub_22655CFBC();
  swift_beginAccess();
  v194 = swift_isUniquelyReferenced_nonNull_native();
  v260 = (_QWORD *)*v189;
  *v189 = 0x8000000000000000;
  sub_2265235F4(v193, 0xD000000000000023, 0x800000022656D5B0, v194);
  *v189 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v195 = sub_22655CFBC();
  swift_beginAccess();
  v196 = swift_isUniquelyReferenced_nonNull_native();
  v260 = (_QWORD *)*v189;
  *v189 = 0x8000000000000000;
  sub_2265235F4(v195, v247, 0x800000022656D5E0, v196);
  *v189 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v197 = (uint64_t)v243;
  if (*(_QWORD *)(v187 + 16))
  {
    if ((unsigned __int128)(v180 * (__int128)100) >> 64 == (100 * v180) >> 63)
    {
      v198 = sub_22655CF68();
      v199 = v259;
      swift_beginAccess();
      v200 = swift_isUniquelyReferenced_nonNull_native();
      v260 = (_QWORD *)*v199;
      *v199 = 0x8000000000000000;
      sub_2265235F4(v198, 0xD00000000000002ALL, 0x800000022656D700, v200);
      *v199 = v260;
      swift_bridgeObjectRelease();
      swift_endAccess();
      if ((unsigned __int128)(v178 * (__int128)100) >> 64 == (100 * v178) >> 63)
      {
        v201 = sub_22655CF68();
        swift_beginAccess();
        v202 = swift_isUniquelyReferenced_nonNull_native();
        v260 = (_QWORD *)*v199;
        *v199 = 0x8000000000000000;
        sub_2265235F4(v201, 0xD000000000000024, 0x800000022656D730, v202);
        *v199 = v260;
        swift_bridgeObjectRelease();
        swift_endAccess();
        goto LABEL_122;
      }
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
LABEL_162:
      sub_22655D5A4();
      __break(1u);
      JUMPOUT(0x2264AA230);
    }
LABEL_158:
    __break(1u);
    goto LABEL_159;
  }
LABEL_122:
  v203 = v249[3];
  v204 = *(_QWORD *)(v203 + 16);
  if (v204)
  {
    v205 = v253 + *(int *)(v257 + 52);
    v206 = v203 + ((*(unsigned __int8 *)(v248 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v248 + 80));
    v207 = *(_QWORD *)(v248 + 72);
    v256 = v249[3];
    swift_bridgeObjectRetain();
    v208 = 0;
    v209 = (uint64_t)v250;
    while (1)
    {
      v210 = v253;
      sub_22643D704(v206, v253, type metadata accessor for CapturedRoom.Surface);
      sub_22643D7A0(v205, v209, (uint64_t *)&unk_255848090);
      sub_22643D748(v210, type metadata accessor for CapturedRoom.Surface);
      v211 = type metadata accessor for CapturedRoom.Surface.Curve(0);
      LODWORD(v210) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v211 - 8) + 48))(v209, 1, v211);
      sub_22643D7E4(v209, (uint64_t *)&unk_255848090);
      if ((_DWORD)v210 != 1)
      {
        v54 = __OFADD__(v208++, 1);
        if (v54)
          break;
      }
      v206 += v207;
      if (!--v204)
        goto LABEL_129;
    }
    __break(1u);
LABEL_129:
    v203 = v256;
    swift_bridgeObjectRelease();
  }
  else
  {
    v208 = 0;
  }
  v212 = sub_22655CFBC();
  v213 = v259;
  swift_beginAccess();
  v214 = swift_isUniquelyReferenced_nonNull_native();
  v260 = (_QWORD *)*v213;
  *v213 = 0x8000000000000000;
  sub_2265235F4(v212, 0xD000000000000017, 0x800000022656D600, v214);
  *v213 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (*(_QWORD *)(v203 + 16))
  {
    if ((unsigned __int128)(v208 * (__int128)100) >> 64 != (100 * v208) >> 63)
      goto LABEL_160;
    v215 = sub_22655CF68();
    swift_beginAccess();
    v216 = swift_isUniquelyReferenced_nonNull_native();
    v260 = (_QWORD *)*v213;
    *v213 = 0x8000000000000000;
    sub_2265235F4(v215, 0xD000000000000028, 0x800000022656D6D0, v216);
    *v213 = v260;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  v217 = v249[2];
  v218 = *(_QWORD *)(v217 + 16);
  if (v218)
  {
    v219 = v252 + *(int *)(v257 + 52);
    v220 = v217 + ((*(unsigned __int8 *)(v248 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v248 + 80));
    v221 = *(_QWORD *)(v248 + 72);
    swift_bridgeObjectRetain();
    v222 = 0;
    while (1)
    {
      v223 = v252;
      sub_22643D704(v220, v252, type metadata accessor for CapturedRoom.Surface);
      sub_22643D7A0(v219, v197, (uint64_t *)&unk_255848090);
      sub_22643D748(v223, type metadata accessor for CapturedRoom.Surface);
      v224 = type metadata accessor for CapturedRoom.Surface.Curve(0);
      LODWORD(v223) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v224 - 8) + 48))(v197, 1, v224);
      sub_22643D7E4(v197, (uint64_t *)&unk_255848090);
      if ((_DWORD)v223 != 1)
      {
        v54 = __OFADD__(v222++, 1);
        if (v54)
          break;
      }
      v220 += v221;
      if (!--v218)
        goto LABEL_141;
    }
    __break(1u);
LABEL_141:
    swift_bridgeObjectRelease();
    v213 = v259;
  }
  else
  {
    v222 = 0;
  }
  v225 = sub_22655CFBC();
  swift_beginAccess();
  v226 = swift_isUniquelyReferenced_nonNull_native();
  v260 = (_QWORD *)*v213;
  *v213 = 0x8000000000000000;
  sub_2265235F4(v225, v247, 0x800000022656D620, v226);
  *v213 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (*(_QWORD *)(v217 + 16))
  {
    if ((unsigned __int128)(v222 * (__int128)100) >> 64 != (100 * v222) >> 63)
      goto LABEL_161;
    v227 = sub_22655CF68();
    swift_beginAccess();
    v228 = swift_isUniquelyReferenced_nonNull_native();
    v260 = (_QWORD *)*v213;
    *v213 = 0x8000000000000000;
    sub_2265235F4(v227, 0xD000000000000024, 0x800000022656D6A0, v228);
    *v213 = v260;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  v229 = sub_22655CFBC();
  swift_beginAccess();
  v230 = swift_isUniquelyReferenced_nonNull_native();
  v260 = (_QWORD *)*v213;
  *v213 = 0x8000000000000000;
  sub_2265235F4(v229, 0xD00000000000001ELL, 0x800000022656D640, v230);
  *v213 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v231 = objc_allocWithZone(MEMORY[0x24BDD17C8]);
  swift_bridgeObjectRetain();
  v232 = (void *)sub_22655CD64();
  swift_bridgeObjectRelease();
  v233 = objc_msgSend(v231, sel_initWithString_, v232);

  swift_beginAccess();
  v234 = swift_isUniquelyReferenced_nonNull_native();
  v260 = (_QWORD *)*v213;
  *v213 = 0x8000000000000000;
  sub_2265235F4((uint64_t)v233, (uint64_t)v254, 0x800000022656D660, v234);
  *v213 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v235 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 1);
  swift_beginAccess();
  v236 = swift_isUniquelyReferenced_nonNull_native();
  v260 = (_QWORD *)*v213;
  *v213 = 0x8000000000000000;
  sub_2265235F4((uint64_t)v235, 0xD00000000000001BLL, 0x800000022656D680, v236);
  *v213 = v260;
  swift_bridgeObjectRelease();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

void sub_2264AA248()
{
  sub_2264A2CB4((uint64_t)&OBJC_IVAR____TtC8RoomPlan25AnalyticsOfflineMultiroom_queue, (uint64_t)&unk_24EDE3270, (uint64_t)sub_2264ABB6C, (uint64_t)&block_descriptor_49);
}

uint64_t sub_2264AA26C(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD aBlock[6];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255841200);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&aBlock[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1[OBJC_IVAR____TtC8RoomPlan9Analytics_bOptInApple] == 1)
  {
    sub_2264A2390();
    v5 = (void *)sub_22655CD64();
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = a1;
    aBlock[4] = sub_2264ABABC;
    aBlock[5] = v6;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2264A26EC;
    aBlock[3] = &block_descriptor_56;
    v7 = _Block_copy(aBlock);
    v8 = a1;
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v7);

  }
  v9 = &a1[OBJC_IVAR____TtC8RoomPlan9Analytics_roomPlanStats];
  swift_beginAccess();
  *(_QWORD *)v9 = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRelease();
  v10 = sub_22655C0E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
  v11 = (uint64_t)&a1[OBJC_IVAR____TtC8RoomPlan25AnalyticsOfflineMultiroom_offlineMultiroomGenerationTimeStart];
  swift_beginAccess();
  sub_2264ABB74((uint64_t)v4, v11);
  return swift_endAccess();
}

id sub_2264AA420()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  objc_class *v10;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  objc_super v15;
  uint64_t v16;

  v14 = sub_22655D064();
  v1 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_22655D04C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v4);
  v6 = sub_22655CBFC();
  MEMORY[0x24BDAC7A8](v6);
  v13 = OBJC_IVAR____TtC8RoomPlan25AnalyticsOfflineMultiroom_queue;
  v12[1] = sub_22643F548(0, (unint64_t *)&qword_2558442A0);
  v7 = v0;
  sub_22655CBF0();
  v16 = MEMORY[0x24BEE4AF8];
  sub_226437F28((unint64_t *)&qword_2558491E0, v5, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558442B0);
  sub_2264ABAD4((unint64_t *)&qword_2558491F0, (uint64_t *)&unk_2558442B0);
  sub_22655D214();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5750], v14);
  *(_QWORD *)(v12[2] + v13) = sub_22655D088();
  v8 = &v7[OBJC_IVAR____TtC8RoomPlan25AnalyticsOfflineMultiroom_offlineMultiroomGenerationTimeStart];
  v9 = sub_22655C0E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);

  v10 = (objc_class *)type metadata accessor for AnalyticsOfflineMultiroom(0);
  v15.receiver = v7;
  v15.super_class = v10;
  return objc_msgSendSuper2(&v15, sel_init);
}

uint64_t sub_2264AA678()
{
  uint64_t v0;

  return sub_22643D7E4(v0 + OBJC_IVAR____TtC8RoomPlan25AnalyticsOfflineMultiroom_offlineMultiroomGenerationTimeStart, &qword_255841200);
}

id sub_2264AA6B0()
{
  return sub_2264A51E8(0, (uint64_t (*)(void))type metadata accessor for AnalyticsOfflineMultiroom);
}

uint64_t sub_2264AA704()
{
  return type metadata accessor for AnalyticsOfflineMultiroom(0);
}

uint64_t type metadata accessor for AnalyticsOfflineMultiroom(uint64_t a1)
{
  return sub_2264AA720(a1, (uint64_t *)&unk_255845278);
}

uint64_t sub_2264AA720(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2264AA754()
{
  unint64_t v0;

  sub_226453DCC();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

id sub_2264AA7D0(uint64_t a1, uint64_t a2)
{
  return sub_2264A5390(a1, a2, (uint64_t (*)(uint64_t))type metadata accessor for AnalyticsUI, &qword_25585AF00);
}

void sub_2264AA7E4(char a1)
{
  sub_2264A764C(a1, (uint64_t)&OBJC_IVAR____TtC8RoomPlan11AnalyticsUI_queue, (uint64_t)&unk_24EDE3220, (uint64_t)sub_2264ABB54, (uint64_t)&block_descriptor_43);
}

void sub_2264AA808(double a1)
{
  sub_2264AA82C(a1, (uint64_t)&OBJC_IVAR____TtC8RoomPlan11AnalyticsUI_queue, (uint64_t)&unk_24EDE31D0, (uint64_t)sub_2264ABB24, (uint64_t)&block_descriptor_37);
}

void sub_2264AA82C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  _QWORD v19[2];
  _QWORD aBlock[6];

  v9 = sub_22655CBB4();
  v19[0] = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_22655CBFC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_BYTE *)v5 + OBJC_IVAR____TtC8RoomPlan9Analytics_bOptInApple) == 1)
  {
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v5;
    *(double *)(v16 + 24) = a1;
    aBlock[4] = a4;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2264FA450;
    aBlock[3] = a5;
    v17 = _Block_copy(aBlock);
    v18 = v5;
    sub_22655CBCC();
    v19[1] = MEMORY[0x24BEE4AF8];
    sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
    sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
    sub_22655D214();
    MEMORY[0x22769975C](0, v15, v11, v17);
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v19[0] + 8))(v11, v9);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    swift_release();
  }
}

uint64_t sub_2264AAA2C(uint64_t a1, double a2)
{
  _QWORD **v3;
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v6;
  unint64_t v7;

  v3 = (_QWORD **)(a1 + OBJC_IVAR____TtC8RoomPlan11AnalyticsUI_arViewDeltaTimeArray);
  swift_beginAccess();
  v4 = *v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v3 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v4 = sub_22648878C(0, v4[2] + 1, 1, v4);
    *v3 = v4;
  }
  v7 = v4[2];
  v6 = v4[3];
  if (v7 >= v6 >> 1)
  {
    v4 = sub_22648878C((_QWORD *)(v6 > 1), v7 + 1, 1, v4);
    *v3 = v4;
  }
  v4[2] = v7 + 1;
  *(double *)&v4[v7 + 4] = a2;
  return swift_endAccess();
}

void sub_2264AAB00()
{
  sub_2264A2CB4((uint64_t)&OBJC_IVAR____TtC8RoomPlan11AnalyticsUI_queue, (uint64_t)&unk_24EDE3180, (uint64_t)sub_2264ABB1C, (uint64_t)&block_descriptor_31);
}

uint64_t sub_2264AAB24(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double *v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  double v11;
  uint64_t v12;
  uint64_t *v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  id v19;
  char v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = (uint64_t *)(a1 + OBJC_IVAR____TtC8RoomPlan11AnalyticsUI_arViewDeltaTimeArray);
  swift_beginAccess();
  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 16);
  if (v4)
  {
    if (v4 == 1)
    {
      v5 = 0;
      v6 = 0.0;
LABEL_8:
      v9 = v4 - v5;
      v10 = (double *)(v3 + 8 * v5 + 32);
      do
      {
        v11 = *v10++;
        v6 = v6 + v11;
        --v9;
      }
      while (v9);
      goto LABEL_10;
    }
    v5 = v4 & 0x7FFFFFFFFFFFFFFELL;
    v7 = (double *)(v3 + 40);
    v6 = 0.0;
    v8 = v4 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      v6 = v6 + *(v7 - 1) + *v7;
      v7 += 2;
      v8 -= 2;
    }
    while (v8);
    if (v4 != v5)
      goto LABEL_8;
  }
LABEL_10:
  v12 = sub_22655CFBC();
  v13 = (uint64_t *)(a1 + OBJC_IVAR____TtC8RoomPlan9Analytics_roomPlanStats);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v22 = *v13;
  *v13 = 0x8000000000000000;
  sub_2265235F4(v12, 0x65695652416D754ELL, 0xEF65746164705577, isUniquelyReferenced_nonNull_native);
  *v13 = v22;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (v4)
  {
    v15 = sub_22655CF68();
    swift_beginAccess();
    v16 = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v13;
    *v13 = 0x8000000000000000;
    sub_2265235F4(v15, 0xD000000000000012, 0x800000022656D230, v16);
    *v13 = v23;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  sub_22643F548(0, &qword_255845308);
  v17 = sub_22655D10C();
  swift_beginAccess();
  v18 = swift_isUniquelyReferenced_nonNull_native();
  v24 = *v13;
  *v13 = 0x8000000000000000;
  sub_2265235F4(v17, 0xD000000000000014, 0x800000022656D210, v18);
  *v13 = v24;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 1);
  swift_beginAccess();
  v20 = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v13;
  *v13 = 0x8000000000000000;
  sub_2265235F4((uint64_t)v19, 0x504149556C6C6143, 0xE900000000000049, v20);
  *v13 = v25;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

void sub_2264AAE3C()
{
  sub_2264A2CB4((uint64_t)&OBJC_IVAR____TtC8RoomPlan11AnalyticsUI_queue, (uint64_t)&unk_24EDE30E0, (uint64_t)sub_2264ABB14, (uint64_t)&block_descriptor_18);
}

uint64_t sub_2264AAE60(char *a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t result;
  _QWORD aBlock[6];

  if (a1[OBJC_IVAR____TtC8RoomPlan9Analytics_bOptInApple] == 1)
  {
    sub_2264A2390();
    v2 = (void *)sub_22655CD64();
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = a1;
    aBlock[4] = sub_2264ABABC;
    aBlock[5] = v3;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2264A26EC;
    aBlock[3] = &block_descriptor_25;
    v4 = _Block_copy(aBlock);
    v5 = a1;
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v4);

  }
  v6 = &a1[OBJC_IVAR____TtC8RoomPlan9Analytics_roomPlanStats];
  swift_beginAccess();
  *(_QWORD *)v6 = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRelease();
  v7 = &a1[OBJC_IVAR____TtC8RoomPlan11AnalyticsUI_arViewDeltaTimeArray];
  swift_beginAccess();
  *(_QWORD *)v7 = MEMORY[0x24BEE4AF8];
  result = swift_bridgeObjectRelease();
  a1[OBJC_IVAR____TtC8RoomPlan11AnalyticsUI_voiceOver] = 0;
  return result;
}

id sub_2264AAFBC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  _BYTE *v7;
  objc_class *v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  objc_super v13;
  uint64_t v14;

  v12 = sub_22655D064();
  v1 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_22655D04C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v4);
  v6 = sub_22655CBFC();
  MEMORY[0x24BDAC7A8](v6);
  v11 = OBJC_IVAR____TtC8RoomPlan11AnalyticsUI_queue;
  v10[1] = sub_22643F548(0, (unint64_t *)&qword_2558442A0);
  v7 = v0;
  sub_22655CBF0();
  v14 = MEMORY[0x24BEE4AF8];
  sub_226437F28((unint64_t *)&qword_2558491E0, v5, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558442B0);
  sub_2264ABAD4((unint64_t *)&qword_2558491F0, (uint64_t *)&unk_2558442B0);
  sub_22655D214();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5750], v12);
  *(_QWORD *)(v10[2] + v11) = sub_22655D088();
  *(_QWORD *)&v7[OBJC_IVAR____TtC8RoomPlan11AnalyticsUI_arViewDeltaTimeArray] = MEMORY[0x24BEE4AF8];
  v7[OBJC_IVAR____TtC8RoomPlan11AnalyticsUI_voiceOver] = 0;

  v8 = (objc_class *)type metadata accessor for AnalyticsUI();
  v13.receiver = v7;
  v13.super_class = v8;
  return objc_msgSendSuper2(&v13, sel_init);
}

uint64_t sub_2264AB200()
{
  uint64_t v0;

  return swift_bridgeObjectRelease();
}

id sub_2264AB22C(uint64_t a1)
{
  return sub_2264A51E8(a1, type metadata accessor for AnalyticsUI);
}

uint64_t type metadata accessor for AnalyticsUI()
{
  return objc_opt_self();
}

id sub_2264AB290(uint64_t a1, uint64_t a2)
{
  return sub_2264A5390(a1, a2, (uint64_t (*)(uint64_t))type metadata accessor for AnalyticsData, &qword_25585AF08);
}

void sub_2264AB2A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  void *v16;
  char *v17;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v7 = sub_22655CBB4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22655CBFC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v3[OBJC_IVAR____TtC8RoomPlan9Analytics_bOptInApple] == 1)
  {
    v18[0] = *(_QWORD *)&v3[OBJC_IVAR____TtC8RoomPlan13AnalyticsData_queue];
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = v3;
    v15[3] = a1;
    v15[4] = a2;
    v15[5] = a3;
    aBlock[4] = sub_2264ABAC8;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2264FA450;
    aBlock[3] = &block_descriptor_12;
    v16 = _Block_copy(aBlock);
    v17 = v3;
    swift_bridgeObjectRetain();
    sub_22655CBCC();
    v18[1] = MEMORY[0x24BEE4AF8];
    sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
    sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
    sub_22655D214();
    MEMORY[0x22769975C](0, v14, v10, v16);
    _Block_release(v16);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    swift_release();
  }
}

uint64_t sub_2264AB4B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6;
  void *v7;
  id v8;
  uint64_t *v9;
  char isUniquelyReferenced_nonNull_native;
  id v11;
  char v12;
  id v13;
  char v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = objc_allocWithZone(MEMORY[0x24BDD17C8]);
  swift_bridgeObjectRetain();
  v7 = (void *)sub_22655CD64();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_initWithString_, v7);

  v9 = (uint64_t *)(a1 + OBJC_IVAR____TtC8RoomPlan9Analytics_roomPlanStats);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v16 = *v9;
  *v9 = 0x8000000000000000;
  sub_2265235F4((uint64_t)v8, 0xD000000000000013, 0x800000022656D1A0, isUniquelyReferenced_nonNull_native);
  *v9 = v16;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, a4);
  swift_beginAccess();
  v12 = swift_isUniquelyReferenced_nonNull_native();
  v17 = *v9;
  *v9 = 0x8000000000000000;
  sub_2265235F4((uint64_t)v11, 0x7372655661746144, 0xEB000000006E6F69, v12);
  *v9 = v17;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 1);
  swift_beginAccess();
  v14 = swift_isUniquelyReferenced_nonNull_native();
  v18 = *v9;
  *v9 = 0x8000000000000000;
  sub_2265235F4((uint64_t)v13, 0x726F7078456D754ELL, 0xED00005A44535574, v14);
  *v9 = v18;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

void sub_2264AB6C8()
{
  sub_2264A2CB4((uint64_t)&OBJC_IVAR____TtC8RoomPlan13AnalyticsData_queue, (uint64_t)&unk_24EDE2FF0, (uint64_t)sub_2264ABA9C, (uint64_t)&block_descriptor_3);
}

uint64_t sub_2264AB6EC(char *a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  char *v5;
  char *v6;
  _QWORD v8[6];

  if (a1[OBJC_IVAR____TtC8RoomPlan9Analytics_bOptInApple] == 1)
  {
    sub_2264A2390();
    v2 = (void *)sub_22655CD64();
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = a1;
    v8[4] = sub_2264ABABC;
    v8[5] = v3;
    v8[0] = MEMORY[0x24BDAC760];
    v8[1] = 1107296256;
    v8[2] = sub_2264A26EC;
    v8[3] = &block_descriptor_6_1;
    v4 = _Block_copy(v8);
    v5 = a1;
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v4);

  }
  v6 = &a1[OBJC_IVAR____TtC8RoomPlan9Analytics_roomPlanStats];
  swift_beginAccess();
  *(_QWORD *)v6 = MEMORY[0x24BEE4B00];
  return swift_bridgeObjectRelease();
}

id sub_2264AB808()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  id v7;
  objc_class *v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  objc_super v13;
  uint64_t v14;

  v12 = sub_22655D064();
  v1 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_22655D04C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v4);
  v6 = sub_22655CBFC();
  MEMORY[0x24BDAC7A8](v6);
  v11 = OBJC_IVAR____TtC8RoomPlan13AnalyticsData_queue;
  v10[1] = sub_22643F548(0, (unint64_t *)&qword_2558442A0);
  v7 = v0;
  sub_22655CBF0();
  v14 = MEMORY[0x24BEE4AF8];
  sub_226437F28((unint64_t *)&qword_2558491E0, v5, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558442B0);
  sub_2264ABAD4((unint64_t *)&qword_2558491F0, (uint64_t *)&unk_2558442B0);
  sub_22655D214();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5750], v12);
  *(_QWORD *)(v10[2] + v11) = sub_22655D088();

  v8 = (objc_class *)type metadata accessor for AnalyticsData();
  v13.receiver = v7;
  v13.super_class = v8;
  return objc_msgSendSuper2(&v13, sel_init);
}

void sub_2264ABA2C()
{
  uint64_t v0;

}

id sub_2264ABA3C(uint64_t a1)
{
  return sub_2264A51E8(a1, type metadata accessor for AnalyticsData);
}

uint64_t type metadata accessor for AnalyticsData()
{
  return objc_opt_self();
}

uint64_t sub_2264ABA78()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2264ABA9C()
{
  uint64_t v0;

  return sub_2264AB6EC(*(char **)(v0 + 16));
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_2264ABAC0()
{
  return objectdestroy_8Tm();
}

uint64_t sub_2264ABAC8()
{
  uint64_t *v0;

  return sub_2264AB4B0(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_2264ABAD4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x22769A794](MEMORY[0x24BEE12C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2264ABB14()
{
  uint64_t v0;

  return sub_2264AAE60(*(char **)(v0 + 16));
}

uint64_t sub_2264ABB1C()
{
  uint64_t v0;

  return sub_2264AAB24(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2264ABB24()
{
  uint64_t v0;

  return sub_2264AAA2C(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_2264ABB30()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_2264ABB54()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8RoomPlan11AnalyticsUI_voiceOver) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_2264ABB6C()
{
  uint64_t v0;

  return sub_2264AA26C(*(char **)(v0 + 16));
}

uint64_t sub_2264ABB74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255841200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2264ABBBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for CapturedStructure(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 24) & ~v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v0 + v3 + *(int *)(v1 + 48);
  v5 = sub_22655C140();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2264ABC9C()
{
  return sub_2264ABDCC(type metadata accessor for CapturedStructure, (uint64_t (*)(_QWORD, unint64_t, _QWORD, _QWORD, _QWORD))sub_2264A81B4);
}

uint64_t sub_2264ABCB0()
{
  uint64_t v0;

  return sub_2264A7848(*(char **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_2264ABCBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for CapturedRoom(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 24) & ~v2;

  v4 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + *(int *)(v1 + 40);
  v6 = sub_22655C140();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2264ABDB8()
{
  return sub_2264ABDCC(type metadata accessor for CapturedRoom, (uint64_t (*)(_QWORD, unint64_t, _QWORD, _QWORD, _QWORD))sub_2264A5690);
}

uint64_t sub_2264ABDCC(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD, unint64_t, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(a1(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return a2(*(_QWORD *)(v2 + 16), v2 + v4, *(unsigned __int8 *)(v2 + v4 + *(_QWORD *)(v3 + 64)), *(_QWORD *)(((v4 + *(_QWORD *)(v3 + 64)) & 0xFFFFFFFFFFFFFFF8) + v2 + 8), *(_QWORD *)(((v4 + *(_QWORD *)(v3 + 64)) & 0xFFFFFFFFFFFFFFF8) + v2 + 16));
}

uint64_t sub_2264ABE28()
{
  uint64_t v0;

  return sub_2264A4C30(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_2264ABE34()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2264ABE80()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2264ABEAC()
{
  uint64_t v0;

  return sub_2264A372C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2264ABEB4()
{
  return objectdestroy_8Tm();
}

uint64_t objectdestroy_8Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2264ABEF4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[4];
  v2 = (_QWORD *)(v0[2] + OBJC_IVAR____TtC8RoomPlan15AnalyticsOnline_errorType);
  *v2 = v0[3];
  v2[1] = v1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2264ABF30()
{
  uint64_t v0;

  return sub_2264A2FD0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2264ABF38()
{
  uint64_t v0;

  return sub_2264A2EA4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2264ABF40()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2264ABF64()
{
  uint64_t v0;

  return sub_2264A2B90(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_2264ABF70()
{
  uint64_t v0;

  return sub_2264A2AAC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2264ABF78()
{
  uint64_t v0;

  return sub_2264A7E4C(*(_QWORD *)(v0 + 16), &OBJC_IVAR____TtC8RoomPlan16AnalyticsOffline_offlineGenerationTimeStart);
}

uint64_t sub_2264ABF98()
{
  uint64_t v0;

  return sub_2264A7E4C(*(_QWORD *)(v0 + 16), &OBJC_IVAR____TtC8RoomPlan25AnalyticsOfflineMultiroom_offlineMultiroomGenerationTimeStart);
}

uint64_t sub_2264AC0E0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AnimationTime()
{
  return objc_opt_self();
}

uint64_t sub_2264AC110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

void sub_2264AC118(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2264AC174(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2264AC210 + 4 * byte_226562DA7[a2]))(0x726F466C65786970);
}

uint64_t sub_2264AC210(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x726F466C65786970 && v1 == 0xEB0000000074616DLL)
    v2 = 1;
  else
    v2 = sub_22655D55C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_2264AC308(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x676E696E6964;
    else
      v3 = 0x69746E6564696E75;
    if (v2 == 1)
      v4 = 0xE600000000000000;
    else
      v4 = 0xEC00000064656966;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x676E696E6964;
      else
        v6 = 0x69746E6564696E75;
      if (v5 == 1)
        v7 = 0xE600000000000000;
      else
        v7 = 0xEC00000064656966;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE600000000000000;
    v3 = 0x656566666F63;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE600000000000000;
  if (v3 != 0x656566666F63)
  {
LABEL_21:
    v8 = sub_22655D55C();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_2264AC420(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2264AC468(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2264AC4C8 + 4 * byte_226562DB2[a2]))(0x6C6F6F7473);
}

uint64_t sub_2264AC4C8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C6F6F7473 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_22655D55C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_2264AC56C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2264AC5D0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2264AC658 + 4 * byte_226562DBB[a2]))(0x6465706168536CLL);
}

uint64_t sub_2264AC658(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6465706168536CLL && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_22655D55C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_2264AC72C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2264AC788(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2264AC814 + 4 * byte_226562DC5[a2]))(1702063984);
}

uint64_t sub_2264AC814(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1702063984 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_22655D55C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_2264AC8EC(char a1, char a2)
{
  char v2;

  if (qword_226563268[a1] == qword_226563268[a2])
    v2 = 1;
  else
    v2 = sub_22655D55C();
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_2264AC950(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6365737265746E69;
    else
      v3 = 0x6564697374756FLL;
    if (v2 == 1)
      v4 = 0xEC0000006E6F6974;
    else
      v4 = 0xE700000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x6365737265746E69;
      else
        v6 = 0x6564697374756FLL;
      if (v5 == 1)
        v7 = 0xEC0000006E6F6974;
      else
        v7 = 0xE700000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE600000000000000;
    v3 = 0x656469736E69;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE600000000000000;
  if (v3 != 0x656469736E69)
  {
LABEL_21:
    v8 = sub_22655D55C();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_2264ACA70(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2264ACAD4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2264ACB40 + 4 * byte_226562DCE[a2]))(0xD000000000000010);
}

uint64_t sub_2264ACB40(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000010 && v1 == 0x800000022656A2D0)
    v2 = 1;
  else
    v2 = sub_22655D55C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_2264ACBF8(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  if (a1)
  {
    if (a1 == 1)
      v2 = 0x6465676E616863;
    else
      v2 = 0x6465766F6D6572;
    v3 = 0xE700000000000000;
    v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1)
        v5 = 0x6465676E616863;
      else
        v5 = 0x6465766F6D6572;
      v6 = 0xE700000000000000;
      if (v2 != v5)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v3 = 0xE500000000000000;
    v2 = 0x6465646461;
    v4 = a2;
    if (a2)
      goto LABEL_6;
  }
  v6 = 0xE500000000000000;
  if (v2 != 0x6465646461)
  {
LABEL_15:
    v7 = sub_22655D55C();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6)
    goto LABEL_15;
  v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_2264ACD08(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2264ACD48(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2264ACDD4 + 4 * byte_226562DD8[a2]))(0x7463656A626FLL);
}

uint64_t sub_2264ACDD4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7463656A626FLL && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_22655D55C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_2264ACEB0(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 1918989427;
    else
      v3 = 0x69746E6564696E75;
    if (v2 == 1)
      v4 = 0xE400000000000000;
    else
      v4 = 0xEC00000064656966;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 1918989427;
      else
        v6 = 0x69746E6564696E75;
      if (v5 == 1)
        v7 = 0xE400000000000000;
      else
        v7 = 0xEC00000064656966;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 1920298854;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v3 != 1920298854)
  {
LABEL_21:
    v8 = sub_22655D55C();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2264ACFB8(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x676E697373696DLL;
  else
    v3 = 0x676E697473697865;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x676E697373696DLL;
  else
    v5 = 0x676E697473697865;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_22655D55C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2264AD05C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x666C656873;
  else
    v3 = 0x74656E69626163;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x666C656873;
  else
    v5 = 0x74656E69626163;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_22655D55C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2264AD0FC(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xE900000000000073;
  v3 = 0x656D61726679656BLL;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x6573734165726F63;
    else
      v5 = 0xD000000000000018;
    if (v4 == 1)
      v6 = 0xE900000000000074;
    else
      v6 = 0x800000022656A150;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x656D61726679656BLL;
  v6 = 0xE900000000000073;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x6573734165726F63;
    else
      v3 = 0xD000000000000018;
    if (v7 == 1)
      v2 = 0xE900000000000074;
    else
      v2 = 0x800000022656A150;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_22655D55C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_2264AD20C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2264AD268(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2264AD2FC + 4 * byte_226562DE4[a2]))(0x6D6F6F72646562);
}

uint64_t sub_2264AD2FC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6D6F6F72646562 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_22655D55C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_2264AD3E4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x7265746E6563;
    else
      v3 = 0x79726F7473;
    if (v2 == 1)
      v4 = 0xE600000000000000;
    else
      v4 = 0xE500000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x7265746E6563;
      else
        v6 = 0x79726F7473;
      if (v5 == 1)
        v7 = 0xE600000000000000;
      else
        v7 = 0xE500000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE500000000000000;
    v3 = 0x6C6562616CLL;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE500000000000000;
  if (v3 != 0x6C6562616CLL)
  {
LABEL_21:
    v8 = sub_22655D55C();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_2264AD4E4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2264AD51C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2264AD56C + 4 * byte_226562DEE[a2]))(3160434);
}

uint64_t sub_2264AD56C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 3160434 && v1 == 0xE300000000000000)
    v2 = 1;
  else
    v2 = sub_22655D55C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_2264AD5FC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2264AD64C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2264AD730 + 4 * byte_226562DFA[a2]))(0x6E656469666E6F63);
}

uint64_t sub_2264AD730(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6E656469666E6F63 && v1 == 0xEA00000000006563)
    v2 = 1;
  else
    v2 = sub_22655D55C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_2264AD874()
{
  sub_22655D640();
  sub_22655D664();
  return sub_22655D670();
}

void sub_2264AD8C4(char a1)
{
  sub_22655D640();
  __asm { BR              X10 }
}

uint64_t sub_2264AD91C()
{
  sub_22655CE00();
  swift_bridgeObjectRelease();
  return sub_22655D670();
}

void sub_2264AD9B4(char a1)
{
  sub_22655D640();
  __asm { BR              X10 }
}

uint64_t sub_2264ADA0C()
{
  sub_22655CE00();
  swift_bridgeObjectRelease();
  return sub_22655D670();
}

void sub_2264ADA88(char a1)
{
  sub_22655D640();
  __asm { BR              X10 }
}

uint64_t sub_2264ADAD0()
{
  sub_22655CE00();
  swift_bridgeObjectRelease();
  return sub_22655D670();
}

void sub_2264ADB68(char a1)
{
  sub_22655D640();
  __asm { BR              X10 }
}

uint64_t sub_2264ADBBC()
{
  sub_22655CE00();
  swift_bridgeObjectRelease();
  return sub_22655D670();
}

void sub_2264ADC60(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2264ADCA0()
{
  sub_22655CE00();
  return swift_bridgeObjectRelease();
}

void sub_2264ADD7C(uint64_t a1, char a2)
{
  sub_22655D640();
  __asm { BR              X10 }
}

uint64_t sub_2264ADDCC()
{
  sub_22655CE00();
  swift_bridgeObjectRelease();
  return sub_22655D670();
}

void sub_2264ADE78(uint64_t a1, char a2)
{
  sub_22655D640();
  __asm { BR              X10 }
}

uint64_t sub_2264ADECC()
{
  sub_22655CE00();
  swift_bridgeObjectRelease();
  return sub_22655D670();
}

uint64_t sub_2264ADF64()
{
  sub_22655D640();
  sub_22655D664();
  return sub_22655D670();
}

void sub_2264ADFB0(uint64_t a1, char a2)
{
  sub_22655D640();
  __asm { BR              X10 }
}

uint64_t sub_2264AE004()
{
  sub_22655CE00();
  swift_bridgeObjectRelease();
  return sub_22655D670();
}

void sub_2264AE080(uint64_t a1, char a2)
{
  sub_22655D640();
  __asm { BR              X10 }
}

uint64_t sub_2264AE0C4()
{
  sub_22655CE00();
  swift_bridgeObjectRelease();
  return sub_22655D670();
}

void sub_2264AE15C(uint64_t a1, char a2)
{
  sub_22655D640();
  __asm { BR              X10 }
}

uint64_t sub_2264AE1AC()
{
  sub_22655CE00();
  swift_bridgeObjectRelease();
  return sub_22655D670();
}

void sub_2264AE250(uint64_t a1, char a2)
{
  sub_22655D640();
  __asm { BR              X10 }
}

uint64_t sub_2264AE29C()
{
  sub_22655CE00();
  swift_bridgeObjectRelease();
  return sub_22655D670();
}

_BYTE *sub_2264AE38C@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_2264AE398(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

_BYTE *sub_2264AE3A0@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;

  *a2 = *v2 | *result;
  return result;
}

_BYTE *sub_2264AE3B4@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;

  *a2 = *v2 & *result;
  return result;
}

_BYTE *sub_2264AE3C8@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_2264AE3DC(_BYTE *a1, unsigned __int8 *a2)
{
  _BYTE *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2;
  if ((v4 & v3) != v3)
    *v2 = v4 | v3;
  *a1 = v3;
  return (v4 & v3) != v3;
}

unsigned __int8 *sub_2264AE40C@<X0>(unsigned __int8 *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  v5 = v4 & v3;
  if ((v4 & v3) != 0)
    *v2 = v4 & ~(_BYTE)v3;
  *a2 = v5;
  a2[1] = v5 == 0;
  return result;
}

unsigned __int8 *sub_2264AE438@<X0>(unsigned __int8 *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  *v2 = v4 | v3;
  v5 = v4 & v3;
  *a2 = v5;
  a2[1] = v5 == 0;
  return result;
}

_BYTE *sub_2264AE45C(_BYTE *result)
{
  _BYTE *v1;

  *v1 |= *result;
  return result;
}

_BYTE *sub_2264AE470(_BYTE *result)
{
  _BYTE *v1;

  *v1 &= *result;
  return result;
}

_BYTE *sub_2264AE484(_BYTE *result)
{
  _BYTE *v1;

  *v1 ^= *result;
  return result;
}

_BYTE *sub_2264AE498@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_2264AE4AC(unsigned __int8 *a1)
{
  unsigned __int8 *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_2264AE4C0(_BYTE *a1)
{
  _BYTE *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_2264AE4D4(unsigned __int8 *a1)
{
  unsigned __int8 *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_2264AE4E8()
{
  _BYTE *v0;

  return *v0 == 0;
}

_BYTE *sub_2264AE4F8(_BYTE *result)
{
  _BYTE *v1;

  *v1 &= ~*result;
  return result;
}

unsigned __int8 *sub_2264AE50C@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_2264AE51C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;
  uint64_t result;

  v3 = sub_226438358(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void sub_2264AE558(char *a1)
{
  sub_2264ACD08(*a1);
}

void sub_2264AE564()
{
  char *v0;

  sub_2264ADA88(*v0);
}

void sub_2264AE56C()
{
  __asm { BR              X10 }
}

uint64_t sub_2264AE5A0()
{
  sub_22655CE00();
  return swift_bridgeObjectRelease();
}

void sub_2264AE624(uint64_t a1)
{
  char *v1;

  sub_2264AE080(a1, *v1);
}

uint64_t sub_2264AE62C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2264B100C();
  *a1 = result;
  return result;
}

uint64_t sub_2264AE658()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_2264AE680 + 4 * byte_226562E49[*v0]))();
}

void sub_2264AE680(_QWORD *a1@<X8>)
{
  *a1 = 0x7463656A626FLL;
  a1[1] = 0xE600000000000000;
}

void sub_2264AE698(_QWORD *a1@<X8>)
{
  *a1 = 0x676E696E65706FLL;
  a1[1] = 0xE700000000000000;
}

void sub_2264AE6B4(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "potentialWall");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_2264AE6DC(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 1819042167;
  a1[1] = v1;
}

void sub_2264AE6EC(_QWORD *a1@<X8>)
{
  *a1 = 0x776F646E6977;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_2264AE704(char *a1, unsigned __int8 *a2)
{
  return sub_2264ACBF8(*a1, *a2);
}

uint64_t sub_2264AE710()
{
  sub_22655D640();
  sub_22655CE00();
  swift_bridgeObjectRelease();
  return sub_22655D670();
}

uint64_t sub_2264AE7AC()
{
  sub_22655CE00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2264AE824()
{
  sub_22655D640();
  sub_22655CE00();
  swift_bridgeObjectRelease();
  return sub_22655D670();
}

uint64_t sub_2264AE8BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2264B1054();
  *a1 = result;
  return result;
}

void sub_2264AE8E8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0x6465676E616863;
  if (v2 != 1)
    v4 = 0x6465766F6D6572;
  v5 = v2 == 0;
  if (*v1)
    v6 = v4;
  else
    v6 = 0x6465646461;
  if (!v5)
    v3 = 0xE700000000000000;
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_2264AE944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_uuid;
  v2 = sub_22655C140();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_2264AE994(_QWORD *a1, int a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t result;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  char v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  char v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  char v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  __int128 v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  int v147;

  v147 = a2;
  v126 = type metadata accessor for CapturedRoom.Object(0);
  v139 = *(_QWORD *)(v126 - 8);
  MEMORY[0x24BDAC7A8](v126);
  v138 = (uint64_t)&v126 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_22655C140();
  v145 = *(_QWORD *)(v146 - 8);
  MEMORY[0x24BDAC7A8](v146);
  v144 = (char *)&v126 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = type metadata accessor for CapturedRoom.Surface(0);
  v143 = *(_QWORD *)(v127 - 8);
  MEMORY[0x24BDAC7A8](v127);
  v133 = (uint64_t)&v126 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v135 = (uint64_t)&v126 - v8;
  MEMORY[0x24BDAC7A8](v9);
  v136 = (uint64_t)&v126 - v10;
  MEMORY[0x24BDAC7A8](v11);
  v137 = (uint64_t)&v126 - v12;
  MEMORY[0x24BDAC7A8](v13);
  v140 = (uint64_t)&v126 - v14;
  v15 = *(_BYTE *)(v2 + 17);
  v128 = v2;
  v129 = a1;
  if ((v15 & 1) == 0)
    goto LABEL_35;
  v16 = *a1;
  v134 = *(_QWORD *)(*a1 + 16);
  if (!v134)
    goto LABEL_35;
  v132 = v140 + *(int *)(v127 + 44);
  v17 = (uint64_t *)(v2 + 48);
  v131 = v16 + ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80));
  swift_bridgeObjectRetain();
  result = swift_beginAccess();
  v19 = 0;
  v130 = v16;
  while (1)
  {
    if (v19 >= *(_QWORD *)(v16 + 16))
      goto LABEL_212;
    v21 = v140;
    sub_22643D704(v131 + *(_QWORD *)(v143 + 72) * v19, v140, type metadata accessor for CapturedRoom.Surface);
    v22 = v145;
    v23 = v144;
    v24 = v146;
    (*(void (**)(char *, uint64_t, uint64_t))(v145 + 16))(v144, v132, v146);
    v142 = *(_OWORD *)(v21 + 16);
    sub_22643D748(v21, type metadata accessor for CapturedRoom.Surface);
    type metadata accessor for IULogManager.IULogEntry();
    v25 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v25 + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_uuid, v23, v24);
    *(_BYTE *)(v25 + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_category) = 4;
    *(_OWORD *)(v25 + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_dimensions) = v142;
    *(_BYTE *)(v25 + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_state) = v147;
    v26 = *v17;
    v27 = (unint64_t)*v17 >> 62;
    v141 = v19;
    if (v27)
    {
      swift_bridgeObjectRetain();
      v28 = sub_22655D400();
      if (!v28)
        goto LABEL_4;
    }
    else
    {
      v28 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v28)
        goto LABEL_4;
    }
    if ((v26 & 0xC000000000000001) != 0)
      MEMORY[0x2276999E4](0, v26);
    else
      swift_retain();
    v29 = sub_22655C104();
    swift_release();
    if ((v29 & 1) != 0)
    {
      v30 = 0;
LABEL_15:
      swift_bridgeObjectRelease();
      swift_beginAccess();
      v31 = *v17;
      swift_retain();
      result = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *v17 = v31;
      if (!(_DWORD)result || v31 < 0 || (v31 & 0x4000000000000000) != 0)
        sub_2264C10BC(v31);
      if ((v30 & 0x8000000000000000) != 0)
        goto LABEL_218;
      if (v30 >= *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_219;
      *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 8 * v30 + 0x20) = v25;
      swift_release();
      goto LABEL_7;
    }
    if (v28 != 1)
      break;
LABEL_4:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v20 = swift_retain();
    MEMORY[0x227699594](v20);
    if (*(_QWORD *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_22655CEF0();
    sub_22655CF08();
LABEL_7:
    sub_22655CEE4();
    swift_endAccess();
    v19 = v141 + 1;
    result = swift_release();
    v16 = v130;
    if (v19 == v134)
    {
      swift_bridgeObjectRelease();
      v2 = v128;
      v15 = *(_BYTE *)(v128 + 17);
      a1 = v129;
LABEL_35:
      if ((v15 & 4) != 0)
      {
        v35 = a1[5];
        v140 = *(_QWORD *)(v35 + 16);
        if (v140)
        {
          v134 = v138 + *(int *)(v126 + 32);
          v36 = (uint64_t *)(v2 + 48);
          v132 = v35 + ((*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80));
          swift_bridgeObjectRetain();
          result = swift_beginAccess();
          v37 = 0;
          v131 = v35;
          while (1)
          {
            if (v37 >= *(_QWORD *)(v35 + 16))
              goto LABEL_213;
            v39 = v138;
            sub_22643D704(v132 + *(_QWORD *)(v139 + 72) * v37, v138, type metadata accessor for CapturedRoom.Object);
            v40 = v145;
            v41 = v144;
            v42 = v146;
            (*(void (**)(char *, uint64_t, uint64_t))(v145 + 16))(v144, v134, v146);
            v142 = *(_OWORD *)(v39 + 16);
            sub_22643D748(v39, type metadata accessor for CapturedRoom.Object);
            type metadata accessor for IULogManager.IULogEntry();
            v43 = swift_allocObject();
            (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v43 + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_uuid, v41, v42);
            *(_BYTE *)(v43
                     + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_category) = 1;
            *(_OWORD *)(v43
                      + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_dimensions) = v142;
            *(_BYTE *)(v43
                     + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_state) = v147;
            v44 = *v36;
            v45 = (unint64_t)*v36 >> 62;
            v141 = v37;
            if (v45)
            {
              swift_bridgeObjectRetain();
              v46 = sub_22655D400();
              if (!v46)
                goto LABEL_38;
            }
            else
            {
              v46 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (!v46)
                goto LABEL_38;
            }
            if ((v44 & 0xC000000000000001) != 0)
              MEMORY[0x2276999E4](0, v44);
            else
              swift_retain();
            v47 = sub_22655C104();
            swift_release();
            if ((v47 & 1) != 0)
            {
              v48 = 0;
LABEL_49:
              swift_bridgeObjectRelease();
              swift_beginAccess();
              v49 = *v36;
              swift_retain();
              result = swift_isUniquelyReferenced_nonNull_bridgeObject();
              *v36 = v49;
              if (!(_DWORD)result || v49 < 0 || (v49 & 0x4000000000000000) != 0)
                sub_2264C10BC(v49);
              if ((v48 & 0x8000000000000000) != 0)
                goto LABEL_220;
              if (v48 >= *(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_221;
              *(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 8 * v48 + 0x20) = v43;
              swift_release();
              goto LABEL_41;
            }
            if (v46 != 1)
            {
              v50 = 5;
              do
              {
                v48 = v50 - 4;
                if ((v44 & 0xC000000000000001) != 0)
                  MEMORY[0x2276999E4](v50 - 4, v44);
                else
                  swift_retain();
                v51 = sub_22655C104();
                result = swift_release();
                if ((v51 & 1) != 0)
                  goto LABEL_49;
                v52 = v50 - 3;
                if (__OFADD__(v48, 1))
                  goto LABEL_207;
                ++v50;
              }
              while (v52 != v46);
            }
LABEL_38:
            swift_bridgeObjectRelease();
            swift_beginAccess();
            v38 = swift_retain();
            MEMORY[0x227699594](v38);
            if (*(_QWORD *)((*v36 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v36 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_22655CEF0();
            sub_22655CF08();
LABEL_41:
            sub_22655CEE4();
            swift_endAccess();
            v35 = v131;
            v37 = v141 + 1;
            result = swift_release();
            if (v37 == v140)
            {
              swift_bridgeObjectRelease();
              v2 = v128;
              v15 = *(_BYTE *)(v128 + 17);
              a1 = v129;
              break;
            }
          }
        }
      }
      if ((v15 & 2) != 0)
      {
        v53 = type metadata accessor for CapturedRoom(0);
        a1 = v129;
        v54 = *(_QWORD *)((char *)v129 + *(int *)(v53 + 56));
        v140 = *(_QWORD *)(v54 + 16);
        if (v140)
        {
          v139 = v137 + *(int *)(v127 + 44);
          v55 = (uint64_t *)(v2 + 48);
          v138 = v54 + ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80));
          swift_bridgeObjectRetain();
          result = swift_beginAccess();
          v56 = 0;
          v134 = v54;
          while (1)
          {
            if (v56 >= *(_QWORD *)(v54 + 16))
              goto LABEL_214;
            v58 = v137;
            sub_22643D704(v138 + *(_QWORD *)(v143 + 72) * v56, v137, type metadata accessor for CapturedRoom.Surface);
            v59 = v145;
            v60 = v144;
            v61 = v146;
            (*(void (**)(char *, uint64_t, uint64_t))(v145 + 16))(v144, v139, v146);
            v142 = *(_OWORD *)(v58 + 16);
            sub_22643D748(v58, type metadata accessor for CapturedRoom.Surface);
            type metadata accessor for IULogManager.IULogEntry();
            v62 = swift_allocObject();
            (*(void (**)(uint64_t, char *, uint64_t))(v59 + 32))(v62 + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_uuid, v60, v61);
            *(_BYTE *)(v62
                     + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_category) = 3;
            *(_OWORD *)(v62
                      + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_dimensions) = v142;
            *(_BYTE *)(v62
                     + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_state) = v147;
            v63 = *v55;
            v64 = (unint64_t)*v55 >> 62;
            v141 = v56;
            if (v64)
            {
              swift_bridgeObjectRetain();
              v65 = sub_22655D400();
              if (!v65)
                goto LABEL_72;
            }
            else
            {
              v65 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (!v65)
                goto LABEL_72;
            }
            if ((v63 & 0xC000000000000001) != 0)
              MEMORY[0x2276999E4](0, v63);
            else
              swift_retain();
            v66 = sub_22655C104();
            swift_release();
            if ((v66 & 1) != 0)
            {
              v67 = 0;
LABEL_83:
              swift_bridgeObjectRelease();
              swift_beginAccess();
              v68 = *v55;
              swift_retain();
              result = swift_isUniquelyReferenced_nonNull_bridgeObject();
              *v55 = v68;
              if (!(_DWORD)result || v68 < 0 || (v68 & 0x4000000000000000) != 0)
                sub_2264C10BC(v68);
              if ((v67 & 0x8000000000000000) != 0)
                goto LABEL_222;
              if (v67 >= *(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_223;
              *(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 8 * v67 + 0x20) = v62;
              swift_release();
              goto LABEL_75;
            }
            if (v65 != 1)
            {
              v69 = 5;
              do
              {
                v67 = v69 - 4;
                if ((v63 & 0xC000000000000001) != 0)
                  MEMORY[0x2276999E4](v69 - 4, v63);
                else
                  swift_retain();
                v70 = sub_22655C104();
                result = swift_release();
                if ((v70 & 1) != 0)
                  goto LABEL_83;
                v71 = v69 - 3;
                if (__OFADD__(v67, 1))
                  goto LABEL_208;
                ++v69;
              }
              while (v71 != v65);
            }
LABEL_72:
            swift_bridgeObjectRelease();
            swift_beginAccess();
            v57 = swift_retain();
            MEMORY[0x227699594](v57);
            if (*(_QWORD *)((*v55 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v55 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_22655CEF0();
            sub_22655CF08();
LABEL_75:
            sub_22655CEE4();
            swift_endAccess();
            v56 = v141 + 1;
            result = swift_release();
            v54 = v134;
            if (v56 == v140)
            {
              swift_bridgeObjectRelease();
              v2 = v128;
              v15 = *(_BYTE *)(v128 + 17);
              a1 = v129;
              break;
            }
          }
        }
      }
      if ((v15 & 8) != 0)
      {
        v72 = a1[1];
        v140 = *(_QWORD *)(v72 + 16);
        if (v140)
        {
          v139 = v136 + *(int *)(v127 + 44);
          v73 = (uint64_t *)(v2 + 48);
          v138 = v72 + ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80));
          swift_bridgeObjectRetain();
          result = swift_beginAccess();
          v74 = 0;
          v137 = v72;
          while (1)
          {
            if (v74 >= *(_QWORD *)(v72 + 16))
              goto LABEL_215;
            v76 = *(_QWORD *)(v143 + 72);
            v141 = v74;
            v77 = v136;
            sub_22643D704(v138 + v76 * v74, v136, type metadata accessor for CapturedRoom.Surface);
            v78 = v145;
            v79 = v144;
            v80 = v146;
            (*(void (**)(char *, uint64_t, uint64_t))(v145 + 16))(v144, v139, v146);
            v142 = *(_OWORD *)(v77 + 16);
            sub_22643D748(v77, type metadata accessor for CapturedRoom.Surface);
            type metadata accessor for IULogManager.IULogEntry();
            v81 = swift_allocObject();
            (*(void (**)(uint64_t, char *, uint64_t))(v78 + 32))(v81 + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_uuid, v79, v80);
            *(_BYTE *)(v81
                     + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_category) = 0;
            *(_OWORD *)(v81
                      + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_dimensions) = v142;
            *(_BYTE *)(v81
                     + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_state) = v147;
            v82 = *v73;
            if ((unint64_t)*v73 >> 62)
            {
              swift_bridgeObjectRetain();
              v83 = sub_22655D400();
              if (!v83)
                goto LABEL_106;
            }
            else
            {
              v83 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (!v83)
                goto LABEL_106;
            }
            if ((v82 & 0xC000000000000001) != 0)
              MEMORY[0x2276999E4](0, v82);
            else
              swift_retain();
            v84 = sub_22655C104();
            swift_release();
            if ((v84 & 1) != 0)
            {
              v85 = 0;
LABEL_117:
              swift_bridgeObjectRelease();
              swift_beginAccess();
              v86 = *v73;
              swift_retain();
              result = swift_isUniquelyReferenced_nonNull_bridgeObject();
              *v73 = v86;
              if (!(_DWORD)result || v86 < 0 || (v86 & 0x4000000000000000) != 0)
                sub_2264C10BC(v86);
              if ((v85 & 0x8000000000000000) != 0)
                goto LABEL_224;
              if (v85 >= *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_225;
              *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 8 * v85 + 0x20) = v81;
              swift_release();
              goto LABEL_109;
            }
            if (v83 != 1)
            {
              v87 = 5;
              do
              {
                v85 = v87 - 4;
                if ((v82 & 0xC000000000000001) != 0)
                  MEMORY[0x2276999E4](v87 - 4, v82);
                else
                  swift_retain();
                v88 = sub_22655C104();
                result = swift_release();
                if ((v88 & 1) != 0)
                  goto LABEL_117;
                v89 = v87 - 3;
                if (__OFADD__(v85, 1))
                  goto LABEL_209;
                ++v87;
              }
              while (v89 != v83);
            }
LABEL_106:
            swift_bridgeObjectRelease();
            swift_beginAccess();
            v75 = swift_retain();
            MEMORY[0x227699594](v75);
            if (*(_QWORD *)((*v73 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v73 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_22655CEF0();
            sub_22655CF08();
LABEL_109:
            sub_22655CEE4();
            swift_endAccess();
            v74 = v141 + 1;
            result = swift_release();
            v72 = v137;
            if (v74 == v140)
            {
              swift_bridgeObjectRelease();
              v2 = v128;
              v15 = *(_BYTE *)(v128 + 17);
              a1 = v129;
              break;
            }
          }
        }
      }
      if ((v15 & 0x10) != 0)
      {
        v90 = a1[2];
        v140 = *(_QWORD *)(v90 + 16);
        if (v140)
        {
          v139 = v135 + *(int *)(v127 + 44);
          v91 = (uint64_t *)(v2 + 48);
          v138 = v90 + ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80));
          swift_bridgeObjectRetain();
          result = swift_beginAccess();
          v92 = 0;
          v137 = v90;
          while (1)
          {
            if (v92 >= *(_QWORD *)(v90 + 16))
              goto LABEL_216;
            v94 = v135;
            sub_22643D704(v138 + *(_QWORD *)(v143 + 72) * v92, v135, type metadata accessor for CapturedRoom.Surface);
            v95 = v145;
            v96 = v144;
            v97 = v146;
            (*(void (**)(char *, uint64_t, uint64_t))(v145 + 16))(v144, v139, v146);
            v142 = *(_OWORD *)(v94 + 16);
            sub_22643D748(v94, type metadata accessor for CapturedRoom.Surface);
            type metadata accessor for IULogManager.IULogEntry();
            v98 = swift_allocObject();
            (*(void (**)(uint64_t, char *, uint64_t))(v95 + 32))(v98 + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_uuid, v96, v97);
            *(_BYTE *)(v98
                     + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_category) = 5;
            *(_OWORD *)(v98
                      + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_dimensions) = v142;
            *(_BYTE *)(v98
                     + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_state) = v147;
            v99 = *v91;
            v100 = (unint64_t)*v91 >> 62;
            v141 = v92;
            if (v100)
            {
              swift_bridgeObjectRetain();
              v101 = sub_22655D400();
              if (!v101)
                goto LABEL_140;
            }
            else
            {
              v101 = *(_QWORD *)((v99 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (!v101)
                goto LABEL_140;
            }
            if ((v99 & 0xC000000000000001) != 0)
              MEMORY[0x2276999E4](0, v99);
            else
              swift_retain();
            v102 = sub_22655C104();
            swift_release();
            if ((v102 & 1) != 0)
            {
              v103 = 0;
LABEL_151:
              swift_bridgeObjectRelease();
              swift_beginAccess();
              v104 = *v91;
              swift_retain();
              result = swift_isUniquelyReferenced_nonNull_bridgeObject();
              *v91 = v104;
              if (!(_DWORD)result || v104 < 0 || (v104 & 0x4000000000000000) != 0)
                sub_2264C10BC(v104);
              if ((v103 & 0x8000000000000000) != 0)
                goto LABEL_226;
              if (v103 >= *(_QWORD *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_227;
              *(_QWORD *)((v104 & 0xFFFFFFFFFFFFFF8) + 8 * v103 + 0x20) = v98;
              swift_release();
              goto LABEL_143;
            }
            if (v101 != 1)
            {
              v105 = 5;
              do
              {
                v103 = v105 - 4;
                if ((v99 & 0xC000000000000001) != 0)
                  MEMORY[0x2276999E4](v105 - 4, v99);
                else
                  swift_retain();
                v106 = sub_22655C104();
                result = swift_release();
                if ((v106 & 1) != 0)
                  goto LABEL_151;
                v107 = v105 - 3;
                if (__OFADD__(v103, 1))
                  goto LABEL_210;
                ++v105;
              }
              while (v107 != v101);
            }
LABEL_140:
            swift_bridgeObjectRelease();
            swift_beginAccess();
            v93 = swift_retain();
            MEMORY[0x227699594](v93);
            if (*(_QWORD *)((*v91 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v91 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_22655CEF0();
            sub_22655CF08();
LABEL_143:
            sub_22655CEE4();
            swift_endAccess();
            v92 = v141 + 1;
            result = swift_release();
            v90 = v137;
            if (v92 == v140)
            {
              swift_bridgeObjectRelease();
              v2 = v128;
              v15 = *(_BYTE *)(v128 + 17);
              a1 = v129;
              break;
            }
          }
        }
      }
      if ((v15 & 0x20) == 0)
        return sub_2264B0238();
      v108 = a1[3];
      v140 = *(_QWORD *)(v108 + 16);
      if (!v140)
        return sub_2264B0238();
      v139 = v133 + *(int *)(v127 + 44);
      v109 = (uint64_t *)(v2 + 48);
      v138 = v108 + ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80));
      swift_bridgeObjectRetain();
      result = swift_beginAccess();
      v110 = 0;
      v137 = v108;
      while (1)
      {
        if (v110 >= *(_QWORD *)(v108 + 16))
          goto LABEL_217;
        v112 = v133;
        sub_22643D704(v138 + *(_QWORD *)(v143 + 72) * v110, v133, type metadata accessor for CapturedRoom.Surface);
        v113 = v145;
        v114 = v144;
        v115 = v146;
        (*(void (**)(char *, uint64_t, uint64_t))(v145 + 16))(v144, v139, v146);
        v142 = *(_OWORD *)(v112 + 16);
        sub_22643D748(v112, type metadata accessor for CapturedRoom.Surface);
        type metadata accessor for IULogManager.IULogEntry();
        v116 = swift_allocObject();
        (*(void (**)(uint64_t, char *, uint64_t))(v113 + 32))(v116 + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_uuid, v114, v115);
        *(_BYTE *)(v116
                 + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_category) = 2;
        *(_OWORD *)(v116
                  + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_dimensions) = v142;
        *(_BYTE *)(v116 + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_state) = v147;
        v117 = *v109;
        v118 = (unint64_t)*v109 >> 62;
        v141 = v110;
        if (v118)
        {
          swift_bridgeObjectRetain();
          v119 = sub_22655D400();
          if (!v119)
            goto LABEL_174;
        }
        else
        {
          v119 = *(_QWORD *)((v117 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v119)
            goto LABEL_174;
        }
        if ((v117 & 0xC000000000000001) != 0)
          MEMORY[0x2276999E4](0, v117);
        else
          swift_retain();
        v120 = sub_22655C104();
        swift_release();
        if ((v120 & 1) != 0)
        {
          v121 = 0;
LABEL_185:
          swift_bridgeObjectRelease();
          swift_beginAccess();
          v122 = *v109;
          swift_retain();
          result = swift_isUniquelyReferenced_nonNull_bridgeObject();
          *v109 = v122;
          if (!(_DWORD)result || v122 < 0 || (v122 & 0x4000000000000000) != 0)
            sub_2264C10BC(v122);
          if ((v121 & 0x8000000000000000) != 0)
            goto LABEL_228;
          if (v121 >= *(_QWORD *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_229;
          *(_QWORD *)((v122 & 0xFFFFFFFFFFFFFF8) + 8 * v121 + 0x20) = v116;
          swift_release();
          goto LABEL_177;
        }
        if (v119 != 1)
        {
          v123 = 5;
          do
          {
            v121 = v123 - 4;
            if ((v117 & 0xC000000000000001) != 0)
              MEMORY[0x2276999E4](v123 - 4, v117);
            else
              swift_retain();
            v124 = sub_22655C104();
            result = swift_release();
            if ((v124 & 1) != 0)
              goto LABEL_185;
            v125 = v123 - 3;
            if (__OFADD__(v121, 1))
              goto LABEL_211;
            ++v123;
          }
          while (v125 != v119);
        }
LABEL_174:
        swift_bridgeObjectRelease();
        swift_beginAccess();
        v111 = swift_retain();
        MEMORY[0x227699594](v111);
        if (*(_QWORD *)((*v109 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v109 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_22655CEF0();
        sub_22655CF08();
LABEL_177:
        sub_22655CEE4();
        swift_endAccess();
        v110 = v141 + 1;
        result = swift_release();
        v108 = v137;
        if (v110 == v140)
        {
          swift_bridgeObjectRelease();
          return sub_2264B0238();
        }
      }
    }
  }
  v32 = 5;
  while (1)
  {
    v30 = v32 - 4;
    if ((v26 & 0xC000000000000001) != 0)
      MEMORY[0x2276999E4](v32 - 4, v26);
    else
      swift_retain();
    v33 = sub_22655C104();
    result = swift_release();
    if ((v33 & 1) != 0)
      goto LABEL_15;
    v34 = v32 - 3;
    if (__OFADD__(v30, 1))
      break;
    ++v32;
    if (v34 == v28)
      goto LABEL_4;
  }
  __break(1u);
LABEL_207:
  __break(1u);
LABEL_208:
  __break(1u);
LABEL_209:
  __break(1u);
LABEL_210:
  __break(1u);
LABEL_211:
  __break(1u);
LABEL_212:
  __break(1u);
LABEL_213:
  __break(1u);
LABEL_214:
  __break(1u);
LABEL_215:
  __break(1u);
LABEL_216:
  __break(1u);
LABEL_217:
  __break(1u);
LABEL_218:
  __break(1u);
LABEL_219:
  __break(1u);
LABEL_220:
  __break(1u);
LABEL_221:
  __break(1u);
LABEL_222:
  __break(1u);
LABEL_223:
  __break(1u);
LABEL_224:
  __break(1u);
LABEL_225:
  __break(1u);
LABEL_226:
  __break(1u);
LABEL_227:
  __break(1u);
LABEL_228:
  __break(1u);
LABEL_229:
  __break(1u);
  return result;
}

uint64_t sub_2264B0238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t result;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD aBlock[6];

  v1 = sub_22655CBB4();
  v17 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_22655CBFC();
  v4 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22655CC14();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(id *)(v0 + 40);
  sub_22655CC08();
  sub_22655D0A0();

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  result = sub_22655CBA8();
  if ((result & 1) == 0)
  {
    sub_22646EF58();
    v13 = (void *)sub_22655D070();
    v14 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_2264B1144;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2264FA450;
    aBlock[3] = &block_descriptor_4;
    v15 = _Block_copy(aBlock);
    swift_release();
    sub_22655CBCC();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_2264B1164();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
    sub_2264B11AC();
    sub_22655D214();
    MEMORY[0x22769975C](0, v6, v3, v15);
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v17 + 8))(v3, v1);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v16);
  }
  return result;
}

uint64_t sub_2264B048C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  id v10;
  _BYTE v11[24];

  v0 = sub_22655BF00();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = result;
    sub_2264B05D4((uint64_t)v3);
    v6 = MEMORY[0x22769A944](v5 + 24);
    if (v6)
    {
      v7 = v6 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_debugDelegate;
      swift_beginAccess();
      if (MEMORY[0x22769A944](v7))
      {
        v8 = *(_QWORD *)(v7 + 8);
        ObjectType = swift_getObjectType();
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v3, ObjectType, v8);
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
    }
    v10 = *(id *)(v5 + 40);
    sub_22655D0AC();
    swift_release();

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
  }
  return result;
}

uint64_t sub_2264B05D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  int v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  _QWORD v36[2];
  __int128 v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  id v45;
  unint64_t v46;

  v3 = sub_22655BF30();
  MEMORY[0x24BDAC7A8](v3);
  v39 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22655BF00();
  v40 = *(_QWORD *)(v5 - 8);
  v41 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a1;
  sub_22655BEF4();
  swift_beginAccess();
  v8 = *(_QWORD *)(v1 + 48);
  if (!(v8 >> 62))
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
LABEL_17:
  swift_bridgeObjectRetain_n();
  v9 = sub_22655D400();
  swift_bridgeObjectRelease();
  if (!v9)
    return swift_bridgeObjectRelease();
LABEL_3:
  v38 = v8 & 0xC000000000000001;
  v10 = 4;
  v37 = xmmword_226563280;
  v36[0] = v8;
  v36[1] = 0x800000022656DE20;
  while (1)
  {
    v12 = v10 - 4;
    if (v38)
    {
      v13 = MEMORY[0x2276999E4](v10 - 4, v8);
      v14 = v10 - 3;
      if (__OFADD__(v12, 1))
        goto LABEL_16;
    }
    else
    {
      v13 = *(_QWORD *)(v8 + 8 * v10);
      swift_retain();
      v14 = v10 - 3;
      if (__OFADD__(v12, 1))
      {
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
    }
    v43 = v14;
    v45 = (id)sub_22655C0EC();
    v46 = v15;
    sub_22647D7C4();
    v16 = sub_22655D1C0();
    swift_bridgeObjectRelease();
    v17 = *(_QWORD *)(v16 + 16);
    if (!v17)
      break;
    v18 = (uint64_t *)(v16 + 32 * v17);
    v19 = *v18;
    v20 = v18[1];
    v22 = v18[2];
    v21 = v18[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    MEMORY[0x2276994D4](v19, v20, v22, v21);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255843100);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = v37;
    v24 = v13 + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_dimensions;
    v25 = *(_DWORD *)(v13
                    + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_dimensions);
    v26 = MEMORY[0x24BEE14E8];
    *(_QWORD *)(v23 + 56) = MEMORY[0x24BEE14E8];
    v27 = MEMORY[0x24BEE1568];
    *(_QWORD *)(v23 + 64) = MEMORY[0x24BEE1568];
    *(_DWORD *)(v23 + 32) = v25;
    v28 = *(_DWORD *)(v24 + 4);
    *(_QWORD *)(v23 + 96) = v26;
    *(_QWORD *)(v23 + 104) = v27;
    *(_DWORD *)(v23 + 72) = v28;
    v29 = *(_DWORD *)(v24 + 8);
    *(_QWORD *)(v23 + 136) = v26;
    *(_QWORD *)(v23 + 144) = v27;
    *(_DWORD *)(v23 + 112) = v29;
    sub_22655CDAC();
    v45 = 0;
    v46 = 0xE000000000000000;
    sub_22655CE24();
    swift_bridgeObjectRelease();
    sub_22655CE24();
    v44 = *(_BYTE *)(v13
                   + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_category);
    sub_22655D3A0();
    sub_22655CE24();
    sub_22655CE24();
    swift_bridgeObjectRelease();
    sub_22655CE24();
    v44 = *(_BYTE *)(v13 + OBJC_IVAR____TtCC8RoomPlan12IULogManagerP33_73A47EC0F8301663A69AEEEA37682C8C10IULogEntry_state);
    v30 = v44;
    sub_22655D3A0();
    sub_22655CE24();
    sub_22655BF24();
    sub_22655BF0C();
    if (v30)
    {
      KeyPath = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](KeyPath);
      v36[-2] = v32;
      swift_getKeyPath();
      if (v30 == 1)
        v11 = objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
      else
        v11 = objc_msgSend((id)objc_opt_self(), sel_systemRedColor);
    }
    else
    {
      v33 = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](v33);
      v36[-2] = v34;
      swift_getKeyPath();
      v11 = objc_msgSend((id)objc_opt_self(), sel_systemGreenColor);
    }
    v45 = v11;
    sub_2264B10A4();
    sub_22655BEC4();
    sub_22655BEE8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v41);
    ++v10;
    v8 = v36[0];
    if (v43 == v9)
      return swift_bridgeObjectRelease();
  }
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_2264B0B00()
{
  uint64_t v0;

  sub_22644F0C0(v0 + 24);

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IULogManager()
{
  return objc_opt_self();
}

uint64_t sub_2264B0B54()
{
  return type metadata accessor for IULogManager.IULogEntry();
}

uint64_t type metadata accessor for IULogManager.IULogEntry()
{
  uint64_t result;

  result = qword_255845620;
  if (!qword_255845620)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2264B0B98()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22655C140();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for IULogManager.IUState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2264B0C70 + 4 * byte_226562E54[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2264B0CA4 + 4 * byte_226562E4F[v4]))();
}

uint64_t sub_2264B0CA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264B0CAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2264B0CB4);
  return result;
}

uint64_t sub_2264B0CC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2264B0CC8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2264B0CCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264B0CD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IULogManager.IUState()
{
  return &type metadata for IULogManager.IUState;
}

uint64_t getEnumTagSinglePayload for CapturedRoom.Section.Label(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for IULogManager.IUCategory(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2264B0DCC + 4 * byte_226562E5E[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2264B0E00 + 4 * byte_226562E59[v4]))();
}

uint64_t sub_2264B0E00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264B0E08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2264B0E10);
  return result;
}

uint64_t sub_2264B0E1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2264B0E24);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2264B0E28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264B0E30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IULogManager.IUCategory()
{
  return &type metadata for IULogManager.IUCategory;
}

ValueMetadata *type metadata accessor for IULogManager.IULogCategories()
{
  return &type metadata for IULogManager.IULogCategories;
}

unint64_t sub_2264B0E60()
{
  unint64_t result;

  result = qword_2558456C0;
  if (!qword_2558456C0)
  {
    result = MEMORY[0x22769A794](&unk_226562F4C, &type metadata for IULogManager.IULogCategories);
    atomic_store(result, (unint64_t *)&qword_2558456C0);
  }
  return result;
}

unint64_t sub_2264B0EA8()
{
  unint64_t result;

  result = qword_2558456C8;
  if (!qword_2558456C8)
  {
    result = MEMORY[0x22769A794](&unk_226562F1C, &type metadata for IULogManager.IULogCategories);
    atomic_store(result, (unint64_t *)&qword_2558456C8);
  }
  return result;
}

unint64_t sub_2264B0EF0()
{
  unint64_t result;

  result = qword_2558456D0;
  if (!qword_2558456D0)
  {
    result = MEMORY[0x22769A794](&unk_226562F74, &type metadata for IULogManager.IULogCategories);
    atomic_store(result, (unint64_t *)&qword_2558456D0);
  }
  return result;
}

unint64_t sub_2264B0F38()
{
  unint64_t result;

  result = qword_2558456D8;
  if (!qword_2558456D8)
  {
    result = MEMORY[0x22769A794](&unk_226562FAC, &type metadata for IULogManager.IULogCategories);
    atomic_store(result, (unint64_t *)&qword_2558456D8);
  }
  return result;
}

unint64_t sub_2264B0F80()
{
  unint64_t result;

  result = qword_2558456E0;
  if (!qword_2558456E0)
  {
    result = MEMORY[0x22769A794](&unk_226563124, &type metadata for IULogManager.IUCategory);
    atomic_store(result, (unint64_t *)&qword_2558456E0);
  }
  return result;
}

unint64_t sub_2264B0FC8()
{
  unint64_t result;

  result = qword_2558456E8;
  if (!qword_2558456E8)
  {
    result = MEMORY[0x22769A794](&unk_2265631C4, &type metadata for IULogManager.IUState);
    atomic_store(result, (unint64_t *)&qword_2558456E8);
  }
  return result;
}

uint64_t sub_2264B100C()
{
  unint64_t v0;

  v0 = sub_22655D454();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_2264B1054()
{
  unint64_t v0;

  v0 = sub_22655D454();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

unint64_t sub_2264B10A4()
{
  unint64_t result;

  result = qword_2558456F0;
  if (!qword_2558456F0)
  {
    result = MEMORY[0x22769A794](MEMORY[0x24BEBBE08], MEMORY[0x24BEBBE18]);
    atomic_store(result, (unint64_t *)&qword_2558456F0);
  }
  return result;
}

uint64_t sub_2264B10EC()
{
  return 8;
}

uint64_t sub_2264B10F8()
{
  return swift_release();
}

uint64_t sub_2264B1100(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

_QWORD *sub_2264B1114(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_2264B1120()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2264B1144()
{
  return sub_2264B048C();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

unint64_t sub_2264B1164()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2558452F8;
  if (!qword_2558452F8)
  {
    v1 = sub_22655CBB4();
    result = MEMORY[0x22769A794](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_2558452F8);
  }
  return result;
}

unint64_t sub_2264B11AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255845300;
  if (!qword_255845300)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_255849200);
    result = MEMORY[0x22769A794](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_255845300);
  }
  return result;
}

uint64_t sub_2264B11FC()
{
  uint64_t v0;

  return ((uint64_t (*)(__n128))((char *)sub_2264B122C
                                         + 4
                                         * byte_2265633B0[*(unsigned __int8 *)(v0
                                                                             + OBJC_IVAR____TtC8RoomPlan8ScanItem_category)]))((__n128)xmmword_226563290);
}

double sub_2264B122C()
{
  uint64_t v0;

  if (*(float *)(v0 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawDimensions + 8) <= 0.0)
    return 0.000488281365;
  else
    return 0.000000119209317;
}

uint64_t sub_2264B1350(uint64_t a1, uint64_t a2)
{
  return sub_2264B2094(*(_QWORD *)a1, *(void **)(a1 + 8), *(_QWORD *)a2, *(void **)(a2 + 8));
}

double sub_2264B1364()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  type metadata accessor for TrajectoryManager();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 32) = 1;
  *(_BYTE *)(v0 + 40) = 3;
  v1 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 56) = v1;
  *(_QWORD *)(v0 + 64) = v1;
  *(_QWORD *)(v0 + 72) = v1;
  *(_OWORD *)(v0 + 80) = xmmword_2265633D0;
  *(_OWORD *)(v0 + 96) = xmmword_2265600C0;
  *(_OWORD *)(v0 + 112) = xmmword_2265600B0;
  *(_OWORD *)(v0 + 128) = xmmword_2265600A0;
  *(_QWORD *)&result = 3212836864;
  *(_OWORD *)(v0 + 144) = xmmword_2265600D0;
  *(_QWORD *)(v0 + 160) = 0;
  *(_QWORD *)(v0 + 168) = 0;
  *(_BYTE *)(v0 + 176) = 1;
  *(_QWORD *)(v0 + 184) = 0;
  qword_25585AF10 = v0;
  return result;
}

void sub_2264B13F0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;

  v2 = v1;
  v4 = sub_22655D0F4();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, sel_currentFrame, v5);
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, sel_camera);
    sub_22655D100();
    v11 = sub_22655D0E8();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v7, 2, v11) == 2)
    {
      sub_2264B2D0C((uint64_t)v7);
      v12 = sub_2264B1770(v9, a1);
      if (v12)
      {
        v13 = *(void **)(v1 + 16);
        v14 = *(void **)(v2 + 24);
        *(_QWORD *)(v2 + 16) = v12;
        *(_QWORD *)(v2 + 24) = v10;
        v15 = v12;
        v16 = v10;
        sub_2264B2D48(v13, v14);
        sub_2264B161C(v9, (uint64_t)objc_msgSend(v9, sel_deviceOrientation));
        sub_2264B21C0(v15);
        sub_2264B1A04(v15);

        return;
      }

    }
    else
    {

      sub_2264B2D0C((uint64_t)v7);
    }
    v17 = *(void **)(v1 + 16);
    v18 = *(void **)(v1 + 24);
    *(_QWORD *)(v1 + 16) = 0;
    *(_QWORD *)(v1 + 24) = 0;
    sub_2264B2D48(v17, v18);
  }
}

double sub_2264B156C()
{
  uint64_t v0;
  double result;

  if ((*(_BYTE *)(v0 + 176) & 1) == 0)
    return *(double *)(v0 + 160);
  result = 1.0995119e12;
  *(_OWORD *)(v0 + 160) = xmmword_2265633E0;
  *(_BYTE *)(v0 + 176) = 0;
  return result;
}

double sub_2264B1598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  float *v3;
  float32x4_t v4;
  float v5;
  float32x4_t v6;
  float32x4_t v7;
  double result;
  float32x4_t v9;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (float *)(v1 + 40);
    v4.i64[0] = 0;
    v4.i32[2] = 0;
    do
    {
      *(float32x2_t *)v6.f32 = vadd_f32(*(float32x2_t *)v4.f32, *(float32x2_t *)(v3 - 2));
      v5 = *v3;
      v3 += 4;
      v6.f32[2] = v4.f32[2] + v5;
      v6.i32[3] = 0;
      v4 = v6;
      --v2;
    }
    while (v2);
  }
  else
  {
    v6 = 0uLL;
  }
  v9 = v6;
  *(double *)v7.i64 = sub_2264B156C();
  *(_QWORD *)&result = vdivq_f32(v9, v7).u64[0];
  return result;
}

double sub_2264B161C(void *a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  float32x4_t v6;
  float32x4_t v7;
  float32x4_t v8;
  float32x4_t v9;
  double result;
  __n128 v11;
  float32x4_t v12;
  float32x4_t v13;
  float32x4_t v14;
  float32x4_t v15;
  float32x4_t v16;

  v5 = objc_msgSend(a1, sel_camera);
  objc_msgSend(v5, sel_transform);
  v13 = v6;
  v14 = v7;
  v15 = v8;
  v16 = v9;

  switch(a2)
  {
    case 1:
      *(_QWORD *)(v2 + 32) = 1;
      v11 = (__n128)xmmword_226563400;
      goto LABEL_8;
    case 2:
      *(_QWORD *)(v2 + 32) = 2;
      v11 = (__n128)xmmword_2265633F0;
      goto LABEL_8;
    case 3:
      *(_QWORD *)(v2 + 32) = 3;
      goto LABEL_6;
    case 4:
      *(_QWORD *)(v2 + 32) = 4;
      v11 = (__n128)xmmword_226563410;
LABEL_8:
      *(double *)v12.i64 = MEMORY[0x2276996F0](v11);
      *(_QWORD *)&result = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v13, v12.f32[0]), v15, *(float32x2_t *)v12.f32, 1), v16, v12, 2), v14, v12, 3).u64[0];
      break;
    case 5:
    case 6:
      sub_2264B161C(a1, *(_QWORD *)(v2 + 32));
      break;
    default:
LABEL_6:
      result = *(double *)v13.i64;
      break;
  }
  return result;
}

void *sub_2264B1770(void *a1, void *a2)
{
  uint64_t v2;
  float32x4_t v4;
  double v5;
  double v6;
  id v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;

  sub_2264B161C(a1, (uint64_t)objc_msgSend(a1, sel_deviceOrientation));
  *(_QWORD *)&v5 = vnegq_f32(v4).u64[0];
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB1520]), sel_initWithOrigin_direction_allowingTarget_alignment_, *(_QWORD *)(v2 + 80), 2, v6, v5);
  v8 = objc_msgSend(a2, sel_raycast_, v7);
  sub_22643F548(0, &qword_255845950);
  v9 = sub_22655CECC();

  if (v9 >> 62)
    goto LABEL_22;
  v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v10; v10 = sub_22655D400())
  {
    v11 = v9 & 0xC000000000000001;
    v12 = 4;
    do
    {
      if (v11)
        v13 = (id)MEMORY[0x2276999E4](v12 - 4, v9);
      else
        v13 = *(id *)(v9 + 8 * v12);
      v14 = v13;
      v15 = v12 - 3;
      if (__OFADD__(v12 - 4, 1))
      {
        __break(1u);
        goto LABEL_21;
      }
      if (!objc_msgSend(v13, sel_target))
      {
LABEL_18:

        swift_bridgeObjectRelease();
        goto LABEL_19;
      }

      ++v12;
    }
    while (v15 != v10);
    v16 = 4;
    while (1)
    {
      v17 = v11 ? (id)MEMORY[0x2276999E4](v16 - 4, v9) : *(id *)(v9 + 8 * v16);
      v14 = v17;
      v18 = v16 - 3;
      if (__OFADD__(v16 - 4, 1))
        break;
      if (objc_msgSend(v17, sel_target) == (id)2)
        goto LABEL_18;

      ++v16;
      if (v18 == v10)
        goto LABEL_17;
    }
LABEL_21:
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
  }
LABEL_17:

  swift_bridgeObjectRelease();
  v14 = 0;
LABEL_19:
  swift_bridgeObjectRelease();
  return v14;
}

float32x2_t sub_2264B1974()
{
  uint64_t v0;
  int32x2_t v1;
  uint64_t v2;
  uint64_t v3;
  float *v4;
  __int128 v5;
  uint64_t v6;
  float v7;
  __int128 v8;

  swift_beginAccess();
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = (float *)(v2 + 40);
    *(_QWORD *)&v5 = 0;
    DWORD2(v5) = 0;
    v6 = v3;
    do
    {
      *(float32x2_t *)&v8 = vadd_f32(*(float32x2_t *)&v5, *(float32x2_t *)(v4 - 2));
      v7 = *v4;
      v4 += 4;
      *((float *)&v8 + 2) = *((float *)&v5 + 2) + v7;
      HIDWORD(v8) = 0;
      v5 = v8;
      --v6;
    }
    while (v6);
  }
  else
  {
    *(_QWORD *)&v8 = 0;
  }
  *(float *)v1.i32 = (float)v3;
  return vdiv_f32(*(float32x2_t *)&v8, (float32x2_t)vdup_lane_s32(v1, 0));
}

id sub_2264B1A04(void *x0_0)
{
  uint64_t v1;
  float32x4_t v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  int32x4_t v8;
  int32x4_t v9;
  int8x16_t v10;
  float32x4_t v11;
  float32x4_t v12;
  float32x4_t v13;
  int32x4_t v14;
  int32x4_t v15;
  int8x16_t v16;
  float32x4_t v17;
  float32x4_t v18;
  id result;
  _QWORD *v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  float32x4_t v25;
  simd_float4x4 v26;

  objc_msgSend(x0_0, sel_worldTransform);
  *(double *)v3.i64 = simd_quaternion(v26);
  v25 = v3;
  v4 = objc_msgSend(x0_0, sel_anchor);
  if (v4)
  {
    v5 = v4;
    objc_opt_self();
    v6 = (void *)swift_dynamicCastObjCClass();
    if (v6)
    {
      v7 = (uint64_t)objc_msgSend(v6, sel_alignment);
      sub_2264B2C9C((uint64_t)&unk_24EDDFEE8);
      v8 = (int32x4_t)vmulq_f32(v25, (float32x4_t)xmmword_226563420);
      v9 = (int32x4_t)vnegq_f32((float32x4_t)v8);
      v10 = (int8x16_t)vtrn2q_s32(v8, vtrn1q_s32(v8, v9));
      v12 = vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v8, (int8x16_t)v9, 8uLL), *(float32x2_t *)v11.f32, 1), (float32x4_t)vextq_s8(v10, v10, 8uLL), v11.f32[0]);
      v13 = (float32x4_t)vrev64q_s32(v8);
      v13.i32[0] = v9.i32[1];
      v13.i32[3] = v9.i32[2];
      v14 = (int32x4_t)vmlaq_laneq_f32(v12, v13, v11, 2);
      v15 = (int32x4_t)vnegq_f32((float32x4_t)v14);
      v16 = (int8x16_t)vtrn2q_s32(v14, vtrn1q_s32(v14, v15));
      v17 = vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v14, (int8x16_t)v15, 8uLL), *(float32x2_t *)v25.f32, 1), (float32x4_t)vextq_s8(v16, v16, 8uLL), v25.f32[0]);
      v18 = (float32x4_t)vrev64q_s32(v14);
      v18.i32[0] = v15.i32[1];
      v18.i32[3] = v15.i32[2];
      if (COERCE_FLOAT(vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32(*(float32x4_t *)&v14, v25, 3), v18, v25, 2), v17).i32[1]) < -0.9)
        sub_2264B2C9C((uint64_t)&unk_24EDDFF18);

      goto LABEL_11;
    }

  }
  if (objc_msgSend(x0_0, sel_targetAlignment))
  {
    result = objc_msgSend(x0_0, sel_targetAlignment);
    if (result != (id)1)
      return result;
    v7 = 1;
  }
  else
  {
    v7 = 0;
  }
LABEL_11:
  v20 = (_QWORD *)(v1 + 48);
  swift_beginAccess();
  v21 = *(_QWORD **)(v1 + 48);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v1 + 48) = v21;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v21 = sub_226488898(0, v21[2] + 1, 1, v21);
    *v20 = v21;
  }
  v24 = v21[2];
  v23 = v21[3];
  if (v24 >= v23 >> 1)
  {
    v21 = sub_226488898((_QWORD *)(v23 > 1), v24 + 1, 1, v21);
    *v20 = v21;
  }
  v21[2] = v24 + 1;
  v21[v24 + 4] = v7;
  return (id)swift_endAccess();
}

uint64_t sub_2264B1C10()
{
  void **v0;

  sub_2264B2D48(v0[2], v0[3]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TrajectoryManager()
{
  return objc_opt_self();
}

void destroy for TrajectoryTrackingState(id *a1)
{
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
  {

  }
}

uint64_t _s8RoomPlan23TrajectoryTrackingStateOwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v4 = *(void **)(a2 + 8);
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    v5 = v3;
    v6 = v4;
  }
  return a1;
}

void **assignWithCopy for TrajectoryTrackingState(void **a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;

  v4 = *a1;
  v5 = *(void **)a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v5 >= 0xFFFFFFFF)
    {
      *a1 = v5;
      v10 = *(void **)(a2 + 8);
      a1[1] = v10;
      v11 = v5;
      v12 = v10;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if ((unint64_t)v5 < 0xFFFFFFFF)
  {

    goto LABEL_7;
  }
  *a1 = v5;
  v6 = v5;

  v7 = a1[1];
  v8 = *(void **)(a2 + 8);
  a1[1] = v8;
  v9 = v8;

  return a1;
}

void **assignWithTake for TrajectoryTrackingState(void **a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *a1;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {

LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *(void **)a2;

  v5 = a1[1];
  a1[1] = *(void **)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for TrajectoryTrackingState(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TrajectoryTrackingState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_2264B1ECC(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_2264B1EE4(_QWORD *result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for TrajectoryTrackingState()
{
  return &type metadata for TrajectoryTrackingState;
}

uint64_t storeEnumTagSinglePayload for Direction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2264B1F60 + 4 * byte_226563435[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2264B1F94 + 4 * byte_226563430[v4]))();
}

uint64_t sub_2264B1F94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264B1F9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2264B1FA4);
  return result;
}

uint64_t sub_2264B1FB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2264B1FB8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2264B1FBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264B1FC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Direction()
{
  return &type metadata for Direction;
}

unint64_t sub_2264B1FE4()
{
  unint64_t result;

  result = qword_255845940;
  if (!qword_255845940)
  {
    result = MEMORY[0x22769A794](&unk_226563554, &type metadata for Direction);
    atomic_store(result, (unint64_t *)&qword_255845940);
  }
  return result;
}

double sub_2264B2028()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 32) = 1;
  *(_BYTE *)(v0 + 40) = 3;
  v1 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 56) = v1;
  *(_QWORD *)(v0 + 64) = v1;
  *(_QWORD *)(v0 + 72) = v1;
  *(_OWORD *)(v0 + 80) = xmmword_2265633D0;
  *(_OWORD *)(v0 + 96) = xmmword_2265600C0;
  *(_OWORD *)(v0 + 112) = xmmword_2265600B0;
  *(_OWORD *)(v0 + 128) = xmmword_2265600A0;
  *(_QWORD *)&result = 3212836864;
  *(_OWORD *)(v0 + 144) = xmmword_2265600D0;
  *(_QWORD *)(v0 + 160) = 0;
  *(_QWORD *)(v0 + 168) = 0;
  *(_BYTE *)(v0 + 176) = 1;
  *(_QWORD *)(v0 + 184) = 0;
  return result;
}

uint64_t sub_2264B2094(unint64_t a1, void *a2, unint64_t a3, void *a4)
{
  uint64_t result;
  id v9;
  id v10;
  id v11;
  id v12;
  char v13;
  id v14;
  id v15;
  char v16;

  result = (a1 | a3) == 0;
  if (a1 && a3)
  {
    sub_22643F548(0, &qword_2558432B8);
    v9 = a4;
    v10 = (id)a1;
    v11 = (id)a3;
    v12 = a2;
    v13 = sub_22655D118();

    if ((v13 & 1) != 0)
    {
      if (a2)
      {
        if (a4)
        {
          sub_22643F548(0, &qword_255845948);
          v14 = v12;
          v15 = v9;
          v16 = sub_22655D118();

          return (v16 & 1) != 0;
        }
        v9 = v12;
      }
      else if (!a4)
      {
        return 1;
      }
    }
    else
    {

    }
    return 0;
  }
  return result;
}

void sub_2264B21C0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  id v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  char v33;
  void (*v34)(uint64_t, uint64_t);
  float32x4_t v35;
  uint64_t *v36;
  _QWORD *v37;
  char isUniquelyReferenced_nonNull_native;
  float32x4_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  float32x4_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  float32x4_t v52;
  _QWORD *v53;
  char v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  float32x4_t v63;
  float v64;
  float v65;
  float v66;
  float v67;
  float v68;
  float v69;
  float v70;
  float v71;
  float v72;
  float v73;
  float v74;
  float v75;
  float v76;
  float v77;
  float v78;
  float v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  float32x4_t v83;
  _QWORD *v84;
  char v85;
  unint64_t v86;
  unint64_t v87;
  float32x4_t *v88;
  float32x4_t v89;
  _QWORD *v90;
  char v91;
  unint64_t v92;
  unint64_t v93;
  _QWORD *v94;
  char v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  __int128 v105;
  float32x4_t v106;
  float32x4_t v107;

  v2 = v1;
  v4 = sub_22655C140();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  *(_QWORD *)&v105 = (char *)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558432E8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
  MEMORY[0x24BDAC7A8](v10);
  v106.i64[0] = (uint64_t)&v105 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v105 - v13;
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v105 - v17;
  v107.i64[0] = (uint64_t)a1;
  v19 = objc_msgSend(a1, sel_anchor, v16);
  if (v19)
  {
    v20 = v19;
    v21 = objc_msgSend(v19, sel_identifier);

    sub_22655C110();
    v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v22(v18, 0, 1, v4);
  }
  else
  {
    v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v22(v18, 1, 1, v4);
  }
  v23 = *(void **)(v2 + 184);
  if (v23)
  {
    v24 = objc_msgSend(v23, (SEL)&selRef_layoutSubviews);
    sub_22655C110();

    v25 = 0;
  }
  else
  {
    v25 = 1;
  }
  v26 = v106.i64[0];
  v22(v14, v25, 1, v4);
  v27 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_226450C20((uint64_t)v18, (uint64_t)v9);
  sub_226450C20((uint64_t)v14, v27);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v28((uint64_t)v9, 1, v4) == 1)
  {
    sub_22643D7E4((uint64_t)v14, (uint64_t *)&unk_255849AC0);
    sub_22643D7E4((uint64_t)v18, (uint64_t *)&unk_255849AC0);
    if (v28(v27, 1, v4) == 1)
    {
      sub_22643D7E4((uint64_t)v9, (uint64_t *)&unk_255849AC0);
      goto LABEL_15;
    }
    goto LABEL_12;
  }
  sub_226450C20((uint64_t)v9, v26);
  if (v28(v27, 1, v4) == 1)
  {
    sub_22643D7E4((uint64_t)v14, (uint64_t *)&unk_255849AC0);
    sub_22643D7E4((uint64_t)v18, (uint64_t *)&unk_255849AC0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v26, v4);
LABEL_12:
    sub_22643D7E4((uint64_t)v9, &qword_2558432E8);
LABEL_13:
    swift_beginAccess();
    v29 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v2 + 56) = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *(_QWORD *)(v2 + 64) = v29;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *(_QWORD *)(v2 + 72) = v29;
    swift_bridgeObjectRelease();
    v30 = objc_msgSend((id)v107.i64[0], sel_anchor);
    v31 = *(void **)(v2 + 184);
    *(_QWORD *)(v2 + 184) = v30;

    return;
  }
  v32 = v105;
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v5 + 32))(v105, v27, v4);
  sub_2264B2D74();
  v33 = sub_22655CD04();
  v34 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v34(v32, v4);
  sub_22643D7E4((uint64_t)v14, (uint64_t *)&unk_255849AC0);
  sub_22643D7E4((uint64_t)v18, (uint64_t *)&unk_255849AC0);
  v34(v26, v4);
  sub_22643D7E4((uint64_t)v9, (uint64_t *)&unk_255849AC0);
  if ((v33 & 1) == 0)
    goto LABEL_13;
LABEL_15:
  objc_msgSend((id)v107.i64[0], sel_localTransform);
  v107 = v35;
  v36 = (uint64_t *)(v2 + 64);
  swift_beginAccess();
  v37 = *(_QWORD **)(v2 + 64);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v2 + 64) = v37;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v37 = sub_226486AE0(0, v37[2] + 1, 1, v37);
    *v36 = (uint64_t)v37;
  }
  v39 = v107;
  v39.i32[3] = 0;
  v41 = v37[2];
  v40 = v37[3];
  if (v41 >= v40 >> 1)
  {
    v107 = v39;
    v103 = sub_226486AE0((_QWORD *)(v40 > 1), v41 + 1, 1, v37);
    v39 = v107;
    v37 = v103;
    *v36 = (uint64_t)v103;
  }
  v37[2] = v41 + 1;
  *(float32x4_t *)&v37[2 * v41 + 4] = v39;
  v42 = *v36;
  swift_endAccess();
  v43 = *(_QWORD *)(v42 + 16);
  if (v43 >= 0x3C)
    v44 = v43 - 60;
  else
    v44 = 0;
  sub_22655D574();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  v45 = swift_dynamicCastClass();
  if (!v45)
  {
    swift_bridgeObjectRelease();
    v45 = MEMORY[0x24BEE4AF8];
  }
  v46 = *(_QWORD *)(v45 + 16);
  swift_release();
  if (v46 == v43 - v44)
  {
    v47 = swift_dynamicCastClass();
    if (!v47)
    {
      swift_bridgeObjectRelease();
      v47 = MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v47 = sub_226536268(v42, v42 + 32, v44, (2 * v43) | 1);
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = v47;
  swift_bridgeObjectRelease();
  *(float32x2_t *)v48.f32 = sub_2264B1974();
  v107 = v48;
  v49 = (uint64_t *)(v2 + 72);
  swift_beginAccess();
  v50 = *(_QWORD *)(v2 + 72);
  v51 = *(_QWORD *)(v50 + 16);
  v52 = v107;
  if (v51)
    v52 = *(float32x4_t *)(v50 + 16 * v51 + 16);
  v106 = v52;
  swift_beginAccess();
  v53 = (_QWORD *)*v49;
  v54 = swift_isUniquelyReferenced_nonNull_native();
  *v49 = (uint64_t)v53;
  if ((v54 & 1) == 0)
  {
    v53 = sub_226486AE0(0, v53[2] + 1, 1, v53);
    *v49 = (uint64_t)v53;
  }
  v56 = v53[2];
  v55 = v53[3];
  if (v56 >= v55 >> 1)
  {
    v53 = sub_226486AE0((_QWORD *)(v55 > 1), v56 + 1, 1, v53);
    *v49 = (uint64_t)v53;
  }
  v53[2] = v56 + 1;
  *(float32x4_t *)&v53[2 * v56 + 4] = v107;
  v57 = *v49;
  swift_endAccess();
  v58 = *(_QWORD *)(v57 + 16);
  if (v58 >= 0x3C)
    v59 = v58 - 60;
  else
    v59 = 0;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  v60 = swift_dynamicCastClass();
  if (!v60)
  {
    swift_bridgeObjectRelease();
    v60 = MEMORY[0x24BEE4AF8];
  }
  v61 = *(_QWORD *)(v60 + 16);
  swift_release();
  if (v61 == v58 - v59)
  {
    v62 = swift_dynamicCastClass();
    if (!v62)
    {
      swift_bridgeObjectRelease();
      v62 = MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v62 = sub_226536268(v57, v57 + 32, v59, (2 * v58) | 1);
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 72) = v62;
  swift_bridgeObjectRelease();
  v63 = vsubq_f32(v107, v106);
  v63.i32[3] = 0;
  v106 = *(float32x4_t *)(v2 + 128);
  v107 = v63;
  sub_22655D604();
  v65 = v64;
  sub_22655D604();
  v67 = v66;
  v105 = *(_OWORD *)(v2 + 96);
  sub_22655D604();
  v69 = v68;
  sub_22655D604();
  v71 = v70;
  sub_22655D604();
  v73 = v72;
  sub_22655D604();
  v75 = v74;
  if (v71 >= v69)
    v76 = v69;
  else
    v76 = v71;
  if (v67 >= v65)
    v77 = v65;
  else
    v77 = v67;
  if (v77 < v76)
    v76 = v77;
  if (v75 >= v73)
    v78 = v73;
  else
    v78 = v75;
  if (v78 >= v76)
    v79 = v76;
  else
    v79 = v78;
  v80 = (uint64_t *)(v2 + 56);
  swift_beginAccess();
  v81 = *(_QWORD *)(v2 + 56);
  v82 = *(_QWORD *)(v81 + 16);
  v83 = v106;
  if (v82)
    v83 = *(float32x4_t *)(v81 + 16 * v82 + 16);
  if (v79 == v65)
  {
    v107 = *(float32x4_t *)(v2 + 144);
    swift_beginAccess();
    v84 = *(_QWORD **)(v2 + 56);
    v85 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v2 + 56) = v84;
    if ((v85 & 1) == 0)
    {
      v84 = sub_226486AE0(0, v84[2] + 1, 1, v84);
      *v80 = (uint64_t)v84;
    }
    v87 = v84[2];
    v86 = v84[3];
    if (v87 >= v86 >> 1)
    {
      v84 = sub_226486AE0((_QWORD *)(v86 > 1), v87 + 1, 1, v84);
      *v80 = (uint64_t)v84;
    }
    v84[2] = v87 + 1;
    v88 = (float32x4_t *)&v84[2 * v87];
    v89 = v107;
LABEL_78:
    v88[2] = v89;
    v81 = *v80;
    swift_endAccess();
    goto LABEL_79;
  }
  if (v79 == v67)
  {
    swift_beginAccess();
    v90 = (_QWORD *)*v80;
    v91 = swift_isUniquelyReferenced_nonNull_native();
    *v80 = (uint64_t)v90;
    if ((v91 & 1) == 0)
    {
      v90 = sub_226486AE0(0, v90[2] + 1, 1, v90);
      *v80 = (uint64_t)v90;
    }
    v93 = v90[2];
    v92 = v90[3];
    if (v93 >= v92 >> 1)
    {
      v90 = sub_226486AE0((_QWORD *)(v92 > 1), v93 + 1, 1, v90);
      *v80 = (uint64_t)v90;
    }
    v90[2] = v93 + 1;
    v88 = (float32x4_t *)&v90[2 * v93];
    v89 = v106;
    goto LABEL_78;
  }
  v107 = v83;
  if (v79 == v69 || v79 == v71 || v79 == v73 || v79 == v75)
  {
    swift_beginAccess();
    v94 = (_QWORD *)*v80;
    v95 = swift_isUniquelyReferenced_nonNull_native();
    *v80 = (uint64_t)v94;
    if ((v95 & 1) == 0)
    {
      v94 = sub_226486AE0(0, v94[2] + 1, 1, v94);
      *v80 = (uint64_t)v94;
    }
    v89 = v107;
    v97 = v94[2];
    v96 = v94[3];
    if (v97 >= v96 >> 1)
    {
      v104 = sub_226486AE0((_QWORD *)(v96 > 1), v97 + 1, 1, v94);
      v89 = v107;
      v94 = v104;
      *v80 = (uint64_t)v104;
    }
    v94[2] = v97 + 1;
    v88 = (float32x4_t *)&v94[2 * v97];
    goto LABEL_78;
  }
LABEL_79:
  v98 = *(_QWORD *)(v81 + 16);
  if (v98 >= 0x3C)
    v99 = v98 - 60;
  else
    v99 = 0;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  v100 = swift_dynamicCastClass();
  if (!v100)
  {
    swift_bridgeObjectRelease();
    v100 = MEMORY[0x24BEE4AF8];
  }
  v101 = *(_QWORD *)(v100 + 16);
  swift_release();
  if (v101 == v98 - v99)
  {
    v102 = swift_dynamicCastClass();
    if (!v102)
    {
      swift_bridgeObjectRelease();
      v102 = MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v102 = sub_226536268(v81, v81 + 32, v99, (2 * v98) | 1);
  }
  swift_bridgeObjectRelease();
  *v80 = v102;
  swift_bridgeObjectRelease();
}

uint64_t sub_2264B2C9C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  __int128 v4;
  int v5;
  __int128 v6;

  v1 = *(_QWORD *)(result + 16);
  if (v1)
  {
    v2 = 0;
    v3 = 3;
    if ((unint64_t)(v1 - 1) < 3)
      v3 = v1 - 1;
    v4 = 0uLL;
    do
    {
      if ((unint64_t)(v1 - 1) > 2)
      {
        __break(1u);
        goto LABEL_10;
      }
      v5 = *(_DWORD *)(result + 32 + 4 * v2);
      v6 = v4;
      *(_DWORD *)((unint64_t)&v6 & 0xFFFFFFFFFFFFFFF3 | (4 * (v2 & 3))) = v5;
      v4 = v6;
      ++v2;
    }
    while (v1 != v2);
    if (v3 < 2)
      goto LABEL_10;
  }
  else
  {
LABEL_10:
    __break(1u);
  }
  return result;
}

uint64_t sub_2264B2D0C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_22655D0F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2264B2D48(void *a1, void *a2)
{
  if (a1)
  {

  }
}

unint64_t sub_2264B2D74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255840120;
  if (!qword_255840120)
  {
    v1 = sub_22655C140();
    result = MEMORY[0x22769A794](MEMORY[0x24BDCEA98], v1);
    atomic_store(result, (unint64_t *)&qword_255840120);
  }
  return result;
}

uint64_t destroy for ScanItemEdge()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ScanItemEdge(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ScanItemEdge(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy36_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ScanItemEdge(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScanItemEdge(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 36))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScanItemEdge(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 36) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 36) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScanItemEdge()
{
  return &type metadata for ScanItemEdge;
}

uint64_t sub_2264B2FD8@<X0>(_QWORD *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  float v10;
  float32x4_t *v11;
  unint64_t v12;
  unint64_t v13;
  float32x4_t v14;
  int32x4_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  float32x4_t v19;
  float32x4_t v20;

  v4 = *a2;
  v5 = sub_226503E4C(a1, 0.001);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 < 2)
  {
    v9 = (char *)MEMORY[0x24BEE4AF8];
    v10 = 0.0;
  }
  else
  {
    swift_bridgeObjectRetain();
    v7 = 0;
    v8 = v6 - 1;
    v9 = (char *)MEMORY[0x24BEE4AF8];
    v10 = 0.0;
    do
    {
      v11 = (float32x4_t *)(v5 + 16 * v7);
      v19 = v11[3];
      v20 = v11[2];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v9 = sub_2264880D8(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
      v13 = *((_QWORD *)v9 + 2);
      v12 = *((_QWORD *)v9 + 3);
      if (v13 >= v12 >> 1)
        v9 = sub_2264880D8((char *)(v12 > 1), v13 + 1, 1, v9);
      ++v7;
      v14 = vsubq_f32(v20, v19);
      v15 = (int32x4_t)vmulq_f32(v14, v14);
      *(float *)v15.i32 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32(v15, 2), vaddq_f32((float32x4_t)v15, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v15.i8, 1))).f32[0]);
      *((_QWORD *)v9 + 2) = v13 + 1;
      *(_DWORD *)&v9[4 * v13 + 32] = v15.i32[0];
      v10 = v10 + *(float *)v15.i32;
    }
    while (v8 != v7);
    swift_bridgeObjectRelease();
  }
  v16 = swift_bridgeObjectRetain();
  v17 = sub_2264B39DC(v16, v10);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a3 = v5;
  *(_BYTE *)(a3 + 8) = v4;
  *(_QWORD *)(a3 + 16) = v9;
  *(_QWORD *)(a3 + 24) = v17;
  *(float *)(a3 + 32) = v10;
  return result;
}

uint64_t sub_2264B3158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unint64_t v14;
  float v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  __int128 v20;
  float v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  float v26;
  float32x2_t *v27;
  float32x2_t *v28;
  float v29;
  float v30;
  float32x2_t v31;
  float32x2_t v32;
  unint64_t v33;
  unint64_t v34;
  float v35;
  float v36;
  __int128 v37;
  uint64_t ObjCClassFromMetadata;
  id v39;
  id v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  __int128 v69;
  char *v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  char v82[9];

  v5 = sub_22655CB84();
  v74 = *(_QWORD *)(v5 - 8);
  v75 = v5;
  MEMORY[0x24BDAC7A8](v5);
  MEMORY[0x24BDAC7A8](v6);
  v9 = *v2;
  v10 = *((unsigned __int8 *)v2 + 8);
  v12 = v2[2];
  v11 = v2[3];
  v13 = *((_DWORD *)v2 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  if (v14 < 3 || !*(_QWORD *)(v11 + 16))
  {
    *(_QWORD *)a2 = v9;
    *(_BYTE *)(a2 + 8) = v10;
    *(_QWORD *)(a2 + 16) = v12;
    *(_QWORD *)(a2 + 24) = v11;
    *(_DWORD *)(a2 + 32) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  v67 = (char *)&v65 - v7;
  v77 = v8;
  HIDWORD(v65) = v10;
  v66 = a2;
  v15 = *(float *)(v11 + 32);
  v78 = v11 + 32;
  v79 = v9 + 32;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  v18 = 0;
  v19 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v70 = "nBorder";
  *(_QWORD *)&v20 = 136315394;
  v69 = v20;
  v68 = MEMORY[0x24BEE4AD8] + 8;
  v76 = v9;
  v72 = v14;
  v73 = v12;
  while (1)
  {
    v21 = *(float *)(a1 + 4 * v18 + 32);
    if (vabds_f32(v15, v21) >= 0.0001)
    {
      if (v21 >= v15)
      {
        type metadata accessor for Constants();
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        v39 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
        v40 = objc_msgSend(v39, sel_bundleIdentifier);

        if (v40)
        {
          sub_22655CD88();

        }
        sub_22643D680();
        sub_22655D124();
        sub_22655CB90();
        swift_bridgeObjectRetain_n();
        v44 = v76;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        v45 = sub_22655CB6C();
        v46 = sub_22655CFF8();
        if (os_log_type_enabled(v45, v46))
        {
          v47 = swift_slowAlloc();
          v71 = swift_slowAlloc();
          v81 = v71;
          *(_DWORD *)v47 = v69;
          v48 = swift_bridgeObjectRetain();
          v49 = MEMORY[0x2276995B8](v48, MEMORY[0x24BEE14E8]);
          *(_QWORD *)&v80 = v19;
          v50 = v11;
          v51 = v49;
          v53 = v52;
          swift_bridgeObjectRelease();
          *(_QWORD *)(v47 + 4) = sub_2264F4EC4(v51, v53, &v81);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v47 + 12) = 2080;
          v54 = swift_bridgeObjectRetain();
          v55 = MEMORY[0x2276995B8](v54, MEMORY[0x24BEE14E8]);
          v57 = v56;
          swift_bridgeObjectRelease();
          v58 = v55;
          v11 = v50;
          v19 = (_QWORD *)v80;
          *(_QWORD *)(v47 + 14) = sub_2264F4EC4(v58, v57, &v81);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_226423000, v45, v46, "Unexpected interpolated value when trying to interpolate edge (inputPercentages: %s, interpolatedPercentages: %s)", (uint8_t *)v47, 0x16u);
          v59 = v71;
          swift_arrayDestroy();
          MEMORY[0x22769A884](v59, -1, -1);
          v60 = v47;
          v14 = v72;
          MEMORY[0x22769A884](v60, -1, -1);

          result = (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 8))(v77, v75);
          v9 = v76;
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          result = (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 8))(v77, v75);
          v9 = v44;
        }
      }
      else if (v17 <= 0)
      {
        type metadata accessor for Constants();
        v41 = swift_getObjCClassFromMetadata();
        v42 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v41);
        v43 = objc_msgSend(v42, sel_bundleIdentifier);

        if (v43)
        {
          sub_22655CD88();

        }
        sub_22643D680();
        sub_22655D124();
        v61 = v67;
        sub_22655CB90();
        v62 = sub_22655CB6C();
        v63 = sub_22655CFF8();
        if (os_log_type_enabled(v62, v63))
        {
          v64 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v64 = 0;
          _os_log_impl(&dword_226423000, v62, v63, "Unexpected input index when trying to interpolate edge", v64, 2u);
          MEMORY[0x22769A884](v64, -1, -1);
        }

        result = (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v61, v75);
        v9 = v76;
        v14 = v72;
      }
      else
      {
        v24 = v17 - 1;
        if ((unint64_t)(v17 - 1) >= *(_QWORD *)(v11 + 16))
          goto LABEL_38;
        v25 = *(_QWORD *)(v9 + 16);
        if (v24 >= v25)
          goto LABEL_39;
        if (v17 >= v25)
          goto LABEL_40;
        v26 = *(float *)(v78 + 4 * v24);
        v27 = (float32x2_t *)(v79 + 16 * v24);
        v28 = (float32x2_t *)(v79 + 16 * v17);
        v29 = v28[1].f32[0];
        v30 = v27[1].f32[0];
        v31 = *v28;
        v32 = *v27;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_226486AE0(0, v19[2] + 1, 1, v19);
          v19 = (_QWORD *)result;
        }
        v34 = v19[2];
        v33 = v19[3];
        if (v34 >= v33 >> 1)
        {
          result = (uint64_t)sub_226486AE0((_QWORD *)(v33 > 1), v34 + 1, 1, v19);
          v19 = (_QWORD *)result;
        }
        v35 = (float)(v21 - v26) / (float)(v15 - v26);
        v36 = v35 * (float)(v29 - v30);
        *(float32x2_t *)&v37 = vadd_f32(v32, vmul_n_f32(vsub_f32(v31, v32), v35));
        *((_QWORD *)&v37 + 1) = COERCE_UNSIGNED_INT(v30 + v36);
        v19[2] = v34 + 1;
        *(_OWORD *)&v19[2 * v34 + 4] = v37;
      }
      goto LABEL_5;
    }
    if (v17 < 0)
      break;
    if ((unint64_t)v17 >= *(_QWORD *)(v9 + 16))
      goto LABEL_37;
    v80 = *(_OWORD *)(v79 + 16 * v17);
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_226486AE0(0, v19[2] + 1, 1, v19);
      v19 = (_QWORD *)result;
    }
    v23 = v19[2];
    v22 = v19[3];
    if (v23 >= v22 >> 1)
    {
      result = (uint64_t)sub_226486AE0((_QWORD *)(v22 > 1), v23 + 1, 1, v19);
      v19 = (_QWORD *)result;
    }
    v19[2] = v23 + 1;
    *(_OWORD *)&v19[2 * v23 + 4] = v80;
    if ((unint64_t)++v17 >= *(_QWORD *)(v11 + 16))
    {
LABEL_35:
      swift_bridgeObjectRelease();
      v82[0] = BYTE4(v65);
      return sub_2264B2FD8(v19, v82, v66);
    }
    v15 = *(float *)(v78 + 4 * v17);
LABEL_5:
    if (v14 == ++v18)
      goto LABEL_35;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_2264B393C(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  float v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  float v9;
  BOOL v10;
  uint64_t result;

  v2 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v5 = *(float *)(a1 + 32);
  v6 = *(unsigned __int8 *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v9 = *(float *)(a2 + 32);
  v10 = sub_226495400(*(_QWORD *)a1, *(_QWORD *)a2);
  result = 0;
  if (v10 && v2 == v6)
  {
    if (sub_2264954C0(v4, v8))
      return sub_2264954C0(v3, v7) & (v5 == v9);
    else
      return 0;
  }
  return result;
}

char *sub_2264B39DC(uint64_t a1, float a2)
{
  uint64_t v2;
  char *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  float v10;
  float v11;
  unint64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (char *)MEMORY[0x24BEE4AF8];
  v5 = sub_2264880D8(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v7 = *((_QWORD *)v5 + 2);
  v6 = *((_QWORD *)v5 + 3);
  if (v7 >= v6 >> 1)
    v5 = sub_2264880D8((char *)(v6 > 1), v7 + 1, 1, v5);
  *((_QWORD *)v5 + 2) = v7 + 1;
  *(_DWORD *)&v5[4 * v7 + 32] = 0;
  swift_bridgeObjectRetain();
  v8 = 0;
  v9 = v7 + 9;
  v10 = 0.0;
  do
  {
    v11 = *(float *)(a1 + 32 + 4 * v8);
    v12 = *((_QWORD *)v5 + 3);
    if (v9 - 8 >= v12 >> 1)
      v5 = sub_2264880D8((char *)(v12 > 1), v9 - 7, 1, v5);
    ++v8;
    v10 = v10 + v11;
    *((_QWORD *)v5 + 2) = v9 - 7;
    *(float *)&v5[4 * v9++] = v10 / a2;
  }
  while (v2 != v8);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t type metadata accessor for Helper()
{
  return objc_opt_self();
}

uint64_t sub_2264B3B30(unint64_t a1, uint64_t a2, uint64_t a3, int a4, __n128 a5, __n128 a6)
{
  __n128 *v6;
  unint64_t v7;
  __n128 *v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(_BYTE *, _QWORD);
  void (*v18)(_BYTE *, _QWORD);
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(_BYTE *, _QWORD);
  uint64_t v31;
  uint64_t v32;
  void (*v33)(unint64_t, uint64_t);
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  __n128 v41;
  _BYTE v42[32];
  int v43;

  v8 = v6;
  v40 = a6;
  v41 = a5;
  v43 = a4;
  v39 = a2;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255840110);
  MEMORY[0x24BDAC7A8](v11);
  v36 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_22655C974();
  v13 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v34 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[1] = v41;
  v15 = (char *)v6 + OBJC_IVAR____TtC8RoomPlan22MeshUpdateScanMaterial_customMaterial;
  v16 = sub_22655CAD0();
  v37 = *(_QWORD *)(v16 - 8);
  v38 = v16;
  (*(void (**)(char *, unint64_t))(v37 + 16))(v15, a1);
  objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, v41.n128_f32[0], v41.n128_f32[1], v41.n128_f32[2], v41.n128_f32[3]);
  swift_beginAccess();
  v17 = (void (*)(_BYTE *, _QWORD))sub_22655CAB8();
  sub_22655CA94();
  v17(v42, 0);
  v18 = (void (*)(_BYTE *, _QWORD))sub_22655CA10();
  sub_22655C95C();
  v18(v42, 0);
  swift_endAccess();
  type metadata accessor for MeshParamTexture();
  result = swift_allocObject();
  if ((unint64_t)(a3 - 0x2000000000000000) >> 62 == 3)
  {
    v20 = result;
    v41.n128_u64[0] = a1;
    v40.n128_u64[0] = v7;
    if ((v43 & 1) != 0)
      v21 = 6;
    else
      v21 = 3;
    type metadata accessor for MetalConstants();
    swift_initStaticObject();
    v22 = (void *)sub_22648BC28();
    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDD740]), sel_init);
    objc_msgSend(v23, sel_setPixelFormat_, 55);
    objc_msgSend(v23, sel_setWidth_, 4 * a3);
    objc_msgSend(v23, sel_setHeight_, v21);
    objc_msgSend(v23, sel_setUsage_, 3);
    v24 = objc_msgSend(v22, sel_newTextureWithDescriptor_, v23);
    swift_unknownObjectRelease();

    if (v24)
    {
      *(_QWORD *)(v20 + OBJC_IVAR____TtC8RoomPlan16MeshParamTexture_texture) = v24;
      *(_QWORD *)(v20 + OBJC_IVAR____TtC8RoomPlan16MeshParamTexture_vertexCount) = a3;
      *(_BYTE *)(v20 + OBJC_IVAR____TtC8RoomPlan16MeshParamTexture_storeNormals) = v43 & 1;
      *(_QWORD *)(v20 + OBJC_IVAR____TtC8RoomPlan16MeshParamTexture_bytesPerRow) = 4 * a3;
      sub_22655C44C();
      swift_unknownObjectRetain();
      sub_22655C440();
      v25 = v34;
      sub_22655C980();
      swift_unknownObjectRelease();
      v26 = v25;
      v27 = v35;
      (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v20 + OBJC_IVAR____TtC8RoomPlan16MeshParamTexture_materialTexture, v26, v35);
      *(unint64_t *)((char *)v8->n128_u64 + OBJC_IVAR____TtC8RoomPlan22MeshUpdateScanMaterial_paramTexture) = v20;
      v28 = v20 + OBJC_IVAR____TtC8RoomPlan16MeshParamTexture_materialTexture;
      v29 = v36;
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v36, v28, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v29, 0, 1, v27);
      swift_beginAccess();
      v30 = (void (*)(_BYTE *, _QWORD))sub_22655CA10();
      sub_22655C968();
      v30(v42, 0);
      swift_endAccess();
      swift_unknownObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v37 + 8))(v41.n128_u64[0], v38);
    }
    else
    {
      sub_2264B4220();
      swift_allocError();
      *(_OWORD *)v31 = xmmword_226563600;
      *(_BYTE *)(v31 + 16) = 2;
      swift_willThrow();
      swift_deallocPartialClassInstance();
      swift_unknownObjectRelease();
      v32 = v38;
      v33 = *(void (**)(unint64_t, uint64_t))(v37 + 8);
      v33(v41.n128_u64[0], v38);
      v33((unint64_t)v8->n128_u64 + OBJC_IVAR____TtC8RoomPlan22MeshUpdateScanMaterial_customMaterial, v32);
      type metadata accessor for MeshUpdateScanMaterial();
      swift_deallocPartialClassInstance();
    }
    return (uint64_t)v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2264B3FF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8RoomPlan22MeshUpdateScanMaterial_customMaterial;
  v2 = sub_22655CAD0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2264B4050()
{
  return type metadata accessor for MeshUpdateScanMaterial();
}

uint64_t type metadata accessor for MeshUpdateScanMaterial()
{
  uint64_t result;

  result = qword_255845A30;
  if (!qword_255845A30)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2264B4094()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22655CAD0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2264B4118@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v7;

  v3 = *v1;
  v4 = sub_22655CAD0();
  v5 = MEMORY[0x24BDE74C8];
  a1[3] = v4;
  a1[4] = v5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  v7 = v3 + OBJC_IVAR____TtC8RoomPlan22MeshUpdateScanMaterial_customMaterial;
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(boxed_opaque_existential_1, v7, v4);
}

__n128 sub_2264B41A4()
{
  __n128 **v0;

  return (*v0)[1];
}

BOOL sub_2264B41B0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*v1 + OBJC_IVAR____TtC8RoomPlan22MeshUpdateScanMaterial_paramTexture);
  return !v2 || *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan16MeshParamTexture_vertexCount) != a1;
}

uint64_t sub_2264B41E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t result;

  if (*(_QWORD *)(*v3 + OBJC_IVAR____TtC8RoomPlan22MeshUpdateScanMaterial_paramTexture))
    return sub_22650E4B4(a2, a3);
  return result;
}

unint64_t sub_2264B4220()
{
  unint64_t result;

  result = qword_255845AF8;
  if (!qword_255845AF8)
  {
    result = MEMORY[0x22769A794](&unk_2265681A0, &type metadata for MeshParamTextureError);
    atomic_store(result, (unint64_t *)&qword_255845AF8);
  }
  return result;
}

void *static CapturedRoom.Surface.Edge.allCases.getter()
{
  return &unk_24EDDEB68;
}

uint64_t sub_2264B4270(void (*a1)(__int128 *__return_ptr, __int128 *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  __int128 *i;
  __int128 v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_2264C1310(0, v5, 0);
    v6 = v17;
    for (i = (__int128 *)(a3 + 32); ; ++i)
    {
      v15 = *i;
      a1(&v16, &v15);
      if (v4)
        break;
      v4 = 0;
      v10 = v16;
      v17 = v6;
      v12 = *(_QWORD *)(v6 + 16);
      v11 = *(_QWORD *)(v6 + 24);
      if (v12 >= v11 >> 1)
      {
        v14 = v16;
        sub_2264C1310(v11 > 1, v12 + 1, 1);
        v10 = v14;
        v6 = v17;
      }
      *(_QWORD *)(v6 + 16) = v12 + 1;
      *(_OWORD *)(v6 + 16 * v12 + 32) = v10;
      if (!--v5)
        return v6;
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_2264B4384(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a3 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x24BEE4AF8];
    if (!v6)
      break;
    v12 = MEMORY[0x24BEE4AF8];
    result = sub_22655D37C();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    v8 = 0;
    while (v6 != v8)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        v9 = MEMORY[0x2276999E4](v8, a3);
      }
      else
      {
        v9 = *(_QWORD *)(a3 + 8 * v8 + 32);
        swift_retain();
      }
      v10 = v9;
      a1(&v11, &v10);
      swift_release();
      if (v3)
        return swift_release();
      ++v8;
      sub_22655D364();
      sub_22655D388();
      sub_22655D394();
      sub_22655D370();
      if (v6 == v8)
        return v12;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    v6 = sub_22655D400();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2264B44F4(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2264B452C(a1, a2, a3, a4, type metadata accessor for CapturedRoom.Surface);
}

uint64_t sub_2264B4510(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2264B452C(a1, a2, a3, a4, type metadata accessor for CapturedRoom.Object);
}

uint64_t sub_2264B452C(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = v5;
  v8 = *(_QWORD *)(a3 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v8)
  {
    v16 = MEMORY[0x24BEE4AF8];
    sub_22655D37C();
    v12 = *(_QWORD *)(a5(0) - 8);
    v13 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v14 = *(_QWORD *)(v12 + 72);
    while (1)
    {
      a1(&v15, v13);
      if (v6)
        break;
      v6 = 0;
      sub_22655D364();
      sub_22655D388();
      sub_22655D394();
      sub_22655D370();
      v13 += v14;
      if (!--v8)
        return v16;
    }
    return swift_release();
  }
  return result;
}

uint64_t static CapturedRoom.Surface.Category.== infix(_:_:)(_BYTE *a1, unsigned __int8 *a2)
{
  int v2;
  uint64_t result;

  v2 = *a2;
  switch(*a1)
  {
    case 2:
      if (v2 != 2)
        goto LABEL_11;
      goto LABEL_9;
    case 3:
      if (v2 != 3)
        goto LABEL_11;
      goto LABEL_9;
    case 4:
      if (v2 != 4)
        goto LABEL_11;
      goto LABEL_9;
    case 5:
      if (v2 != 5)
        goto LABEL_11;
LABEL_9:
      result = 1;
      break;
    default:
      if ((v2 - 2) >= 4)
        result = (((*a1 & 1) == 0) ^ v2) & 1;
      else
LABEL_11:
        result = 0;
      break;
  }
  return result;
}

uint64_t sub_2264B46C4(_QWORD **a1, float32x4_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v7[2];

  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_2264C12CC(v3);
  v4 = v3[2];
  v7[0] = (uint64_t)(v3 + 4);
  v7[1] = v4;
  result = sub_2264C94CC(v7, a2);
  *a1 = v3;
  return result;
}

uint64_t CapturedRoom.Section.Label.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2264B476C + 4 * byte_226563674[*v0]))(0x6F52676E6976696CLL, 0xEA00000000006D6FLL);
}

uint64_t sub_2264B476C()
{
  return 0x6D6F6F72646562;
}

uint64_t sub_2264B4784()
{
  return 0x6D6F6F7268746162;
}

uint64_t sub_2264B479C()
{
  return 0x6E65686374696BLL;
}

uint64_t sub_2264B47B4()
{
  return 0x6F52676E696E6964;
}

uint64_t sub_2264B47C8()
{
  return 0x69746E6564696E75;
}

void sub_2264B47E8(uint64_t a1, uint64_t a2)
{
  char *v2;
  _QWORD v3[6];

  v3[5] = *MEMORY[0x24BDAC8D0];
  v3[3] = MEMORY[0x24BDCDDE8];
  v3[4] = MEMORY[0x24BDCDDC8];
  v3[0] = a1;
  v3[1] = a2;
  v2 = (char *)&loc_2264B484C
     + *((int *)qword_2264B4A80 + (__swift_project_boxed_opaque_existential_1(v3, MEMORY[0x24BDCDDE8])[1] >> 62));
  __asm { BR              X10 }
}

uint64_t sub_2264B485C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  __int16 v7;
  char v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v6 = v2;
  v7 = v3;
  v8 = BYTE2(v3);
  v9 = BYTE3(v3);
  v10 = BYTE4(v3);
  v11 = BYTE5(v3);
  sub_226482694(v1, v0);
  sub_2264CA388(&v6, (_BYTE *)&v6 + BYTE6(v3), &v12);
  sub_226455C98(v1, v0);
  v4 = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v13);
  return v4;
}

void *static CapturedRoom.Object.Category.allCases.getter()
{
  return &unk_24EDDEF88;
}

void CapturedRoom.Object.Category.supportedAttributeTypes.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_2264B4ACC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2264B4ADC()
{
  uint64_t v0;
  unint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2558437F8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_22655F8F0;
  v1 = sub_226488FAC();
  *(_QWORD *)(v0 + 32) = &type metadata for StorageType;
  *(_QWORD *)(v0 + 40) = v1;
  return sub_2264B4ACC();
}

uint64_t sub_2264B4B50()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2558437F8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_22655FA80;
  v1 = sub_2264890BC();
  *(_QWORD *)(v0 + 32) = &type metadata for ChairType;
  *(_QWORD *)(v0 + 40) = v1;
  v2 = sub_226489100();
  *(_QWORD *)(v0 + 48) = &type metadata for ChairBackType;
  *(_QWORD *)(v0 + 56) = v2;
  v3 = sub_226489144();
  *(_QWORD *)(v0 + 64) = &type metadata for ChairLegType;
  *(_QWORD *)(v0 + 72) = v3;
  v4 = sub_226489188();
  *(_QWORD *)(v0 + 80) = &type metadata for ChairArmType;
  *(_QWORD *)(v0 + 88) = v4;
  return sub_2264B4ACC();
}

uint64_t sub_2264B4BBC()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2558437F8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_22655FA10;
  v1 = sub_226488FF0();
  *(_QWORD *)(v0 + 32) = &type metadata for TableType;
  *(_QWORD *)(v0 + 40) = v1;
  v2 = sub_226489034();
  *(_QWORD *)(v0 + 48) = &type metadata for TableShapeType;
  *(_QWORD *)(v0 + 56) = v2;
  return sub_2264B4ACC();
}

void sub_2264B4C08(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[8];

  v12[3] = a1;
  v12[7] = *MEMORY[0x24BDAC8D0];
  v1 = sub_22655CCB0();
  v12[1] = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_22655CDC4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22655CC80();
  v12[2] = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  sub_22655CDB8();
  v7 = sub_22655CD94();
  v9 = v8;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v9 >> 60 != 15)
  {
    sub_22655C068();
    v11 = v10;
    sub_226483A78(v7, v9);
    sub_226437F28(&qword_255843760, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8], MEMORY[0x24BDC6AE8]);
    sub_22655CC74();
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x2264B4FE4);
}

uint64_t sub_2264B4FF8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2264B5028 + 4 * byte_22656368A[a1]))(0x736D6F6F72, 0xE500000000000000);
}

uint64_t sub_2264B5028()
{
  return 0x736C6C6177;
}

uint64_t sub_2264B5038()
{
  return 0x73726F6F64;
}

uint64_t sub_2264B5048()
{
  return 0x73776F646E6977;
}

uint64_t sub_2264B5060()
{
  return 0x73676E696E65706FLL;
}

uint64_t sub_2264B5078()
{
  return 0x73726F6F6C66;
}

uint64_t sub_2264B508C()
{
  return 0x737463656A626FLL;
}

uint64_t sub_2264B50A4()
{
  return 0x6E6F6973726576;
}

uint64_t sub_2264B50BC()
{
  return 0x65646F4D65726F63;
}

uint64_t sub_2264B50D8()
{
  return 0x79726F7473;
}

uint64_t sub_2264B50E8()
{
  return 0x736E6F6974636573;
}

uint64_t sub_2264B5100(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2264B5130 + 4 * byte_226563695[a1]))(0x736D6F6F72, 0xE500000000000000);
}

uint64_t sub_2264B5130()
{
  return 0x736C6C6177;
}

uint64_t sub_2264B5140()
{
  return 0x73726F6F64;
}

uint64_t sub_2264B5150()
{
  return 0x73776F646E6977;
}

uint64_t sub_2264B5168()
{
  return 0x73676E696E65706FLL;
}

uint64_t sub_2264B5180()
{
  return 0x73726F6F6C66;
}

uint64_t sub_2264B5194()
{
  return 0x737463656A626FLL;
}

uint64_t sub_2264B51AC()
{
  return 0x6E6F6973726576;
}

uint64_t sub_2264B51C4()
{
  return 0x65646F4D65726F63;
}

uint64_t sub_2264B51E0()
{
  return 0x79726F7473;
}

uint64_t sub_2264B51F0()
{
  return 0x736E6F6974636573;
}

uint64_t sub_2264B5208(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_2264B99CC(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_2264B4FF8);
}

uint64_t sub_2264B5214(uint64_t a1, uint64_t a2)
{
  return sub_2264B9A64(a1, a2, (void (*)(uint64_t))sub_2264B4FF8);
}

uint64_t sub_2264B5220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2264B9AD4(a1, a2, a3, (void (*)(_QWORD))sub_2264B4FF8);
}

uint64_t sub_2264B522C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2264B9B20(a1, a2, a3, (void (*)(uint64_t))sub_2264B4FF8);
}

uint64_t sub_2264B5238@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2264CA8CC();
  *a1 = result;
  return result;
}

uint64_t sub_2264B5264@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2264B4FF8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2264B528C()
{
  unsigned __int8 *v0;

  return sub_2264B5100(*v0);
}

uint64_t sub_2264B5294@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2264CA8CC();
  *a1 = result;
  return result;
}

void sub_2264B52B8(_BYTE *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_2264B52C4()
{
  sub_2264B6360();
  return sub_22655D6A0();
}

uint64_t sub_2264B52EC()
{
  sub_2264B6360();
  return sub_22655D6AC();
}

uint64_t sub_2264B5314(uint64_t a1, unsigned int (*a2)(uint64_t, uint64_t, uint64_t), void *a3, void *a4, int a5)
{
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *inited;
  uint64_t v14;
  uint64_t *boxed_opaque_existential_1;
  id v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v25[2];
  uint64_t v26[5];
  int v27;

  v7 = v5;
  type metadata accessor for USDModel();
  inited = (_QWORD *)swift_initStackObject();
  v14 = MEMORY[0x24BEE4B00];
  inited[2] = MEMORY[0x24BEE4B00];
  inited[3] = 1633973109;
  inited[4] = 0xE400000000000000;
  inited[5] = v14;
  v26[3] = type metadata accessor for CapturedStructure(0);
  v26[4] = sub_226437F28(&qword_255846728, type metadata accessor for CapturedStructure, (uint64_t)&unk_226563824);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v26);
  sub_22643D704(v7, (uint64_t)boxed_opaque_existential_1, type metadata accessor for CapturedStructure);
  v25[0] = a3;
  v25[1] = a4;
  if (a5)
    v27 = a5;
  else
    v27 = 7;
  sub_226470028(v26, a1, a2, v25, &v27);
  if (v6)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    v26[0] = (uint64_t)v6;
    v16 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558436F8);
    if (swift_dynamicCast())
    {
      v17 = (char)v25[0];
      if (qword_25583F930 != -1)
        swift_once();
      LOBYTE(v26[0]) = v17;
      v18 = sub_22655CDDC();
      v20 = v19;
      v21 = type metadata accessor for CapturedStructure(0);
      sub_2264AB2A4(v18, v20, *(_QWORD *)(v7 + *(int *)(v21 + 52)));
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_25583F930 != -1)
        swift_once();
      v23 = type metadata accessor for CapturedStructure(0);
      sub_2264AB2A4(0x73726568746FLL, 0xE600000000000000, *(_QWORD *)(v7 + *(int *)(v23 + 52)));
    }
    if (qword_25583F930 != -1)
      swift_once();
    sub_2264AB6C8();
    swift_willThrow();
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    if (qword_25583F930 != -1)
      swift_once();
    v22 = type metadata accessor for CapturedStructure(0);
    sub_2264AB2A4(0x73736563637573, 0xE700000000000000, *(_QWORD *)(v7 + *(int *)(v22 + 52)));
    sub_2264AB6C8();
  }
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2264B5654(uint64_t a1, unsigned int (*a2)(uint64_t, uint64_t, uint64_t), void *a3, void *a4, int a5)
{
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *inited;
  uint64_t v14;
  uint64_t *boxed_opaque_existential_1;
  id v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v25[2];
  uint64_t v26[5];
  int v27;

  v7 = v5;
  type metadata accessor for USDModel();
  inited = (_QWORD *)swift_initStackObject();
  v14 = MEMORY[0x24BEE4B00];
  inited[2] = MEMORY[0x24BEE4B00];
  inited[3] = 1633973109;
  inited[4] = 0xE400000000000000;
  inited[5] = v14;
  v26[3] = type metadata accessor for CapturedRoom(0);
  v26[4] = sub_226437F28(&qword_255846720, type metadata accessor for CapturedRoom, (uint64_t)&unk_226564090);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v26);
  sub_22643D704(v7, (uint64_t)boxed_opaque_existential_1, type metadata accessor for CapturedRoom);
  v25[0] = a3;
  v25[1] = a4;
  if (a5)
    v27 = a5;
  else
    v27 = 7;
  sub_226470028(v26, a1, a2, v25, &v27);
  if (v6)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    v26[0] = (uint64_t)v6;
    v16 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558436F8);
    if (swift_dynamicCast())
    {
      v17 = (char)v25[0];
      if (qword_25583F930 != -1)
        swift_once();
      LOBYTE(v26[0]) = v17;
      v18 = sub_22655CDDC();
      v20 = v19;
      v21 = type metadata accessor for CapturedRoom(0);
      sub_2264AB2A4(v18, v20, *(_QWORD *)(v7 + *(int *)(v21 + 52)));
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_25583F930 != -1)
        swift_once();
      v23 = type metadata accessor for CapturedRoom(0);
      sub_2264AB2A4(0x73726568746FLL, 0xE600000000000000, *(_QWORD *)(v7 + *(int *)(v23 + 52)));
    }
    if (qword_25583F930 != -1)
      swift_once();
    sub_2264AB6C8();
    swift_willThrow();
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    if (qword_25583F930 != -1)
      swift_once();
    v22 = type metadata accessor for CapturedRoom(0);
    sub_2264AB2A4(0x73736563637573, 0xE700000000000000, *(_QWORD *)(v7 + *(int *)(v22 + 52)));
    sub_2264AB6C8();
  }
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t CapturedStructure.floors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CapturedStructure.sections.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CapturedStructure.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CapturedStructure(0) + 48);
  v4 = sub_22655C140();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for CapturedStructure(uint64_t a1)
{
  return sub_2264AA720(a1, qword_2558460C8);
}

uint64_t CapturedStructure.version.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for CapturedStructure(0) + 52));
}

uint64_t CapturedStructure.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v22 = a2;
  v3 = sub_22655D334();
  v24 = *(_QWORD *)(v3 - 8);
  v25 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v23 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v27 = (char *)&v19 - v6;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845B00);
  v7 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CapturedStructure(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(int *)(v13 + 52);
  *(_QWORD *)((char *)v12 + v14) = 2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2264B6360();
  v15 = (uint64_t)v28;
  sub_22655D688();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = v7;
  v28 = a1;
  LOBYTE(v29) = 7;
  v16 = v26;
  v20 = sub_22655D4A8();
  *(_QWORD *)((char *)v12 + v14) = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255845B10);
  LOBYTE(v30) = 0;
  sub_2264B63A4();
  sub_22655D4B4();
  *v12 = v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255845B28);
  LOBYTE(v30) = 1;
  sub_2264B6F78();
  sub_22655D4B4();
  v12[1] = v29;
  LOBYTE(v30) = 2;
  v27 = 0;
  sub_22655D4B4();
  v12[2] = v29;
  LOBYTE(v30) = 3;
  sub_22655D4B4();
  v12[3] = v29;
  LOBYTE(v30) = 4;
  sub_22655D4B4();
  v12[4] = v29;
  if (v20 >= 2)
  {
    LOBYTE(v30) = 5;
    sub_22655D4B4();
    v18 = v29;
  }
  else
  {
    v18 = MEMORY[0x24BEE4AF8];
  }
  v12[6] = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255845B40);
  LOBYTE(v30) = 6;
  sub_2264B7008();
  sub_22655D4B4();
  v12[5] = v29;
  sub_22655C134();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255845B58);
  LOBYTE(v30) = 8;
  sub_2264C1378(&qword_255845B60, &qword_255845B58, (uint64_t (*)(void))sub_2264B7098, MEMORY[0x24BEE12D0]);
  sub_22655D4B4();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v16);
  v12[7] = v29;
  sub_22643D704((uint64_t)v12, v22, type metadata accessor for CapturedStructure);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  return sub_22643D748((uint64_t)v12, type metadata accessor for CapturedStructure);
}

unint64_t sub_2264B6360()
{
  unint64_t result;

  result = qword_255845B08;
  if (!qword_255845B08)
  {
    result = MEMORY[0x22769A794](&unk_2265663B4, &type metadata for CapturedVolumeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845B08);
  }
  return result;
}

unint64_t sub_2264B63A4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255845B18;
  if (!qword_255845B18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255845B10);
    v2 = sub_226437F28(&qword_255845B20, type metadata accessor for CapturedRoom, (uint64_t)&protocol conformance descriptor for CapturedRoom);
    result = MEMORY[0x22769A794](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255845B18);
  }
  return result;
}

uint64_t type metadata accessor for CapturedRoom(uint64_t a1)
{
  return sub_2264AA720(a1, qword_255846178);
}

uint64_t CapturedRoom.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;

  v47 = a2;
  v49 = sub_22655D334();
  v46 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v45 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v51 = (uint64_t)v36 - v5;
  v6 = sub_22655CC98();
  v43 = *(_QWORD *)(v6 - 8);
  v44 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v48 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845B00);
  v8 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CapturedRoom(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(int *)(v14 + 48);
  *(_QWORD *)&v13[v15] = 0;
  v16 = *(int *)(v14 + 52);
  *(_QWORD *)&v13[v16] = 2;
  v17 = a1[3];
  v53 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_2264B6360();
  v18 = v52;
  sub_22655D688();
  if (v18)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  v41 = v15;
  v42 = (int *)v11;
  v52 = v13;
  LOBYTE(v56) = 7;
  v19 = v50;
  v20 = sub_22655D4A8();
  v21 = v52;
  *(_QWORD *)((char *)v52 + v16) = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255845B28);
  LOBYTE(v54) = 1;
  sub_2264B6F78();
  sub_22655D4B4();
  v40 = v20;
  *v21 = v56;
  LOBYTE(v54) = 2;
  sub_22655D4B4();
  v39 = v8;
  v21[1] = v56;
  LOBYTE(v54) = 3;
  sub_22655D4B4();
  v21[2] = v56;
  LOBYTE(v54) = 4;
  v38 = 0;
  sub_22655D4B4();
  v36[1] = 0;
  v37 = v10;
  v21[3] = v56;
  v23 = MEMORY[0x24BEE4AF8];
  if (v40 >= 2)
  {
    LOBYTE(v54) = 5;
    sub_22655D4B4();
    v24 = v56;
  }
  else
  {
    v24 = MEMORY[0x24BEE4AF8];
  }
  v25 = v52;
  v52[4] = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255845B40);
  LOBYTE(v54) = 6;
  sub_2264B7008();
  sub_22655D4B4();
  v25[5] = v56;
  *(_QWORD *)((char *)v25 + v42[14]) = v23;
  sub_22655C134();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255845B58);
  LOBYTE(v54) = 8;
  sub_2264C1378(&qword_255845B60, &qword_255845B58, (uint64_t (*)(void))sub_2264B7098, MEMORY[0x24BEE12D0]);
  sub_22655D4B4();
  v26 = v52;
  *(_QWORD *)((char *)v52 + v42[11]) = v56;
  v27 = (uint64_t)v48;
  LOBYTE(v56) = 10;
  *(_QWORD *)((char *)v26 + v41) = sub_22655D4A8();
  sub_2264B4C08(v27);
  LOBYTE(v54) = 9;
  sub_226482534();
  sub_22655D4B4();
  v28 = v56;
  sub_226482694(v56, *((unint64_t *)&v56 + 1));
  sub_226482578(v28, *((uint64_t *)&v28 + 1));
  v51 = v29;
  v31 = v30;
  v49 = sub_22655CC2C();
  v33 = v32;
  sub_22643F548(0, &qword_255848000);
  result = sub_22655D040();
  if (v55)
  {
    sub_226455C98(v49, v33);
    sub_226455C98(v51, v31);
    sub_226455C98(v28, *((unint64_t *)&v28 + 1));
    (*(void (**)(char *, uint64_t))(v43 + 8))(v48, v44);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v37, v19);
    sub_226455C88(&v54, &v56);
    sub_22643F548(0, (unint64_t *)&unk_255848540);
    swift_dynamicCast();
    v35 = (uint64_t)v52;
    *(_QWORD *)((char *)v52 + v42[15]) = v57;
    v34 = (uint64_t)v53;
    sub_22643D704(v35, v47, type metadata accessor for CapturedRoom);
    __swift_destroy_boxed_opaque_existential_1(v34);
    return sub_22643D748(v35, type metadata accessor for CapturedRoom);
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_2264B6F78()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255845B30;
  if (!qword_255845B30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255845B28);
    v2 = sub_226437F28(&qword_255845B38, type metadata accessor for CapturedRoom.Surface, (uint64_t)&protocol conformance descriptor for CapturedRoom.Surface);
    result = MEMORY[0x22769A794](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255845B30);
  }
  return result;
}

uint64_t type metadata accessor for CapturedRoom.Surface(uint64_t a1)
{
  return sub_2264AA720(a1, qword_255846230);
}

unint64_t sub_2264B7008()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255845B48;
  if (!qword_255845B48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255845B40);
    v2 = sub_226437F28(&qword_255845B50, type metadata accessor for CapturedRoom.Object, (uint64_t)&protocol conformance descriptor for CapturedRoom.Object);
    result = MEMORY[0x22769A794](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255845B48);
  }
  return result;
}

uint64_t type metadata accessor for CapturedRoom.Object(uint64_t a1)
{
  return sub_2264AA720(a1, qword_255846398);
}

unint64_t sub_2264B7098()
{
  unint64_t result;

  result = qword_255845B68;
  if (!qword_255845B68)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for CapturedRoom.Section, &type metadata for CapturedRoom.Section);
    atomic_store(result, (unint64_t *)&qword_255845B68);
  }
  return result;
}

uint64_t CapturedStructure.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845B70);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2264B6360();
  sub_22655D694();
  v11 = *v3;
  HIBYTE(v10) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255845B10);
  sub_2264B7408();
  sub_22655D514();
  if (!v2)
  {
    v11 = v3[1];
    HIBYTE(v10) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255845B28);
    sub_2264B7484();
    sub_22655D514();
    v11 = v3[2];
    HIBYTE(v10) = 2;
    sub_22655D514();
    v11 = v3[3];
    HIBYTE(v10) = 3;
    sub_22655D514();
    v11 = v3[4];
    HIBYTE(v10) = 4;
    sub_22655D514();
    v11 = v3[6];
    HIBYTE(v10) = 5;
    sub_22655D514();
    v11 = v3[5];
    HIBYTE(v10) = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255845B40);
    sub_2264B7500();
    sub_22655D514();
    v11 = v3[7];
    HIBYTE(v10) = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255845B58);
    sub_2264C1378(&qword_255845BA8, &qword_255845B58, (uint64_t (*)(void))sub_2264B757C, MEMORY[0x24BEE12A0]);
    sub_22655D514();
    type metadata accessor for CapturedStructure(0);
    LOBYTE(v11) = 7;
    sub_22655D508();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_2264B7408()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255845B78;
  if (!qword_255845B78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255845B10);
    v2 = sub_226437F28(&qword_255845B80, type metadata accessor for CapturedRoom, (uint64_t)&protocol conformance descriptor for CapturedRoom);
    result = MEMORY[0x22769A794](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255845B78);
  }
  return result;
}

unint64_t sub_2264B7484()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255845B88;
  if (!qword_255845B88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255845B28);
    v2 = sub_226437F28(&qword_255845B90, type metadata accessor for CapturedRoom.Surface, (uint64_t)&protocol conformance descriptor for CapturedRoom.Surface);
    result = MEMORY[0x22769A794](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255845B88);
  }
  return result;
}

unint64_t sub_2264B7500()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255845B98;
  if (!qword_255845B98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255845B40);
    v2 = sub_226437F28(&qword_255845BA0, type metadata accessor for CapturedRoom.Object, (uint64_t)&protocol conformance descriptor for CapturedRoom.Object);
    result = MEMORY[0x22769A794](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255845B98);
  }
  return result;
}

unint64_t sub_2264B757C()
{
  unint64_t result;

  result = qword_255845BB0;
  if (!qword_255845BB0)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for CapturedRoom.Section, &type metadata for CapturedRoom.Section);
    atomic_store(result, (unint64_t *)&qword_255845BB0);
  }
  return result;
}

void static CapturedRoom.USDExportOptions.mesh.getter(_DWORD *a1@<X8>)
{
  *a1 = 2;
}

uint64_t CapturedStructure.export(to:metadataURL:modelProvider:exportOptions:)(uint64_t a1, uint64_t a2, _QWORD *a3, unsigned int *a4)
{
  return sub_2264B7DBC(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD))sub_2264B5314);
}

uint64_t sub_2264B75E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CapturedStructure.init(from:)(a1, a2);
}

uint64_t sub_2264B75FC(_QWORD *a1)
{
  return CapturedStructure.encode(to:)(a1);
}

uint64_t sub_2264B7610()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2264B7618()
{
  return swift_bridgeObjectRetain();
}

uint64_t CapturedRoom.walls.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CapturedRoom.doors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CapturedRoom.windows.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CapturedRoom.openings.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CapturedRoom.floors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CapturedRoom.objects.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CapturedRoom.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CapturedRoom(0) + 40);
  v4 = sub_22655C140();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CapturedRoom.sections.getter()
{
  type metadata accessor for CapturedRoom(0);
  return swift_bridgeObjectRetain();
}

uint64_t CapturedRoom.story.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for CapturedRoom(0) + 48));
}

uint64_t CapturedRoom.version.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for CapturedRoom(0) + 52));
}

uint64_t CapturedRoom.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  id v40;
  unint64_t v41;
  uint64_t v42;

  v2 = v1;
  v42 = *MEMORY[0x24BDAC8D0];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255843708);
  MEMORY[0x24BDAC7A8](v4);
  v36 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_22655CC98();
  v6 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845B70);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2264B6360();
  sub_22655D694();
  v13 = v2;
  v40 = *(id *)v2;
  v39 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255845B28);
  sub_2264B7484();
  v14 = v38;
  sub_22655D514();
  if (v14)
  {
    v15 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    return v15(v12, v9);
  }
  v34 = v6;
  v35 = v8;
  v38 = v10;
  v40 = *(id *)(v2 + 8);
  v39 = 2;
  sub_22655D514();
  v40 = *(id *)(v2 + 16);
  v39 = 3;
  sub_22655D514();
  v16 = v38;
  v40 = *(id *)(v2 + 24);
  v39 = 4;
  sub_22655D514();
  v40 = *(id *)(v2 + 32);
  v39 = 5;
  sub_22655D514();
  v40 = *(id *)(v2 + 40);
  v39 = 6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255845B40);
  sub_2264B7500();
  sub_22655D514();
  v17 = type metadata accessor for CapturedRoom(0);
  LOBYTE(v40) = 7;
  sub_22655D508();
  v40 = *(id *)(v2 + *(int *)(v17 + 44));
  v39 = 8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255845B58);
  sub_2264C1378(&qword_255845BA8, &qword_255845B58, (uint64_t (*)(void))sub_2264B757C, MEMORY[0x24BEE12A0]);
  sub_22655D514();
  LOBYTE(v40) = 10;
  sub_22655D508();
  v19 = (uint64_t)v35;
  sub_2264B4C08((uint64_t)v35);
  v20 = (void *)objc_opt_self();
  v21 = *(_QWORD *)(v13 + *(int *)(v17 + 60));
  v40 = 0;
  v22 = objc_msgSend(v20, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v21, 0, &v40);
  v23 = v40;
  if (!v22)
  {
    v29 = v23;
    sub_22655BF6C();

    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v19, v37);
    v15 = *(uint64_t (**)(char *, uint64_t))(v16 + 8);
    return v15(v12, v9);
  }
  v24 = (void *)sub_22655C080();
  v26 = v25;

  v40 = v24;
  v41 = v26;
  v33 = v26;
  v27 = sub_22655CC44();
  v28 = (uint64_t)v36;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v36, 1, 1, v27);
  sub_22648329C();
  v30 = (void *)sub_22655CC38();
  v32 = v31;
  sub_22643D7E4(v28, &qword_255843708);
  v40 = v30;
  v41 = v32;
  v39 = 9;
  sub_226482694((uint64_t)v30, v32);
  sub_2264832E0();
  sub_22655D514();
  sub_226455C98((uint64_t)v24, v33);
  sub_226455C98((uint64_t)v30, v32);
  sub_226455C98((uint64_t)v30, v32);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v37);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v12, v9);
}

uint64_t CapturedRoom.export(to:exportOptions:)(uint64_t a1, _DWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849210);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  LODWORD(a2) = *a2;
  v7 = sub_22655C05C();
  (*(void (**)(unsigned int (*)(uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_2264B5654(a1, v6, 0, 0, (int)a2);
  return sub_22643D7E4((uint64_t)v6, &qword_255849210);
}

uint64_t CapturedRoom.export(to:metadataURL:modelProvider:exportOptions:)(uint64_t a1, uint64_t a2, _QWORD *a3, unsigned int *a4)
{
  return sub_2264B7DBC(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD))sub_2264B5654);
}

uint64_t sub_2264B7DBC(uint64_t a1, uint64_t a2, _QWORD *a3, unsigned int *a4, uint64_t (*a5)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD))
{
  return a5(a1, a2, *a3, a3[1], *a4);
}

uint64_t CapturedRoom.Error.errorDescription.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2264B7E1C + 4 * byte_2265636A0[*v0]))(0xD000000000000012, 0x800000022656E0F0);
}

uint64_t sub_2264B7E1C@<X0>(uint64_t a1@<X8>)
{
  return a1 - 12;
}

BOOL static CapturedRoom.Confidence.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CapturedRoom.Confidence.hash(into:)()
{
  return sub_22655D64C();
}

uint64_t sub_2264B7EB8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6D756964656DLL;
  if (*v0 != 1)
    v1 = 7827308;
  if (*v0)
    return v1;
  else
    return 1751607656;
}

uint64_t sub_2264B7F00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2264CA914(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2264B7F24()
{
  sub_2264B8300();
  return sub_22655D6A0();
}

uint64_t sub_2264B7F4C()
{
  sub_2264B8300();
  return sub_22655D6AC();
}

uint64_t sub_2264B7F74()
{
  return 0;
}

uint64_t sub_2264B7F80()
{
  sub_2264B83CC();
  return sub_22655D6A0();
}

uint64_t sub_2264B7FA8()
{
  sub_2264B83CC();
  return sub_22655D6AC();
}

uint64_t sub_2264B7FD0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_2264B7FFC()
{
  sub_2264B8344();
  return sub_22655D6A0();
}

uint64_t sub_2264B8024()
{
  sub_2264B8344();
  return sub_22655D6AC();
}

uint64_t sub_2264B804C()
{
  sub_2264B8388();
  return sub_22655D6A0();
}

uint64_t sub_2264B8074()
{
  sub_2264B8388();
  return sub_22655D6AC();
}

uint64_t CapturedRoom.Confidence.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845BB8);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845BC0);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845BC8);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845BD0);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2264B8300();
  sub_22655D694();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_2264B8388();
      sub_22655D4D8();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_2264B8344();
      v16 = v21;
      sub_22655D4D8();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_2264B83CC();
    sub_22655D4D8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

unint64_t sub_2264B8300()
{
  unint64_t result;

  result = qword_255845BD8;
  if (!qword_255845BD8)
  {
    result = MEMORY[0x22769A794](&unk_226566364, &type metadata for CapturedRoom.Confidence.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845BD8);
  }
  return result;
}

unint64_t sub_2264B8344()
{
  unint64_t result;

  result = qword_255845BE0;
  if (!qword_255845BE0)
  {
    result = MEMORY[0x22769A794](&unk_226566314, &type metadata for CapturedRoom.Confidence.LowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845BE0);
  }
  return result;
}

unint64_t sub_2264B8388()
{
  unint64_t result;

  result = qword_255845BE8;
  if (!qword_255845BE8)
  {
    result = MEMORY[0x22769A794](&unk_2265662C4, &type metadata for CapturedRoom.Confidence.MediumCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845BE8);
  }
  return result;
}

unint64_t sub_2264B83CC()
{
  unint64_t result;

  result = qword_255845BF0;
  if (!qword_255845BF0)
  {
    result = MEMORY[0x22769A794](&unk_226566274, &type metadata for CapturedRoom.Confidence.HighCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845BF0);
  }
  return result;
}

uint64_t CapturedRoom.Confidence.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845BF8);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845C00);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845C08);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845C10);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2264B8300();
  v13 = v41;
  sub_22655D688();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_22655D4CC();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_22655D334();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558437C8);
    *v25 = &type metadata for CapturedRoom.Confidence;
    sub_22655D46C();
    sub_22655D31C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_2264B8388();
      v20 = v9;
      sub_22655D460();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_2264B8344();
      v28 = v15;
      sub_22655D460();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_2264B83CC();
    sub_22655D460();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_2264B8858@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return CapturedRoom.Confidence.init(from:)(a1, a2);
}

uint64_t sub_2264B886C(_QWORD *a1)
{
  return CapturedRoom.Confidence.encode(to:)(a1);
}

void CapturedRoom.Section.label.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

RoomPlan::CapturedRoom::Section::Label_optional __swiftcall CapturedRoom.Section.Label.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  RoomPlan::CapturedRoom::Section::Label_optional result;
  char v5;

  v2 = v1;
  v3 = sub_22655D454();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_2264B88E4(char *a1)
{
  sub_2264AD20C(*a1);
}

void sub_2264B88F0()
{
  char *v0;

  sub_2264ADB68(*v0);
}

void sub_2264B88F8()
{
  __asm { BR              X10 }
}

uint64_t sub_2264B8938()
{
  sub_22655CE00();
  return swift_bridgeObjectRelease();
}

void sub_2264B89C8(uint64_t a1)
{
  char *v1;

  sub_2264AE15C(a1, *v1);
}

RoomPlan::CapturedRoom::Section::Label_optional sub_2264B89D0(Swift::String *a1)
{
  return CapturedRoom.Section.Label.init(rawValue:)(*a1);
}

uint64_t sub_2264B89DC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_2264B8A10 + 4 * byte_2265636AB[*v0]))();
}

void sub_2264B8A10(_QWORD *a1@<X8>)
{
  *a1 = 0x6D6F6F72646562;
  a1[1] = 0xE700000000000000;
}

void sub_2264B8A2C(_QWORD *a1@<X8>)
{
  *a1 = 0x6D6F6F7268746162;
  a1[1] = 0xE800000000000000;
}

void sub_2264B8A48(_QWORD *a1@<X8>)
{
  *a1 = 0x6E65686374696BLL;
  a1[1] = 0xE700000000000000;
}

void sub_2264B8A64(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6F52676E696E6964;
  a1[1] = v1;
}

void sub_2264B8A7C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "unidentified");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_2264B8AA0()
{
  sub_2264CB5B4();
  return sub_22655CE9C();
}

uint64_t sub_2264B8AFC()
{
  sub_2264CB5B4();
  return sub_22655CE84();
}

__n128 CapturedRoom.Section.center.getter()
{
  __n128 *v0;

  return v0[1];
}

uint64_t CapturedRoom.Section.story.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t sub_2264B8B58(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2264AD3E4(*a1, *a2);
}

uint64_t sub_2264B8B64()
{
  sub_22655D640();
  sub_22655CE00();
  swift_bridgeObjectRelease();
  return sub_22655D670();
}

uint64_t sub_2264B8BF8()
{
  sub_22655CE00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2264B8C68()
{
  sub_22655D640();
  sub_22655CE00();
  swift_bridgeObjectRelease();
  return sub_22655D670();
}

uint64_t sub_2264B8CF8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2264CA83C();
  *a1 = result;
  return result;
}

void sub_2264B8D24(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0xE600000000000000;
  v5 = 0x7265746E6563;
  if (v2 != 1)
  {
    v5 = 0x79726F7473;
    v4 = 0xE500000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6C6562616CLL;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_2264B8D78()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7265746E6563;
  if (*v0 != 1)
    v1 = 0x79726F7473;
  if (*v0)
    return v1;
  else
    return 0x6C6562616CLL;
}

uint64_t sub_2264B8DC8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2264CA83C();
  *a1 = result;
  return result;
}

uint64_t sub_2264B8DEC()
{
  sub_2264B90B4();
  return sub_22655D6A0();
}

uint64_t sub_2264B8E14()
{
  sub_2264B90B4();
  return sub_22655D6AC();
}

uint64_t CapturedRoom.Section.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  __int128 v12;
  char v13;
  char v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845C18);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = 1;
  v26 = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2264B90B4();
  sub_22655D688();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v28 = 0;
    sub_2264B90F8();
    sub_22655D4B4();
    v9 = v15[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_255849BA0);
    v28 = 1;
    sub_2264CB5F8((unint64_t *)&unk_255848050, &qword_255849BA0, MEMORY[0x24BEE4118]);
    sub_22655D4B4();
    v12 = v15[0];
    v28 = 2;
    v10 = sub_22655D4A8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v14 = 1;
    v13 = 1;
    *(_BYTE *)a2 = v9;
    *(_OWORD *)(a2 + 16) = v12;
    *(_QWORD *)(a2 + 32) = v10;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 96) = 0u;
    *(_BYTE *)(a2 + 112) = 1;
    *(_QWORD *)(a2 + 128) = 0;
    *(_QWORD *)(a2 + 136) = 0;
    *(_QWORD *)(a2 + 120) = 0;
    *(_BYTE *)(a2 + 144) = 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    LOBYTE(v15[0]) = v9;
    v15[1] = v12;
    v16 = v10;
    v17 = 0u;
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v21 = v27;
    v23 = 0;
    v24 = 0;
    v22 = 0;
    v25 = v26;
    return sub_22647F490((uint64_t)v15);
  }
}

unint64_t sub_2264B90B4()
{
  unint64_t result;

  result = qword_255845C20;
  if (!qword_255845C20)
  {
    result = MEMORY[0x22769A794](&unk_226566224, &type metadata for CapturedRoom.Section.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845C20);
  }
  return result;
}

unint64_t sub_2264B90F8()
{
  unint64_t result;

  result = qword_255845C28;
  if (!qword_255845C28)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for CapturedRoom.Section.Label, &type metadata for CapturedRoom.Section.Label);
    atomic_store(result, (unint64_t *)&qword_255845C28);
  }
  return result;
}

uint64_t CapturedRoom.Section.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  _QWORD v10[2];
  __int128 v11;
  __int128 v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845C30);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v11 = *((_OWORD *)v1 + 1);
  v10[1] = *((_QWORD *)v1 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2264B90B4();
  sub_22655D694();
  LOBYTE(v12) = v8;
  v13 = 0;
  sub_2264B92E4();
  sub_22655D514();
  if (!v2)
  {
    v12 = v11;
    v13 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255849BA0);
    sub_2264CB5F8(&qword_255848180, &qword_255849BA0, MEMORY[0x24BEE4108]);
    sub_22655D514();
    LOBYTE(v12) = 2;
    sub_22655D508();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_2264B92E4()
{
  unint64_t result;

  result = qword_255845C38;
  if (!qword_255845C38)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for CapturedRoom.Section.Label, &type metadata for CapturedRoom.Section.Label);
    atomic_store(result, (unint64_t *)&qword_255845C38);
  }
  return result;
}

uint64_t sub_2264B9328@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CapturedRoom.Section.init(from:)(a1, a2);
}

uint64_t sub_2264B933C(_QWORD *a1)
{
  return CapturedRoom.Section.encode(to:)(a1);
}

void CapturedRoom.Surface.category.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t CapturedRoom.Surface.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CapturedRoom.Surface(0) + 44);
  v4 = sub_22655C140();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CapturedRoom.Surface.story.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for CapturedRoom.Surface(0) + 48));
}

uint64_t CapturedRoom.Surface.curve.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for CapturedRoom.Surface(0);
  return sub_22643D7A0(v1 + *(int *)(v3 + 52), a1, (uint64_t *)&unk_255848090);
}

uint64_t CapturedRoom.Surface.parentIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for CapturedRoom.Surface(0);
  return sub_22643D7A0(v1 + *(int *)(v3 + 56), a1, (uint64_t *)&unk_255849AC0);
}

uint64_t CapturedRoom.Surface.polygonCorners.getter()
{
  type metadata accessor for CapturedRoom.Surface(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2264B945C@<X0>(unsigned __int8 *a1@<X0>, unsigned __int8 *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, __n128 *a9@<X8>, __n128 a10@<Q0>, float32x4_t a11@<Q1>, float32x4_t a12@<Q2>, float32x4_t a13@<Q3>, float32x4_t a14@<Q4>, __n128 a15@<Q5>, __n128 a16@<Q6>, float a17@<S7>, unint64_t a18, unint64_t a19)
{
  unsigned __int8 v23;
  unsigned __int8 v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  __int32 v32;
  unint64_t v33;
  float32x4_t *v34;
  unint64_t v35;
  float32x4_t v36;
  float32x4_t v37;
  float32x4_t v38;
  float32x4_t v39;
  float32x4_t v40;
  unint64_t v41;
  float32x4_t v42;
  uint64_t result;
  float32x4_t v44;
  __int32 v46;
  uint64_t v50;
  uint64_t v51;
  uint64_t v54;
  unint64_t v60;

  v23 = *a1;
  v24 = *a2;
  v25 = (int *)type metadata accessor for CapturedRoom.Surface(0);
  v51 = v25[12];
  *(unint64_t *)((char *)a9->n128_u64 + v51) = 0;
  v26 = (uint64_t)a9 + v25[13];
  v27 = type metadata accessor for CapturedRoom.Surface.Curve(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  v28 = (uint64_t)a9 + v25[14];
  v29 = sub_22655C140();
  v30 = *(_QWORD *)(v29 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56))(v28, 1, 1, v29);
  v50 = v25[18];
  *(unsigned __int32 *)((char *)a9->n128_u32 + v50) = 0;
  a9->n128_u8[0] = v23;
  a9->n128_u8[1] = v24;
  a9->n128_u64[1] = a3;
  a9[1] = a10;
  a9[2] = (__n128)a11;
  a9[3] = (__n128)a12;
  a9[4] = (__n128)a13;
  a9[5] = (__n128)a14;
  a9[6] = a15;
  a9[7] = a16;
  v54 = a4;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))((char *)a9 + v25[11], a4, v29);
  sub_226444F18(a5, v26, (uint64_t *)&unk_255848090);
  sub_226444F18(a6, v28, (uint64_t *)&unk_255849AC0);
  *(unint64_t *)((char *)a9->n128_u64 + v25[15]) = a7;
  v31 = *(_QWORD *)(a7 + 16);
  if (v31)
  {
    v60 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_2264C1310(0, v31, 0);
    v33 = v60;
    v34 = (float32x4_t *)(a7 + 32);
    v35 = *(_QWORD *)(v60 + 16);
    v37 = a13;
    v36 = a14;
    v39 = a11;
    v38 = a12;
    do
    {
      v40 = *v34;
      v41 = *(_QWORD *)(v60 + 24);
      if (v35 >= v41 >> 1)
      {
        v44 = *v34;
        v46 = v32;
        sub_2264C1310(v41 > 1, v35 + 1, 1);
        v40 = v44;
        v32 = v46;
        v39 = a11;
        v38 = a12;
        v37 = a13;
        v36 = a14;
      }
      v42 = vaddq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v39, v40.f32[0]), v38, *(float32x2_t *)v40.f32, 1), v37, v40, 2), v36);
      v42.i32[3] = v32;
      *(_QWORD *)(v60 + 16) = v35 + 1;
      *(float32x4_t *)(v60 + 16 * v35 + 32) = v42;
      ++v34;
      ++v35;
      --v31;
    }
    while (v31);
  }
  else
  {
    swift_bridgeObjectRetain();
    v33 = MEMORY[0x24BEE4AF8];
  }
  sub_22643D7E4(a6, (uint64_t *)&unk_255849AC0);
  sub_22643D7E4(a5, (uint64_t *)&unk_255848090);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v54, v29);
  result = swift_bridgeObjectRelease();
  *(unint64_t *)((char *)a9->n128_u64 + v25[16]) = v33;
  *(unint64_t *)((char *)a9->n128_u64 + v25[17]) = a8;
  *(float *)((char *)a9->n128_f32 + v50) = a17;
  *(unint64_t *)((char *)a9->n128_u64 + v51) = a18;
  *(unint64_t *)((char *)a9->n128_u64 + v25[19]) = a19;
  return result;
}

uint64_t sub_2264B9750(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2264B9784 + 4 * byte_2265636B1[a1]))(0x79726F6765746163, 0xE800000000000000);
}

uint64_t sub_2264B9784()
{
  return 0x6E656469666E6F63;
}

uint64_t sub_2264B97A0()
{
  return 0x6574656C706D6F63;
}

uint64_t sub_2264B97C4()
{
  return 0x6F69736E656D6964;
}

uint64_t sub_2264B97E4()
{
  return 0x726F66736E617274;
}

uint64_t sub_2264B9800()
{
  return 0x696669746E656469;
}

uint64_t sub_2264B9820()
{
  return 0x6576727563;
}

unint64_t sub_2264B9834()
{
  return 0xD000000000000010;
}

uint64_t sub_2264B9850()
{
  return 0x79726F7473;
}

uint64_t sub_2264B9864()
{
  return 0x436E6F67796C6F70;
}

uint64_t sub_2264B9888(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2264B98BC + 4 * byte_2265636BB[a1]))(0x79726F6765746163, 0xE800000000000000);
}

uint64_t sub_2264B98BC()
{
  return 0x6E656469666E6F63;
}

uint64_t sub_2264B98D8()
{
  return 0x6574656C706D6F63;
}

uint64_t sub_2264B98FC()
{
  return 0x6F69736E656D6964;
}

uint64_t sub_2264B991C()
{
  return 0x726F66736E617274;
}

uint64_t sub_2264B9938()
{
  return 0x696669746E656469;
}

uint64_t sub_2264B9958()
{
  return 0x6576727563;
}

unint64_t sub_2264B996C()
{
  return 0xD000000000000010;
}

uint64_t sub_2264B9988()
{
  return 0x79726F7473;
}

uint64_t sub_2264B999C()
{
  return 0x436E6F67796C6F70;
}

uint64_t sub_2264B99C0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_2264B99CC(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_2264B9750);
}

uint64_t sub_2264B99CC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  v6 = *a2;
  v7 = a5(*a1);
  v9 = v8;
  if (v7 == a5(v6) && v9 == v10)
    v12 = 1;
  else
    v12 = sub_22655D55C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t sub_2264B9A58(uint64_t a1, uint64_t a2)
{
  return sub_2264B9A64(a1, a2, (void (*)(uint64_t))sub_2264B9750);
}

uint64_t sub_2264B9A64(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  unsigned __int8 *v3;
  uint64_t v5;

  v5 = *v3;
  sub_22655D640();
  a3(v5);
  sub_22655CE00();
  swift_bridgeObjectRelease();
  return sub_22655D670();
}

uint64_t sub_2264B9AC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2264B9AD4(a1, a2, a3, (void (*)(_QWORD))sub_2264B9750);
}

uint64_t sub_2264B9AD4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  unsigned __int8 *v4;

  a4(*v4);
  sub_22655CE00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2264B9B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2264B9B20(a1, a2, a3, (void (*)(uint64_t))sub_2264B9750);
}

uint64_t sub_2264B9B20(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  unsigned __int8 *v4;
  uint64_t v6;

  v6 = *v4;
  sub_22655D640();
  a4(v6);
  sub_22655CE00();
  swift_bridgeObjectRelease();
  return sub_22655D670();
}

uint64_t sub_2264B9B80@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2264CA884();
  *a1 = result;
  return result;
}

uint64_t sub_2264B9BAC@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2264B9750(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2264B9BD4()
{
  unsigned __int8 *v0;

  return sub_2264B9888(*v0);
}

uint64_t sub_2264B9BDC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2264CA884();
  *a1 = result;
  return result;
}

void sub_2264B9C00(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_2264B9C0C()
{
  sub_2264BA6B0();
  return sub_22655D6A0();
}

uint64_t sub_2264B9C34()
{
  sub_2264BA6B0();
  return sub_22655D6AC();
}

uint64_t CapturedRoom.Surface.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  float32x4_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  float32x4_t *v25;
  float32x4_t v27;
  float32x4_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x4_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  float32x4_t v40;
  int64_t v41;
  uint64_t v42;
  unint64_t v43;
  float32x4_t v44;
  float32x4_t v45;
  float32x4_t v46;
  float32x4_t v47;
  float32x4_t v48;
  unint64_t v49;
  float32x4_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  float32x4_t v55;
  float32x4_t v56;
  float32x4_t v57;
  float32x4_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  float32x4_t v67;
  float32x4_t v68;
  int64_t v69;
  uint64_t v70;
  uint64_t v71;
  float32x4_t *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  float32x4_t v77;
  char v78;

  v61 = a2;
  v64 = sub_22655D334();
  v62 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v63 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
  MEMORY[0x24BDAC7A8](v65);
  v66 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68.i64[0] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848090);
  MEMORY[0x24BDAC7A8](v68.i64[0]);
  v67.i64[0] = (uint64_t)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22655C140();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v69 = (int64_t)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845C40);
  v9 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CapturedRoom.Surface(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (float32x4_t *)((char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(int *)(v15 + 48);
  *(uint64_t *)((char *)v14->i64 + v16) = 0;
  v17 = (uint64_t)v14 + *(int *)(v15 + 52);
  v18 = type metadata accessor for CapturedRoom.Surface.Curve(0);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v75 = v17;
  v19(v17, 1, 1, v18);
  v20 = *(void (**)(void))(v7 + 56);
  v76 = (char *)v14 + *(int *)(v12 + 56);
  v20();
  v71 = v12;
  v72 = v14;
  *(__int32 *)((char *)v14->i32 + *(int *)(v12 + 72)) = 0;
  v21 = a1[3];
  v73 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_2264BA6B0();
  v22 = v74;
  sub_22655D688();
  if (v22)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
    sub_22643D7E4(v75, (uint64_t *)&unk_255848090);
    return sub_22643D7E4((uint64_t)v76, (uint64_t *)&unk_255849AC0);
  }
  else
  {
    v23 = v69;
    v60 = v16;
    v24 = v9;
    v74 = v7;
    v78 = 0;
    sub_226488F24();
    sub_22655D4B4();
    v25 = v72;
    v72->i8[0] = v77.i8[0];
    v78 = 1;
    sub_2264BA6F4();
    sub_22655D4B4();
    v25->i8[1] = v77.i8[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_255845C58);
    v59 = v11;
    v78 = 2;
    sub_2264C1378(&qword_255845C60, &qword_255845C58, (uint64_t (*)(void))sub_2264BA738, MEMORY[0x24BEE1720]);
    sub_22655D4B4();
    v25->i64[1] = v77.i64[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_255849BA0);
    v78 = 3;
    sub_2264CB5F8((unint64_t *)&unk_255848050, &qword_255849BA0, MEMORY[0x24BEE4118]);
    sub_22655D4B4();
    v25[1] = v77;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255841B50);
    v78 = 4;
    sub_2264C1420((unint64_t *)&qword_255848020, MEMORY[0x24BEE1520], MEMORY[0x24BEE12D0]);
    sub_22655D4B4();
    sub_2264BA77C(v77.i64[0]);
    v58 = v27;
    v57 = v28;
    v56 = v29;
    v55 = v30;
    swift_bridgeObjectRelease();
    v31 = v57;
    v25[2] = v58;
    v25[3] = v31;
    v32 = v55;
    v25[4] = v56;
    v25[5] = v32;
    v77.i8[0] = 5;
    sub_226437F28(&qword_255845C70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_22655D4B4();
    v33 = v71;
    (*(void (**)(_BYTE *, int64_t, uint64_t))(v74 + 32))((_BYTE *)v25 + *(int *)(v71 + 44), v23, v6);
    v77.i8[0] = 6;
    sub_2264BA854();
    v34 = v67.i64[0];
    sub_22655D4B4();
    sub_226446510(v34, v75, (uint64_t *)&unk_255848090);
    v77.i8[0] = 7;
    sub_2264BA8D0();
    v35 = (uint64_t)v66;
    sub_22655D4B4();
    sub_226446510(v35, (uint64_t)v76, (uint64_t *)&unk_255849AC0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848040);
    v78 = 9;
    sub_2264BA94C(&qword_255845C90, (unint64_t *)&unk_255848050, MEMORY[0x24BEE4118], MEMORY[0x24BEE12D0]);
    sub_22655D4B4();
    v36 = MEMORY[0x24BEE4AF8];
    v37 = v77.i64[0];
    *(uint64_t *)((char *)v72->i64 + *(int *)(v33 + 60)) = v77.i64[0];
    v38 = MEMORY[0x24BEE4AF8];
    v69 = *(_QWORD *)(v37 + 16);
    if (v69)
    {
      v77.i64[0] = MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRetain();
      v39 = v69;
      sub_2264C1310(0, v69, 0);
      v41 = v39;
      v42 = 0;
      v38 = v77.i64[0];
      v43 = *(_QWORD *)(v77.i64[0] + 16);
      v44 = v58;
      v45 = v57;
      v46 = v56;
      v47 = v55;
      do
      {
        v48 = *(float32x4_t *)(v37 + 16 * v42 + 32);
        v77.i64[0] = v38;
        v49 = *(_QWORD *)(v38 + 24);
        if (v43 >= v49 >> 1)
        {
          v67 = v48;
          v68 = v40;
          sub_2264C1310(v49 > 1, v43 + 1, 1);
          v48 = v67;
          v40.i32[3] = v68.i32[3];
          v41 = v69;
          v47 = v55;
          v46 = v56;
          v45 = v57;
          v44 = v58;
          v38 = v77.i64[0];
        }
        v50 = vaddq_f32(v47, vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v44, v48.f32[0]), v45, *(float32x2_t *)v48.f32, 1), v46, v48, 2));
        ++v42;
        v50.i32[3] = v40.i32[3];
        *(_QWORD *)(v38 + 16) = v43 + 1;
        *(float32x4_t *)(v38 + 16 * v43++ + 32) = v50;
        v40 = v50;
      }
      while (v41 != v42);
      swift_bridgeObjectRelease();
    }
    v51 = v70;
    v52 = v71;
    *(uint64_t *)((char *)v72->i64 + *(int *)(v71 + 64)) = v38;
    v77.i8[0] = 8;
    v53 = sub_22655D4A8();
    v54 = (uint64_t)v72;
    *(uint64_t *)((char *)v72->i64 + v60) = v53;
    *(_OWORD *)(v54 + 96) = 0u;
    *(_OWORD *)(v54 + 112) = 0u;
    *(_QWORD *)(v54 + *(int *)(v52 + 68)) = v36;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v59, v51);
    *(_QWORD *)(v54 + *(int *)(v52 + 76)) = v36;
    sub_22643D704(v54, v61, type metadata accessor for CapturedRoom.Surface);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
    return sub_22643D748(v54, type metadata accessor for CapturedRoom.Surface);
  }
}

uint64_t type metadata accessor for CapturedRoom.Surface.Curve(uint64_t a1)
{
  return sub_2264AA720(a1, (uint64_t *)&unk_2558462F8);
}

unint64_t sub_2264BA6B0()
{
  unint64_t result;

  result = qword_255845C48;
  if (!qword_255845C48)
  {
    result = MEMORY[0x22769A794](&unk_2265661D4, &type metadata for CapturedRoom.Surface.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845C48);
  }
  return result;
}

unint64_t sub_2264BA6F4()
{
  unint64_t result;

  result = qword_255845C50;
  if (!qword_255845C50)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for CapturedRoom.Confidence, &type metadata for CapturedRoom.Confidence);
    atomic_store(result, (unint64_t *)&qword_255845C50);
  }
  return result;
}

unint64_t sub_2264BA738()
{
  unint64_t result;

  result = qword_255845C68;
  if (!qword_255845C68)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for CapturedRoom.Surface.Edge, &type metadata for CapturedRoom.Surface.Edge);
    atomic_store(result, (unint64_t *)&qword_255845C68);
  }
  return result;
}

uint64_t sub_2264BA77C(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(result + 16);
  switch(v1)
  {
    case 0uLL:
      goto LABEL_18;
    case 1uLL:
      goto LABEL_19;
    case 2uLL:
LABEL_20:
      __break(1u);
      goto LABEL_21;
  }
  if (v1 <= 3)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  v2 = (v1 + 3) >> 2;
  if (v2 == 1)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v1 < 6)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v1 == 6)
    goto LABEL_20;
  if (v1 < 8)
    goto LABEL_21;
  if (v2 == 2)
    goto LABEL_18;
  if (v1 < 0xA)
    goto LABEL_19;
  if (v1 == 10)
    goto LABEL_20;
  if (v1 < 0xC)
    goto LABEL_21;
  if (v2 == 3)
    goto LABEL_18;
  if (v1 < 0xE)
    goto LABEL_19;
  if (v1 == 14)
    goto LABEL_20;
  if (v1 < 0x10)
    goto LABEL_21;
  return result;
}

unint64_t sub_2264BA854()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255845C78;
  if (!qword_255845C78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_255848090);
    v2 = sub_226437F28(&qword_255845C80, type metadata accessor for CapturedRoom.Surface.Curve, (uint64_t)&protocol conformance descriptor for CapturedRoom.Surface.Curve);
    result = MEMORY[0x22769A794](MEMORY[0x24BEE4AC0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255845C78);
  }
  return result;
}

unint64_t sub_2264BA8D0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255845C88;
  if (!qword_255845C88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_255849AC0);
    v2 = sub_226437F28(&qword_255845C70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    result = MEMORY[0x22769A794](MEMORY[0x24BEE4AC0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255845C88);
  }
  return result;
}

uint64_t sub_2264BA94C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_255848040);
    v10 = sub_2264CB5F8(a2, &qword_255849BA0, a3);
    result = MEMORY[0x22769A794](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t CapturedRoom.Surface.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  __int128 v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845C98);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2264BA6B0();
  sub_22655D694();
  LOBYTE(v11) = *(_BYTE *)v3;
  v12 = 0;
  sub_226488E9C();
  sub_22655D514();
  if (!v2)
  {
    LOBYTE(v11) = *(_BYTE *)(v3 + 1);
    v12 = 1;
    sub_2264C1334();
    sub_22655D514();
    *(_QWORD *)&v11 = *(_QWORD *)(v3 + 8);
    v12 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255845C58);
    sub_2264C1378(&qword_255845CA8, &qword_255845C58, (uint64_t (*)(void))sub_2264C13DC, MEMORY[0x24BEE1700]);
    sub_22655D514();
    v11 = *(_OWORD *)(v3 + 16);
    v12 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255849BA0);
    sub_2264CB5F8(&qword_255848180, &qword_255849BA0, MEMORY[0x24BEE4108]);
    sub_22655D514();
    *(_QWORD *)&v11 = sub_2264BAE1C(*(__n128 *)(v3 + 32), *(__n128 *)(v3 + 48), *(__n128 *)(v3 + 64), *(__n128 *)(v3 + 80));
    v12 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255841B50);
    sub_2264C1420(&qword_255845CB8, MEMORY[0x24BEE14F8], MEMORY[0x24BEE12A0]);
    sub_22655D514();
    swift_bridgeObjectRelease();
    v10 = type metadata accessor for CapturedRoom.Surface(0);
    LOBYTE(v11) = 5;
    sub_22655C140();
    sub_226437F28(&qword_255843318, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_22655D514();
    LOBYTE(v11) = 6;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848090);
    sub_2264C1480();
    sub_22655D514();
    LOBYTE(v11) = 7;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
    sub_2264C14FC();
    sub_22655D514();
    LOBYTE(v11) = 8;
    sub_22655D508();
    *(_QWORD *)&v11 = *(_QWORD *)(v3 + *(int *)(v10 + 60));
    v12 = 9;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848040);
    sub_2264BA94C(&qword_255845CD8, &qword_255848180, MEMORY[0x24BEE4108], MEMORY[0x24BEE12A0]);
    sub_22655D514();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

char *sub_2264BAE1C(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  char *result;
  __n128 v5;
  __n128 v6;
  __n128 v7;
  __n128 v8;
  char *v9;
  uint64_t v10;
  unsigned __int32 v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned __int32 v15;
  unint64_t v16;
  unint64_t v17;
  unsigned __int32 v18;
  unint64_t v19;
  unint64_t v20;
  unsigned __int32 v21;
  unint64_t v22;
  unsigned __int32 v23;
  unsigned __int32 v24;
  unsigned __int32 v25;
  unsigned __int32 v26;

  result = sub_2264880D8(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v6 = a1;
  v5 = a2;
  v7 = a3;
  v8 = a4;
  v9 = result;
  v10 = 0;
  while (1)
  {
    v11 = v6.n128_u32[0];
    if (!v10)
      goto LABEL_7;
    v11 = v5.n128_u32[0];
    if (v10 == 1)
      goto LABEL_7;
    v11 = v7.n128_u32[0];
    if (v10 == 2)
      goto LABEL_7;
    if (v10 != 3)
      break;
    v11 = v8.n128_u32[0];
LABEL_7:
    v13 = *((_QWORD *)v9 + 2);
    v12 = *((_QWORD *)v9 + 3);
    v14 = v13 + 1;
    if (v13 >= v12 >> 1)
    {
      v23 = v11;
      result = sub_2264880D8((char *)(v12 > 1), v13 + 1, 1, v9);
      v11 = v23;
      v6 = a1;
      v5 = a2;
      v7 = a3;
      v8 = a4;
      v9 = result;
    }
    *((_QWORD *)v9 + 2) = v14;
    *(_DWORD *)&v9[4 * v13 + 32] = v11;
    v15 = v6.n128_u32[1];
    if (v10)
    {
      v15 = v5.n128_u32[1];
      if (v10 != 1)
      {
        v15 = v7.n128_u32[1];
        if (v10 != 2)
          v15 = v8.n128_u32[1];
      }
    }
    v16 = *((_QWORD *)v9 + 3);
    v17 = v13 + 2;
    if ((uint64_t)(v13 + 2) > (uint64_t)(v16 >> 1))
    {
      v24 = v15;
      result = sub_2264880D8((char *)(v16 > 1), v13 + 2, 1, v9);
      v15 = v24;
      v6 = a1;
      v5 = a2;
      v7 = a3;
      v8 = a4;
      v9 = result;
    }
    *((_QWORD *)v9 + 2) = v17;
    *(_DWORD *)&v9[4 * v14 + 32] = v15;
    v18 = v6.n128_u32[2];
    if (v10)
    {
      v18 = v5.n128_u32[2];
      if (v10 != 1)
      {
        v18 = v7.n128_u32[2];
        if (v10 != 2)
          v18 = v8.n128_u32[2];
      }
    }
    v19 = *((_QWORD *)v9 + 3);
    v20 = v13 + 3;
    if ((uint64_t)(v13 + 3) > (uint64_t)(v19 >> 1))
    {
      v25 = v18;
      result = sub_2264880D8((char *)(v19 > 1), v13 + 3, 1, v9);
      v18 = v25;
      v6 = a1;
      v5 = a2;
      v7 = a3;
      v8 = a4;
      v9 = result;
    }
    *((_QWORD *)v9 + 2) = v20;
    *(_DWORD *)&v9[4 * v17 + 32] = v18;
    v21 = v6.n128_u32[3];
    if (v10)
    {
      v21 = v5.n128_u32[3];
      if (v10 != 1)
      {
        v21 = v7.n128_u32[3];
        if (v10 != 2)
          v21 = v8.n128_u32[3];
      }
    }
    v22 = *((_QWORD *)v9 + 3);
    if ((uint64_t)(v13 + 4) > (uint64_t)(v22 >> 1))
    {
      v26 = v21;
      result = sub_2264880D8((char *)(v22 > 1), v13 + 4, 1, v9);
      v21 = v26;
      v6 = a1;
      v5 = a2;
      v7 = a3;
      v8 = a4;
      v9 = result;
    }
    ++v10;
    *((_QWORD *)v9 + 2) = v13 + 4;
    *(_DWORD *)&v9[4 * v20 + 32] = v21;
    if (v10 == 4)
      return v9;
  }
  __break(1u);
  __break(1u);
  __break(1u);
  __break(1u);
  return result;
}

uint64_t CapturedRoom.Surface.Category.hash(into:)()
{
  _BYTE *v0;
  uint64_t result;

  switch(*v0)
  {
    case 2:
    case 3:
    case 4:
    case 5:
      result = sub_22655D64C();
      break;
    default:
      sub_22655D64C();
      result = sub_22655D658();
      break;
  }
  return result;
}

uint64_t sub_2264BB0FC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2264BB124 + 4 * byte_2265636C9[*v0]))(1819042167, 0xE400000000000000);
}

uint64_t sub_2264BB124()
{
  return 0x676E696E65706FLL;
}

uint64_t sub_2264BB13C()
{
  return 0x776F646E6977;
}

uint64_t sub_2264BB150()
{
  return 1919905636;
}

uint64_t sub_2264BB15C()
{
  return 0x726F6F6C66;
}

uint64_t sub_2264BB170@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2264CAA40(a1, a2);
  *a3 = result;
  return result;
}

void sub_2264BB194(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_2264BB1A0()
{
  sub_2264C1578();
  return sub_22655D6A0();
}

uint64_t sub_2264BB1C8()
{
  sub_2264C1578();
  return sub_22655D6AC();
}

uint64_t sub_2264BB1F0()
{
  return 0x6E65704F7369;
}

uint64_t sub_2264BB204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6E65704F7369 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_22655D55C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2264BB290()
{
  sub_2264C1600();
  return sub_22655D6A0();
}

uint64_t sub_2264BB2B8()
{
  sub_2264C1600();
  return sub_22655D6AC();
}

uint64_t sub_2264BB2E0()
{
  sub_2264C15BC();
  return sub_22655D6A0();
}

uint64_t sub_2264BB308()
{
  sub_2264C15BC();
  return sub_22655D6AC();
}

uint64_t sub_2264BB330()
{
  sub_2264C1688();
  return sub_22655D6A0();
}

uint64_t sub_2264BB358()
{
  sub_2264C1688();
  return sub_22655D6AC();
}

uint64_t sub_2264BB380()
{
  sub_2264C16CC();
  return sub_22655D6A0();
}

uint64_t sub_2264BB3A8()
{
  sub_2264C16CC();
  return sub_22655D6AC();
}

uint64_t sub_2264BB3D0()
{
  sub_2264C1644();
  return sub_22655D6A0();
}

uint64_t sub_2264BB3F8()
{
  sub_2264C1644();
  return sub_22655D6AC();
}

uint64_t CapturedRoom.Surface.Category.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845CE0);
  v38 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v37 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845CE8);
  v35 = *(_QWORD *)(v5 - 8);
  v36 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v34 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845CF0);
  v32 = *(_QWORD *)(v7 - 8);
  v33 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v31 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845CF8);
  v29 = *(_QWORD *)(v9 - 8);
  v30 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845D00);
  v12 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845D08);
  v40 = *(_QWORD *)(v15 - 8);
  v41 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2264C1578();
  sub_22655D694();
  switch(v18)
  {
    case 2:
      v42 = 0;
      sub_2264C16CC();
      v19 = v41;
      sub_22655D4D8();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v28);
      goto LABEL_8;
    case 3:
      v43 = 1;
      sub_2264C1688();
      v19 = v41;
      sub_22655D4D8();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v30);
      goto LABEL_8;
    case 4:
      v44 = 2;
      sub_2264C1644();
      v24 = v31;
      v19 = v41;
      sub_22655D4D8();
      v26 = v32;
      v25 = v33;
      goto LABEL_7;
    case 5:
      v46 = 4;
      sub_2264C15BC();
      v24 = v37;
      v19 = v41;
      sub_22655D4D8();
      v26 = v38;
      v25 = v39;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v26 + 8))(v24, v25);
LABEL_8:
      result = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v17, v19);
      break;
    default:
      v45 = 3;
      sub_2264C1600();
      v20 = v34;
      v21 = v41;
      sub_22655D4D8();
      v22 = v36;
      sub_22655D4F0();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v20, v22);
      result = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v17, v21);
      break;
  }
  return result;
}

uint64_t CapturedRoom.Surface.Category.hashValue.getter()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_22655D640();
  switch(v1)
  {
    case 2:
    case 3:
    case 4:
    case 5:
      sub_22655D64C();
      break;
    default:
      sub_22655D64C();
      sub_22655D658();
      break;
  }
  return sub_22655D670();
}

uint64_t CapturedRoom.Surface.Category.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD v24[7];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  _QWORD *v34;
  char *v35;

  v29 = a2;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845D40);
  v24[6] = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v33 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845D48);
  v28 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v32 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845D50);
  v24[3] = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v31 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845D58);
  v24[4] = *(_QWORD *)(v6 - 8);
  v24[5] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v30 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845D60);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845D68);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_2264C1578();
  v17 = v35;
  sub_22655D688();
  if (!v17)
  {
    v35 = v11;
    v24[1] = v9;
    v24[2] = v8;
    v18 = sub_22655D4CC();
    if (*(_QWORD *)(v18 + 16) == 1)
      __asm { BR              X10 }
    v19 = v15;
    v20 = sub_22655D334();
    swift_allocError();
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558437C8);
    *v22 = &type metadata for CapturedRoom.Surface.Category;
    sub_22655D46C();
    sub_22655D31C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x24BEE26D0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
}

uint64_t sub_2264BBE44@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CapturedRoom.Surface.Category.init(from:)(a1, a2);
}

uint64_t sub_2264BBE58(_QWORD *a1)
{
  return CapturedRoom.Surface.Category.encode(to:)(a1);
}

uint64_t sub_2264BBE6C(_BYTE *a1, unsigned __int8 *a2)
{
  int v2;
  uint64_t result;

  v2 = *a2;
  switch(*a1)
  {
    case 2:
      if (v2 == 2)
        goto LABEL_9;
      goto LABEL_11;
    case 3:
      if (v2 != 3)
        goto LABEL_11;
      goto LABEL_9;
    case 4:
      if (v2 != 4)
        goto LABEL_11;
      goto LABEL_9;
    case 5:
      if (v2 != 5)
        goto LABEL_11;
LABEL_9:
      result = 1;
      break;
    default:
      if ((v2 - 2) >= 4)
        result = (((*a1 & 1) == 0) ^ v2) & 1;
      else
LABEL_11:
        result = 0;
      break;
  }
  return result;
}

uint64_t sub_2264BBEFC()
{
  _BYTE *v0;
  uint64_t result;

  switch(*v0)
  {
    case 2:
    case 3:
    case 4:
    case 5:
      result = sub_22655D64C();
      break;
    default:
      sub_22655D64C();
      result = sub_22655D658();
      break;
  }
  return result;
}

uint64_t sub_2264BBF7C()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_22655D640();
  switch(v1)
  {
    case 2:
    case 3:
    case 4:
    case 5:
      sub_22655D64C();
      break;
    default:
      sub_22655D64C();
      sub_22655D658();
      break;
  }
  return sub_22655D670();
}

double CapturedRoom.Surface.Curve.center.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

float CapturedRoom.Surface.Curve.radius.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 8);
}

uint64_t CapturedRoom.Surface.Curve.startAngle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CapturedRoom.Surface.Curve(0) + 24);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255840958);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CapturedRoom.Surface.Curve.endAngle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CapturedRoom.Surface.Curve(0) + 28);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255840958);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2264BC0CC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2264BC0F8 + 4 * byte_2265636E7[*v0]))(0x7265746E6563, 0xE600000000000000);
}

uint64_t sub_2264BC0F8()
{
  return 0x737569646172;
}

uint64_t sub_2264BC108()
{
  return 0x676E417472617473;
}

uint64_t sub_2264BC124()
{
  return 0x656C676E41646E65;
}

uint64_t sub_2264BC13C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2264CAC2C(a1, a2);
  *a3 = result;
  return result;
}

void sub_2264BC160(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_2264BC16C()
{
  sub_2264C1710();
  return sub_22655D6A0();
}

uint64_t sub_2264BC194()
{
  sub_2264C1710();
  return sub_22655D6AC();
}

uint64_t CapturedRoom.Surface.Curve.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845D70);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2264C1710();
  sub_22655D694();
  v11 = *v3;
  v10[15] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558443D0);
  sub_2264CB5F8(&qword_255845D80, &qword_2558443D0, MEMORY[0x24BEE40D8]);
  sub_22655D514();
  if (!v2)
  {
    v10[14] = 1;
    sub_22655D4FC();
    type metadata accessor for CapturedRoom.Surface.Curve(0);
    v10[13] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255840958);
    sub_2264CB5F8(&qword_255845D88, &qword_255840958, MEMORY[0x24BDCB5A8]);
    sub_22655D514();
    v10[12] = 3;
    sub_22655D514();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t CapturedRoom.Surface.Curve.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  void (*v23)(void);
  char *v24;
  uint64_t v25;
  _QWORD v27[2];
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  char v37;
  char v38;
  char v39;
  char v40;
  uint64_t v41;

  v30 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255840958);
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v27 - v7;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845D90);
  v9 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CapturedRoom.Surface.Curve(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_2264C1710();
  v33 = v11;
  v16 = v36;
  sub_22655D688();
  if (v16)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  v36 = v8;
  v28 = v5;
  v29 = v12;
  v17 = v31;
  v18 = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558443D0);
  v40 = 0;
  sub_2264CB5F8(&qword_255845D98, &qword_2558443D0, MEMORY[0x24BEE40E8]);
  v19 = v33;
  v20 = v34;
  sub_22655D4B4();
  *(_QWORD *)v14 = v41;
  v39 = 1;
  sub_22655D49C();
  *((_DWORD *)v14 + 2) = v21;
  v38 = 2;
  sub_2264CB5F8(&qword_255845DA0, &qword_255840958, MEMORY[0x24BDCB5D8]);
  sub_22655D4B4();
  v22 = *(int *)(v29 + 24);
  v27[0] = v14;
  v27[1] = &v14[v22];
  v23 = *(void (**)(void))(v17 + 32);
  v23();
  v37 = 3;
  v24 = v28;
  sub_22655D4B4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v19, v20);
  v25 = v27[0];
  ((void (*)(_QWORD, char *, uint64_t))v23)(v27[0] + *(int *)(v29 + 28), v24, v18);
  sub_22643D704(v25, v30, type metadata accessor for CapturedRoom.Surface.Curve);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return sub_22643D748(v25, type metadata accessor for CapturedRoom.Surface.Curve);
}

uint64_t sub_2264BC6F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CapturedRoom.Surface.Curve.init(from:)(a1, a2);
}

uint64_t sub_2264BC70C(_QWORD *a1)
{
  return CapturedRoom.Surface.Curve.encode(to:)(a1);
}

uint64_t sub_2264BC720()
{
  sub_2264C17DC();
  return sub_22655D6A0();
}

uint64_t sub_2264BC748()
{
  sub_2264C17DC();
  return sub_22655D6AC();
}

uint64_t sub_2264BC770()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2264BC798 + 4 * byte_2265636EB[*v0]))(7368564, 0xE300000000000000);
}

uint64_t sub_2264BC798()
{
  return 0x7468676972;
}

uint64_t sub_2264BC7AC()
{
  return 0x6D6F74746F62;
}

uint64_t sub_2264BC7C0()
{
  return 1952867692;
}

uint64_t sub_2264BC7D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2264CADE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2264BC7F4()
{
  sub_2264C1754();
  return sub_22655D6A0();
}

uint64_t sub_2264BC81C()
{
  sub_2264C1754();
  return sub_22655D6AC();
}

uint64_t sub_2264BC844()
{
  sub_2264C1798();
  return sub_22655D6A0();
}

uint64_t sub_2264BC86C()
{
  sub_2264C1798();
  return sub_22655D6AC();
}

uint64_t sub_2264BC894()
{
  sub_2264C1820();
  return sub_22655D6A0();
}

uint64_t sub_2264BC8BC()
{
  sub_2264C1820();
  return sub_22655D6AC();
}

uint64_t sub_2264BC8E4()
{
  sub_2264C1864();
  return sub_22655D6A0();
}

uint64_t sub_2264BC90C()
{
  sub_2264C1864();
  return sub_22655D6AC();
}

void CapturedRoom.Surface.Edge.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845DA8);
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v18 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845DB0);
  v16 = *(_QWORD *)(v6 - 8);
  v17 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v15 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845DB8);
  v13 = *(_QWORD *)(v8 - 8);
  v14 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845DC0);
  MEMORY[0x24BDAC7A8](v12);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845DC8);
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2264C1754();
  sub_22655D694();
  __asm { BR              X9 }
}

uint64_t sub_2264BCAEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 - 68) = 0;
  sub_2264C1864();
  sub_22655D4D8();
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(v2, *(_QWORD *)(v4 - 168));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v1, v0);
}

uint64_t CapturedRoom.Surface.Edge.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD v21[7];
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;

  v23 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845DF8);
  v21[5] = *(_QWORD *)(v3 - 8);
  v21[6] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845E00);
  v21[4] = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845E08);
  v21[2] = *(_QWORD *)(v6 - 8);
  v21[3] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v24 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845E10);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845E18);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_2264C1754();
  v15 = v28;
  sub_22655D688();
  if (!v15)
  {
    v21[0] = v9;
    v21[1] = v8;
    v28 = v11;
    v16 = sub_22655D4CC();
    if (*(_QWORD *)(v16 + 16) == 1)
      __asm { BR              X9 }
    v17 = sub_22655D334();
    swift_allocError();
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558437C8);
    *v19 = &type metadata for CapturedRoom.Surface.Edge;
    sub_22655D46C();
    sub_22655D31C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v10);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

void sub_2264BD0A8(_QWORD *a1@<X8>)
{
  *a1 = &unk_24EDDFFA8;
}

uint64_t sub_2264BD0B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CapturedRoom.Surface.Edge.init(from:)(a1, a2);
}

void sub_2264BD0CC(_QWORD *a1)
{
  CapturedRoom.Surface.Edge.encode(to:)(a1);
}

uint64_t sub_2264BD0E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CapturedRoom.Surface.init(from:)(a1, a2);
}

uint64_t sub_2264BD0F4(_QWORD *a1)
{
  return CapturedRoom.Surface.encode(to:)(a1);
}

void CapturedRoom.Object.category.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

void CapturedRoom.Object.confidence.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

__n128 CapturedRoom.Object.dimensions.getter()
{
  __n128 *v0;

  return v0[1];
}

__n128 CapturedRoom.Object.transform.getter()
{
  __n128 *v0;

  return v0[2];
}

uint64_t CapturedRoom.Object.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CapturedRoom.Object(0) + 32);
  v4 = sub_22655C140();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CapturedRoom.Object.attributes.getter()
{
  type metadata accessor for CapturedRoom.Object(0);
  return swift_bridgeObjectRetain();
}

uint64_t CapturedRoom.Object.story.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for CapturedRoom.Object(0) + 40));
}

uint64_t CapturedRoom.Object.parentIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for CapturedRoom.Object(0);
  return sub_22643D7A0(v1 + *(int *)(v3 + 44), a1, (uint64_t *)&unk_255849AC0);
}

uint64_t sub_2264BD1F8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2264BD22C + 4 * byte_2265636F7[a1]))(0x79726F6765746163, 0xE800000000000000);
}

uint64_t sub_2264BD22C()
{
  return 0x6E656469666E6F63;
}

uint64_t sub_2264BD248()
{
  return 0x6F69736E656D6964;
}

uint64_t sub_2264BD268()
{
  return 0x726F66736E617274;
}

uint64_t sub_2264BD284()
{
  return 0x696669746E656469;
}

unint64_t sub_2264BD2A4()
{
  return 0xD000000000000010;
}

uint64_t sub_2264BD2C0()
{
  return 0x7475626972747461;
}

uint64_t sub_2264BD2E0()
{
  return 0x79726F7473;
}

uint64_t sub_2264BD2F4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2264BD328 + 4 * byte_2265636FF[a1]))(0x79726F6765746163, 0xE800000000000000);
}

uint64_t sub_2264BD328()
{
  return 0x6E656469666E6F63;
}

uint64_t sub_2264BD344()
{
  return 0x6F69736E656D6964;
}

uint64_t sub_2264BD364()
{
  return 0x726F66736E617274;
}

uint64_t sub_2264BD380()
{
  return 0x696669746E656469;
}

unint64_t sub_2264BD3A0()
{
  return 0xD000000000000010;
}

uint64_t sub_2264BD3BC()
{
  return 0x7475626972747461;
}

uint64_t sub_2264BD3DC()
{
  return 0x79726F7473;
}

void sub_2264BD3F0(char *a1)
{
  sub_2264AD5FC(*a1);
}

void sub_2264BD3FC()
{
  char *v0;

  sub_2264AE250(0, *v0);
}

void sub_2264BD408(uint64_t a1)
{
  char *v1;

  sub_2264ADC60(a1, *v1);
}

void sub_2264BD410(uint64_t a1)
{
  char *v1;

  sub_2264AE250(a1, *v1);
}

uint64_t sub_2264BD418@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2264CA7AC();
  *a1 = result;
  return result;
}

uint64_t sub_2264BD444@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2264BD1F8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2264BD46C()
{
  unsigned __int8 *v0;

  return sub_2264BD2F4(*v0);
}

uint64_t sub_2264BD474@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2264CA7AC();
  *a1 = result;
  return result;
}

void sub_2264BD498(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_2264BD4A4()
{
  sub_2264C18A8();
  return sub_22655D6A0();
}

uint64_t sub_2264BD4CC()
{
  sub_2264C18A8();
  return sub_22655D6AC();
}

uint64_t CapturedRoom.Object.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(double);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  char *v45;
  void (*v46)(double);
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  _QWORD *v62;
  uint64_t v63;
  __int128 v64;
  char v65;

  v48 = a2;
  v56 = sub_22655D334();
  v53 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v50 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v51 = (char *)&v41 - v5;
  MEMORY[0x24BDAC7A8](v6);
  v52 = (char *)&v41 - v7;
  v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
  MEMORY[0x24BDAC7A8](v55);
  v49 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v54 = (char *)&v41 - v10;
  v11 = sub_22655C140();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v57 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845E20);
  v58 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (int *)type metadata accessor for CapturedRoom.Object(0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(int *)(v20 + 40);
  *(_QWORD *)&v19[v21] = 0;
  v22 = *(void (**)(double))(v12 + 56);
  v61 = &v19[*(int *)(v20 + 44)];
  v59 = v11;
  v22(v17);
  v23 = a1[3];
  v62 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v23);
  sub_2264C18A8();
  v24 = v63;
  sub_22655D688();
  if (v24)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
    return sub_22643D7E4((uint64_t)v61, (uint64_t *)&unk_255849AC0);
  }
  else
  {
    v46 = v22;
    v47 = v21;
    v63 = v12;
    v25 = v59;
    v65 = 0;
    sub_226488EE0();
    sub_22655D4B4();
    *v19 = v64;
    v65 = 1;
    sub_2264BA6F4();
    sub_22655D4B4();
    v19[1] = v64;
    v45 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255849BA0);
    v65 = 2;
    sub_2264CB5F8((unint64_t *)&unk_255848050, &qword_255849BA0, MEMORY[0x24BEE4118]);
    sub_22655D4B4();
    *((_OWORD *)v19 + 1) = v64;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255841B50);
    v65 = 3;
    sub_2264C1420((unint64_t *)&qword_255848020, MEMORY[0x24BEE1520], MEMORY[0x24BEE12D0]);
    sub_22655D4B4();
    sub_2264BA77C(v64);
    v44 = v27;
    v43 = v28;
    v42 = v29;
    v41 = v30;
    swift_bridgeObjectRelease();
    v31 = v43;
    *((_OWORD *)v19 + 2) = v44;
    *((_OWORD *)v19 + 3) = v31;
    v32 = v41;
    *((_OWORD *)v19 + 4) = v42;
    *((_OWORD *)v19 + 5) = v32;
    LOBYTE(v64) = 4;
    sub_226437F28(&qword_255845C70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v33 = v57;
    sub_22655D4B4();
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(&v19[v16[8]], v33, v25);
    LOBYTE(v64) = 5;
    sub_2264BA8D0();
    v34 = (uint64_t)v54;
    sub_22655D4B4();
    sub_226446510(v34, (uint64_t)v61, (uint64_t *)&unk_255849AC0);
    v35 = &v19[v16[13]];
    *(_QWORD *)v35 = 0;
    *((_QWORD *)v35 + 1) = 0;
    if (qword_25583F940 != -1)
      swift_once();
    *(_DWORD *)&v19[v16[12]] = dword_25585AF20;
    v65 = 6;
    sub_2264C18EC();
    sub_22655D4B4();
    v36 = v47;
    *(_QWORD *)&v19[v16[9]] = v64;
    LOBYTE(v64) = 7;
    v37 = v60;
    v38 = v45;
    v39 = sub_22655D4A8();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v38, v37);
    *(_QWORD *)&v19[v36] = v39;
    v40 = (uint64_t)v62;
    sub_22643D704((uint64_t)v19, v48, type metadata accessor for CapturedRoom.Object);
    __swift_destroy_boxed_opaque_existential_1(v40);
    return sub_22643D748((uint64_t)v19, type metadata accessor for CapturedRoom.Object);
  }
}

uint64_t CapturedRoom.Object.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  __int128 v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845E38);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2264C18A8();
  sub_22655D694();
  LOBYTE(v11) = *(_BYTE *)v3;
  v12 = 0;
  sub_226488E14();
  sub_22655D514();
  if (!v2)
  {
    LOBYTE(v11) = *(_BYTE *)(v3 + 1);
    v12 = 1;
    sub_2264C1334();
    sub_22655D514();
    v11 = *(_OWORD *)(v3 + 16);
    v12 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255849BA0);
    sub_2264CB5F8(&qword_255848180, &qword_255849BA0, MEMORY[0x24BEE4108]);
    sub_22655D514();
    *(_QWORD *)&v11 = sub_2264BAE1C(*(__n128 *)(v3 + 32), *(__n128 *)(v3 + 48), *(__n128 *)(v3 + 64), *(__n128 *)(v3 + 80));
    v12 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255841B50);
    sub_2264C1420(&qword_255845CB8, MEMORY[0x24BEE14F8], MEMORY[0x24BEE12A0]);
    sub_22655D514();
    swift_bridgeObjectRelease();
    v10 = type metadata accessor for CapturedRoom.Object(0);
    LOBYTE(v11) = 4;
    sub_22655C140();
    sub_226437F28(&qword_255843318, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_22655D514();
    LOBYTE(v11) = 5;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
    sub_2264C14FC();
    sub_22655D514();
    *(_QWORD *)&v11 = *(_QWORD *)(v3 + *(int *)(v10 + 36));
    v12 = 6;
    sub_2264C1930();
    swift_bridgeObjectRetain();
    sub_22655D514();
    swift_bridgeObjectRelease();
    LOBYTE(v11) = 7;
    sub_22655D508();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_2264BE2F0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2264BE324 + 4 * byte_226563707[a1]))(0x656761726F7473, 0xE700000000000000);
}

uint64_t sub_2264BE324()
{
  return 0x7265676972666572;
}

uint64_t sub_2264BE344()
{
  return 0x65766F7473;
}

uint64_t sub_2264BE358()
{
  return 6579554;
}

uint64_t sub_2264BE368()
{
  return 1802398067;
}

uint64_t sub_2264BE378()
{
  return 0x7244726568736177;
}

uint64_t sub_2264BE398()
{
  return 0x74656C696F74;
}

uint64_t sub_2264BE3AC()
{
  return 0x62757468746162;
}

uint64_t sub_2264BE3C0()
{
  return 1852143215;
}

uint64_t sub_2264BE3D0()
{
  return 0x6873617768736964;
}

uint64_t sub_2264BE3F0()
{
  return 0x656C626174;
}

uint64_t sub_2264BE404()
{
  return 1634103155;
}

uint64_t sub_2264BE414()
{
  return 0x7269616863;
}

uint64_t sub_2264BE428()
{
  return 0x63616C7065726966;
}

uint64_t sub_2264BE444()
{
  return 0x69736976656C6574;
}

uint64_t sub_2264BE460()
{
  return 0x737269617473;
}

uint64_t sub_2264BE474()
{
  sub_2264C1BD8();
  return sub_22655D6A0();
}

uint64_t sub_2264BE49C()
{
  sub_2264C1BD8();
  return sub_22655D6AC();
}

uint64_t sub_2264BE4C4()
{
  sub_2264C1CE8();
  return sub_22655D6A0();
}

uint64_t sub_2264BE4EC()
{
  sub_2264C1CE8();
  return sub_22655D6AC();
}

uint64_t sub_2264BE514()
{
  sub_2264C1A84();
  return sub_22655D6A0();
}

uint64_t sub_2264BE53C()
{
  sub_2264C1A84();
  return sub_22655D6AC();
}

uint64_t sub_2264BE564()
{
  unsigned __int8 *v0;

  return sub_2264BE2F0(*v0);
}

uint64_t sub_2264BE56C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2264CAF68(a1, a2);
  *a3 = result;
  return result;
}

void sub_2264BE590(_BYTE *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_2264BE59C()
{
  sub_2264C1974();
  return sub_22655D6A0();
}

uint64_t sub_2264BE5C4()
{
  sub_2264C1974();
  return sub_22655D6AC();
}

uint64_t sub_2264BE5EC()
{
  sub_2264C1B50();
  return sub_22655D6A0();
}

uint64_t sub_2264BE614()
{
  sub_2264C1B50();
  return sub_22655D6AC();
}

uint64_t sub_2264BE63C()
{
  sub_2264C1A40();
  return sub_22655D6A0();
}

uint64_t sub_2264BE664()
{
  sub_2264C1A40();
  return sub_22655D6AC();
}

uint64_t sub_2264BE68C()
{
  sub_2264C1B94();
  return sub_22655D6A0();
}

uint64_t sub_2264BE6B4()
{
  sub_2264C1B94();
  return sub_22655D6AC();
}

uint64_t sub_2264BE6DC()
{
  sub_2264C1D70();
  return sub_22655D6A0();
}

uint64_t sub_2264BE704()
{
  sub_2264C1D70();
  return sub_22655D6AC();
}

uint64_t sub_2264BE72C()
{
  sub_2264C1CA4();
  return sub_22655D6A0();
}

uint64_t sub_2264BE754()
{
  sub_2264C1CA4();
  return sub_22655D6AC();
}

uint64_t sub_2264BE77C()
{
  sub_2264C1AC8();
  return sub_22655D6A0();
}

uint64_t sub_2264BE7A4()
{
  sub_2264C1AC8();
  return sub_22655D6AC();
}

uint64_t sub_2264BE7CC()
{
  sub_2264C19B8();
  return sub_22655D6A0();
}

uint64_t sub_2264BE7F4()
{
  sub_2264C19B8();
  return sub_22655D6AC();
}

uint64_t sub_2264BE81C()
{
  sub_2264C1DB4();
  return sub_22655D6A0();
}

uint64_t sub_2264BE844()
{
  sub_2264C1DB4();
  return sub_22655D6AC();
}

uint64_t sub_2264BE86C()
{
  sub_2264C1D2C();
  return sub_22655D6A0();
}

uint64_t sub_2264BE894()
{
  sub_2264C1D2C();
  return sub_22655D6AC();
}

uint64_t sub_2264BE8BC()
{
  sub_2264C1B0C();
  return sub_22655D6A0();
}

uint64_t sub_2264BE8E4()
{
  sub_2264C1B0C();
  return sub_22655D6AC();
}

uint64_t sub_2264BE90C()
{
  sub_2264C19FC();
  return sub_22655D6A0();
}

uint64_t sub_2264BE934()
{
  sub_2264C19FC();
  return sub_22655D6AC();
}

uint64_t sub_2264BE95C()
{
  sub_2264C1C1C();
  return sub_22655D6A0();
}

uint64_t sub_2264BE984()
{
  sub_2264C1C1C();
  return sub_22655D6AC();
}

uint64_t sub_2264BE9AC()
{
  sub_2264C1C60();
  return sub_22655D6A0();
}

uint64_t sub_2264BE9D4()
{
  sub_2264C1C60();
  return sub_22655D6AC();
}

void CapturedRoom.Object.Category.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845E48);
  v69 = *(_QWORD *)(v3 - 8);
  v70 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v68 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845E50);
  v66 = *(_QWORD *)(v5 - 8);
  v67 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v65 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845E58);
  v63 = *(_QWORD *)(v7 - 8);
  v64 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v62 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845E60);
  v60 = *(_QWORD *)(v9 - 8);
  v61 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v59 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845E68);
  v57 = *(_QWORD *)(v11 - 8);
  v58 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v56 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845E70);
  v54 = *(_QWORD *)(v13 - 8);
  v55 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v53 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845E78);
  v51 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v50 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845E80);
  v48 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v47 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845E88);
  v45 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v44 = (char *)v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845E90);
  v42 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v41 = (char *)v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845E98);
  v39 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v38 = (char *)v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845EA0);
  v36 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v35 = (char *)v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845EA8);
  v33 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v32 = (char *)v27 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845EB0);
  v30 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v29 = (char *)v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845EB8);
  v27[1] = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845EC0);
  MEMORY[0x24BDAC7A8](v23);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845EC8);
  v71 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v25 = (char *)v27 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2264C1974();
  v72 = v25;
  sub_22655D694();
  __asm { BR              X9 }
}

uint64_t sub_2264BEF48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 65) = 0;
  sub_2264C1DB4();
  v4 = *(_QWORD *)(v3 - 112);
  v5 = *(_QWORD *)(v3 - 104);
  sub_22655D4D8();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 120) + 8))(v4, v5);
}

uint64_t CapturedRoom.Object.Category.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  char *v34;
  _QWORD v36[3];
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;

  v84 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845F58);
  v67 = *(_QWORD *)(v3 - 8);
  v68 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v80 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845F60);
  v65 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v79 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845F68);
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v78 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845F70);
  v61 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v77 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845F78);
  v59 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v76 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845F80);
  v57 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v75 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845F88);
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v74 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845F90);
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v83 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845F98);
  v49 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v82 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845FA0);
  v50 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v81 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845FA8);
  v47 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v73 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845FB0);
  v45 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v72 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845FB8);
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v71 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845FC0);
  v41 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v70 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845FC8);
  v39 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v69 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845FD0);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255845FD8);
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)v36 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = a1[3];
  v85 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v27);
  sub_2264C1974();
  v28 = v86;
  sub_22655D688();
  if (!v28)
  {
    v36[2] = v22;
    v36[0] = v20;
    v36[1] = v19;
    v37 = v24;
    v86 = v23;
    v38 = v26;
    v29 = sub_22655D4CC();
    if (*(_QWORD *)(v29 + 16) == 1)
      __asm { BR              X9 }
    v30 = sub_22655D334();
    swift_allocError();
    v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558437C8);
    *v32 = &type metadata for CapturedRoom.Object.Category;
    v33 = v86;
    v34 = v38;
    sub_22655D46C();
    sub_22655D31C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v32, *MEMORY[0x24BEE26D0], v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v34, v33);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
}

uint64_t sub_2264C0128@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CapturedRoom.Object.Category.init(from:)(a1, a2);
}

void sub_2264C013C(_QWORD *a1)
{
  CapturedRoom.Object.Category.encode(to:)(a1);
}

void sub_2264C0150(_QWORD *a1@<X8>)
{
  *a1 = &unk_24EDDEF88;
}

uint64_t CapturedRoom.Object.attribute<A>(of:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17[2];

  v7 = *(_QWORD *)(v3 + *(int *)(type metadata accessor for CapturedRoom.Object(0) + 36));
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v9 = v7 + 32;
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_226438600(v9, (uint64_t)&v12);
      __swift_project_boxed_opaque_existential_1(&v12, v13);
      if (swift_getDynamicType() == a1)
        break;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
      v9 += 40;
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_226438644(&v12, (uint64_t)&v14);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_7:
    v16 = 0;
    v14 = 0u;
    v15 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v15 + 1))
  {
    sub_226438644(&v14, (uint64_t)v17);
    sub_226438644(v17, (uint64_t)&v14);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255843B20);
    v10 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a3, v10 ^ 1u, 1, a2);
  }
  else
  {
    sub_22643D7E4((uint64_t)&v14, &qword_255845FE0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a3, 1, 1, a2);
  }
}

void sub_2264C02D4()
{
  dword_25585AF20 = 255;
}

unint64_t sub_2264C035C(int a1)
{
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v33;
  unint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  unint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  unint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  unint64_t v43;
  _QWORD *v44;

  if (!a1)
    return 0xD000000000000013;
  if (qword_25583F940 != -1)
    swift_once();
  if (dword_25585AF20 != a1)
  {
    if ((a1 & 1) != 0)
    {
      v3 = sub_226486B0C(0, 1, 1, MEMORY[0x24BEE4AF8]);
      v5 = v3[2];
      v4 = v3[3];
      if (v5 >= v4 >> 1)
        v3 = sub_226486B0C((_QWORD *)(v4 > 1), v5 + 1, 1, v3);
      v3[2] = v5 + 1;
      v6 = &v3[2 * v5];
      v6[4] = 0xD000000000000010;
      v6[5] = 0x800000022656E1B0;
      if ((a1 & 2) == 0)
      {
LABEL_18:
        if ((a1 & 4) != 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v3 = sub_226486B0C(0, v3[2] + 1, 1, v3);
          v11 = v3[2];
          v10 = v3[3];
          if (v11 >= v10 >> 1)
            v3 = sub_226486B0C((_QWORD *)(v10 > 1), v11 + 1, 1, v3);
          v3[2] = v11 + 1;
          v12 = &v3[2 * v11];
          v12[4] = 0xD000000000000010;
          v12[5] = 0x800000022656E170;
        }
        if ((a1 & 8) != 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v3 = sub_226486B0C(0, v3[2] + 1, 1, v3);
          v13 = v3[2];
          v14 = v3[3];
          v15 = v13 + 1;
          if (v13 >= v14 >> 1)
          {
            v33 = v3;
            v34 = v3[2];
            v35 = sub_226486B0C((_QWORD *)(v14 > 1), v13 + 1, 1, v33);
            v13 = v34;
            v3 = v35;
          }
          v3[2] = v15;
          v16 = &v3[2 * v13];
          v16[4] = 0x776F6C206B636162;
          v16[5] = 0xEF7466656C207265;
          if ((a1 & 0x10) == 0)
          {
LABEL_26:
            if ((a1 & 0x20) == 0)
              goto LABEL_27;
            goto LABEL_40;
          }
        }
        else if ((a1 & 0x10) == 0)
        {
          goto LABEL_26;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_226486B0C(0, v3[2] + 1, 1, v3);
        v17 = v3[2];
        v18 = v3[3];
        v19 = v17 + 1;
        if (v17 >= v18 >> 1)
        {
          v36 = v3;
          v37 = v3[2];
          v38 = sub_226486B0C((_QWORD *)(v18 > 1), v17 + 1, 1, v36);
          v17 = v37;
          v3 = v38;
        }
        v3[2] = v19;
        v20 = &v3[2 * v17];
        v20[4] = 0xD000000000000010;
        v20[5] = 0x800000022656E150;
        if ((a1 & 0x20) == 0)
        {
LABEL_27:
          if ((a1 & 0x40) == 0)
            goto LABEL_28;
          goto LABEL_45;
        }
LABEL_40:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_226486B0C(0, v3[2] + 1, 1, v3);
        v21 = v3[2];
        v22 = v3[3];
        v23 = v21 + 1;
        if (v21 >= v22 >> 1)
        {
          v39 = v3;
          v40 = v3[2];
          v41 = sub_226486B0C((_QWORD *)(v22 > 1), v21 + 1, 1, v39);
          v21 = v40;
          v3 = v41;
        }
        v3[2] = v23;
        v24 = &v3[2 * v21];
        v24[4] = 0xD000000000000011;
        v24[5] = 0x800000022656E130;
        if ((a1 & 0x40) == 0)
        {
LABEL_28:
          if ((a1 & 0x80) == 0)
          {
LABEL_55:
            __swift_instantiateConcreteTypeFromMangledName(&qword_2558432C0);
            sub_2264CB5F8((unint64_t *)&qword_2558432C8, &qword_2558432C0, MEMORY[0x24BEE12B0]);
            v2 = sub_22655CCF8();
            swift_bridgeObjectRelease();
            return v2;
          }
LABEL_50:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v3 = sub_226486B0C(0, v3[2] + 1, 1, v3);
          v30 = v3[2];
          v29 = v3[3];
          if (v30 >= v29 >> 1)
            v3 = sub_226486B0C((_QWORD *)(v29 > 1), v30 + 1, 1, v3);
          v3[2] = v30 + 1;
          v31 = &v3[2 * v30];
          v31[4] = 0x707075206B636162;
          v31[5] = 0xEF7466656C207265;
          goto LABEL_55;
        }
LABEL_45:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_226486B0C(0, v3[2] + 1, 1, v3);
        v25 = v3[2];
        v26 = v3[3];
        v27 = v25 + 1;
        if (v25 >= v26 >> 1)
        {
          v42 = v3;
          v43 = v3[2];
          v44 = sub_226486B0C((_QWORD *)(v26 > 1), v25 + 1, 1, v42);
          v25 = v43;
          v3 = v44;
        }
        v3[2] = v27;
        v28 = &v3[2 * v25];
        v28[4] = 0xD000000000000010;
        v28[5] = 0x800000022656E110;
        if ((a1 & 0x80) == 0)
          goto LABEL_55;
        goto LABEL_50;
      }
    }
    else
    {
      v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if ((a1 & 2) == 0)
        goto LABEL_18;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v3 = sub_226486B0C(0, v3[2] + 1, 1, v3);
    v8 = v3[2];
    v7 = v3[3];
    if (v8 >= v7 >> 1)
      v3 = sub_226486B0C((_QWORD *)(v7 > 1), v8 + 1, 1, v3);
    v3[2] = v8 + 1;
    v9 = &v3[2 * v8];
    v9[4] = 0xD000000000000011;
    v9[5] = 0x800000022656E190;
    goto LABEL_18;
  }
  return 0xD000000000000015;
}

uint64_t sub_2264C0888()
{
  sub_2264C640C();
  return sub_22655CEA8();
}

uint64_t sub_2264C08E4()
{
  sub_2264C640C();
  return sub_22655CE90();
}

unint64_t sub_2264C0930()
{
  int *v0;

  return sub_2264C035C(*v0);
}

void sub_2264C0938(float32x4_t *a1)
{
  uint64_t v1;
  __int128 v2;
  float v3;
  __int128 v4;
  float v5;
  float32x4_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  float32x4_t v13;
  float32x2_t v14;
  float32x2_t v15;
  _QWORD *v16;

  v2 = *(_OWORD *)(v1 + 64);
  v15 = (float32x2_t)v2;
  v3 = COERCE_FLOAT(*(_QWORD *)(v1 + 72));
  HIDWORD(v2) = 0;
  v11 = v2;
  v4 = *(_OWORD *)(v1 + 32);
  v14 = (float32x2_t)v4;
  v5 = COERCE_FLOAT(*(_QWORD *)(v1 + 40));
  HIDWORD(v4) = 0;
  v12 = v4;
  v6 = a1[4];
  v6.i32[3] = 0;
  v13 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558439F0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_22655FA80;
  *(_OWORD *)(v7 + 32) = v11;
  *(_BYTE *)(v7 + 48) = 0;
  *(float32x2_t *)&v8 = vsub_f32(0, v15);
  *((float *)&v8 + 2) = 0.0 - v3;
  HIDWORD(v8) = 0;
  *(_OWORD *)(v7 + 64) = v8;
  *(_BYTE *)(v7 + 80) = 2;
  *(_OWORD *)(v7 + 96) = v12;
  *(_BYTE *)(v7 + 112) = 3;
  *(float32x2_t *)&v9 = vsub_f32(0, v14);
  *((float *)&v9 + 2) = 0.0 - v5;
  HIDWORD(v9) = 0;
  *(_OWORD *)(v7 + 128) = v9;
  *(_BYTE *)(v7 + 144) = 1;
  v16 = (_QWORD *)v7;
  sub_2264B46C4(&v16, v13);
  if (v16[2])
  {
    v10 = *((unsigned __int8 *)v16 + 48);
    swift_bridgeObjectRelease();
    __asm { BR              X9 }
  }
  __break(1u);
  JUMPOUT(0x2264C0C30);
}

__n128 *sub_2264C0C40(unint64_t a1, unint64_t a2, unint64_t a3, __n128 a4, __n128 a5, __n128 a6)
{
  __n128 *result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255843AC0);
  result = (__n128 *)swift_allocObject();
  result[2] = a4;
  result[3] = a5;
  result[4] = a6;
  if (a1 > 2)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (a2 > 2)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a3 <= 2)
  {
    swift_setDeallocating();
    return (__n128 *)swift_deallocClassInstance();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_2264C0D30@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CapturedRoom.Object.init(from:)(a1, a2);
}

uint64_t sub_2264C0D44(_QWORD *a1)
{
  return CapturedRoom.Object.encode(to:)(a1);
}

uint64_t CapturedRoom.USDExportOptions.rawValue.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t CapturedRoom.USDExportOptions.init(rawValue:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static CapturedRoom.USDExportOptions.parametric.getter(_DWORD *a1@<X8>)
{
  *a1 = 1;
}

void static CapturedRoom.USDExportOptions.model.getter(_DWORD *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_2264C0D84@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CapturedRoom.init(from:)(a1, a2);
}

uint64_t sub_2264C0D98(_QWORD *a1)
{
  return CapturedRoom.encode(to:)(a1);
}

uint64_t sub_2264C0DAC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2264C0DB4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2264C0DBC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2264C0DC4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2264C0DCC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2264C0DD4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2264C0DDC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2264C0DE8@<X0>(uint64_t result@<X0>, _OWORD *a2@<X8>)
{
  unint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;

  v2 = *(_QWORD *)(result + 16);
  switch(v2)
  {
    case 0uLL:
      goto LABEL_11;
    case 1uLL:
      goto LABEL_12;
    case 2uLL:
      goto LABEL_13;
  }
  if (v2 < 4)
    goto LABEL_11;
  if (v2 == 4)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v2 < 6)
    goto LABEL_13;
  if (v2 == 6)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v2 < 8)
    goto LABEL_12;
  if (v2 != 8)
  {
    *(_QWORD *)&v3 = *(_QWORD *)(result + 56);
    *((_QWORD *)&v3 + 1) = *(unsigned int *)(result + 64);
    *(_QWORD *)&v4 = *(_QWORD *)(result + 44);
    *((_QWORD *)&v4 + 1) = *(unsigned int *)(result + 52);
    *(_QWORD *)&v5 = *(_QWORD *)(result + 32);
    *((_QWORD *)&v5 + 1) = *(unsigned int *)(result + 40);
    *a2 = v5;
    a2[1] = v4;
    a2[2] = v3;
    return result;
  }
LABEL_13:
  __break(1u);
  return result;
}

void sub_2264C0E84(char *a1)
{
  sub_2264AD4E4(*a1);
}

void sub_2264C0E90()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_22655D640();
  __asm { BR              X9 }
}

uint64_t sub_2264C0ED0()
{
  sub_22655CE00();
  swift_bridgeObjectRelease();
  return sub_22655D670();
}

void sub_2264C0F28()
{
  __asm { BR              X10 }
}

uint64_t sub_2264C0F58()
{
  sub_22655CE00();
  return swift_bridgeObjectRelease();
}

void sub_2264C0F9C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_22655D640();
  __asm { BR              X9 }
}

uint64_t sub_2264C0FD8()
{
  sub_22655CE00();
  swift_bridgeObjectRelease();
  return sub_22655D670();
}

uint64_t sub_2264C1030@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2264CA7F4();
  *a1 = result;
  return result;
}

uint64_t sub_2264C105C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_2264C1080 + 4 * byte_226563764[*v0]))();
}

void sub_2264C1080(_QWORD *a1@<X8>)
{
  *a1 = 3160434;
  a1[1] = 0xE300000000000000;
}

void sub_2264C1094(_QWORD *a1@<X8>)
{
  *a1 = 808989042;
  a1[1] = 0xE400000000000000;
}

void sub_2264C10A8(_QWORD *a1@<X8>)
{
  *a1 = 808923762;
  a1[1] = 0xE400000000000000;
}

_QWORD *sub_2264C10C0(_QWORD *a1)
{
  return sub_226486D38(0, a1[2], 0, a1);
}

_QWORD *sub_2264C10D4(_QWORD *a1)
{
  return sub_226486E44(0, a1[2], 0, a1);
}

_QWORD *sub_2264C10E8(_QWORD *a1)
{
  return sub_226486C2C(0, a1[2], 0, a1);
}

_QWORD *sub_2264C10FC(_QWORD *a1)
{
  return sub_226486F68(0, a1[2], 0, a1);
}

_QWORD *sub_2264C1110(_QWORD *a1)
{
  return sub_226487074(0, a1[2], 0, a1);
}

_QWORD *sub_2264C1124(_QWORD *a1)
{
  return sub_226487198(0, a1[2], 0, a1);
}

_QWORD *sub_2264C1138(_QWORD *a1)
{
  return sub_2264872A4(0, a1[2], 0, a1);
}

_QWORD *sub_2264C114C(_QWORD *a1)
{
  return sub_2264873C8(0, a1[2], 0, a1);
}

_QWORD *sub_2264C1160(_QWORD *a1)
{
  return sub_2264874D4(0, a1[2], 0, a1);
}

_QWORD *sub_2264C1174(_QWORD *a1)
{
  return sub_2264875E0(0, a1[2], 0, a1);
}

char *sub_2264C1188(uint64_t a1)
{
  return sub_226486AEC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2264C119C(unint64_t a1)
{
  return sub_226487A4C(0, *(_QWORD *)(a1 + 16), 0, a1);
}

char *sub_2264C11B0(uint64_t a1)
{
  return sub_226487B6C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_2264C11C4(uint64_t a1)
{
  return sub_226487EB8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2264C11D8(unint64_t a1)
{
  return sub_226487704(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_2264C11EC(_QWORD *a1)
{
  return sub_226486AE0(0, a1[2], 0, a1);
}

_QWORD *sub_2264C1200(_QWORD *a1)
{
  return sub_226487FCC(0, a1[2], 0, a1);
}

char *sub_2264C1214(uint64_t a1)
{
  return sub_2264880D8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

_QWORD *sub_2264C1228(_QWORD *a1)
{
  return sub_2264882F0(0, a1[2], 0, a1);
}

_QWORD *sub_2264C123C(_QWORD *a1)
{
  return sub_226488304(0, a1[2], 0, a1);
}

char *sub_2264C1250(uint64_t a1)
{
  return sub_226488780(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_2264C1264(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_22655D400();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x2276999F0);
}

_QWORD *sub_2264C12CC(_QWORD *a1)
{
  return sub_2264889A4(0, a1[2], 0, a1);
}

char *sub_2264C12E0(uint64_t a1)
{
  return sub_226488BE0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2264C12F4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2264C7C1C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2264C1310(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2264C8434(a1, a2, a3, *v3, &qword_255840A78);
  *v3 = (char *)result;
  return result;
}

unint64_t sub_2264C1334()
{
  unint64_t result;

  result = qword_255845CA0;
  if (!qword_255845CA0)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for CapturedRoom.Confidence, &type metadata for CapturedRoom.Confidence);
    atomic_store(result, (unint64_t *)&qword_255845CA0);
  }
  return result;
}

uint64_t sub_2264C1378(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x22769A794](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2264C13DC()
{
  unint64_t result;

  result = qword_255845CB0;
  if (!qword_255845CB0)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for CapturedRoom.Surface.Edge, &type metadata for CapturedRoom.Surface.Edge);
    atomic_store(result, (unint64_t *)&qword_255845CB0);
  }
  return result;
}

uint64_t sub_2264C1420(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255841B50);
    v8 = a2;
    result = MEMORY[0x22769A794](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2264C1480()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255845CC0;
  if (!qword_255845CC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_255848090);
    v2 = sub_226437F28(&qword_255845CC8, type metadata accessor for CapturedRoom.Surface.Curve, (uint64_t)&protocol conformance descriptor for CapturedRoom.Surface.Curve);
    result = MEMORY[0x22769A794](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255845CC0);
  }
  return result;
}

unint64_t sub_2264C14FC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255845CD0;
  if (!qword_255845CD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_255849AC0);
    v2 = sub_226437F28(&qword_255843318, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    result = MEMORY[0x22769A794](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255845CD0);
  }
  return result;
}

unint64_t sub_2264C1578()
{
  unint64_t result;

  result = qword_255845D10;
  if (!qword_255845D10)
  {
    result = MEMORY[0x22769A794](&unk_226566184, &type metadata for CapturedRoom.Surface.Category.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845D10);
  }
  return result;
}

unint64_t sub_2264C15BC()
{
  unint64_t result;

  result = qword_255845D18;
  if (!qword_255845D18)
  {
    result = MEMORY[0x22769A794](&unk_226566134, &type metadata for CapturedRoom.Surface.Category.FloorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845D18);
  }
  return result;
}

unint64_t sub_2264C1600()
{
  unint64_t result;

  result = qword_255845D20;
  if (!qword_255845D20)
  {
    result = MEMORY[0x22769A794](&unk_2265660E4, &type metadata for CapturedRoom.Surface.Category.DoorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845D20);
  }
  return result;
}

unint64_t sub_2264C1644()
{
  unint64_t result;

  result = qword_255845D28;
  if (!qword_255845D28)
  {
    result = MEMORY[0x22769A794](&unk_226566094, &type metadata for CapturedRoom.Surface.Category.WindowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845D28);
  }
  return result;
}

unint64_t sub_2264C1688()
{
  unint64_t result;

  result = qword_255845D30;
  if (!qword_255845D30)
  {
    result = MEMORY[0x22769A794](&unk_226566044, &type metadata for CapturedRoom.Surface.Category.OpeningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845D30);
  }
  return result;
}

unint64_t sub_2264C16CC()
{
  unint64_t result;

  result = qword_255845D38;
  if (!qword_255845D38)
  {
    result = MEMORY[0x22769A794](&unk_226565FF4, &type metadata for CapturedRoom.Surface.Category.WallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845D38);
  }
  return result;
}

unint64_t sub_2264C1710()
{
  unint64_t result;

  result = qword_255845D78;
  if (!qword_255845D78)
  {
    result = MEMORY[0x22769A794](&unk_226565FA4, &type metadata for CapturedRoom.Surface.Curve.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845D78);
  }
  return result;
}

unint64_t sub_2264C1754()
{
  unint64_t result;

  result = qword_255845DD0;
  if (!qword_255845DD0)
  {
    result = MEMORY[0x22769A794](&unk_226565F54, &type metadata for CapturedRoom.Surface.Edge.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845DD0);
  }
  return result;
}

unint64_t sub_2264C1798()
{
  unint64_t result;

  result = qword_255845DD8;
  if (!qword_255845DD8)
  {
    result = MEMORY[0x22769A794](&unk_226565F04, &type metadata for CapturedRoom.Surface.Edge.LeftCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845DD8);
  }
  return result;
}

unint64_t sub_2264C17DC()
{
  unint64_t result;

  result = qword_255845DE0;
  if (!qword_255845DE0)
  {
    result = MEMORY[0x22769A794](&unk_226565EB4, &type metadata for CapturedRoom.Surface.Edge.BottomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845DE0);
  }
  return result;
}

unint64_t sub_2264C1820()
{
  unint64_t result;

  result = qword_255845DE8;
  if (!qword_255845DE8)
  {
    result = MEMORY[0x22769A794](&unk_226565E64, &type metadata for CapturedRoom.Surface.Edge.RightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845DE8);
  }
  return result;
}

unint64_t sub_2264C1864()
{
  unint64_t result;

  result = qword_255845DF0;
  if (!qword_255845DF0)
  {
    result = MEMORY[0x22769A794](&unk_226565E14, &type metadata for CapturedRoom.Surface.Edge.TopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845DF0);
  }
  return result;
}

unint64_t sub_2264C18A8()
{
  unint64_t result;

  result = qword_255845E28;
  if (!qword_255845E28)
  {
    result = MEMORY[0x22769A794](&unk_226565DC4, &type metadata for CapturedRoom.Object.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845E28);
  }
  return result;
}

unint64_t sub_2264C18EC()
{
  unint64_t result;

  result = qword_255845E30;
  if (!qword_255845E30)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for CapturedRoom.AttributesCodableRepresentation, &type metadata for CapturedRoom.AttributesCodableRepresentation);
    atomic_store(result, (unint64_t *)&qword_255845E30);
  }
  return result;
}

unint64_t sub_2264C1930()
{
  unint64_t result;

  result = qword_255845E40;
  if (!qword_255845E40)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for CapturedRoom.AttributesCodableRepresentation, &type metadata for CapturedRoom.AttributesCodableRepresentation);
    atomic_store(result, (unint64_t *)&qword_255845E40);
  }
  return result;
}

unint64_t sub_2264C1974()
{
  unint64_t result;

  result = qword_255845ED0;
  if (!qword_255845ED0)
  {
    result = MEMORY[0x22769A794](&unk_226565D74, &type metadata for CapturedRoom.Object.Category.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845ED0);
  }
  return result;
}

unint64_t sub_2264C19B8()
{
  unint64_t result;

  result = qword_255845ED8;
  if (!qword_255845ED8)
  {
    result = MEMORY[0x22769A794](&unk_226565D24, &type metadata for CapturedRoom.Object.Category.StairsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845ED8);
  }
  return result;
}

unint64_t sub_2264C19FC()
{
  unint64_t result;

  result = qword_255845EE0;
  if (!qword_255845EE0)
  {
    result = MEMORY[0x22769A794](&unk_226565CD4, &type metadata for CapturedRoom.Object.Category.TelevisionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845EE0);
  }
  return result;
}

unint64_t sub_2264C1A40()
{
  unint64_t result;

  result = qword_255845EE8;
  if (!qword_255845EE8)
  {
    result = MEMORY[0x22769A794](&unk_226565C84, &type metadata for CapturedRoom.Object.Category.FireplaceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845EE8);
  }
  return result;
}

unint64_t sub_2264C1A84()
{
  unint64_t result;

  result = qword_255845EF0;
  if (!qword_255845EF0)
  {
    result = MEMORY[0x22769A794](&unk_226565C34, &type metadata for CapturedRoom.Object.Category.ChairCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845EF0);
  }
  return result;
}

unint64_t sub_2264C1AC8()
{
  unint64_t result;

  result = qword_255845EF8;
  if (!qword_255845EF8)
  {
    result = MEMORY[0x22769A794](&unk_226565BE4, &type metadata for CapturedRoom.Object.Category.SofaCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845EF8);
  }
  return result;
}

unint64_t sub_2264C1B0C()
{
  unint64_t result;

  result = qword_255845F00;
  if (!qword_255845F00)
  {
    result = MEMORY[0x22769A794](&unk_226565B94, &type metadata for CapturedRoom.Object.Category.TableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845F00);
  }
  return result;
}

unint64_t sub_2264C1B50()
{
  unint64_t result;

  result = qword_255845F08;
  if (!qword_255845F08)
  {
    result = MEMORY[0x22769A794](&unk_226565B44, &type metadata for CapturedRoom.Object.Category.DishwasherCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845F08);
  }
  return result;
}

unint64_t sub_2264C1B94()
{
  unint64_t result;

  result = qword_255845F10;
  if (!qword_255845F10)
  {
    result = MEMORY[0x22769A794](&unk_226565AF4, &type metadata for CapturedRoom.Object.Category.OvenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845F10);
  }
  return result;
}

unint64_t sub_2264C1BD8()
{
  unint64_t result;

  result = qword_255845F18;
  if (!qword_255845F18)
  {
    result = MEMORY[0x22769A794](&unk_226565AA4, &type metadata for CapturedRoom.Object.Category.BathtubCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845F18);
  }
  return result;
}

unint64_t sub_2264C1C1C()
{
  unint64_t result;

  result = qword_255845F20;
  if (!qword_255845F20)
  {
    result = MEMORY[0x22769A794](&unk_226565A54, &type metadata for CapturedRoom.Object.Category.ToiletCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845F20);
  }
  return result;
}

unint64_t sub_2264C1C60()
{
  unint64_t result;

  result = qword_255845F28;
  if (!qword_255845F28)
  {
    result = MEMORY[0x22769A794](&unk_226565A04, &type metadata for CapturedRoom.Object.Category.WasherDryerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845F28);
  }
  return result;
}

unint64_t sub_2264C1CA4()
{
  unint64_t result;

  result = qword_255845F30;
  if (!qword_255845F30)
  {
    result = MEMORY[0x22769A794](&unk_2265659B4, &type metadata for CapturedRoom.Object.Category.SinkCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845F30);
  }
  return result;
}

unint64_t sub_2264C1CE8()
{
  unint64_t result;

  result = qword_255845F38;
  if (!qword_255845F38)
  {
    result = MEMORY[0x22769A794](&unk_226565964, &type metadata for CapturedRoom.Object.Category.BedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845F38);
  }
  return result;
}

unint64_t sub_2264C1D2C()
{
  unint64_t result;

  result = qword_255845F40;
  if (!qword_255845F40)
  {
    result = MEMORY[0x22769A794](&unk_226565914, &type metadata for CapturedRoom.Object.Category.StoveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845F40);
  }
  return result;
}

unint64_t sub_2264C1D70()
{
  unint64_t result;

  result = qword_255845F48;
  if (!qword_255845F48)
  {
    result = MEMORY[0x22769A794](&unk_2265658C4, &type metadata for CapturedRoom.Object.Category.RefrigeratorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845F48);
  }
  return result;
}

unint64_t sub_2264C1DB4()
{
  unint64_t result;

  result = qword_255845F50;
  if (!qword_255845F50)
  {
    result = MEMORY[0x22769A794](&unk_226565874, &type metadata for CapturedRoom.Object.Category.StorageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255845F50);
  }
  return result;
}

uint64_t sub_2264C1DF8(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_226437F28(&qword_255845FE8, type metadata accessor for CapturedStructure, (uint64_t)&protocol conformance descriptor for CapturedStructure);
  result = sub_226437F28(&qword_255845FF0, type metadata accessor for CapturedStructure, (uint64_t)&protocol conformance descriptor for CapturedStructure);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_2264C1E58()
{
  unint64_t result;

  result = qword_255845FF8;
  if (!qword_255845FF8)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for CapturedRoom.Error, &type metadata for CapturedRoom.Error);
    atomic_store(result, (unint64_t *)&qword_255845FF8);
  }
  return result;
}

unint64_t sub_2264C1EA0()
{
  unint64_t result;

  result = qword_255846000;
  if (!qword_255846000)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for CapturedRoom.Error, &type metadata for CapturedRoom.Error);
    atomic_store(result, (unint64_t *)&qword_255846000);
  }
  return result;
}

unint64_t sub_2264C1EE8()
{
  unint64_t result;

  result = qword_255846008;
  if (!qword_255846008)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for CapturedRoom.Confidence, &type metadata for CapturedRoom.Confidence);
    atomic_store(result, (unint64_t *)&qword_255846008);
  }
  return result;
}

unint64_t sub_2264C1F30()
{
  unint64_t result;

  result = qword_255846010;
  if (!qword_255846010)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for CapturedRoom.Section.Label, &type metadata for CapturedRoom.Section.Label);
    atomic_store(result, (unint64_t *)&qword_255846010);
  }
  return result;
}

unint64_t sub_2264C1F78()
{
  unint64_t result;

  result = qword_255846018;
  if (!qword_255846018)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for CapturedRoom.Surface.Category, &type metadata for CapturedRoom.Surface.Category);
    atomic_store(result, (unint64_t *)&qword_255846018);
  }
  return result;
}

unint64_t sub_2264C1FC0()
{
  unint64_t result;

  result = qword_255846020;
  if (!qword_255846020)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for CapturedRoom.Surface.Edge, &type metadata for CapturedRoom.Surface.Edge);
    atomic_store(result, (unint64_t *)&qword_255846020);
  }
  return result;
}

uint64_t sub_2264C2004()
{
  return sub_2264CB5F8(&qword_255846028, &qword_255846030, MEMORY[0x24BEE12E0]);
}

unint64_t sub_2264C2034()
{
  unint64_t result;

  result = qword_255846038;
  if (!qword_255846038)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for CapturedRoom.Object.Category, &type metadata for CapturedRoom.Object.Category);
    atomic_store(result, (unint64_t *)&qword_255846038);
  }
  return result;
}

uint64_t sub_2264C2078()
{
  return sub_2264CB5F8(&qword_255846040, &qword_255846048, MEMORY[0x24BEE12E0]);
}

unint64_t sub_2264C20A8()
{
  unint64_t result;

  result = qword_255846050;
  if (!qword_255846050)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for CapturedRoom.USDExportOptions, &type metadata for CapturedRoom.USDExportOptions);
    atomic_store(result, (unint64_t *)&qword_255846050);
  }
  return result;
}

unint64_t sub_2264C20F0()
{
  unint64_t result;

  result = qword_255846058;
  if (!qword_255846058)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for CapturedRoom.USDExportOptions, &type metadata for CapturedRoom.USDExportOptions);
    atomic_store(result, (unint64_t *)&qword_255846058);
  }
  return result;
}

unint64_t sub_2264C2138()
{
  unint64_t result;

  result = qword_255846060;
  if (!qword_255846060)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for CapturedRoom.USDExportOptions, &type metadata for CapturedRoom.USDExportOptions);
    atomic_store(result, (unint64_t *)&qword_255846060);
  }
  return result;
}

unint64_t sub_2264C2180()
{
  unint64_t result;

  result = qword_255846068;
  if (!qword_255846068)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for CapturedRoom.USDExportOptions, &type metadata for CapturedRoom.USDExportOptions);
    atomic_store(result, (unint64_t *)&qword_255846068);
  }
  return result;
}

uint64_t sub_2264C21C4(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_226437F28(&qword_255845B20, type metadata accessor for CapturedRoom, (uint64_t)&protocol conformance descriptor for CapturedRoom);
  result = sub_226437F28(&qword_255845B80, type metadata accessor for CapturedRoom, (uint64_t)&protocol conformance descriptor for CapturedRoom);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_2264C2220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 96))();
}

uint64_t *initializeBufferWithCopyOfBuffer for CapturedStructure(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v14)(char *, char *, uint64_t);
  char *v15;
  char *v16;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    v9 = a2[4];
    a1[3] = a2[3];
    a1[4] = v9;
    v10 = a2[6];
    a1[5] = a2[5];
    a1[6] = v10;
    v11 = *(int *)(a3 + 48);
    v15 = (char *)a2 + v11;
    v16 = (char *)a1 + v11;
    a1[7] = a2[7];
    v12 = sub_22655C140();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v16, v15, v12);
    *(uint64_t *)((char *)v7 + *(int *)(a3 + 52)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 52));
  }
  return v7;
}

uint64_t destroy for CapturedStructure(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 48);
  v5 = sub_22655C140();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for CapturedStructure(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v12)(char *, char *, uint64_t);
  char *v13;
  char *v14;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v8 = a2[7];
  v9 = *(int *)(a3 + 48);
  v14 = (char *)a1 + v9;
  v13 = (char *)a2 + v9;
  a1[6] = a2[6];
  a1[7] = v8;
  v10 = sub_22655C140();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v14, v13, v10);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 52)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 52));
  return a1;
}

_QWORD *assignWithCopy for CapturedStructure(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 48);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_22655C140();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 52)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 52));
  return a1;
}

_OWORD *initializeWithTake for CapturedStructure(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 48);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_22655C140();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 52)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 52));
  return a1;
}

_QWORD *assignWithTake for CapturedStructure(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 48);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_22655C140();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 52)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 52));
  return a1;
}

uint64_t getEnumTagSinglePayload for CapturedStructure()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2264C2788(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_22655C140();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 48)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for CapturedStructure()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2264C2810(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_22655C140();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 48)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_2264C2884()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22655C140();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for CapturedRoom(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  char *v20;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    v9 = a2[4];
    a1[3] = a2[3];
    a1[4] = v9;
    v10 = a3[10];
    v19 = (char *)a2 + v10;
    v20 = (char *)a1 + v10;
    a1[5] = a2[5];
    v11 = sub_22655C140();
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18(v20, v19, v11);
    v12 = a3[12];
    *(uint64_t *)((char *)v7 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(uint64_t *)((char *)v7 + v12) = *(uint64_t *)((char *)a2 + v12);
    v13 = a3[14];
    *(uint64_t *)((char *)v7 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    *(uint64_t *)((char *)v7 + v13) = *(uint64_t *)((char *)a2 + v13);
    v14 = a3[15];
    v15 = *(void **)((char *)a2 + v14);
    *(uint64_t *)((char *)v7 + v14) = (uint64_t)v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = v15;
  }
  return v7;
}

void destroy for CapturedRoom(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 40);
  v5 = sub_22655C140();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for CapturedRoom(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void (*v17)(char *, char *, uint64_t);
  char *v18;
  char *v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  v9 = a3[10];
  v18 = (char *)a2 + v9;
  v19 = (char *)a1 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  v10 = sub_22655C140();
  v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17(v19, v18, v10);
  v11 = a3[12];
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  v12 = a3[14];
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  v13 = a3[15];
  v14 = *(void **)((char *)a2 + v13);
  *(_QWORD *)((char *)a1 + v13) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = v14;
  return a1;
}

_QWORD *assignWithCopy for CapturedRoom(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[10];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_22655C140();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[15];
  v11 = *(void **)((char *)a2 + v10);
  v12 = *(void **)((char *)a1 + v10);
  *(_QWORD *)((char *)a1 + v10) = v11;
  v13 = v11;

  return a1;
}

_OWORD *initializeWithTake for CapturedRoom(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = a3[10];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_22655C140();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[12];
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  v12 = a3[14];
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  return a1;
}

_QWORD *assignWithTake for CapturedRoom(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  v6 = a3[10];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_22655C140();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  swift_bridgeObjectRelease();
  v10 = a3[13];
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);
  *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  swift_bridgeObjectRelease();
  v11 = a3[15];
  v12 = *(void **)((char *)a1 + v11);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);

  return a1;
}

uint64_t getEnumTagSinglePayload for CapturedRoom()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2264C2F2C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_22655C140();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 40)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for CapturedRoom()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2264C2FB4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_22655C140();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 40)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_2264C3028()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22655C140();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CapturedRoom.Error()
{
  return &type metadata for CapturedRoom.Error;
}

ValueMetadata *type metadata accessor for CapturedRoom.Confidence()
{
  return &type metadata for CapturedRoom.Confidence;
}

uint64_t destroy for CapturedRoom.Section()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CapturedRoom.Section(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v3 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v3;
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CapturedRoom.Section(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v4 = *(_OWORD *)(a2 + 64);
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 64) = v4;
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(_OWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = v7;
  return a1;
}

__n128 __swift_memcpy145_16(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for CapturedRoom.Section(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v4;
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for CapturedRoom.Section(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 145))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 120);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CapturedRoom.Section(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 144) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 145) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 145) = 0;
    if (a2)
      *(_QWORD *)(result + 120) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CapturedRoom.Section()
{
  return &type metadata for CapturedRoom.Section;
}

uint64_t storeEnumTagSinglePayload for CapturedRoom.Section.Label(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2264C33D0 + 4 * byte_22656376D[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2264C3404 + 4 * byte_226563768[v4]))();
}

uint64_t sub_2264C3404(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264C340C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2264C3414);
  return result;
}

uint64_t sub_2264C3420(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2264C3428);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2264C342C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264C3434(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CapturedRoom.Section.Label()
{
  return &type metadata for CapturedRoom.Section.Label;
}

_QWORD *initializeBufferWithCopyOfBuffer for CapturedRoom.Surface(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  _DWORD *v17;
  _DWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v34;
  char *v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    *(_QWORD *)(a1 + 8) = a2[1];
    v7 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v7;
    v8 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 64) = v8;
    v9 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 96) = v9;
    v10 = a3[11];
    v11 = a1 + v10;
    v12 = (uint64_t)a2 + v10;
    *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
    v13 = sub_22655C140();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
    swift_bridgeObjectRetain();
    v15(v11, v12, v13);
    v16 = a3[13];
    *(_QWORD *)((char *)v4 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    v17 = (_DWORD *)((char *)v4 + v16);
    v18 = (_DWORD *)((char *)a2 + v16);
    v19 = type metadata accessor for CapturedRoom.Surface.Curve(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848090);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v17 = *(_QWORD *)v18;
      v17[2] = v18[2];
      v23 = *(int *)(v19 + 24);
      v34 = (char *)v18 + v23;
      v35 = (char *)v17 + v23;
      v36 = v15;
      v37 = v14;
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255840958);
      v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
      v25(v35, v34, v24);
      v26 = v24;
      v15 = v36;
      v25((char *)v17 + *(int *)(v19 + 28), (char *)v18 + *(int *)(v19 + 28), v26);
      v14 = v37;
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v27 = a3[14];
    v28 = (char *)v4 + v27;
    v29 = (char *)a2 + v27;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))((uint64_t)a2 + v27, 1, v13))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v15((uint64_t)v28, (uint64_t)v29, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v28, 0, 1, v13);
    }
    v31 = a3[16];
    *(_QWORD *)((char *)v4 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
    *(_QWORD *)((char *)v4 + v31) = *(uint64_t *)((char *)a2 + v31);
    v32 = a3[18];
    *(_QWORD *)((char *)v4 + a3[17]) = *(uint64_t *)((char *)a2 + a3[17]);
    *(_DWORD *)((char *)v4 + v32) = *(_DWORD *)((char *)a2 + v32);
    *(_QWORD *)((char *)v4 + a3[19]) = *(uint64_t *)((char *)a2 + a3[19]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for CapturedRoom.Surface(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[11];
  v5 = sub_22655C140();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  v8 = a1 + a2[13];
  v9 = type metadata accessor for CapturedRoom.Surface.Curve(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = v8 + *(int *)(v9 + 24);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255840958);
    v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
    v12(v10, v11);
    v12(v8 + *(int *)(v9 + 28), v11);
  }
  v13 = a1 + a2[14];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v13, 1, v5))
    v7(v13, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CapturedRoom.Surface(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  _DWORD *v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v32;
  char *v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v8;
  v9 = a3[11];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  v12 = sub_22655C140();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  swift_bridgeObjectRetain();
  v14(v10, v11, v12);
  v15 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  v16 = (_DWORD *)(a1 + v15);
  v17 = (_DWORD *)(a2 + v15);
  v18 = type metadata accessor for CapturedRoom.Surface.Curve(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848090);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[2] = v17[2];
    v21 = *(int *)(v18 + 24);
    v32 = (char *)v17 + v21;
    v33 = (char *)v16 + v21;
    v34 = v14;
    v35 = v13;
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255840958);
    v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
    v23(v33, v32, v22);
    v24 = v22;
    v14 = v34;
    v23((char *)v16 + *(int *)(v18 + 28), (char *)v17 + *(int *)(v18 + 28), v24);
    v13 = v35;
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v25 = a3[14];
  v26 = (void *)(a1 + v25);
  v27 = (const void *)(a2 + v25);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a2 + v25, 1, v12))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v14((uint64_t)v26, (uint64_t)v27, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v26, 0, 1, v12);
  }
  v29 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_QWORD *)(a1 + v29) = *(_QWORD *)(a2 + v29);
  v30 = a3[18];
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  *(_DWORD *)(a1 + v30) = *(_DWORD *)(a2 + v30);
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CapturedRoom.Surface(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  char *v35;
  char *v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  v6 = a3[11];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_22655C140();
  v38 = *(_QWORD *)(v9 - 8);
  v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 24);
  v37(v7, v8, v9);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  v10 = a3[13];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for CapturedRoom.Surface.Curve(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(_QWORD *)v11 = *(_QWORD *)v12;
      *((_DWORD *)v11 + 2) = *((_DWORD *)v12 + 2);
      v18 = *(int *)(v13 + 24);
      v34 = &v12[v18];
      v35 = &v11[v18];
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255840958);
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      v20(v35, v34, v19);
      v20(&v11[*(int *)(v13 + 28)], &v12[*(int *)(v13 + 28)], v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_22643D748((uint64_t)v11, type metadata accessor for CapturedRoom.Surface.Curve);
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848090);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_DWORD *)v11 + 2) = *((_DWORD *)v12 + 2);
  v30 = *(int *)(v13 + 24);
  v31 = &v11[v30];
  v36 = &v12[v30];
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255840958);
  v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 24);
  v33(v31, v36, v32);
  v33(&v11[*(int *)(v13 + 28)], &v12[*(int *)(v13 + 28)], v32);
LABEL_7:
  v22 = a3[14];
  v23 = (void *)(a1 + v22);
  v24 = (const void *)(a2 + v22);
  v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
  v26 = v25(a1 + v22, 1, v9);
  v27 = v25((uint64_t)v24, 1, v9);
  if (!v26)
  {
    if (!v27)
    {
      v37((uint64_t)v23, (uint64_t)v24, v9);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v38 + 8))(v23, v9);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v38 + 16))(v23, v24, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v23, 0, 1, v9);
LABEL_13:
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[18]) = *(_DWORD *)(a2 + a3[18]);
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for CapturedRoom.Surface(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  _DWORD *v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v32;
  char *v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v8;
  v9 = a3[11];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  v12 = sub_22655C140();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32);
  v14(v10, v11, v12);
  v15 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  v16 = (_DWORD *)(a1 + v15);
  v17 = (_DWORD *)(a2 + v15);
  v18 = type metadata accessor for CapturedRoom.Surface.Curve(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848090);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[2] = v17[2];
    v21 = *(int *)(v18 + 24);
    v32 = (char *)v17 + v21;
    v33 = (char *)v16 + v21;
    v34 = v14;
    v35 = v13;
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255840958);
    v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32);
    v23(v33, v32, v22);
    v24 = v22;
    v14 = v34;
    v23((char *)v16 + *(int *)(v18 + 28), (char *)v17 + *(int *)(v18 + 28), v24);
    v13 = v35;
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v25 = a3[14];
  v26 = (void *)(a1 + v25);
  v27 = (const void *)(a2 + v25);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a2 + v25, 1, v12))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v14((uint64_t)v26, (uint64_t)v27, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v26, 0, 1, v12);
  }
  v29 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_QWORD *)(a1 + v29) = *(_QWORD *)(a2 + v29);
  v30 = a3[18];
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  *(_DWORD *)(a1 + v30) = *(_DWORD *)(a2 + v30);
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  return a1;
}

uint64_t assignWithTake for CapturedRoom.Surface(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  char *v39;
  char *v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v8;
  v9 = a3[11];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  v12 = sub_22655C140();
  v42 = *(_QWORD *)(v12 - 8);
  v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 40);
  v41(v10, v11, v12);
  v13 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = type metadata accessor for CapturedRoom.Surface.Curve(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      *(_QWORD *)v14 = *(_QWORD *)v15;
      *((_DWORD *)v14 + 2) = *((_DWORD *)v15 + 2);
      v21 = *(int *)(v16 + 24);
      v38 = &v15[v21];
      v39 = &v14[v21];
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255840958);
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32);
      v23(v39, v38, v22);
      v23(&v14[*(int *)(v16 + 28)], &v15[*(int *)(v16 + 28)], v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    sub_22643D748((uint64_t)v14, type metadata accessor for CapturedRoom.Surface.Curve);
LABEL_6:
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848090);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_DWORD *)v14 + 2) = *((_DWORD *)v15 + 2);
  v34 = *(int *)(v16 + 24);
  v35 = &v14[v34];
  v40 = &v15[v34];
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_255840958);
  v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 40);
  v37(v35, v40, v36);
  v37(&v14[*(int *)(v16 + 28)], &v15[*(int *)(v16 + 28)], v36);
LABEL_7:
  v25 = a3[14];
  v26 = (void *)(a1 + v25);
  v27 = (const void *)(a2 + v25);
  v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
  v29 = v28(a1 + v25, 1, v12);
  v30 = v28((uint64_t)v27, 1, v12);
  if (!v29)
  {
    if (!v30)
    {
      v41((uint64_t)v26, (uint64_t)v27, v12);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v42 + 8))(v26, v12);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v42 + 32))(v26, v27, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v26, 0, 1, v12);
LABEL_13:
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  swift_bridgeObjectRelease();
  v32 = a3[19];
  *(_DWORD *)(a1 + a3[18]) = *(_DWORD *)(a2 + a3[18]);
  *(_QWORD *)(a1 + v32) = *(_QWORD *)(a2 + v32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CapturedRoom.Surface()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2264C4344(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_22655C140();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[11];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848090);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[13];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[14];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for CapturedRoom.Surface()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2264C441C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_22655C140();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[11];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848090);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[13];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[14];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_2264C44E4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_22655C140();
  if (v0 <= 0x3F)
  {
    sub_226443548(319, &qword_255840B50, (void (*)(uint64_t))type metadata accessor for CapturedRoom.Surface.Curve);
    if (v1 <= 0x3F)
    {
      sub_226443548(319, (unint64_t *)&qword_255847590, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for CapturedRoom.Surface.Category(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t result;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
  {
    v6 = *a1;
    if (v6 >= 2)
    {
      v7 = (v6 + 2147483646) & 0x7FFFFFFF;
      result = v7 - 3;
      if (v7 > 3)
        return result;
    }
    return 0;
  }
  v2 = a2 + 5;
  if (a2 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if (v2 >> 8 < 0xFF)
    v3 = 1;
  if (v2 >= 0x100)
    v4 = v3;
  else
    v4 = 0;
  return ((uint64_t (*)(void))((char *)&loc_2264C4658 + 4 * byte_226563772[v4]))();
}

uint64_t storeEnumTagSinglePayload for CapturedRoom.Surface.Category(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 5;
  if (a3 + 5 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFB)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2264C4704 + 4 * byte_22656377C[v5]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2264C4738 + 4 * byte_226563777[v5]))();
}

uint64_t sub_2264C4738(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264C4740(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2264C4748);
  return result;
}

uint64_t sub_2264C4754(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2264C475CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2264C4760(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264C4768(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264C4774(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

_BYTE *sub_2264C4790(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for CapturedRoom.Surface.Category()
{
  return &type metadata for CapturedRoom.Surface.Category;
}

_QWORD *initializeBufferWithCopyOfBuffer for CapturedRoom.Surface.Curve(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    v7 = *(int *)(a3 + 24);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255840958);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v11((uint64_t)v4 + *(int *)(a3 + 28), (uint64_t)a2 + *(int *)(a3 + 28), v10);
  }
  return v4;
}

uint64_t destroy for CapturedRoom.Surface.Curve(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t);

  v4 = a1 + *(int *)(a2 + 24);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255840958);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + *(int *)(a2 + 28), v5);
}

uint64_t initializeWithCopy for CapturedRoom.Surface.Curve(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255840958);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v10(a1 + *(int *)(a3 + 28), a2 + *(int *)(a3 + 28), v9);
  return a1;
}

uint64_t assignWithCopy for CapturedRoom.Surface.Curve(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255840958);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(a1 + *(int *)(a3 + 28), a2 + *(int *)(a3 + 28), v9);
  return a1;
}

uint64_t initializeWithTake for CapturedRoom.Surface.Curve(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255840958);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(a1 + *(int *)(a3 + 28), a2 + *(int *)(a3 + 28), v9);
  return a1;
}

uint64_t assignWithTake for CapturedRoom.Surface.Curve(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255840958);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(a1 + *(int *)(a3 + 28), a2 + *(int *)(a3 + 28), v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for CapturedRoom.Surface.Curve()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2264C4B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255840958);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v6);
}

uint64_t storeEnumTagSinglePayload for CapturedRoom.Surface.Curve()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2264C4BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255840958);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1 + *(int *)(a4 + 24), a2, a2, v7);
}

void sub_2264C4C0C()
{
  unint64_t v0;

  sub_2264C4C90();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_2264C4C90()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255846308[0])
  {
    sub_22643F548(255, (unint64_t *)&qword_255848160);
    v0 = sub_22655BDE0();
    if (!v1)
      atomic_store(v0, qword_255846308);
  }
}

ValueMetadata *type metadata accessor for CapturedRoom.Surface.Edge()
{
  return &type metadata for CapturedRoom.Surface.Edge;
}

_QWORD *initializeBufferWithCopyOfBuffer for CapturedRoom.Object(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    v7 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v7;
    v8 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 64) = v8;
    v9 = a3[8];
    v10 = a1 + v9;
    v11 = (uint64_t)a2 + v9;
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    v12 = sub_22655C140();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
    v14(v10, v11, v12);
    v15 = a3[10];
    *(_QWORD *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(_QWORD *)((char *)v4 + v15) = *(uint64_t *)((char *)a2 + v15);
    v16 = a3[11];
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    if (v19(v18, 1, v12))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v14((uint64_t)v17, (uint64_t)v18, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
    }
    v22 = a3[13];
    *(_DWORD *)((char *)v4 + a3[12]) = *(_DWORD *)((char *)a2 + a3[12]);
    *(_OWORD *)((char *)v4 + v22) = *(_OWORD *)((char *)a2 + v22);
  }
  return v4;
}

uint64_t destroy for CapturedRoom.Object(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void (*v9)(uint64_t, uint64_t);

  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_22655C140();
  v6 = *(_QWORD *)(v5 - 8);
  v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v9(v4, v5);
  swift_bridgeObjectRelease();
  v7 = a1 + *(int *)(a2 + 44);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v7, v5);
  return result;
}

uint64_t initializeWithCopy for CapturedRoom.Object(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void *, const void *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  unsigned int (*v18)(const void *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;

  *(_WORD *)a1 = *(_WORD *)a2;
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  v8 = a3[8];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  v11 = sub_22655C140();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 16);
  v13(v9, v10, v11);
  v14 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  v15 = a3[11];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  if (v18(v17, 1, v11))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v13(v16, v17, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  v20 = a3[13];
  *(_DWORD *)(a1 + a3[12]) = *(_DWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v20) = *(_OWORD *)(a2 + v20);
  return a1;
}

uint64_t assignWithCopy for CapturedRoom.Object(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void *, const void *, uint64_t);
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t (*v15)(const void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  v6 = a3[8];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_22655C140();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  v12 = a3[11];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  v16 = v15((const void *)(a1 + v12), 1, v9);
  v17 = v15(v14, 1, v9);
  if (!v16)
  {
    if (!v17)
    {
      v11(v13, v14, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v13, v14, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
LABEL_7:
  *(_DWORD *)(a1 + a3[12]) = *(_DWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t initializeWithTake for CapturedRoom.Object(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void *, const void *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;

  *(_WORD *)a1 = *(_WORD *)a2;
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  v8 = a3[8];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  v11 = sub_22655C140();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 32);
  v13(v9, v10, v11);
  v14 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  v15 = a3[11];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a2 + v15, 1, v11))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v13(v16, v17, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  v19 = a3[13];
  *(_DWORD *)(a1 + a3[12]) = *(_DWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v19) = *(_OWORD *)(a2 + v19);
  return a1;
}

uint64_t assignWithTake for CapturedRoom.Object(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void *, const void *, uint64_t);
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t (*v17)(const void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;

  *(_WORD *)a1 = *(_WORD *)a2;
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  v8 = a3[8];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  v11 = sub_22655C140();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 40);
  v13(v9, v10, v11);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  v14 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  v18 = v17((const void *)(a1 + v14), 1, v11);
  v19 = v17(v16, 1, v11);
  if (!v18)
  {
    if (!v19)
    {
      v13(v15, v16, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v15, v11);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v15, v16, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
LABEL_7:
  v21 = a3[13];
  *(_DWORD *)(a1 + a3[12]) = *(_DWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for CapturedRoom.Object()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2264C54A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v6 = sub_22655C140();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[8];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
    v7 = *(_QWORD *)(v8 - 8);
    v9 = a3[11];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = *(_QWORD *)(a1 + a3[9]);
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for CapturedRoom.Object()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2264C5558(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = sub_22655C140();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[8];
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[9]) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
    v9 = *(_QWORD *)(v10 - 8);
    v11 = a4[11];
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_2264C55FC()
{
  unint64_t v0;
  unint64_t v1;

  sub_22655C140();
  if (v0 <= 0x3F)
  {
    sub_226443548(319, (unint64_t *)&qword_255847590, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for CapturedRoom.Object.Category()
{
  return &type metadata for CapturedRoom.Object.Category;
}

ValueMetadata *type metadata accessor for CapturedRoom.USDExportOptions()
{
  return &type metadata for CapturedRoom.USDExportOptions;
}

ValueMetadata *type metadata accessor for CapturedRoom.Object.CornerCompletion()
{
  return &type metadata for CapturedRoom.Object.CornerCompletion;
}

uint64_t _s8RoomPlan12CapturedRoomV6ObjectV8CategoryOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF1)
    goto LABEL_17;
  if (a2 + 15 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 15) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 15;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 15;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 15;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v8 = v6 - 16;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s8RoomPlan12CapturedRoomV6ObjectV8CategoryOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_2264C5800 + 4 * byte_226563786[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_2264C5834 + 4 * byte_226563781[v4]))();
}

uint64_t sub_2264C5834(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264C583C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2264C5844);
  return result;
}

uint64_t sub_2264C5850(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2264C5858);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_2264C585C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264C5864(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CapturedRoom.Object.Category.CodingKeys()
{
  return &type metadata for CapturedRoom.Object.Category.CodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Object.Category.StorageCodingKeys()
{
  return &type metadata for CapturedRoom.Object.Category.StorageCodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Object.Category.RefrigeratorCodingKeys()
{
  return &type metadata for CapturedRoom.Object.Category.RefrigeratorCodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Object.Category.StoveCodingKeys()
{
  return &type metadata for CapturedRoom.Object.Category.StoveCodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Object.Category.BedCodingKeys()
{
  return &type metadata for CapturedRoom.Object.Category.BedCodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Object.Category.SinkCodingKeys()
{
  return &type metadata for CapturedRoom.Object.Category.SinkCodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Object.Category.WasherDryerCodingKeys()
{
  return &type metadata for CapturedRoom.Object.Category.WasherDryerCodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Object.Category.ToiletCodingKeys()
{
  return &type metadata for CapturedRoom.Object.Category.ToiletCodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Object.Category.BathtubCodingKeys()
{
  return &type metadata for CapturedRoom.Object.Category.BathtubCodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Object.Category.OvenCodingKeys()
{
  return &type metadata for CapturedRoom.Object.Category.OvenCodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Object.Category.DishwasherCodingKeys()
{
  return &type metadata for CapturedRoom.Object.Category.DishwasherCodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Object.Category.TableCodingKeys()
{
  return &type metadata for CapturedRoom.Object.Category.TableCodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Object.Category.SofaCodingKeys()
{
  return &type metadata for CapturedRoom.Object.Category.SofaCodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Object.Category.ChairCodingKeys()
{
  return &type metadata for CapturedRoom.Object.Category.ChairCodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Object.Category.FireplaceCodingKeys()
{
  return &type metadata for CapturedRoom.Object.Category.FireplaceCodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Object.Category.TelevisionCodingKeys()
{
  return &type metadata for CapturedRoom.Object.Category.TelevisionCodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Object.Category.StairsCodingKeys()
{
  return &type metadata for CapturedRoom.Object.Category.StairsCodingKeys;
}

uint64_t getEnumTagSinglePayload for CapturedRoom.Object.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CapturedRoom.Object.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_2264C5A5C + 4 * byte_226563790[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_2264C5A90 + 4 * byte_22656378B[v4]))();
}

uint64_t sub_2264C5A90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264C5A98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2264C5AA0);
  return result;
}

uint64_t sub_2264C5AAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2264C5AB4);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_2264C5AB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264C5AC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CapturedRoom.Object.CodingKeys()
{
  return &type metadata for CapturedRoom.Object.CodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Surface.Edge.CodingKeys()
{
  return &type metadata for CapturedRoom.Surface.Edge.CodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Surface.Edge.TopCodingKeys()
{
  return &type metadata for CapturedRoom.Surface.Edge.TopCodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Surface.Edge.RightCodingKeys()
{
  return &type metadata for CapturedRoom.Surface.Edge.RightCodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Surface.Edge.BottomCodingKeys()
{
  return &type metadata for CapturedRoom.Surface.Edge.BottomCodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Surface.Edge.LeftCodingKeys()
{
  return &type metadata for CapturedRoom.Surface.Edge.LeftCodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Surface.Curve.CodingKeys()
{
  return &type metadata for CapturedRoom.Surface.Curve.CodingKeys;
}

uint64_t _s8RoomPlan12CapturedRoomV5ErrorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2264C5B88 + 4 * byte_22656379A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2264C5BBC + 4 * byte_226563795[v4]))();
}

uint64_t sub_2264C5BBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264C5BC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2264C5BCCLL);
  return result;
}

uint64_t sub_2264C5BD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2264C5BE0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2264C5BE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264C5BEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CapturedRoom.Surface.Category.CodingKeys()
{
  return &type metadata for CapturedRoom.Surface.Category.CodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Surface.Category.WallCodingKeys()
{
  return &type metadata for CapturedRoom.Surface.Category.WallCodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Surface.Category.OpeningCodingKeys()
{
  return &type metadata for CapturedRoom.Surface.Category.OpeningCodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Surface.Category.WindowCodingKeys()
{
  return &type metadata for CapturedRoom.Surface.Category.WindowCodingKeys;
}

uint64_t storeEnumTagSinglePayload for CapturedRoom.Surface.Category.DoorCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2264C5C78 + 4 * byte_22656379F[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2264C5C98 + 4 * byte_2265637A4[v4]))();
}

_BYTE *sub_2264C5C78(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2264C5C98(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2264C5CA0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2264C5CA8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2264C5CB0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2264C5CB8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CapturedRoom.Surface.Category.DoorCodingKeys()
{
  return &type metadata for CapturedRoom.Surface.Category.DoorCodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Surface.Category.FloorCodingKeys()
{
  return &type metadata for CapturedRoom.Surface.Category.FloorCodingKeys;
}

uint64_t getEnumTagSinglePayload for MeshResourceType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CapturedRoom.Surface.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_2264C5DC0 + 4 * byte_2265637AE[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_2264C5DF4 + 4 * byte_2265637A9[v4]))();
}

uint64_t sub_2264C5DF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264C5DFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2264C5E04);
  return result;
}

uint64_t sub_2264C5E10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2264C5E18);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_2264C5E1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264C5E24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CapturedRoom.Surface.CodingKeys()
{
  return &type metadata for CapturedRoom.Surface.CodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Section.CodingKeys()
{
  return &type metadata for CapturedRoom.Section.CodingKeys;
}

uint64_t _s8RoomPlan12CapturedRoomV10ConfidenceOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2264C5E9C + 4 * byte_2265637B8[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2264C5ED0 + 4 * byte_2265637B3[v4]))();
}

uint64_t sub_2264C5ED0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264C5ED8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2264C5EE0);
  return result;
}

uint64_t sub_2264C5EEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2264C5EF4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2264C5EF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264C5F00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CapturedRoom.Confidence.CodingKeys()
{
  return &type metadata for CapturedRoom.Confidence.CodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Confidence.HighCodingKeys()
{
  return &type metadata for CapturedRoom.Confidence.HighCodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Confidence.MediumCodingKeys()
{
  return &type metadata for CapturedRoom.Confidence.MediumCodingKeys;
}

ValueMetadata *type metadata accessor for CapturedRoom.Confidence.LowCodingKeys()
{
  return &type metadata for CapturedRoom.Confidence.LowCodingKeys;
}

uint64_t getEnumTagSinglePayload for CapturedVolumeCodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CapturedVolumeCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_2264C6028 + 4 * byte_2265637C2[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_2264C605C + 4 * byte_2265637BD[v4]))();
}

uint64_t sub_2264C605C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264C6064(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2264C606CLL);
  return result;
}

uint64_t sub_2264C6078(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2264C6080);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_2264C6084(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264C608C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CapturedVolumeCodingKeys()
{
  return &type metadata for CapturedVolumeCodingKeys;
}

unint64_t sub_2264C60AC()
{
  unint64_t result;

  result = qword_2558463F0;
  if (!qword_2558463F0)
  {
    result = MEMORY[0x22769A794](&unk_2265646B4, &type metadata for CapturedVolumeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558463F0);
  }
  return result;
}

unint64_t sub_2264C60F4()
{
  unint64_t result;

  result = qword_2558463F8;
  if (!qword_2558463F8)
  {
    result = MEMORY[0x22769A794](&unk_22656485C, &type metadata for CapturedRoom.Confidence.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558463F8);
  }
  return result;
}

unint64_t sub_2264C613C()
{
  unint64_t result;

  result = qword_255846400;
  if (!qword_255846400)
  {
    result = MEMORY[0x22769A794](&unk_22656494C, &type metadata for CapturedRoom.Section.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846400);
  }
  return result;
}

unint64_t sub_2264C6184()
{
  unint64_t result;

  result = qword_255846408;
  if (!qword_255846408)
  {
    result = MEMORY[0x22769A794](&unk_226564A3C, &type metadata for CapturedRoom.Surface.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846408);
  }
  return result;
}

unint64_t sub_2264C61CC()
{
  unint64_t result;

  result = qword_255846410;
  if (!qword_255846410)
  {
    result = MEMORY[0x22769A794](&unk_226564B44, &type metadata for CapturedRoom.Surface.Category.DoorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846410);
  }
  return result;
}

unint64_t sub_2264C6214()
{
  unint64_t result;

  result = qword_255846418;
  if (!qword_255846418)
  {
    result = MEMORY[0x22769A794](&unk_226564CEC, &type metadata for CapturedRoom.Surface.Category.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846418);
  }
  return result;
}

unint64_t sub_2264C625C()
{
  unint64_t result;

  result = qword_255846420;
  if (!qword_255846420)
  {
    result = MEMORY[0x22769A794](&unk_226564DA4, &type metadata for CapturedRoom.Surface.Curve.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846420);
  }
  return result;
}

unint64_t sub_2264C62A4()
{
  unint64_t result;

  result = qword_255846428;
  if (!qword_255846428)
  {
    result = MEMORY[0x22769A794](&unk_226564F9C, &type metadata for CapturedRoom.Surface.Edge.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846428);
  }
  return result;
}

unint64_t sub_2264C62EC()
{
  unint64_t result;

  result = qword_255846430;
  if (!qword_255846430)
  {
    result = MEMORY[0x22769A794](&unk_22656508C, &type metadata for CapturedRoom.Object.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846430);
  }
  return result;
}

unint64_t sub_2264C6334()
{
  unint64_t result;

  result = qword_255846438;
  if (!qword_255846438)
  {
    result = MEMORY[0x22769A794](&unk_226565644, &type metadata for CapturedRoom.Object.Category.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846438);
  }
  return result;
}

unint64_t sub_2264C637C()
{
  unint64_t result;

  result = qword_255846440;
  if (!qword_255846440)
  {
    result = MEMORY[0x22769A794](&unk_22656569C, &type metadata for CapturedRoom.Object.CornerCompletion);
    atomic_store(result, (unint64_t *)&qword_255846440);
  }
  return result;
}

unint64_t sub_2264C63C4()
{
  unint64_t result;

  result = qword_255846448;
  if (!qword_255846448)
  {
    result = MEMORY[0x22769A794](&unk_22656566C, &type metadata for CapturedRoom.Object.CornerCompletion);
    atomic_store(result, (unint64_t *)&qword_255846448);
  }
  return result;
}

unint64_t sub_2264C640C()
{
  unint64_t result;

  result = qword_255846450;
  if (!qword_255846450)
  {
    result = MEMORY[0x22769A794](&unk_2265656C4, &type metadata for CapturedRoom.Object.CornerCompletion);
    atomic_store(result, (unint64_t *)&qword_255846450);
  }
  return result;
}

unint64_t sub_2264C6454()
{
  unint64_t result;

  result = qword_255846458;
  if (!qword_255846458)
  {
    result = MEMORY[0x22769A794](&unk_2265656FC, &type metadata for CapturedRoom.Object.CornerCompletion);
    atomic_store(result, (unint64_t *)&qword_255846458);
  }
  return result;
}

unint64_t sub_2264C649C()
{
  unint64_t result;

  result = qword_255846460;
  if (!qword_255846460)
  {
    result = MEMORY[0x22769A794](&unk_226565564, &type metadata for CapturedRoom.Object.Category.StorageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846460);
  }
  return result;
}

unint64_t sub_2264C64E4()
{
  unint64_t result;

  result = qword_255846468;
  if (!qword_255846468)
  {
    result = MEMORY[0x22769A794](&unk_22656558C, &type metadata for CapturedRoom.Object.Category.StorageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846468);
  }
  return result;
}

unint64_t sub_2264C652C()
{
  unint64_t result;

  result = qword_255846470;
  if (!qword_255846470)
  {
    result = MEMORY[0x22769A794](&unk_226565514, &type metadata for CapturedRoom.Object.Category.RefrigeratorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846470);
  }
  return result;
}

unint64_t sub_2264C6574()
{
  unint64_t result;

  result = qword_255846478;
  if (!qword_255846478)
  {
    result = MEMORY[0x22769A794](&unk_22656553C, &type metadata for CapturedRoom.Object.Category.RefrigeratorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846478);
  }
  return result;
}

unint64_t sub_2264C65BC()
{
  unint64_t result;

  result = qword_255846480;
  if (!qword_255846480)
  {
    result = MEMORY[0x22769A794](&unk_2265654C4, &type metadata for CapturedRoom.Object.Category.StoveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846480);
  }
  return result;
}

unint64_t sub_2264C6604()
{
  unint64_t result;

  result = qword_255846488;
  if (!qword_255846488)
  {
    result = MEMORY[0x22769A794](&unk_2265654EC, &type metadata for CapturedRoom.Object.Category.StoveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846488);
  }
  return result;
}

unint64_t sub_2264C664C()
{
  unint64_t result;

  result = qword_255846490;
  if (!qword_255846490)
  {
    result = MEMORY[0x22769A794](&unk_226565474, &type metadata for CapturedRoom.Object.Category.BedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846490);
  }
  return result;
}

unint64_t sub_2264C6694()
{
  unint64_t result;

  result = qword_255846498;
  if (!qword_255846498)
  {
    result = MEMORY[0x22769A794](&unk_22656549C, &type metadata for CapturedRoom.Object.Category.BedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846498);
  }
  return result;
}

unint64_t sub_2264C66DC()
{
  unint64_t result;

  result = qword_2558464A0;
  if (!qword_2558464A0)
  {
    result = MEMORY[0x22769A794](&unk_226565424, &type metadata for CapturedRoom.Object.Category.SinkCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558464A0);
  }
  return result;
}

unint64_t sub_2264C6724()
{
  unint64_t result;

  result = qword_2558464A8;
  if (!qword_2558464A8)
  {
    result = MEMORY[0x22769A794](&unk_22656544C, &type metadata for CapturedRoom.Object.Category.SinkCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558464A8);
  }
  return result;
}

unint64_t sub_2264C676C()
{
  unint64_t result;

  result = qword_2558464B0;
  if (!qword_2558464B0)
  {
    result = MEMORY[0x22769A794](&unk_2265653D4, &type metadata for CapturedRoom.Object.Category.WasherDryerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558464B0);
  }
  return result;
}

unint64_t sub_2264C67B4()
{
  unint64_t result;

  result = qword_2558464B8;
  if (!qword_2558464B8)
  {
    result = MEMORY[0x22769A794](&unk_2265653FC, &type metadata for CapturedRoom.Object.Category.WasherDryerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558464B8);
  }
  return result;
}

unint64_t sub_2264C67FC()
{
  unint64_t result;

  result = qword_2558464C0;
  if (!qword_2558464C0)
  {
    result = MEMORY[0x22769A794](&unk_226565384, &type metadata for CapturedRoom.Object.Category.ToiletCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558464C0);
  }
  return result;
}

unint64_t sub_2264C6844()
{
  unint64_t result;

  result = qword_2558464C8;
  if (!qword_2558464C8)
  {
    result = MEMORY[0x22769A794](&unk_2265653AC, &type metadata for CapturedRoom.Object.Category.ToiletCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558464C8);
  }
  return result;
}

unint64_t sub_2264C688C()
{
  unint64_t result;

  result = qword_2558464D0;
  if (!qword_2558464D0)
  {
    result = MEMORY[0x22769A794](&unk_226565334, &type metadata for CapturedRoom.Object.Category.BathtubCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558464D0);
  }
  return result;
}

unint64_t sub_2264C68D4()
{
  unint64_t result;

  result = qword_2558464D8;
  if (!qword_2558464D8)
  {
    result = MEMORY[0x22769A794](&unk_22656535C, &type metadata for CapturedRoom.Object.Category.BathtubCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558464D8);
  }
  return result;
}

unint64_t sub_2264C691C()
{
  unint64_t result;

  result = qword_2558464E0;
  if (!qword_2558464E0)
  {
    result = MEMORY[0x22769A794](&unk_2265652E4, &type metadata for CapturedRoom.Object.Category.OvenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558464E0);
  }
  return result;
}

unint64_t sub_2264C6964()
{
  unint64_t result;

  result = qword_2558464E8;
  if (!qword_2558464E8)
  {
    result = MEMORY[0x22769A794](&unk_22656530C, &type metadata for CapturedRoom.Object.Category.OvenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558464E8);
  }
  return result;
}

unint64_t sub_2264C69AC()
{
  unint64_t result;

  result = qword_2558464F0;
  if (!qword_2558464F0)
  {
    result = MEMORY[0x22769A794](&unk_226565294, &type metadata for CapturedRoom.Object.Category.DishwasherCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558464F0);
  }
  return result;
}

unint64_t sub_2264C69F4()
{
  unint64_t result;

  result = qword_2558464F8;
  if (!qword_2558464F8)
  {
    result = MEMORY[0x22769A794](&unk_2265652BC, &type metadata for CapturedRoom.Object.Category.DishwasherCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558464F8);
  }
  return result;
}

unint64_t sub_2264C6A3C()
{
  unint64_t result;

  result = qword_255846500;
  if (!qword_255846500)
  {
    result = MEMORY[0x22769A794](&unk_226565244, &type metadata for CapturedRoom.Object.Category.TableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846500);
  }
  return result;
}

unint64_t sub_2264C6A84()
{
  unint64_t result;

  result = qword_255846508;
  if (!qword_255846508)
  {
    result = MEMORY[0x22769A794](&unk_22656526C, &type metadata for CapturedRoom.Object.Category.TableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846508);
  }
  return result;
}

unint64_t sub_2264C6ACC()
{
  unint64_t result;

  result = qword_255846510;
  if (!qword_255846510)
  {
    result = MEMORY[0x22769A794](&unk_2265651F4, &type metadata for CapturedRoom.Object.Category.SofaCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846510);
  }
  return result;
}

unint64_t sub_2264C6B14()
{
  unint64_t result;

  result = qword_255846518;
  if (!qword_255846518)
  {
    result = MEMORY[0x22769A794](&unk_22656521C, &type metadata for CapturedRoom.Object.Category.SofaCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846518);
  }
  return result;
}

unint64_t sub_2264C6B5C()
{
  unint64_t result;

  result = qword_255846520;
  if (!qword_255846520)
  {
    result = MEMORY[0x22769A794](&unk_2265651A4, &type metadata for CapturedRoom.Object.Category.ChairCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846520);
  }
  return result;
}

unint64_t sub_2264C6BA4()
{
  unint64_t result;

  result = qword_255846528;
  if (!qword_255846528)
  {
    result = MEMORY[0x22769A794](&unk_2265651CC, &type metadata for CapturedRoom.Object.Category.ChairCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846528);
  }
  return result;
}

unint64_t sub_2264C6BEC()
{
  unint64_t result;

  result = qword_255846530;
  if (!qword_255846530)
  {
    result = MEMORY[0x22769A794](&unk_226565154, &type metadata for CapturedRoom.Object.Category.FireplaceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846530);
  }
  return result;
}

unint64_t sub_2264C6C34()
{
  unint64_t result;

  result = qword_255846538;
  if (!qword_255846538)
  {
    result = MEMORY[0x22769A794](&unk_22656517C, &type metadata for CapturedRoom.Object.Category.FireplaceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846538);
  }
  return result;
}

unint64_t sub_2264C6C7C()
{
  unint64_t result;

  result = qword_255846540;
  if (!qword_255846540)
  {
    result = MEMORY[0x22769A794](&unk_226565104, &type metadata for CapturedRoom.Object.Category.TelevisionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846540);
  }
  return result;
}

unint64_t sub_2264C6CC4()
{
  unint64_t result;

  result = qword_255846548;
  if (!qword_255846548)
  {
    result = MEMORY[0x22769A794](&unk_22656512C, &type metadata for CapturedRoom.Object.Category.TelevisionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846548);
  }
  return result;
}

unint64_t sub_2264C6D0C()
{
  unint64_t result;

  result = qword_255846550;
  if (!qword_255846550)
  {
    result = MEMORY[0x22769A794](&unk_2265650B4, &type metadata for CapturedRoom.Object.Category.StairsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846550);
  }
  return result;
}

unint64_t sub_2264C6D54()
{
  unint64_t result;

  result = qword_255846558;
  if (!qword_255846558)
  {
    result = MEMORY[0x22769A794](&unk_2265650DC, &type metadata for CapturedRoom.Object.Category.StairsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846558);
  }
  return result;
}

unint64_t sub_2264C6D9C()
{
  unint64_t result;

  result = qword_255846560;
  if (!qword_255846560)
  {
    result = MEMORY[0x22769A794](&unk_2265655B4, &type metadata for CapturedRoom.Object.Category.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846560);
  }
  return result;
}

unint64_t sub_2264C6DE4()
{
  unint64_t result;

  result = qword_255846568;
  if (!qword_255846568)
  {
    result = MEMORY[0x22769A794](&unk_2265655DC, &type metadata for CapturedRoom.Object.Category.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846568);
  }
  return result;
}

unint64_t sub_2264C6E2C()
{
  unint64_t result;

  result = qword_255846570;
  if (!qword_255846570)
  {
    result = MEMORY[0x22769A794](&unk_226564FC4, &type metadata for CapturedRoom.Object.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846570);
  }
  return result;
}

unint64_t sub_2264C6E74()
{
  unint64_t result;

  result = qword_255846578;
  if (!qword_255846578)
  {
    result = MEMORY[0x22769A794](&unk_226564FEC, &type metadata for CapturedRoom.Object.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846578);
  }
  return result;
}

unint64_t sub_2264C6EBC()
{
  unint64_t result;

  result = qword_255846580;
  if (!qword_255846580)
  {
    result = MEMORY[0x22769A794](&unk_226564EBC, &type metadata for CapturedRoom.Surface.Edge.TopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846580);
  }
  return result;
}

unint64_t sub_2264C6F04()
{
  unint64_t result;

  result = qword_255846588;
  if (!qword_255846588)
  {
    result = MEMORY[0x22769A794](&unk_226564EE4, &type metadata for CapturedRoom.Surface.Edge.TopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846588);
  }
  return result;
}

unint64_t sub_2264C6F4C()
{
  unint64_t result;

  result = qword_255846590;
  if (!qword_255846590)
  {
    result = MEMORY[0x22769A794](&unk_226564E6C, &type metadata for CapturedRoom.Surface.Edge.RightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846590);
  }
  return result;
}

unint64_t sub_2264C6F94()
{
  unint64_t result;

  result = qword_255846598;
  if (!qword_255846598)
  {
    result = MEMORY[0x22769A794](&unk_226564E94, &type metadata for CapturedRoom.Surface.Edge.RightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846598);
  }
  return result;
}

unint64_t sub_2264C6FDC()
{
  unint64_t result;

  result = qword_2558465A0;
  if (!qword_2558465A0)
  {
    result = MEMORY[0x22769A794](&unk_226564E1C, &type metadata for CapturedRoom.Surface.Edge.BottomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558465A0);
  }
  return result;
}

unint64_t sub_2264C7024()
{
  unint64_t result;

  result = qword_2558465A8;
  if (!qword_2558465A8)
  {
    result = MEMORY[0x22769A794](&unk_226564E44, &type metadata for CapturedRoom.Surface.Edge.BottomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558465A8);
  }
  return result;
}

unint64_t sub_2264C706C()
{
  unint64_t result;

  result = qword_2558465B0;
  if (!qword_2558465B0)
  {
    result = MEMORY[0x22769A794](&unk_226564DCC, &type metadata for CapturedRoom.Surface.Edge.LeftCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558465B0);
  }
  return result;
}

unint64_t sub_2264C70B4()
{
  unint64_t result;

  result = qword_2558465B8;
  if (!qword_2558465B8)
  {
    result = MEMORY[0x22769A794](&unk_226564DF4, &type metadata for CapturedRoom.Surface.Edge.LeftCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558465B8);
  }
  return result;
}

unint64_t sub_2264C70FC()
{
  unint64_t result;

  result = qword_2558465C0;
  if (!qword_2558465C0)
  {
    result = MEMORY[0x22769A794](&unk_226564F0C, &type metadata for CapturedRoom.Surface.Edge.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558465C0);
  }
  return result;
}

unint64_t sub_2264C7144()
{
  unint64_t result;

  result = qword_2558465C8;
  if (!qword_2558465C8)
  {
    result = MEMORY[0x22769A794](&unk_226564F34, &type metadata for CapturedRoom.Surface.Edge.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558465C8);
  }
  return result;
}

unint64_t sub_2264C718C()
{
  unint64_t result;

  result = qword_2558465D0;
  if (!qword_2558465D0)
  {
    result = MEMORY[0x22769A794](&unk_226564D14, &type metadata for CapturedRoom.Surface.Curve.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558465D0);
  }
  return result;
}

unint64_t sub_2264C71D4()
{
  unint64_t result;

  result = qword_2558465D8;
  if (!qword_2558465D8)
  {
    result = MEMORY[0x22769A794](&unk_226564D3C, &type metadata for CapturedRoom.Surface.Curve.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558465D8);
  }
  return result;
}

unint64_t sub_2264C721C()
{
  unint64_t result;

  result = qword_2558465E0;
  if (!qword_2558465E0)
  {
    result = MEMORY[0x22769A794](&unk_226564C0C, &type metadata for CapturedRoom.Surface.Category.WallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558465E0);
  }
  return result;
}

unint64_t sub_2264C7264()
{
  unint64_t result;

  result = qword_2558465E8;
  if (!qword_2558465E8)
  {
    result = MEMORY[0x22769A794](&unk_226564C34, &type metadata for CapturedRoom.Surface.Category.WallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558465E8);
  }
  return result;
}

unint64_t sub_2264C72AC()
{
  unint64_t result;

  result = qword_2558465F0;
  if (!qword_2558465F0)
  {
    result = MEMORY[0x22769A794](&unk_226564BBC, &type metadata for CapturedRoom.Surface.Category.OpeningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558465F0);
  }
  return result;
}

unint64_t sub_2264C72F4()
{
  unint64_t result;

  result = qword_2558465F8;
  if (!qword_2558465F8)
  {
    result = MEMORY[0x22769A794](&unk_226564BE4, &type metadata for CapturedRoom.Surface.Category.OpeningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558465F8);
  }
  return result;
}

unint64_t sub_2264C733C()
{
  unint64_t result;

  result = qword_255846600;
  if (!qword_255846600)
  {
    result = MEMORY[0x22769A794](&unk_226564B6C, &type metadata for CapturedRoom.Surface.Category.WindowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846600);
  }
  return result;
}

unint64_t sub_2264C7384()
{
  unint64_t result;

  result = qword_255846608;
  if (!qword_255846608)
  {
    result = MEMORY[0x22769A794](&unk_226564B94, &type metadata for CapturedRoom.Surface.Category.WindowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846608);
  }
  return result;
}

unint64_t sub_2264C73CC()
{
  unint64_t result;

  result = qword_255846610;
  if (!qword_255846610)
  {
    result = MEMORY[0x22769A794](&unk_226564AB4, &type metadata for CapturedRoom.Surface.Category.DoorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846610);
  }
  return result;
}

unint64_t sub_2264C7414()
{
  unint64_t result;

  result = qword_255846618;
  if (!qword_255846618)
  {
    result = MEMORY[0x22769A794](&unk_226564ADC, &type metadata for CapturedRoom.Surface.Category.DoorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846618);
  }
  return result;
}

unint64_t sub_2264C745C()
{
  unint64_t result;

  result = qword_255846620;
  if (!qword_255846620)
  {
    result = MEMORY[0x22769A794](&unk_226564A64, &type metadata for CapturedRoom.Surface.Category.FloorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846620);
  }
  return result;
}

unint64_t sub_2264C74A4()
{
  unint64_t result;

  result = qword_255846628;
  if (!qword_255846628)
  {
    result = MEMORY[0x22769A794](&unk_226564A8C, &type metadata for CapturedRoom.Surface.Category.FloorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846628);
  }
  return result;
}

unint64_t sub_2264C74EC()
{
  unint64_t result;

  result = qword_255846630;
  if (!qword_255846630)
  {
    result = MEMORY[0x22769A794](&unk_226564C5C, &type metadata for CapturedRoom.Surface.Category.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846630);
  }
  return result;
}

unint64_t sub_2264C7534()
{
  unint64_t result;

  result = qword_255846638;
  if (!qword_255846638)
  {
    result = MEMORY[0x22769A794](&unk_226564C84, &type metadata for CapturedRoom.Surface.Category.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846638);
  }
  return result;
}

unint64_t sub_2264C757C()
{
  unint64_t result;

  result = qword_255846640;
  if (!qword_255846640)
  {
    result = MEMORY[0x22769A794](&unk_226564974, &type metadata for CapturedRoom.Surface.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846640);
  }
  return result;
}

unint64_t sub_2264C75C4()
{
  unint64_t result;

  result = qword_255846648;
  if (!qword_255846648)
  {
    result = MEMORY[0x22769A794](&unk_22656499C, &type metadata for CapturedRoom.Surface.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846648);
  }
  return result;
}

unint64_t sub_2264C760C()
{
  unint64_t result;

  result = qword_255846650;
  if (!qword_255846650)
  {
    result = MEMORY[0x22769A794](&unk_226564884, &type metadata for CapturedRoom.Section.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846650);
  }
  return result;
}

unint64_t sub_2264C7654()
{
  unint64_t result;

  result = qword_255846658;
  if (!qword_255846658)
  {
    result = MEMORY[0x22769A794](&unk_2265648AC, &type metadata for CapturedRoom.Section.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846658);
  }
  return result;
}

unint64_t sub_2264C769C()
{
  unint64_t result;

  result = qword_255846660;
  if (!qword_255846660)
  {
    result = MEMORY[0x22769A794](&unk_22656477C, &type metadata for CapturedRoom.Confidence.HighCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846660);
  }
  return result;
}

unint64_t sub_2264C76E4()
{
  unint64_t result;

  result = qword_255846668;
  if (!qword_255846668)
  {
    result = MEMORY[0x22769A794](&unk_2265647A4, &type metadata for CapturedRoom.Confidence.HighCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846668);
  }
  return result;
}

unint64_t sub_2264C772C()
{
  unint64_t result;

  result = qword_255846670;
  if (!qword_255846670)
  {
    result = MEMORY[0x22769A794](&unk_22656472C, &type metadata for CapturedRoom.Confidence.MediumCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846670);
  }
  return result;
}

unint64_t sub_2264C7774()
{
  unint64_t result;

  result = qword_255846678;
  if (!qword_255846678)
  {
    result = MEMORY[0x22769A794](&unk_226564754, &type metadata for CapturedRoom.Confidence.MediumCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846678);
  }
  return result;
}

unint64_t sub_2264C77BC()
{
  unint64_t result;

  result = qword_255846680;
  if (!qword_255846680)
  {
    result = MEMORY[0x22769A794](&unk_2265646DC, &type metadata for CapturedRoom.Confidence.LowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846680);
  }
  return result;
}

unint64_t sub_2264C7804()
{
  unint64_t result;

  result = qword_255846688;
  if (!qword_255846688)
  {
    result = MEMORY[0x22769A794](&unk_226564704, &type metadata for CapturedRoom.Confidence.LowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846688);
  }
  return result;
}

unint64_t sub_2264C784C()
{
  unint64_t result;

  result = qword_255846690;
  if (!qword_255846690)
  {
    result = MEMORY[0x22769A794](&unk_2265647CC, &type metadata for CapturedRoom.Confidence.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846690);
  }
  return result;
}

unint64_t sub_2264C7894()
{
  unint64_t result;

  result = qword_255846698;
  if (!qword_255846698)
  {
    result = MEMORY[0x22769A794](&unk_2265647F4, &type metadata for CapturedRoom.Confidence.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255846698);
  }
  return result;
}

unint64_t sub_2264C78DC()
{
  unint64_t result;

  result = qword_2558466A0;
  if (!qword_2558466A0)
  {
    result = MEMORY[0x22769A794](&unk_2265645EC, &type metadata for CapturedVolumeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558466A0);
  }
  return result;
}

unint64_t sub_2264C7924()
{
  unint64_t result;

  result = qword_2558466A8;
  if (!qword_2558466A8)
  {
    result = MEMORY[0x22769A794](&unk_226564614, &type metadata for CapturedVolumeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558466A8);
  }
  return result;
}

uint64_t sub_2264C7968(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2264C7D78(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2264C7984(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2264C8A4C(a1, a2, a3, *v3, &qword_255843A78);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2264C79A8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2264C8030(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2264C79C4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2264C7ED4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2264C79E0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2264C818C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2264C79FC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2264C82D8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2264C7A18(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2264C8EAC(a1, a2, a3, *v3, &qword_2558466F8);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2264C7A3C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2264C8434(a1, a2, a3, *v3, &qword_255843AC0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2264C7A60(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2264C858C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2264C7A7C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2264C86E4(a1, a2, a3, (_QWORD *)*v3, &qword_255843A48, (uint64_t (*)(_QWORD))type metadata accessor for LineAnimation);
  *v3 = result;
  return result;
}

uint64_t sub_2264C7AA8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2264C86E4(a1, a2, a3, (_QWORD *)*v3, &qword_255843A20, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
  *v3 = result;
  return result;
}

uint64_t sub_2264C7AD4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2264C88C4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2264C7AF0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2264C8A4C(a1, a2, a3, *v3, &qword_255843AC8);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2264C7B14(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2264C86E4(a1, a2, a3, (_QWORD *)*v3, &qword_2558439F8, type metadata accessor for CapturedRoom.Surface);
  *v3 = result;
  return result;
}

uint64_t sub_2264C7B40(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2264C8BA4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2264C7B5C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2264C8D24(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2264C7B78(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2264C8EAC(a1, a2, a3, *v3, &qword_2558466E8);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2264C7B9C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2264C86E4(a1, a2, a3, (_QWORD *)*v3, &qword_255843A10, type metadata accessor for CapturedRoom.Object);
  *v3 = result;
  return result;
}

uint64_t sub_2264C7BC8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2264C8FF4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2264C7BE4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2264C91DC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2264C7C00(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2264C9364(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2264C7C1C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558466D8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_2264C7D78(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255843A40);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 29;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8])
      memmove(v13, v14, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_2264C7ED4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255841D18);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_2264C8030(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255843AA0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_2264C818C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558466E0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_2264C82D8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255844B60);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_2264C8434(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v9])
      memmove(v14, v15, 16 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v9] || v14 >= &v15[16 * v9])
  {
    memcpy(v14, v15, 16 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_2264C858C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  int64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255842CC8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 31;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[2 * v8])
      memmove(v13, v14, 2 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[2 * v8] || v13 >= &v14[2 * v8])
  {
    memcpy(v13, v14, 2 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_2264C86E4(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_2264C88C4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558466B0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558466B8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_2264C8A4C(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 29;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 2);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[4 * v9])
      memmove(v14, v15, 4 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[4 * v9] || v14 >= &v15[4 * v9])
  {
    memcpy(v14, v15, 4 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_2264C8BA4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255846708);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8])
      memmove(v12, v13, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_2264C8D24(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255846710);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255846718);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_2264C8EAC(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v9])
      memmove(v13, v14, v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v9] || v13 >= &v14[v9])
  {
    memcpy(v13, v14, v9);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_2264C8FF4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558466F0);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255843320) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255843320) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_2264C91DC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558466C0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848190);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_2264C9364(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849B30);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_2264C94CC(uint64_t *a1, float32x4_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  float32x4_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int32x4_t v18;
  int32x4_t v19;
  int32x4_t v20;
  float32x4_t *v21;
  int32x4_t v22;
  int32x4_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  _OWORD *v29;
  _OWORD *v30;
  __int128 v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  float32x4_t v37;
  int32x4_t v38;
  int32x4_t v39;
  char v40;
  __int128 v41;
  unint64_t v42;
  unint64_t v43;
  char *v44;
  char *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  char v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  float32x4_t v99;
  int32x4_t v100;
  int32x4_t v101;
  char v102;
  __int128 v103;
  char *v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  float32x4_t *__dst;

  v4 = a1[1];
  result = sub_22655D538();
  if (result >= v4)
  {
    if (v4 < 0)
      goto LABEL_141;
    if ((unint64_t)v4 >= 2)
    {
      v93 = *a1;
      v94 = -1;
      v95 = 1;
      v96 = *a1;
      do
      {
        v97 = v94;
        v98 = v96;
        do
        {
          v99 = *(float32x4_t *)(v98 + 32);
          v100 = (int32x4_t)vmulq_f32(v99, a2);
          v101 = (int32x4_t)vmulq_f32(*(float32x4_t *)v98, a2);
          if ((vmovn_s32(vcgtq_f32(vaddq_f32((float32x4_t)vdupq_laneq_s32(v100, 2), vaddq_f32((float32x4_t)v100, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v100.i8, 1))), vaddq_f32((float32x4_t)vdupq_laneq_s32(v101, 2), vaddq_f32((float32x4_t)v101, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v101.i8, 1))))).u8[0] & 1) == 0)break;
          if (!v93)
            goto LABEL_145;
          v102 = *(_BYTE *)(v98 + 48);
          v103 = *(_OWORD *)(v98 + 16);
          *(_OWORD *)(v98 + 32) = *(_OWORD *)v98;
          *(_OWORD *)(v98 + 48) = v103;
          *(float32x4_t *)v98 = v99;
          *(_BYTE *)(v98 + 16) = v102;
          v98 -= 32;
        }
        while (!__CFADD__(v97++, 1));
        ++v95;
        v96 += 32;
        --v94;
      }
      while (v95 != v4);
    }
    return result;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_150;
  v7 = result;
  v114 = a1;
  if (v4 < 2)
  {
    v10 = MEMORY[0x24BEE4AF8];
    __dst = (float32x4_t *)(MEMORY[0x24BEE4AF8] + 32);
    if (v4 != 1)
    {
      v15 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v14 = (char *)MEMORY[0x24BEE4AF8];
      v11 = a2;
LABEL_107:
      v105 = v14;
      v116 = v10;
      if (v15 >= 2)
      {
        v106 = *v114;
        do
        {
          v107 = v15 - 2;
          if (v15 < 2)
            goto LABEL_136;
          if (!v106)
            goto LABEL_149;
          v108 = v105;
          v109 = *(_QWORD *)&v105[16 * v107 + 32];
          v110 = *(_QWORD *)&v105[16 * v15 + 24];
          sub_2264C9CA0((float32x4_t *)(v106 + 32 * v109), (float32x4_t *)(v106 + 32 * *(_QWORD *)&v105[16 * v15 + 16]), v106 + 32 * v110, __dst, v11);
          if (v2)
            break;
          if (v110 < v109)
            goto LABEL_137;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v108 = sub_2264CA374((uint64_t)v108);
          if (v107 >= *((_QWORD *)v108 + 2))
            goto LABEL_138;
          v111 = &v108[16 * v107 + 32];
          *(_QWORD *)v111 = v109;
          *((_QWORD *)v111 + 1) = v110;
          v112 = *((_QWORD *)v108 + 2);
          if (v15 > v112)
            goto LABEL_139;
          memmove(&v108[16 * v15 + 16], &v108[16 * v15 + 32], 16 * (v112 - v15));
          v105 = v108;
          *((_QWORD *)v108 + 2) = v112 - 1;
          v15 = v112 - 1;
          v11 = a2;
        }
        while (v112 > 2);
      }
LABEL_97:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v116 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v116 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v8 = v6 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558466C8);
    v9 = sub_22655CEFC();
    *(_QWORD *)(v9 + 16) = v8;
    v116 = v9;
    __dst = (float32x4_t *)(v9 + 32);
  }
  v11 = a2;
  v12 = 0;
  v13 = *a1;
  v115 = *a1 + 64;
  v113 = *a1 - 32;
  v14 = (char *)MEMORY[0x24BEE4AF8];
  v117 = v7;
  v118 = v4;
  v119 = v13;
  while (1)
  {
    v16 = v12++;
    if (v12 < v4)
    {
      v17 = 32 * v16;
      v18 = (int32x4_t)vmulq_f32(*(float32x4_t *)(v13 + 32 * v12), v11);
      v19 = (int32x4_t)vmulq_f32(*(float32x4_t *)(v13 + 32 * v16), v11);
      v20 = vcgtq_f32(vaddq_f32((float32x4_t)vdupq_laneq_s32(v18, 2), vaddq_f32((float32x4_t)v18, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v18.i8, 1))), vaddq_f32((float32x4_t)vdupq_laneq_s32(v19, 2), vaddq_f32((float32x4_t)v19, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v19.i8, 1))));
      v12 = v16 + 2;
      if (v16 + 2 < v4)
      {
        v21 = (float32x4_t *)(v115 + 32 * v16);
        while (1)
        {
          v22 = (int32x4_t)vmulq_f32(*v21, v11);
          v23 = (int32x4_t)vmulq_f32(v21[-2], v11);
          if ((vmovn_s32((int32x4_t)vmvnq_s8(veorq_s8((int8x16_t)vcgtq_f32(vaddq_f32((float32x4_t)vdupq_laneq_s32(v22, 2), vaddq_f32((float32x4_t)v22, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v22.i8, 1))), vaddq_f32((float32x4_t)vdupq_laneq_s32(v23, 2), vaddq_f32((float32x4_t)v23, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v23.i8, 1)))), (int8x16_t)v20))).u8[0] & 1) == 0)break;
          ++v12;
          v21 += 2;
          if (v4 == v12)
          {
            v12 = v4;
            break;
          }
        }
      }
      if ((vmovn_s32(v20).u8[0] & 1) != 0)
      {
        if (v12 < v16)
          goto LABEL_142;
        if (v16 < v12)
        {
          v24 = 32 * v12 - 32;
          v25 = v12;
          v26 = v16;
          do
          {
            if (v26 != --v25)
            {
              if (!v13)
                goto LABEL_148;
              v29 = (_OWORD *)(v13 + v17);
              v30 = (_OWORD *)(v13 + v24);
              v31 = *(_OWORD *)(v13 + v17);
              v32 = *(_BYTE *)(v13 + v17 + 16);
              if (v17 != v24 || v29 >= v30 + 2)
              {
                v27 = v30[1];
                *v29 = *v30;
                v29[1] = v27;
              }
              v28 = v13 + v24;
              *(_OWORD *)v28 = v31;
              *(_BYTE *)(v28 + 16) = v32;
            }
            ++v26;
            v24 -= 32;
            v17 += 32;
          }
          while (v26 < v25);
        }
      }
    }
    if (v12 >= v4)
      goto LABEL_50;
    if (__OFSUB__(v12, v16))
      goto LABEL_140;
    if (v12 - v16 >= v7)
      goto LABEL_50;
    v33 = v16 + v7;
    if (__OFADD__(v16, v7))
      goto LABEL_143;
    if (v33 >= v4)
      v33 = v4;
    if (v33 < v16)
      break;
    if (v12 != v33)
    {
      v34 = v113 + 32 * v12;
      do
      {
        v35 = v16;
        v36 = v34;
        do
        {
          v37 = *(float32x4_t *)(v36 + 32);
          v38 = (int32x4_t)vmulq_f32(v37, v11);
          v39 = (int32x4_t)vmulq_f32(*(float32x4_t *)v36, v11);
          if ((vmovn_s32(vcgtq_f32(vaddq_f32((float32x4_t)vdupq_laneq_s32(v38, 2), vaddq_f32((float32x4_t)v38, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v38.i8, 1))), vaddq_f32((float32x4_t)vdupq_laneq_s32(v39, 2), vaddq_f32((float32x4_t)v39, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v39.i8, 1))))).u8[0] & 1) == 0)break;
          if (!v13)
            goto LABEL_146;
          v40 = *(_BYTE *)(v36 + 48);
          v41 = *(_OWORD *)(v36 + 16);
          *(_OWORD *)(v36 + 32) = *(_OWORD *)v36;
          *(_OWORD *)(v36 + 48) = v41;
          *(float32x4_t *)v36 = v37;
          *(_BYTE *)(v36 + 16) = v40;
          v36 -= 32;
          ++v35;
        }
        while (v12 != v35);
        ++v12;
        v34 += 32;
      }
      while (v12 != v33);
      v12 = v33;
    }
LABEL_50:
    if (v12 < v16)
      goto LABEL_135;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v14 = sub_2264C9F78(0, *((_QWORD *)v14 + 2) + 1, 1, v14);
    v43 = *((_QWORD *)v14 + 2);
    v42 = *((_QWORD *)v14 + 3);
    v15 = v43 + 1;
    v11 = a2;
    v13 = v119;
    if (v43 >= v42 >> 1)
    {
      v92 = sub_2264C9F78((char *)(v42 > 1), v43 + 1, 1, v14);
      v13 = v119;
      v11 = a2;
      v14 = v92;
    }
    *((_QWORD *)v14 + 2) = v15;
    v44 = v14 + 32;
    v45 = &v14[16 * v43 + 32];
    *(_QWORD *)v45 = v16;
    *((_QWORD *)v45 + 1) = v12;
    if (v43)
    {
      while (1)
      {
        v46 = v15 - 1;
        if (v15 >= 4)
        {
          v51 = &v44[16 * v15];
          v52 = *((_QWORD *)v51 - 8);
          v53 = *((_QWORD *)v51 - 7);
          v57 = __OFSUB__(v53, v52);
          v54 = v53 - v52;
          if (v57)
            goto LABEL_124;
          v56 = *((_QWORD *)v51 - 6);
          v55 = *((_QWORD *)v51 - 5);
          v57 = __OFSUB__(v55, v56);
          v49 = v55 - v56;
          v50 = v57;
          if (v57)
            goto LABEL_125;
          v58 = v15 - 2;
          v59 = &v44[16 * v15 - 32];
          v61 = *(_QWORD *)v59;
          v60 = *((_QWORD *)v59 + 1);
          v57 = __OFSUB__(v60, v61);
          v62 = v60 - v61;
          if (v57)
            goto LABEL_127;
          v57 = __OFADD__(v49, v62);
          v63 = v49 + v62;
          if (v57)
            goto LABEL_130;
          if (v63 >= v54)
          {
            v81 = &v44[16 * v46];
            v83 = *(_QWORD *)v81;
            v82 = *((_QWORD *)v81 + 1);
            v57 = __OFSUB__(v82, v83);
            v84 = v82 - v83;
            if (v57)
              goto LABEL_134;
            v74 = v49 < v84;
            goto LABEL_87;
          }
        }
        else
        {
          if (v15 != 3)
          {
            v75 = *((_QWORD *)v14 + 4);
            v76 = *((_QWORD *)v14 + 5);
            v57 = __OFSUB__(v76, v75);
            v68 = v76 - v75;
            v69 = v57;
            goto LABEL_81;
          }
          v48 = *((_QWORD *)v14 + 4);
          v47 = *((_QWORD *)v14 + 5);
          v57 = __OFSUB__(v47, v48);
          v49 = v47 - v48;
          v50 = v57;
        }
        if ((v50 & 1) != 0)
          goto LABEL_126;
        v58 = v15 - 2;
        v64 = &v44[16 * v15 - 32];
        v66 = *(_QWORD *)v64;
        v65 = *((_QWORD *)v64 + 1);
        v67 = __OFSUB__(v65, v66);
        v68 = v65 - v66;
        v69 = v67;
        if (v67)
          goto LABEL_129;
        v70 = &v44[16 * v46];
        v72 = *(_QWORD *)v70;
        v71 = *((_QWORD *)v70 + 1);
        v57 = __OFSUB__(v71, v72);
        v73 = v71 - v72;
        if (v57)
          goto LABEL_132;
        if (__OFADD__(v68, v73))
          goto LABEL_133;
        if (v68 + v73 >= v49)
        {
          v74 = v49 < v73;
LABEL_87:
          if (v74)
            v46 = v58;
          goto LABEL_89;
        }
LABEL_81:
        if ((v69 & 1) != 0)
          goto LABEL_128;
        v77 = &v44[16 * v46];
        v79 = *(_QWORD *)v77;
        v78 = *((_QWORD *)v77 + 1);
        v57 = __OFSUB__(v78, v79);
        v80 = v78 - v79;
        if (v57)
          goto LABEL_131;
        if (v80 < v68)
          goto LABEL_15;
LABEL_89:
        v85 = v46 - 1;
        if (v46 - 1 >= v15)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!v13)
          goto LABEL_147;
        v86 = v14;
        v87 = &v44[16 * v85];
        v88 = *(_QWORD *)v87;
        v89 = &v44[16 * v46];
        v90 = *((_QWORD *)v89 + 1);
        sub_2264C9CA0((float32x4_t *)(v13 + 32 * *(_QWORD *)v87), (float32x4_t *)(v13 + 32 * *(_QWORD *)v89), v13 + 32 * v90, __dst, v11);
        if (v2)
          goto LABEL_97;
        if (v90 < v88)
          goto LABEL_121;
        if (v46 > *((_QWORD *)v86 + 2))
          goto LABEL_122;
        *(_QWORD *)v87 = v88;
        *(_QWORD *)&v44[16 * v85 + 8] = v90;
        v91 = *((_QWORD *)v86 + 2);
        if (v46 >= v91)
          goto LABEL_123;
        v14 = v86;
        v15 = v91 - 1;
        memmove(&v44[16 * v46], v89 + 16, 16 * (v91 - 1 - v46));
        *((_QWORD *)v86 + 2) = v91 - 1;
        v11 = a2;
        v13 = v119;
        if (v91 <= 2)
          goto LABEL_15;
      }
    }
    v15 = 1;
LABEL_15:
    v7 = v117;
    v4 = v118;
    if (v12 >= v118)
    {
      v10 = v116;
      goto LABEL_107;
    }
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  result = sub_22655D3DC();
  __break(1u);
  return result;
}

uint64_t sub_2264C9CA0(float32x4_t *__src, float32x4_t *a2, unint64_t a3, float32x4_t *__dst, float32x4_t a5)
{
  float32x4_t *v5;
  float32x4_t v7;
  float32x4_t *v8;
  float32x4_t *v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  float32x4_t *v17;
  float32x4_t *v18;
  int32x4_t v19;
  int32x4_t v20;
  float32x4_t *v21;
  BOOL v22;
  float32x4_t v23;
  uint64_t v24;
  float32x4_t *v25;
  float32x4_t *v26;
  float32x4_t *v27;
  int32x4_t v28;
  int32x4_t v29;
  float32x4_t *v30;
  BOOL v31;
  float32x4_t v32;
  uint64_t result;
  float32x4_t *v36;
  float32x4_t *v37;
  float32x4_t *v38;

  v5 = __dst;
  v7 = a5;
  v8 = a2;
  v9 = __src;
  v10 = (char *)a2 - (char *)__src;
  v11 = (char *)a2 - (char *)__src + 31;
  if ((char *)a2 - (char *)__src >= 0)
    v11 = (char *)a2 - (char *)__src;
  v12 = v11 >> 5;
  v13 = a3 - (_QWORD)a2;
  v14 = a3 - (_QWORD)a2 + 31;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v14 = a3 - (_QWORD)a2;
  v15 = v14 >> 5;
  v37 = __dst;
  v38 = __src;
  if (v12 >= v15)
  {
    if (v13 < -31)
      goto LABEL_45;
    v24 = 2 * v15;
    if (__dst != a2 || &a2[v24] <= __dst)
    {
      memmove(__dst, a2, 32 * v15);
      v7 = a5;
    }
    v25 = &v5[v24];
    v36 = &v5[v24];
    v38 = v8;
    if (v9 >= v8 || (unint64_t)(v13 - 32) > 0xFFFFFFFFFFFFFFC0)
    {
LABEL_44:
      sub_2264CA2D0((void **)&v38, (const void **)&v37, &v36);
      return 1;
    }
    v26 = (float32x4_t *)(a3 - 32);
    while (1)
    {
      v27 = v8 - 2;
      v28 = (int32x4_t)vmulq_f32(v25[-2], v7);
      v29 = (int32x4_t)vmulq_f32(v8[-2], v7);
      v30 = v26 + 2;
      if ((vmovn_s32(vcgtq_f32(vaddq_f32((float32x4_t)vdupq_laneq_s32(v28, 2), vaddq_f32((float32x4_t)v28, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v28.i8, 1))), vaddq_f32((float32x4_t)vdupq_laneq_s32(v29, 2), vaddq_f32((float32x4_t)v29, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v29.i8, 1))))).u8[0] & 1) != 0)
      {
        if (v30 != v8)
        {
          v8 -= 2;
LABEL_40:
          v32 = v27[1];
          *v26 = *v27;
          v26[1] = v32;
          goto LABEL_41;
        }
        v31 = v26 >= v8;
        v8 -= 2;
        if (v31)
          goto LABEL_40;
      }
      else
      {
        v27 = v25 - 2;
        if (v30 != v25)
        {
          v25 -= 2;
          goto LABEL_40;
        }
        v31 = v26 >= v25;
        v25 -= 2;
        if (v31)
          goto LABEL_40;
      }
LABEL_41:
      if (v8 > v9)
      {
        v26 -= 2;
        if (v25 > v5)
          continue;
      }
      v36 = v25;
      v38 = v8;
      goto LABEL_44;
    }
  }
  if (v10 >= -31)
  {
    v16 = 2 * v12;
    if (__dst != __src || &__src[v16] <= __dst)
    {
      memmove(__dst, __src, v16 * 16);
      v7 = a5;
    }
    v17 = &v5[v16];
    v36 = &v5[v16];
    if ((unint64_t)v8 < a3 && (unint64_t)(v10 - 32) <= 0xFFFFFFFFFFFFFFC0)
    {
      v18 = v5;
      while (1)
      {
        v19 = (int32x4_t)vmulq_f32(*v8, v7);
        v20 = (int32x4_t)vmulq_f32(*v18, v7);
        if ((vmovn_s32(vcgtq_f32(vaddq_f32((float32x4_t)vdupq_laneq_s32(v19, 2), vaddq_f32((float32x4_t)v19, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v19.i8, 1))), vaddq_f32((float32x4_t)vdupq_laneq_s32(v20, 2), vaddq_f32((float32x4_t)v20, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v20.i8, 1))))).u8[0] & 1) == 0)break;
        v21 = v8;
        v22 = v9 == v8;
        v8 += 2;
        if (!v22)
          goto LABEL_18;
LABEL_19:
        v9 += 2;
        if (v18 >= v17 || (unint64_t)v8 >= a3)
        {
          v37 = v5;
          v38 = v9;
          goto LABEL_44;
        }
      }
      v5 = v18 + 2;
      v21 = v18;
      v22 = v9 == v18;
      v18 += 2;
      if (v22)
        goto LABEL_19;
LABEL_18:
      v23 = v21[1];
      *v9 = *v21;
      v9[1] = v23;
      goto LABEL_19;
    }
    goto LABEL_44;
  }
LABEL_45:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

char *sub_2264C9F78(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558466D0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_2264CA074(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_22655D43C();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

uint64_t sub_2264CA11C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = type metadata accessor for LineAnimation();
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = sub_22655D43C();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_2264CA228(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 3;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -4)
  {
    result = (char *)sub_22655D43C();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 2;
    if (result != v3 || result >= &v3[4 * v7])
      return (char *)memmove(result, v3, 4 * v7);
  }
  return result;
}

char *sub_2264CA2D0(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  size_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -32)
  {
    result = (char *)sub_22655D43C();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = (v4 + (v4 < 0 ? 0x1FuLL : 0)) & 0xFFFFFFFFFFFFFFE0;
    if (result != v3 || result >= &v3[v6])
      return (char *)memmove(result, v3, v6);
  }
  return result;
}

char *sub_2264CA374(uint64_t a1)
{
  return sub_2264C9F78(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

_BYTE *sub_2264CA388@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_2264CA544(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_2264CA604((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_2264CA67C((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_2264CA3FC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_22655BE58();
  if (!result || (result = sub_22655BE70(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_22655BE64();
      sub_22655CCB0();
      sub_226437F28(&qword_255843760, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8], MEMORY[0x24BDC6AE8]);
      return sub_22655CC5C();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2264CA4C0(uint64_t a1)
{
  return sub_2264C7ED4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_2264CA4D4()
{
  JUMPOUT(0x227699C0CLL);
}

uint64_t sub_2264CA4E8(_QWORD *a1)
{
  return sub_2264C86E4(0, a1[2], 0, a1, &qword_255843A48, (uint64_t (*)(_QWORD))type metadata accessor for LineAnimation);
}

uint64_t sub_2264CA51C(uint64_t a1)
{
  return sub_2264C82D8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2264CA530(uint64_t a1)
{
  return sub_2264C7D78(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2264CA544(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_2264CA604(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_22655BE7C();
  swift_allocObject();
  result = sub_22655BE4C();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_22655C074();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_2264CA67C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_22655BE7C();
  swift_allocObject();
  result = sub_22655BE4C();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0)
    return v2 << 32;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_2264CA6FC(uint64_t a1)
{
  _QWORD *v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255846730);
  v10 = sub_2264CB5F8(&qword_255846738, &qword_255846730, MEMORY[0x24BDCFBE0]);
  v8[0] = a1;
  v2 = __swift_project_boxed_opaque_existential_1(v8, v9);
  v3 = (_BYTE *)(*v2 + 32);
  v4 = &v3[*(_QWORD *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_2264CA388(v3, v4, &v7);
  v5 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

uint64_t sub_2264CA7AC()
{
  unint64_t v0;

  v0 = sub_22655D454();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

uint64_t sub_2264CA7F4()
{
  unint64_t v0;

  v0 = sub_22655D454();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_2264CA83C()
{
  unint64_t v0;

  v0 = sub_22655D454();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_2264CA884()
{
  unint64_t v0;

  v0 = sub_22655D454();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA)
    return 10;
  else
    return v0;
}

uint64_t sub_2264CA8CC()
{
  unint64_t v0;

  v0 = sub_22655D454();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB)
    return 11;
  else
    return v0;
}

uint64_t sub_2264CA914(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1751607656 && a2 == 0xE400000000000000;
  if (v2 || (sub_22655D55C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D756964656DLL && a2 == 0xE600000000000000 || (sub_22655D55C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7827308 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_22655D55C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2264CAA40(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1819042167 && a2 == 0xE400000000000000;
  if (v2 || (sub_22655D55C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E696E65706FLL && a2 == 0xE700000000000000 || (sub_22655D55C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x776F646E6977 && a2 == 0xE600000000000000 || (sub_22655D55C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1919905636 && a2 == 0xE400000000000000 || (sub_22655D55C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726F6F6C66 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_22655D55C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_2264CAC2C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7265746E6563 && a2 == 0xE600000000000000;
  if (v2 || (sub_22655D55C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737569646172 && a2 == 0xE600000000000000 || (sub_22655D55C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E417472617473 && a2 == 0xEA0000000000656CLL || (sub_22655D55C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C676E41646E65 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_22655D55C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2264CADE0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7368564 && a2 == 0xE300000000000000;
  if (v2 || (sub_22655D55C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7468676972 && a2 == 0xE500000000000000 || (sub_22655D55C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D6F74746F62 && a2 == 0xE600000000000000 || (sub_22655D55C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1952867692 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_22655D55C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2264CAF68(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656761726F7473 && a2 == 0xE700000000000000;
  if (v2 || (sub_22655D55C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265676972666572 && a2 == 0xEC000000726F7461 || (sub_22655D55C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65766F7473 && a2 == 0xE500000000000000 || (sub_22655D55C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 6579554 && a2 == 0xE300000000000000 || (sub_22655D55C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1802398067 && a2 == 0xE400000000000000 || (sub_22655D55C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7244726568736177 && a2 == 0xEB00000000726579 || (sub_22655D55C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x74656C696F74 && a2 == 0xE600000000000000 || (sub_22655D55C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x62757468746162 && a2 == 0xE700000000000000 || (sub_22655D55C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 1852143215 && a2 == 0xE400000000000000 || (sub_22655D55C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6873617768736964 && a2 == 0xEA00000000007265 || (sub_22655D55C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x656C626174 && a2 == 0xE500000000000000 || (sub_22655D55C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 1634103155 && a2 == 0xE400000000000000 || (sub_22655D55C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x7269616863 && a2 == 0xE500000000000000 || (sub_22655D55C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x63616C7065726966 && a2 == 0xE900000000000065 || (sub_22655D55C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x69736976656C6574 && a2 == 0xEA00000000006E6FLL || (sub_22655D55C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x737269617473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else
  {
    v6 = sub_22655D55C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 15;
    else
      return 16;
  }
}

unint64_t sub_2264CB5B4()
{
  unint64_t result;

  result = qword_255846700;
  if (!qword_255846700)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for CapturedRoom.Section.Label, &type metadata for CapturedRoom.Section.Label);
    atomic_store(result, (unint64_t *)&qword_255846700);
  }
  return result;
}

uint64_t sub_2264CB5F8(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x22769A794](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s8RoomPlan12CapturedRoomV7SurfaceV4EdgeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2264CB684 + 4 * byte_2265637CC[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2264CB6B8 + 4 * byte_2265637C7[v4]))();
}

uint64_t sub_2264CB6B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264CB6C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2264CB6C8);
  return result;
}

uint64_t sub_2264CB6D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2264CB6DCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2264CB6E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264CB6E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CapturedRoom.Object.Rotation()
{
  return &type metadata for CapturedRoom.Object.Rotation;
}

unint64_t sub_2264CB708()
{
  unint64_t result;

  result = qword_255846740;
  if (!qword_255846740)
  {
    result = MEMORY[0x22769A794](&unk_226566488, &type metadata for CapturedRoom.Object.Rotation);
    atomic_store(result, (unint64_t *)&qword_255846740);
  }
  return result;
}

int8x8_t sub_2264CB7CC(float32x2_t a1, float32x2_t a2, float32x2_t a3)
{
  float32x2_t v3;
  float32x2_t v4;
  float32x2_t v5;
  float32x2_t v6;

  v3 = vmul_f32(a3, (float32x2_t)0x3F0000003F000000);
  v4 = vsub_f32(a2, v3);
  v5 = (float32x2_t)vbsl_s8((int8x8_t)vcge_f32(v4, a1), (int8x8_t)v4, (int8x8_t)a1);
  v6 = vadd_f32(v3, a2);
  return vbsl_s8((int8x8_t)vcgt_f32(v5, v6), (int8x8_t)v6, (int8x8_t)v5);
}

BOOL sub_2264CB7F0(double a1, double a2, double a3)
{
  float v5;

  if ((float)(*(float *)&a2 - (float)(0.5 * *(float *)&a3)) > *(float *)&a1
    || *(float *)&a1 > (float)(*(float *)&a2 + (float)(0.5 * *(float *)&a3)))
  {
    return 0;
  }
  v5 = vmuls_lane_f32(0.5, *(float32x2_t *)&a3, 1);
  return (float)(*((float *)&a2 + 1) - v5) <= *((float *)&a1 + 1)
      && *((float *)&a1 + 1) <= (float)(*((float *)&a2 + 1) + v5);
}

double sub_2264CB844(simd_float4x4 a1, simd_float4 a2, simd_float4 a3, float32x4_t a4, float32x4_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, float32x2_t a14, float32x2_t a15)
{
  float32x4_t v15;
  float v17;
  float v18;
  float v19;
  simd_float4x4 v20;

  a1.columns[0] = (simd_float4)vnegq_f32(a4);
  a1.columns[0].i32[3] = 0;
  a1.columns[1] = (simd_float4)vmulq_f32((float32x4_t)a1.columns[0], vnegq_f32((float32x4_t)a1.columns[2]));
  v15 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)a1.columns[1], 2), vaddq_f32((float32x4_t)a1.columns[1], (float32x4_t)vdupq_lane_s32(*(int32x2_t *)a1.columns[1].f32, 1)));
  if (v15.f32[0] != 0.0)
  {
    a1.columns[0] = (simd_float4)vmulq_f32((float32x4_t)a1.columns[0], vsubq_f32(a5, (float32x4_t)a1.columns[3]));
    a1.columns[0] = (simd_float4)vdivq_f32(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)a1.columns[0], 2), vaddq_f32((float32x4_t)a1.columns[0], (float32x4_t)vdupq_lane_s32(*(int32x2_t *)a1.columns[0].f32, 1))), v15);
    LODWORD(v18) = vsubq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)a1.columns[3].f32, 1), vmulq_lane_f32((float32x4_t)a1.columns[0], *(float32x2_t *)a1.columns[2].f32, 1)).u32[0];
    LODWORD(v19) = vsubq_f32((float32x4_t)a1.columns[3], vmulq_f32((float32x4_t)a1.columns[0], (float32x4_t)a1.columns[2])).u32[0];
    v17 = a1.columns[3].f32[2] - vmuls_lane_f32(a1.columns[0].f32[0], (float32x4_t)a1.columns[2], 2);
    v20.columns[0] = a2;
    v20.columns[1] = a3;
    v20.columns[2] = (simd_float4)a4;
    v20.columns[3] = (simd_float4)a5;
    a1 = __invert_f4(v20);
    a1.columns[0].i64[0] = vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32((float32x4_t)a1.columns[0], v19), (float32x4_t)a1.columns[1], v18), (float32x4_t)a1.columns[2], v17).u64[0];
    *(float32x2_t *)a1.columns[1].f32 = vmul_f32(a15, (float32x2_t)0x3F0000003F000000);
    *(float32x2_t *)a1.columns[2].f32 = vsub_f32(a14, *(float32x2_t *)a1.columns[1].f32);
    *(float32x2_t *)a1.columns[0].f32 = vadd_f32(*(float32x2_t *)a1.columns[3].f32, *(float32x2_t *)a1.columns[0].f32);
    *(int8x8_t *)a1.columns[0].f32 = vbsl_s8((int8x8_t)vcge_f32(*(float32x2_t *)a1.columns[2].f32, *(float32x2_t *)a1.columns[0].f32), *(int8x8_t *)a1.columns[2].f32, *(int8x8_t *)a1.columns[0].f32);
    *(float32x2_t *)a1.columns[1].f32 = vadd_f32(*(float32x2_t *)a1.columns[1].f32, a14);
    *(int8x8_t *)a1.columns[0].f32 = vbsl_s8((int8x8_t)vcgt_f32(*(float32x2_t *)a1.columns[0].f32, *(float32x2_t *)a1.columns[1].f32), *(int8x8_t *)a1.columns[1].f32, *(int8x8_t *)a1.columns[0].f32);
  }
  return *(double *)a1.columns[0].i64;
}

ValueMetadata *type metadata accessor for simd_rectangle()
{
  return &type metadata for simd_rectangle;
}

uint64_t type metadata accessor for WallEntity()
{
  uint64_t result;

  result = qword_255846760;
  if (!qword_255846760)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2264CB98C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22655C0E0();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2264CBA10(uint64_t a1, char a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  double v18;
  double v19;
  void (*v20)(char *, uint64_t);
  __n128 v21;
  double v22;
  float v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  float v27;
  void (*v28)(_BYTE *, _QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v36;
  _QWORD v37[3];
  _BYTE v38[40];

  v5 = v3;
  v8 = a2 & 1;
  v9 = sub_22655C0E0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v37 - v14;
  result = sub_2264653F8(a1, v8, a3);
  if (!v4 && *(_BYTE *)(v5 + qword_25585AE08) == 1)
  {
    v17 = v5 + qword_255846758;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v15, v17, v9);
    sub_22655C0C8();
    sub_22655C0A4();
    v19 = v18;
    v20 = *(void (**)(char *, uint64_t))(v10 + 8);
    v20(v12, v9);
    v21.n128_u64[0] = 1.0;
    if (v19 <= 1.0)
      v21.n128_f64[0] = v19;
    if (v19 > 0.0)
      v22 = v21.n128_f64[0];
    else
      v22 = 0.0;
    ((void (*)(char *, uint64_t, __n128))v20)(v15, v9, v21);
    v23 = v22;
    v24 = qword_255846748;
    *(float *)(v5 + qword_255846748) = *(float *)(v5 + qword_255846748)
                                     + (float)((float)(*(float *)(v5 + qword_255846750)
                                                     - *(float *)(v5 + qword_255846748))
                                             * v23);
    v25 = v5 + qword_25585AE00;
    swift_beginAccess();
    sub_226438600(v25, (uint64_t)v38);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558417E0);
    type metadata accessor for SimpleScanMaterial();
    result = swift_dynamicCast();
    if ((result & 1) != 0)
    {
      v26 = v37[0];
      v27 = *(float *)(v5 + v24);
      if (*(float *)(v37[0] + OBJC_IVAR____TtC8RoomPlan18SimpleScanMaterial_opacity) != v27)
      {
        *(float *)(v37[0] + OBJC_IVAR____TtC8RoomPlan18SimpleScanMaterial_opacity) = v27;
        sub_226464E9C();
        type metadata accessor for WallEntity();
        sub_2264CBF40();
        v28 = (void (*)(_BYTE *, _QWORD))sub_22655C8CC();
        v30 = v29;
        v31 = sub_22655C41C();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v30, 1, v31))
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255842740);
          v32 = swift_allocObject();
          *(_OWORD *)(v32 + 16) = xmmword_22655F8F0;
          v33 = sub_22655CAD0();
          v34 = MEMORY[0x24BDE74C8];
          *(_QWORD *)(v32 + 56) = v33;
          *(_QWORD *)(v32 + 64) = v34;
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v32 + 32));
          v36 = v26 + OBJC_IVAR____TtC8RoomPlan22MeshUpdateScanMaterial_customMaterial;
          swift_beginAccess();
          (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(boxed_opaque_existential_1, v36, v33);
          sub_22655C410();
        }
        v28(v38, 0);
      }
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_2264CBD28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_255846758;
  v2 = sub_22655C0E0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t sub_2264CBD64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_QWORD *)(v0 + qword_25585AE18))
  {
    type metadata accessor for ScanEntity();
    swift_retain();
    sub_22655C218();
    swift_release();
  }
  if (qword_25583F908 != -1)
    swift_once();
  if (qword_25585AEE0)
  {
    swift_beginAccess();
    v1 = swift_retain();
    sub_2265402FC(v1);
    swift_endAccess();
    swift_release();
    swift_release();
  }
  v2 = sub_22655C8C0();
  v3 = v2 + qword_25585ADF8;
  v4 = sub_22655C140();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v2 + qword_25585AE00);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v5 = v2 + qword_255846758;
  v6 = sub_22655C0E0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return v2;
}

uint64_t sub_2264CBF18()
{
  sub_2264CBD64();
  return swift_deallocClassInstance();
}

uint64_t sub_2264CBF38()
{
  return type metadata accessor for WallEntity();
}

unint64_t sub_2264CBF40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255844680;
  if (!qword_255844680)
  {
    v1 = type metadata accessor for WallEntity();
    result = MEMORY[0x22769A794](&unk_226560610, v1);
    atomic_store(result, (unint64_t *)&qword_255844680);
  }
  return result;
}

__n128 __swift_memcpy17_16(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for HitPointAndState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HitPointAndState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for HitPointAndState()
{
  return &type metadata for HitPointAndState;
}

BOOL sub_2264CC044(float32x4_t *a1, float32x4_t *a2, float a3)
{
  uint64_t v3;
  float32x4_t v4;
  float32x4_t v5;
  float v6;
  float32x4_t *v7;
  float32x4_t *v8;
  uint64_t v9;
  _BOOL8 result;
  float32x4_t v11;
  float32x4_t v12;
  float32x4_t v13;
  float32x4_t v14;
  float32x4_t v15;

  v3 = a2[1].i64[0];
  if (v3 != a1[1].i64[0])
    return 0;
  if (!v3)
    return 1;
  v4 = vsubq_f32(a2[2], a1[2]);
  v5 = vmulq_f32(v4, v4);
  v6 = a3 * a3;
  if (vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v5, 2), vaddq_f32(v5, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v5.f32, 1))).f32[0] >= v6)return 0;
  v7 = a2 + 3;
  v8 = a1 + 3;
  v9 = v3 - 1;
  do
  {
    result = v9 == 0;
    if (!v9)
      break;
    v11 = *v7++;
    v12 = v11;
    v13 = *v8++;
    v14 = vsubq_f32(v12, v13);
    v15 = vmulq_f32(v14, v14);
    --v9;
  }
  while (vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v15, 2), vaddq_f32(v15, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v15.f32, 1))).f32[0] < v6);
  return result;
}

uint64_t sub_2264CC0DC(unint64_t a1, unint64_t a2, float a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  float32x2_t *v10;
  unint64_t v11;
  float32x2_t *v12;
  float v13;
  float32x2_t v14;
  float32x2_t v15;
  float32x2_t v16;
  float32x2_t v17;
  __int32 v18;
  __int32 v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  float32x2_t *v23;
  float32x2_t *v24;
  float32x2_t v25;
  float32x2_t v26;
  float32x2_t v27;
  float32x2_t v28;
  __int32 v29;
  __int32 v30;
  uint64_t v31;

  v6 = a2 >> 62;
  if (!(a2 >> 62))
  {
    v7 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!(a1 >> 62))
      goto LABEL_3;
LABEL_40:
    swift_bridgeObjectRetain();
    v31 = sub_22655D400();
    swift_bridgeObjectRelease();
    if (v7 != v31)
      return 0;
    goto LABEL_4;
  }
  swift_bridgeObjectRetain();
  v7 = sub_22655D400();
  swift_bridgeObjectRelease();
  if (a1 >> 62)
    goto LABEL_40;
LABEL_3:
  if (v7 != *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    return 0;
LABEL_4:
  if (v6)
  {
    swift_bridgeObjectRetain();
    result = sub_22655D400();
    v8 = result;
    if (!result)
    {
LABEL_37:
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  else
  {
    v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (!v8)
      goto LABEL_37;
  }
  if ((a2 & 0xC000000000000001) != 0)
  {
    result = MEMORY[0x2276999E4](0, a2);
    v10 = (float32x2_t *)result;
    v11 = a1 & 0xC000000000000001;
    if ((a1 & 0xC000000000000001) == 0)
      goto LABEL_11;
LABEL_43:
    v12 = (float32x2_t *)MEMORY[0x2276999E4](0, a1);
    goto LABEL_13;
  }
  if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_45;
  }
  v10 = *(float32x2_t **)(a2 + 32);
  result = swift_retain();
  v11 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
    goto LABEL_43;
LABEL_11:
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(float32x2_t **)(a1 + 32);
    swift_retain();
LABEL_13:
    v13 = a3 * a3;
    v14 = vsub_f32(v10[2], v12[2]);
    if (vaddv_f32(vmul_f32(v14, v14)) >= v13
      || (v15 = vsub_f32(v10[3], v12[3]), vaddv_f32(vmul_f32(v15, v15)) >= v13)
      || (v16 = vsub_f32(v10[4], v12[4]), vaddv_f32(vmul_f32(v16, v16)) >= v13)
      || (v17 = vsub_f32(v10[5], v12[5]), vaddv_f32(vmul_f32(v17, v17)) >= v13))
    {
LABEL_35:
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
    else
    {
      v18 = v10[6].i32[0];
      v19 = v12[6].i32[0];
      swift_release();
      result = swift_release();
      if (v18 == v19)
      {
        v20 = 1 - v8;
        v21 = 5;
        while (v20 + v21 != 5)
        {
          v22 = v21 - 4;
          if ((a2 & 0xC000000000000001) != 0)
          {
            result = MEMORY[0x2276999E4](v21 - 4, a2);
            v23 = (float32x2_t *)result;
          }
          else
          {
            if (v22 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_47;
            v23 = *(float32x2_t **)(a2 + 8 * v21);
            result = swift_retain();
          }
          if (__OFADD__(v22, 1))
            goto LABEL_46;
          if (v11)
          {
            v24 = (float32x2_t *)MEMORY[0x2276999E4](v21 - 4, a1);
          }
          else
          {
            if (v22 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_48;
            v24 = *(float32x2_t **)(a1 + 8 * v21);
            swift_retain();
          }
          v25 = vsub_f32(v23[2], v24[2]);
          if (vaddv_f32(vmul_f32(v25, v25)) >= v13)
            goto LABEL_35;
          v26 = vsub_f32(v23[3], v24[3]);
          if (vaddv_f32(vmul_f32(v26, v26)) >= v13)
            goto LABEL_35;
          v27 = vsub_f32(v23[4], v24[4]);
          if (vaddv_f32(vmul_f32(v27, v27)) >= v13)
            goto LABEL_35;
          v28 = vsub_f32(v23[5], v24[5]);
          if (vaddv_f32(vmul_f32(v28, v28)) >= v13)
            goto LABEL_35;
          v29 = v23[6].i32[0];
          v30 = v24[6].i32[0];
          swift_release();
          result = swift_release();
          ++v21;
          if (v29 != v30)
            goto LABEL_34;
        }
        goto LABEL_37;
      }
LABEL_34:
      swift_bridgeObjectRelease();
    }
    return 0;
  }
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_2264CC48C(unint64_t a1, unint64_t a2, float a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  float *v10;
  unint64_t v11;
  uint64_t v12;
  float v13;
  float v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  float *v18;
  uint64_t v19;
  float v20;
  float v21;
  uint64_t v22;

  v6 = a2 >> 62;
  if (!(a2 >> 62))
  {
    v7 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!(a1 >> 62))
      goto LABEL_3;
LABEL_39:
    swift_bridgeObjectRetain();
    v22 = sub_22655D400();
    swift_bridgeObjectRelease();
    if (v7 != v22)
      return 0;
    goto LABEL_4;
  }
  swift_bridgeObjectRetain();
  v7 = sub_22655D400();
  swift_bridgeObjectRelease();
  if (a1 >> 62)
    goto LABEL_39;
LABEL_3:
  if (v7 != *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    return 0;
LABEL_4:
  if (v6)
  {
    swift_bridgeObjectRetain();
    result = sub_22655D400();
    v8 = result;
    if (!result)
    {
LABEL_36:
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  else
  {
    v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (!v8)
      goto LABEL_36;
  }
  if ((a2 & 0xC000000000000001) != 0)
  {
    result = MEMORY[0x2276999E4](0, a2);
    v10 = (float *)result;
    v11 = a1 & 0xC000000000000001;
    if ((a1 & 0xC000000000000001) == 0)
      goto LABEL_11;
LABEL_42:
    v12 = MEMORY[0x2276999E4](0, a1);
    goto LABEL_13;
  }
  if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_44;
  }
  v10 = *(float **)(a2 + 32);
  result = swift_retain();
  v11 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
    goto LABEL_42;
LABEL_11:
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(_QWORD *)(a1 + 32);
    swift_retain();
LABEL_13:
    if (vabds_f32(v10[4], *(float *)(v12 + 16)) >= a3
      || vabds_f32(v10[5], *(float *)(v12 + 20)) >= a3
      || vabds_f32(v10[6], *(float *)(v12 + 24)) >= a3)
    {
LABEL_34:
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
    else
    {
      v13 = v10[7];
      v14 = *(float *)(v12 + 28);
      swift_release();
      result = swift_release();
      if (vabds_f32(v13, v14) < a3)
      {
        v15 = 1 - v8;
        v16 = 5;
        while (v15 + v16 != 5)
        {
          v17 = v16 - 4;
          if ((a2 & 0xC000000000000001) != 0)
          {
            result = MEMORY[0x2276999E4](v16 - 4, a2);
            v18 = (float *)result;
            if (__OFADD__(v17, 1))
              goto LABEL_45;
          }
          else
          {
            if (v17 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_46;
            v18 = *(float **)(a2 + 8 * v16);
            result = swift_retain();
            if (__OFADD__(v17, 1))
              goto LABEL_45;
          }
          if (v11)
          {
            v19 = MEMORY[0x2276999E4](v16 - 4, a1);
          }
          else
          {
            if (v17 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_47;
            v19 = *(_QWORD *)(a1 + 8 * v16);
            swift_retain();
          }
          if (vabds_f32(v18[4], *(float *)(v19 + 16)) >= a3
            || vabds_f32(v18[5], *(float *)(v19 + 20)) >= a3
            || vabds_f32(v18[6], *(float *)(v19 + 24)) >= a3)
          {
            goto LABEL_34;
          }
          v20 = v18[7];
          v21 = *(float *)(v19 + 28);
          swift_release();
          result = swift_release();
          ++v16;
          if (vabds_f32(v20, v21) >= a3)
            goto LABEL_33;
        }
        goto LABEL_36;
      }
LABEL_33:
      swift_bridgeObjectRelease();
    }
    return 0;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
  return result;
}

BOOL sub_2264CC7D4(float32x4_t *a1, float32x4_t *a2, float a3)
{
  uint64_t v3;
  float32x4_t v4;
  float32x4_t v5;
  float v6;
  float32x4_t v7;
  float32x4_t v8;
  float32x4_t *v9;
  float32x4_t *v10;
  _BOOL8 result;
  float32x4_t v12;
  float32x4_t v13;
  float32x4_t v14;
  float32x4_t v15;
  float32x4_t v16;
  float32x4_t v17;
  float32x4_t v18;

  v3 = a2[1].i64[0];
  if (v3 != a1[1].i64[0])
    return 0;
  if (!v3)
    return 1;
  v4 = vsubq_f32(a2[2], a1[2]);
  v5 = vmulq_f32(v4, v4);
  v6 = a3 * a3;
  if (vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v5, 2), vaddq_f32(v5, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v5.f32, 1))).f32[0] >= v6)return 0;
  v7 = vsubq_f32(a2[3], a1[3]);
  v8 = vmulq_f32(v7, v7);
  if (vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v8, 2), vaddq_f32(v8, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v8.f32, 1))).f32[0] >= v6)return 0;
  v9 = a1 + 5;
  v10 = a2 + 5;
  do
  {
    result = --v3 == 0;
    if (!v3)
      break;
    v12 = vsubq_f32(v10[-1], v9[-1]);
    v13 = vmulq_f32(v12, v12);
    if (vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v13, 2), vaddq_f32(v13, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v13.f32, 1))).f32[0] >= v6)break;
    v14 = *v9;
    v9 += 2;
    v15 = v14;
    v16 = *v10;
    v10 += 2;
    v17 = vsubq_f32(v16, v15);
    v18 = vmulq_f32(v17, v17);
  }
  while (vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v18, 2), vaddq_f32(v18, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v18.f32, 1))).f32[0] < v6);
  return result;
}

void sub_2264CC8B4(uint64_t *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>, float32x4_t a5@<Q0>, float32x4_t a6@<Q1>, float32x4_t a7@<Q2>, float32x4_t a8@<Q3>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  float32x4_t v19;
  float32x4_t v20;
  float32x4_t v21;
  float32x4_t v22;
  uint64_t v23;
  uint64_t *v24;
  float32x4_t v25;
  float32x4_t v26;
  float32x4_t v27;
  float32x4_t v28;
  uint64_t v29;
  float v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  float32x4_t v38;
  float32x4_t v39;
  float32x4_t v40;
  float32x4_t v41;
  float32x4_t v42;
  float32x4_t v43;
  float32x4_t v44;
  float32x4_t v45;

  v42 = a8;
  v43 = a5;
  v44 = a6;
  v45 = a7;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848090);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v38 - v16;
  v18 = *a1;
  if ((a2 & 1) != 0)
  {
    *(double *)v25.i64 = MEMORY[0x227699714](*(__n128 *)(v18 + OBJC_IVAR____TtC8RoomPlan8ScanItem_dollhousePosition), *(__n128 *)(v18 + OBJC_IVAR____TtC8RoomPlan8ScanItem_dollhouseOrientation), (__n128)xmmword_22655FA70);
    v40 = v26;
    v41 = v25;
    v38 = v28;
    v39 = v27;
    v29 = v18 + OBJC_IVAR____TtC8RoomPlan8ScanItem_dollhouseCurve;
    swift_beginAccess();
    sub_22643D7A0(v29, (uint64_t)v17, (uint64_t *)&unk_255848090);
    v24 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_dollhouseDimensions;
  }
  else
  {
    *(double *)v19.i64 = MEMORY[0x227699714](*(__n128 *)(v18 + OBJC_IVAR____TtC8RoomPlan8ScanItem_worldSpacePosition), *(__n128 *)(v18 + OBJC_IVAR____TtC8RoomPlan8ScanItem_worldSpaceOrientation), (__n128)xmmword_22655FA70);
    v40 = v20;
    v41 = v19;
    v38 = v22;
    v39 = v21;
    v23 = v18 + OBJC_IVAR____TtC8RoomPlan8ScanItem_worldSpaceCurve;
    swift_beginAccess();
    sub_22643D7A0(v23, (uint64_t)v17, (uint64_t *)&unk_255848090);
    v24 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_worldSpaceDimensions;
  }
  v30 = *(float *)(v18 + *v24 + 4);
  sub_22643D7A0(a3, (uint64_t)v14, (uint64_t *)&unk_255848090);
  sub_226446C58((uint64_t)v17, (uint64_t)v14, v41, v40, v39, v38, v30, v43, v44, v45, v31, v32, v33, v34, v35, v36, v42);
  *a4 = v37;
}

uint64_t sub_2264CCAB0(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (result)
  {
    v2 = result;
    if (result < 0)
    {
      __break(1u);
    }
    else if (!(*v1 >> 62))
    {
      v3 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10);
      v4 = -v3;
      if (!__OFSUB__(0, v3))
        goto LABEL_5;
      goto LABEL_17;
    }
    swift_bridgeObjectRetain();
    v3 = sub_22655D400();
    result = swift_bridgeObjectRelease();
    v4 = -v3;
    if (!__OFSUB__(0, v3))
    {
LABEL_5:
      v5 = -v2;
      if (v4 <= 0 && v4 > v5)
        goto LABEL_20;
      result = v3 - v2;
      if (!__OFADD__(v3, v5))
      {
        if (v3 >= result)
          return sub_22650A2F4(result, v3);
        goto LABEL_19;
      }
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
      return result;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  return result;
}

BOOL sub_2264CCB70(float32x4_t *a1, float a2)
{
  float32x4_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  float32x2_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  char v21;
  float32x4_t *v22;
  float32x4_t *v23;
  float32x4_t v24;
  int32x4_t v25;
  float32x4_t *v28;
  float32x4_t *v29;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848090);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v28 - v9;
  v11 = type metadata accessor for CapturedRoom.Surface.Curve(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (float32x2_t *)((char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v28 - v16;
  v28 = a1;
  v29 = v2;
  v18 = (uint64_t)v2 + OBJC_IVAR____TtC8RoomPlan19ScanEntityMeshModel_curve;
  v19 = (uint64_t)a1 + OBJC_IVAR____TtC8RoomPlan19ScanEntityMeshModel_curve;
  sub_22643D7A0((uint64_t)v2 + OBJC_IVAR____TtC8RoomPlan19ScanEntityMeshModel_curve, (uint64_t)v10, (uint64_t *)&unk_255848090);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v20((uint64_t)v10, 1, v11) == 1)
  {
    v7 = v10;
LABEL_5:
    sub_22643D7E4((uint64_t)v7, (uint64_t *)&unk_255848090);
    if (v20(v18, 1, v11) != 1 || v20(v19, 1, v11) != 1)
      return 0;
    goto LABEL_9;
  }
  sub_22643F6AC((uint64_t)v10, (uint64_t)v17, type metadata accessor for CapturedRoom.Surface.Curve);
  sub_22643D7A0(v19, (uint64_t)v7, (uint64_t *)&unk_255848090);
  if (v20((uint64_t)v7, 1, v11) == 1)
  {
    sub_22643D748((uint64_t)v17, type metadata accessor for CapturedRoom.Surface.Curve);
    goto LABEL_5;
  }
  sub_22643F6AC((uint64_t)v7, (uint64_t)v14, type metadata accessor for CapturedRoom.Surface.Curve);
  v21 = sub_2264502B8(v14);
  sub_22643D748((uint64_t)v14, type metadata accessor for CapturedRoom.Surface.Curve);
  sub_22643D748((uint64_t)v17, type metadata accessor for CapturedRoom.Surface.Curve);
  if ((v21 & 1) == 0)
    return 0;
LABEL_9:
  v23 = v28;
  v22 = v29;
  if (sub_2264CE50C((uint64_t)v29 + OBJC_IVAR____TtC8RoomPlan19ScanEntityMeshModel_leftStrut, (uint64_t)v28 + OBJC_IVAR____TtC8RoomPlan19ScanEntityMeshModel_leftStrut))
  {
    return 0;
  }
  if (sub_2264CE50C((uint64_t)v22 + OBJC_IVAR____TtC8RoomPlan19ScanEntityMeshModel_rightStrut, (uint64_t)v23 + OBJC_IVAR____TtC8RoomPlan19ScanEntityMeshModel_rightStrut))
  {
    return 0;
  }
  v24 = vsubq_f32(v22[1], v23[1]);
  v25 = (int32x4_t)vmulq_f32(v24, v24);
  if (vaddq_f32((float32x4_t)vdupq_laneq_s32(v25, 2), vaddq_f32((float32x4_t)v25, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v25.i8, 1))).f32[0] >= (float)(a2 * a2)|| !sub_2264CC044(*(float32x4_t **)((char *)v23->i64 + OBJC_IVAR____TtC8RoomPlan19ScanEntityMeshModel_polygonCorners), *(float32x4_t **)((char *)v22->i64 + OBJC_IVAR____TtC8RoomPlan19ScanEntityMeshModel_polygonCorners), a2)|| (sub_2264CC0DC(*(unint64_t *)((char *)v23->u64 + OBJC_IVAR____TtC8RoomPlan19ScanEntityMeshModel_straightOpeningElements), *(unint64_t *)((char *)v22->u64 + OBJC_IVAR____TtC8RoomPlan19ScanEntityMeshModel_straightOpeningElements), a2) & 1) == 0|| (sub_2264CC48C(*(unint64_t *)((char *)v23->u64 + OBJC_IVAR____TtC8RoomPlan19ScanEntityMeshModel_curvedOpeningElements), *(unint64_t *)((char *)v22->u64 + OBJC_IVAR____TtC8RoomPlan19ScanEntityMeshModel_curvedOpeningElements), a2) & 1) == 0)
  {
    return 0;
  }
  return sub_2264CC7D4(*(float32x4_t **)((char *)v23->i64 + OBJC_IVAR____TtC8RoomPlan19ScanEntityMeshModel_childObjectElements), *(float32x4_t **)((char *)v22->i64 + OBJC_IVAR____TtC8RoomPlan19ScanEntityMeshModel_childObjectElements), a2);
}

uint64_t sub_2264CCE64()
{
  uint64_t v0;

  sub_22643D7E4(v0 + OBJC_IVAR____TtC8RoomPlan19ScanEntityMeshModel_curve, (uint64_t *)&unk_255848090);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22643D7E4(v0 + OBJC_IVAR____TtC8RoomPlan19ScanEntityMeshModel_leftStrut, &qword_255840818);
  sub_22643D7E4(v0 + OBJC_IVAR____TtC8RoomPlan19ScanEntityMeshModel_rightStrut, &qword_255840818);
  return v0;
}

uint64_t sub_2264CCF28()
{
  sub_2264CCE64();
  return swift_deallocClassInstance();
}

uint64_t sub_2264CCF4C()
{
  return type metadata accessor for ScanEntityMeshModel();
}

uint64_t type metadata accessor for ScanEntityMeshModel()
{
  uint64_t result;

  result = qword_2558467D8;
  if (!qword_2558467D8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2264CCF90()
{
  unint64_t v0;
  unint64_t v1;

  sub_226443548(319, &qword_255840B50, (void (*)(uint64_t))type metadata accessor for CapturedRoom.Surface.Curve);
  if (v0 <= 0x3F)
  {
    sub_226443548(319, &qword_255840B58, (void (*)(uint64_t))type metadata accessor for ScanItemStrut);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

float32x4_t *sub_2264CD060(int64_t a1, unsigned __int32 a2, float32x4_t a3, float32x4_t a4, __n128 a5, __n128 a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  unsigned __int32 v29;
  float32x4_t v30;
  unint64_t v31;
  unint64_t v32;
  float32x4_t v33;
  float32x4_t v34;
  float32x4_t v35;
  float32x4_t v36;
  float32x4_t v37;
  unint64_t v38;
  float32x4_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t *v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  __n128 v65;
  uint64_t *v66;
  uint64_t *v67;
  uint64_t v68;
  float32x4_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  float32x4_t v77;
  float32x4_t v78;
  float32x4_t v79;
  float32x4_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t *v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  float32x4_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  float32x4_t v97;
  float32x4_t v98;
  float32x4_t v99;
  float32x4_t v100;
  uint64_t v101;
  BOOL v102;
  uint64_t v103;
  float32x2_t v104;
  float32x2_t v105;
  int32x2_t v106;
  unint64_t v107;
  uint64_t v108;
  float32x2_t v109;
  float32x2_t v110;
  int32x2_t v111;
  unint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  float32x4_t v118;
  float32x4_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  _QWORD *v125;
  uint64_t v126;
  BOOL v127;
  uint64_t *v128;
  __n128 v129;
  uint64_t *v130;
  uint64_t *v131;
  float32x4_t v132;
  float32x4_t v133;
  float32x4_t v134;
  float32x4_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  uint64_t v143;
  float32x2_t v144;
  float32x2_t v145;
  int32x2_t v146;
  int64_t v147;
  uint64_t v148;
  int32x2_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  int64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  float32x4_t *v160;
  uint64_t v161;
  uint64_t v163;
  __int128 v164;
  __int128 v165;
  uint64_t v166;
  unint64_t v167;
  char *v168;
  char *v169;
  char *v170;
  unint64_t v171;
  int64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  __n128 v176;
  __n128 v177;
  __n128 v178;
  simd_float4 v179;
  simd_float4 v180;
  __int128 v181;
  __int128 v182;
  float32x4_t v183;
  float32x4_t v184;
  float32x4_t v185;
  float32x4_t v186;
  float32x4_t v187;
  float32x4_t v188;
  float32x4_t v189;
  unint64_t v190;
  unint64_t v191;
  uint64_t v192;
  _QWORD v193[6];
  _QWORD v194[4];
  char v195;
  simd_float4x4 v196;
  simd_float4x4 v197;

  v181 = (__int128)a5;
  v182 = (__int128)a6;
  v179 = (simd_float4)a3;
  v180 = (simd_float4)a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255840818);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v166 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v166 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848090);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v166 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (unint64_t)&v166 - v19;
  MEMORY[0x24BDAC7A8](v21);
  v173 = (uint64_t)&v166 - v22;
  v169 = v14;
  v170 = v11;
  if ((a2 & 1) != 0)
  {
    v189 = *(float32x4_t *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_dollhouseDimensions);
    v26 = swift_bridgeObjectRetain();
    v24 = sub_22644618C(v26);
    swift_bridgeObjectRelease();
    v25 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_dollhouseCurve;
  }
  else
  {
    v189 = *(float32x4_t *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_worldSpaceDimensions);
    v23 = swift_bridgeObjectRetain();
    v24 = sub_22644618C(v23);
    swift_bridgeObjectRelease();
    v25 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_worldSpaceCurve;
  }
  v27 = a1 + *v25;
  swift_beginAccess();
  sub_22643D7A0(v27, v173, (uint64_t *)&unk_255848090);
  v196.columns[0] = v179;
  v196.columns[1] = v180;
  v196.columns[2] = (simd_float4)v181;
  v196.columns[3] = (simd_float4)v182;
  v197 = __invert_f4(v196);
  v187 = (float32x4_t)v197.columns[1];
  v188 = (float32x4_t)v197.columns[0];
  v185 = (float32x4_t)v197.columns[3];
  v186 = (float32x4_t)v197.columns[2];
  v28 = *(_QWORD *)(v24 + 16);
  v172 = a1;
  if (v28)
  {
    v29 = a2;
    v194[0] = MEMORY[0x24BEE4AF8];
    sub_2264C1310(0, v28, 0);
    v6 = 0;
    v31 = v194[0];
    v32 = *(_QWORD *)(v194[0] + 16);
    v34 = v187;
    v33 = v188;
    v36 = v185;
    v35 = v186;
    do
    {
      v37 = *(float32x4_t *)(v24 + 16 * v6 + 32);
      v194[0] = v31;
      v38 = *(_QWORD *)(v31 + 24);
      if (v32 >= v38 >> 1)
      {
        v183 = v37;
        v184 = v30;
        sub_2264C1310(v38 > 1, v32 + 1, 1);
        v37 = v183;
        v30.i32[3] = v184.i32[3];
        v36 = v185;
        v35 = v186;
        v34 = v187;
        v33 = v188;
        v31 = v194[0];
      }
      v39 = vaddq_f32(v36, vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v33, v37.f32[0]), v34, *(float32x2_t *)v37.f32, 1), v35, v37, 2));
      ++v6;
      v39.i32[3] = v30.i32[3];
      *(_QWORD *)(v31 + 16) = v32 + 1;
      *(float32x4_t *)(v31 + 16 * v32++ + 32) = v39;
      v30 = v39;
    }
    while (v28 != v6);
    swift_bridgeObjectRelease();
    a1 = v172;
    a2 = v29;
  }
  else
  {
    swift_bridgeObjectRelease();
    v31 = MEMORY[0x24BEE4AF8];
  }
  v40 = OBJC_IVAR____TtC8RoomPlan8ScanItem_type;
  v41 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_type);
  v167 = v31;
  v168 = v17;
  if (v41 == 2)
  {
    if (qword_25583F808 != -1)
      swift_once();
    v42 = qword_25585AC80;
    swift_beginAccess();
    v31 = *(_QWORD *)(v42 + 24);
    swift_retain();
    v43 = swift_bridgeObjectRetain();
    v44 = 0;
    sub_226509E3C(v43, a1);
    v46 = v45;
    swift_release();
  }
  else
  {
    v44 = 0;
    v46 = MEMORY[0x24BEE4AF8];
  }
  v47 = (uint64_t *)type metadata accessor for CapturedRoom.Surface.Curve(0);
  v183.i64[0] = *(_QWORD *)(*(v47 - 1) + 48);
  if (((uint64_t (*)(uint64_t, uint64_t, uint64_t *))v183.i64[0])(v173, 1, v47) == 1)
  {
    swift_bridgeObjectRetain();
    v184.i64[0] = v46;
  }
  else
  {
    v184.i64[0] = MEMORY[0x24BEE4AF8];
  }
  v48 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t *))v183.i64[0])(v173, 1, v47);
  v174 = v46;
  v175 = 0;
  if (v48 == 1)
  {
    v171 = MEMORY[0x24BEE4AF8];
    goto LABEL_39;
  }
  v178.n128_u64[0] = v40;
  v194[0] = MEMORY[0x24BEE4AF8];
  if ((unint64_t)v46 >> 62)
  {
    if (v46 < 0)
      v31 = v46;
    else
      v31 = v46 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v6 = sub_22655D400();
    if (v6)
      goto LABEL_23;
  }
  else
  {
    v6 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_23:
      if (v6 < 1)
      {
        __break(1u);
        goto LABEL_261;
      }
      v177.n128_u32[0] = a2;
      v49 = 0;
      v44 = v46 & 0xC000000000000001;
      do
      {
        if (v44)
        {
          v50 = MEMORY[0x2276999E4](v49, v46);
        }
        else
        {
          v50 = *(_QWORD *)(v46 + 8 * v49 + 32);
          swift_retain();
        }
        sub_22643D7A0(v50 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawCurve, v20, (uint64_t *)&unk_255848090);
        v51 = ((uint64_t (*)(unint64_t, uint64_t, uint64_t *))v183.i64[0])(v20, 1, v47);
        sub_22643D7E4(v20, (uint64_t *)&unk_255848090);
        if (v51 == 1)
        {
          swift_release();
        }
        else
        {
          sub_22655D364();
          sub_22655D388();
          v46 = v174;
          sub_22655D394();
          sub_22655D370();
        }
        ++v49;
      }
      while (v6 != v49);
      swift_bridgeObjectRelease();
      v171 = v194[0];
      a1 = v172;
      LOBYTE(a2) = v177.n128_u8[0];
      goto LABEL_38;
    }
  }
  swift_bridgeObjectRelease();
  v171 = MEMORY[0x24BEE4AF8];
LABEL_38:
  v40 = v178.n128_u64[0];
LABEL_39:
  LODWORD(v52) = a2 & 1;
  v53 = *(unsigned __int8 *)(a1 + v40);
  v54 = MEMORY[0x24BEE4AF8];
  v47 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_dollhouseDimensions;
  if (v53 == 3)
  {
    v20 = v184.i64[0];
    if (qword_25583F808 != -1)
      swift_once();
    swift_beginAccess();
    swift_retain();
    v55 = swift_bridgeObjectRetain();
    v44 = v175;
    sub_22649BAD0(v55, a1);
    v31 = v56;
    v175 = v44;
    swift_release();
  }
  else
  {
    v31 = MEMORY[0x24BEE4AF8];
    v20 = v184.i64[0];
  }
  v192 = v31;
  v183.i32[0] = (int)v52;
  if ((_DWORD)v52)
    goto LABEL_62;
  v44 = v31 >> 62;
  if (v31 >> 62)
  {
    if ((v31 & 0x8000000000000000) != 0)
      v54 = v31;
    else
      v54 = v31 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v6 = sub_22655D400();
    if (v6)
      goto LABEL_47;
LABEL_57:
    swift_bridgeObjectRelease();
    if (v44)
    {
      swift_bridgeObjectRetain();
      a1 = sub_22655D400();
      swift_bridgeObjectRelease();
    }
    else
    {
      a1 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    goto LABEL_59;
  }
  v6 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6)
    goto LABEL_57;
LABEL_47:
  if ((v31 & 0xC000000000000001) != 0)
  {
    a1 = 0;
    v54 = (uint64_t)&OBJC_IVAR____TtC8RoomPlan8ScanItem_category;
    while (1)
    {
      LODWORD(v52) = *(unsigned __int8 *)(MEMORY[0x2276999E4](a1, v31) + OBJC_IVAR____TtC8RoomPlan8ScanItem_category);
      swift_unknownObjectRelease();
      if ((_DWORD)v52 == 10)
        break;
      v57 = a1 + 1;
      if (__OFADD__(a1, 1))
        goto LABEL_123;
      ++a1;
      if (v57 == v6)
        goto LABEL_57;
    }
  }
  else
  {
    a1 = 0;
    while (*(_BYTE *)(*(_QWORD *)(v31 + 8 * a1 + 32) + OBJC_IVAR____TtC8RoomPlan8ScanItem_category) != 10)
    {
      v58 = a1 + 1;
      if (__OFADD__(a1, 1))
        goto LABEL_127;
      ++a1;
      if (v58 == v6)
        goto LABEL_57;
    }
  }
  swift_bridgeObjectRelease();
  v6 = a1 + 1;
  if (__OFADD__(a1, 1))
    goto LABEL_262;
  if (v44)
    goto LABEL_263;
  v54 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v6 != v54)
    goto LABEL_87;
LABEL_59:
  LODWORD(v52) = v183.i32[0];
  if (v31 >> 62)
    goto LABEL_121;
  while (1)
  {
    v54 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v54 >= a1)
      goto LABEL_61;
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    swift_bridgeObjectRetain();
    v59 = sub_22655D400();
    swift_bridgeObjectRelease();
    v60 = (uint64_t)&unk_22655F000;
    if (!v59)
      goto LABEL_130;
LABEL_64:
    v194[0] = v54;
    v31 = (unint64_t)v194;
    sub_22655D37C();
    if ((v59 & 0x8000000000000000) == 0)
    {
      if ((v20 & 0xC000000000000001) != 0)
      {
        v61 = 0;
        v178 = (__n128)xmmword_22655FA70;
        do
        {
          v62 = MEMORY[0x2276999E4](v61, v184.i64[0]);
          v63 = v62;
          v64 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_worldSpacePosition;
          if ((_DWORD)v52)
            v64 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_dollhousePosition;
          v65 = *(__n128 *)(v62 + *v64);
          v66 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_worldSpaceOrientation;
          if ((_DWORD)v52)
          {
            v66 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_dollhouseOrientation;
            v67 = v47;
          }
          else
          {
            v67 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_worldSpaceDimensions;
          }
          v68 = MEMORY[0x227699714](v65, *(__n128 *)(v62 + *v66), v178);
          v69 = *(float32x4_t *)(v63 + *v67);
          ++v61;
          *((_QWORD *)&v165 + 1) = v189.i64[1];
          sub_22655A9B4(v77, v78, v79, v80, v69, v188, v187, v186, v68, v70, v71, v72, v73, v74, v75, v76, v185, *(float32x2_t *)v189.f32);
          swift_unknownObjectRelease();
          sub_22655D364();
          sub_22655D388();
          LODWORD(v52) = v183.i32[0];
          sub_22655D394();
          sub_22655D370();
        }
        while (v59 != v61);
      }
      else
      {
        v81 = (uint64_t *)(v20 + 32);
        v176 = (__n128)xmmword_22655FA70;
        do
        {
          v83 = *v81++;
          v82 = v83;
          v84 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_worldSpacePosition;
          if ((_DWORD)v52)
            v84 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_dollhousePosition;
          v178 = *(__n128 *)(v82 + *v84);
          v85 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_worldSpaceOrientation;
          if ((_DWORD)v52)
            v85 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_dollhouseOrientation;
          v177 = *(__n128 *)(v82 + *v85);
          if ((_DWORD)v52)
            v86 = v47;
          else
            v86 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_worldSpaceDimensions;
          v87 = swift_retain();
          v88 = MEMORY[0x227699714](v87, v178, v177, v176);
          v89 = *(float32x4_t *)(v82 + *v86);
          *((_QWORD *)&v165 + 1) = v189.i64[1];
          sub_22655A9B4(v97, v98, v99, v100, v89, v188, v187, v186, v88, v90, v91, v92, v93, v94, v95, v96, v185, *(float32x2_t *)v189.f32);
          swift_release();
          sub_22655D364();
          sub_22655D388();
          sub_22655D394();
          sub_22655D370();
          --v59;
        }
        while (v59);
      }
      v31 = v194[0];
      swift_bridgeObjectRelease();
      v60 = 0x22655F000;
      goto LABEL_131;
    }
    __break(1u);
LABEL_242:
    v103 = MEMORY[0x2276999E4](0, v31);
LABEL_135:
    v104 = *(float32x2_t *)(v103 + 16);
    v105 = *(float32x2_t *)(v103 + 32);
    swift_release();
    v106 = vceq_f32(v104, v105);
    if ((v106.i8[0] & 1) != 0 || (v106.i8[4] & 1) != 0)
      break;
    if (v20 == 1)
      goto LABEL_174;
    if (v44)
    {
      a1 = 1;
      while (1)
      {
        v143 = MEMORY[0x2276999E4](a1, v31);
        v144 = *(float32x2_t *)(v143 + 16);
        v145 = *(float32x2_t *)(v143 + 32);
        swift_unknownObjectRelease();
        v146 = vceq_f32(v144, v145);
        if ((v146.i8[0] & 1) != 0 || (v146.i8[4] & 1) != 0)
          goto LABEL_216;
        v147 = a1 + 1;
        if (__OFADD__(a1, 1))
          break;
        ++a1;
        if (v147 == v20)
          goto LABEL_174;
      }
      __break(1u);
      goto LABEL_258;
    }
    v148 = 5;
    while (1)
    {
      a1 = v148 - 4;
      v149 = vceq_f32(*(float32x2_t *)(*(_QWORD *)(v31 + 8 * v148) + 16), *(float32x2_t *)(*(_QWORD *)(v31 + 8 * v148) + 32));
      if ((v149.i8[0] & 1) != 0 || (v149.i8[4] & 1) != 0)
      {
LABEL_216:
        swift_bridgeObjectRelease();
        v44 = a1 + 1;
        if (!__OFADD__(a1, 1))
          goto LABEL_138;
        __break(1u);
LABEL_219:
        __break(1u);
LABEL_220:
        __break(1u);
LABEL_221:
        __break(1u);
LABEL_222:
        __break(1u);
LABEL_223:
        __break(1u);
LABEL_224:
        __break(1u);
LABEL_225:
        __break(1u);
LABEL_226:
        __break(1u);
LABEL_227:
        __break(1u);
LABEL_228:
        __break(1u);
LABEL_229:
        swift_bridgeObjectRetain();
        v20 = sub_22655D400();
        if (!v20)
          goto LABEL_174;
LABEL_133:
        v44 = v31 & 0xC000000000000001;
        if ((v31 & 0xC000000000000001) == 0)
        {
          v103 = swift_retain();
          goto LABEL_135;
        }
        goto LABEL_242;
      }
      v150 = v148 - 3;
      if (__OFADD__(a1, 1))
        break;
      ++v148;
      if (v150 == v20)
        goto LABEL_174;
    }
LABEL_261:
    __break(1u);
LABEL_262:
    __break(1u);
LABEL_263:
    swift_bridgeObjectRetain();
    v54 = sub_22655D400();
    swift_bridgeObjectRelease();
    if (v6 == v54)
      goto LABEL_59;
LABEL_87:
    v60 = a1 + 5;
    v52 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_category;
    do
    {
      v20 = v60 - 4;
      v44 = v31 & 0xC000000000000001;
      if ((v31 & 0xC000000000000001) != 0)
      {
        v101 = MEMORY[0x2276999E4](v60 - 4, v31);
      }
      else
      {
        if ((v20 & 0x8000000000000000) != 0)
          goto LABEL_124;
        if (v20 >= *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_125;
        v101 = swift_retain();
      }
      v54 = *(unsigned __int8 *)(v101 + OBJC_IVAR____TtC8RoomPlan8ScanItem_category);
      swift_release();
      if ((_DWORD)v54 != 10)
      {
        if (v20 != a1)
        {
          if (v44)
          {
            v6 = MEMORY[0x2276999E4](a1, v31);
            v54 = MEMORY[0x2276999E4](v60 - 4, v31);
          }
          else
          {
            if (a1 < 0)
              goto LABEL_244;
            v44 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (a1 >= (unint64_t)v44)
              goto LABEL_245;
            v6 = *(_QWORD *)(v31 + 8 * a1 + 32);
            swift_retain();
            if ((v20 & 0x8000000000000000) != 0)
              goto LABEL_246;
            if (v20 >= v44)
              goto LABEL_247;
            v54 = *(_QWORD *)(v31 + 8 * v60);
            swift_retain();
          }
          if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
            || (v31 & 0x8000000000000000) != 0
            || (v31 & 0x4000000000000000) != 0)
          {
            sub_2264C10BC(v31);
          }
          *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20) = v54;
          swift_release();
          sub_22655CEE4();
          v31 = v192;
          if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
            || (v31 & 0x8000000000000000) != 0
            || (v31 & 0x4000000000000000) != 0)
          {
            sub_2264C10BC(v31);
          }
          if ((v20 & 0x8000000000000000) != 0)
            goto LABEL_248;
          if (v20 >= *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_249;
          *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 8 * v60) = v6;
          swift_release();
          sub_22655CEE4();
        }
        v102 = __OFADD__(a1++, 1);
        if (v102)
          goto LABEL_128;
      }
      v44 = v60 - 3;
      if (__OFADD__(v20, 1))
        goto LABEL_126;
      v31 = v192;
      if ((unint64_t)v192 >> 62)
      {
        swift_bridgeObjectRetain();
        v54 = sub_22655D400();
        swift_bridgeObjectRelease();
      }
      else
      {
        v54 = *(_QWORD *)((v192 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      ++v60;
    }
    while (v44 != v54);
    LODWORD(v52) = v183.i32[0];
    v20 = v184.i64[0];
    if (v31 >> 62)
    {
LABEL_121:
      swift_bridgeObjectRetain();
      v54 = sub_22655D400();
      swift_bridgeObjectRelease();
      if (v54 < a1)
        goto LABEL_122;
LABEL_61:
      sub_22650A2DC(a1, v54);
      v54 = MEMORY[0x24BEE4AF8];
LABEL_62:
      if (v20 >> 62)
        goto LABEL_129;
      v59 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
      v60 = (uint64_t)&unk_22655F000;
      if (v59)
        goto LABEL_64;
LABEL_130:
      swift_bridgeObjectRelease();
      v31 = MEMORY[0x24BEE4AF8];
LABEL_131:
      v191 = v31;
      v6 = v31 >> 62;
      if (!(v31 >> 62))
      {
        v20 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v20)
          goto LABEL_133;
LABEL_174:
        swift_bridgeObjectRelease();
        if (!v6)
        {
          a1 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_176;
        }
LABEL_258:
        swift_bridgeObjectRetain();
        a1 = sub_22655D400();
        swift_bridgeObjectRelease();
        goto LABEL_176;
      }
      goto LABEL_229;
    }
  }
  swift_bridgeObjectRelease();
  a1 = 0;
  v44 = 1;
LABEL_138:
  if (v6)
    goto LABEL_250;
  if (v44 != *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_140:
    v52 = (uint64_t *)(a1 + 5);
    while (1)
    {
      v107 = (unint64_t)v52 - 4;
      if ((v31 & 0xC000000000000001) != 0)
      {
        v108 = MEMORY[0x2276999E4]((char *)v52 - 4, v31);
      }
      else
      {
        if ((v107 & 0x8000000000000000) != 0)
          goto LABEL_219;
        if (v107 >= *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_220;
        v108 = swift_retain();
      }
      v109 = *(float32x2_t *)(v108 + 16);
      v110 = *(float32x2_t *)(v108 + 32);
      swift_release();
      v111 = vceq_f32(v109, v110);
      if (((v111.i32[0] | v111.i32[1]) & 1) == 0)
      {
        if (v107 != a1)
        {
          if ((v31 & 0xC000000000000001) != 0)
          {
            v6 = MEMORY[0x2276999E4](a1, v31);
            v113 = MEMORY[0x2276999E4]((char *)v52 - 4, v31);
          }
          else
          {
            if (a1 < 0)
              goto LABEL_223;
            v112 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (a1 >= v112)
              goto LABEL_224;
            v6 = *(_QWORD *)(v31 + 8 * a1 + 32);
            swift_retain();
            if ((v107 & 0x8000000000000000) != 0)
              goto LABEL_225;
            if (v107 >= v112)
              goto LABEL_226;
            v113 = *(_QWORD *)(v31 + 8 * (_QWORD)v52);
            swift_retain();
          }
          if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
            || (v31 & 0x8000000000000000) != 0
            || (v31 & 0x4000000000000000) != 0)
          {
            sub_2264C10BC(v31);
          }
          *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20) = v113;
          swift_release();
          sub_22655CEE4();
          v31 = v191;
          if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
            || (v31 & 0x8000000000000000) != 0
            || (v31 & 0x4000000000000000) != 0)
          {
            sub_2264C10BC(v31);
          }
          if ((v107 & 0x8000000000000000) != 0)
            goto LABEL_227;
          if (v107 >= *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_228;
          *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 8 * (_QWORD)v52) = v6;
          swift_release();
          v31 = (unint64_t)&v191;
          sub_22655CEE4();
        }
        v102 = __OFADD__(a1++, 1);
        if (v102)
          goto LABEL_222;
      }
      v114 = (char *)v52 - 3;
      if (__OFADD__(v107, 1))
        goto LABEL_221;
      v31 = v191;
      if (v191 >> 62)
      {
        swift_bridgeObjectRetain();
        v115 = sub_22655D400();
        swift_bridgeObjectRelease();
      }
      else
      {
        v115 = *(_QWORD *)((v191 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v52 = (uint64_t *)((char *)v52 + 1);
      if (v114 == (char *)v115)
      {
        LODWORD(v52) = v183.i32[0];
        goto LABEL_176;
      }
    }
  }
  while (1)
  {
LABEL_176:
    if (v31 >> 62)
    {
      swift_bridgeObjectRetain();
      v116 = sub_22655D400();
      swift_bridgeObjectRelease();
      if (v116 < a1)
      {
LABEL_232:
        __break(1u);
        goto LABEL_233;
      }
    }
    else
    {
      v116 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v116 < a1)
        goto LABEL_232;
    }
    v117 = sub_22650A2E8(a1, v116);
    MEMORY[0x24BDAC7A8](v117);
    *((_BYTE *)&v166 - 112) = (_BYTE)v52;
    v118 = v187;
    *((float32x4_t *)&v166 - 6) = v188;
    *((float32x4_t *)&v166 - 5) = v118;
    v119 = v185;
    *((float32x4_t *)&v166 - 4) = v186;
    *((float32x4_t *)&v166 - 3) = v119;
    *(_QWORD *)&v164 = v173;
    v165 = (__int128)v189;
    a1 = v171;
    v120 = sub_2264B4384((void (*)(uint64_t *__return_ptr, uint64_t *))sub_2264CE724, (uint64_t)(&v166 - 16), v171);
    swift_bridgeObjectRelease();
    v190 = v120;
    if (!(v120 >> 62))
    {
      v44 = *(_QWORD *)((v120 & 0xFFFFFFFFFFFFF8) + 0x10);
      v121 = v44 - 25;
      if (v44 <= 25)
        goto LABEL_181;
LABEL_180:
      sub_2264CCAB0(v121);
      goto LABEL_181;
    }
LABEL_233:
    swift_bridgeObjectRetain();
    v44 = sub_22655D400();
    swift_bridgeObjectRelease();
    v121 = v44 - 25;
    if (v44 > 25)
      goto LABEL_180;
LABEL_181:
    v122 = v192;
    if ((unint64_t)v192 >> 62)
    {
      if (v192 < 0)
        v44 = v192;
      else
        v44 = v192 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n();
      v31 = sub_22655D400();
      v175 = v122;
      if (!v31)
      {
LABEL_239:
        swift_bridgeObjectRelease_n();
        v124 = (_QWORD *)MEMORY[0x24BEE4AF8];
        goto LABEL_240;
      }
    }
    else
    {
      v31 = *(_QWORD *)((v192 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      v175 = v122;
      if (!v31)
        goto LABEL_239;
    }
    if ((uint64_t)v31 >= 1)
      break;
    __break(1u);
LABEL_244:
    __break(1u);
LABEL_245:
    __break(1u);
LABEL_246:
    __break(1u);
LABEL_247:
    __break(1u);
LABEL_248:
    __break(1u);
LABEL_249:
    __break(1u);
LABEL_250:
    swift_bridgeObjectRetain();
    v163 = sub_22655D400();
    swift_bridgeObjectRelease();
    if (v44 != v163)
      goto LABEL_140;
  }
  v123 = 0;
  v124 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v177.n128_u64[0] = v122 & 0xC000000000000001;
  v176 = *(__n128 *)(v60 + 2672);
  v178.n128_u64[0] = v31;
  do
  {
    if (v177.n128_u64[0])
    {
      v126 = MEMORY[0x2276999E4](v123, v122);
    }
    else
    {
      v126 = *(_QWORD *)(v122 + 8 * v123 + 32);
      swift_retain();
    }
    v127 = (_DWORD)v52 == 0;
    v128 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_worldSpacePosition;
    if ((_DWORD)v52)
      v128 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_dollhousePosition;
    v129 = *(__n128 *)(v126 + *v128);
    v130 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_worldSpaceOrientation;
    if ((_DWORD)v52)
      v130 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_dollhouseOrientation;
    v52 = v47;
    if (v127)
      v131 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_worldSpaceDimensions;
    else
      v131 = v47;
    *(double *)v132.i64 = MEMORY[0x227699714](v129, *(__n128 *)(v126 + *v130), v176);
    v187 = v133;
    v188 = v132;
    v185 = v135;
    v186 = v134;
    v184 = *(float32x4_t *)(v126 + *v131);
    v136 = sub_226464594(*(unsigned __int8 *)(v126 + OBJC_IVAR____TtC8RoomPlan8ScanItem_category));
    sub_226464C40(v136, (uint64_t)v193, v184, v188, v187, v186, v185, v189, (float32x4_t)v179, (float32x4_t)v180, v181, v182);
    v138 = v193[0];
    v137 = v193[1];
    v140 = v193[2];
    v139 = v193[3];
    swift_release();
    sub_226446554((uint64_t)v193, (uint64_t)v194, &qword_2558432F8);
    if ((v195 & 1) == 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v124 = sub_226486F68(0, v124[2] + 1, 1, v124);
      v142 = v124[2];
      v141 = v124[3];
      if (v142 >= v141 >> 1)
        v124 = sub_226486F68((_QWORD *)(v141 > 1), v142 + 1, 1, v124);
      v124[2] = v142 + 1;
      v125 = &v124[4 * v142];
      v125[4] = v138;
      v125[5] = v137;
      v125[6] = v140;
      v125[7] = v139;
      v122 = v175;
    }
    ++v123;
    v47 = v52;
    LODWORD(v52) = v183.i32[0];
  }
  while (v178.n128_u64[0] != v123);
  swift_bridgeObjectRelease_n();
  v175 = v192;
LABEL_240:
  v151 = v173;
  v152 = (uint64_t)v168;
  sub_22643D7A0(v173, (uint64_t)v168, (uint64_t *)&unk_255848090);
  v153 = v190;
  v154 = v191;
  v155 = v172;
  v156 = v172 + OBJC_IVAR____TtC8RoomPlan8ScanItem_dollhouseLeftStrut;
  swift_beginAccess();
  v157 = (uint64_t)v169;
  sub_22643D7A0(v156, (uint64_t)v169, &qword_255840818);
  v158 = v155 + OBJC_IVAR____TtC8RoomPlan8ScanItem_dollhouseRightStrut;
  swift_beginAccess();
  v159 = (uint64_t)v170;
  sub_22643D7A0(v158, (uint64_t)v170, &qword_255840818);
  type metadata accessor for ScanEntityMeshModel();
  v160 = (float32x4_t *)swift_allocObject();
  v160[1] = v189;
  sub_226446554(v152, (uint64_t)v160 + OBJC_IVAR____TtC8RoomPlan19ScanEntityMeshModel_curve, (uint64_t *)&unk_255848090);
  *(uint64_t *)((char *)v160->i64 + OBJC_IVAR____TtC8RoomPlan19ScanEntityMeshModel_polygonCorners) = v167;
  *(uint64_t *)((char *)v160->i64 + OBJC_IVAR____TtC8RoomPlan19ScanEntityMeshModel_childOpenings) = v174;
  *(uint64_t *)((char *)v160->i64 + OBJC_IVAR____TtC8RoomPlan19ScanEntityMeshModel_childObjects) = v175;
  *(uint64_t *)((char *)v160->i64 + OBJC_IVAR____TtC8RoomPlan19ScanEntityMeshModel_straightOpeningElements) = v154;
  *(uint64_t *)((char *)v160->i64 + OBJC_IVAR____TtC8RoomPlan19ScanEntityMeshModel_curvedOpeningElements) = v153;
  v161 = (uint64_t)v160 + OBJC_IVAR____TtC8RoomPlan19ScanEntityMeshModel_leftStrut;
  *(uint64_t *)((char *)v160->i64 + OBJC_IVAR____TtC8RoomPlan19ScanEntityMeshModel_childObjectElements) = (uint64_t)v124;
  sub_226446554(v157, v161, &qword_255840818);
  sub_226446554(v159, (uint64_t)v160 + OBJC_IVAR____TtC8RoomPlan19ScanEntityMeshModel_rightStrut, &qword_255840818);
  sub_22643D7E4(v151, (uint64_t *)&unk_255848090);
  return v160;
}

BOOL sub_2264CE50C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  float32x2_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  BOOL v19;
  uint64_t v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255840818);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v21 - v8;
  v10 = type metadata accessor for ScanItemStrut();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (float32x2_t *)((char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v21 - v15;
  sub_22643D7A0(a1, (uint64_t)v9, &qword_255840818);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v17(v9, 1, v10) == 1)
  {
    v6 = v9;
  }
  else
  {
    sub_22643F6AC((uint64_t)v9, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ScanItemStrut);
    sub_22643D7A0(a2, (uint64_t)v6, &qword_255840818);
    if (v17(v6, 1, v10) != 1)
    {
      sub_22643F6AC((uint64_t)v6, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ScanItemStrut);
      v19 = sub_22644FC1C(v13, 0.001);
      sub_22643D748((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ScanItemStrut);
      sub_22643D748((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ScanItemStrut);
      return !v19;
    }
    sub_22643D748((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ScanItemStrut);
  }
  sub_22643D7E4((uint64_t)v6, &qword_255840818);
  return v17((char *)a1, 1, v10) != 1 || v17((char *)a2, 1, v10) != 1;
}

void sub_2264CE724(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  float32x4_t *v2;

  sub_2264CC8B4(a1, v2[1].i8[0], v2[6].i64[0], a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_2264CE750(uint64_t a1)
{
  uint64_t v1;
  unsigned int *v2;
  char *v3;
  unsigned int v4;
  __int32 v5;
  int32x4_t v6;
  uint64_t inited;
  unint64_t v8;
  int32x4_t v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v19;
  BOOL v20;
  uint64_t v21;
  uint64_t result;
  int32x4_t v23;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  v2 = (unsigned int *)(swift_bridgeObjectRetain() + 44);
  v3 = (char *)MEMORY[0x24BEE4AF8];
  do
  {
    v5 = *(v2 - 1);
    v4 = *v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255843A78);
    v6.i64[0] = *(_QWORD *)(v2 - 3);
    v23 = v6;
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 32) = v23.i64[0];
    v8 = inited + 32;
    v9.i32[0] = v5;
    v9.i64[0] = vzip1q_s32(v9, v23).u64[0];
    v9.i64[1] = __PAIR64__(v4, v9.u32[0]);
    *(_OWORD *)(inited + 16) = xmmword_226566570;
    *(int32x4_t *)(inited + 40) = v9;
    v10 = *((_QWORD *)v3 + 2);
    v11 = v10 + 6;
    if (__OFADD__(v10, 6))
    {
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
    }
    v12 = inited;
    isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
    if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v14 = *((_QWORD *)v3 + 3) >> 1, v14 < v11))
    {
      if (v10 <= v11)
        v15 = v10 + 6;
      else
        v15 = v10;
      v3 = sub_226486AEC(isUniquelyReferenced_nonNull_native, v15, 1, v3);
      v14 = *((_QWORD *)v3 + 3) >> 1;
    }
    v16 = *((_QWORD *)v3 + 2);
    if (v14 - v16 < 6)
      goto LABEL_22;
    v17 = &v3[4 * v16 + 32];
    if (v8 < (unint64_t)&v3[4 * v16 + 56] && (unint64_t)v17 < v12 + 56)
    {
      result = sub_22655D43C();
      __break(1u);
      return result;
    }
    v19 = *(_OWORD *)v8;
    *(_QWORD *)&v3[4 * v16 + 48] = *(_QWORD *)(v8 + 16);
    *(_OWORD *)v17 = v19;
    v20 = __OFADD__(v16, 6);
    v21 = v16 + 6;
    if (v20)
      goto LABEL_23;
    v2 += 4;
    *((_QWORD *)v3 + 2) = v21;
    swift_bridgeObjectRelease();
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return (uint64_t)v3;
}

uint64_t sub_2264CE94C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RoomCaptureMesh()
{
  return objc_opt_self();
}

_QWORD *sub_2264CE9A0(unint64_t a1)
{
  unint64_t v2;
  uint64_t i;
  unint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  int32x2_t *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int32x2_t *v15;
  int32x2_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _OWORD *v25;
  int64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  int64_t v40;
  int64_t v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  int64_t v45;
  __int128 v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  int64_t v58;
  int64_t v59;
  _OWORD *v60;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v62;
  unint64_t v63;
  int64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  int64_t v72;
  int64_t v73;
  _QWORD *v74;
  unint64_t v75;
  unint64_t v76;
  int64_t v77;
  unint64_t v78;
  unint64_t v79;
  __int128 v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  _QWORD *v87;
  _QWORD *v88;
  _QWORD *result;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  unint64_t v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;

  v2 = a1 >> 62;
  if (a1 >> 62)
    goto LABEL_123;
  for (i = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10); ; i = sub_22655D400())
  {
    if ((unint64_t)(i - 0x2000000000000000) >> 62 != 3)
    {
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      result = (_QWORD *)sub_22655D3DC();
      __break(1u);
      return result;
    }
    v4 = 4 * i;
    if (4 * i < 0 || HIDWORD(v4))
      goto LABEL_127;
    if ((_DWORD)v4)
    {
      v5 = 0;
      v6 = 0;
      while (1)
      {
        v7 = v5 + 1;
        if (__OFADD__(v5, 1))
          break;
        v8 = __CFADD__(v6, 4);
        v6 += 4;
        if (v8)
          v6 = -1;
        ++v5;
        if (v6 >= v4)
          goto LABEL_15;
      }
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
      goto LABEL_119;
    }
    v7 = 0;
LABEL_15:
    v101 = MEMORY[0x24BEE4AF8];
    sub_2264C12F4(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0)
      goto LABEL_125;
    v9 = v101;
    v10 = (int32x2_t *)&unk_226561000;
    if (v7)
    {
      v96 = v2;
      v2 = 0;
      while (v2 < v4)
      {
        if (v2 >= 0xFFFFFFFC)
          v11 = 0xFFFFFFFFLL;
        else
          v11 = (v2 + 4);
        if (v2 >= 0xFFFFFFFD)
          goto LABEL_117;
        v102 = v9;
        v13 = *(_QWORD *)(v9 + 16);
        v12 = *(_QWORD *)(v9 + 24);
        if (v13 >= v12 >> 1)
        {
          v15 = v10;
          sub_2264C12F4(v12 > 1, v13 + 1, 1);
          v10 = v15;
          v9 = v102;
        }
        *(_QWORD *)(v9 + 16) = v13 + 1;
        v14 = v9 + 16 * v13;
        *(_DWORD *)(v14 + 32) = v2;
        *(int32x2_t *)(v14 + 36) = vadd_s32(vdup_n_s32(v2), (int32x2_t)0x200000001);
        *(_DWORD *)(v14 + 44) = v2 + 3;
        v2 = v11;
        if (!--v7)
        {
          v2 = v96;
          if (v11 < v4)
            goto LABEL_30;
          goto LABEL_38;
        }
      }
      goto LABEL_116;
    }
    if ((_DWORD)v4)
    {
      LODWORD(v11) = 0;
LABEL_30:
      v16 = v10[494];
      do
      {
        v17 = v11 >= 0xFFFFFFFC ? -1 : v11 + 4;
        if (v11 >= 0xFFFFFFFD)
          goto LABEL_118;
        v19 = *(_QWORD *)(v9 + 16);
        v18 = *(_QWORD *)(v9 + 24);
        if (v19 >= v18 >> 1)
          sub_2264C12F4(v18 > 1, v19 + 1, 1);
        *(_QWORD *)(v9 + 16) = v19 + 1;
        v20 = v9 + 16 * v19;
        *(_DWORD *)(v20 + 32) = v11;
        *(int32x2_t *)(v20 + 36) = vadd_s32(vdup_n_s32(v11), v16);
        *(_DWORD *)(v20 + 44) = v11 + 3;
        LODWORD(v11) = v17;
      }
      while (v17 < v4);
    }
LABEL_38:
    v21 = sub_2264CE750(v9);
    swift_release();
    if (!v2)
    {
      v22 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v22)
        break;
      goto LABEL_40;
    }
    swift_bridgeObjectRetain();
    v22 = sub_22655D400();
    if (!v22)
      break;
LABEL_40:
    if (v22 < 1)
      goto LABEL_126;
    if ((a1 & 0xC000000000000001) == 0)
    {
      v57 = 0;
      v24 = (_QWORD *)MEMORY[0x24BEE4AF8];
      while (1)
      {
        v58 = v24[2];
        v59 = v58 + 4;
        if (__OFADD__(v58, 4))
          goto LABEL_121;
        v60 = *(_OWORD **)(a1 + 8 * v57 + 32);
        v91 = v60[1];
        v93 = v60[2];
        v95 = v60[3];
        v99 = v60[4];
        isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
        if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v62 = v24[3], v63 = v62 >> 1, (uint64_t)(v62 >> 1) < v59))
        {
          if (v58 <= v59)
            v64 = v58 + 4;
          else
            v64 = v58;
          v24 = sub_226486AE0(isUniquelyReferenced_nonNull_native, v64, 1, v24);
          v62 = v24[3];
          v63 = v62 >> 1;
        }
        v65 = v24[2];
        v66 = v65 + 1;
        if (v63 <= v65)
        {
          v24 = sub_226486AE0((_QWORD *)(v62 > 1), v65 + 1, 1, v24);
          v62 = v24[3];
          v63 = v62 >> 1;
        }
        v24[2] = v66;
        *(_OWORD *)&v24[2 * v65 + 4] = v91;
        v67 = v65 + 2;
        if ((uint64_t)v63 < (uint64_t)(v65 + 2))
          v24 = sub_226486AE0((_QWORD *)(v62 > 1), v65 + 2, 1, v24);
        v24[2] = v67;
        *(_OWORD *)&v24[2 * v66 + 4] = v93;
        v68 = v24[3];
        v69 = v65 + 3;
        if ((uint64_t)(v65 + 3) > (uint64_t)(v68 >> 1))
          v24 = sub_226486AE0((_QWORD *)(v68 > 1), v65 + 3, 1, v24);
        v24[2] = v69;
        *(_OWORD *)&v24[2 * v67 + 4] = v95;
        v70 = v24[3];
        if ((uint64_t)(v65 + 4) > (uint64_t)(v70 >> 1))
          v24 = sub_226486AE0((_QWORD *)(v70 > 1), v65 + 4, 1, v24);
        ++v57;
        v24[2] = v65 + 4;
        *(_OWORD *)&v24[2 * v69 + 4] = v99;
        if (v22 == v57)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          v71 = 0;
          v39 = (_QWORD *)MEMORY[0x24BEE4AF8];
          while (1)
          {
            v72 = v39[2];
            v73 = v72 + 4;
            if (__OFADD__(v72, 4))
              goto LABEL_122;
            v100 = *(_OWORD *)(*(_QWORD *)(a1 + 8 * v71 + 32) + 80);
            v74 = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
            if (!(_DWORD)v74 || (v75 = v39[3], v76 = v75 >> 1, (uint64_t)(v75 >> 1) < v73))
            {
              if (v72 <= v73)
                v77 = v72 + 4;
              else
                v77 = v72;
              v39 = sub_226486AE0(v74, v77, 1, v39);
              v75 = v39[3];
              v76 = v75 >> 1;
            }
            v78 = v39[2];
            v79 = v78 + 1;
            v80 = v100;
            if (v76 <= v78)
            {
              v85 = sub_226486AE0((_QWORD *)(v75 > 1), v78 + 1, 1, v39);
              v80 = v100;
              v39 = v85;
              v75 = v85[3];
              v76 = v75 >> 1;
            }
            v39[2] = v79;
            *(_OWORD *)&v39[2 * v78 + 4] = v80;
            v81 = v78 + 2;
            if ((uint64_t)v76 < (uint64_t)(v78 + 2))
            {
              v86 = sub_226486AE0((_QWORD *)(v75 > 1), v78 + 2, 1, v39);
              v80 = v100;
              v39 = v86;
            }
            v39[2] = v81;
            *(_OWORD *)&v39[2 * v79 + 4] = v80;
            v82 = v39[3];
            v83 = v78 + 3;
            if ((uint64_t)(v78 + 3) > (uint64_t)(v82 >> 1))
            {
              v87 = sub_226486AE0((_QWORD *)(v82 > 1), v78 + 3, 1, v39);
              v80 = v100;
              v39 = v87;
            }
            v39[2] = v83;
            *(_OWORD *)&v39[2 * v81 + 4] = v80;
            v84 = v39[3];
            if ((uint64_t)(v78 + 4) > (uint64_t)(v84 >> 1))
            {
              v88 = sub_226486AE0((_QWORD *)(v84 > 1), v78 + 4, 1, v39);
              v80 = v100;
              v39 = v88;
            }
            ++v71;
            v39[2] = v78 + 4;
            *(_OWORD *)&v39[2 * v83 + 4] = v80;
            if (v22 == v71)
            {
LABEL_113:
              swift_bridgeObjectRelease();
              goto LABEL_114;
            }
          }
        }
      }
    }
    v23 = 0;
    v24 = (_QWORD *)MEMORY[0x24BEE4AF8];
    while (1)
    {
      v25 = (_OWORD *)MEMORY[0x2276999E4](v23, a1);
      v90 = v25[1];
      v92 = v25[2];
      v94 = v25[3];
      v97 = v25[4];
      swift_unknownObjectRelease();
      v26 = v24[2];
      v27 = v26 + 4;
      if (__OFADD__(v26, 4))
        break;
      v28 = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
      if (!(_DWORD)v28 || (v29 = v24[3], v30 = v29 >> 1, (uint64_t)(v29 >> 1) < v27))
      {
        if (v26 <= v27)
          v31 = v26 + 4;
        else
          v31 = v26;
        v24 = sub_226486AE0(v28, v31, 1, v24);
        v29 = v24[3];
        v30 = v29 >> 1;
      }
      v32 = v24[2];
      v33 = v32 + 1;
      if (v30 <= v32)
      {
        v24 = sub_226486AE0((_QWORD *)(v29 > 1), v32 + 1, 1, v24);
        v29 = v24[3];
        v30 = v29 >> 1;
      }
      v24[2] = v33;
      *(_OWORD *)&v24[2 * v32 + 4] = v90;
      v34 = v32 + 2;
      if ((uint64_t)v30 < (uint64_t)(v32 + 2))
        v24 = sub_226486AE0((_QWORD *)(v29 > 1), v32 + 2, 1, v24);
      v24[2] = v34;
      *(_OWORD *)&v24[2 * v33 + 4] = v92;
      v35 = v24[3];
      v36 = v32 + 3;
      if ((uint64_t)(v32 + 3) > (uint64_t)(v35 >> 1))
        v24 = sub_226486AE0((_QWORD *)(v35 > 1), v32 + 3, 1, v24);
      v24[2] = v36;
      *(_OWORD *)&v24[2 * v34 + 4] = v94;
      v37 = v24[3];
      if ((uint64_t)(v32 + 4) > (uint64_t)(v37 >> 1))
        v24 = sub_226486AE0((_QWORD *)(v37 > 1), v32 + 4, 1, v24);
      ++v23;
      v24[2] = v32 + 4;
      *(_OWORD *)&v24[2 * v36 + 4] = v97;
      if (v22 == v23)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        v38 = 0;
        v39 = (_QWORD *)MEMORY[0x24BEE4AF8];
        while (1)
        {
          v98 = *(_OWORD *)(MEMORY[0x2276999E4](v38, a1) + 80);
          swift_unknownObjectRelease();
          v40 = v39[2];
          v41 = v40 + 4;
          if (__OFADD__(v40, 4))
            goto LABEL_120;
          v42 = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
          if (!(_DWORD)v42 || (v43 = v39[3], v44 = v43 >> 1, (uint64_t)(v43 >> 1) < v41))
          {
            if (v40 <= v41)
              v45 = v40 + 4;
            else
              v45 = v40;
            v39 = sub_226486AE0(v42, v45, 1, v39);
            v43 = v39[3];
            v44 = v43 >> 1;
          }
          v46 = v98;
          v47 = v39[2];
          v48 = v47 + 1;
          if (v44 <= v47)
          {
            v53 = sub_226486AE0((_QWORD *)(v43 > 1), v47 + 1, 1, v39);
            v46 = v98;
            v39 = v53;
            v43 = v53[3];
            v44 = v43 >> 1;
          }
          v39[2] = v48;
          *(_OWORD *)&v39[2 * v47 + 4] = v46;
          v49 = v47 + 2;
          if ((uint64_t)v44 < (uint64_t)(v47 + 2))
          {
            v54 = sub_226486AE0((_QWORD *)(v43 > 1), v47 + 2, 1, v39);
            v46 = v98;
            v39 = v54;
          }
          v39[2] = v49;
          *(_OWORD *)&v39[2 * v48 + 4] = v46;
          v50 = v39[3];
          v51 = v47 + 3;
          if ((uint64_t)(v47 + 3) > (uint64_t)(v50 >> 1))
          {
            v55 = sub_226486AE0((_QWORD *)(v50 > 1), v47 + 3, 1, v39);
            v46 = v98;
            v39 = v55;
          }
          v39[2] = v51;
          *(_OWORD *)&v39[2 * v49 + 4] = v46;
          v52 = v39[3];
          if ((uint64_t)(v47 + 4) > (uint64_t)(v52 >> 1))
          {
            v56 = sub_226486AE0((_QWORD *)(v52 > 1), v47 + 4, 1, v39);
            v46 = v98;
            v39 = v56;
          }
          ++v38;
          v39[2] = v47 + 4;
          *(_OWORD *)&v39[2 * v51 + 4] = v46;
          if (v22 == v38)
            goto LABEL_113;
        }
      }
    }
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    ;
  }
  swift_bridgeObjectRelease();
  v39 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v24 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_114:
  type metadata accessor for RoomCaptureMesh();
  result = (_QWORD *)swift_allocObject();
  result[2] = v24;
  result[3] = v39;
  result[4] = v21;
  return result;
}

uint64_t sub_2264CF330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_2264CF348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

void **initializeBufferWithCopyOfBuffer for CVPixelBufferCodableBox(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void destroy for CVPixelBufferCodableBox(id *a1)
{

}

void **assignWithCopy for CVPixelBufferCodableBox(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4;

  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **assignWithTake for CVPixelBufferCodableBox(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for CVPixelBufferCodableBox(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CVPixelBufferCodableBox(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CVPixelBufferCodableBox()
{
  return &type metadata for CVPixelBufferCodableBox;
}

uint64_t sub_2264CF4C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

double sub_2264CF4EC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a3 = xmmword_2265665F0;
  *(_QWORD *)(a3 + 16) = a1;
  *(_QWORD *)(a3 + 24) = a2;
  return result;
}

uint64_t sub_2264CF500()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_2264CF50C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = sub_22655D544();
  *a2 = a1;
  a2[1] = 0;
  a2[2] = result;
  a2[3] = v5;
  return result;
}

uint64_t sub_2264CF560()
{
  sub_2264D0978();
  return sub_22655D6A0();
}

uint64_t sub_2264CF588()
{
  sub_2264D0978();
  return sub_22655D6AC();
}

int64_t sub_2264CF5B0(_QWORD *a1)
{
  __CVBuffer *v1;
  __CVBuffer *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __CVBuffer *v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t);
  char *v14;
  uint64_t v15;
  int64_t result;
  uint64_t v17;
  size_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  __CVBuffer *v23;
  _BYTE *BaseAddressOfPlane;
  _BYTE *v25;
  int64_t HeightOfPlane;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _BYTE *BaseAddress;
  _BYTE *v33;
  int64_t Height;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  CVPixelBufferRef v45;
  size_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  size_t v59;
  unint64_t v60;
  uint64_t v61;

  v2 = v1;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558469B0);
  v4 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558469B8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2264D08F0();
  v11 = v2;
  sub_22655D694();
  CVPixelBufferGetPlaneCount(v2);
  LOBYTE(v55) = 0;
  v12 = v61;
  sub_22655D508();
  if (v12)
    goto LABEL_3;
  v61 = v4;
  CVPixelBufferGetPixelFormatType(v2);
  LOBYTE(v55) = 1;
  sub_22655D520();
  CVPixelBufferGetWidth(v2);
  LOBYTE(v55) = 2;
  sub_22655D508();
  CVPixelBufferGetHeight(v2);
  LOBYTE(v55) = 3;
  sub_22655D508();
  CVPixelBufferIsPlanar(v2);
  LOBYTE(v55) = 5;
  sub_22655D4F0();
  CVPixelBufferLockBaseAddress(v2, 1uLL);
  if (CVPixelBufferIsPlanar(v2))
  {
    LOBYTE(v55) = 4;
    sub_2264D0978();
    v40 = v7;
    sub_22655D4D8();
    result = CVPixelBufferGetPlaneCount(v2);
    if (result < 0)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v45 = v2;
    v17 = v61;
    if (result)
    {
      v18 = 0;
      v43 = v6;
      v44 = 0x800000022656E390;
      v41 = result;
      v42 = v8;
      while (result != v18)
      {
        v55 = 0x746144656E616C70;
        v56 = 0xE900000000000061;
        v59 = v18;
        sub_22655D544();
        sub_22655CE24();
        swift_bridgeObjectRelease();
        v19 = v56;
        v52 = v55;
        v55 = 0;
        v56 = 0xE000000000000000;
        sub_22655D2EC();
        swift_bridgeObjectRelease();
        v20 = v44;
        v55 = 0xD000000000000010;
        v56 = v44;
        v59 = v18;
        sub_22655D544();
        sub_22655CE24();
        swift_bridgeObjectRelease();
        v51 = v55;
        v53 = v56;
        v55 = 0;
        v56 = 0xE000000000000000;
        sub_22655D2EC();
        swift_bridgeObjectRelease();
        v55 = 0xD000000000000010;
        v56 = v20;
        v59 = v18;
        sub_22655D544();
        sub_22655CE24();
        swift_bridgeObjectRelease();
        v22 = v55;
        v21 = v56;
        v23 = v45;
        BaseAddressOfPlane = CVPixelBufferGetBaseAddressOfPlane(v45, v18);
        if (!BaseAddressOfPlane)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_2264D0934();
          swift_allocError();
          *v39 = 0;
          swift_willThrow();
          (*(void (**)(char *, uint64_t))(v61 + 8))(v43, v54);
          CVPixelBufferUnlockBaseAddress(v23, 1uLL);
          v13 = *(uint64_t (**)(char *, uint64_t))(v42 + 8);
          goto LABEL_22;
        }
        v25 = BaseAddressOfPlane;
        v47 = v22;
        v50 = v21;
        HeightOfPlane = CVPixelBufferGetHeightOfPlane(v23, v18);
        result = CVPixelBufferGetBytesPerRowOfPlane(v23, v18);
        v27 = v43;
        if ((unsigned __int128)(HeightOfPlane * (__int128)result) >> 64 != (HeightOfPlane * result) >> 63)
          goto LABEL_24;
        v28 = sub_2264D09BC(v25, HeightOfPlane * result);
        v30 = v29;
        CVPixelBufferGetBytesPerRowOfPlane(v23, v18);
        v46 = CVPixelBufferGetHeightOfPlane(v23, v18);
        v48 = v28;
        v49 = v30;
        v59 = v28;
        v60 = v30;
        v55 = 0;
        LOBYTE(v56) = 1;
        v57 = v52;
        v58 = v19;
        sub_2264832E0();
        v31 = v54;
        sub_22655D514();
        swift_bridgeObjectRelease();
        v55 = 0;
        LOBYTE(v56) = 1;
        v57 = v51;
        v58 = v53;
        sub_22655D508();
        swift_bridgeObjectRelease();
        v55 = 0;
        LOBYTE(v56) = 1;
        v57 = v47;
        v58 = v50;
        sub_22655D508();
        ++v18;
        sub_226455C98(v48, v49);
        swift_bridgeObjectRelease();
        result = v41;
        v8 = v42;
        v17 = v61;
        if (v41 == v18)
          goto LABEL_18;
      }
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v27 = v6;
    v31 = v54;
LABEL_18:
    (*(void (**)(char *, uint64_t))(v17 + 8))(v27, v31);
    v11 = v45;
    goto LABEL_20;
  }
  BaseAddress = CVPixelBufferGetBaseAddress(v2);
  if (!BaseAddress)
  {
    sub_2264D0934();
    swift_allocError();
    *v38 = 3;
    swift_willThrow();
    CVPixelBufferUnlockBaseAddress(v2, 1uLL);
LABEL_3:
    v13 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
    v14 = v10;
    v15 = v7;
    return v13(v14, v15);
  }
  v33 = BaseAddress;
  v40 = v7;
  Height = CVPixelBufferGetHeight(v2);
  result = CVPixelBufferGetBytesPerRow(v2);
  if ((unsigned __int128)(Height * (__int128)result) >> 64 == (Height * result) >> 63)
  {
    v35 = sub_2264D09BC(v33, Height * result);
    v37 = v36;
    v55 = v35;
    v56 = v36;
    LOBYTE(v59) = 6;
    sub_2264832E0();
    sub_22655D514();
    sub_226455C98(v35, v37);
LABEL_20:
    CVPixelBufferUnlockBaseAddress(v11, 1uLL);
    v13 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
LABEL_22:
    v14 = v10;
    v15 = v40;
    return v13(v14, v15);
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_2264CFCE4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = sub_2264D00C4(a1);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  if (!v2)
    *a2 = v5;
  return result;
}

_QWORD *sub_2264CFD2C(_QWORD *result)
{
  _QWORD *v1;

  if (*v1)
    return (_QWORD *)sub_2264CF5B0(result);
  return result;
}

void sub_2264CFD50(char *a1)
{
  sub_2264AC118(*a1);
}

void sub_2264CFD5C()
{
  char *v0;

  sub_2264ADD7C(0, *v0);
}

void sub_2264CFD68()
{
  __asm { BR              X10 }
}

uint64_t sub_2264CFDA8()
{
  sub_22655CE00();
  return swift_bridgeObjectRelease();
}

void sub_2264CFE40(uint64_t a1)
{
  char *v1;

  sub_2264ADD7C(a1, *v1);
}

uint64_t sub_2264CFE48@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2264D007C();
  *a1 = result;
  return result;
}

uint64_t sub_2264CFE74()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_2264CFEA8 + 4 * byte_226566607[*v0]))();
}

void sub_2264CFEA8(_QWORD *a1@<X8>)
{
  *a1 = 0x726F466C65786970;
  a1[1] = 0xEB0000000074616DLL;
}

void sub_2264CFECC(_QWORD *a1@<X8>)
{
  *a1 = 0x6874646977;
  a1[1] = 0xE500000000000000;
}

void sub_2264CFEE4(_QWORD *a1@<X8>)
{
  *a1 = 0x746867696568;
  a1[1] = 0xE600000000000000;
}

void sub_2264CFEFC(_QWORD *a1@<X8>)
{
  *a1 = 0x73656E616C70;
  a1[1] = 0xE600000000000000;
}

void sub_2264CFF14(_QWORD *a1@<X8>)
{
  *a1 = 0x72616E616C507369;
  a1[1] = 0xE800000000000000;
}

void sub_2264CFF30(_QWORD *a1@<X8>)
{
  *a1 = 1635017060;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_2264CFF44()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2264CFF78 + 4 * byte_22656660E[*v0]))(0x756F43656E616C70, 0xEA0000000000746ELL);
}

uint64_t sub_2264CFF78()
{
  return 0x726F466C65786970;
}

uint64_t sub_2264CFF98()
{
  return 0x6874646977;
}

uint64_t sub_2264CFFAC()
{
  return 0x746867696568;
}

uint64_t sub_2264CFFC0()
{
  return 0x73656E616C70;
}

uint64_t sub_2264CFFD4()
{
  return 0x72616E616C507369;
}

uint64_t sub_2264CFFEC()
{
  return 1635017060;
}

uint64_t sub_2264CFFFC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2264D007C();
  *a1 = result;
  return result;
}

void sub_2264D0020(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_2264D002C()
{
  sub_2264D08F0();
  return sub_22655D6A0();
}

uint64_t sub_2264D0054()
{
  sub_2264D08F0();
  return sub_22655D6AC();
}

uint64_t sub_2264D007C()
{
  unint64_t v0;

  v0 = sub_22655D454();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

uint64_t sub_2264D00C4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __CVBuffer *v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  size_t v14;
  char v15;
  _BYTE *v16;
  CVPixelBufferRef v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  _QWORD v22[4];
  uint64_t v23;
  uint64_t v24;
  void *BaseAddressOfPlane;
  uint64_t v26;
  uint64_t v27;
  CVPixelBufferRef pixelBufferOut;
  unint64_t v29;
  CVPixelBufferRef v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255846988);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255846990);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (__CVBuffer *)a1[3];
  __swift_project_boxed_opaque_existential_1(a1, (uint64_t)v10);
  sub_2264D08F0();
  v11 = v26;
  sub_22655D688();
  if (!v11)
  {
    v26 = v7;
    LOBYTE(pixelBufferOut) = 2;
    v12 = v6;
    v13 = sub_22655D4A8();
    LOBYTE(pixelBufferOut) = 3;
    v14 = sub_22655D4A8();
    LOBYTE(pixelBufferOut) = 1;
    LODWORD(BaseAddressOfPlane) = sub_22655D4C0();
    LOBYTE(pixelBufferOut) = 0;
    v24 = sub_22655D4A8();
    LOBYTE(pixelBufferOut) = 5;
    v15 = sub_22655D484();
    pixelBufferOut = 0;
    CVPixelBufferCreate(0, v13, v14, (OSType)BaseAddressOfPlane, 0, &pixelBufferOut);
    v10 = pixelBufferOut;
    if (pixelBufferOut)
    {
      CVPixelBufferLockBaseAddress(pixelBufferOut, 0);
      if ((v15 & 1) == 0)
      {
        CVPixelBufferGetBaseAddress(v10);
        LOBYTE(v32) = 6;
        sub_226482534();
        sub_22655D4B4();
        __asm { BR              X10 }
      }
      LOBYTE(pixelBufferOut) = 4;
      sub_2264D0978();
      sub_22655D460();
      if (v24 < 0)
      {
        __break(1u);
        JUMPOUT(0x2264D089CLL);
      }
      v23 = v2;
      v22[0] = v3;
      if (v24)
      {
        v22[3] = v5;
        BaseAddressOfPlane = CVPixelBufferGetBaseAddressOfPlane(v10, 0);
        v27 = 0;
        pixelBufferOut = (CVPixelBufferRef)0x746144656E616C70;
        v29 = 0xE900000000000061;
        sub_22655D544();
        sub_22655CE24();
        swift_bridgeObjectRelease();
        v17 = pixelBufferOut;
        v18 = v29;
        pixelBufferOut = 0;
        LOBYTE(v29) = 1;
        v30 = v17;
        v31 = v18;
        sub_226482534();
        sub_22655D4B4();
        v19 = swift_bridgeObjectRelease();
        return ((uint64_t (*)(uint64_t))((char *)&loc_2264D04E4 + *((int *)qword_2264D08E0 + (v33 >> 62))))(v19);
      }
      (*(void (**)(char *, uint64_t))(v22[0] + 8))(v5, v23);
      v21 = v26;
      CVPixelBufferUnlockBaseAddress(v10, 0);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v12);
    }
    else
    {
      sub_2264D0934();
      swift_allocError();
      *v16 = 1;
      swift_willThrow();

      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v12);
    }
  }
  return (uint64_t)v10;
}

unint64_t sub_2264D08F0()
{
  unint64_t result;

  result = qword_255846998;
  if (!qword_255846998)
  {
    result = MEMORY[0x22769A794](&unk_22656694C, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255846998);
  }
  return result;
}

unint64_t sub_2264D0934()
{
  unint64_t result;

  result = qword_2558469A0;
  if (!qword_2558469A0)
  {
    result = MEMORY[0x22769A794](&unk_22656690C, &_s5ErrorON);
    atomic_store(result, (unint64_t *)&qword_2558469A0);
  }
  return result;
}

unint64_t sub_2264D0978()
{
  unint64_t result;

  result = qword_2558469A8;
  if (!qword_2558469A8)
  {
    result = MEMORY[0x22769A794](&unk_2265668BC, &type metadata for GenericCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558469A8);
  }
  return result;
}

uint64_t sub_2264D09BC(_BYTE *__src, uint64_t a2)
{
  uint64_t result;

  if (!a2)
    return 0;
  if (a2 <= 14)
    return sub_2264CA544(__src, &__src[a2]);
  sub_22655BE7C();
  swift_allocObject();
  sub_22655BE4C();
  if ((unint64_t)a2 < 0x7FFFFFFF)
    return a2 << 32;
  sub_22655C074();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t _s5ErrorOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2264D0AB4 + 4 * byte_22656661A[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2264D0AE8 + 4 * byte_226566615[v4]))();
}

uint64_t sub_2264D0AE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264D0AF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2264D0AF8);
  return result;
}

uint64_t sub_2264D0B04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2264D0B0CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2264D0B10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264D0B18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s5ErrorOMa()
{
  return &_s5ErrorON;
}

uint64_t _s10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2264D0B80 + 4 * byte_226566624[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2264D0BB4 + 4 * byte_22656661F[v4]))();
}

uint64_t sub_2264D0BB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264D0BBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2264D0BC4);
  return result;
}

uint64_t sub_2264D0BD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2264D0BD8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2264D0BDC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264D0BE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10CodingKeysOMa()
{
  return &_s10CodingKeysON;
}

uint64_t destroy for GenericCodingKeys()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GenericCodingKeys(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GenericCodingKeys(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for GenericCodingKeys(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GenericCodingKeys(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GenericCodingKeys(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenericCodingKeys()
{
  return &type metadata for GenericCodingKeys;
}

unint64_t sub_2264D0D70()
{
  unint64_t result;

  result = qword_2558469C0;
  if (!qword_2558469C0)
  {
    result = MEMORY[0x22769A794](&unk_22656682C, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2558469C0);
  }
  return result;
}

unint64_t sub_2264D0DB8()
{
  unint64_t result;

  result = qword_2558469C8;
  if (!qword_2558469C8)
  {
    result = MEMORY[0x22769A794](&unk_226566894, &_s5ErrorON);
    atomic_store(result, (unint64_t *)&qword_2558469C8);
  }
  return result;
}

unint64_t sub_2264D0E00()
{
  unint64_t result;

  result = qword_2558469D0;
  if (!qword_2558469D0)
  {
    result = MEMORY[0x22769A794](&unk_226566714, &type metadata for GenericCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558469D0);
  }
  return result;
}

unint64_t sub_2264D0E48()
{
  unint64_t result;

  result = qword_2558469D8;
  if (!qword_2558469D8)
  {
    result = MEMORY[0x22769A794](&unk_22656673C, &type metadata for GenericCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558469D8);
  }
  return result;
}

unint64_t sub_2264D0E90()
{
  unint64_t result;

  result = qword_2558469E0;
  if (!qword_2558469E0)
  {
    result = MEMORY[0x22769A794](&unk_226566764, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2558469E0);
  }
  return result;
}

unint64_t sub_2264D0ED8()
{
  unint64_t result;

  result = qword_2558469E8;
  if (!qword_2558469E8)
  {
    result = MEMORY[0x22769A794](&unk_22656678C, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2558469E8);
  }
  return result;
}

void sub_2264D0F20()
{
  uint64_t v0;
  _BYTE *v1;
  id v2;
  BOOL v3;

  if (qword_25583F9D0 != -1)
    swift_once();
  v1 = off_25584AF28;
  swift_beginAccess();
  swift_beginAccess();
  if ((v1[153] & 1) == 0 && qword_25583F9C8 != -1)
    swift_once();
  sub_226552DE4(&v3);
  if (!v3 && qword_25583F9C8 != -1)
    swift_once();
  swift_beginAccess();
  v2 = *(id *)(v0 + 56);
  sub_2264D1090(v2);

}

void sub_2264D1090(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  uint64_t ObjCClassFromMetadata;
  id v17;
  id v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  uint8_t *v27;
  id v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v2 = sub_22655CB84();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(a1, sel_powerUsage, v4))
  {
    sub_22643F548(0, &qword_2558469F0);
    v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_configurableCaptureDeviceForPrimaryCamera);
    if (v7)
    {
      v28 = v7;
      v8 = (void *)sub_22655D0C4();
      v10 = v9;
      v12 = v11;
      objc_msgSend(v28, sel_activeVideoMinFrameDuration);
      if ((sub_22655D0B8() & 1) != 0
        && (objc_msgSend(v28, sel_activeVideoMaxFrameDuration), (sub_22655D0B8() & 1) != 0))
      {
        v30 = 0;
        if (objc_msgSend(v28, sel_lockForConfiguration_, &v30))
        {
          v13 = v30;
          v30 = v8;
          v31 = v10;
          v32 = v12;
          objc_msgSend(v28, sel_setActiveVideoMinFrameDuration_, &v30);
          v30 = v8;
          v31 = v10;
          v32 = v12;
          objc_msgSend(v28, sel_setActiveVideoMaxFrameDuration_, &v30);
          objc_msgSend(v28, sel_unlockForConfiguration);

        }
        else
        {
          v14 = v30;
          v15 = (void *)sub_22655BF6C();

          swift_willThrow();
          type metadata accessor for Constants();
          ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
          v17 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
          v18 = objc_msgSend(v17, sel_bundleIdentifier);

          if (v18)
          {
            sub_22655CD88();

          }
          sub_22643F548(0, (unint64_t *)&qword_255843DE0);
          sub_22655D124();
          sub_22655CB90();
          v19 = v15;
          v20 = v15;
          v21 = sub_22655CB6C();
          v22 = sub_22655CFF8();
          if (os_log_type_enabled(v21, v22))
          {
            v23 = (uint8_t *)swift_slowAlloc();
            v24 = (void *)swift_slowAlloc();
            v30 = v24;
            *(_DWORD *)v23 = 136315138;
            v27 = v23 + 4;
            swift_getErrorValue();
            v25 = sub_22655D5B0();
            v29 = sub_2264F4EC4(v25, v26, (uint64_t *)&v30);
            sub_22655D154();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_226423000, v21, v22, "Cannot change ARKit framerate: %s", v23, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x22769A884](v24, -1, -1);
            MEMORY[0x22769A884](v23, -1, -1);

          }
          else
          {

          }
          (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
        }
      }
      else
      {

      }
    }
  }
}

uint64_t sub_2264D1524(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v3 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v3 < 0 || (v3 & 0x4000000000000000) != 0)
    sub_2264C10BC(v3);
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = v5 + 8 * a1;
      v10 = *(_QWORD *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(_QWORD *)(v5 + 16) = v7;
      sub_22655CEE4();
      return v10;
    }
  }
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_2264D1604(unint64_t a1)
{
  _QWORD **v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_2264C10FC(v3);
  v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      result = (uint64_t)memmove(&v3[4 * a1 + 4], &v3[4 * a1 + 8], 32 * v6);
      v3[2] = v5;
      *v1 = v3;
      return result;
    }
  }
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_2264D16DC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t *v2;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_2264C119C(v5);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  v7 = v6 - 1;
  v8 = sub_22655C140();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = v5 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)) + v10 * a1;
  result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v9 + 32))(a2, v11, v8);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    result = sub_22655D43C();
    __break(1u);
    return result;
  }
  if (v10 > 0 || v11 >= v11 + v10 + v10 * (v7 - a1))
  {
    result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v10)
  {
    result = swift_arrayInitWithTakeBackToFront();
  }
  *(_QWORD *)(v5 + 16) = v7;
  *v2 = v5;
  return result;
}

void sub_2264D1818(unint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;

  v1 = (_QWORD *)sub_2264D504C(a1);
  v2 = v1[2];
  swift_bridgeObjectRelease();
  if (v2 < 2)
    return;
  v3 = 0;
  v4 = v2 >> 1;
  v5 = v2 - 1;
  v6 = 2 * v2;
  v7 = 5;
  v16 = v2 >> 1;
  while (1)
  {
    if (v3 == v5)
      goto LABEL_4;
    v8 = v1[2];
    if (v3 >= v8)
      break;
    if (v5 >= v8)
      goto LABEL_13;
    v9 = v1[v7 - 1];
    v11 = v1[v6 + 2];
    v10 = (void *)v1[v6 + 3];
    v12 = (id)v1[v7];
    v13 = v10;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v1 = sub_2264C10C0(v1);
    v14 = &v1[v7];

    *(v14 - 1) = v11;
    *v14 = v13;
    if (v5 >= v1[2])
      goto LABEL_14;
    v15 = &v1[v6];

    v15[2] = v9;
    v15[3] = v12;
    v4 = v16;
LABEL_4:
    ++v3;
    v7 += 2;
    --v5;
    v6 -= 2;
    if (v4 == v3)
      return;
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
}

uint64_t sub_2264D1948(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v1 = a1;
  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0)
    goto LABEL_39;
  v2 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v15 = v1 & 0xFFFFFFFFFFFFFF8;
LABEL_4:
  if ((v2 & 0x4000000000000000) == 0)
  {
    v3 = *(_QWORD *)(v2 + 16);
    swift_bridgeObjectRelease();
    v4 = (unint64_t)v3 >> 1;
    goto LABEL_6;
  }
  while (1)
  {
    swift_retain();
    v3 = sub_22655D400();
    swift_bridgeObjectRelease();
    swift_release();
    v14 = v3 >= 0 ? v3 : v3 + 1;
    if (v3 < -1)
      __break(1u);
    v4 = v14 >> 1;
LABEL_6:
    if ((unint64_t)(v3 + 1) < 3)
      return v2;
    v5 = 0;
    while (1)
    {
      v6 = v5 + 1;
      v1 = v3 - (v5 + 1);
      if (__OFSUB__(v3, v5 + 1))
        break;
      if (v5 != v1)
      {
        if ((v15 & 0xC000000000000001) != 0)
        {
          v9 = MEMORY[0x2276999E4](v5, v15);
          v10 = (id)MEMORY[0x2276999E4](v3 - (v5 + 1), v15);
        }
        else
        {
          if ((v5 & 0x8000000000000000) != 0)
            goto LABEL_33;
          v7 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v5 >= v7)
            goto LABEL_34;
          v8 = *(id *)(v15 + 8 * v5 + 32);
          if ((v1 & 0x8000000000000000) != 0)
            goto LABEL_35;
          if (v1 >= v7)
            goto LABEL_37;
          v9 = (uint64_t)v8;
          v10 = *(id *)(v15 + 32 + 8 * v1);
        }
        v11 = v10;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || v15 < 0
          || (v15 & 0x4000000000000000) != 0)
        {
          sub_2264C10BC(v15);
        }
        v12 = (v15 & 0xFFFFFFFFFFFFFF8) + 8 * v5;

        *(_QWORD *)(v12 + 32) = v11;
        sub_22655CEE4();
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || v15 < 0
          || (v15 & 0x4000000000000000) != 0)
        {
          sub_2264C10BC(v15);
        }
        if ((v1 & 0x8000000000000000) != 0)
          goto LABEL_36;
        if (v1 >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_38;

        *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 8 * v1 + 0x20) = v9;
        sub_22655CEE4();
      }
      v5 = v6;
      if (v4 == v6)
        return v15;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    v2 = (uint64_t)sub_226535D34(v1);
    v15 = v2;
    if ((v2 & 0x8000000000000000) == 0)
      goto LABEL_4;
  }
}

uint64_t sub_2264D1B60(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t result;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = (_QWORD *)sub_2264D5648(a1);
  v2 = v1[2];
  result = swift_bridgeObjectRelease();
  if (v2 < 2)
    return (uint64_t)v1;
  v4 = 0;
  v5 = v2 >> 1;
  v6 = v2 - 1;
  v7 = 2 * v2;
  v8 = 5;
  while (1)
  {
    if (v4 == v6)
      goto LABEL_5;
    v11 = v1[2];
    if (v4 >= v11)
      break;
    if (v6 >= v11)
      goto LABEL_12;
    v12 = v1[v8 - 1];
    v13 = v1[v8];
    v14 = v1[v7 + 2];
    v15 = v1[v7 + 3];
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_2264C114C(v1);
      v1 = (_QWORD *)result;
    }
    v9 = &v1[v8];
    *(v9 - 1) = v14;
    *v9 = v15;
    v10 = &v1[v7];
    v10[2] = v12;
    v10[3] = v13;
LABEL_5:
    ++v4;
    v8 += 2;
    --v6;
    v7 -= 2;
    if (v5 == v4)
      return (uint64_t)v1;
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_2264D1C5C(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t result;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v1 = (_QWORD *)sub_2264D57C0(a1);
  v2 = v1[2];
  result = swift_bridgeObjectRelease();
  if (v2 < 2)
    return (uint64_t)v1;
  v4 = 0;
  v5 = v2 >> 1;
  v6 = v2 - 1;
  v7 = 24 * v2 + 16;
  v8 = 6;
  while (1)
  {
    if (v4 == v6)
      goto LABEL_5;
    v11 = v1[2];
    if (v4 >= v11)
      break;
    if (v6 >= v11)
      goto LABEL_12;
    v12 = v1[v8 - 2];
    v13 = v1[v8 - 1];
    v14 = v1[v8];
    v15 = *(_QWORD *)((char *)v1 + v7 - 8);
    v16 = *((_BYTE *)v1 + v7);
    v17 = *(_QWORD *)((char *)v1 + v7 + 8);
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_2264C1174(v1);
      v1 = (_QWORD *)result;
    }
    v9 = &v1[v8];
    *(v9 - 2) = v15;
    *((_BYTE *)v9 - 8) = v16;
    *v9 = v17;
    v10 = (char *)v1 + v7;
    *((_QWORD *)v10 - 1) = v12;
    *v10 = v13;
    *((_QWORD *)v10 + 1) = v14;
LABEL_5:
    ++v4;
    v8 += 3;
    --v6;
    v7 -= 24;
    if (v5 == v4)
      return (uint64_t)v1;
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_2264D1D78(uint64_t result)
{
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t i;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (_QWORD *)result;
  v2 = *(_QWORD *)(result + 16);
  if (v2 < 2)
    return (uint64_t)v1;
  v3 = 0;
  v4 = v2 >> 1;
  for (i = v2 + 3; ; --i)
  {
    if (v3 == i - 4)
      goto LABEL_5;
    v6 = v1[2];
    if (v3 >= v6)
      break;
    if (i - 4 >= v6)
      goto LABEL_12;
    v7 = v1[v3 + 4];
    v8 = v1[i];
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_2264C10E8(v1);
      v1 = (_QWORD *)result;
    }
    v1[v3 + 4] = v8;
    v1[i] = v7;
LABEL_5:
    if (v4 == ++v3)
      return (uint64_t)v1;
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_2264D1E30(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t i;
  unint64_t v6;
  int v7;
  int v8;

  v1 = result;
  v2 = *(_QWORD *)(result + 16);
  if (v2 < 2)
    return v1;
  v3 = 0;
  v4 = v2 >> 1;
  for (i = v2 + 7; ; --i)
  {
    if (v3 == i - 8)
      goto LABEL_5;
    v6 = *(_QWORD *)(v1 + 16);
    if (v3 >= v6)
      break;
    if (i - 8 >= v6)
      goto LABEL_12;
    v7 = *(_DWORD *)(v1 + 4 * v3 + 32);
    v8 = *(_DWORD *)(v1 + 4 * i);
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_2264C1188(v1);
      v1 = result;
    }
    *(_DWORD *)(v1 + 4 * v3 + 32) = v8;
    *(_DWORD *)(v1 + 4 * i) = v7;
LABEL_5:
    if (v4 == ++v3)
      return v1;
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_2264D1EE8(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t result;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;

  v1 = (_QWORD *)sub_2264D5968(a1);
  v2 = v1[2];
  result = swift_bridgeObjectRelease();
  if (v2 < 2)
    return (uint64_t)v1;
  v4 = 0;
  v5 = v2 >> 1;
  v6 = v2 - 1;
  v7 = 4 * v2;
  v8 = 6;
  while (1)
  {
    if (v4 == v6)
      goto LABEL_5;
    v11 = v1[2];
    if (v4 >= v11)
      break;
    if (v6 >= v11)
      goto LABEL_12;
    v12 = v1[v8 - 2];
    v13 = v1[v7];
    v14 = *(_OWORD *)&v1[v7 + 2];
    v15 = *(_OWORD *)&v1[v8];
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_2264C1200(v1);
      v1 = (_QWORD *)result;
    }
    v9 = &v1[v8];
    *((_QWORD *)v9 - 2) = v13;
    *v9 = v14;
    v10 = &v1[v7];
    *v10 = v12;
    *((_OWORD *)v10 + 1) = v15;
LABEL_5:
    ++v4;
    v8 += 4;
    --v6;
    v7 -= 4;
    if (v5 == v4)
      return (uint64_t)v1;
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_2264D1FF0(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t i;
  unint64_t v6;
  int v7;
  int v8;

  v1 = result;
  v2 = *(_QWORD *)(result + 16);
  if (v2 < 2)
    return v1;
  v3 = 0;
  v4 = v2 >> 1;
  for (i = v2 + 7; ; --i)
  {
    if (v3 == i - 8)
      goto LABEL_5;
    v6 = *(_QWORD *)(v1 + 16);
    if (v3 >= v6)
      break;
    if (i - 8 >= v6)
      goto LABEL_12;
    v7 = *(_DWORD *)(v1 + 4 * v3 + 32);
    v8 = *(_DWORD *)(v1 + 4 * i);
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_2264C1214(v1);
      v1 = result;
    }
    *(_DWORD *)(v1 + 4 * v3 + 32) = v8;
    *(_DWORD *)(v1 + 4 * i) = v7;
LABEL_5:
    if (v4 == ++v3)
      return v1;
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_2264D20A8(uint64_t result)
{
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t i;
  unint64_t v6;
  __int128 v7;
  __int128 v8;

  v1 = (_QWORD *)result;
  v2 = *(_QWORD *)(result + 16);
  if (v2 < 2)
    return (uint64_t)v1;
  v3 = 0;
  v4 = v2 >> 1;
  for (i = v2 + 1; ; --i)
  {
    if (v3 == i - 2)
      goto LABEL_5;
    v6 = v1[2];
    if (v3 >= v6)
      break;
    if (i - 2 >= v6)
      goto LABEL_12;
    v7 = *(_OWORD *)&v1[2 * i];
    v8 = *(_OWORD *)&v1[2 * v3 + 4];
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_2264C11EC(v1);
      v1 = (_QWORD *)result;
    }
    *(_OWORD *)&v1[2 * v3 + 4] = v7;
    *(_OWORD *)&v1[2 * i] = v8;
LABEL_5:
    if (v4 == ++v3)
      return (uint64_t)v1;
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_2264D216C(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t result;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;

  v1 = (_QWORD *)sub_2264D5AE8(a1);
  v2 = v1[2];
  result = swift_bridgeObjectRelease();
  if (v2 < 2)
    return (uint64_t)v1;
  v4 = 0;
  v5 = v2 >> 1;
  v6 = v2 - 1;
  v7 = 2 * v2;
  v8 = 5;
  v16 = v2 >> 1;
  while (1)
  {
    if (v4 == v6)
      goto LABEL_4;
    v9 = v1[2];
    if (v4 >= v9)
      break;
    if (v6 >= v9)
      goto LABEL_13;
    v11 = v1[v8 - 1];
    v10 = v1[v8];
    v13 = v1[v7 + 2];
    v12 = v1[v7 + 3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v1 = sub_2264C123C(v1);
    v14 = &v1[v8];
    result = swift_bridgeObjectRelease();
    *(v14 - 1) = v13;
    *v14 = v12;
    if (v6 >= v1[2])
      goto LABEL_14;
    v15 = &v1[v7];
    result = swift_bridgeObjectRelease();
    v15[2] = v11;
    v15[3] = v10;
    v5 = v16;
LABEL_4:
    ++v4;
    v8 += 2;
    --v6;
    v7 -= 2;
    if (v5 == v4)
      return (uint64_t)v1;
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_2264D229C(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_2264CB7AC();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_2264D2624(v6);
  return sub_22655D370();
}

uint64_t sub_2264D2314(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17[6];

  v1 = result;
  if ((result & 0xC000000000000001) != 0)
  {
    sub_22655D244();
    type metadata accessor for HullPointUUID();
    sub_2264D906C();
    result = sub_22655CFB0();
    v1 = v17[1];
    v16 = v17[2];
    v2 = v17[3];
    v3 = v17[4];
    v4 = v17[5];
  }
  else
  {
    v3 = 0;
    v5 = -1 << *(_BYTE *)(result + 32);
    v16 = result + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(result + 56);
  }
  v8 = (unint64_t)(v2 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_10;
  while (1)
  {
    if (v4)
    {
      v9 = (v4 - 1) & v4;
      v10 = __clz(__rbit64(v4)) | (v3 << 6);
      v11 = v3;
      goto LABEL_29;
    }
    v13 = v3 + 1;
    if (__OFADD__(v3, 1))
      break;
    if (v13 >= v8)
      return sub_22646C924();
    v14 = *(_QWORD *)(v16 + 8 * v13);
    v11 = v3 + 1;
    if (!v14)
    {
      v11 = v3 + 2;
      if (v3 + 2 >= v8)
        return sub_22646C924();
      v14 = *(_QWORD *)(v16 + 8 * v11);
      if (!v14)
      {
        v11 = v3 + 3;
        if (v3 + 3 >= v8)
          return sub_22646C924();
        v14 = *(_QWORD *)(v16 + 8 * v11);
        if (!v14)
        {
          v11 = v3 + 4;
          if (v3 + 4 >= v8)
            return sub_22646C924();
          v14 = *(_QWORD *)(v16 + 8 * v11);
          if (!v14)
          {
            v11 = v3 + 5;
            if (v3 + 5 >= v8)
              return sub_22646C924();
            v14 = *(_QWORD *)(v16 + 8 * v11);
            if (!v14)
            {
              v15 = v3 + 6;
              while (v8 != v15)
              {
                v14 = *(_QWORD *)(v16 + 8 * v15++);
                if (v14)
                {
                  v11 = v15 - 1;
                  goto LABEL_28;
                }
              }
              return sub_22646C924();
            }
          }
        }
      }
    }
LABEL_28:
    v9 = (v14 - 1) & v14;
    v10 = __clz(__rbit64(v14)) + (v11 << 6);
LABEL_29:
    v12 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    swift_retain();
    if (!v12)
      return sub_22646C924();
    while (1)
    {
      sub_22653671C(v17, v12);
      result = swift_release();
      v3 = v11;
      v4 = v9;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_22655D298())
      {
        type metadata accessor for HullPointUUID();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v12 = v17[0];
        swift_unknownObjectRelease();
        v11 = v3;
        v9 = v4;
        if (v12)
          continue;
      }
      return sub_22646C924();
    }
  }
  __break(1u);
  return result;
}

__n128 sub_2264D258C(float32x2_t a1, float32x2_t a2, float32x2_t a3, float32x2_t a4, double a5, double a6, double a7)
{
  uint64_t v7;
  float32x2_t v8;
  __n128 result;

  *(double *)(v7 + 16) = *(double *)&a1;
  *(double *)(v7 + 24) = *(double *)&a2;
  *(double *)(v7 + 32) = *(double *)&a3;
  *(double *)(v7 + 40) = *(double *)&a4;
  *(double *)(v7 + 96) = a7;
  v8 = vadd_f32(vadd_f32(vadd_f32(a1, a2), a3), a4);
  __asm { FMOV            V1.2S, #0.25 }
  result.n128_u64[0] = (unint64_t)vmul_f32(v8, _D1);
  result.n128_u64[1] = 1065353216;
  *(_OWORD *)(v7 + 48) = *(unint64_t *)&a5;
  *(_OWORD *)(v7 + 64) = *(unint64_t *)&a6;
  *(__n128 *)(v7 + 80) = result;
  return result;
}

uint64_t sub_2264D25D4()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for OBB()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for HullUtility()
{
  return objc_opt_self();
}

uint64_t sub_2264D2624(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  __n128 v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  float v19;
  float v20;
  BOOL v21;
  int v22;
  uint64_t v23;
  float v24;
  BOOL v25;
  int v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  float v38;
  float v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  unint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  unint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *__dst;
  uint64_t v105;

  v2 = v1;
  v4 = a1[1];
  result = sub_22655D538();
  if (result >= v4)
  {
    if (v4 < 0)
      goto LABEL_142;
    if (v4)
      return sub_2264D2CE8(0, v4, 1, a1);
    return result;
  }
  if (v4 >= 0)
    v8 = v4;
  else
    v8 = v4 + 1;
  if (v4 < -1)
    goto LABEL_150;
  v9 = result;
  v99 = a1;
  if (v4 < 2)
  {
    v12 = (char *)MEMORY[0x24BEE4AF8];
    v105 = MEMORY[0x24BEE4AF8];
    __dst = (char *)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v15 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_108:
      v91 = v12;
      if (v15 >= 2)
      {
        v92 = *v99;
        do
        {
          v93 = v15 - 2;
          if (v15 < 2)
            goto LABEL_137;
          if (!v92)
            goto LABEL_149;
          v94 = v91;
          v95 = *(_QWORD *)&v91[16 * v93 + 32];
          v96 = *(_QWORD *)&v91[16 * v15 + 24];
          sub_2264D2D68((char *)(v92 + 8 * v95), (char *)(v92 + 8 * *(_QWORD *)&v91[16 * v15 + 16]), (char *)(v92 + 8 * v96), __dst, v6, v7);
          if (v2)
            break;
          if (v96 < v95)
            goto LABEL_138;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v94 = sub_2264CA374((uint64_t)v94);
          if (v93 >= *((_QWORD *)v94 + 2))
            goto LABEL_139;
          v97 = &v94[16 * v93 + 32];
          *(_QWORD *)v97 = v95;
          *((_QWORD *)v97 + 1) = v96;
          v98 = *((_QWORD *)v94 + 2);
          if (v15 > v98)
            goto LABEL_140;
          memmove(&v94[16 * v15 + 16], &v94[16 * v15 + 32], 16 * (v98 - v15));
          v91 = v94;
          *((_QWORD *)v94 + 2) = v98 - 1;
          v15 = v98 - 1;
        }
        while (v98 > 2);
      }
LABEL_105:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v105 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_22655CEE4();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v10 = v8 >> 1;
    type metadata accessor for DistanceAngleHullPoint();
    v11 = sub_22655CEFC();
    *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) = v10;
    __dst = (char *)((v11 & 0xFFFFFFFFFFFFFF8) + 32);
    v105 = v11;
  }
  v13 = 0;
  v14 = *a1;
  v100 = *a1 - 8;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v101 = v9;
  v102 = v4;
  v103 = *a1;
  while (1)
  {
    v16 = v13++;
    if (v13 < v4)
    {
      v17 = *(_QWORD *)(v14 + 8 * v13);
      v18 = *(_QWORD *)(v14 + 8 * v16);
      v19 = *(float *)(v17 + 20);
      v20 = *(float *)(v18 + 20);
      if (vabds_f32(v19, v20) >= 0.00000011921)
        v21 = v19 < v20;
      else
        v21 = *(float *)(v17 + 16) < *(float *)(v18 + 16);
      v22 = v21;
      v13 = v16 + 2;
      if (v16 + 2 < v4)
      {
        while (1)
        {
          v23 = *(_QWORD *)(v14 + 8 * v13);
          v24 = *(float *)(v23 + 20);
          v25 = vabds_f32(v24, v19) >= 0.00000011921 ? v24 < v19 : *(float *)(v23 + 16) < *(float *)(v17 + 16);
          v26 = v25;
          if (v22 != v26)
            break;
          ++v13;
          v19 = *(float *)(v23 + 20);
          v17 = v23;
          if (v4 == v13)
          {
            v13 = v4;
            break;
          }
        }
      }
      if (v22)
      {
        if (v13 < v16)
          goto LABEL_143;
        if (v16 < v13)
        {
          v27 = (uint64_t *)(v100 + 8 * v13);
          v28 = v13;
          v29 = v16;
          v30 = (uint64_t *)(v14 + 8 * v16);
          do
          {
            if (v29 != --v28)
            {
              if (!v14)
                goto LABEL_148;
              v31 = *v30;
              *v30 = *v27;
              *v27 = v31;
            }
            ++v29;
            --v27;
            ++v30;
          }
          while (v29 < v28);
        }
      }
    }
    if (v13 >= v4)
      goto LABEL_58;
    if (__OFSUB__(v13, v16))
      goto LABEL_141;
    if (v13 - v16 >= v9)
      goto LABEL_58;
    v32 = v16 + v9;
    if (__OFADD__(v16, v9))
      goto LABEL_144;
    if (v32 >= v4)
      v32 = v4;
    if (v32 < v16)
      break;
    if (v13 != v32)
    {
      v33 = (_QWORD *)(v100 + 8 * v13);
      do
      {
        v34 = *(_QWORD *)(v14 + 8 * v13);
        v35 = v16;
        v36 = v33;
        do
        {
          v37 = *v36;
          v38 = *(float *)(v34 + 20);
          v39 = *(float *)(*v36 + 20);
          if (vabds_f32(v38, v39) < 0.00000011921)
          {
            v38 = *(float *)(v34 + 16);
            v39 = *(float *)(v37 + 16);
          }
          if (v38 >= v39)
            break;
          if (!v14)
            goto LABEL_146;
          *v36 = v34;
          v36[1] = v37;
          --v36;
          ++v35;
        }
        while (v13 != v35);
        ++v13;
        ++v33;
      }
      while (v13 != v32);
      v13 = v32;
    }
LABEL_58:
    if (v13 < v16)
      goto LABEL_136;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_2264C9F78(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v41 = *((_QWORD *)v12 + 2);
    v40 = *((_QWORD *)v12 + 3);
    v15 = v41 + 1;
    v14 = v103;
    if (v41 >= v40 >> 1)
    {
      v90 = sub_2264C9F78((char *)(v40 > 1), v41 + 1, 1, v12);
      v14 = v103;
      v12 = v90;
    }
    *((_QWORD *)v12 + 2) = v15;
    v42 = v12 + 32;
    v43 = &v12[16 * v41 + 32];
    *(_QWORD *)v43 = v16;
    *((_QWORD *)v43 + 1) = v13;
    if (v41)
    {
      while (1)
      {
        v44 = v15 - 1;
        if (v15 >= 4)
        {
          v49 = &v42[16 * v15];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_125;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_126;
          v56 = v15 - 2;
          v57 = &v42[16 * v15 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_128;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_131;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_135;
            v72 = v47 < v82;
            goto LABEL_95;
          }
        }
        else
        {
          if (v15 != 3)
          {
            v73 = *((_QWORD *)v12 + 4);
            v74 = *((_QWORD *)v12 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_89;
          }
          v46 = *((_QWORD *)v12 + 4);
          v45 = *((_QWORD *)v12 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_127;
        v56 = v15 - 2;
        v62 = &v42[16 * v15 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_130;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_133;
        if (__OFADD__(v66, v71))
          goto LABEL_134;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_95:
          if (v72)
            v44 = v56;
          goto LABEL_97;
        }
LABEL_89:
        if ((v67 & 1) != 0)
          goto LABEL_129;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_132;
        if (v78 < v66)
          goto LABEL_14;
LABEL_97:
        v83 = v44 - 1;
        if (v44 - 1 >= v15)
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        if (!v14)
          goto LABEL_147;
        v84 = v12;
        v85 = &v42[16 * v83];
        v86 = *(_QWORD *)v85;
        v87 = &v42[16 * v44];
        v88 = *((_QWORD *)v87 + 1);
        sub_2264D2D68((char *)(v14 + 8 * *(_QWORD *)v85), (char *)(v14 + 8 * *(_QWORD *)v87), (char *)(v14 + 8 * v88), __dst, v6, v7);
        if (v1)
          goto LABEL_105;
        if (v88 < v86)
          goto LABEL_122;
        if (v44 > *((_QWORD *)v84 + 2))
          goto LABEL_123;
        *(_QWORD *)v85 = v86;
        *(_QWORD *)&v42[16 * v83 + 8] = v88;
        v89 = *((_QWORD *)v84 + 2);
        if (v44 >= v89)
          goto LABEL_124;
        v12 = v84;
        v15 = v89 - 1;
        memmove(&v42[16 * v44], v87 + 16, 16 * (v89 - 1 - v44));
        *((_QWORD *)v84 + 2) = v89 - 1;
        v14 = v103;
        if (v89 <= 2)
          goto LABEL_14;
      }
    }
    v15 = 1;
LABEL_14:
    v9 = v101;
    v4 = v102;
    if (v13 >= v102)
    {
      v2 = v1;
      goto LABEL_108;
    }
  }
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  result = sub_22655D3DC();
  __break(1u);
  return result;
}

uint64_t sub_2264D2CE8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  float v10;
  float v11;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 8 * a3 - 8;
LABEL_5:
    v6 = *(_QWORD *)(v4 + 8 * a3);
    v7 = result;
    v8 = (_QWORD *)v5;
    while (1)
    {
      v9 = *v8;
      v10 = *(float *)(v6 + 20);
      v11 = *(float *)(*v8 + 20);
      if (vabds_f32(v10, v11) < 0.00000011921)
      {
        v10 = *(float *)(v6 + 16);
        v11 = *(float *)(v9 + 16);
      }
      if (v10 >= v11)
      {
LABEL_4:
        ++a3;
        v5 += 8;
        if (a3 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v4)
        break;
      *v8 = v6;
      v8[1] = v9;
      --v8;
      if (a3 == ++v7)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2264D2D68(char *__src, char *a2, char *a3, char *__dst, __n128 a5, __n128 a6)
{
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  float v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  float v25;
  char *v26;
  uint64_t result;
  char *v28;
  char *v29;
  char *v30;

  v6 = __dst;
  v7 = a3;
  v8 = a2;
  v9 = __src;
  v10 = a2 - __src;
  v11 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v11 = a2 - __src;
  v12 = v11 >> 3;
  v13 = a3 - a2;
  v14 = a3 - a2 + 7;
  if (a3 - a2 >= 0)
    v14 = a3 - a2;
  v15 = v14 >> 3;
  v30 = __src;
  v29 = __dst;
  if (v12 >= v14 >> 3)
  {
    if (v13 >= -7)
    {
      if (__dst != a2 || &a2[8 * v15] <= __dst)
        memmove(__dst, a2, 8 * v15);
      v21 = &v6[8 * v15];
      v28 = v21;
      v30 = v8;
      if (v9 < v8 && v13 >= 8)
      {
        a5.n128_u64[0] = 0x3400000034000000;
        while (1)
        {
          v22 = *((_QWORD *)v21 - 1);
          v23 = v8 - 8;
          v24 = *((_QWORD *)v8 - 1);
          a6.n128_u32[0] = *(_DWORD *)(v22 + 20);
          v25 = *(float *)(v24 + 20);
          if (vabds_f32(a6.n128_f32[0], v25) < 0.00000011921)
          {
            a6.n128_u32[0] = *(_DWORD *)(v22 + 16);
            v25 = *(float *)(v24 + 16);
          }
          v26 = v7 - 8;
          if (a6.n128_f32[0] >= v25)
          {
            v28 = v21 - 8;
            if (v7 < v21 || v26 >= v21 || v7 != v21)
              *(_QWORD *)v26 = *((_QWORD *)v21 - 1);
            v21 -= 8;
            if (v8 <= v9)
              goto LABEL_47;
          }
          else
          {
            if (v7 != v8 || v26 >= v8)
              *(_QWORD *)v26 = v24;
            v30 = v8 - 8;
            v8 -= 8;
            if (v23 <= v9)
              goto LABEL_47;
          }
          v7 -= 8;
          if (v21 <= v6)
            goto LABEL_47;
        }
      }
      goto LABEL_47;
    }
  }
  else if (v10 >= -7)
  {
    if (__dst != __src || &__src[8 * v12] <= __dst)
      memmove(__dst, __src, 8 * v12);
    v16 = &v6[8 * v12];
    v28 = v16;
    if (v8 < v7 && v10 >= 8)
    {
      a5.n128_u64[0] = 0x3400000034000000;
      do
      {
        v17 = *(_QWORD *)v8;
        v18 = *(_QWORD *)v6;
        a6.n128_u32[0] = *(_DWORD *)(*(_QWORD *)v8 + 20);
        v19 = *(float *)(*(_QWORD *)v6 + 20);
        if (vabds_f32(a6.n128_f32[0], v19) < 0.00000011921)
        {
          a6.n128_u32[0] = *(_DWORD *)(v17 + 16);
          v19 = *(float *)(v18 + 16);
        }
        if (a6.n128_f32[0] >= v19)
        {
          if (v9 != v6)
            *(_QWORD *)v9 = v18;
          v6 += 8;
          v29 = v6;
          v20 = v8;
        }
        else
        {
          v20 = v8 + 8;
          if (v9 < v8 || v9 >= v20 || v9 != v8)
            *(_QWORD *)v9 = v17;
        }
        v9 += 8;
        if (v6 >= v16)
          break;
        v8 = v20;
      }
      while (v20 < v7);
      v30 = v9;
    }
LABEL_47:
    sub_2264CA070(&v30, &v29, &v28, a5, a6);
    return 1;
  }
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_2264D3010(uint64_t a1, char a2)
{
  uint64_t *v2;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_22655D400();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = MEMORY[0x2276999F0](v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

uint64_t sub_2264D30CC(unint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((*(_QWORD *)v1 & 0xC000000000000001) != 0)
  {
    result = sub_22655D274();
    if (!result)
      return result;
  }
  else
  {
    result = *(_QWORD *)(*(_QWORD *)v1 + 16);
    if (!result)
      return result;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_22655D400();
    v4 = result;
    if (result)
      goto LABEL_5;
    return swift_bridgeObjectRelease();
  }
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v4)
    return swift_bridgeObjectRelease();
LABEL_5:
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v6 = MEMORY[0x2276999E4](v5++, a1);
        sub_2264D3204(v6);
        swift_unknownObjectRelease();
        swift_release();
      }
      while (v4 != v5);
    }
    else
    {
      v7 = 0;
      do
      {
        ++v7;
        v8 = swift_retain();
        sub_2264D3204(v8);
        swift_release();
        swift_release();
      }
      while (v4 != v7);
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_2264D3204(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t *v14;
  int v15;
  BOOL v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v3 < 0)
      v4 = *v1;
    else
      v4 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
    v5 = sub_22655D2A4();
    swift_release();
    if ((v5 & 1) != 0)
    {
      v6 = sub_2264D3414(v4, a1);
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_22655D640();
  v7 = &OBJC_IVAR____TtC8RoomPlan13HullPointUUID_uuid;
  swift_bridgeObjectRetain();
  sub_22655C11C();
  v8 = sub_22655D670();
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v3 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
    goto LABEL_17;
  v20 = v1;
  v11 = ~v9;
  v21 = OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type;
  while (1)
  {
    v12 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v10);
    swift_retain();
    if ((sub_22655C104() & 1) != 0)
      break;
    swift_release();
LABEL_10:
    v10 = (v10 + 1) & v11;
    if (((*(_QWORD *)(v3 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      goto LABEL_17;
  }
  v13 = *(unsigned __int8 *)(v12 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
  v14 = v7;
  v15 = *(unsigned __int8 *)(a1 + v21);
  swift_release();
  v16 = v13 == v15;
  v7 = v14;
  if (!v16)
    goto LABEL_10;
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v18 = *v20;
  v22 = *v20;
  *v20 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_226539C80();
    v18 = v22;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v18 + 48) + 8 * v10);
  sub_2264D3600(v10);
  *v20 = v22;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_2264D3414(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t result;
  uint64_t *v18;

  swift_bridgeObjectRelease();
  v4 = sub_22655D274();
  v5 = swift_unknownObjectRetain();
  v6 = sub_22653758C(v5, v4);
  sub_22655D640();
  v7 = a2;
  swift_retain();
  sub_22655C11C();
  v8 = sub_22655D670();
  v9 = -1 << *(_BYTE *)(v6 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
    goto LABEL_13;
  v18 = v2;
  v11 = ~v9;
  v12 = OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type;
  while (1)
  {
    v13 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v10);
    swift_retain();
    if ((sub_22655C104() & 1) != 0)
      break;
    swift_release();
LABEL_4:
    v10 = (v10 + 1) & v11;
    if (((*(_QWORD *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      goto LABEL_12;
  }
  v14 = *(unsigned __int8 *)(v13 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
  v15 = *(unsigned __int8 *)(v7 + v12);
  swift_release();
  if (v14 != v15)
    goto LABEL_4;
  swift_release();
  v16 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v10);
  sub_2264D3600(v10);
  if ((sub_22655C104() & 1) != 0)
  {
    if (v14 == *(unsigned __int8 *)(v16 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type))
    {
      *v18 = v6;
      return v16;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_12:
  swift_release();
  __break(1u);
LABEL_13:
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_2264D3600(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_22655D220();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_22655D640();
        swift_retain();
        sub_22655C11C();
        v10 = sub_22655D670();
        swift_release();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_QWORD *)(v12 + 8 * v2);
          v14 = (_QWORD *)(v12 + 8 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_2264D37D0(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  BOOL v10;
  BOOL v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  int v23;
  uint64_t isStackAllocationSafe;
  char v25;
  unint64_t v26;
  size_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD v39[4];

  v2 = a2;
  v39[2] = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  v3 = a1;
  v39[0] = a1;
  v35 = a1 >> 62;
  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_4;
LABEL_32:
    swift_bridgeObjectRelease();
    return v2;
  }
LABEL_31:
  swift_bridgeObjectRetain();
  if (!sub_22655D400())
    goto LABEL_32;
LABEL_4:
  v5 = 0;
  v6 = (char *)(v2 + 56);
  v36 = v3 & 0xC000000000000001;
  v7 = v3 & 0xFFFFFFFFFFFFFF8;
  v33 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0)
    v7 = v3;
  v32[0] = v3 + 32;
  v32[1] = v7;
  v8 = &OBJC_IVAR____TtC8RoomPlan13HullPointUUID_uuid;
  v34 = v3;
  while (1)
  {
    if (v36)
    {
      v38 = MEMORY[0x2276999E4](v5, v3);
      v11 = __OFADD__(v5, 1);
      v12 = v5 + 1;
      if (v11)
        goto LABEL_30;
    }
    else
    {
      if (v5 >= *(_QWORD *)(v33 + 16))
        __break(1u);
      v38 = *(_QWORD *)(v32[0] + 8 * v5);
      swift_retain();
      v11 = __OFADD__(v5, 1);
      v12 = v5 + 1;
      if (v11)
      {
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
    }
    v37 = v12;
    sub_22655D640();
    sub_22655C11C();
    v13 = sub_22655D670();
    v14 = -1 << *(_BYTE *)(v2 + 32);
    v15 = v13 & ~v14;
    if (((*(_QWORD *)&v6[(v15 >> 3) & 0xFFFFFFFFFFFFF8] >> v15) & 1) != 0)
      break;
LABEL_23:
    swift_release();
    v3 = v34;
    if (v35)
    {
      swift_bridgeObjectRetain();
      v9 = sub_22655D400();
      swift_bridgeObjectRelease();
    }
    else
    {
      v9 = *(_QWORD *)(v33 + 16);
    }
    v10 = v37 == v9;
    v5 = v37;
    if (v10)
      goto LABEL_32;
  }
  v16 = ~v14;
  v17 = OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type;
  while (1)
  {
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    swift_retain();
    if ((sub_22655C104() & 1) != 0)
      break;
    swift_release();
LABEL_18:
    v15 = (v15 + 1) & v16;
    if (((*(_QWORD *)&v6[(v15 >> 3) & 0xFFFFFFFFFFFFF8] >> v15) & 1) == 0)
      goto LABEL_23;
  }
  v19 = *(unsigned __int8 *)(v18 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
  v20 = v6;
  v21 = v2;
  v22 = v8;
  v23 = *(unsigned __int8 *)(v38 + v17);
  swift_release();
  v10 = v19 == v23;
  v8 = v22;
  v2 = v21;
  v6 = v20;
  if (!v10)
    goto LABEL_18;
  isStackAllocationSafe = swift_release();
  v39[1] = v37;
  v25 = *(_BYTE *)(v2 + 32);
  v26 = (unint64_t)((1 << v25) + 63) >> 6;
  v27 = 8 * v26;
  if ((v25 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    memcpy((char *)v32 - ((v27 + 15) & 0x3FFFFFFFFFFFFFF0), v20, v27);
    v28 = sub_2264D3BE0((uint64_t)v32 - ((v27 + 15) & 0x3FFFFFFFFFFFFFF0), v26, v2, v15, v39);
    swift_release();
    swift_bridgeObjectRelease();
    return v28;
  }
  else
  {
    v29 = (void *)swift_slowAlloc();
    memcpy(v29, v20, v27);
    v30 = sub_2264D3BE0((uint64_t)v29, v26, v2, v15, v39);
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x22769A884](v29, -1, -1);
    return v30;
  }
}

uint64_t sub_2264D3BE0(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;

  v5 = a5;
  v6 = a3;
  v7 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v31 = (unint64_t *)result;
  v32 = v7 - 1;
  v8 = a5[1];
  if (*a5 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = sub_22655D400();
    result = swift_bridgeObjectRelease();
    if (v8 == v9)
      goto LABEL_3;
  }
  else if (v8 == *(_QWORD *)((*a5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    swift_retain();
    return sub_2264D3ED4(v31, a2, v32, v6);
  }
  v10 = v6 + 56;
  v33 = v5;
LABEL_6:
  v11 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    result = MEMORY[0x2276999E4](v8);
    v34 = result;
LABEL_10:
    v12 = v5[1];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_32;
    v5[1] = v14;
    sub_22655D640();
    sub_22655C11C();
    v15 = sub_22655D670();
    v16 = -1 << *(_BYTE *)(v6 + 32);
    v17 = v15 & ~v16;
    if (((*(_QWORD *)(v10 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
    {
LABEL_22:
      result = swift_release();
LABEL_23:
      v5 = v33;
      goto LABEL_24;
    }
    v18 = ~v16;
    v19 = OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type;
    while (1)
    {
      v20 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v17);
      swift_retain();
      if ((sub_22655C104() & 1) != 0)
      {
        v21 = v10;
        v22 = *(unsigned __int8 *)(v20 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
        v23 = v6;
        v24 = *(unsigned __int8 *)(v34 + v19);
        swift_release();
        v25 = v22 == v24;
        v10 = v21;
        v6 = v23;
        if (v25)
        {
          result = swift_release();
          v26 = (v17 >> 3) & 0x1FFFFFFFFFFFFFF8;
          v27 = *(unint64_t *)((char *)v31 + v26);
          *(unint64_t *)((char *)v31 + v26) = v27 & ~(1 << v17);
          if ((v27 & (1 << v17)) == 0)
            goto LABEL_23;
          v5 = v33;
          v28 = v32 - 1;
          if (__OFSUB__(v32, 1))
            goto LABEL_33;
          --v32;
          if (!v28)
            return MEMORY[0x24BEE4B08];
LABEL_24:
          v8 = v5[1];
          if (*v5 >> 62)
          {
            swift_bridgeObjectRetain();
            v29 = sub_22655D400();
            result = swift_bridgeObjectRelease();
            if (v8 == v29)
              goto LABEL_3;
          }
          else if (v8 == *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            goto LABEL_3;
          }
          goto LABEL_6;
        }
      }
      else
      {
        swift_release();
      }
      v17 = (v17 + 1) & v18;
      if (((*(_QWORD *)(v10 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
        goto LABEL_22;
    }
  }
  if ((v8 & 0x8000000000000000) == 0)
  {
    if (v8 >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_31;
    v34 = *(_QWORD *)(v11 + 8 * v8 + 32);
    result = swift_retain();
    goto LABEL_10;
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_2264D3ED4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t *v28;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255846C00);
  result = sub_22655D2E0();
  v9 = result;
  v28 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v28[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v28[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    sub_22655D640();
    swift_retain();
    sub_22655C11C();
    result = sub_22655D670();
    v19 = -1 << *(_BYTE *)(v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v22) = v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v28[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v28[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_2264D4150(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = a1 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (!v3)
      return sub_2264D4534(a1, a2);
    return sub_2264D43B4(a1, a2);
  }
  if (v3)
  {
    if (a2 < 0)
      v4 = a2;
    else
      v4 = a2 & 0xFFFFFFFFFFFFFF8;
    v5 = sub_22655D274();
    a2 = sub_22653758C(v4, v5);
    return sub_2264D43B4(a1, a2);
  }
  v7 = MEMORY[0x24BEE4B08];
  v18 = MEMORY[0x24BEE4B08];
  sub_22655D244();
  if (!sub_22655D298())
    goto LABEL_25;
  type metadata accessor for HullPointUUID();
  v8 = a1 + 56;
  while (2)
  {
    swift_dynamicCast();
    if (!*(_QWORD *)(a1 + 16)
      || (sub_22655D640(),
          sub_22655C11C(),
          v9 = sub_22655D670(),
          v10 = -1 << *(_BYTE *)(a1 + 32),
          v11 = v9 & ~v10,
          ((*(_QWORD *)(v8 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0))
    {
LABEL_11:
      swift_release();
      goto LABEL_12;
    }
    v12 = ~v10;
    while (1)
    {
      v13 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v11);
      swift_retain();
      if ((sub_22655C104() & 1) != 0)
        break;
      swift_release();
LABEL_17:
      v11 = (v11 + 1) & v12;
      if (((*(_QWORD *)(v8 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
        goto LABEL_11;
    }
    v14 = *(unsigned __int8 *)(v13 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
    v15 = *(unsigned __int8 *)(v17 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
    swift_release();
    if (v14 != v15)
      goto LABEL_17;
    v16 = v18;
    if (*(_QWORD *)(v18 + 24) <= *(_QWORD *)(v18 + 16))
    {
      sub_226537B4C();
      v16 = v18;
    }
    sub_226538AA0(v17, v16);
LABEL_12:
    if (sub_22655D298())
      continue;
    break;
  }
  v7 = v18;
LABEL_25:
  swift_release();
  return v7;
}

uint64_t sub_2264D43B4(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_2264D46B4((_QWORD *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_2264D46B4((unint64_t *)v8, v5, v3, a2);
    swift_release();
    MEMORY[0x22769A884](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_2264D4534(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_2264D4ADC((uint64_t)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v5, a2, v3);
    swift_release();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_2264D4ADC((uint64_t)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x22769A884](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_2264D46B4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t result;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v38;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  unint64_t v51;

  v5 = a3;
  if ((a3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_22655D244();
    type metadata accessor for HullPointUUID();
    sub_2264D906C();
    result = sub_22655CFB0();
    v5 = v47;
    v41 = v48;
    v8 = v49;
    v7 = v50;
    v9 = v51;
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a3 + 32);
    v41 = a3 + 56;
    v8 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a3 + 56);
    result = swift_bridgeObjectRetain();
    v7 = 0;
  }
  v38 = 0;
  v40 = (unint64_t)(v8 + 64) >> 6;
  v13 = a4 + 56;
  v42 = v5;
  while (2)
  {
    v14 = v7;
    v15 = v9;
    do
    {
      while (1)
      {
        if (v5 < 0)
        {
          if (!sub_22655D298())
            goto LABEL_46;
          type metadata accessor for HullPointUUID();
          swift_unknownObjectRetain();
          swift_dynamicCast();
          v19 = v46;
          swift_unknownObjectRelease();
          v18 = v14;
          v16 = v15;
          if (!v46)
            goto LABEL_46;
        }
        else
        {
          if (v15)
          {
            v16 = (v15 - 1) & v15;
            v17 = __clz(__rbit64(v15)) | (v14 << 6);
            v18 = v14;
          }
          else
          {
            v18 = v14 + 1;
            if (__OFADD__(v14, 1))
            {
              __break(1u);
              return result;
            }
            if (v18 >= v40)
              goto LABEL_46;
            v20 = *(_QWORD *)(v41 + 8 * v18);
            if (!v20)
            {
              v21 = v14 + 2;
              if (v14 + 2 >= v40)
                goto LABEL_46;
              v20 = *(_QWORD *)(v41 + 8 * v21);
              if (v20)
                goto LABEL_25;
              v21 = v14 + 3;
              if (v14 + 3 >= v40)
                goto LABEL_46;
              v20 = *(_QWORD *)(v41 + 8 * v21);
              if (v20)
                goto LABEL_25;
              v21 = v14 + 4;
              if (v14 + 4 >= v40)
                goto LABEL_46;
              v20 = *(_QWORD *)(v41 + 8 * v21);
              if (v20)
              {
LABEL_25:
                v18 = v21;
              }
              else
              {
                v18 = v14 + 5;
                if (v14 + 5 >= v40)
                  goto LABEL_46;
                v20 = *(_QWORD *)(v41 + 8 * v18);
                if (!v20)
                {
                  v35 = v14 + 6;
                  do
                  {
                    if (v40 == v35)
                      goto LABEL_46;
                    v20 = *(_QWORD *)(v41 + 8 * v35++);
                  }
                  while (!v20);
                  v18 = v35 - 1;
                }
              }
            }
            v16 = (v20 - 1) & v20;
            v17 = __clz(__rbit64(v20)) + (v18 << 6);
          }
          v19 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
          swift_retain();
          if (!v19)
            goto LABEL_46;
        }
        v43 = v16;
        sub_22655D640();
        v45 = v19;
        sub_22655C11C();
        v22 = sub_22655D670();
        v23 = -1 << *(_BYTE *)(a4 + 32);
        v24 = v22 & ~v23;
        if (((*(_QWORD *)(v13 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) != 0)
          break;
LABEL_9:
        result = swift_release();
        v15 = v43;
        v14 = v18;
        v5 = v42;
      }
      v25 = ~v23;
      v44 = OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type;
      while (1)
      {
        v26 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v24);
        swift_retain();
        if ((sub_22655C104() & 1) != 0)
          break;
        swift_release();
LABEL_31:
        v24 = (v24 + 1) & v25;
        if (((*(_QWORD *)(v13 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
          goto LABEL_9;
      }
      v27 = v13;
      v28 = *(unsigned __int8 *)(v26 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
      v29 = a4;
      v30 = *(unsigned __int8 *)(v45 + v44);
      swift_release();
      v31 = v28 == v30;
      v13 = v27;
      a4 = v29;
      if (!v31)
        goto LABEL_31;
      result = swift_release();
      v32 = (v24 >> 3) & 0x1FFFFFFFFFFFFFF8;
      v33 = 1 << v24;
      v34 = *(unint64_t *)((char *)a1 + v32);
      *(unint64_t *)((char *)a1 + v32) = v34 | (1 << v24);
      v9 = v43;
      v7 = v18;
      v14 = v18;
      v15 = v43;
      v5 = v42;
    }
    while ((v34 & v33) != 0);
    if (!__OFADD__(v38++, 1))
      continue;
    break;
  }
  __break(1u);
LABEL_46:
  sub_22646C924();
  swift_retain();
  return sub_2264D3ED4(a1, a2, v38, a4);
}

uint64_t sub_2264D4ADC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  BOOL v25;
  BOOL v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  unint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  uint64_t v51;
  int64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int64_t v56;
  int64_t v57;

  v4 = a4;
  v5 = a3;
  v47 = (unint64_t *)result;
  if (*(_QWORD *)(a4 + 16) >= *(_QWORD *)(a3 + 16))
    goto LABEL_33;
  v6 = 0;
  v49 = a4 + 56;
  v51 = 0;
  v7 = 1 << *(_BYTE *)(a4 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  v52 = (unint64_t)(v7 + 63) >> 6;
  v10 = a3 + 56;
  while (2)
  {
    while (2)
    {
      if (v9)
      {
        v54 = (v9 - 1) & v9;
        v56 = v6;
        v11 = __clz(__rbit64(v9)) | (v6 << 6);
      }
      else
      {
        v12 = v6 + 1;
        if (__OFADD__(v6, 1))
        {
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
          goto LABEL_68;
        }
        if (v12 >= v52)
          goto LABEL_64;
        v13 = *(_QWORD *)(v49 + 8 * v12);
        v14 = v6 + 1;
        if (!v13)
        {
          v14 = v6 + 2;
          if (v6 + 2 >= v52)
            goto LABEL_64;
          v13 = *(_QWORD *)(v49 + 8 * v14);
          if (!v13)
          {
            v14 = v6 + 3;
            if (v6 + 3 >= v52)
              goto LABEL_64;
            v13 = *(_QWORD *)(v49 + 8 * v14);
            if (!v13)
            {
              v15 = v6 + 4;
              if (v6 + 4 >= v52)
                goto LABEL_64;
              v13 = *(_QWORD *)(v49 + 8 * v15);
              if (!v13)
              {
                while (1)
                {
                  v14 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_67;
                  if (v14 >= v52)
                    goto LABEL_64;
                  v13 = *(_QWORD *)(v49 + 8 * v14);
                  ++v15;
                  if (v13)
                    goto LABEL_22;
                }
              }
              v14 = v6 + 4;
            }
          }
        }
LABEL_22:
        v54 = (v13 - 1) & v13;
        v56 = v14;
        v11 = __clz(__rbit64(v13)) + (v14 << 6);
      }
      v16 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v11);
      sub_22655D640();
      swift_retain();
      sub_22655C11C();
      v17 = sub_22655D670();
      v18 = -1 << *(_BYTE *)(v5 + 32);
      v19 = v17 & ~v18;
      if (((*(_QWORD *)(v10 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
      {
LABEL_6:
        result = swift_release();
        v9 = v54;
        v6 = v56;
        continue;
      }
      break;
    }
    v20 = ~v18;
    v21 = OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type;
    while (1)
    {
      v22 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v19);
      swift_retain();
      if ((sub_22655C104() & 1) != 0)
        break;
      swift_release();
LABEL_26:
      v19 = (v19 + 1) & v20;
      if (((*(_QWORD *)(v10 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
        goto LABEL_6;
    }
    v23 = *(unsigned __int8 *)(v22 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
    v24 = *(unsigned __int8 *)(v16 + v21);
    swift_release();
    v25 = v23 == v24;
    v4 = a4;
    v5 = a3;
    if (!v25)
      goto LABEL_26;
    result = swift_release();
    *(unint64_t *)((char *)v47 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v26 = __OFADD__(v51++, 1);
    v9 = v54;
    v6 = v56;
    if (!v26)
      continue;
    break;
  }
  __break(1u);
LABEL_33:
  v27 = 0;
  v48 = v5 + 56;
  v28 = 1 << *(_BYTE *)(v5 + 32);
  if (v28 < 64)
    v29 = ~(-1 << v28);
  else
    v29 = -1;
  v30 = v29 & *(_QWORD *)(v5 + 56);
  v50 = (unint64_t)(v28 + 63) >> 6;
  v51 = 0;
  v31 = v4 + 56;
  while (2)
  {
    while (2)
    {
      if (v30)
      {
        v55 = (v30 - 1) & v30;
        v57 = v27;
        v32 = __clz(__rbit64(v30)) | (v27 << 6);
        goto LABEL_54;
      }
      v33 = v27 + 1;
      if (__OFADD__(v27, 1))
        goto LABEL_66;
      if (v33 >= v50)
        goto LABEL_64;
      v34 = *(_QWORD *)(v48 + 8 * v33);
      v35 = v27 + 1;
      if (v34)
        goto LABEL_53;
      v35 = v27 + 2;
      if (v27 + 2 >= v50)
        goto LABEL_64;
      v34 = *(_QWORD *)(v48 + 8 * v35);
      if (v34)
        goto LABEL_53;
      v35 = v27 + 3;
      if (v27 + 3 >= v50)
        goto LABEL_64;
      v34 = *(_QWORD *)(v48 + 8 * v35);
      if (v34)
        goto LABEL_53;
      v36 = v27 + 4;
      if (v27 + 4 >= v50)
        goto LABEL_64;
      v34 = *(_QWORD *)(v48 + 8 * v36);
      if (!v34)
      {
        while (1)
        {
          v35 = v36 + 1;
          if (__OFADD__(v36, 1))
            break;
          if (v35 >= v50)
            goto LABEL_64;
          v34 = *(_QWORD *)(v48 + 8 * v35);
          ++v36;
          if (v34)
            goto LABEL_53;
        }
LABEL_68:
        __break(1u);
        return result;
      }
      v35 = v27 + 4;
LABEL_53:
      v55 = (v34 - 1) & v34;
      v57 = v35;
      v32 = __clz(__rbit64(v34)) + (v35 << 6);
LABEL_54:
      v53 = v32;
      v37 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v32);
      sub_22655D640();
      swift_retain();
      sub_22655C11C();
      v38 = sub_22655D670();
      v39 = -1 << *(_BYTE *)(v4 + 32);
      v40 = v38 & ~v39;
      if (((*(_QWORD *)(v31 + ((v40 >> 3) & 0xFFFFFFFFFFFFF8)) >> v40) & 1) == 0)
      {
LABEL_37:
        result = swift_release();
        v30 = v55;
        v27 = v57;
        continue;
      }
      break;
    }
    v41 = ~v39;
    v42 = OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type;
    while (2)
    {
      v43 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v40);
      swift_retain();
      if ((sub_22655C104() & 1) == 0)
      {
        swift_release();
        goto LABEL_57;
      }
      v44 = *(unsigned __int8 *)(v43 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
      v45 = *(unsigned __int8 *)(v37 + v42);
      swift_release();
      v25 = v44 == v45;
      v4 = a4;
      v5 = a3;
      if (!v25)
      {
LABEL_57:
        v40 = (v40 + 1) & v41;
        if (((*(_QWORD *)(v31 + ((v40 >> 3) & 0xFFFFFFFFFFFFF8)) >> v40) & 1) == 0)
          goto LABEL_37;
        continue;
      }
      break;
    }
    result = swift_release();
    *(unint64_t *)((char *)v47 + ((v53 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v53;
    v26 = __OFADD__(v51++, 1);
    v30 = v55;
    v27 = v57;
    if (!v26)
      continue;
    break;
  }
  __break(1u);
LABEL_64:
  swift_retain();
  return sub_2264D3ED4(v47, a2, v51, v5);
}

uint64_t sub_2264D504C(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  id v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  _QWORD *v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  id v35;
  id v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;

  if (a1 >> 62)
    goto LABEL_52;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (v2)
  {
    while (1)
    {
      if (v2 < 1)
      {
        __break(1u);
        goto LABEL_59;
      }
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v4 = 0;
      v5 = 0;
      v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v7 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      while (1)
      {
        v8 = MEMORY[0x2276999E4](v5, a1);
        if (!v4)
        {
          v9 = v6[3];
          if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0)
            goto LABEL_50;
          v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
          if (v10 <= 1)
            v11 = 1;
          else
            v11 = v10;
          __swift_instantiateConcreteTypeFromMangledName(&qword_255843A28);
          v12 = (_QWORD *)swift_allocObject();
          v13 = _swift_stdlib_malloc_size(v12);
          v14 = v13 - 32;
          if (v13 < 32)
            v14 = v13 - 17;
          v15 = v14 >> 4;
          v12[2] = v11;
          v12[3] = 2 * (v14 >> 4);
          v16 = (unint64_t)(v12 + 4);
          v17 = v6[3] >> 1;
          if (v6[2])
          {
            if (v12 != v6 || v16 >= (unint64_t)&v6[2 * v17 + 4])
              memmove(v12 + 4, v6 + 4, 16 * v17);
            v6[2] = 0;
          }
          v7 = (_QWORD *)(v16 + 16 * v17);
          v4 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - v17;
          swift_release();
          v6 = v12;
        }
        v19 = __OFSUB__(v4--, 1);
        if (v19)
          break;
        *v7 = v5;
        v7[1] = v8;
        v7 += 2;
        if (v2 == ++v5)
          goto LABEL_47;
      }
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      swift_bridgeObjectRetain();
      result = sub_22655D400();
      v2 = result;
      if (!result)
        goto LABEL_53;
    }
    v4 = 0;
    v20 = 0;
    v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v21 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
    do
    {
      v22 = *(void **)(a1 + 8 * v20 + 32);
      if (v4)
      {
        v23 = v22;
        v19 = __OFSUB__(v4--, 1);
        if (v19)
          goto LABEL_49;
      }
      else
      {
        v24 = v6[3];
        if ((uint64_t)((v24 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_51;
        v25 = v24 & 0xFFFFFFFFFFFFFFFELL;
        if (v25 <= 1)
          v26 = 1;
        else
          v26 = v25;
        __swift_instantiateConcreteTypeFromMangledName(&qword_255843A28);
        v27 = (_QWORD *)swift_allocObject();
        v28 = _swift_stdlib_malloc_size(v27);
        v29 = v28 - 32;
        if (v28 < 32)
          v29 = v28 - 17;
        v30 = v29 >> 4;
        v27[2] = v26;
        v27[3] = 2 * (v29 >> 4);
        v31 = v27 + 4;
        v32 = v6[3] >> 1;
        v21 = &v27[2 * v32 + 4];
        v33 = (v30 & 0x7FFFFFFFFFFFFFFFLL) - v32;
        if (v6[2])
        {
          if (v27 != v6 || v31 >= &v6[2 * v32 + 4])
            memmove(v31, v6 + 4, 16 * v32);
          v35 = v22;
          v6[2] = 0;
        }
        else
        {
          v36 = v22;
        }
        swift_release();
        v6 = v27;
        v19 = __OFSUB__(v33, 1);
        v4 = v33 - 1;
        if (v19)
          goto LABEL_49;
      }
      *v21 = v20;
      v21[1] = v22;
      v21 += 2;
      ++v20;
    }
    while (v2 != v20);
LABEL_47:
    result = swift_bridgeObjectRelease();
  }
  else
  {
LABEL_53:
    result = swift_bridgeObjectRelease();
    v4 = 0;
    v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v37 = v6[3];
  if (v37 < 2)
    return (uint64_t)v6;
  v38 = v37 >> 1;
  v19 = __OFSUB__(v38, v4);
  v39 = v38 - v4;
  if (!v19)
  {
    v6[2] = v39;
    return (uint64_t)v6;
  }
LABEL_59:
  __break(1u);
  return result;
}

uint64_t sub_2264D5318(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  __int128 *v6;
  __int128 v7;
  __int128 v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  BOOL v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;

  v1 = *(_QWORD *)(result + 16);
  v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v1)
  {
    result = swift_bridgeObjectRetain();
    v3 = 0;
    v4 = 0;
    v5 = v2 + 4;
    v6 = (__int128 *)(result + 48);
    while (1)
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      if (!v3)
      {
        v9 = v2[3];
        if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_26;
        v21 = *v6;
        v22 = *(v6 - 1);
        v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
        if (v10 <= 1)
          v11 = 1;
        else
          v11 = v10;
        __swift_instantiateConcreteTypeFromMangledName(&qword_255843A80);
        v12 = (_QWORD *)swift_allocObject();
        v13 = (uint64_t)(_swift_stdlib_malloc_size(v12) - 32) / 48;
        v12[2] = v11;
        v12[3] = 2 * v13;
        v14 = (unint64_t)(v12 + 4);
        v15 = v2[3] >> 1;
        if (v2[2])
        {
          if (v12 != v2 || v14 >= (unint64_t)&v2[6 * v15 + 4])
            memmove(v12 + 4, v2 + 4, 48 * v15);
          v2[2] = 0;
        }
        v5 = (_QWORD *)(v14 + 48 * v15);
        v3 = (v13 & 0x7FFFFFFFFFFFFFFFLL) - v15;
        result = swift_release();
        v2 = v12;
        v8 = v21;
        v7 = v22;
      }
      v17 = __OFSUB__(v3--, 1);
      if (v17)
        break;
      *v5 = v4;
      *((_OWORD *)v5 + 1) = v7;
      *((_OWORD *)v5 + 2) = v8;
      v5 += 6;
      v6 += 2;
      if (v1 == ++v4)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v3 = 0;
LABEL_21:
  v18 = v2[3];
  if (v18 < 2)
    return (uint64_t)v2;
  v19 = v18 >> 1;
  v17 = __OFSUB__(v19, v3);
  v20 = v19 - v3;
  if (!v17)
  {
    v2[2] = v20;
    return (uint64_t)v2;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_2264D54B0(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  BOOL v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(result + 16);
  v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v1)
  {
    result = swift_bridgeObjectRetain();
    v3 = 0;
    v4 = 0;
    v5 = v2 + 4;
    v6 = (uint64_t *)(result + 40);
    while (1)
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      if (!v3)
      {
        v9 = v2[3];
        if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_26;
        v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
        if (v10 <= 1)
          v11 = 1;
        else
          v11 = v10;
        __swift_instantiateConcreteTypeFromMangledName(&qword_255843A90);
        v12 = (_QWORD *)swift_allocObject();
        v13 = (uint64_t)(_swift_stdlib_malloc_size(v12) - 32) / 24;
        v12[2] = v11;
        v12[3] = 2 * v13;
        v14 = (unint64_t)(v12 + 4);
        v15 = v2[3] >> 1;
        if (v2[2])
        {
          if (v12 != v2 || v14 >= (unint64_t)&v2[3 * v15 + 4])
            memmove(v12 + 4, v2 + 4, 24 * v15);
          v2[2] = 0;
        }
        v5 = (_QWORD *)(v14 + 24 * v15);
        v3 = (v13 & 0x7FFFFFFFFFFFFFFFLL) - v15;
        result = swift_release();
        v2 = v12;
      }
      v17 = __OFSUB__(v3--, 1);
      if (v17)
        break;
      *v5 = v4;
      v5[1] = v7;
      v5[2] = v8;
      v5 += 3;
      v6 += 2;
      if (v1 == ++v4)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v3 = 0;
LABEL_21:
  v18 = v2[3];
  if (v18 < 2)
    return (uint64_t)v2;
  v19 = v18 >> 1;
  v17 = __OFSUB__(v19, v3);
  v20 = v19 - v3;
  if (!v17)
  {
    v2[2] = v20;
    return (uint64_t)v2;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_2264D5648(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  BOOL v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(result + 16);
  v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v3 = result;
    result = swift_bridgeObjectRetain();
    v4 = 0;
    v5 = 0;
    v6 = v2 + 4;
    while (1)
    {
      v7 = *(_QWORD *)(v3 + 8 * v5 + 32);
      if (!v4)
      {
        v8 = v2[3];
        if ((uint64_t)((v8 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_28;
        v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
        if (v9 <= 1)
          v10 = 1;
        else
          v10 = v9;
        __swift_instantiateConcreteTypeFromMangledName(&qword_255843A50);
        v11 = (_QWORD *)swift_allocObject();
        v12 = _swift_stdlib_malloc_size(v11);
        v13 = v12 - 32;
        if (v12 < 32)
          v13 = v12 - 17;
        v14 = v13 >> 4;
        v11[2] = v10;
        v11[3] = 2 * (v13 >> 4);
        v15 = (unint64_t)(v11 + 4);
        v16 = v2[3] >> 1;
        if (v2[2])
        {
          if (v11 != v2 || v15 >= (unint64_t)&v2[2 * v16 + 4])
            memmove(v11 + 4, v2 + 4, 16 * v16);
          v2[2] = 0;
        }
        v6 = (_QWORD *)(v15 + 16 * v16);
        v4 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v16;
        result = swift_release();
        v2 = v11;
      }
      v18 = __OFSUB__(v4--, 1);
      if (v18)
        break;
      *v6 = v5;
      v6[1] = v7;
      v6 += 2;
      if (v1 == ++v5)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v4 = 0;
LABEL_23:
  v19 = v2[3];
  if (v19 < 2)
    return (uint64_t)v2;
  v20 = v19 >> 1;
  v18 = __OFSUB__(v20, v4);
  v21 = v20 - v4;
  if (!v18)
  {
    v2[2] = v21;
    return (uint64_t)v2;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2264D57C0(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  BOOL v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(result + 16);
  v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v1)
  {
    result = swift_bridgeObjectRetain();
    v3 = 0;
    v4 = 0;
    v5 = v2 + 4;
    v6 = (_QWORD *)(result + 40);
    while (1)
    {
      v7 = *((_BYTE *)v6 - 8);
      v8 = *v6;
      if (!v3)
      {
        v9 = v2[3];
        if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_26;
        v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
        if (v10 <= 1)
          v11 = 1;
        else
          v11 = v10;
        __swift_instantiateConcreteTypeFromMangledName(&qword_255843AA8);
        v12 = (_QWORD *)swift_allocObject();
        v13 = (uint64_t)(_swift_stdlib_malloc_size(v12) - 32) / 24;
        v12[2] = v11;
        v12[3] = 2 * v13;
        v14 = (unint64_t)(v12 + 4);
        v15 = v2[3] >> 1;
        if (v2[2])
        {
          if (v12 != v2 || v14 >= (unint64_t)&v2[3 * v15 + 4])
            memmove(v12 + 4, v2 + 4, 24 * v15);
          v2[2] = 0;
        }
        v5 = (_QWORD *)(v14 + 24 * v15);
        v3 = (v13 & 0x7FFFFFFFFFFFFFFFLL) - v15;
        result = swift_release();
        v2 = v12;
      }
      v17 = __OFSUB__(v3--, 1);
      if (v17)
        break;
      *v5 = v4;
      *((_BYTE *)v5 + 8) = v7;
      v5[2] = v8;
      v5 += 3;
      v6 += 2;
      if (v1 == ++v4)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v3 = 0;
LABEL_21:
  v18 = v2[3];
  if (v18 < 2)
    return (uint64_t)v2;
  v19 = v18 >> 1;
  v17 = __OFSUB__(v19, v3);
  v20 = v19 - v3;
  if (!v17)
  {
    v2[2] = v20;
    return (uint64_t)v2;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_2264D5968(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  __int128 v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  BOOL v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __int128 v22;

  v1 = *(_QWORD *)(result + 16);
  v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v3 = result;
    result = swift_bridgeObjectRetain();
    v4 = 0;
    v5 = 0;
    v6 = v2 + 4;
    while (1)
    {
      v7 = *(_OWORD *)(v3 + 16 * v5 + 32);
      if (!v4)
      {
        v8 = v2[3];
        if ((uint64_t)((v8 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_28;
        v22 = *(_OWORD *)(v3 + 16 * v5 + 32);
        v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
        if (v9 <= 1)
          v10 = 1;
        else
          v10 = v9;
        __swift_instantiateConcreteTypeFromMangledName(&qword_255843AE8);
        v11 = (_QWORD *)swift_allocObject();
        v12 = _swift_stdlib_malloc_size(v11);
        v13 = v12 - 32;
        if (v12 < 32)
          v13 = v12 - 1;
        v14 = v13 >> 5;
        v11[2] = v10;
        v11[3] = 2 * (v13 >> 5);
        v15 = (unint64_t)(v11 + 4);
        v16 = v2[3] >> 1;
        if (v2[2])
        {
          if (v11 != v2 || v15 >= (unint64_t)&v2[4 * v16 + 4])
            memmove(v11 + 4, v2 + 4, 32 * v16);
          v2[2] = 0;
        }
        v6 = (_QWORD *)(v15 + 32 * v16);
        v4 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v16;
        result = swift_release();
        v2 = v11;
        v7 = v22;
      }
      v18 = __OFSUB__(v4--, 1);
      if (v18)
        break;
      *v6 = v5;
      *((_OWORD *)v6 + 1) = v7;
      v6 += 4;
      if (v1 == ++v5)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v4 = 0;
LABEL_23:
  v19 = v2[3];
  if (v19 < 2)
    return (uint64_t)v2;
  v20 = v19 >> 1;
  v18 = __OFSUB__(v20, v4);
  v21 = v20 - v4;
  if (!v18)
  {
    v2[2] = v21;
    return (uint64_t)v2;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2264D5AE8(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  BOOL v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(result + 16);
  v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v3 = result;
    result = swift_bridgeObjectRetain();
    v4 = 0;
    v5 = 0;
    v6 = v2 + 4;
    while (1)
    {
      v7 = *(_QWORD *)(v3 + 8 * v5 + 32);
      if (v4)
      {
        result = swift_bridgeObjectRetain();
        v8 = __OFSUB__(v4--, 1);
        if (v8)
          goto LABEL_30;
      }
      else
      {
        v9 = v2[3];
        if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_31;
        v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
        if (v10 <= 1)
          v11 = 1;
        else
          v11 = v10;
        __swift_instantiateConcreteTypeFromMangledName(&qword_255843A58);
        v12 = (_QWORD *)swift_allocObject();
        v13 = _swift_stdlib_malloc_size(v12);
        v14 = v13 - 32;
        if (v13 < 32)
          v14 = v13 - 17;
        v15 = v14 >> 4;
        v12[2] = v11;
        v12[3] = 2 * (v14 >> 4);
        v16 = v12 + 4;
        v17 = v2[3] >> 1;
        v6 = &v12[2 * v17 + 4];
        v18 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - v17;
        if (v2[2])
        {
          if (v12 != v2 || v16 >= &v2[2 * v17 + 4])
            memmove(v16, v2 + 4, 16 * v17);
          swift_bridgeObjectRetain();
          v2[2] = 0;
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        result = swift_release();
        v2 = v12;
        v8 = __OFSUB__(v18, 1);
        v4 = v18 - 1;
        if (v8)
        {
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
      }
      *v6 = v5;
      v6[1] = v7;
      v6 += 2;
      if (v1 == ++v5)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
  }
  v4 = 0;
LABEL_26:
  v20 = v2[3];
  if (v20 >= 2)
  {
    v21 = v20 >> 1;
    v8 = __OFSUB__(v21, v4);
    v22 = v21 - v4;
    if (v8)
      goto LABEL_32;
    v2[2] = v22;
  }
  return (uint64_t)v2;
}

uint64_t sub_2264D5C74(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  _QWORD *v12;
  size_t v13;
  unint64_t v14;
  size_t v15;
  BOOL v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;

  v2 = *(_QWORD *)(result + 16);
  v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v2 != a2)
  {
    if (v2 > a2)
    {
      v5 = a2;
      if (a2 < 0)
      {
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      if (!v2)
      {
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      v6 = result;
      result = swift_bridgeObjectRetain();
      v4 = 0;
      v7 = v3 + 4;
      while (1)
      {
        v8 = *(_BYTE *)(v6 + v5 + 32);
        if (!v4)
        {
          v9 = v3[3];
          if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0)
            goto LABEL_29;
          v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
          if (v10 <= 1)
            v11 = 1;
          else
            v11 = v10;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558480F0);
          v12 = (_QWORD *)swift_allocObject();
          v13 = 2 * _swift_stdlib_malloc_size(v12) - 64;
          v12[2] = v11;
          v12[3] = v13;
          v14 = (unint64_t)(v12 + 4);
          v15 = v3[3] >> 1;
          if (v3[2])
          {
            if (v12 != v3 || v14 >= (unint64_t)v3 + v15 + 32)
              memmove(v12 + 4, v3 + 4, v15);
            v3[2] = 0;
          }
          v7 = (_BYTE *)(v14 + v15);
          v4 = (v13 >> 1) - v15;
          result = swift_release();
          v3 = v12;
        }
        v17 = __OFSUB__(v4--, 1);
        if (v17)
          break;
        ++v5;
        *v7++ = v8;
        if (v2 == v5)
        {
          result = swift_bridgeObjectRelease();
          goto LABEL_24;
        }
      }
      __break(1u);
LABEL_29:
      __break(1u);
    }
    __break(1u);
    goto LABEL_31;
  }
  v4 = 0;
LABEL_24:
  v18 = v3[3];
  if (v18 < 2)
    return (uint64_t)v3;
  v19 = v18 >> 1;
  v17 = __OFSUB__(v19, v4);
  v20 = v19 - v4;
  if (!v17)
  {
    v3[2] = v20;
    return (uint64_t)v3;
  }
LABEL_33:
  __break(1u);
  return result;
}

int64_t sub_2264D5DE0(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_2264D5EC4(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;

  v5 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if ((a3 & 1) != 0)
    {
      if (a4 < 0)
        v6 = a4;
      else
        v6 = a4 & 0xFFFFFFFFFFFFFF8;
      MEMORY[0x22769996C](result, a2, v6);
      type metadata accessor for HullPointUUID();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v7 = v15;
      swift_unknownObjectRelease();
      return v7;
    }
    goto LABEL_27;
  }
  if ((a3 & 1) == 0)
  {
    if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_21;
      __break(1u);
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_25;
  }
LABEL_13:
  if (sub_22655D25C() != *(_DWORD *)(a4 + 36))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_22655D268();
  type metadata accessor for HullPointUUID();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
  sub_22655D640();
  sub_22655C11C();
  v8 = sub_22655D670();
  v9 = -1 << *(_BYTE *)(a4 + 32);
  v5 = v8 & ~v9;
  if (((*(_QWORD *)(a4 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
  {
LABEL_26:
    result = swift_release();
    __break(1u);
LABEL_27:
    __break(1u);
    return result;
  }
  v10 = ~v9;
  v11 = OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type;
  while (1)
  {
    v12 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v5);
    swift_retain();
    if ((sub_22655C104() & 1) != 0)
      break;
    swift_release();
LABEL_17:
    v5 = (v5 + 1) & v10;
    if (((*(_QWORD *)(a4 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
      goto LABEL_26;
  }
  v13 = *(unsigned __int8 *)(v12 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
  v14 = *(unsigned __int8 *)(v15 + v11);
  swift_release();
  if (v13 != v14)
    goto LABEL_17;
  swift_release();
LABEL_21:
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v5);
  swift_retain();
  return v7;
}

uint64_t sub_2264D6150(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_2264D61D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char *v15;
  float32x2_t v16;
  float32x2_t v17;
  id v18;
  char *v19;
  char isUniquelyReferenced_nonNull_native;
  char v21;
  unint64_t v22;
  int32x2_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  int32x2_t v30;
  float32x2_t v31;
  float32x2_t v32;
  float32x2_t v33;
  float32x2_t v34;
  float32x2_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  int64_t v42;

  v41 = a1 + 64;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v42 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  v5 = 0;
  v6 = (_QWORD *)MEMORY[0x24BEE4B00];
  while (1)
  {
    if (v4)
    {
      v7 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      v8 = v7 | (v5 << 6);
    }
    else
    {
      v9 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_34;
      if (v9 >= v42)
      {
LABEL_31:
        swift_release();
        return (uint64_t)v6;
      }
      v10 = *(_QWORD *)(v41 + 8 * v9);
      ++v5;
      if (!v10)
      {
        v5 = v9 + 1;
        if (v9 + 1 >= v42)
          goto LABEL_31;
        v10 = *(_QWORD *)(v41 + 8 * v5);
        if (!v10)
        {
          v5 = v9 + 2;
          if (v9 + 2 >= v42)
            goto LABEL_31;
          v10 = *(_QWORD *)(v41 + 8 * v5);
          if (!v10)
          {
            v11 = v9 + 3;
            if (v11 >= v42)
              goto LABEL_31;
            v10 = *(_QWORD *)(v41 + 8 * v11);
            if (!v10)
            {
              while (1)
              {
                v5 = v11 + 1;
                if (__OFADD__(v11, 1))
                  goto LABEL_35;
                if (v5 >= v42)
                  goto LABEL_31;
                v10 = *(_QWORD *)(v41 + 8 * v5);
                ++v11;
                if (v10)
                  goto LABEL_21;
              }
            }
            v5 = v11;
          }
        }
      }
LABEL_21:
      v4 = (v10 - 1) & v10;
      v8 = __clz(__rbit64(v10)) + (v5 << 6);
    }
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v8);
    v13 = *(_QWORD *)(a1 + 56) + 16 * v8;
    v14 = *(void **)v13;
    v15 = *(char **)(v13 + 8);
    v16 = *(float32x2_t *)&v15[OBJC_IVAR____TtC8RoomPlan9HullPoint_position];
    v17 = *(float32x2_t *)(*(_QWORD *)v13 + OBJC_IVAR____TtC8RoomPlan9HullPoint_position);
    swift_retain_n();
    v18 = v14;
    v19 = v15;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = sub_226534954(v12);
    v24 = v6[2];
    v25 = (v21 & 1) == 0;
    v26 = v24 + v25;
    if (__OFADD__(v24, v25))
      break;
    v27 = v21;
    if (v6[3] >= v26)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_226547C80();
    }
    else
    {
      sub_226541388(v26, isUniquelyReferenced_nonNull_native);
      v28 = sub_226534954(v12);
      if ((v27 & 1) != (v29 & 1))
        goto LABEL_36;
      v22 = v28;
    }
    v30 = (int32x2_t)vsub_f32(v16, v17);
    *(float *)v23.i32 = -*(float *)&v30.i32[1];
    v31 = (float32x2_t)vzip1_s32(v23, v30);
    v32 = vmul_f32(v31, v31);
    v32.i32[0] = vadd_f32(v32, (float32x2_t)vdup_lane_s32((int32x2_t)v32, 1)).u32[0];
    v33 = vrsqrte_f32((float32x2_t)v32.u32[0]);
    v34 = vmul_f32(v33, vrsqrts_f32((float32x2_t)v32.u32[0], vmul_f32(v33, v33)));
    v35 = vmul_n_f32(v31, vmul_f32(v34, vrsqrts_f32((float32x2_t)v32.u32[0], vmul_f32(v34, v34))).f32[0]);
    if ((v27 & 1) != 0)
    {
      *(float32x2_t *)(v6[7] + 8 * v22) = v35;
    }
    else
    {
      v6[(v22 >> 6) + 8] |= 1 << v22;
      v36 = 8 * v22;
      *(_QWORD *)(v6[6] + v36) = v12;
      *(float32x2_t *)(v6[7] + v36) = v35;
      v37 = v6[2];
      v38 = __OFADD__(v37, 1);
      v39 = v37 + 1;
      if (v38)
        goto LABEL_33;
      v6[2] = v39;
      swift_retain();
    }

    swift_release_n();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  type metadata accessor for HullPointUUID();
  result = sub_22655D5A4();
  __break(1u);
  return result;
}

char *sub_2264D64E8(unint64_t a1)
{
  uint64_t v2;
  char *result;
  unint64_t v4;
  char *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  float v10;
  float v11;
  BOOL v12;
  unsigned __int8 v13;
  BOOL v14;
  void *v15;

  if (!(a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (char *)swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_25:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  result = (char *)sub_22655D400();
  v2 = (uint64_t)result;
  if (!result)
    goto LABEL_25;
LABEL_3:
  v4 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    result = (char *)MEMORY[0x2276999E4](0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    result = (char *)*(id *)(a1 + 32);
  }
  v5 = result;
  v6 = v2 - 1;
  if (v2 == 1)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return v5;
  }
  if (v2 < 2)
    goto LABEL_29;
  if (v4 || (v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10), v7 >= 2) && v6 < v7)
  {
    v8 = 0;
    do
    {
      if (v4)
        v9 = (char *)MEMORY[0x2276999E4](v8 + 1, a1);
      else
        v9 = (char *)*(id *)(a1 + 8 * v8 + 40);
      LODWORD(v10) = HIDWORD(*(_QWORD *)&v9[OBJC_IVAR____TtC8RoomPlan9HullPoint_position]);
      LODWORD(v11) = HIDWORD(*(_QWORD *)&v5[OBJC_IVAR____TtC8RoomPlan9HullPoint_position]);
      v12 = v10 < v11;
      v13 = vcgt_f32(*(float32x2_t *)&v5[OBJC_IVAR____TtC8RoomPlan9HullPoint_position], *(float32x2_t *)&v9[OBJC_IVAR____TtC8RoomPlan9HullPoint_position]).u8[0];
      if (vabds_f32(v10, v11) < 0.00000011921)
        v12 = v13;
      v14 = !v12;
      if (v12)
        v15 = v5;
      else
        v15 = v9;
      if (!v14)
        v5 = v9;

      ++v8;
    }
    while (v6 != v8);
    goto LABEL_7;
  }
LABEL_30:
  __break(1u);
  return result;
}

_QWORD *sub_2264D6660(unint64_t a1, float a2)
{
  float32x2_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *result;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  void *v36;
  char *v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  float32x2_t v49;
  char *v50;
  char *v51;
  float32x2_t v52;
  _QWORD *v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  float32x2_t v57;
  char *v58;
  float32x2_t v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  char *v63;
  unint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  _QWORD *v67;
  float32x2_t v68;
  unint64_t v69;
  unint64_t v70;
  _QWORD *v71;
  __int128 v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  int64_t v78;
  int64_t v79;
  float v80;
  _QWORD *v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  float v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  __int128 v90;
  _QWORD *v91;
  float v92;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v95;
  int64_t v96;
  float32x4_t *v97;
  unint64_t v98;
  float32x4_t v99;
  unint64_t v100;
  int64_t v101;
  unint64_t v102;
  int64_t v103;
  uint64_t v104;
  float v105;
  float v106;
  uint64_t v107;
  float32x4_t *v108;
  float v109;
  float v110;
  float32x4_t v111;
  float v112;
  float v113;
  float32x2_t v117;
  float32x2_t v118;
  float32x2_t v119;
  int64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  float v132;
  unint64_t v133;
  uint64_t v134;
  float32x2_t v135;
  uint64_t v136;
  unint64_t v137;
  __int128 v138;
  float32x4_t v139;
  unint64_t v140[9];
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;

  v4 = a1;
  v142 = MEMORY[0x24BEE4B08];
  v140[0] = MEMORY[0x24BEE4AF8];
  v124 = a1 >> 62;
  if (a1 >> 62)
    goto LABEL_160;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  for (result = (_QWORD *)swift_bridgeObjectRetain(); ; v5 = (uint64_t)result)
  {
    v7 = &OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids;
    if (!v5)
      goto LABEL_8;
    if (v5 < 1)
      break;
    if ((v4 & 0xC000000000000001) == 0)
    {
      v12 = 0;
      do
      {
        ++v12;
        swift_beginAccess();
        v13 = swift_bridgeObjectRetain();
        sub_22646A410(v13);
      }
      while (v5 != v12);
      swift_bridgeObjectRelease();
      v7 = &OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids;
      goto LABEL_12;
    }
    v8 = 0;
    do
    {
      v9 = MEMORY[0x2276999E4](v8++, v4);
      v10 = (uint64_t *)(v9 + OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids);
      swift_beginAccess();
      v11 = *v10;
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      sub_22646A410(v11);
    }
    while (v5 != v8);
LABEL_8:
    swift_bridgeObjectRelease();
LABEL_12:
    v14 = sub_22653CF48(v140[0]);
    swift_bridgeObjectRelease();
    if ((v14 & 0xC000000000000001) != 0)
    {
      sub_22655D244();
      type metadata accessor for HullPointUUID();
      sub_2264D906C();
      sub_22655CFB0();
      v14 = v143;
      v121 = v144;
      v15 = v145;
      v16 = v146;
      v17 = v147;
    }
    else
    {
      v16 = 0;
      v18 = -1 << *(_BYTE *)(v14 + 32);
      v121 = v14 + 56;
      v15 = ~v18;
      v19 = -v18;
      if (v19 < 64)
        v20 = ~(-1 << v19);
      else
        v20 = -1;
      v17 = v20 & *(_QWORD *)(v14 + 56);
    }
    v126 = v17;
    v120 = (unint64_t)(v15 + 64) >> 6;
    v127 = v4 & 0xFFFFFFFFFFFFFF8;
    v128 = v4 + 32;
    v129 = v4 & 0xC000000000000001;
    v2.i32[0] = 0;
    v21 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v122 = v14;
    v123 = v4;
LABEL_19:
    v130 = v21;
    v22 = v126;
    if (v14 < 0)
    {
LABEL_20:
      v23 = sub_22655D298();
      if (v23)
      {
        v141 = v23;
        type metadata accessor for HullPointUUID();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v24 = v140[0];
        swift_unknownObjectRelease();
        v125 = v16;
        v126 = v22;
        goto LABEL_39;
      }
LABEL_99:
      v30 = MEMORY[0x24BEE4AF8];
LABEL_100:
      v73 = v30;
      sub_22646C924();
      v74 = v142 + 56;
      v75 = 1 << *(_BYTE *)(v142 + 32);
      v76 = -1;
      if (v75 < 64)
        v76 = ~(-1 << v75);
      v77 = v76 & *(_QWORD *)(v142 + 56);
      v78 = (unint64_t)(v75 + 63) >> 6;
      v136 = v142;
      swift_bridgeObjectRetain();
      v79 = 0;
      v80 = 0.0;
      v133 = v73;
      v81 = v130;
      if (v77)
      {
LABEL_103:
        v82 = __clz(__rbit64(v77));
        v77 &= v77 - 1;
        v83 = v82 | (v79 << 6);
        v84 = v81[2];
        if (!v84)
          goto LABEL_136;
LABEL_104:
        v85 = *(float *)(*(_QWORD *)(v136 + 48) + 4 * v83);
        swift_bridgeObjectRetain();
        v86 = 0;
        v87 = MEMORY[0x24BEE4AF8];
        do
        {
          v91 = &v81[2 * v86];
          v92 = COERCE_FLOAT(v91[5]);
          if (v85 <= v92 && v92 < (float)(v85 + a2))
          {
            v138 = *((_OWORD *)v91 + 2);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v140[0] = v87;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_2264C1310(0, *(_QWORD *)(v87 + 16) + 1, 1);
              v81 = v130;
              v87 = v140[0];
            }
            v89 = *(_QWORD *)(v87 + 16);
            v88 = *(_QWORD *)(v87 + 24);
            v90 = v138;
            if (v89 >= v88 >> 1)
            {
              sub_2264C1310(v88 > 1, v89 + 1, 1);
              v90 = v138;
              v81 = v130;
              v87 = v140[0];
            }
            *(_QWORD *)(v87 + 16) = v89 + 1;
            *(_OWORD *)(v87 + 16 * v89 + 32) = v90;
          }
          ++v86;
        }
        while (v84 != v86);
        swift_bridgeObjectRelease();
        v95 = MEMORY[0x24BEE4AF8];
        v96 = *(_QWORD *)(v87 + 16);
        if (!v96)
          goto LABEL_137;
LABEL_117:
        v140[0] = v95;
        sub_2264C7968(0, v96, 0);
        v95 = v140[0];
        v97 = (float32x4_t *)(v87 + 32);
        v98 = *(_QWORD *)(v140[0] + 16);
        do
        {
          v99 = *v97;
          v140[0] = v95;
          v100 = *(_QWORD *)(v95 + 24);
          v4 = v98 + 1;
          if (v98 >= v100 >> 1)
          {
            v139 = v99;
            sub_2264C7968(v100 > 1, v98 + 1, 1);
            v99 = v139;
            v95 = v140[0];
          }
          *(_QWORD *)(v95 + 16) = v4;
          *(float *)(v95 + 4 * v98 + 32) = vmuls_lane_f32(sqrtf(vaddv_f32((float32x2_t)*(_OWORD *)&vmulq_f32(v99, v99))), v99, 2);
          ++v97;
          ++v98;
          --v96;
        }
        while (v96);
        v81 = v130;
        goto LABEL_138;
      }
      while (1)
      {
        v101 = v79 + 1;
        if (__OFADD__(v79, 1))
          goto LABEL_157;
        if (v101 >= v78)
          goto LABEL_147;
        v102 = *(_QWORD *)(v74 + 8 * v101);
        ++v79;
        if (!v102)
        {
          v79 = v101 + 1;
          if (v101 + 1 >= v78)
            goto LABEL_147;
          v102 = *(_QWORD *)(v74 + 8 * v79);
          if (!v102)
          {
            v79 = v101 + 2;
            if (v101 + 2 >= v78)
              goto LABEL_147;
            v102 = *(_QWORD *)(v74 + 8 * v79);
            if (!v102)
            {
              v103 = v101 + 3;
              if (v103 >= v78)
              {
LABEL_147:
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v107 = *(_QWORD *)(v133 + 16);
                if (v107)
                {
                  v108 = (float32x4_t *)(v133 + 32);
                  v109 = 0.0;
                  v110 = 0.0;
                  do
                  {
                    v111 = *v108++;
                    v112 = sqrtf(vaddv_f32((float32x2_t)*(_OWORD *)&vmulq_f32(v111, v111)));
                    v110 = v110 + vmuls_lane_f32(v112, v111, 2);
                    v109 = v109 + v112;
                    --v107;
                  }
                  while (v107);
                }
                else
                {
                  v109 = 0.0;
                  v110 = 0.0;
                }
                swift_bridgeObjectRelease();
                if (fabsf(v109) < 0.00000011921)
                  return 0;
                v113 = tanf(v110 / v109);
                __asm { FMOV            V1.2S, #1.0 }
                _D1.f32[1] = v113;
                v117 = vmul_f32(_D1, _D1);
                v117.i32[0] = vadd_f32(v117, (float32x2_t)vdup_lane_s32((int32x2_t)v117, 1)).u32[0];
                v118 = vrsqrte_f32((float32x2_t)v117.u32[0]);
                v119 = vmul_f32(v118, vrsqrts_f32((float32x2_t)v117.u32[0], vmul_f32(v118, v118)));
                return (_QWORD *)vmul_n_f32(_D1, vmul_f32(v119, vrsqrts_f32((float32x2_t)v117.u32[0], vmul_f32(v119, v119))).f32[0]);
              }
              v102 = *(_QWORD *)(v74 + 8 * v103);
              if (!v102)
              {
                while (1)
                {
                  v79 = v103 + 1;
                  if (__OFADD__(v103, 1))
                    goto LABEL_158;
                  if (v79 >= v78)
                    goto LABEL_147;
                  v102 = *(_QWORD *)(v74 + 8 * v79);
                  ++v103;
                  if (v102)
                    goto LABEL_135;
                }
              }
              v79 = v103;
            }
          }
        }
LABEL_135:
        v77 = (v102 - 1) & v102;
        v83 = __clz(__rbit64(v102)) + (v79 << 6);
        v84 = v81[2];
        if (v84)
          goto LABEL_104;
LABEL_136:
        v95 = MEMORY[0x24BEE4AF8];
        v87 = MEMORY[0x24BEE4AF8];
        v96 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
        if (v96)
          goto LABEL_117;
LABEL_137:
        v4 = *(_QWORD *)(v95 + 16);
        if (v4)
        {
LABEL_138:
          v104 = 0;
          v105 = 0.0;
          do
          {
            v106 = *(float *)(v95 + 4 * v104++ + 32);
            v105 = v105 + v106;
          }
          while (v4 != v104);
          swift_bridgeObjectRelease();
          if (v80 >= v105)
          {
LABEL_141:
            swift_release();
            if (v77)
              goto LABEL_103;
            continue;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          if (v80 >= 0.0)
            goto LABEL_141;
          v105 = 0.0;
        }
        swift_bridgeObjectRelease();
        v133 = v87;
        v80 = v105;
        if (v77)
          goto LABEL_103;
      }
    }
    while (1)
    {
      if (v22)
      {
        v125 = v16;
        v126 = (v22 - 1) & v22;
        v25 = __clz(__rbit64(v22)) | (v16 << 6);
      }
      else
      {
        v26 = v16 + 1;
        if (__OFADD__(v16, 1))
          goto LABEL_159;
        if (v26 >= v120)
          goto LABEL_99;
        v27 = *(_QWORD *)(v121 + 8 * v26);
        v28 = v16 + 1;
        if (!v27)
        {
          v28 = v16 + 2;
          if (v16 + 2 >= v120)
            goto LABEL_99;
          v27 = *(_QWORD *)(v121 + 8 * v28);
          if (!v27)
          {
            v28 = v16 + 3;
            if (v16 + 3 >= v120)
              goto LABEL_99;
            v27 = *(_QWORD *)(v121 + 8 * v28);
            if (!v27)
            {
              v28 = v16 + 4;
              if (v16 + 4 >= v120)
                goto LABEL_99;
              v27 = *(_QWORD *)(v121 + 8 * v28);
              if (!v27)
              {
                v29 = v16 + 5;
                do
                {
                  if (v120 == v29)
                    goto LABEL_99;
                  v27 = *(_QWORD *)(v121 + 8 * v29++);
                }
                while (!v27);
                v28 = v29 - 1;
              }
            }
          }
        }
        v125 = v28;
        v126 = (v27 - 1) & v27;
        v25 = __clz(__rbit64(v27)) + (v28 << 6);
      }
      v24 = *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * v25);
      swift_retain();
LABEL_39:
      v30 = MEMORY[0x24BEE4AF8];
      if (!v24)
        goto LABEL_100;
      v141 = MEMORY[0x24BEE4AF8];
      if (v124)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        v31 = sub_22655D400();
      }
      else
      {
        v31 = *(_QWORD *)(v127 + 16);
        swift_bridgeObjectRetain();
        swift_retain();
      }
      v33 = v128;
      v32 = v129;
      v137 = v24;
      if (v31)
        break;
      v48 = MEMORY[0x24BEE4AF8];
LABEL_67:
      swift_bridgeObjectRelease();
      swift_release();
      v16 = v125;
      if (v48 < 0 || (v48 & 0x4000000000000000) != 0)
      {
        result = (_QWORD *)sub_22655D400();
        if (result == (_QWORD *)2)
        {
LABEL_74:
          if ((v48 & 0xC000000000000001) != 0)
          {
            v49 = *(float32x2_t *)(MEMORY[0x2276999E4](1, v48) + OBJC_IVAR____TtC8RoomPlan9HullPoint_position);
            swift_unknownObjectRelease();
            v50 = (char *)MEMORY[0x2276999E4](0, v48);
          }
          else
          {
            if (*(_QWORD *)(v48 + 16) < 2uLL)
              goto LABEL_162;
            v49 = *(float32x2_t *)(*(_QWORD *)(v48 + 40) + OBJC_IVAR____TtC8RoomPlan9HullPoint_position);
            v50 = (char *)*(id *)(v48 + 32);
          }
          v51 = v50;
          swift_release();
          v52 = *(float32x2_t *)&v51[OBJC_IVAR____TtC8RoomPlan9HullPoint_position];

          v53 = sub_226486C2C(0, 1, 1, MEMORY[0x24BEE4AF8]);
          v55 = v53[2];
          v54 = v53[3];
          goto LABEL_88;
        }
      }
      else
      {
        result = *(_QWORD **)(v48 + 16);
        if (result == (_QWORD *)2)
          goto LABEL_74;
      }
      if (result == (_QWORD *)4)
      {
        if ((v48 & 0xC000000000000001) != 0)
        {
          v57 = *(float32x2_t *)(MEMORY[0x2276999E4](1, v48) + OBJC_IVAR____TtC8RoomPlan9HullPoint_position);
          swift_unknownObjectRelease();
          v58 = (char *)MEMORY[0x2276999E4](0, v48);
          v56 = OBJC_IVAR____TtC8RoomPlan9HullPoint_position;
        }
        else
        {
          if (*(_QWORD *)(v48 + 16) < 2uLL)
            goto LABEL_163;
          v56 = OBJC_IVAR____TtC8RoomPlan9HullPoint_position;
          v57 = *(float32x2_t *)(*(_QWORD *)(v48 + 40) + OBJC_IVAR____TtC8RoomPlan9HullPoint_position);
          v58 = (char *)*(id *)(v48 + 32);
        }
        v59 = *(float32x2_t *)&v58[v56];

        result = sub_226486C2C(0, 1, 1, MEMORY[0x24BEE4AF8]);
        v53 = result;
        v61 = result[2];
        v60 = result[3];
        if (v61 >= v60 >> 1)
        {
          result = sub_226486C2C((_QWORD *)(v60 > 1), v61 + 1, 1, result);
          v53 = result;
        }
        v53[2] = v61 + 1;
        v53[v61 + 4] = vsub_f32(v57, v59);
        if ((v48 & 0xC000000000000001) != 0)
        {
          v49 = *(float32x2_t *)(MEMORY[0x2276999E4](3, v48) + OBJC_IVAR____TtC8RoomPlan9HullPoint_position);
          swift_unknownObjectRelease();
          v62 = (char *)MEMORY[0x2276999E4](0, v48);
        }
        else
        {
          if (*(_QWORD *)(v48 + 16) < 4uLL)
            goto LABEL_164;
          v49 = *(float32x2_t *)(*(_QWORD *)(v48 + 56) + OBJC_IVAR____TtC8RoomPlan9HullPoint_position);
          v62 = (char *)*(id *)(v48 + 32);
        }
        v63 = v62;
        swift_release();
        v52 = *(float32x2_t *)&v63[OBJC_IVAR____TtC8RoomPlan9HullPoint_position];

        v55 = v53[2];
        v54 = v53[3];
LABEL_88:
        v64 = v55 + 1;
        v65 = v7;
        if (v55 >= v54 >> 1)
          v53 = sub_226486C2C((_QWORD *)(v54 > 1), v55 + 1, 1, v53);
        v66 = 0;
        v53[2] = v64;
        v53[v55 + 4] = vsub_f32(v49, v52);
        v67 = v130;
        do
        {
          v135 = (float32x2_t)v53[v66 + 4];
          v68.f32[0] = _simd_orient_vf2((simd_float2)1065353216, (simd_float2)v135);
          v132 = acosf(vaddv_f32(vmul_f32((float32x2_t)vbsl_s8((int8x8_t)vdup_lane_s32(vcgt_f32(v2, v68), 0), (int8x8_t)vsub_f32(0, v135), (int8x8_t)v135), (float32x2_t)1065353216))/ sqrtf(vaddv_f32(vmul_f32(v135, v135))));
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v67 = sub_226486AE0(0, v67[2] + 1, 1, v67);
          v70 = v67[2];
          v69 = v67[3];
          v71 = v67;
          if (v70 >= v69 >> 1)
            v71 = sub_226486AE0((_QWORD *)(v69 > 1), v70 + 1, 1, v67);
          *(float32x2_t *)&v72 = v135;
          *((_QWORD *)&v72 + 1) = LODWORD(v132);
          ++v66;
          v67 = v71;
          v71[2] = v70 + 1;
          *(_OWORD *)&v71[2 * v70 + 4] = v72;
          sub_22653660C((float *)v140, v132);
        }
        while (v64 != v66);
        swift_release();
        swift_bridgeObjectRelease();
        v21 = v67;
        v7 = v65;
        v16 = v125;
        goto LABEL_19;
      }
      swift_release();
      swift_release();
      v22 = v126;
      if (v14 < 0)
        goto LABEL_20;
    }
    v34 = 0;
    v134 = OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type;
    v4 = v127;
    v131 = v31;
    while (v32)
    {
      v35 = (char *)MEMORY[0x2276999E4](v34, v123);
LABEL_50:
      v36 = v35;
      if (__OFADD__(v34++, 1))
        goto LABEL_156;
      v38 = &v35[*v7];
      swift_beginAccess();
      v39 = *(_QWORD *)v38;
      if ((*(_QWORD *)v38 & 0xC000000000000001) != 0)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        v40 = sub_22655D2A4();
        swift_bridgeObjectRelease();
        swift_release();
        if ((v40 & 1) != 0)
        {
LABEL_53:
          sub_22655D364();
          sub_22655D388();
          sub_22655D394();
          sub_22655D370();
          goto LABEL_46;
        }
      }
      else if (*(_QWORD *)(v39 + 16))
      {
        sub_22655D640();
        swift_bridgeObjectRetain();
        sub_22655C11C();
        v41 = sub_22655D670();
        v42 = -1 << *(_BYTE *)(v39 + 32);
        v43 = v41 & ~v42;
        if (((*(_QWORD *)(v39 + 56 + ((v43 >> 3) & 0xFFFFFFFFFFFFF8)) >> v43) & 1) != 0)
        {
          v44 = ~v42;
          do
          {
            v45 = *(_QWORD *)(*(_QWORD *)(v39 + 48) + 8 * v43);
            swift_retain();
            if ((sub_22655C104() & 1) != 0)
            {
              v46 = *(unsigned __int8 *)(v45 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
              v47 = *(unsigned __int8 *)(v137 + v134);
              swift_release();
              if (v46 == v47)
              {
                swift_bridgeObjectRelease();
                v7 = &OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids;
                v4 = v127;
                v33 = v128;
                v32 = v129;
                goto LABEL_53;
              }
            }
            else
            {
              swift_release();
            }
            v43 = (v43 + 1) & v44;
          }
          while (((*(_QWORD *)(v39 + 56 + ((v43 >> 3) & 0xFFFFFFFFFFFFF8)) >> v43) & 1) != 0);

          swift_bridgeObjectRelease();
          v7 = &OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids;
          v4 = v127;
          v33 = v128;
          v32 = v129;
        }
        else
        {

          swift_bridgeObjectRelease();
          v33 = v128;
          v32 = v129;
        }
        goto LABEL_46;
      }

LABEL_46:
      if (v34 == v131)
      {
        v48 = v141;
        v14 = v122;
        v4 = v123;
        goto LABEL_67;
      }
    }
    if (v34 < *(_QWORD *)(v4 + 16))
    {
      v35 = (char *)*(id *)(v33 + 8 * v34);
      goto LABEL_50;
    }
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    swift_bridgeObjectRetain();
    result = (_QWORD *)sub_22655D400();
  }
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
  return result;
}

void sub_2264D7468(unint64_t a1, _QWORD *a2, char a3)
{
  uint64_t v6;
  char *v7;
  float32x2_t v8;
  _QWORD *v9;
  char v10;
  float32x2_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  float32x2_t v15;
  float32x2_t v16;
  int32x2_t v17;
  int32x2_t v18;
  float32x2_t v19;
  __int128 v20;
  __int128 v21;
  float32x2_t v22;
  float32x2_t v23;
  uint64_t *v24;
  uint64_t v25;
  float32x2_t v26;
  int32x2_t v27;
  int32x2_t v28;
  float32x2_t v29;
  float32x2_t v30;
  uint64_t v31;
  float32x2_t v32;
  float32x2_t v33;
  float32x2_t v34;
  float32x2_t v35;
  float32x2_t v36;
  float32x2_t v37;
  float32x2_t v38;
  float32x2_t v39;
  float32x2_t v40;
  __int128 v46;
  unsigned int v47;
  float v48;
  float32x2_t v49;
  float32x2_t v50;
  __int128 v51;
  float32x2_t v52;
  __int128 v53;
  float32x2_t v54;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_22655D400();
    swift_bridgeObjectRelease();
    if (!v6)
      return;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v6)
      return;
  }
  v7 = sub_2264D64E8(a1);
  if (!v7)
    return;
  v8 = *(float32x2_t *)&v7[OBJC_IVAR____TtC8RoomPlan9HullPoint_position];

  if ((a3 & 1) != 0)
  {
    v9 = sub_2264D6660(a1, 0.1);
    if ((v10 & 1) != 0)
      return;
    a2 = v9;
  }
  if (v6 < 1)
  {
    __break(1u);
  }
  else
  {
    v11.f32[0] = -*((float *)&a2 + 1);
    v47 = a2;
    v48 = -*((float *)&a2 + 1);
    v11.i32[1] = (int)a2;
    v49 = v11;
    v50 = (float32x2_t)a2;
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v12 = 0;
      *(int32x2_t *)&v13 = vdup_n_s32(0x7F800000u);
      v53 = v13;
      *(_QWORD *)&v13 = 0x7F0000007FLL;
      v51 = v13;
      do
      {
        v14 = MEMORY[0x2276999E4](v12++, a1);
        v15 = *(float32x2_t *)(v14 + OBJC_IVAR____TtC8RoomPlan9HullPoint_position);
        swift_unknownObjectRelease();
        v16 = vsub_f32(v15, v8);
        v17 = (int32x2_t)vmul_f32(v16, v50);
        v18 = (int32x2_t)vmul_f32(v49, v16);
        v19 = vadd_f32((float32x2_t)vzip1_s32(v17, v18), (float32x2_t)vzip2_s32(v17, v18));
        *((_QWORD *)&v21 + 1) = *((_QWORD *)&v51 + 1);
        *((_QWORD *)&v20 + 1) = *((_QWORD *)&v53 + 1);
        *(int8x8_t *)&v20 = vbsl_s8((int8x8_t)vcgt_f32(*(float32x2_t *)&v53, v19), (int8x8_t)v19, *(int8x8_t *)&v53);
        *(int8x8_t *)&v21 = vbsl_s8((int8x8_t)vcgt_f32(v19, *(float32x2_t *)&v51), (int8x8_t)v19, *(int8x8_t *)&v51);
        v51 = v21;
        v53 = v20;
      }
      while (v6 != v12);
      swift_bridgeObjectRelease();
      v23 = (float32x2_t)v51;
      v22 = (float32x2_t)v53;
    }
    else
    {
      v24 = (uint64_t *)(a1 + 32);
      v22 = (float32x2_t)vdup_n_s32(0x7F800000u);
      v23 = (float32x2_t)0x7F0000007FLL;
      do
      {
        v25 = *v24++;
        v26 = vsub_f32(*(float32x2_t *)(v25 + OBJC_IVAR____TtC8RoomPlan9HullPoint_position), v8);
        v27 = (int32x2_t)vmul_f32(v26, (float32x2_t)a2);
        v28 = (int32x2_t)vmul_f32(v11, v26);
        v29 = vadd_f32((float32x2_t)vzip1_s32(v27, v28), (float32x2_t)vzip2_s32(v27, v28));
        v22 = (float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(v22, v29), (int8x8_t)v29, (int8x8_t)v22);
        v23 = (float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(v29, v23), (int8x8_t)v29, (int8x8_t)v23);
        --v6;
      }
      while (v6);
    }
    v52 = v23;
    v54 = v22;
    v30 = vsub_f32(v23, v22);
    type metadata accessor for OBB();
    v31 = swift_allocObject();
    *(float32x2_t *)(v31 + 96) = v30;
    v32 = vadd_f32(v8, vmul_n_f32((float32x2_t)__PAIR64__(v50.u32[1], v47), v54.f32[0]));
    v33 = vmul_lane_f32((float32x2_t)__PAIR64__(v47, LODWORD(v48)), v52, 1);
    v34 = vadd_f32(v33, v32);
    v35 = vadd_f32(v8, vmul_n_f32((float32x2_t)__PAIR64__(v50.u32[1], v47), v52.f32[0]));
    v36 = vadd_f32(v33, v35);
    v37 = vmul_lane_f32((float32x2_t)__PAIR64__(v47, LODWORD(v48)), v54, 1);
    v38 = vadd_f32(v37, v35);
    v39 = vadd_f32(v37, v32);
    *(float32x2_t *)(v31 + 16) = v34;
    *(float32x2_t *)(v31 + 24) = v36;
    *(float32x2_t *)(v31 + 32) = v38;
    *(float32x2_t *)(v31 + 40) = v39;
    v40 = vadd_f32(v39, vadd_f32(v38, vadd_f32(v36, v34)));
    __asm { FMOV            V1.2S, #0.25 }
    *(float32x2_t *)&v46 = vmul_f32(v40, _D1);
    *((_QWORD *)&v46 + 1) = 1065353216;
    *(_OWORD *)(v31 + 48) = (unint64_t)v50;
    *(_OWORD *)(v31 + 64) = (unint64_t)v49;
    *(_OWORD *)(v31 + 80) = v46;
  }
}

uint64_t sub_2264D76D8(uint64_t a1, float a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  objc_class *v14;
  char *v15;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  void (*v41)(unint64_t *, _QWORD);
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t *v59;
  BOOL v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  int64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  BOOL v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  int v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  char *v93;
  void *v94;
  char *v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  float32x2_t v108;
  unint64_t v109;
  uint64_t v110;
  char *v111;
  float32x2_t v112;
  float32x2_t v113;
  float32x2_t v114;
  float32x2_t v115;
  float32x2_t v116;
  float32x2_t v117;
  float32x2_t v118;
  float32x2_t v119;
  uint64_t inited;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t result;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  __int128 v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t *v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  unint64_t v154;
  uint64_t v155;
  unint64_t v156;
  unint64_t v157;
  unint64_t v158[12];
  uint64_t v159;
  unint64_t v160;
  unint64_t v161;
  objc_super v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  unint64_t v167;

  v4 = sub_22655C140();
  v154 = *(_QWORD *)(v4 - 8);
  v155 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v153 = (char *)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
    goto LABEL_173;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v7 = MEMORY[0x24BEE4AF8];
    v8 = &OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids;
    v150 = a1;
    if (v6)
    {
      v161 = MEMORY[0x24BEE4AF8];
      sub_22655D37C();
      if (v6 < 0)
      {
        __break(1u);
LABEL_178:
        __break(1u);
LABEL_179:
        __break(1u);
        goto LABEL_180;
      }
      v9 = 0;
      v147 = (uint64_t *)v6;
      v148 = a1 & 0xC000000000000001;
      v146 = a1 + 32;
      while (1)
      {
        if (v9 == v6)
        {
          __break(1u);
LABEL_165:
          __break(1u);
          goto LABEL_166;
        }
        v151 = v9;
        if (v148)
          v16 = (char *)MEMORY[0x2276999E4]();
        else
          v16 = (char *)*(id *)(v146 + 8 * v9);
        v149 = (uint64_t)v16;
        v17 = (uint64_t *)&v16[OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids];
        swift_beginAccess();
        v18 = *v17;
        v157 = *v17 & 0xC000000000000001;
        if (v157)
        {
          swift_bridgeObjectRetain();
          v19 = sub_22655D274();
          if (!v19)
            goto LABEL_28;
          v20 = v19;
          v160 = MEMORY[0x24BEE4AF8];
          sub_22655D37C();
          v163 = sub_22655D238();
          v164 = v21;
          LOBYTE(v165) = 1;
          if (v20 < 0)
            goto LABEL_169;
        }
        else
        {
          v20 = *(_QWORD *)(v18 + 16);
          swift_bridgeObjectRetain();
          if (!v20)
          {
LABEL_28:
            swift_bridgeObjectRelease();
            v42 = MEMORY[0x24BEE4AF8];
            goto LABEL_29;
          }
          v160 = MEMORY[0x24BEE4AF8];
          sub_22655D37C();
          v163 = sub_2264D6150(v18);
          v164 = v22;
          LOBYTE(v165) = v23 & 1;
        }
        v24 = v18 & 0xFFFFFFFFFFFFFF8;
        if (v18 < 0)
          v24 = v18;
        v152 = v24;
        v156 = v18;
        do
        {
          while (1)
          {
            v34 = sub_2264D5EC4(v163, v164, v165, v18);
            v35 = v153;
            v36 = v154;
            v37 = v155;
            (*(void (**)(char *, uint64_t, uint64_t))(v154 + 16))(v153, v34 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_uuid, v155);
            v38 = *(_BYTE *)(v34 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
            v39 = *(_BYTE *)(v34 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_hasThickness);
            type metadata accessor for HullPointUUID();
            v40 = swift_allocObject();
            (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v40 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_uuid, v35, v37);
            *(_BYTE *)(v40 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type) = v38;
            *(_BYTE *)(v40 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_hasThickness) = v39;
            swift_release();
            sub_22655D364();
            sub_22655D388();
            sub_22655D394();
            sub_22655D370();
            if (v157)
              break;
            v25 = v163;
            v26 = v164;
            v27 = v165;
            v28 = v156;
            v29 = sub_2264D5DE0(v163, v164, v165, v156);
            v31 = v30;
            v33 = v32;
            sub_226440204(v25, v26, v27);
            v163 = v29;
            v164 = v31;
            LOBYTE(v165) = v33 & 1;
            v18 = v28;
            if (!--v20)
              goto LABEL_27;
          }
          v18 = v156;
          if ((v165 & 1) == 0)
            goto LABEL_179;
          if (sub_22655D250())
            swift_isUniquelyReferenced_nonNull_native();
          __swift_instantiateConcreteTypeFromMangledName(&qword_255840A80);
          v41 = (void (*)(unint64_t *, _QWORD))sub_22655CFA4();
          sub_22655D2B0();
          v41(v158, 0);
          --v20;
        }
        while (v20);
LABEL_27:
        sub_226440204(v163, v164, v165);
        v42 = v160;
        swift_bridgeObjectRelease();
LABEL_29:
        v8 = &OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids;
        if (v42 >> 62)
        {
          swift_bridgeObjectRetain();
          sub_22655D400();
          swift_bridgeObjectRelease();
        }
        type metadata accessor for HullPointUUID();
        sub_2264D906C();
        v158[0] = sub_22655CF98();
        if (v42 >> 62)
        {
          swift_bridgeObjectRetain();
          a1 = sub_22655D400();
          swift_bridgeObjectRelease();
          if (!a1)
            goto LABEL_6;
        }
        else
        {
          a1 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (!a1)
            goto LABEL_6;
        }
        if (a1 < 1)
          goto LABEL_170;
        if ((v42 & 0xC000000000000001) != 0)
        {
          v43 = 0;
          do
          {
            v44 = MEMORY[0x2276999E4](v43++, v42);
            sub_22653671C(&v163, v44);
            swift_release();
          }
          while (a1 != v43);
          swift_bridgeObjectRelease();
          v8 = &OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids;
          goto LABEL_7;
        }
        v45 = 0;
        do
        {
          v46 = *(_QWORD *)(v42 + 8 * v45++ + 32);
          swift_retain();
          sub_22653671C(&v163, v46);
          swift_release();
        }
        while (a1 != v45);
LABEL_6:
        swift_bridgeObjectRelease();
LABEL_7:
        v10 = v151 + 1;
        v11 = v158[0];
        v12 = (void *)v149;
        v13 = *(_QWORD *)(v149 + OBJC_IVAR____TtC8RoomPlan9HullPoint_position);
        v14 = (objc_class *)type metadata accessor for HullPoint();
        v15 = (char *)objc_allocWithZone(v14);
        *(_QWORD *)&v15[OBJC_IVAR____TtC8RoomPlan9HullPoint_position] = v13;
        *(_QWORD *)&v15[OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids] = v11;
        v162.receiver = v15;
        v162.super_class = v14;
        objc_msgSendSuper2(&v162, sel_init);

        sub_22655D364();
        sub_22655D388();
        sub_22655D394();
        sub_22655D370();
        v9 = v10;
        v6 = (uint64_t)v147;
        a1 = v150;
        if ((uint64_t *)v10 == v147)
        {
          v47 = v161;
          v7 = MEMORY[0x24BEE4AF8];
          goto LABEL_45;
        }
      }
    }
    v47 = MEMORY[0x24BEE4AF8];
LABEL_45:
    v158[0] = v7;
    if (!(v47 >> 62))
    {
      v48 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v48)
        goto LABEL_54;
LABEL_47:
      if (v48 >= 1)
      {
        if ((v47 & 0xC000000000000001) != 0)
        {
          v49 = 0;
          do
          {
            v50 = MEMORY[0x2276999E4](v49++, v47);
            v51 = (uint64_t *)(v50 + *v8);
            swift_beginAccess();
            v52 = *v51;
            swift_bridgeObjectRetain();
            swift_unknownObjectRelease();
            sub_22646A410(v52);
          }
          while (v48 != v49);
        }
        else
        {
          v53 = 0;
          do
          {
            ++v53;
            swift_beginAccess();
            v54 = swift_bridgeObjectRetain();
            sub_22646A410(v54);
          }
          while (v48 != v53);
        }
        goto LABEL_54;
      }
      goto LABEL_178;
    }
    while (1)
    {
      swift_bridgeObjectRetain();
      v48 = sub_22655D400();
      if (v48)
        goto LABEL_47;
LABEL_54:
      swift_bridgeObjectRelease();
      v55 = sub_22653CF48(v158[0]);
      swift_bridgeObjectRelease();
      if (!v48)
        goto LABEL_163;
      v136 = v55 & 0xC000000000000001;
      v137 = v47 & 0xC000000000000001;
      v129 = v47 + 32;
      v130 = v47 & 0xFFFFFFFFFFFFFF8;
      v56 = v55 & 0xFFFFFFFFFFFFFF8;
      if (v55 < 0)
        v56 = v55;
      v132 = v56;
      v128 = v55 + 56;
      v57 = a1 & 0xFFFFFFFFFFFFFF8;
      v151 = a1 & 0xFFFFFFFFFFFFFF8;
      if (a1 < 0)
        v57 = a1;
      v140 = v57;
      v153 = (char *)(a1 + 32);
      v154 = a1 & 0xC000000000000001;
      swift_bridgeObjectRetain();
      v58 = 0;
      v131 = xmmword_22655FA20;
      v141 = MEMORY[0x24BEE4AD0] + 8;
      v133 = v55;
      v134 = v48;
      v135 = v47;
LABEL_61:
      if (v137)
      {
        v59 = (uint64_t *)MEMORY[0x2276999E4](v58, v47);
        goto LABEL_65;
      }
      if (v58 < *(_QWORD *)(v130 + 16))
        break;
      __break(1u);
    }
    v59 = (uint64_t *)*(id *)(v129 + 8 * v58);
LABEL_65:
    v8 = v59;
    v60 = __OFADD__(v58, 1);
    v61 = v58 + 1;
    if (!v60)
      break;
LABEL_172:
    __break(1u);
LABEL_173:
    swift_bridgeObjectRetain();
    v6 = sub_22655D400();
    swift_bridgeObjectRelease();
  }
  v139 = v61;
  if (v136)
  {
    swift_bridgeObjectRetain();
    sub_22655D244();
    type metadata accessor for HullPointUUID();
    sub_2264D906C();
    sub_22655CFB0();
    v62 = v163;
    v144 = v164;
    v63 = v165;
    v64 = v166;
    v65 = v167;
  }
  else
  {
    v66 = -1 << *(_BYTE *)(v55 + 32);
    v67 = ~v66;
    v68 = -v66;
    if (v68 < 64)
      v69 = ~(-1 << v68);
    else
      v69 = -1;
    v62 = v55;
    v65 = v69 & *(_QWORD *)(v55 + 56);
    swift_bridgeObjectRetain();
    v63 = v67;
    v64 = 0;
    v144 = v128;
  }
  v47 = v151;
  v138 = v63;
  v142 = v62 & 0x7FFFFFFFFFFFFFFFLL;
  v143 = (unint64_t)(v63 + 64) >> 6;
  v146 = v62;
  v147 = v8;
  if ((v62 & 0x8000000000000000) == 0)
    goto LABEL_77;
LABEL_95:
  while (2)
  {
    v77 = sub_22655D298();
    if (!v77)
      goto LABEL_60;
    v159 = v77;
    type metadata accessor for HullPointUUID();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v76 = v158[0];
    swift_unknownObjectRelease();
    v72 = v64;
    v149 = v65;
    if (!v76)
      goto LABEL_60;
LABEL_97:
    v78 = (uint64_t *)((char *)v8 + OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids);
    swift_beginAccess();
    v79 = *v78;
    v80 = (*v78 & 0xC000000000000001) == 0;
    v156 = v76;
    if (!v80)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      v81 = sub_22655D2A4();
      swift_bridgeObjectRelease();
      swift_release();
      if ((v81 & 1) == 0)
        goto LABEL_110;
      goto LABEL_76;
    }
    if (!*(_QWORD *)(v79 + 16))
      goto LABEL_110;
    v148 = v72;
    sub_22655D640();
    swift_bridgeObjectRetain();
    sub_22655C11C();
    v82 = sub_22655D670();
    v83 = -1 << *(_BYTE *)(v79 + 32);
    v84 = v82 & ~v83;
    if (((*(_QWORD *)(v79 + 56 + ((v84 >> 3) & 0xFFFFFFFFFFFFF8)) >> v84) & 1) != 0)
    {
      v85 = ~v83;
      v86 = OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type;
      do
      {
        v87 = *(_QWORD *)(*(_QWORD *)(v79 + 48) + 8 * v84);
        swift_retain();
        if ((sub_22655C104() & 1) != 0)
        {
          v88 = *(unsigned __int8 *)(v87 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
          v89 = *(unsigned __int8 *)(v156 + v86);
          swift_release();
          if (v88 == v89)
          {
            swift_release();
            swift_bridgeObjectRelease();
            v64 = v148;
            v65 = v149;
            a1 = v150;
            v47 = v151;
            v62 = v146;
            v8 = v147;
            if (v146 < 0)
              goto LABEL_95;
LABEL_77:
            if (v65)
            {
              v149 = (v65 - 1) & v65;
              v71 = __clz(__rbit64(v65)) | (v64 << 6);
              v72 = v64;
              goto LABEL_93;
            }
            v73 = v64 + 1;
            if (__OFADD__(v64, 1))
              goto LABEL_171;
            if (v73 >= v143)
              goto LABEL_60;
            v74 = *(_QWORD *)(v144 + 8 * v73);
            v72 = v64 + 1;
            if (v74)
              goto LABEL_92;
            v72 = v64 + 2;
            if ((uint64_t)(v64 + 2) >= v143)
              goto LABEL_60;
            v74 = *(_QWORD *)(v144 + 8 * v72);
            if (v74)
              goto LABEL_92;
            v72 = v64 + 3;
            if ((uint64_t)(v64 + 3) >= v143)
              goto LABEL_60;
            v74 = *(_QWORD *)(v144 + 8 * v72);
            if (v74)
              goto LABEL_92;
            v72 = v64 + 4;
            if ((uint64_t)(v64 + 4) >= v143)
              goto LABEL_60;
            v74 = *(_QWORD *)(v144 + 8 * v72);
            if (!v74)
            {
              v75 = v64 + 5;
              while (v143 != v75)
              {
                v74 = *(_QWORD *)(v144 + 8 * v75++);
                if (v74)
                {
                  v72 = v75 - 1;
                  goto LABEL_92;
                }
              }
              goto LABEL_60;
            }
LABEL_92:
            v149 = (v74 - 1) & v74;
            v71 = __clz(__rbit64(v74)) + (v72 << 6);
LABEL_93:
            v76 = *(_QWORD *)(*(_QWORD *)(v62 + 48) + 8 * v71);
            swift_retain();
            if (!v76)
            {
LABEL_60:
              sub_22646C924();

              v47 = v135;
              v58 = v139;
              v55 = v133;
              if (v139 == v134)
                goto LABEL_162;
              goto LABEL_61;
            }
            goto LABEL_97;
          }
        }
        else
        {
          swift_release();
        }
        v84 = (v84 + 1) & v85;
      }
      while (((*(_QWORD *)(v79 + 56 + ((v84 >> 3) & 0xFFFFFFFFFFFFF8)) >> v84) & 1) != 0);
    }
    swift_bridgeObjectRelease();
    a1 = v150;
    v47 = v151;
    v62 = v146;
    v8 = v147;
    v72 = v148;
    v76 = v156;
LABEL_110:
    v159 = MEMORY[0x24BEE4AF8];
    if (!v145)
    {
      v90 = *(_QWORD *)(v47 + 16);
      swift_bridgeObjectRetain();
      swift_retain();
      v152 = v90;
      if (v90)
        goto LABEL_112;
LABEL_135:
      v105 = MEMORY[0x24BEE4AF8];
LABEL_136:
      swift_bridgeObjectRelease();
      swift_release();
      if (v105 < 0 || (v105 & 0x4000000000000000) != 0)
      {
        swift_bridgeObjectRetain();
        v123 = sub_22655D400();
        swift_release();
        if (v123 != 2)
        {
LABEL_155:
          swift_release();
          goto LABEL_76;
        }
        swift_bridgeObjectRetain_n();
        v106 = sub_22655D400();
        swift_release();
        if (!v106)
          goto LABEL_181;
      }
      else
      {
        if (*(_QWORD *)(v105 + 16) != 2)
          goto LABEL_155;
        swift_bridgeObjectRetain();
        v106 = 2;
      }
      if ((v105 & 0xC000000000000001) != 0)
      {
        v124 = MEMORY[0x2276999E4](0, v105);
        swift_release();
        v108 = *(float32x2_t *)(v124 + OBJC_IVAR____TtC8RoomPlan9HullPoint_position);
        swift_unknownObjectRelease();
        if (!__OFSUB__(v106, 1))
        {
          v111 = (char *)MEMORY[0x2276999E4](v106 - 1, v105);
          swift_release();
          v110 = v156;
          goto LABEL_146;
        }
LABEL_180:
        __break(1u);
LABEL_181:
        result = swift_release();
        __break(1u);
        return result;
      }
      if (!*(_QWORD *)(v105 + 16))
        goto LABEL_165;
      v107 = (char *)*(id *)(v105 + 32);
      swift_release();
      v108 = *(float32x2_t *)&v107[OBJC_IVAR____TtC8RoomPlan9HullPoint_position];

      v109 = v106 - 1;
      if (__OFSUB__(v106, 1))
      {
LABEL_166:
        __break(1u);
      }
      else
      {
        v110 = v156;
        if ((v109 & 0x8000000000000000) == 0)
        {
          if (v109 < *(_QWORD *)(v105 + 16))
          {
            v111 = (char *)*(id *)(v105 + 32 + 8 * v109);
            swift_release();
            v47 = v151;
LABEL_146:
            v112 = *(float32x2_t *)&v111[OBJC_IVAR____TtC8RoomPlan9HullPoint_position];

            v113 = *(float32x2_t *)((char *)v8 + OBJC_IVAR____TtC8RoomPlan9HullPoint_position);
            v114 = vsub_f32(v112, v108);
            v115 = vmul_f32(v114, vsub_f32(v113, v108));
            if (vaddv_f32(v115) <= 0.0
              || (v116 = vadd_f32(v115, (float32x2_t)vdup_lane_s32((int32x2_t)v115, 1)),
                  v117 = vmul_f32(v114, v114),
                  v118 = vadd_f32(v117, (float32x2_t)vdup_lane_s32((int32x2_t)v117, 1)),
                  (vmvn_s8((int8x8_t)vcge_f32(v118, v116)).u8[0] & 1) != 0)
              || (v119 = vmul_f32(v114, (float32x2_t)vrev64_s32((int32x2_t)vsub_f32(v108, v113))),
                  fabsf(vsub_f32(v119, (float32x2_t)vdup_lane_s32((int32x2_t)v119, 1)).f32[0] / sqrtf(v118.f32[0])) >= a2))
            {
LABEL_76:
              swift_release();
              v64 = v72;
              v65 = v149;
              if ((v62 & 0x8000000000000000) == 0)
                goto LABEL_77;
              continue;
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_255849180);
            inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = v131;
            *(_QWORD *)(inited + 32) = v110;
            v158[0] = inited;
            sub_22655CEE4();
            v121 = v158[0];
            if (v158[0] >> 62)
            {
              swift_retain();
              swift_bridgeObjectRetain();
              v125 = sub_22655D400();
              swift_bridgeObjectRelease();
              if (!v125)
                goto LABEL_75;
            }
            else
            {
              v122 = *(_QWORD *)((v158[0] & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_retain();
              if (!v122)
                goto LABEL_75;
            }
            sub_2264F5514(v121);
LABEL_75:
            swift_bridgeObjectRelease();
            swift_beginAccess();
            v70 = swift_bridgeObjectRetain();
            sub_2264D2314(v70);
            swift_endAccess();
            swift_bridgeObjectRelease();
            goto LABEL_76;
          }
          goto LABEL_168;
        }
      }
      __break(1u);
LABEL_168:
      __break(1u);
LABEL_169:
      __break(1u);
LABEL_170:
      __break(1u);
LABEL_171:
      __break(1u);
      goto LABEL_172;
    }
    break;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  v152 = sub_22655D400();
  if (!v152)
    goto LABEL_135;
LABEL_112:
  v148 = v72;
  v91 = 0;
  v157 = v76 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_uuid;
  v155 = OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type;
  v92 = v152;
  while (1)
  {
    if (v154)
    {
      v93 = (char *)MEMORY[0x2276999E4](v91, a1);
    }
    else
    {
      if (v91 >= *(_QWORD *)(v47 + 16))
        goto LABEL_161;
      v93 = (char *)*(id *)&v153[8 * v91];
    }
    v94 = v93;
    v60 = __OFADD__(v91++, 1);
    if (v60)
      break;
    v95 = &v93[OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids];
    swift_beginAccess();
    v96 = *(_QWORD *)v95;
    if ((*(_QWORD *)v95 & 0xC000000000000001) != 0)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      v97 = sub_22655D2A4();
      swift_bridgeObjectRelease();
      swift_release();
      if ((v97 & 1) != 0)
      {
LABEL_121:
        sub_22655D364();
        sub_22655D388();
        v92 = v152;
        sub_22655D394();
        sub_22655D370();
        goto LABEL_114;
      }
    }
    else if (*(_QWORD *)(v96 + 16))
    {
      sub_22655D640();
      swift_bridgeObjectRetain();
      sub_22655C11C();
      v98 = sub_22655D670();
      v99 = -1 << *(_BYTE *)(v96 + 32);
      v100 = v98 & ~v99;
      if (((*(_QWORD *)(v96 + 56 + ((v100 >> 3) & 0xFFFFFFFFFFFFF8)) >> v100) & 1) != 0)
      {
        v101 = ~v99;
        do
        {
          v102 = *(_QWORD *)(*(_QWORD *)(v96 + 48) + 8 * v100);
          swift_retain();
          if ((sub_22655C104() & 1) != 0)
          {
            v103 = *(unsigned __int8 *)(v102 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
            v104 = *(unsigned __int8 *)(v156 + v155);
            swift_release();
            if (v103 == v104)
            {
              swift_bridgeObjectRelease();
              a1 = v150;
              v47 = v151;
              goto LABEL_121;
            }
          }
          else
          {
            swift_release();
          }
          v100 = (v100 + 1) & v101;
        }
        while (((*(_QWORD *)(v96 + 56 + ((v100 >> 3) & 0xFFFFFFFFFFFFF8)) >> v100) & 1) != 0);

        swift_bridgeObjectRelease();
        a1 = v150;
        v47 = v151;
        v92 = v152;
      }
      else
      {

        swift_bridgeObjectRelease();
        v47 = v151;
      }
      goto LABEL_114;
    }

LABEL_114:
    if (v91 == v92)
    {
      v105 = v159;
      v62 = v146;
      v8 = v147;
      v72 = v148;
      goto LABEL_136;
    }
  }
  __break(1u);
LABEL_161:
  __break(1u);
  __break(1u);
LABEL_162:
  swift_bridgeObjectRelease();
LABEL_163:
  swift_bridgeObjectRelease();
  return v47;
}

uint64_t sub_2264D8868(uint64_t a1, float a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  char *v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char v35;
  char v36;
  uint64_t v37;
  void (*v38)(uint64_t *, _QWORD);
  unint64_t v39;
  uint64_t v40;
  uint64_t i;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  float32x2_t v57;
  float v58;
  float v59;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  float32x2_t v64;
  float v65;
  float v66;
  char *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  objc_super v87;
  uint64_t v88[4];
  unint64_t v89;
  uint64_t v90;

  v80 = sub_22655C140();
  v4 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v81 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 >> 62)
    goto LABEL_84;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v90 = MEMORY[0x24BEE4AF8];
    result = sub_22655D37C();
    if ((v6 & 0x8000000000000000) == 0)
    {
      v9 = 0;
      v75 = a1 & 0xC000000000000001;
      v72 = a1 + 32;
      v73 = v6;
      v74 = a1;
      v79 = v4;
      while (1)
      {
        if (v9 == v6)
        {
LABEL_79:
          __break(1u);
LABEL_80:
          __break(1u);
LABEL_81:
          __break(1u);
LABEL_82:
          __break(1u);
LABEL_83:
          __break(1u);
LABEL_84:
          swift_bridgeObjectRetain();
          v6 = sub_22655D400();
          swift_bridgeObjectRelease();
          goto LABEL_3;
        }
        v77 = v9;
        if (v75)
          v14 = (char *)MEMORY[0x2276999E4](v9, a1);
        else
          v14 = (char *)*(id *)(v72 + 8 * v9);
        v76 = v14;
        v15 = (uint64_t *)&v14[OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids];
        swift_beginAccess();
        a1 = *v15;
        v83 = *v15 & 0xC000000000000001;
        if (v83)
        {
          if (a1 < 0)
            v4 = a1;
          else
            v4 = a1 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v16 = sub_22655D274();
          if (!v16)
          {
LABEL_31:
            swift_bridgeObjectRelease();
            v39 = MEMORY[0x24BEE4AF8];
            goto LABEL_32;
          }
          v17 = v16;
          v89 = MEMORY[0x24BEE4AF8];
          sub_22655D37C();
          v84 = sub_22655D238();
          v85 = v18;
          v86 = 1;
          if (v17 < 0)
            goto LABEL_80;
        }
        else
        {
          v17 = *(_QWORD *)(a1 + 16);
          swift_bridgeObjectRetain();
          if (!v17)
            goto LABEL_31;
          v89 = MEMORY[0x24BEE4AF8];
          sub_22655D37C();
          v84 = sub_2264D6150(a1);
          v85 = v19;
          v86 = v20 & 1;
        }
        v21 = a1 & 0xFFFFFFFFFFFFFF8;
        if (a1 < 0)
          v21 = a1;
        v78 = v21;
        v82 = a1;
        do
        {
          while (1)
          {
            v31 = sub_2264D5EC4(v84, v85, v86, a1);
            v32 = v79;
            v33 = v80;
            v34 = v81;
            (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v81, v31 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_uuid, v80);
            v35 = *(_BYTE *)(v31 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
            v36 = *(_BYTE *)(v31 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_hasThickness);
            type metadata accessor for HullPointUUID();
            v37 = swift_allocObject();
            (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v37 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_uuid, v34, v33);
            *(_BYTE *)(v37 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type) = v35;
            *(_BYTE *)(v37 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_hasThickness) = v36;
            swift_release();
            sub_22655D364();
            sub_22655D388();
            sub_22655D394();
            result = sub_22655D370();
            if (v83)
              break;
            v22 = v84;
            v23 = v85;
            v24 = v86;
            v25 = v82;
            v26 = sub_2264D5DE0(v84, v85, v86, v82);
            v28 = v27;
            v30 = v29;
            sub_226440204(v22, v23, v24);
            v84 = v26;
            v85 = v28;
            v86 = v30 & 1;
            a1 = v25;
            if (!--v17)
              goto LABEL_30;
          }
          a1 = v82;
          if ((v86 & 1) == 0)
            goto LABEL_86;
          if (sub_22655D250())
            swift_isUniquelyReferenced_nonNull_native();
          __swift_instantiateConcreteTypeFromMangledName(&qword_255840A80);
          v38 = (void (*)(uint64_t *, _QWORD))sub_22655CFA4();
          sub_22655D2B0();
          v38(v88, 0);
          --v17;
        }
        while (v17);
LABEL_30:
        sub_226440204(v84, v85, v86);
        v39 = v89;
        swift_bridgeObjectRelease();
LABEL_32:
        a1 = v39 >> 62;
        v40 = v77;
        if (v39 >> 62)
        {
          swift_bridgeObjectRetain();
          sub_22655D400();
          swift_bridgeObjectRelease();
        }
        type metadata accessor for HullPointUUID();
        sub_2264D906C();
        v88[0] = sub_22655CF98();
        if (a1)
        {
          swift_bridgeObjectRetain();
          v4 = sub_22655D400();
          swift_bridgeObjectRelease();
          if (!v4)
            goto LABEL_6;
        }
        else
        {
          v4 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (!v4)
            goto LABEL_6;
        }
        if (v4 < 1)
          goto LABEL_81;
        if ((v39 & 0xC000000000000001) == 0)
        {
          v43 = v40;
          v44 = 0;
          do
          {
            v45 = *(_QWORD *)(v39 + 8 * v44++ + 32);
            swift_retain();
            sub_22653671C(&v84, v45);
            swift_release();
          }
          while (v4 != v44);
          swift_bridgeObjectRelease();
          v40 = v43;
          goto LABEL_7;
        }
        for (i = 0; i != v4; ++i)
        {
          v42 = MEMORY[0x2276999E4](i, v39);
          sub_22653671C(&v84, v42);
          swift_release();
        }
LABEL_6:
        swift_bridgeObjectRelease();
LABEL_7:
        v9 = v40 + 1;
        v10 = v88[0];
        v4 = (uint64_t)v76;
        v11 = *(_QWORD *)&v76[OBJC_IVAR____TtC8RoomPlan9HullPoint_position];
        v12 = (objc_class *)type metadata accessor for HullPoint();
        v13 = (char *)objc_allocWithZone(v12);
        *(_QWORD *)&v13[OBJC_IVAR____TtC8RoomPlan9HullPoint_position] = v11;
        *(_QWORD *)&v13[OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids] = v10;
        v87.receiver = v13;
        v87.super_class = v12;
        objc_msgSendSuper2(&v87, sel_init);

        sub_22655D364();
        sub_22655D388();
        sub_22655D394();
        sub_22655D370();
        v6 = v73;
        a1 = v74;
        if (v9 == v73)
        {
          v7 = v90;
          goto LABEL_47;
        }
      }
    }
    __break(1u);
LABEL_86:
    __break(1u);
  }
  else
  {
LABEL_47:
    v90 = v7;
    v46 = swift_bridgeObjectRetain();
    sub_2264D1818(v46);
    v48 = v47;
    v49 = *(_QWORD *)(v47 + 16);
    if (v49)
    {
      v50 = 0;
      v83 = v47 + 32;
      while (v50 < *(_QWORD *)(v48 + 16))
      {
        v51 = (uint64_t *)(v83 + 16 * v50);
        a1 = *v51;
        if (*v51 < 0)
          goto LABEL_83;
        if (a1)
        {
          v52 = (char *)v51[1];
          v53 = v90;
          v54 = OBJC_IVAR____TtC8RoomPlan9HullPoint_position;
          if ((v90 & 0xC000000000000001) != 0)
          {
            v55 = v52;
            v56 = a1;
            while (a1 >= v56)
            {
              v4 = MEMORY[0x2276999E4](--v56, v53);
              v57 = vsub_f32(*(float32x2_t *)&v52[v54], *(float32x2_t *)(v4 + OBJC_IVAR____TtC8RoomPlan9HullPoint_position));
              v58 = fabsf(v57.f32[0]);
              v59 = fabsf(v57.f32[1]);
              if (v58 < a2 && v59 < a2)
                goto LABEL_71;
              swift_unknownObjectRelease();
              if (!v56)
                goto LABEL_72;
            }
            __break(1u);
          }
          else
          {
            v61 = *v51;
            while (a1 >= v61)
            {
              v62 = v61 - 1;
              if (v61 - 1 >= *(_QWORD *)((v90 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_78;
              v63 = *(char **)(v90 + 24 + 8 * v61);
              v64 = vsub_f32(*(float32x2_t *)&v52[OBJC_IVAR____TtC8RoomPlan9HullPoint_position], *(float32x2_t *)&v63[OBJC_IVAR____TtC8RoomPlan9HullPoint_position]);
              v65 = fabsf(v64.f32[0]);
              v66 = fabsf(v64.f32[1]);
              if (v65 < a2 && v66 < a2)
              {
                v68 = v52;
                v4 = v63;
LABEL_71:
                v69 = (uint64_t *)&v52[OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids];
                swift_beginAccess();
                v70 = *v69;
                swift_beginAccess();
                swift_bridgeObjectRetain_n();
                sub_2264D2314(v70);
                swift_endAccess();
                swift_bridgeObjectRelease();

                v55 = (char *)v4;
LABEL_72:

                goto LABEL_73;
              }
              --v61;
              if (!v62)
                goto LABEL_73;
            }
          }
          __break(1u);
LABEL_78:
          __break(1u);
          goto LABEL_79;
        }
LABEL_73:
        if (++v50 == v49)
        {
          swift_bridgeObjectRelease();
          return v90;
        }
      }
      goto LABEL_82;
    }
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

unint64_t sub_2264D906C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255846BF8;
  if (!qword_255846BF8)
  {
    v1 = type metadata accessor for HullPointUUID();
    result = MEMORY[0x22769A794](&unk_226560894, v1);
    atomic_store(result, (unint64_t *)&qword_255846BF8);
  }
  return result;
}

uint64_t sub_2264D90B4(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  float32x2_t v7;
  char *v8;
  char *v9;
  float32x2_t v10;
  float v11;
  BOOL v12;
  float32x2_t v13;
  uint64_t v14;

  if (a1 >> 62)
    goto LABEL_21;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x24BEE4AF8];
    if (!v4)
      break;
    v14 = MEMORY[0x24BEE4AF8];
    result = sub_22655D37C();
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    v6 = 0;
    v13 = *(float32x2_t *)(a2 + OBJC_IVAR____TtC8RoomPlan9HullPoint_position);
    while (v4 != v6)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (char *)MEMORY[0x2276999E4](v6, a1);
      else
        v8 = (char *)*(id *)(a1 + 8 * v6 + 32);
      v9 = v8;
      type metadata accessor for DistanceAngleHullPoint();
      a2 = swift_allocObject();
      v7 = *(float32x2_t *)&v9[OBJC_IVAR____TtC8RoomPlan9HullPoint_position];
      v10 = vsub_f32(v7, v13);
      *(float *)(a2 + 16) = vaddv_f32(vmul_f32(v10, v10));
      v12 = fabsf(vsub_f32(v13, v7).f32[0]) < 0.00000011921;
      v11 = vabds_f32(v13.f32[1], v7.f32[1]);
      v7.i32[0] = 872415232;
      v12 = v12 && v11 < 0.00000011921;
      if (!v12)
        v7.f32[0] = atan2f(v7.f32[1] - v13.f32[1], v10.f32[0]);
      ++v6;
      if (v7.f32[0] <= 0.0)
        v7.f32[0] = v7.f32[0] + 6.2832;
      *(_DWORD *)(a2 + 20) = v7.i32[0];
      *(_QWORD *)(a2 + 24) = v9;
      sub_22655D364();
      sub_22655D388();
      sub_22655D394();
      sub_22655D370();
      if (v4 == v6)
        return v14;
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
    v4 = sub_22655D400();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2264D9290(unint64_t a1)
{
  int64_t v1;
  char *v2;
  unint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  float32x2_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  float32x2_t v23;
  float32x2_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  char *v28;
  simd_float2 v29;
  float32x2_t v30;
  float v31;
  float v32;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  unint64_t v47;
  char *v48;
  unint64_t v49;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_105;
  if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) < 2)
    return MEMORY[0x24BEE4AF8];
LABEL_3:
  v2 = sub_2264D64E8(v1);
  v3 = MEMORY[0x24BEE4AF8];
  if (!v2)
    return v3;
  v4 = v2;
  v5 = sub_2264D90B4(v1, (uint64_t)v4);
  v48 = v4;

  if (v5 < 0 || (v5 & 0x4000000000000000) != 0)
  {
    v47 = swift_bridgeObjectRetain();
    v6 = (unint64_t)sub_226535D28(v47);
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v49 = v6;
  sub_2264D229C((uint64_t *)&v49);
  swift_bridgeObjectRelease();
  v1 = v49;
  v49 = v3;
  v7 = v1 < 0 || (v1 & 0x4000000000000000) != 0;
  if (v7)
  {
    swift_bridgeObjectRetain();
    v8 = sub_22655D400();
    swift_release();
  }
  else
  {
    v8 = *(_QWORD *)(v1 + 16);
  }
  sub_2264D3010(v8, 0);
  sub_22655CEE4();
  if (v7)
  {
    swift_bridgeObjectRetain();
    v9 = sub_22655D400();
    swift_release();
    if (!v9)
      goto LABEL_88;
  }
  else
  {
    v9 = *(_QWORD *)(v1 + 16);
    if (!v9)
      goto LABEL_88;
  }
  v10 = 0;
  while (1)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      v11 = MEMORY[0x2276999E4](v10, v1);
      v12 = __OFADD__(v10++, 1);
      if (v12)
        goto LABEL_100;
    }
    else
    {
      if (v10 >= *(_QWORD *)(v1 + 16))
        goto LABEL_104;
      v11 = *(_QWORD *)(v1 + 32 + 8 * v10);
      swift_retain();
      v12 = __OFADD__(v10++, 1);
      if (v12)
      {
LABEL_100:
        __break(1u);
        goto LABEL_101;
      }
    }
    v13 = *(float32x2_t *)(*(_QWORD *)(v11 + 24) + OBJC_IVAR____TtC8RoomPlan9HullPoint_position);
    v14 = v49;
    v15 = v49 >> 62;
    if (!(v49 >> 62))
      break;
    swift_bridgeObjectRetain();
    v43 = sub_22655D400();
    swift_bridgeObjectRelease();
    if (v43 >= 2)
    {
      swift_bridgeObjectRetain();
      v44 = sub_22655D400();
      swift_bridgeObjectRelease();
      v17 = v44 - 2;
      if (!__OFSUB__(v44, 2))
        goto LABEL_26;
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      swift_bridgeObjectRetain();
      v45 = sub_22655D400();
      swift_bridgeObjectRelease();
      if (v45 < 2)
        return MEMORY[0x24BEE4AF8];
      goto LABEL_3;
    }
LABEL_77:
    MEMORY[0x227699594](*(id *)(v11 + 24));
    if (*(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_22655CEF0();
    sub_22655CF08();
    sub_22655CEE4();
    swift_release();
    if (v10 == v9)
      goto LABEL_88;
  }
  v16 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v16 < 2)
    goto LABEL_77;
  v17 = v16 - 2;
  if (__OFSUB__(v16, 2))
    goto LABEL_101;
LABEL_26:
  if ((v14 & 0xC000000000000001) != 0)
  {
    v18 = (char *)MEMORY[0x2276999E4](v17, v14);
    if (!v15)
      goto LABEL_30;
  }
  else
  {
    if ((v17 & 0x8000000000000000) != 0)
      goto LABEL_102;
    if (v17 >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_103;
    v18 = (char *)*(id *)(v14 + 8 * v17 + 32);
    if (!v15)
    {
LABEL_30:
      v19 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v19)
        goto LABEL_31;
      goto LABEL_87;
    }
  }
  swift_bridgeObjectRetain_n();
  v19 = sub_22655D400();
  swift_bridgeObjectRelease();
  if (!v19)
  {
LABEL_87:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_88:

    swift_release();
    return v49;
  }
  while (1)
  {
LABEL_31:
    v20 = v19 - 1;
    if (__OFSUB__(v19, 1))
    {
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
      goto LABEL_100;
    }
    if ((v14 & 0xC000000000000001) != 0)
    {
      v21 = (char *)MEMORY[0x2276999E4](v20, v14);
    }
    else
    {
      if ((v20 & 0x8000000000000000) != 0)
        goto LABEL_90;
      if (v20 >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_91;
      v21 = (char *)*(id *)(v14 + 8 * v20 + 32);
    }
    v22 = v21;
    swift_bridgeObjectRelease();
    v23 = *(float32x2_t *)&v22[OBJC_IVAR____TtC8RoomPlan9HullPoint_position];

    v24 = *(float32x2_t *)&v18[OBJC_IVAR____TtC8RoomPlan9HullPoint_position];
    if (v14 >> 62)
      break;
    v25 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v25)
      goto LABEL_110;
LABEL_38:
    v26 = v25 - 1;
    if (__OFSUB__(v25, 1))
      goto LABEL_92;
    if ((v14 & 0xC000000000000001) != 0)
    {
      v27 = (char *)MEMORY[0x2276999E4](v26, v14);
    }
    else
    {
      if ((v26 & 0x8000000000000000) != 0)
        goto LABEL_93;
      if (v26 >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_94;
      v27 = (char *)*(id *)(v14 + 8 * v26 + 32);
    }
    v28 = v27;
    v29 = (simd_float2)vsub_f32(v23, v24);
    swift_bridgeObjectRelease();
    v30 = *(float32x2_t *)&v28[OBJC_IVAR____TtC8RoomPlan9HullPoint_position];

    v31 = _simd_orient_vf2(v29, (simd_float2)vsub_f32(v13, v30));
    v32 = fabsf(v31);
    if (v31 > 0.0 && v32 >= 0.00000011921)
    {

      goto LABEL_77;
    }
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      v40 = sub_22655D400();
      swift_bridgeObjectRelease();
      if (!v40)
        goto LABEL_95;
    }
    else if (!*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_95;
    }
    if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
      || (v14 & 0x8000000000000000) != 0
      || (v14 & 0x4000000000000000) != 0)
    {
      sub_2264C10BC(v14);
    }
    v34 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v34)
      goto LABEL_96;
    v35 = v34 - 1;
    v36 = *(void **)((v14 & 0xFFFFFFFFFFFFFF8) + 8 * v35 + 0x20);
    *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) = v35;
    sub_22655CEE4();

    v14 = v49;
    v37 = v49 >> 62;
    if (v49 >> 62)
    {
      swift_bridgeObjectRetain();
      v41 = sub_22655D400();
      swift_bridgeObjectRelease();
      if (v41 < 2)
        goto LABEL_77;
      swift_bridgeObjectRetain();
      v42 = sub_22655D400();
      swift_bridgeObjectRelease();
      v39 = v42 - 2;
      if (__OFSUB__(v42, 2))
        goto LABEL_97;
    }
    else
    {
      v38 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v38 < 2)
        goto LABEL_77;
      v39 = v38 - 2;
      if (__OFSUB__(v38, 2))
        goto LABEL_97;
    }
    if ((v14 & 0xC000000000000001) != 0)
    {
      v18 = (char *)MEMORY[0x2276999E4](v39, v14);
      if (!v37)
        goto LABEL_62;
    }
    else
    {
      if ((v39 & 0x8000000000000000) != 0)
        goto LABEL_98;
      if (v39 >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_99;
      v18 = (char *)*(id *)(v14 + 8 * v39 + 32);
      if (!v37)
      {
LABEL_62:
        v19 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v19)
          goto LABEL_87;
        continue;
      }
    }
    swift_bridgeObjectRetain_n();
    v19 = sub_22655D400();
    swift_bridgeObjectRelease();
    if (!v19)
      goto LABEL_87;
  }
  swift_bridgeObjectRetain_n();
  v25 = sub_22655D400();
  swift_bridgeObjectRelease();
  if (v25)
    goto LABEL_38;
LABEL_110:
  swift_bridgeObjectRelease();
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

_QWORD *sub_2264D9950(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  id v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  void *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v27;
  unint64_t v28;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_27;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v3 = v2;
  if (!v2)
    goto LABEL_30;
  while (2)
  {
    v4 = 0;
    v27 = v1 + 32;
    v28 = v1 & 0xC000000000000001;
    v24 = v1 & 0xFFFFFFFFFFFFFF8;
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v25 = v2;
    while (v28)
    {
      v7 = (id)MEMORY[0x2276999E4](v4, v1);
      v8 = v4 + 1;
      if (v3 == -1 && v4 == 0x7FFFFFFFFFFFFFFFLL)
        goto LABEL_24;
      v9 = (char *)MEMORY[0x2276999E4](v8 % v3, v1);
LABEL_15:
      v11 = v9;
      v12 = (uint64_t *)&v9[OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids];
      swift_beginAccess();
      v13 = *v12;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v14 = swift_bridgeObjectRetain();
      v15 = sub_2264D4150(v14, v13);
      swift_bridgeObjectRelease();
      if ((v15 & 0xC000000000000001) != 0)
        v16 = sub_22655D274();
      else
        v16 = *(_QWORD *)(v15 + 16);
      swift_release();
      if (!v16)
      {
        v17 = v7;
        v18 = v11;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v5 = sub_226486E44(0, v5[2] + 1, 1, v5);
        v20 = v5[2];
        v19 = v5[3];
        if (v20 >= v19 >> 1)
          v5 = sub_226486E44((_QWORD *)(v19 > 1), v20 + 1, 1, v5);
        v5[2] = v20 + 1;
        v6 = &v5[3 * v20];
        v6[4] = v17;
        v6[5] = v18;
        v6[6] = v4;
        v2 = v25;
        v1 = a1;
      }

      v4 = v8;
      if (v8 == v2)
      {
        swift_bridgeObjectRelease();
        return v5;
      }
    }
    v8 = v4 + 1;
    v7 = *(id *)(v27 + 8 * v4);
    if (v3 != -1 || v4 != 0x7FFFFFFFFFFFFFFFLL)
    {
      v10 = v8 % v3;
      if (v8 % v3 < 0)
        goto LABEL_25;
      if (v10 >= *(_QWORD *)(v24 + 16))
        goto LABEL_26;
      v9 = (char *)*(id *)(v27 + 8 * v10);
      goto LABEL_15;
    }
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    v21 = sub_22655D400();
    if (v21)
    {
      v22 = v21;
      swift_bridgeObjectRetain();
      v3 = sub_22655D400();
      swift_bridgeObjectRelease();
      if (v3)
      {
        if (v22 < 1)
          __break(1u);
        v2 = v22;
        v1 = a1;
        continue;
      }
      __break(1u);
    }
    break;
  }
LABEL_30:
  swift_bridgeObjectRelease();
  return (_QWORD *)MEMORY[0x24BEE4AF8];
}

uint64_t sub_2264D9C30(void *a1)
{
  char *v1;
  id v2;
  uint64_t result;
  void *v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;

  v7 = MEMORY[0x24BEE4AF8];
  v1 = a1;
  while (1)
  {
    v2 = *(id *)&v1[OBJC_IVAR____TtC8RoomPlan18HullPointHierarchy_hullPoint];
    MEMORY[0x227699594]();
    if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_22655CEF0();
    sub_22655CF08();
    result = sub_22655CEE4();
    v4 = *(void **)&v1[OBJC_IVAR____TtC8RoomPlan18HullPointHierarchy_parent];
    if (!v4)
      break;
    v5 = v4;

    v1 = v5;
    if (!*(_QWORD *)&v5[OBJC_IVAR____TtC8RoomPlan18HullPointHierarchy_parent])
    {
      v6 = sub_2264D1948(v7);

      return v6;
    }
  }
  __break(1u);
  return result;
}

id sub_2264D9D28(void *a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v6;
  objc_class *v7;
  char *v8;
  id v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int32x2_t v28;
  uint64_t v29;
  unint64_t v30;
  float32x2_t v31;
  char *v32;
  void *v33;
  float32x2_t v35;
  int32x2_t v36;
  uint64_t v37;
  uint64_t v38;
  int32x2_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int32x2_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  char *v49;
  id v50;
  char *v51;
  unint64_t v52;
  int32x2_t v53;
  id result;
  unint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  objc_class *v67;
  char *v68;
  uint64_t v69;
  void *v70;
  objc_super v72;
  _QWORD *v73;
  objc_super v74;
  unint64_t v75;

  v6 = MEMORY[0x24BEE4AF8];
  v75 = MEMORY[0x24BEE4AF8];
  v7 = (objc_class *)type metadata accessor for HullPointHierarchy();
  v8 = (char *)objc_allocWithZone(v7);
  *(_QWORD *)&v8[OBJC_IVAR____TtC8RoomPlan18HullPointHierarchy_hullPoint] = a1;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8RoomPlan18HullPointHierarchy_parent] = 0;
  v74.receiver = v8;
  v74.super_class = v7;
  v67 = v7;
  v9 = a1;
  v10 = (char *)objc_msgSendSuper2(&v74, sel_init);
  MEMORY[0x227699594]();
  if (*(_QWORD *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
LABEL_100:
    sub_22655CEF0();
  sub_22655CF08();
  sub_22655CEE4();
  v11 = v75;
  if (v75 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v63 = sub_22655D400();
    swift_bridgeObjectRelease();
    if (v63)
      goto LABEL_4;
LABEL_102:
    swift_bridgeObjectRelease();
LABEL_103:

LABEL_104:
    swift_bridgeObjectRelease();
    return (id)MEMORY[0x24BEE4AF8];
  }
  v12 = *(_QWORD *)((v75 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v12)
    goto LABEL_102;
LABEL_4:
  v64 = v10;
  v65 = OBJC_IVAR____TtC8RoomPlan9HullPoint_position;
  v13 = (_QWORD *)v6;
  while (1)
  {
    if ((v11 & 0xC000000000000001) != 0)
    {
      v14 = (char *)MEMORY[0x2276999E4](0, v11);
    }
    else
    {
      if (!*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_97;
      v14 = (char *)*(id *)(v11 + 32);
    }
    v15 = v14;
    swift_bridgeObjectRelease();
    v68 = v15;
    v16 = *(void **)&v15[OBJC_IVAR____TtC8RoomPlan18HullPointHierarchy_hullPoint];
    v73 = (_QWORD *)v6;
    if (a3 >> 62)
    {
      v19 = v16;
      swift_bridgeObjectRetain();
      v17 = sub_22655D400();
    }
    else
    {
      v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v18 = v16;
      swift_bridgeObjectRetain();
    }
    v70 = v16;
    v10 = (char *)OBJC_IVAR____TtC8RoomPlan9HullPoint_position;
    swift_beginAccess();
    if (v17)
    {
      v6 = 0;
      while (1)
      {
        if ((a3 & 0xC000000000000001) != 0)
        {
          v20 = (char *)MEMORY[0x2276999E4](v6, a3);
        }
        else
        {
          if (v6 >= *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_93:
            __break(1u);
LABEL_94:
            __break(1u);
LABEL_95:
            __break(1u);
LABEL_96:
            __break(1u);
LABEL_97:
            __break(1u);
LABEL_98:
            __break(1u);
            goto LABEL_99;
          }
          v20 = (char *)*(id *)(a3 + 8 * v6 + 32);
        }
        v21 = v20;
        v22 = (char *)(v6 + 1);
        if (__OFADD__(v6, 1))
          goto LABEL_94;
        v23 = (uint64_t *)&v20[OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids];
        swift_beginAccess();
        v24 = *v23;
        swift_bridgeObjectRetain();
        v25 = swift_bridgeObjectRetain();
        v26 = sub_2264D4150(v25, v24);
        swift_bridgeObjectRelease();
        if ((v26 & 0xC000000000000001) != 0)
          v27 = sub_22655D274();
        else
          v27 = *(_QWORD *)(v26 + 16);
        swift_release();
        if (v27 <= 0
          || (v28 = vceq_f32(*(float32x2_t *)&v21[OBJC_IVAR____TtC8RoomPlan9HullPoint_position], *(float32x2_t *)&v10[(_QWORD)v70]), (v28.i32[0] & v28.i32[1] & 1) != 0))
        {

        }
        else
        {
          sub_22655D364();
          sub_22655D388();
          sub_22655D394();
          sub_22655D370();
        }
        ++v6;
        if (v22 == (char *)v17)
        {
          v6 = (unint64_t)v73;
          break;
        }
      }
    }
    swift_bridgeObjectRelease();

    if ((v6 & 0x8000000000000000) != 0 || (v6 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      v29 = sub_22655D400();
      swift_release();
      if (v29)
      {
LABEL_30:
        v30 = 0;
        v31 = *(float32x2_t *)(a2 + v65);
        v69 = v29;
        do
        {
          if ((v6 & 0xC000000000000001) != 0)
          {
            v32 = (char *)MEMORY[0x2276999E4](v30, v6);
          }
          else
          {
            if (v30 >= *(_QWORD *)(v6 + 16))
              goto LABEL_96;
            v32 = (char *)*(id *)(v6 + 32 + 8 * v30);
          }
          v33 = v32;
          if (__OFADD__(v30++, 1))
            goto LABEL_95;
          v10 = (char *)OBJC_IVAR____TtC8RoomPlan9HullPoint_position;
          v35 = *(float32x2_t *)&v32[OBJC_IVAR____TtC8RoomPlan9HullPoint_position];
          v36 = vceq_f32(v35, v31);
          if ((v36.i8[0] & 1) != 0 && (v36.i8[4] & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            v62 = sub_2264D9C30(v68);

            return (id)v62;
          }
          v37 = v13[2];
          if (v37)
          {
            v38 = 0;
            while (1)
            {
              v39 = vceq_f32((float32x2_t)v13[v38 + 4], v35);
              if ((v39.i8[0] & 1) != 0 && (v39.i8[4] & 1) != 0)
                break;
              if (v37 == ++v38)
                goto LABEL_47;
            }

          }
          else
          {
LABEL_47:
            if (a4 >> 62)
            {
              swift_bridgeObjectRetain();
              v40 = sub_22655D400();
              if (v40)
              {
LABEL_49:
                v41 = a4 & 0xC000000000000001;
                if ((a4 & 0xC000000000000001) != 0)
                {
                  v42 = 0;
                  while (1)
                  {
                    v43 = MEMORY[0x2276999E4](v42, a4);
                    v44 = v42 + 1;
                    if (__OFADD__(v42, 1))
                      break;
                    v45 = vceq_f32(*(float32x2_t *)(v43 + OBJC_IVAR____TtC8RoomPlan9HullPoint_position), *(float32x2_t *)&v10[(_QWORD)v33]);
                    if ((v45.i32[0] & v45.i32[1] & 1) != 0)
                    {

                      swift_unknownObjectRelease();
                      goto LABEL_32;
                    }
                    swift_unknownObjectRelease();
                    ++v42;
                    if (v44 == v40)
                      goto LABEL_54;
                  }
                  __break(1u);
                }
                else
                {
                  while (1)
                  {
                    v52 = v41 + 1;
                    if (__OFADD__(v41, 1))
                      break;
                    v53 = vceq_f32(*(float32x2_t *)(*(_QWORD *)(a4 + 8 * v41 + 32)+ OBJC_IVAR____TtC8RoomPlan9HullPoint_position), v35);
                    if ((v53.i8[0] & 1) != 0 && (v53.i8[4] & 1) != 0)
                    {

LABEL_32:
                      swift_bridgeObjectRelease();
                      v29 = v69;
                      goto LABEL_33;
                    }
                    ++v41;
                    if (v52 == v40)
                      goto LABEL_54;
                  }
                }
                __break(1u);
                goto LABEL_93;
              }
            }
            else
            {
              v40 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (v40)
                goto LABEL_49;
            }
LABEL_54:
            swift_bridgeObjectRelease();
            v46 = *(_QWORD *)&v10[(_QWORD)v33];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v13 = sub_226486C2C(0, v13[2] + 1, 1, v13);
            v29 = v69;
            v48 = v13[2];
            v47 = v13[3];
            if (v48 >= v47 >> 1)
              v13 = sub_226486C2C((_QWORD *)(v47 > 1), v48 + 1, 1, v13);
            v13[2] = v48 + 1;
            v13[v48 + 4] = v46;
            v49 = (char *)objc_allocWithZone(v67);
            *(_QWORD *)&v49[OBJC_IVAR____TtC8RoomPlan18HullPointHierarchy_hullPoint] = v33;
            v10 = v68;
            *(_QWORD *)&v49[OBJC_IVAR____TtC8RoomPlan18HullPointHierarchy_parent] = v68;
            v72.receiver = v49;
            v72.super_class = v67;
            v50 = v33;
            v51 = v68;
            objc_msgSendSuper2(&v72, sel_init);
            MEMORY[0x227699594]();
            if (*(_QWORD *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_22655CEF0();
            sub_22655CF08();
            sub_22655CEE4();

          }
LABEL_33:
          ;
        }
        while (v30 != v29);
      }
    }
    else
    {
      v29 = *(_QWORD *)(v6 + 16);
      if (v29)
        goto LABEL_30;
    }
    result = (id)swift_release();
    v55 = v75;
    v10 = (char *)(v75 >> 62);
    if (v75 >> 62)
    {
      swift_bridgeObjectRetain();
      v57 = sub_22655D400();
      swift_bridgeObjectRelease();
      v6 = MEMORY[0x24BEE4AF8];
      if (!v57)
        goto LABEL_98;
      swift_bridgeObjectRetain();
      v58 = sub_22655D400();
      result = (id)swift_bridgeObjectRelease();
      if (!v58)
      {
LABEL_99:
        __break(1u);
        goto LABEL_100;
      }
    }
    else
    {
      v6 = MEMORY[0x24BEE4AF8];
      if (!*(_QWORD *)((v75 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_98;
    }
    if ((v55 & 0xC000000000000001) == 0)
      break;
    result = (id)MEMORY[0x2276999E4](0, v55);
    v56 = result;
    if (!v10)
    {
LABEL_76:
      if (!*(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_107;
      goto LABEL_77;
    }
LABEL_84:
    swift_bridgeObjectRetain();
    v59 = sub_22655D400();
    result = (id)swift_bridgeObjectRelease();
    if (!v59)
      goto LABEL_107;
LABEL_77:
    sub_2265099E0(0, 1);

    v11 = v75;
    if (v75 >> 62)
    {
      swift_bridgeObjectRetain();
      v60 = sub_22655D400();
      swift_bridgeObjectRelease();
      if (v60 < 1)
      {
LABEL_90:
        swift_bridgeObjectRelease();

        goto LABEL_104;
      }
      swift_bridgeObjectRetain_n();
      v61 = sub_22655D400();
      swift_bridgeObjectRelease();
      if (!v61)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v10 = v64;
        goto LABEL_103;
      }
    }
    else
    {
      if (!*(_QWORD *)((v75 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_90;
      swift_bridgeObjectRetain();
    }
  }
  if (*(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    result = *(id *)(v55 + 32);
    v56 = result;
    if (!v10)
      goto LABEL_76;
    goto LABEL_84;
  }
  __break(1u);
LABEL_107:
  __break(1u);
  return result;
}

unint64_t sub_2264DA630(unint64_t a1, unint64_t a2)
{
  unint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v18;

  v2 = a1;
  v3 = sub_2264D9950(a1);
  v18 = v2;
  v4 = v3[2];
  if (!v4)
    goto LABEL_22;
  swift_bridgeObjectRetain();
  v5 = &v3[3 * v4 + 3];
  while (1)
  {
    if (v4 > v3[2])
    {
      __break(1u);
LABEL_19:
      swift_bridgeObjectRelease();
      return v18;
    }
    v6 = (void *)*(v5 - 1);
    v7 = *v5;
    v8 = (id)*(v5 - 2);
    v9 = v6;
    v10 = (unint64_t)sub_2264D9D28(v8, (uint64_t)v9, a2, v2);
    if (v10 >> 62)
      break;
    if (*(uint64_t *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
      goto LABEL_8;
LABEL_3:

    swift_bridgeObjectRelease();
LABEL_4:
    v5 -= 3;
    if (!--v4)
      goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  v15 = sub_22655D400();
  swift_bridgeObjectRelease();
  if (v15 < 1)
    goto LABEL_3;
LABEL_8:
  v11 = __OFADD__(v7, 1);
  v12 = v7 + 1;
  if (!v11)
  {
    v13 = v2;
    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      v14 = sub_22655D400();
      swift_bridgeObjectRelease();
    }
    else
    {
      v14 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v12 >= v14)
      sub_22646A9F4(v10);
    else
      sub_226508D98(v12, v12, v10);

    v2 = v13;
    goto LABEL_4;
  }
  __break(1u);
LABEL_22:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_2264DA7F8(unint64_t a1, unint64_t a2, float32x2_t a3, float32x2_t a4, float a5)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  float32x2_t v14;
  float32x2_t v15;
  float32x2_t v16;
  float v17;
  float v18;
  char *v19;
  void *v20;
  float32x2_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  float32x2_t v27;
  int32x2_t v28;
  unint64_t v29;
  int32x2_t v30;
  float32x2_t v31;
  float v32;
  float32x2_t v33;
  float v34;
  void *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;

  v9 = a1;
  if (a1 >> 62)
    goto LABEL_36;
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v10; v10 = sub_22655D400())
  {
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      v11 = sub_22655D400();
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v12 = 0;
    v13 = v9 & 0xC000000000000001;
    v38 = v9 & 0xFFFFFFFFFFFFFF8;
    v36 = 0;
    v37 = v9 + 32;
    v14 = vsub_f32(a4, a3);
    v15 = vsub_f32(a3, a4);
    v16 = vmul_f32(v15, v15);
    a4 = vadd_f32(v16, (float32x2_t)vdup_lane_s32((int32x2_t)v16, 1));
    v17 = sqrtf(vaddv_f32(v16));
    v18 = 0.0;
    v39 = v9 & 0xC000000000000001;
    while (1)
    {
      if (v13)
      {
        v19 = (char *)MEMORY[0x2276999E4](v12, v9);
      }
      else
      {
        if (v12 >= *(_QWORD *)(v38 + 16))
          goto LABEL_35;
        v19 = (char *)*(id *)(v37 + 8 * v12);
      }
      v20 = v19;
      if (__OFADD__(v12++, 1))
        break;
      v22 = *(float32x2_t *)&v19[OBJC_IVAR____TtC8RoomPlan9HullPoint_position];
      if (v11)
      {
        v23 = a2 & 0xC000000000000001;
        if ((a2 & 0xC000000000000001) != 0)
        {
          v24 = v9;
          swift_bridgeObjectRetain();
          v25 = 0;
          while (1)
          {
            v26 = MEMORY[0x2276999E4](v25, a2);
            v9 = v25 + 1;
            if (__OFADD__(v25, 1))
              break;
            v27 = *(float32x2_t *)(v26 + OBJC_IVAR____TtC8RoomPlan9HullPoint_position);
            swift_unknownObjectRelease();
            v28 = vceq_f32(v27, v22);
            if ((v28.i8[0] & 1) != 0 && (v28.i8[4] & 1) != 0)
            {

              swift_bridgeObjectRelease();
              v9 = v24;
              v13 = v39;
              goto LABEL_7;
            }
            ++v25;
            if (v9 == v11)
            {
              swift_bridgeObjectRelease();
              v9 = v24;
              v13 = v39;
              goto LABEL_27;
            }
          }
          __break(1u);
        }
        else
        {
          while (1)
          {
            v29 = v23 + 1;
            if (__OFADD__(v23, 1))
              break;
            v30 = vceq_f32(*(float32x2_t *)(*(_QWORD *)(a2 + 32 + 8 * v23) + OBJC_IVAR____TtC8RoomPlan9HullPoint_position), v22);
            if ((v30.i8[0] & 1) != 0 && (v30.i8[4] & 1) != 0)
              goto LABEL_6;
            ++v23;
            if (v29 == v11)
              goto LABEL_27;
          }
        }
        __break(1u);
        break;
      }
LABEL_27:
      v31 = vmul_f32(v14, vsub_f32(v22, a3));
      v32 = vaddv_f32(v31);
      if (v32 > 0.0
        && (vmvn_s8((int8x8_t)vcge_f32(vadd_f32(v31, (float32x2_t)vdup_lane_s32((int32x2_t)v31, 1)), a4)).u8[0] & 1) != 0
        && (v33 = vsub_f32(a3, v22), v34 = v32 / (float)(v17 * sqrtf(vaddv_f32(vmul_f32(v33, v33)))), v34 >= a5)
        && v18 < v34)
      {

        v18 = v34;
        v36 = v20;
      }
      else
      {
LABEL_6:

      }
LABEL_7:
      if (v12 == v10)
        goto LABEL_38;
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
  }
  v36 = 0;
LABEL_38:
  swift_bridgeObjectRelease();
  return v36;
}

uint64_t sub_2264DAAD0(unint64_t a1, unint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  char *v7;
  char *v8;
  float32x2_t v9;
  float32x2_t v10;
  char *v11;
  char *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  id v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  char v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  void *v40;
  void *v41;
  uint64_t *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  id v50;
  id v51;
  unint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  unint64_t v61;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  _QWORD *v68;

  v2 = a1;
  v68 = sub_2264D9950(a1);
  v3 = v68[2];
  if (!v3)
  {
    swift_bridgeObjectRetain();
LABEL_68:
    swift_bridgeObjectRelease();
    return v2;
  }
  v4 = v3 - 1;
  swift_bridgeObjectRetain();
  v61 = v2;
  while (1)
  {
    v5 = v68;
    if ((unint64_t)v4 >= v68[2])
    {
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
    v6 = &v68[3 * v4];
    v7 = (char *)v6[4];
    v8 = (char *)v6[5];
    v66 = v6[6];
    v9 = *(float32x2_t *)&v7[OBJC_IVAR____TtC8RoomPlan9HullPoint_position];
    v10 = *(float32x2_t *)&v8[OBJC_IVAR____TtC8RoomPlan9HullPoint_position];
    v11 = v7;
    v12 = v8;
    v13 = sub_2264DA7F8(a2, v2, v9, v10, 0.98481);
    if (!v13)
    {

      goto LABEL_4;
    }
    v14 = v13;
    v63 = v12;
    v64 = v11;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v15 = sub_22655D400();
      if (!v15)
        goto LABEL_14;
    }
    else
    {
      v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v15)
        goto LABEL_14;
    }
    if ((a1 & 0xC000000000000001) != 0)
      v16 = (id)MEMORY[0x2276999E4](0, a1);
    else
      v16 = *(id *)(a1 + 32);
    v17 = v16;
    type metadata accessor for HullPoint();
    v18 = sub_22655D118();

    if ((v18 & 1) != 0)
    {
LABEL_12:
      swift_bridgeObjectRelease_n();

      v2 = v61;
      goto LABEL_4;
    }
    if (v15 != 1)
      break;
LABEL_14:
    swift_bridgeObjectRelease_n();
    v19 = v66 + 1;
    if (__OFADD__(v66, 1))
      goto LABEL_70;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      v32 = sub_22655D400();
      swift_bridgeObjectRelease();
      if (v19 < v32)
      {
        v33 = v14;
        swift_bridgeObjectRetain();
        v34 = sub_22655D400();
        swift_bridgeObjectRelease();
        if (v34 < v19)
          goto LABEL_73;
        goto LABEL_18;
      }
    }
    else
    {
      v20 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v19 < v20)
      {
        v21 = v14;
        if (v20 < v19)
          goto LABEL_73;
LABEL_18:
        if (v19 < 0)
          goto LABEL_74;
        sub_22650934C(v19, v19, (uint64_t)v14);
        goto LABEL_44;
      }
    }
    v35 = v14;
    MEMORY[0x227699594]();
    if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_22655CEF0();
    sub_22655CF08();
    sub_22655CEE4();
LABEL_44:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v5 = sub_2264C10D4(v68);
    v36 = v5[2];
    if (v4 >= v36)
      goto LABEL_71;
    v37 = v36 - 1;
    v38 = v36 - 1 - v4;
    if (v38 < 0)
      goto LABEL_78;
    v39 = &v5[3 * v4];
    v40 = (void *)v39[4];
    v41 = (void *)v39[5];
    memmove(v39 + 4, v39 + 7, 24 * v38);
    v5[2] = v37;

    v68 = v5;
    v42 = (uint64_t *)&v64[OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids];
    swift_beginAccess();
    v43 = *v42;
    swift_beginAccess();
    v44 = v64;
    v45 = v63;
    swift_bridgeObjectRetain();
    v46 = swift_bridgeObjectRetain();
    v47 = sub_2264D4150(v46, v43);
    swift_bridgeObjectRelease();
    if ((v47 & 0xC000000000000001) != 0)
      v48 = sub_22655D274();
    else
      v48 = *(_QWORD *)(v47 + 16);
    swift_release();
    if (!v48)
    {
      if (v5[2] < v4)
        goto LABEL_76;
      v49 = v44;
      v50 = v14;
      sub_2265091A4(v4, v4, (uint64_t)v49, (uint64_t)v50, v66);
      v65 = v49;
      v51 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v5 = sub_226486E44(0, v5[2] + 1, 1, v5);
      v53 = v5[2];
      v52 = v5[3];
      if (v53 >= v52 >> 1)
        v5 = sub_226486E44((_QWORD *)(v52 > 1), v53 + 1, 1, v5);
      ++v4;
      v5[2] = v53 + 1;
      v54 = &v5[3 * v53];
      v54[4] = v65;
      v54[5] = v51;
      v54[6] = v66;
      v68 = v5;
    }
    v55 = (uint64_t *)&v45[OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids];
    swift_beginAccess();
    v56 = *v55;
    swift_bridgeObjectRetain();
    v57 = swift_bridgeObjectRetain();
    v58 = sub_2264D4150(v57, v56);
    swift_bridgeObjectRelease();
    if ((v58 & 0xC000000000000001) != 0)
      v59 = sub_22655D274();
    else
      v59 = *(_QWORD *)(v58 + 16);
    swift_release();
    if (v59)
    {

    }
    else
    {
      if (v5[2] < v4)
        goto LABEL_77;
      sub_2265091A4(v4, v4, (uint64_t)v14, (uint64_t)v45, v19);

      ++v4;
    }
    v2 = v61;
LABEL_4:
    if (--v4 < 0)
    {
      v2 = a1;
      goto LABEL_68;
    }
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    MEMORY[0x2276999E4](1, a1);
    v22 = sub_22655D118();
    swift_unknownObjectRelease();
    if ((v22 & 1) != 0)
      goto LABEL_12;
    if (v15 == 2)
      goto LABEL_14;
    v23 = 2;
    while (1)
    {
      MEMORY[0x2276999E4](v23, a1);
      v24 = v23 + 1;
      if (__OFADD__(v23, 1))
        break;
      v25 = sub_22655D118();
      swift_unknownObjectRelease();
      if ((v25 & 1) != 0)
        goto LABEL_12;
      ++v23;
      if (v24 == v15)
        goto LABEL_14;
    }
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  v26 = *(id *)(a1 + 40);
  v27 = sub_22655D118();

  if ((v27 & 1) != 0)
    goto LABEL_12;
  if (v15 == 2)
    goto LABEL_14;
  v28 = 6;
  while (1)
  {
    v29 = v28 - 3;
    if (__OFADD__(v28 - 4, 1))
      break;
    v30 = *(id *)(a1 + 8 * v28);
    v31 = sub_22655D118();

    if ((v31 & 1) != 0)
      goto LABEL_12;
    ++v28;
    if (v29 == v15)
      goto LABEL_14;
  }
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_2264DB1B0(unint64_t a1, float32x2_t a2, float32x2_t a3, float32x2_t a4, float a5)
{
  uint64_t v10;
  uint64_t result;
  float32x2_t v12;
  uint64_t v13;
  uint64_t v14;
  float v15;
  float v16;
  float v17;
  float v18;
  float32x2_t v19;
  float32x2_t v20;
  BOOL v21;
  uint64_t v22;
  float v23;
  float v24;
  float32x2_t v25;
  float v26;
  float v27;

  if (!(a1 >> 62))
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v10)
      goto LABEL_3;
LABEL_24:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  result = sub_22655D400();
  v10 = result;
  if (!result)
    goto LABEL_24;
LABEL_3:
  if (v10 >= 1)
  {
    v12 = vsub_f32(0, a4);
    if ((a1 & 0xC000000000000001) != 0)
    {
      v13 = 0;
      v14 = 0;
      v15 = INFINITY;
      v16 = INFINITY;
      do
      {
        v19 = *(float32x2_t *)(MEMORY[0x2276999E4](v14, a1) + OBJC_IVAR____TtC8RoomPlan9HullPoint_position);
        swift_unknownObjectRelease();
        v20 = vsub_f32(v19, a2);
        v18 = vaddv_f32(vmul_f32(v20, a3));
        if (v18 >= (float)(v16 + a5)
          || ((v17 = vaddv_f32(vmul_f32(v12, v20)), vabds_f32(v18, v16) < a5) ? (v21 = v15 < v17) : (v21 = 0), v21))
        {
          v17 = v15;
          v18 = v16;
        }
        else
        {
          v13 = v14;
        }
        ++v14;
        v15 = v17;
        v16 = v18;
      }
      while (v10 != v14);
    }
    else
    {
      v13 = 0;
      v22 = 0;
      v23 = INFINITY;
      v24 = INFINITY;
      do
      {
        v25 = vsub_f32(*(float32x2_t *)(*(_QWORD *)(a1 + 8 * v22 + 32) + OBJC_IVAR____TtC8RoomPlan9HullPoint_position), a2);
        v26 = vaddv_f32(vmul_f32(v25, a3));
        if (v26 < (float)(v24 + a5))
        {
          v27 = vaddv_f32(vmul_f32(v12, v25));
          if (vabds_f32(v26, v24) >= a5 || v23 >= v27)
          {
            v13 = v22;
            v23 = v27;
            v24 = v26;
          }
        }
        ++v22;
      }
      while (v10 != v22);
    }
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

char *sub_2264DB3A4(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  void *v10;
  char *v11;
  id v12;
  float32x2_t v13;
  float v14;
  float v15;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v6 = swift_retain();
  v7 = sub_226534954(v6);
  if ((v8 & 1) != 0)
  {
    v9 = *(_QWORD *)(a2 + 56) + 16 * v7;
    v10 = *(void **)(v9 + 8);
    v11 = (char *)*(id *)v9;
    v12 = v10;
    swift_release();
    v13 = vsub_f32(*(float32x2_t *)&v11[OBJC_IVAR____TtC8RoomPlan9HullPoint_position], *(float32x2_t *)(a1 + OBJC_IVAR____TtC8RoomPlan9HullPoint_position));
    v14 = fabsf(v13.f32[0]);
    v15 = fabsf(v13.f32[1]);
    if (v14 < a3 && v15 < a3)
    {

    }
    else
    {

      return v11;
    }
  }
  else
  {
    swift_release();
    return 0;
  }
  return (char *)v12;
}

uint64_t sub_2264DB474(unint64_t a1, uint64_t a2, uint64_t a3, float32x2_t a4, float32x2_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  float32x2_t v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  float32x2_t v41;
  float32x2_t v42;
  uint64_t v43;
  uint64_t inited;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v50;
  void *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;

  v8 = a1;
  v54 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_77;
  v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (v9)
  {
    while (1)
    {
      a5 = vsub_f32(0, a5);
LABEL_4:
      if ((v8 & 0xC000000000000001) != 0)
        break;
      if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v10 = (char *)*(id *)(v8 + 32);
LABEL_7:
        v11 = v10;
        swift_bridgeObjectRelease();
        v12 = (uint64_t *)&v11[OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids];
        swift_beginAccess();
        v50 = v12;
        v51 = v11;
        v13 = *v12;
        if ((*v12 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          sub_22655D244();
          type metadata accessor for HullPointUUID();
          sub_2264D906C();
          sub_22655CFB0();
          v13 = v56;
          v14 = v57;
          v8 = v58;
          v15 = v59;
          v16 = v60;
        }
        else
        {
          v17 = -1 << *(_BYTE *)(v13 + 32);
          v14 = v13 + 56;
          v8 = ~v17;
          v18 = -v17;
          if (v18 < 64)
            v19 = ~(-1 << v18);
          else
            v19 = -1;
          v16 = v19 & *(_QWORD *)(v13 + 56);
          swift_bridgeObjectRetain();
          v15 = 0;
        }
        v20 = (unint64_t)(v8 + 64) >> 6;
        while (1)
        {
          if (v13 < 0)
          {
            if (!sub_22655D298())
              goto LABEL_41;
            type metadata accessor for HullPointUUID();
            swift_unknownObjectRetain();
            swift_dynamicCast();
            v23 = v52;
            swift_unknownObjectRelease();
            v22 = v15;
            v8 = v16;
            if (!v52)
              goto LABEL_41;
          }
          else
          {
            if (v16)
            {
              v8 = (v16 - 1) & v16;
              v21 = __clz(__rbit64(v16)) | (v15 << 6);
              v22 = v15;
            }
            else
            {
              v24 = v15 + 1;
              if (__OFADD__(v15, 1))
              {
                __break(1u);
                break;
              }
              if (v24 >= v20)
                goto LABEL_41;
              v25 = *(_QWORD *)(v14 + 8 * v24);
              v22 = v15 + 1;
              if (!v25)
              {
                v22 = v15 + 2;
                if (v15 + 2 >= v20)
                  goto LABEL_41;
                v25 = *(_QWORD *)(v14 + 8 * v22);
                if (!v25)
                {
                  v22 = v15 + 3;
                  if (v15 + 3 >= v20)
                    goto LABEL_41;
                  v25 = *(_QWORD *)(v14 + 8 * v22);
                  if (!v25)
                  {
                    v22 = v15 + 4;
                    if (v15 + 4 >= v20)
                      goto LABEL_41;
                    v25 = *(_QWORD *)(v14 + 8 * v22);
                    if (!v25)
                    {
                      v26 = v15 + 5;
                      while (v20 != v26)
                      {
                        v25 = *(_QWORD *)(v14 + 8 * v26++);
                        if (v25)
                        {
                          v22 = v26 - 1;
                          goto LABEL_35;
                        }
                      }
LABEL_41:
                      sub_22646C924();
                      v31 = swift_bridgeObjectRetain();
                      sub_22646A410(v31);
                      v8 = a1;
                      v32 = a1 >> 62;
                      if (!(a1 >> 62))
                      {
                        if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
                          goto LABEL_73;
                        goto LABEL_43;
                      }
                      swift_bridgeObjectRetain();
                      v35 = sub_22655D400();
                      result = swift_bridgeObjectRelease();
                      if (!v35)
                      {
                        __break(1u);
                        return result;
                      }
                      swift_bridgeObjectRetain();
                      v37 = sub_22655D400();
                      swift_bridgeObjectRelease();
                      if (!v37)
                        goto LABEL_74;
LABEL_43:
                      if ((a1 & 0xC000000000000001) != 0)
                      {
                        v33 = (id)MEMORY[0x2276999E4](0, a1);
                        if (!v32)
                          goto LABEL_46;
                      }
                      else
                      {
                        if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
                          goto LABEL_75;
                        v33 = *(id *)(a1 + 32);
                        if (!v32)
                        {
LABEL_46:
                          v34 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
                          goto LABEL_53;
                        }
                      }
                      swift_bridgeObjectRetain();
                      v34 = sub_22655D400();
                      swift_bridgeObjectRelease();
LABEL_53:
                      v8 = (uint64_t)v51;
                      if (!v34)
                        goto LABEL_76;
                      sub_226509CD8(0, 1);

                      v8 = a1;
                      if (!(a1 >> 62))
                      {
                        if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
                        {
                          swift_bridgeObjectRetain();
                          goto LABEL_4;
                        }
                        goto LABEL_70;
                      }
                      swift_bridgeObjectRetain();
                      v38 = sub_22655D400();
                      swift_bridgeObjectRelease();
                      if (v38 < 1)
                      {
LABEL_70:
                        swift_bridgeObjectRelease();
                        return v54;
                      }
                      swift_bridgeObjectRetain_n();
                      v39 = sub_22655D400();
                      swift_bridgeObjectRelease();
                      if (v39)
                        goto LABEL_4;
                      goto LABEL_78;
                    }
                  }
                }
              }
LABEL_35:
              v8 = (v25 - 1) & v25;
              v21 = __clz(__rbit64(v25)) + (v22 << 6);
            }
            v23 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 8 * v21);
            swift_retain();
            if (!v23)
              goto LABEL_41;
          }
          if (*(_QWORD *)(a3 + 16))
          {
            v27 = swift_retain();
            v28 = sub_226534954(v27);
            if ((v29 & 1) != 0)
            {
              v30 = *(float32x2_t *)(*(_QWORD *)(a3 + 56) + 8 * v28);
              swift_release();
              if (vaddv_f32(vmul_f32(a5, v30)) > 0.70711)
              {
                sub_22646C924();
                swift_retain();
                swift_bridgeObjectRelease();
                v40 = sub_2264DB3A4((uint64_t)v11, a2, 0.07);
                if (!v40
                  || (v41 = *(float32x2_t *)&v40[OBJC_IVAR____TtC8RoomPlan9HullPoint_position],
                      v42 = *(float32x2_t *)&v11[OBJC_IVAR____TtC8RoomPlan9HullPoint_position],
                      v40,
                      vaddv_f32(vmul_f32(vsub_f32(v41, v42), a4)) >= 0.0))
                {
                  v43 = *v50;
                  __swift_instantiateConcreteTypeFromMangledName(&qword_255849180);
                  inited = swift_initStackObject();
                  *(_OWORD *)(inited + 16) = xmmword_22655FA20;
                  *(_QWORD *)(inited + 32) = v23;
                  v53 = inited;
                  sub_22655CEE4();
                  if ((v43 & 0xC000000000000001) != 0)
                  {
                    if (v43 < 0)
                      v45 = v43;
                    else
                      v45 = v43 & 0xFFFFFFFFFFFFFF8;
                    swift_bridgeObjectRetain_n();
                    swift_retain();
                    v46 = sub_22655D274();
                    v47 = sub_22653758C(v45, v46);
                    swift_bridgeObjectRelease();
                    v43 = v47;
                  }
                  else
                  {
                    swift_retain();
                    swift_bridgeObjectRetain();
                  }
                  v48 = sub_2264D37D0(v53, v43);
                  swift_bridgeObjectRelease();
                  sub_22646A410(v48);
                }

                swift_release_n();
                return v54;
              }
            }
            else
            {
              swift_release();
            }
          }
          swift_release();
          v15 = v22;
          v16 = v8;
        }
      }
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      swift_bridgeObjectRetain_n();
      if (!sub_22655D400())
        goto LABEL_78;
    }
    v10 = (char *)MEMORY[0x2276999E4](0, v8);
    goto LABEL_7;
  }
LABEL_78:
  swift_bridgeObjectRelease_n();
  return v54;
}

unint64_t sub_2264DBB08(unint64_t result)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = result;
  if (result >> 62)
  {
    result = sub_22655D400();
    v2 = result;
    if (!result)
      return result;
  }
  else
  {
    v2 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v2)
      return result;
  }
  if (v2 < 1)
  {
    __break(1u);
  }
  else if ((v1 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v2; ++i)
    {
      v4 = MEMORY[0x2276999E4](i, v1);
      sub_22653671C(&v7, v4);
      result = swift_release();
    }
  }
  else
  {
    v5 = (uint64_t *)(v1 + 32);
    do
    {
      v6 = *v5++;
      swift_retain();
      sub_22653671C(&v7, v6);
      result = swift_release();
      --v2;
    }
    while (v2);
  }
  return result;
}

unint64_t sub_2264DBBD8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  float32x2_t v5;
  __int128 v6;
  __int128 v7;
  float v8;
  float v9;
  float v10;
  __int128 v11;
  float v12;
  float v13;
  float v14;
  uint64_t v15;
  float v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t result;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  float32x2_t *v25;
  float32x2_t v26;
  float32x2_t v27;
  float32x2_t v28;
  uint64_t v29;
  int v30;
  int v31;
  float32x2_t v32;
  int v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  _QWORD v64[2];
  float32x2_t v65;
  float32x2_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  float32x2_t v73;
  uint64_t v74;
  uint64_t v75;
  float32x2_t v76;
  uint64_t v77;

  if (!a2)
    return sub_226524714(MEMORY[0x24BEE4AF8]);
  v5 = *(float32x2_t *)(a2 + 96);
  v6 = *(_OWORD *)(a2 + 48);
  v7 = *(_OWORD *)(a2 + 64);
  v8 = (float)(0.5 * v5.f32[0]) * *(float *)&v6;
  v9 = vmuls_lane_f32(0.5 * v5.f32[0], *(float32x2_t *)&v6, 1);
  v5.f32[0] = vmuls_lane_f32(0.5, v5, 1);
  v10 = v5.f32[0] * *(float *)&v7;
  v5.f32[0] = vmuls_lane_f32(v5.f32[0], *(float32x2_t *)&v7, 1);
  v11 = *(_OWORD *)(a2 + 80);
  LODWORD(v12) = HIDWORD(*(_QWORD *)(a2 + 80));
  v13 = *(float *)&v11 - v10;
  v14 = v12 - v5.f32[0];
  *(float *)&v15 = v8 + (float)(*(float *)&v11 - v10);
  *((float *)&v15 + 1) = v9 + (float)(v12 - v5.f32[0]);
  v16 = *(float *)&v11 + v10;
  v5.f32[0] = v12 + v5.f32[0];
  *(float *)&v11 = v8 + v16;
  *((float *)&v11 + 1) = v9 + v5.f32[0];
  *(float *)&v17 = v13 - v8;
  *((float *)&v17 + 1) = v14 - v9;
  *(float *)&v18 = v16 - v8;
  *((float *)&v18 + 1) = v5.f32[0] - v9;
  v64[0] = v18;
  v64[1] = v17;
  v65 = vsub_f32(0, *(float32x2_t *)&v7);
  v66 = vsub_f32(0, *(float32x2_t *)&v6);
  v67 = v15;
  v68 = v11;
  v76 = v66;
  v77 = v7;
  *((_QWORD *)&v7 + 1) = v6;
  v69 = v7;
  v70 = v17;
  v71 = v15;
  v72 = v6;
  v73 = v65;
  v74 = v11;
  v75 = v18;
  v58 = a1 & 0xFFFFFFFFFFFFFF8;
  v54 = a1 & 0xC000000000000001;
  v19 = a1 + 32;
  result = swift_retain();
  v21 = 0;
  v22 = MEMORY[0x24BEE4B00];
  v57 = a1 >> 62;
  while (1)
  {
    if (v21 >= 4)
      goto LABEL_52;
    v25 = (float32x2_t *)&v64[4 * v21];
    v27 = v25[2];
    v26 = v25[3];
    v28 = v25[1];
    v29 = sub_2264DB1B0(a1, *v25, v27, v26, 0.1);
    v31 = v30;
    v32 = vsub_f32(0, v27);
    result = sub_2264DB1B0(a1, v28, v32, v26, 0.1);
    if (((v31 | v33) & 1) == 0)
      break;
LABEL_5:
    if (++v21 == 4)
      goto LABEL_45;
  }
  v59 = v22;
  v22 = v29 - 1;
  if (__OFSUB__(v29, 1))
    goto LABEL_53;
  v34 = result;
  if ((v22 & 0x8000000000000000) == 0)
    goto LABEL_12;
  if (v57)
  {
    swift_bridgeObjectRetain();
    v53 = sub_22655D400();
    result = swift_bridgeObjectRelease();
    v22 = v53 - 1;
    if (!__OFSUB__(v53, 1))
    {
LABEL_12:
      v63 = MEMORY[0x24BEE4AF8];
      if (v57)
      {
        swift_bridgeObjectRetain();
        v36 = sub_22655D400();
        result = swift_bridgeObjectRelease();
        if (!v36)
          goto LABEL_54;
      }
      else
      {
        v36 = *(_QWORD *)(v58 + 16);
        if (!v36)
        {
LABEL_54:
          __break(1u);
          goto LABEL_55;
        }
      }
      if (v54)
      {
        while (1)
        {
          v37 = v22 + 1;
          if (__OFADD__(v22, 1))
            break;
          if (v36 == -1 && v22 == 0x7FFFFFFFFFFFFFFFLL)
            goto LABEL_50;
          v22 = v37 % v36;
          MEMORY[0x2276999E4](v37 % v36, a1);
          MEMORY[0x227699594]();
          if (*(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_22655CEF0();
          sub_22655CF08();
          result = sub_22655CEE4();
          if (v22 == v34)
            goto LABEL_30;
        }
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
      v38 = *(_QWORD *)(v58 + 16);
      do
      {
        v39 = v22 + 1;
        if (__OFADD__(v22, 1))
          goto LABEL_48;
        if (v36 == -1 && v22 == 0x7FFFFFFFFFFFFFFFLL)
          goto LABEL_51;
        v22 = v39 % v36;
        if (v39 % v36 >= v38)
          goto LABEL_49;
        v40 = *(id *)(v19 + 8 * v22);
        MEMORY[0x227699594]();
        if (*(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_22655CEF0();
        sub_22655CF08();
        result = sub_22655CEE4();
      }
      while (v22 != v34);
LABEL_30:
      v62 = MEMORY[0x24BEE4B08];
      v41 = MEMORY[0x24BEE4AF8];
      v61 = MEMORY[0x24BEE4AF8];
      v42 = swift_bridgeObjectRetain();
      v43 = sub_2264DB474(v42, a3, a4, v27, v26);
      swift_bridgeObjectRelease();
      sub_22646AA18(v43);
      v44 = swift_bridgeObjectRetain();
      v45 = sub_2264D1948(v44);
      v46 = sub_2264DB474(v45, a3, a4, v32, v26);
      swift_bridgeObjectRelease();
      sub_22646AA18(v46);
      v60 = v41;
      if (v63 >> 62)
      {
        swift_bridgeObjectRetain_n();
        result = sub_22655D400();
        v47 = result;
        if (result)
          goto LABEL_32;
      }
      else
      {
        v47 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFF8) + 0x10);
        result = swift_bridgeObjectRetain_n();
        if (v47)
        {
LABEL_32:
          if (v47 < 1)
          {
LABEL_55:
            __break(1u);
            return result;
          }
          v48 = 0;
          do
          {
            if ((v63 & 0xC000000000000001) != 0)
              v49 = (char *)MEMORY[0x2276999E4](v48, v63);
            else
              v49 = (char *)*(id *)(v63 + 8 * v48 + 32);
            v50 = v49;
            ++v48;
            v51 = (uint64_t *)&v49[OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids];
            swift_beginAccess();
            v52 = *v51;
            swift_bridgeObjectRetain();

            sub_22646A410(v52);
          }
          while (v47 != v48);
          swift_bridgeObjectRelease_n();
          v23 = v60;
LABEL_4:
          swift_bridgeObjectRelease();
          sub_2264DBB08(v23);
          swift_bridgeObjectRelease();
          sub_2264D30CC(v61);
          swift_bridgeObjectRelease();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          sub_226522790(v62, isUniquelyReferenced_nonNull_native, v26);
          v22 = v59;
          result = swift_bridgeObjectRelease();
          goto LABEL_5;
        }
      }
      swift_bridgeObjectRelease_n();
      v23 = MEMORY[0x24BEE4AF8];
      goto LABEL_4;
    }
  }
  else
  {
    v35 = *(_QWORD *)(v58 + 16);
    v22 = v35 - 1;
    if (!__OFSUB__(v35, 1))
      goto LABEL_12;
  }
  __break(1u);
LABEL_45:
  swift_release();
  return v22;
}

float sub_2264DC1D4(double a1, double a2, __n128 a3, __n128 a4)
{
  float result;
  float v5;

  result = a4.n128_f32[2];
  v5 = a4.n128_f32[2] / a3.n128_f32[2];
  if (COERCE_INT(fabs(a4.n128_f32[2] / a3.n128_f32[2])) == 2139095040)
    v5 = INFINITY;
  if ((LODWORD(v5) & 0x7FFFFFFF) != 0x7F800000)
    return (float)(a3.n128_f32[2] / (float)(1.0 - a3.n128_f32[2])) * v5;
  return result;
}

uint64_t sub_2264DC21C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC8RoomPlan13JunctionPoint_leftUUID;
  v2 = sub_22655C140();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC8RoomPlan13JunctionPoint_rightUUID, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_2264DC28C()
{
  return type metadata accessor for JunctionPoint();
}

uint64_t type metadata accessor for JunctionPoint()
{
  uint64_t result;

  result = qword_255846C30;
  if (!qword_255846C30)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2264DC2D0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22655C140();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for JunctionPoint.Configuration(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2264DC3B0 + 4 * byte_2265669DD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2264DC3E4 + 4 * asc_2265669D8[v4]))();
}

uint64_t sub_2264DC3E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264DC3EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2264DC3F4);
  return result;
}

uint64_t sub_2264DC400(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2264DC408);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2264DC40C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264DC414(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JunctionPoint.Configuration()
{
  return &type metadata for JunctionPoint.Configuration;
}

unint64_t sub_2264DC434()
{
  unint64_t result;

  result = qword_255846D00;
  if (!qword_255846D00)
  {
    result = MEMORY[0x22769A794](&unk_226566A70, &type metadata for JunctionPoint.Configuration);
    atomic_store(result, (unint64_t *)&qword_255846D00);
  }
  return result;
}

uint64_t sub_2264DC478(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

unint64_t sub_2264DC480(uint64_t a1)
{
  uint64_t v1;
  float v2;
  uint64_t v3;
  float *v4;
  float v5;
  float v6;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = *(float *)(a1 + 32);
    v3 = v1 - 1;
    if (v1 != 1)
    {
      v4 = (float *)(a1 + 36);
      do
      {
        v5 = *v4++;
        v6 = v5;
        if (v5 < v2)
          v2 = v6;
        --v3;
      }
      while (v3);
    }
    v7 = LODWORD(v2);
  }
  else
  {
    v7 = 0;
  }
  return v7 | ((unint64_t)(v1 == 0) << 32);
}

unint64_t sub_2264DC4D8(uint64_t a1)
{
  uint64_t v1;
  float v2;
  uint64_t v3;
  float *v4;
  float v5;
  float v6;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = *(float *)(a1 + 32);
    v3 = v1 - 1;
    if (v1 != 1)
    {
      v4 = (float *)(a1 + 36);
      do
      {
        v5 = *v4++;
        v6 = v5;
        if (v2 < v5)
          v2 = v6;
        --v3;
      }
      while (v3);
    }
    v7 = LODWORD(v2);
  }
  else
  {
    v7 = 0;
  }
  return v7 | ((unint64_t)(v1 == 0) << 32);
}

void sub_2264DC530(uint64_t *a1, float32x2_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6[2];

  v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_2264CA4C0(v4);
  v5 = *(_QWORD *)(v4 + 16);
  v6[0] = v4 + 32;
  v6[1] = v5;
  sub_2264DFBF0(v6, a2);
  *a1 = v4;
}

uint64_t sub_2264DC5A8(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_2264CA4D4();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_2264E02C8(v6);
  return sub_22655D370();
}

uint64_t sub_2264DC620(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  int64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = MEMORY[0x24BEE4AF8];
  v17 = a1 + 64;
  v1 = 1 << *(_BYTE *)(a1 + 32);
  v2 = -1;
  if (v1 < 64)
    v2 = ~(-1 << v1);
  v3 = v2 & *(_QWORD *)(a1 + 64);
  v18 = (unint64_t)(v1 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v5 = 0;
  while (1)
  {
    if (v3)
    {
      v7 = __clz(__rbit64(v3));
      v3 &= v3 - 1;
      v8 = v7 | (v5 << 6);
    }
    else
    {
      v9 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_31;
      if (v9 >= v18)
      {
LABEL_29:
        swift_release();
        return v22;
      }
      v10 = *(_QWORD *)(v17 + 8 * v9);
      ++v5;
      if (!v10)
      {
        v5 = v9 + 1;
        if (v9 + 1 >= v18)
          goto LABEL_29;
        v10 = *(_QWORD *)(v17 + 8 * v5);
        if (!v10)
        {
          v5 = v9 + 2;
          if (v9 + 2 >= v18)
            goto LABEL_29;
          v10 = *(_QWORD *)(v17 + 8 * v5);
          if (!v10)
          {
            v5 = v9 + 3;
            if (v9 + 3 >= v18)
              goto LABEL_29;
            v10 = *(_QWORD *)(v17 + 8 * v5);
            if (!v10)
            {
              v11 = v9 + 4;
              if (v11 >= v18)
                goto LABEL_29;
              v10 = *(_QWORD *)(v17 + 8 * v11);
              if (!v10)
              {
                while (1)
                {
                  v5 = v11 + 1;
                  if (__OFADD__(v11, 1))
                    goto LABEL_32;
                  if (v5 >= v18)
                    goto LABEL_29;
                  v10 = *(_QWORD *)(v17 + 8 * v5);
                  ++v11;
                  if (v10)
                    goto LABEL_23;
                }
              }
              v5 = v11;
            }
          }
        }
      }
LABEL_23:
      v3 = (v10 - 1) & v10;
      v8 = __clz(__rbit64(v10)) + (v5 << 6);
    }
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v8);
    swift_beginAccess();
    v13 = *(_QWORD *)(v12 + 48);
    v14 = *(_QWORD *)(v13 + 16);
    if (!v14)
    {
      v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
      goto LABEL_5;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_255849180);
    v6 = (_QWORD *)swift_allocObject();
    v15 = _swift_stdlib_malloc_size(v6);
    v16 = v15 - 32;
    if (v15 < 32)
      v16 = v15 - 25;
    v6[2] = v14;
    v6[3] = (2 * (v16 >> 3)) | 1;
    v20 = sub_22653BBE4((uint64_t)&v21, v6 + 4, v14, v13);
    swift_bridgeObjectRetain_n();
    swift_retain();
    result = sub_22646C924();
    if (v20 != v14)
      break;
    swift_release();
    swift_bridgeObjectRelease();
LABEL_5:
    result = sub_22646ACEC((unint64_t)v6);
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

_QWORD *sub_2264DC8B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, float32x2_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  _QWORD *v13;
  _QWORD *v14;
  __int32 v15;
  char v16;
  uint64_t inited;
  uint64_t v18;
  float32x2_t v19;
  uint64_t v20;
  __int32 v22;

  v14 = v13;
  v13[2] = a1;
  v13[3] = a2;
  v13[4] = a3;
  v13[5] = a4;
  v13[6] = a5;
  v13[7] = a6;
  v13[8] = a7;
  if ((a10 & 1) != 0)
  {
    v20 = 0;
  }
  else
  {
    v22 = HIDWORD(a8);
    v15 = a8;
    swift_retain();
    swift_retain();
    swift_retain();
    v16 = sub_2264EB070();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255841D18);
    inited = swift_initStackObject();
    if ((v16 & 1) != 0)
    {
      v18 = inited;
      *(_OWORD *)(inited + 16) = xmmword_22655FA80;
      v19 = vadd_f32((float32x2_t)__PAIR64__(v22, v15), a9);
      *(_QWORD *)(inited + 32) = __PAIR64__(v22, v15);
      *(_QWORD *)(inited + 40) = __PAIR64__(v19.u32[1], v15);
      *(float32x2_t *)(inited + 48) = v19;
      v19.i32[1] = v22;
    }
    else
    {
      v18 = inited;
      *(_OWORD *)(inited + 16) = xmmword_22655FA80;
      v19 = vadd_f32((float32x2_t)__PAIR64__(v22, v15), a9);
      *(_QWORD *)(inited + 32) = __PAIR64__(v22, v15);
      *(_QWORD *)(inited + 40) = __PAIR64__(v22, v19.u32[0]);
      *(float32x2_t *)(inited + 48) = v19;
      v19.i32[0] = v15;
    }
    *(float32x2_t *)(inited + 56) = v19;
    type metadata accessor for CDTPolygon();
    swift_allocObject();
    v20 = sub_2264EA930(v18);
    swift_release();
    swift_release();
    swift_release();
  }
  v14[9] = v20;
  v14[10] = a11;
  v14[11] = a12;
  v14[12] = a13;
  return v14;
}

uint64_t sub_2264DCA68()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2264DCAD4()
{
  sub_2264DCA68();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CDTTriangulatorDebug()
{
  return objc_opt_self();
}

uint64_t sub_2264DCB14(unint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((sub_2264EADEC() & 1) != 0 && (sub_2264EAB50(a2, 0.001) & 1) == 0)
  {
    swift_retain();
  }
  else
  {
    if ((sub_2264EADEC() & 1) != 0 && (sub_2264EADEC() & 1) != 0)
    {
      v4 = sub_2264E21A4(a1, a2, 0);
      if (!v4)
      {
LABEL_6:
        type metadata accessor for CDTPolygon();
        swift_allocObject();
        return sub_2264EA930(MEMORY[0x24BEE4AF8]);
      }
    }
    else
    {
      v4 = sub_2264DE6A8(a1, a2, 0, 1, 0.0001);
      if (!v4)
        goto LABEL_6;
    }
    return v4;
  }
  return a1;
}

uint64_t sub_2264DCBF4(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_40;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v3 = v2 - 1;
  if (__OFSUB__(v2, 1))
    goto LABEL_42;
  while (2)
  {
    if (v3 < 1)
      return v1;
    v4 = 0;
    while (1)
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x2276999E4](v4, v1);
        v7 = v4 + 1;
        v8 = MEMORY[0x2276999E4](v4 + 1, v1);
        goto LABEL_10;
      }
      if ((v4 & 0x8000000000000000) != 0)
        break;
      v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v4 >= v5)
        goto LABEL_34;
      v6 = *(_QWORD *)(v1 + 32 + 8 * v4);
      v7 = v4 + 1;
      swift_retain();
      if (v4 + 1 >= v5)
        goto LABEL_35;
      v8 = *(_QWORD *)(v1 + 32 + 8 * v7);
      swift_retain();
LABEL_10:
      v9 = sub_2264DE6A8(v6, v8, 1, 1, 0.0001);
      if (v9)
      {
        v10 = v9;
        swift_retain();
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || (v1 & 0x8000000000000000) != 0
          || (v1 & 0x4000000000000000) != 0)
        {
          sub_2264C10BC(v1);
        }
        if ((v7 & 0x8000000000000000) != 0)
          goto LABEL_37;
        if (v7 >= *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_38;
        *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20) = v10;
        swift_release();
        sub_22655CEE4();
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || (a1 & 0x8000000000000000) != 0
          || (a1 & 0x4000000000000000) != 0)
        {
          sub_2264C10BC(a1);
        }
        v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v4 >= v11)
          goto LABEL_39;
        v12 = v11 - 1;
        v13 = v11 - 1 - v4;
        if (v13 < 0)
          goto LABEL_43;
        memmove((void *)((a1 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 32), (const void *)((a1 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 40), 8 * v13);
        *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v12;
        sub_22655CEE4();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        v1 = a1;
        if (!(a1 >> 62))
        {
LABEL_24:
          v14 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
          v15 = v14 - 1;
          if (__OFSUB__(v14, 1))
            goto LABEL_36;
          goto LABEL_25;
        }
      }
      else
      {
        swift_release();
        swift_release();
        v4 = v7;
        if (!(v1 >> 62))
          goto LABEL_24;
      }
      swift_bridgeObjectRetain();
      v16 = sub_22655D400();
      swift_bridgeObjectRelease();
      v15 = v16 - 1;
      if (__OFSUB__(v16, 1))
        goto LABEL_36;
LABEL_25:
      if ((uint64_t)v4 >= v15)
        return v1;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    swift_bridgeObjectRetain();
    v18 = sub_22655D400();
    v3 = v18 - 1;
    if (!__OFSUB__(v18, 1))
      continue;
    break;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_2264DCEE8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unsigned int v9;
  __int32 v10;
  char v11;
  uint64_t inited;
  uint64_t v13;
  float32x2_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  float32x2_t *v37;
  BOOL v38;
  uint64_t v39;
  float32x2_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  double v46;
  double v47;
  double v48;
  __n128 v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  int64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  float32x2_t *v98;
  char v99;
  uint64_t v100;
  float v101;
  float v102;
  float v103;
  BOOL v104;
  float v105;
  unint64_t v106;
  float32x2_t v107;
  simd_float2 v108;
  float v109;
  float32x2_t v111;
  float32x2_t v112;
  float v113;
  BOOL v114;
  float32x2_t v115;
  float32x2_t v116;
  float32x2_t v117;
  float32x2_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  float32x2_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t result;
  uint64_t v132;
  char v133;
  char v135;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t *v147;
  unint64_t v148;
  unint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  float32x2_t v155;
  float32x2_t v156;
  float32x2_t v157;
  unsigned int v158;
  float32x2_t v159;
  __int32 v160;
  uint64_t v161;
  unint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  unint64_t v167;
  unint64_t v168;

  v7 = a2;
  v168 = a2;
  v135 = a4;
  if ((a5 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    v15 = a1;
  }
  else
  {
    v9 = a4;
    v160 = HIDWORD(a3);
    v10 = a3;
    v158 = HIDWORD(a4);
    swift_bridgeObjectRetain();
    v11 = sub_2264EB070();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255841D18);
    inited = swift_initStackObject();
    if ((v11 & 1) != 0)
    {
      v13 = inited;
      *(_OWORD *)(inited + 16) = xmmword_22655FA80;
      v14 = vadd_f32((float32x2_t)__PAIR64__(v160, v10), (float32x2_t)__PAIR64__(v158, v9));
      *(_QWORD *)(inited + 32) = __PAIR64__(v160, v10);
      *(_QWORD *)(inited + 40) = __PAIR64__(v14.u32[1], v10);
      *(float32x2_t *)(inited + 48) = v14;
      v14.i32[1] = v160;
    }
    else
    {
      v13 = inited;
      *(_OWORD *)(inited + 16) = xmmword_22655FA80;
      v14 = vadd_f32((float32x2_t)__PAIR64__(v160, v10), (float32x2_t)__PAIR64__(v158, v9));
      *(_QWORD *)(inited + 32) = __PAIR64__(v160, v10);
      *(_QWORD *)(inited + 40) = __PAIR64__(v160, v14.u32[0]);
      *(float32x2_t *)(inited + 48) = v14;
      v14.i32[0] = v10;
    }
    *(float32x2_t *)(inited + 56) = v14;
    type metadata accessor for CDTPolygon();
    swift_allocObject();
    v16 = sub_2264EA930(v13);
    v5 = v146;
    v15 = sub_2264DCB14(a1, v16);
    swift_retain();
    v6 = sub_2264DCBF4(v7);
    swift_bridgeObjectRelease();
    v168 = v6;
    if (v6 >> 62)
    {
LABEL_31:
      swift_bridgeObjectRetain();
      v17 = sub_22655D400();
      if (v17)
        goto LABEL_8;
    }
    else
    {
      v17 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v17)
      {
LABEL_8:
        if (v17 >= 1)
        {
          v18 = 0;
          while (1)
          {
            if ((v6 & 0xC000000000000001) != 0)
            {
              v19 = MEMORY[0x2276999E4](v18, v6);
            }
            else
            {
              v19 = *(_QWORD *)(v6 + 8 * v18 + 32);
              swift_retain();
            }
            if ((sub_2264EADEC() & 1) == 0 || (sub_2264EAB50(v15, 0.001) & 1) != 0)
              break;
            swift_retain();
            v5 = v19;
LABEL_23:
            v21 = v168;
            if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
              || (v21 & 0x8000000000000000) != 0
              || (v21 & 0x4000000000000000) != 0)
            {
              sub_2264C10BC(v21);
            }
            if (v18 >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_31;
            }
            *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 8 * v18 + 0x20) = v5;
            swift_release();
            v5 = (uint64_t)&v168;
            sub_22655CEE4();
            swift_release();
            if (v17 == ++v18)
            {
              swift_release();
              swift_release();
              v7 = v168;
              goto LABEL_33;
            }
          }
          if ((sub_2264EADEC() & 1) != 0 && (sub_2264EADEC() & 1) != 0)
          {
            v20 = sub_2264E21A4(v19, v15, 0);
            if (!v20)
              goto LABEL_20;
          }
          else
          {
            v20 = sub_2264DE6A8(v19, v15, 0, 1, 0.0001);
            if (!v20)
            {
LABEL_20:
              swift_allocObject();
              v20 = sub_2264EA930(MEMORY[0x24BEE4AF8]);
            }
          }
          v5 = v20;
          goto LABEL_23;
        }
        __break(1u);
LABEL_250:
        result = swift_release();
        __break(1u);
        return result;
      }
    }
    swift_release();
    swift_release();
    v7 = v6;
LABEL_33:
    swift_bridgeObjectRelease();
  }
  v142 = v15;
  v22 = *(_QWORD *)(v15 + 16);
  v23 = MEMORY[0x24BEE4AF8];
  v163 = MEMORY[0x24BEE4AF8];
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v5 = v7;
    else
      v5 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v24 = sub_22655D400();
    if (!v24)
      goto LABEL_46;
  }
  else
  {
    v24 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    if (!v24)
      goto LABEL_46;
  }
  if (v24 < 1)
  {
    __break(1u);
    goto LABEL_246;
  }
  v6 = 0;
  do
  {
    if ((v7 & 0xC000000000000001) != 0)
    {
      v25 = MEMORY[0x2276999E4](v6, v7);
    }
    else
    {
      v25 = *(_QWORD *)(v7 + 8 * v6 + 32);
      swift_retain();
    }
    ++v6;
    v26 = *(_QWORD *)(v25 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    sub_22646ABA8(v26);
  }
  while (v24 != v6);
LABEL_46:
  swift_bridgeObjectRelease_n();
  v27 = v163;
  v163 = v22;
  sub_22646ABA8(v27);
  v5 = v22;
  v139 = sub_2264E3F2C(v22, 0.0001);
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v142 + 24);
  v163 = v23;
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v5 = v7;
    else
      v5 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v24 = sub_22655D400();
    if (!v24)
      goto LABEL_58;
  }
  else
  {
    v24 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    if (!v24)
      goto LABEL_58;
  }
  if (v24 < 1)
  {
LABEL_246:
    __break(1u);
    goto LABEL_247;
  }
  v28 = 0;
  do
  {
    if ((v7 & 0xC000000000000001) != 0)
    {
      v29 = MEMORY[0x2276999E4](v28, v7);
    }
    else
    {
      v29 = *(_QWORD *)(v7 + 8 * v28 + 32);
      swift_retain();
    }
    ++v28;
    v30 = *(_QWORD *)(v29 + 24);
    swift_bridgeObjectRetain();
    swift_release();
    sub_22646AD34(v30);
  }
  while (v24 != v28);
LABEL_58:
  swift_bridgeObjectRelease_n();
  v31 = v163;
  v163 = v22;
  sub_22646AD34(v31);
  v32 = sub_2264E40E8(v139);
  type metadata accessor for CDTTriangleEdgeManager();
  v33 = swift_initStackObject();
  *(_QWORD *)(v33 + 16) = MEMORY[0x24BEE4B00];
  v147 = (uint64_t *)(v33 + 16);
  v138 = v32;
  sub_22648080C(v32);
  swift_bridgeObjectRelease();
  if (v22 >> 62)
    goto LABEL_128;
  v34 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v144 = v22;
  while (v34)
  {
    v154 = v22 & 0xC000000000000001;
    swift_beginAccess();
    v35 = 0;
    v36 = v22;
    v22 = 0;
    v150 = v36 + 32;
    v152 = v36 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      while (1)
      {
        if (v154)
        {
          v37 = (float32x2_t *)MEMORY[0x2276999E4](v35, v144);
          v38 = __OFADD__(v35++, 1);
          if (v38)
            goto LABEL_125;
        }
        else
        {
          if (v35 >= *(_QWORD *)(v152 + 16))
            goto LABEL_127;
          v37 = *(float32x2_t **)(v150 + 8 * v35);
          swift_retain();
          v38 = __OFADD__(v35++, 1);
          if (v38)
            goto LABEL_125;
        }
        v39 = *v147;
        sub_22655D640();
        v40 = v37[5];
        sub_22655D64C();
        v41 = *(_QWORD *)(*(_QWORD *)&v40 + 16);
        if (v41)
        {
          v42 = *(_QWORD *)&v40 + 32;
          do
          {
            v42 += 8;
            sub_22655D664();
            sub_22655D664();
            --v41;
          }
          while (v41);
        }
        v43 = sub_22655D670();
        if (*(_QWORD *)(v39 + 16))
        {
          sub_226534A10(v43);
          if ((v44 & 1) != 0)
            goto LABEL_61;
        }
        swift_retain();
        v45 = swift_bridgeObjectRetain();
        sub_2264E106C(v45, v37, v46, v47, v48, v49);
        v51 = v50;
        swift_release();
        if ((v51 & 0x8000000000000000) != 0 || (v51 & 0x4000000000000000) != 0)
        {
          v52 = (unint64_t)sub_226535F60(v51);
          swift_bridgeObjectRelease();
          v163 = v52;
          if ((v52 & 0x8000000000000000) != 0)
            goto LABEL_115;
        }
        else
        {
          v52 = v51 & 0xFFFFFFFFFFFFFF8;
          v163 = v51 & 0xFFFFFFFFFFFFFF8;
        }
        if ((v52 & 0x4000000000000000) == 0)
        {
          v53 = *(_QWORD *)(v52 + 16);
          goto LABEL_78;
        }
LABEL_115:
        swift_retain();
        v53 = sub_22655D400();
        swift_release();
LABEL_78:
        if (v53 + 0x4000000000000000 < 0)
          goto LABEL_126;
        if (v52 >> 62)
          break;
        if (*(uint64_t *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
          goto LABEL_81;
LABEL_117:
        swift_release();
        swift_bridgeObjectRelease();
        if (v35 == v34)
          goto LABEL_129;
      }
      swift_bridgeObjectRetain();
      v74 = sub_22655D400();
      swift_bridgeObjectRelease();
      if (v74 < 1)
        goto LABEL_117;
LABEL_81:
      if (2 * v53 >= 1)
        break;
LABEL_112:
      swift_bridgeObjectRelease();
      if (*(_BYTE *)(v146 + 17) == 1)
        sub_2264E43D4("[CDT] Found stop condition");
LABEL_61:
      swift_release();
      if (v35 == v34)
        goto LABEL_129;
    }
    v54 = (2 * v53) | 1;
    if (v54 <= 2)
      v54 = 2;
    v55 = v54 - 1;
    while (1)
    {
      v56 = v52 >> 62;
      if (v52 >> 62)
        break;
      if (!*(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_119;
LABEL_87:
      if ((v52 & 0xC000000000000001) != 0)
      {
        v57 = (_QWORD *)MEMORY[0x2276999E4](0, v52);
        if (!v56)
          goto LABEL_90;
      }
      else
      {
        if (!*(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_121;
        v57 = *(_QWORD **)(v52 + 32);
        swift_retain();
        if (!v56)
        {
LABEL_90:
          if (!*(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_122;
          goto LABEL_91;
        }
      }
      swift_bridgeObjectRetain();
      v72 = sub_22655D400();
      swift_bridgeObjectRelease();
      if (!v72)
        goto LABEL_122;
LABEL_91:
      sub_22650A5D0(0, 1);
      swift_beginAccess();
      if (*(_QWORD *)(v57[6] + 16) == 2)
      {
        v58 = swift_bridgeObjectRetain();
        v59 = sub_226535E30(v58);
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_255841D18);
        v60 = swift_initStackObject();
        *(_OWORD *)(v60 + 16) = xmmword_22655FA80;
        v61 = v59[2];
        if (!v61)
          goto LABEL_123;
        v62 = v60;
        *(_QWORD *)(v60 + 32) = v59[4];
        *(_QWORD *)(v60 + 40) = v57[2];
        if (v61 == 1)
          goto LABEL_124;
        v63 = v59[5];
        swift_release();
        *(_QWORD *)(v62 + 48) = v63;
        *(_QWORD *)(v62 + 56) = v57[3];
        type metadata accessor for CDTPolygon();
        swift_initStackObject();
        sub_2264EA930(v62);
        if ((sub_2264EADEC() & 1) != 0)
        {
          v64 = swift_bridgeObjectRetain();
          v65 = sub_226535E44(v64);
          swift_bridgeObjectRelease();
          v66 = sub_22648003C();
          sub_226480374((unint64_t)v65);
          swift_release();
          v67 = sub_22648080C(v66);
          swift_bridgeObjectRelease();
          swift_retain();
          v68 = sub_2264E458C(v67, v37);
          swift_bridgeObjectRelease();
          swift_release();
          sub_22646AD10(v68);
        }
        else
        {
          v69 = swift_retain();
          MEMORY[0x227699594](v69);
          if (*(_QWORD *)((v163 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v163 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_22655CEF0();
          sub_22655CF08();
          sub_22655CEE4();
        }
        swift_release();
      }
      swift_release();
      v52 = v163;
      if (v163 >> 62)
      {
        swift_bridgeObjectRetain();
        v73 = sub_22655D400();
        swift_bridgeObjectRelease();
        if (v73 < 1)
          goto LABEL_117;
      }
      else if (*(uint64_t *)((v163 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
      {
        goto LABEL_117;
      }
      if (!--v55)
        goto LABEL_112;
    }
    swift_bridgeObjectRetain();
    v70 = sub_22655D400();
    swift_bridgeObjectRelease();
    if (v70)
    {
      swift_bridgeObjectRetain();
      v71 = sub_22655D400();
      swift_bridgeObjectRelease();
      if (!v71)
        goto LABEL_120;
      goto LABEL_87;
    }
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    swift_bridgeObjectRetain();
    v34 = sub_22655D400();
    v144 = v22;
  }
LABEL_129:
  v133 = a5 & 1;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v75 = swift_bridgeObjectRetain();
  v76 = sub_2264DC620(v75);
  swift_bridgeObjectRelease();
  v77 = sub_22653CF6C(v76);
  swift_bridgeObjectRelease();
  v162 = MEMORY[0x24BEE4AF8];
  v137 = v77;
  if ((v77 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_22655D244();
    type metadata accessor for CDTTriangle();
    sub_2264E49DC();
    sub_22655CFB0();
    v77 = v163;
    v141 = v164;
    v78 = v165;
    v79 = v166;
    v80 = v167;
  }
  else
  {
    v81 = -1 << *(_BYTE *)(v77 + 32);
    v141 = v77 + 56;
    v82 = ~v81;
    v83 = -v81;
    if (v83 < 64)
      v84 = ~(-1 << v83);
    else
      v84 = -1;
    v80 = v84 & *(_QWORD *)(v77 + 56);
    swift_bridgeObjectRetain();
    v78 = v82;
    v79 = 0;
  }
  v140 = (unint64_t)(v78 + 64) >> 6;
  v145 = v77;
  if ((v77 & 0x8000000000000000) == 0)
    goto LABEL_140;
LABEL_158:
  while (2)
  {
    if (!sub_22655D298()
      || (type metadata accessor for CDTTriangle(),
          swift_unknownObjectRetain(),
          swift_dynamicCast(),
          v91 = v161,
          swift_unknownObjectRelease(),
          v87 = v79,
          v85 = v80,
          !v161))
    {
LABEL_224:
      sub_22646C924();
      if (*(_BYTE *)(v146 + 16) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_234;
      }
      v120 = swift_bridgeObjectRetain();
      v5 = (uint64_t)sub_226535E68(v120);
      swift_bridgeObjectRelease();
      v161 = v139;
      swift_bridgeObjectRetain();
      v22 = 0;
      sub_22649532C(&v161);
      swift_bridgeObjectRelease();
      v7 = v161;
      v121 = swift_bridgeObjectRetain();
      v24 = (uint64_t)sub_2264E4A24(v121);
      swift_bridgeObjectRelease();
      v6 = v162;
      if ((v162 & 0x8000000000000000) == 0 && (v162 & 0x4000000000000000) == 0)
      {
        v122 = v162 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n();
LABEL_228:
        v161 = v122;
        sub_2264DC5A8(&v161);
        if (v22)
          goto LABEL_250;
        swift_bridgeObjectRelease();
        v123 = v161;
        v124 = v168;
        if (v5 < 0 || (v5 & 0x4000000000000000) != 0)
        {
          type metadata accessor for CDTEdge();
          v125 = a1;
          swift_retain();
          v126 = v142;
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          sub_22655D3F4();
          swift_release();
        }
        else
        {
          v125 = a1;
          swift_retain();
          v126 = v142;
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          sub_22655D568();
          type metadata accessor for CDTEdge();
        }
        swift_release();
        type metadata accessor for CDTTriangulatorDebug();
        v127 = swift_allocObject();
        LOBYTE(v132) = v133;
        sub_2264DC8B8(v7, v24, v138, v137, v123, v125, v126, a3, v128, v135, v132, v124, v144);
        *(_QWORD *)(v146 + 24) = v127;
        swift_release();
LABEL_234:
        v79 = v162;
        if ((v162 & 0x8000000000000000) != 0 || (v162 & 0x4000000000000000) != 0)
          goto LABEL_244;
        v129 = v162 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n();
        goto LABEL_237;
      }
LABEL_247:
      swift_bridgeObjectRetain_n();
      v122 = (uint64_t)sub_226535E5C(v6);
      swift_bridgeObjectRelease();
      goto LABEL_228;
    }
LABEL_160:
    v151 = v85;
    v92 = v168;
    if (v168 >> 62)
    {
      swift_bridgeObjectRetain();
      v79 = sub_22655D400();
      if (!v79)
      {
LABEL_217:
        swift_bridgeObjectRelease();
        if ((sub_226453EFC(v142, 0.00000011921, *(double *)(v91 + 24)) & 1) != 0 && (*(_BYTE *)(v91 + 40) & 1) == 0)
        {
          v119 = swift_retain();
          MEMORY[0x227699594](v119);
          if (*(_QWORD *)((v162 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v162 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_22655CEF0();
          sub_22655CF08();
          sub_22655CEE4();
        }
LABEL_222:
        swift_release();
        v79 = v87;
        v80 = v151;
        if (v77 < 0)
          continue;
        goto LABEL_140;
      }
    }
    else
    {
      v79 = *(_QWORD *)((v168 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v79)
        goto LABEL_217;
    }
    break;
  }
  v93 = 0;
  v94 = v92 & 0xC000000000000001;
  v153 = v91;
  v148 = v87;
  v143 = v79;
LABEL_163:
  if (v94)
  {
    v95 = MEMORY[0x2276999E4](v93, v92);
    v38 = __OFADD__(v93++, 1);
    if (v38)
      goto LABEL_240;
  }
  else
  {
    if (v93 >= *(_QWORD *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_242;
    v95 = *(_QWORD *)(v92 + 32 + 8 * v93);
    swift_retain();
    v38 = __OFADD__(v93++, 1);
    if (v38)
      goto LABEL_240;
  }
  v159 = *(float32x2_t *)(v91 + 24);
  v96 = *(_QWORD *)(v95 + 24);
  if (v96 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v97 = sub_22655D400();
    swift_bridgeObjectRelease();
    if (!v97)
    {
LABEL_209:
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_210;
    }
  }
  else
  {
    v97 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v97)
      goto LABEL_209;
  }
  if ((v96 & 0xC000000000000001) != 0)
  {
    v98 = (float32x2_t *)MEMORY[0x2276999E4](0, v96);
  }
  else
  {
    if (!*(_QWORD *)((v96 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_241;
    v98 = *(float32x2_t **)(v96 + 32);
    swift_retain();
  }
  if ((sub_226453E20(v98, 0.00000011921, v159) & 1) != 0)
    goto LABEL_214;
  v79 = 0;
  v99 = 0;
  v100 = v97 - 1;
  while (1)
  {
    LODWORD(v101) = HIDWORD(*(_QWORD *)&v98[2]);
    LODWORD(v102) = HIDWORD(*(_QWORD *)&v98[3]);
    v103 = vabds_f32(v102, v159.f32[1]);
    v104 = vabds_f32(v101, v102) > 0.00000011921 || v103 > 0.00000011921;
    if (!v104 && (vmvn_s8(veor_s8((int8x8_t)vcge_f32(v98[2], v159), (int8x8_t)vcge_f32(v98[3], v159))).u8[0] & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
LABEL_138:
      swift_release();
      swift_bridgeObjectRelease();
      v79 = v148;
      goto LABEL_139;
    }
    v155 = v98[3];
    v156 = v98[2];
    swift_release();
    if (v159.f32[1] >= v101 != v159.f32[1] < v102)
      goto LABEL_186;
    v105 = v156.f32[0]
         + (float)((float)((float)(v159.f32[1] - v101) * vsub_f32(v155, v156).f32[0]) / (float)(v102 - v101));
    if (vabds_f32(v159.f32[0], v105) <= 0.00000011921)
    {
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_138;
    }
    if (v159.f32[0] <= v105)
      v99 ^= 1u;
LABEL_186:
    if (v100 == v79)
    {
      swift_release();
      swift_bridgeObjectRelease();
      v77 = v145;
      v87 = v148;
      v79 = v143;
      if ((v99 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_222;
      }
LABEL_210:
      v91 = v153;
      v94 = v92 & 0xC000000000000001;
      if (v93 == v79)
        goto LABEL_217;
      goto LABEL_163;
    }
    v106 = v79 + 1;
    if ((v96 & 0xC000000000000001) != 0)
    {
      v98 = (float32x2_t *)MEMORY[0x2276999E4](v79 + 1, v96);
      if (__OFADD__(v106, 1))
        break;
      goto LABEL_193;
    }
    if (v106 >= *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_239;
    v98 = *(float32x2_t **)(v96 + 8 * v79 + 40);
    swift_retain();
    if (__OFADD__(v106, 1))
      break;
LABEL_193:
    if ((v98[4].i8[0] & 1) == 0)
    {
      v107 = v98[2];
      v108 = (simd_float2)vsub_f32(v159, v107);
      v109 = fabsf(v108.f32[1]);
      if (fabsf(v108.f32[0]) < 0.00000011921 && v109 < 0.00000011921)
        goto LABEL_213;
      v111 = v98[3];
      v112 = vsub_f32(v159, v111);
      v113 = fabsf(v112.f32[1]);
      v114 = fabsf(v112.f32[0]) < 0.00000011921 && v113 < 0.00000011921;
      if (v114
        || (v157 = (float32x2_t)v108,
            v115 = vsub_f32(v111, v107),
            fabsf(_simd_orient_vf2(v108, (simd_float2)v115)) <= 0.00000011921)
        && (v116 = vmul_f32(v157, v115), vaddv_f32(v116) > 0.0)
        && (v117 = vsub_f32(v107, v111),
            v118 = vmul_f32(v117, v117),
            (vcgt_f32(vadd_f32(v118, (float32x2_t)vdup_lane_s32((int32x2_t)v118, 1)), vadd_f32(v116, (float32x2_t)vdup_lane_s32((int32x2_t)v116, 1))).u8[0] & 1) != 0))
      {
LABEL_213:
        v87 = v148;
LABEL_214:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        v79 = v87;
LABEL_139:
        v80 = v151;
        v77 = v145;
        if (v145 < 0)
          goto LABEL_158;
LABEL_140:
        if (v80)
        {
          v85 = (v80 - 1) & v80;
          v86 = __clz(__rbit64(v80)) | (v79 << 6);
          v87 = v79;
        }
        else
        {
          v88 = v79 + 1;
          if (__OFADD__(v79, 1))
            goto LABEL_243;
          if (v88 >= v140)
            goto LABEL_224;
          v89 = *(_QWORD *)(v141 + 8 * v88);
          v87 = v79 + 1;
          if (!v89)
          {
            v87 = v79 + 2;
            if ((uint64_t)(v79 + 2) >= v140)
              goto LABEL_224;
            v89 = *(_QWORD *)(v141 + 8 * v87);
            if (!v89)
            {
              v87 = v79 + 3;
              if ((uint64_t)(v79 + 3) >= v140)
                goto LABEL_224;
              v89 = *(_QWORD *)(v141 + 8 * v87);
              if (!v89)
              {
                v87 = v79 + 4;
                if ((uint64_t)(v79 + 4) >= v140)
                  goto LABEL_224;
                v89 = *(_QWORD *)(v141 + 8 * v87);
                if (!v89)
                {
                  v90 = v79 + 5;
                  while (v140 != v90)
                  {
                    v89 = *(_QWORD *)(v141 + 8 * v90++);
                    if (v89)
                    {
                      v87 = v90 - 1;
                      goto LABEL_155;
                    }
                  }
                  goto LABEL_224;
                }
              }
            }
          }
LABEL_155:
          v85 = (v89 - 1) & v89;
          v86 = __clz(__rbit64(v89)) + (v87 << 6);
        }
        v91 = *(_QWORD *)(*(_QWORD *)(v77 + 48) + 8 * v86);
        swift_retain();
        if (!v91)
          goto LABEL_224;
        goto LABEL_160;
      }
    }
    ++v79;
  }
  __break(1u);
LABEL_239:
  __break(1u);
LABEL_240:
  __break(1u);
LABEL_241:
  __break(1u);
LABEL_242:
  __break(1u);
LABEL_243:
  __break(1u);
LABEL_244:
  swift_bridgeObjectRetain_n();
  v129 = (uint64_t)sub_226535E5C(v79);
  swift_bridgeObjectRelease();
LABEL_237:
  v161 = v129;
  sub_2264DC5A8(&v161);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v130 = v161;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v130;
}

uint64_t sub_2264DE448(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2264AC950(*a1, *a2);
}

uint64_t sub_2264DE454()
{
  sub_22655D640();
  sub_22655CE00();
  swift_bridgeObjectRelease();
  return sub_22655D670();
}

uint64_t sub_2264DE4F8()
{
  sub_22655CE00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2264DE578()
{
  sub_22655D640();
  sub_22655CE00();
  swift_bridgeObjectRelease();
  return sub_22655D670();
}

uint64_t sub_2264DE618@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2264E51EC();
  *a1 = result;
  return result;
}

void sub_2264DE644(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE600000000000000;
  v4 = 0xEC0000006E6F6974;
  v5 = 0x6365737265746E69;
  if (v2 != 1)
  {
    v5 = 0x6564697374756FLL;
    v4 = 0xE700000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x656469736E69;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_2264DE6A8(uint64_t a1, uint64_t a2, char a3, char a4, float a5)
{
  uint64_t *v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  char isUniquelyReferenced_nonNull_native;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  char v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  float32x2_t *v44;
  int32x2_t v45;
  char v46;
  unint64_t v47;
  uint64_t v48;
  _BOOL8 v49;
  uint64_t v50;
  char v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  float32x2_t *v55;
  int32x2_t v56;
  char v57;
  unint64_t v58;
  uint64_t v59;
  _BOOL8 v60;
  uint64_t v61;
  char v62;
  unint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  float32x2_t *v77;
  double v78;
  int32x2_t v79;
  _QWORD *v80;
  unint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  unint64_t v86;
  uint64_t v87;
  _BOOL8 v88;
  uint64_t v89;
  char v90;
  unint64_t v91;
  char v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  _QWORD *v100;
  char v101;
  unint64_t v102;
  uint64_t v103;
  _BOOL8 v104;
  uint64_t v105;
  char v106;
  unint64_t v107;
  char v108;
  uint64_t v109;
  _QWORD *v110;
  _QWORD *v111;
  float32x2_t *v112;
  uint64_t v113;
  uint64_t v114;
  float32x2_t *v115;
  float32x2_t v116;
  char v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t i;
  float32x2_t v121;
  float32x2_t v122;
  float v123;
  float v124;
  __int8 v126;
  unint64_t v127;
  unint64_t v128;
  float32x2_t *v129;
  uint64_t v130;
  int64_t v131;
  unint64_t v132;
  char v133;
  uint64_t v134;
  unint64_t v135;
  _QWORD *v136;
  unint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  unint64_t v140;
  _QWORD *v141;
  uint64_t v142;
  unint64_t v143;
  float32x2_t v144;
  uint64_t v145;
  int32x2_t v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  unint64_t v150;
  float32x2_t v151;
  float v152;
  float v153;
  unint64_t v155;
  uint64_t v156;
  unint64_t v157;
  _QWORD *v158;
  unint64_t v159;
  unsigned __int8 *v160;
  int v161;
  float32x2_t v162;
  uint64_t v163;
  int32x2_t v164;
  unint64_t v165;
  unint64_t v166;
  int64_t v167;
  char v168;
  unint64_t v169;
  float32x2_t v170;
  float v171;
  float v172;
  unint64_t v174;
  uint64_t v175;
  char v176;
  uint64_t v177;
  uint64_t result;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  unint64_t v186;
  uint64_t v187;
  unint64_t v188;
  unint64_t v189;
  uint64_t *v190;
  _QWORD *v191;
  unsigned int v193;
  uint64_t v194;
  unint64_t v195;
  unint64_t v197;
  float32x2_t *v198;
  uint64_t v199;
  int64_t v200;
  uint64_t v201;
  unint64_t v202;
  _QWORD *v203;
  _QWORD *v204;
  uint64_t *v205;
  int v206;
  uint64_t v207;
  unint64_t v208;
  _QWORD *v209;
  _QWORD *v210[2];

  v6 = (uint64_t *)a1;
  v7 = a3 & 1;
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(v8 + 16);
  v193 = v7;
  if (v9)
  {
    swift_bridgeObjectRetain();
    v10 = 0;
    v194 = MEMORY[0x24BEE4B00];
    while (1)
    {
      v12 = *(double *)(v8 + 8 * v10 + 32);
      if ((sub_226453EFC((uint64_t)v6, 0.00000011921, v12) & 1) != 0)
      {
        if (v7)
          goto LABEL_6;
        v6 = (uint64_t *)v194;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v207 = v194;
        v15 = sub_226534A10(v10);
        v16 = *(_QWORD *)(v194 + 16);
        v17 = (v14 & 1) == 0;
        v18 = v16 + v17;
        if (__OFADD__(v16, v17))
          goto LABEL_133;
        v19 = v14;
        if (*(_QWORD *)(v194 + 24) >= v18)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v6 = &v207;
            sub_226547E38();
          }
        }
        else
        {
          sub_226541990(v18, isUniquelyReferenced_nonNull_native);
          v6 = (uint64_t *)v207;
          v20 = sub_226534A10(v10);
          if ((v19 & 1) != (v21 & 1))
            goto LABEL_281;
          v15 = v20;
        }
        v31 = (_QWORD *)v207;
        v194 = v207;
        if ((v19 & 1) == 0)
        {
          *(_QWORD *)(v207 + 8 * (v15 >> 6) + 64) |= 1 << v15;
          *(_QWORD *)(v31[6] + 8 * v15) = v10;
          v32 = v31[7] + 16 * v15;
          *(_BYTE *)v32 = 0;
          *(double *)(v32 + 8) = v12;
          v33 = v31[2];
          v34 = __OFADD__(v33, 1);
          v35 = v33 + 1;
          if (v34)
            goto LABEL_138;
LABEL_29:
          v31[2] = v35;
          goto LABEL_5;
        }
        v11 = *(_QWORD *)(v207 + 56) + 16 * v15;
        *(_BYTE *)v11 = 0;
      }
      else
      {
        if (!v7)
          goto LABEL_6;
        v6 = (uint64_t *)v194;
        v22 = swift_isUniquelyReferenced_nonNull_native();
        v207 = v194;
        v24 = sub_226534A10(v10);
        v25 = *(_QWORD *)(v194 + 16);
        v26 = (v23 & 1) == 0;
        v27 = v25 + v26;
        if (__OFADD__(v25, v26))
          goto LABEL_134;
        v28 = v23;
        if (*(_QWORD *)(v194 + 24) >= v27)
        {
          if ((v22 & 1) == 0)
          {
            v6 = &v207;
            sub_226547E38();
          }
        }
        else
        {
          sub_226541990(v27, v22);
          v6 = (uint64_t *)v207;
          v29 = sub_226534A10(v10);
          if ((v28 & 1) != (v30 & 1))
            goto LABEL_281;
          v24 = v29;
        }
        v31 = (_QWORD *)v207;
        v194 = v207;
        if ((v28 & 1) == 0)
        {
          *(_QWORD *)(v207 + 8 * (v24 >> 6) + 64) |= 1 << v24;
          *(_QWORD *)(v31[6] + 8 * v24) = v10;
          v36 = v31[7] + 16 * v24;
          *(_BYTE *)v36 = 2;
          *(double *)(v36 + 8) = v12;
          v37 = v31[2];
          v34 = __OFADD__(v37, 1);
          v35 = v37 + 1;
          if (v34)
            goto LABEL_139;
          goto LABEL_29;
        }
        v11 = *(_QWORD *)(v207 + 56) + 16 * v24;
        *(_BYTE *)v11 = 2;
      }
      *(double *)(v11 + 8) = v12;
LABEL_5:
      swift_bridgeObjectRelease();
      v6 = (uint64_t *)a1;
      v7 = v193;
LABEL_6:
      if (v9 == ++v10)
      {
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
    }
  }
  v194 = MEMORY[0x24BEE4B00];
LABEL_32:
  v38 = v6[2];
  v39 = *(_QWORD *)(v38 + 16);
  if (v39)
  {
    swift_bridgeObjectRetain();
    v40 = 0;
    v9 = MEMORY[0x24BEE4B00];
    while (1)
    {
      if (v40 >= *(_QWORD *)(v38 + 16))
        goto LABEL_130;
      v42 = *(double *)(v38 + 32 + 8 * v40);
      if ((sub_226453EFC(a2, 0.00000011921, v42) & 1) != 0)
      {
        if (v7)
          goto LABEL_37;
        v43 = *(_QWORD *)(v8 + 16);
        if (v43)
        {
          v44 = (float32x2_t *)(v8 + 32);
          do
          {
            v45 = vceq_f32(*v44, *(float32x2_t *)&v42);
            if ((v45.i32[0] & v45.i32[1] & 1) != 0)
              goto LABEL_37;
            ++v44;
          }
          while (--v43);
        }
        v6 = (uint64_t *)v9;
        v9 = swift_isUniquelyReferenced_nonNull_native();
        v207 = (uint64_t)v6;
        v47 = sub_226534A10(v40);
        v48 = v6[2];
        v49 = (v46 & 1) == 0;
        v50 = v48 + v49;
        if (__OFADD__(v48, v49))
          goto LABEL_136;
        v51 = v46;
        if (v6[3] >= v50)
        {
          if ((v9 & 1) != 0)
          {
            v9 = v207;
            if ((v46 & 1) == 0)
              goto LABEL_64;
          }
          else
          {
            v6 = &v207;
            sub_226547E38();
            v9 = v207;
            if ((v51 & 1) == 0)
              goto LABEL_64;
          }
        }
        else
        {
          sub_226541990(v50, v9);
          v6 = (uint64_t *)v207;
          v52 = sub_226534A10(v40);
          if ((v51 & 1) != (v53 & 1))
            goto LABEL_281;
          v47 = v52;
          v9 = v207;
          if ((v51 & 1) == 0)
          {
LABEL_64:
            *(_QWORD *)(v9 + 8 * (v47 >> 6) + 64) |= 1 << v47;
            *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v47) = v40;
            v68 = *(_QWORD *)(v9 + 56) + 16 * v47;
            *(_BYTE *)v68 = 0;
            *(double *)(v68 + 8) = v42;
            v69 = *(_QWORD *)(v9 + 16);
            v34 = __OFADD__(v69, 1);
            v67 = v69 + 1;
            if (v34)
              goto LABEL_141;
            goto LABEL_65;
          }
        }
        v41 = *(_QWORD *)(v9 + 56) + 16 * v47;
        *(_BYTE *)v41 = 0;
      }
      else
      {
        if (!v7)
          goto LABEL_37;
        v54 = *(_QWORD *)(v8 + 16);
        if (v54)
        {
          v55 = (float32x2_t *)(v8 + 32);
          do
          {
            v56 = vceq_f32(*v55, *(float32x2_t *)&v42);
            if ((v56.i32[0] & v56.i32[1] & 1) != 0)
              goto LABEL_37;
            ++v55;
          }
          while (--v54);
        }
        v6 = (uint64_t *)v9;
        v9 = swift_isUniquelyReferenced_nonNull_native();
        v207 = (uint64_t)v6;
        v58 = sub_226534A10(v40);
        v59 = v6[2];
        v60 = (v57 & 1) == 0;
        v61 = v59 + v60;
        if (__OFADD__(v59, v60))
          goto LABEL_137;
        v62 = v57;
        if (v6[3] >= v61)
        {
          if ((v9 & 1) != 0)
          {
            v9 = v207;
            if ((v57 & 1) == 0)
              goto LABEL_59;
          }
          else
          {
            v6 = &v207;
            sub_226547E38();
            v9 = v207;
            if ((v62 & 1) == 0)
              goto LABEL_59;
          }
        }
        else
        {
          sub_226541990(v61, v9);
          v6 = (uint64_t *)v207;
          v63 = sub_226534A10(v40);
          if ((v62 & 1) != (v64 & 1))
            goto LABEL_281;
          v58 = v63;
          v9 = v207;
          if ((v62 & 1) == 0)
          {
LABEL_59:
            *(_QWORD *)(v9 + 8 * (v58 >> 6) + 64) |= 1 << v58;
            *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v58) = v40;
            v65 = *(_QWORD *)(v9 + 56) + 16 * v58;
            *(_BYTE *)v65 = 2;
            *(double *)(v65 + 8) = v42;
            v66 = *(_QWORD *)(v9 + 16);
            v34 = __OFADD__(v66, 1);
            v67 = v66 + 1;
            if (v34)
              goto LABEL_140;
LABEL_65:
            *(_QWORD *)(v9 + 16) = v67;
            goto LABEL_36;
          }
        }
        v41 = *(_QWORD *)(v9 + 56) + 16 * v58;
        *(_BYTE *)v41 = 2;
      }
      *(double *)(v41 + 8) = v42;
LABEL_36:
      swift_bridgeObjectRelease();
      v6 = (uint64_t *)a1;
      v7 = v193;
LABEL_37:
      if (++v40 == v39)
      {
        swift_bridgeObjectRelease();
        goto LABEL_75;
      }
    }
  }
  v9 = MEMORY[0x24BEE4B00];
LABEL_75:
  v8 = *(_QWORD *)(a2 + 24);
  if (v8 >> 62)
    goto LABEL_142;
  v70 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v180 = v9;
  if (v70)
  {
LABEL_77:
    v71 = v6[3];
    v197 = v71;
    if (v71 >> 62)
    {
      swift_bridgeObjectRetain();
      v72 = sub_22655D400();
      swift_bridgeObjectRelease();
    }
    else
    {
      v72 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v205 = 0;
    v188 = v8 & 0xC000000000000001;
    v182 = v8 & 0xFFFFFFFFFFFFFF8;
    v9 = MEMORY[0x24BEE4B00];
    v199 = v72;
    v202 = v71 & 0xC000000000000001;
    v73 = (uint64_t *)MEMORY[0x24BEE4B00];
    v184 = v70;
    v186 = v8;
    while (1)
    {
      if (v188)
      {
        MEMORY[0x2276999E4](v205, v8);
        v6 = (uint64_t *)((char *)v205 + 1);
        if (__OFADD__(v205, 1))
          goto LABEL_131;
      }
      else
      {
        v6 = v205;
        if ((unint64_t)v205 >= *(_QWORD *)(v182 + 16))
          goto LABEL_135;
        swift_retain();
        v6 = (uint64_t *)((char *)v205 + 1);
        if (__OFADD__(v205, 1))
          goto LABEL_131;
      }
      if (v72)
        break;
      swift_release();
LABEL_81:
      v205 = v6;
      if (v6 == (uint64_t *)v70)
        goto LABEL_144;
    }
    if (v72 < 1)
      goto LABEL_132;
    v190 = v6;
    swift_bridgeObjectRetain();
    v74 = 0;
    v75 = v73;
    v76 = (uint64_t)v205;
    while (1)
    {
      if (v202)
      {
        v77 = (float32x2_t *)MEMORY[0x2276999E4](v74, v71);
      }
      else
      {
        v77 = *(float32x2_t **)(v71 + 8 * v74 + 32);
        swift_retain();
      }
      v80 = sub_226495860(v77, 1, 0.0001, v78, v79);
      if (!v80[2])
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_92;
      }
      if (v75[2] && (v81 = sub_226534A10(v76), (v82 & 1) != 0))
      {
        v83 = v9;
        v207 = *(_QWORD *)(v75[7] + 8 * v81);
        swift_bridgeObjectRetain();
      }
      else
      {
        v83 = v9;
        v207 = MEMORY[0x24BEE4AF8];
      }
      v84 = swift_bridgeObjectRetain();
      sub_22646ABA8(v84);
      v9 = v207;
      v6 = v75;
      v8 = swift_isUniquelyReferenced_nonNull_native();
      v210[0] = v6;
      v86 = sub_226534A10(v76);
      v87 = v6[2];
      v88 = (v85 & 1) == 0;
      v89 = v87 + v88;
      if (__OFADD__(v87, v88))
      {
        __break(1u);
LABEL_128:
        __break(1u);
LABEL_129:
        __break(1u);
LABEL_130:
        __break(1u);
LABEL_131:
        __break(1u);
LABEL_132:
        __break(1u);
LABEL_133:
        __break(1u);
LABEL_134:
        __break(1u);
LABEL_135:
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        __break(1u);
LABEL_141:
        __break(1u);
LABEL_142:
        swift_bridgeObjectRetain();
        v70 = sub_22655D400();
        v180 = v9;
        if (!v70)
          break;
        goto LABEL_77;
      }
      v90 = v85;
      if (v6[3] >= v89)
      {
        if ((v8 & 1) != 0)
        {
          v93 = v210[0];
          if ((v85 & 1) == 0)
            goto LABEL_105;
        }
        else
        {
          v6 = (uint64_t *)v210;
          sub_226547E2C();
          v93 = v210[0];
          if ((v90 & 1) == 0)
            goto LABEL_105;
        }
      }
      else
      {
        sub_226541984(v89, v8);
        v6 = v210[0];
        v91 = sub_226534A10(v76);
        if ((v90 & 1) != (v92 & 1))
          goto LABEL_281;
        v86 = v91;
        v93 = v210[0];
        if ((v90 & 1) == 0)
        {
LABEL_105:
          v93[(v86 >> 6) + 8] |= 1 << v86;
          v94 = 8 * v86;
          *(_QWORD *)(v93[6] + v94) = v205;
          *(_QWORD *)(v93[7] + v94) = v9;
          v95 = v93[2];
          v34 = __OFADD__(v95, 1);
          v96 = v95 + 1;
          if (v34)
            goto LABEL_129;
          v93[2] = v96;
          goto LABEL_110;
        }
      }
      v97 = v93[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v97 + 8 * v86) = v9;
LABEL_110:
      swift_bridgeObjectRelease();
      v9 = v83;
      if (*(_QWORD *)(v83 + 16) && (v98 = sub_226534A10(v74), (v99 & 1) != 0))
      {
        v210[0] = *(_QWORD **)(*(_QWORD *)(v83 + 56) + 8 * v98);
        swift_bridgeObjectRetain();
      }
      else
      {
        v210[0] = (_QWORD *)MEMORY[0x24BEE4AF8];
      }
      v72 = v199;
      sub_22646ABA8((uint64_t)v80);
      v100 = v210[0];
      v8 = swift_isUniquelyReferenced_nonNull_native();
      v209 = (_QWORD *)v9;
      v6 = (uint64_t *)v9;
      v102 = sub_226534A10(v74);
      v103 = *(_QWORD *)(v9 + 16);
      v104 = (v101 & 1) == 0;
      v105 = v103 + v104;
      if (__OFADD__(v103, v104))
        goto LABEL_128;
      v106 = v101;
      if (*(_QWORD *)(v9 + 24) >= v105)
      {
        if ((v8 & 1) == 0)
          sub_226547E2C();
      }
      else
      {
        sub_226541984(v105, v8);
        v107 = sub_226534A10(v74);
        if ((v106 & 1) != (v108 & 1))
          goto LABEL_281;
        v102 = v107;
      }
      v75 = v93;
      v9 = (uint64_t)v209;
      v76 = (uint64_t)v205;
      if ((v106 & 1) != 0)
      {
        v109 = v209[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v109 + 8 * v102) = v100;
      }
      else
      {
        sub_226523CC4(v102, v74, (uint64_t)v100, v209);
      }
      swift_release();
      swift_bridgeObjectRelease();
      v71 = v197;
LABEL_92:
      if (v72 == ++v74)
      {
        v73 = v75;
        swift_release();
        swift_bridgeObjectRelease();
        v70 = v184;
        v8 = v186;
        v6 = v190;
        goto LABEL_81;
      }
    }
  }
  v9 = MEMORY[0x24BEE4B00];
  v73 = (uint64_t *)MEMORY[0x24BEE4B00];
LABEL_144:
  swift_bridgeObjectRelease();
  if (v193 && !*(_QWORD *)(v9 + 16) && !v73[2])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v110 = sub_2264E3438(a2, v73, v194);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v210[0] = v110;
  sub_2264E38B0(v210, a5);
  swift_bridgeObjectRetain();
  v111 = sub_2264E3438(a1, (_QWORD *)v9, v180);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v209 = v111;
  sub_2264E38B0(&v209, a5);
  v112 = (float32x2_t *)v210[0];
  v113 = v210[0][2];
  if (!v113)
  {
    if (v209[2])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v118 = a1;
      swift_retain();
      return v118;
    }
    type metadata accessor for CDTPolygon();
    swift_allocObject();
    v118 = sub_2264EA930(MEMORY[0x24BEE4AF8]);
    goto LABEL_267;
  }
  v114 = 0x656469736E69;
  v191 = v210[0] + 4;
  swift_bridgeObjectRetain();
  v115 = v112 + 5;
  while (1)
  {
    v116 = *v115;
    if (v115[-1].i8[0])
    {
      if (v115[-1].i8[0] != 2)
        break;
    }
    v117 = sub_22655D55C();
    swift_bridgeObjectRelease();
    if ((v117 & 1) != 0)
      goto LABEL_159;
    v115 += 2;
    if (!--v113)
    {
      swift_bridgeObjectRelease();
      goto LABEL_169;
    }
  }
  swift_bridgeObjectRelease();
LABEL_159:
  swift_bridgeObjectRelease();
  v119 = v209;
  for (i = v209[2]; i; --i)
  {
    v121 = (float32x2_t)v119[5];
    v122 = vsub_f32(v121, v116);
    v123 = fabsf(v122.f32[0]);
    v124 = fabsf(v122.f32[1]);
    if (v123 < a5 && v124 < a5)
      break;
    v126 = *((_BYTE *)v119 + 32);
    sub_22650A478(0, 1);
    v119 = v209;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v119 = sub_2264874D4(0, v119[2] + 1, 1, v119);
    v128 = v119[2];
    v127 = v119[3];
    if (v128 >= v127 >> 1)
      v119 = sub_2264874D4((_QWORD *)(v127 > 1), v128 + 1, 1, v119);
    v119[2] = v128 + 1;
    v129 = (float32x2_t *)&v119[2 * v128];
    v129[4].i8[0] = v126;
    v129[5] = v121;
    v209 = v119;
  }
LABEL_169:
  v206 = *(unsigned __int8 *)(v181 + 16);
  if (v206 == 1)
  {
    swift_bridgeObjectRetain();
    v130 = swift_bridgeObjectRetain();
    sub_2264E3B6C(v130, (uint64_t)v112);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v131 = 0;
  v132 = 0;
  v133 = 0;
  if (v193)
    v134 = 0x6564697374756FLL;
  else
    v134 = 0x656469736E69;
  v135 = 0xE700000000000000;
  if (!v193)
    v135 = 0xE600000000000000;
  v187 = v134;
  v189 = v135;
  v136 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v183 = 0;
  v198 = v112;
LABEL_177:
  v185 = v132;
LABEL_178:
  v200 = v131;
  v203 = v136;
  v195 = v131;
  v137 = v132;
  v138 = v136;
LABEL_179:
  v139 = 2 * v137;
  while (1)
  {
    if ((v133 & 1) == 0)
    {
      v157 = v200;
      v158 = v203;
      if (v200 >= *(_QWORD *)&v198[2])
        goto LABEL_266;
      if (v206)
      {
        v207 = 0x2D20776F646E6957;
        v208 = 0xE900000000000020;
        sub_22655D544();
        sub_22655CE24();
        swift_bridgeObjectRelease();
        sub_22655C14C();
        v157 = v200;
        swift_bridgeObjectRelease();
        v158 = v203;
      }
      v114 = a1;
      v140 = v193;
      v132 = v185;
      if (v183 < 0)
      {
        __break(1u);
LABEL_276:
        __break(1u);
LABEL_277:
        __break(1u);
LABEL_278:
        __break(1u);
LABEL_279:
        __break(1u);
LABEL_280:
        __break(1u);
LABEL_281:
        result = sub_22655D5A4();
        __break(1u);
        return result;
      }
      v159 = (unint64_t)v198[2];
      if (v157 >= v159)
        goto LABEL_276;
      v160 = (unsigned __int8 *)&v191[2 * v157];
      v161 = *v160;
      v162 = *(float32x2_t *)(v160 + 8);
      v163 = v158[2];
      if (!v163 || (v164 = vceq_f32(v162, (float32x2_t)v158[v163 + 3]), (v164.i32[0] & v164.i32[1] & 1) == 0))
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v158 = v203;
        else
          v158 = sub_226486C2C(0, v163 + 1, 1, v203);
        v166 = v158[2];
        v165 = v158[3];
        if (v166 >= v165 >> 1)
          v158 = sub_226486C2C((_QWORD *)(v165 > 1), v166 + 1, 1, v158);
        v158[2] = v166 + 1;
        v158[v166 + 4] = v162;
        v159 = (unint64_t)v198[2];
      }
      v167 = v200 + 1;
      if (v200 + 1 >= v159)
      {
        v201 = 3;
        v204 = v158;
        if (!v161)
          goto LABEL_238;
      }
      else
      {
        v201 = LOBYTE(v191[2 * v167]);
        v204 = v158;
        if (!v161)
          goto LABEL_238;
      }
      if (v161 != 2)
      {
        swift_bridgeObjectRelease();
        v136 = v204;
LABEL_244:
        v169 = v209[2];
        if ((uint64_t)v185 >= (uint64_t)v169)
          goto LABEL_251;
        if ((v185 & 0x8000000000000000) != 0)
          goto LABEL_279;
        if (v169 <= v185)
          goto LABEL_280;
        v170 = vsub_f32((float32x2_t)v209[2 * v185 + 5], v162);
        v171 = fabsf(v170.f32[0]);
        v172 = fabsf(v170.f32[1]);
        if (v171 < a5 && v172 < a5)
        {
          v132 = v185 + 1;
        }
        else
        {
LABEL_251:
          if ((a4 & 1) != 0)
            goto LABEL_273;
          if (*(_BYTE *)(v181 + 17) == 1)
          {
            sub_2264E43D4("[CDT] Something is wrong with the intersection");
            v136 = v204;
          }
        }
        v131 = v167;
        if (v201 == 3)
          goto LABEL_242;
        if ((_DWORD)v201)
        {
          if ((_DWORD)v201 == 1)
          {
LABEL_263:
            v114 = v189;
            v176 = sub_22655D55C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v136 = v204;
            v131 = v167;
            if ((v176 & 1) == 0)
              goto LABEL_242;
            goto LABEL_177;
          }
          v174 = 0xE700000000000000;
          v175 = 0x6564697374756FLL;
        }
        else
        {
          v174 = 0xE600000000000000;
          v175 = 0x656469736E69;
        }
        if (v175 == v187 && v174 == v189)
        {
          swift_bridgeObjectRelease_n();
          v136 = v204;
          v131 = v167;
          goto LABEL_177;
        }
        goto LABEL_263;
      }
LABEL_238:
      v168 = sub_22655D55C();
      swift_bridgeObjectRelease();
      v136 = v204;
      v131 = v167;
      if ((v168 & 1) == 0)
        goto LABEL_178;
      goto LABEL_244;
    }
    v140 = v137;
    v141 = v209;
    if ((int64_t)v137 >= v209[2])
    {
      v158 = v138;
LABEL_266:
      v177 = sub_2264E2028(v158, 0.0001);
      swift_bridgeObjectRelease();
      type metadata accessor for CDTPolygon();
      swift_allocObject();
      v118 = sub_2264EA930(v177);
LABEL_267:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_268;
    }
    if (v206)
    {
      v207 = 0x206E6F67796C6F50;
      v208 = 0xEA0000000000202DLL;
      sub_22655D544();
      v114 = v142;
      sub_22655CE24();
      swift_bridgeObjectRelease();
      sub_22655C14C();
      swift_bridgeObjectRelease();
    }
    if ((v137 & 0x8000000000000000) != 0)
      break;
    v143 = v141[2];
    if (v137 >= v143)
      goto LABEL_272;
    v114 = LOBYTE(v141[v139 + 4]);
    v144 = (float32x2_t)v141[v139 + 5];
    v145 = v138[2];
    if (!v145 || (v146 = vceq_f32(v144, (float32x2_t)v138[v145 + 3]), (v146.i32[0] & v146.i32[1] & 1) == 0))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v138 = sub_226486C2C(0, v145 + 1, 1, v138);
      v148 = v138[2];
      v147 = v138[3];
      if (v148 >= v147 >> 1)
        v138 = sub_226486C2C((_QWORD *)(v147 > 1), v148 + 1, 1, v138);
      v138[2] = v148 + 1;
      v138[v148 + 4] = v144;
      v143 = v141[2];
    }
    if (v137 + 1 >= v143)
    {
      v149 = 3;
      if (!(_DWORD)v114)
        goto LABEL_180;
    }
    else
    {
      v149 = LOBYTE(v141[v139 + 6]);
      if (!(_DWORD)v114)
        goto LABEL_180;
    }
    if ((_DWORD)v114 != 2)
    {
      swift_bridgeObjectRelease();
LABEL_200:
      v150 = (unint64_t)v198[2];
      if ((uint64_t)v195 >= (uint64_t)v150)
        goto LABEL_207;
      if ((v195 & 0x8000000000000000) != 0)
        goto LABEL_277;
      if (v150 <= v195)
        goto LABEL_278;
      v151 = vsub_f32((float32x2_t)v191[2 * v195 + 1], v144);
      v152 = fabsf(v151.f32[0]);
      v153 = fabsf(v151.f32[1]);
      if (v152 < a5 && v153 < a5)
      {
        ++v195;
        if (v149 != 3)
          goto LABEL_210;
      }
      else
      {
LABEL_207:
        if (*(_BYTE *)(v181 + 17) == 1)
          sub_2264E43D4("[CDT] Something is wrong with the intersection");
        if (v149 != 3)
        {
LABEL_210:
          v137 = v140 + 1;
          if ((_DWORD)v149)
          {
            if ((_DWORD)v149 == 1)
              goto LABEL_217;
            v155 = 0xE700000000000000;
            v156 = 0x6564697374756FLL;
          }
          else
          {
            v155 = 0xE600000000000000;
            v156 = 0x656469736E69;
          }
          if (v156 == v187 && v155 == v189)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_179;
          }
LABEL_217:
          v114 = sub_22655D55C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v114 & 1) != 0)
            goto LABEL_179;
        }
      }
      v132 = v140 + 1;
      v131 = v195;
      v136 = v138;
LABEL_242:
      v133 ^= 1u;
      v183 = v131;
      goto LABEL_177;
    }
LABEL_180:
    v114 = sub_22655D55C();
    swift_bridgeObjectRelease();
    v139 += 2;
    ++v137;
    if ((v114 & 1) != 0)
      goto LABEL_200;
  }
  __break(1u);
LABEL_272:
  __break(1u);
LABEL_273:
  swift_bridgeObjectRelease();
  v118 = sub_2264DE6A8(v114, a2, v140, 0, a5 * 10.0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_268:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v118;
}

uint64_t sub_2264DFBAC()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CDTTriangulator()
{
  return objc_opt_self();
}

void sub_2264DFBF0(uint64_t *a1, float32x2_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  float32x2_t v16;
  float32x2_t v17;
  float32x2_t v18;
  float v19;
  float32x2_t v20;
  float v21;
  float32x2_t v22;
  float32x2_t v23;
  float v24;
  float32x2_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  float32x2_t *v32;
  float32x2_t v33;
  float32x2_t v34;
  float v35;
  uint64_t v36;
  float32x2_t *v37;
  float32x2_t v38;
  float32x2_t v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  unint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  float32x2_t *__dst;
  uint64_t v104;

  v5 = a1[1];
  v6 = sub_22655D538();
  if (v6 >= v5)
  {
    if (v5 < 0)
      goto LABEL_132;
    if (v5)
      sub_2264E099C(0, v5, 1, a1, a2);
    return;
  }
  if (v5 >= 0)
    v7 = v5;
  else
    v7 = v5 + 1;
  if (v5 < -1)
    goto LABEL_140;
  v101 = v6;
  v98 = a1;
  if (v5 < 2)
  {
    v10 = MEMORY[0x24BEE4AF8];
    __dst = (float32x2_t *)(MEMORY[0x24BEE4AF8] + 32);
    if (v5 != 1)
    {
      v14 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v13 = (char *)MEMORY[0x24BEE4AF8];
LABEL_98:
      v90 = v13;
      v100 = v10;
      if (v14 >= 2)
      {
        v91 = *v98;
        do
        {
          v92 = v14 - 2;
          if (v14 < 2)
            goto LABEL_127;
          if (!v91)
            goto LABEL_139;
          v93 = v90;
          v94 = *(_QWORD *)&v90[16 * v92 + 32];
          v95 = *(_QWORD *)&v90[16 * v14 + 24];
          sub_2264E0AF8((float32x2_t *)(v91 + 8 * v94), (float32x2_t *)(v91 + 8 * *(_QWORD *)&v90[16 * v14 + 16]), v91 + 8 * v95, __dst, a2);
          if (v2)
            break;
          if (v95 < v94)
            goto LABEL_128;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v93 = sub_2264CA374((uint64_t)v93);
          if (v92 >= *((_QWORD *)v93 + 2))
            goto LABEL_129;
          v96 = &v93[16 * v92 + 32];
          *(_QWORD *)v96 = v94;
          *((_QWORD *)v96 + 1) = v95;
          v97 = *((_QWORD *)v93 + 2);
          if (v14 > v97)
            goto LABEL_130;
          memmove(&v93[16 * v14 + 16], &v93[16 * v14 + 32], 16 * (v97 - v14));
          v90 = v93;
          *((_QWORD *)v93 + 2) = v97 - 1;
          v14 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_95:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v100 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
    v100 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v8 = v7 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558443D0);
    v9 = sub_22655CEFC();
    *(_QWORD *)(v9 + 16) = v8;
    v100 = v9;
    __dst = (float32x2_t *)(v9 + 32);
  }
  v11 = 0;
  v12 = *a1;
  v99 = *a1 - 8;
  v13 = (char *)MEMORY[0x24BEE4AF8];
  v102 = v5;
  v104 = v12;
  while (1)
  {
    v15 = v11++;
    if (v11 < v5)
    {
      v16 = *(float32x2_t *)(v12 + 8 * v11);
      v17 = *(float32x2_t *)(v12 + 8 * v15);
      v18 = vsub_f32(v16, a2);
      v19 = atan2f(v18.f32[1], v18.f32[0]);
      v20 = vsub_f32(v17, a2);
      v21 = atan2f(v20.f32[1], v20.f32[0]);
      v11 = v15 + 2;
      if (v15 + 2 < v5)
      {
        while (1)
        {
          v22 = v16;
          v16 = *(float32x2_t *)(v104 + 8 * v11);
          v23 = vsub_f32(v16, a2);
          v24 = atan2f(v23.f32[1], v23.f32[0]);
          v25 = vsub_f32(v22, a2);
          if (v19 < v21 == v24 >= atan2f(v25.f32[1], v25.f32[0]))
            break;
          if (v5 == ++v11)
          {
            v11 = v5;
            break;
          }
        }
        v12 = v104;
      }
      if (v19 < v21)
      {
        if (v11 < v15)
          goto LABEL_133;
        if (v15 < v11)
        {
          v26 = (uint64_t *)(v99 + 8 * v11);
          v27 = v11;
          v28 = v15;
          v29 = (uint64_t *)(v12 + 8 * v15);
          do
          {
            if (v28 != --v27)
            {
              if (!v12)
                goto LABEL_138;
              v30 = *v29;
              *v29 = *v26;
              *v26 = v30;
            }
            ++v28;
            --v26;
            ++v29;
          }
          while (v28 < v27);
        }
      }
    }
    if (v11 >= v5)
      goto LABEL_47;
    if (__OFSUB__(v11, v15))
      goto LABEL_131;
    if (v11 - v15 >= v101)
      goto LABEL_47;
    if (__OFADD__(v15, v101))
      goto LABEL_134;
    v31 = v15 + v101 >= v5 ? v5 : v15 + v101;
    if (v31 < v15)
      break;
    if (v11 != v31)
    {
      v32 = (float32x2_t *)(v99 + 8 * v11);
      do
      {
        v33 = *(float32x2_t *)(v12 + 8 * v11);
        v34 = vsub_f32(v33, a2);
        v35 = atan2f(v34.f32[1], v34.f32[0]);
        v36 = v15;
        v37 = v32;
        do
        {
          v38 = *v37;
          v39 = vsub_f32(*v37, a2);
          if (v35 >= atan2f(v39.f32[1], v39.f32[0]))
            break;
          if (!v12)
            goto LABEL_136;
          *v37 = v33;
          v37[1] = v38;
          --v37;
          ++v36;
        }
        while (v11 != v36);
        ++v11;
        ++v32;
      }
      while (v11 != v31);
      v11 = v31;
    }
LABEL_47:
    if (v11 < v15)
      goto LABEL_126;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_2264C9F78(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
    v41 = *((_QWORD *)v13 + 2);
    v40 = *((_QWORD *)v13 + 3);
    v14 = v41 + 1;
    if (v41 >= v40 >> 1)
      v13 = sub_2264C9F78((char *)(v40 > 1), v41 + 1, 1, v13);
    *((_QWORD *)v13 + 2) = v14;
    v42 = v13 + 32;
    v43 = &v13[16 * v41 + 32];
    *(_QWORD *)v43 = v15;
    *((_QWORD *)v43 + 1) = v11;
    if (v41)
    {
      v12 = v104;
      while (1)
      {
        v44 = v14 - 1;
        if (v14 >= 4)
        {
          v49 = &v42[16 * v14];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_115;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_116;
          v56 = v14 - 2;
          v57 = &v42[16 * v14 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_118;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_121;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_125;
            v72 = v47 < v82;
            goto LABEL_85;
          }
        }
        else
        {
          if (v14 != 3)
          {
            v73 = *((_QWORD *)v13 + 4);
            v74 = *((_QWORD *)v13 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_79;
          }
          v46 = *((_QWORD *)v13 + 4);
          v45 = *((_QWORD *)v13 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_117;
        v56 = v14 - 2;
        v62 = &v42[16 * v14 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_120;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_123;
        if (__OFADD__(v66, v71))
          goto LABEL_124;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_85:
          if (v72)
            v44 = v56;
          goto LABEL_87;
        }
LABEL_79:
        if ((v67 & 1) != 0)
          goto LABEL_119;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_122;
        if (v78 < v66)
          goto LABEL_15;
LABEL_87:
        v83 = v44 - 1;
        if (v44 - 1 >= v14)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
          goto LABEL_135;
        }
        if (!v12)
          goto LABEL_137;
        v84 = v12;
        v85 = &v42[16 * v83];
        v86 = *(_QWORD *)v85;
        v87 = &v42[16 * v44];
        v88 = *((_QWORD *)v87 + 1);
        sub_2264E0AF8((float32x2_t *)(v84 + 8 * *(_QWORD *)v85), (float32x2_t *)(v84 + 8 * *(_QWORD *)v87), v84 + 8 * v88, __dst, a2);
        if (v2)
          goto LABEL_95;
        if (v88 < v86)
          goto LABEL_112;
        if (v44 > *((_QWORD *)v13 + 2))
          goto LABEL_113;
        *(_QWORD *)v85 = v86;
        *(_QWORD *)&v42[16 * v83 + 8] = v88;
        v89 = *((_QWORD *)v13 + 2);
        if (v44 >= v89)
          goto LABEL_114;
        v14 = v89 - 1;
        memmove(&v42[16 * v44], v87 + 16, 16 * (v89 - 1 - v44));
        *((_QWORD *)v13 + 2) = v89 - 1;
        v72 = v89 > 2;
        v12 = v104;
        if (!v72)
          goto LABEL_15;
      }
    }
    v14 = 1;
    v12 = v104;
LABEL_15:
    v5 = v102;
    if (v11 >= v102)
    {
      v10 = v100;
      goto LABEL_98;
    }
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  sub_22655D3DC();
  __break(1u);
}

uint64_t sub_2264E02C8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  __n128 v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  float32x2_t v17;
  float32x2_t v18;
  int v19;
  float32x2_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  float32x2_t **v27;
  float32x2_t *v28;
  uint64_t v29;
  float32x2_t **v30;
  float32x2_t *v31;
  float32x2_t v32;
  float32x2_t v33;
  float v34;
  int32x2_t v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  char *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  char v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  unint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *__dst;
  int32x2_t v101;
  int32x2_t v102;
  uint64_t v103;

  v2 = v1;
  v4 = a1[1];
  result = sub_22655D538();
  if (result >= v4)
  {
    if (v4 < 0)
      goto LABEL_131;
    if (v4)
      return sub_2264E0A6C(0, v4, 1, a1);
    return result;
  }
  if (v4 >= 0)
    v8 = v4;
  else
    v8 = v4 + 1;
  if (v4 < -1)
    goto LABEL_139;
  v9 = result;
  v95 = a1;
  if (v4 < 2)
  {
    v12 = (char *)MEMORY[0x24BEE4AF8];
    v103 = MEMORY[0x24BEE4AF8];
    __dst = (char *)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v15 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_97:
      v87 = v12;
      if (v15 >= 2)
      {
        v88 = *v95;
        do
        {
          v89 = v15 - 2;
          if (v15 < 2)
            goto LABEL_126;
          if (!v88)
            goto LABEL_138;
          v90 = v87;
          v91 = *(_QWORD *)&v87[16 * v89 + 32];
          v92 = *(_QWORD *)&v87[16 * v15 + 24];
          sub_2264E0DB0((char *)(v88 + 8 * v91), (char *)(v88 + 8 * *(_QWORD *)&v87[16 * v15 + 16]), (char *)(v88 + 8 * v92), __dst, v6, v7);
          if (v2)
            break;
          if (v92 < v91)
            goto LABEL_127;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v90 = sub_2264CA374((uint64_t)v90);
          if (v89 >= *((_QWORD *)v90 + 2))
            goto LABEL_128;
          v93 = &v90[16 * v89 + 32];
          *(_QWORD *)v93 = v91;
          *((_QWORD *)v93 + 1) = v92;
          v94 = *((_QWORD *)v90 + 2);
          if (v15 > v94)
            goto LABEL_129;
          memmove(&v90[16 * v15 + 16], &v90[16 * v15 + 32], 16 * (v94 - v15));
          v87 = v90;
          *((_QWORD *)v90 + 2) = v94 - 1;
          v15 = v94 - 1;
        }
        while (v94 > 2);
      }
LABEL_94:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v103 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_22655CEE4();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v10 = v8 >> 1;
    type metadata accessor for CDTTriangle();
    v11 = sub_22655CEFC();
    *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) = v10;
    __dst = (char *)((v11 & 0xFFFFFFFFFFFFFF8) + 32);
    v103 = v11;
  }
  v13 = 0;
  v14 = *a1;
  v96 = *a1 - 8;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v97 = v9;
  v98 = v4;
  v99 = *a1;
  while (1)
  {
    v16 = v13++;
    if (v13 < v4)
    {
      v17 = *(float32x2_t *)(*(_QWORD *)(v14 + 8 * v13) + 24);
      v18 = *(float32x2_t *)(*(_QWORD *)(v14 + 8 * v16) + 24);
      v102 = vcgt_f32(v18, v17);
      v19 = *(_DWORD *)((unint64_t)&v102 | (4 * (fabsf(vsub_f32(v17, v18).f32[0]) < 0.00000011921)));
      v13 = v16 + 2;
      if (v16 + 2 < v4)
      {
        while (1)
        {
          v20 = v17;
          v17 = *(float32x2_t *)(*(_QWORD *)(v14 + 8 * v13) + 24);
          v101 = vcgt_f32(v20, v17);
          if ((v19 & 1) != (*(_DWORD *)((unint64_t)&v101 | (4
                                                                  * (fabsf(vsub_f32(v17, v20).f32[0]) < 0.00000011921))) & 1))
            break;
          if (v4 == ++v13)
          {
            v13 = v4;
            break;
          }
        }
      }
      if ((v19 & 1) != 0)
      {
        if (v13 < v16)
          goto LABEL_132;
        if (v16 < v13)
        {
          v21 = (uint64_t *)(v96 + 8 * v13);
          v22 = v13;
          v23 = v16;
          v24 = (uint64_t *)(v14 + 8 * v16);
          do
          {
            if (v23 != --v22)
            {
              if (!v14)
                goto LABEL_137;
              v25 = *v24;
              *v24 = *v21;
              *v21 = v25;
            }
            ++v23;
            --v21;
            ++v24;
          }
          while (v23 < v22);
        }
      }
    }
    if (v13 >= v4)
      goto LABEL_47;
    if (__OFSUB__(v13, v16))
      goto LABEL_130;
    if (v13 - v16 >= v9)
      goto LABEL_47;
    v26 = v16 + v9;
    if (__OFADD__(v16, v9))
      goto LABEL_133;
    if (v26 >= v4)
      v26 = v4;
    if (v26 < v16)
      break;
    if (v13 != v26)
    {
      v27 = (float32x2_t **)(v96 + 8 * v13);
      do
      {
        v28 = *(float32x2_t **)(v14 + 8 * v13);
        v29 = v16;
        v30 = v27;
        do
        {
          v31 = *v30;
          v32 = v28[3];
          v33 = (*v30)[3];
          v34 = fabsf(vsub_f32(v32, v33).f32[0]);
          v35 = vcgt_f32(v33, v32);
          if (v34 >= 0.00000011921)
          {
            if ((v35.i8[0] & 1) == 0)
              break;
          }
          else if ((v35.i8[4] & 1) == 0)
          {
            break;
          }
          if (!v14)
            goto LABEL_135;
          *v30 = v28;
          v30[1] = v31;
          --v30;
          ++v29;
        }
        while (v13 != v29);
        ++v13;
        ++v27;
      }
      while (v13 != v26);
      v13 = v26;
    }
LABEL_47:
    if (v13 < v16)
      goto LABEL_125;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_2264C9F78(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v37 = *((_QWORD *)v12 + 2);
    v36 = *((_QWORD *)v12 + 3);
    v15 = v37 + 1;
    v14 = v99;
    if (v37 >= v36 >> 1)
    {
      v86 = sub_2264C9F78((char *)(v36 > 1), v37 + 1, 1, v12);
      v14 = v99;
      v12 = v86;
    }
    *((_QWORD *)v12 + 2) = v15;
    v38 = v12 + 32;
    v39 = &v12[16 * v37 + 32];
    *(_QWORD *)v39 = v16;
    *((_QWORD *)v39 + 1) = v13;
    if (v37)
    {
      while (1)
      {
        v40 = v15 - 1;
        if (v15 >= 4)
        {
          v45 = &v38[16 * v15];
          v46 = *((_QWORD *)v45 - 8);
          v47 = *((_QWORD *)v45 - 7);
          v51 = __OFSUB__(v47, v46);
          v48 = v47 - v46;
          if (v51)
            goto LABEL_114;
          v50 = *((_QWORD *)v45 - 6);
          v49 = *((_QWORD *)v45 - 5);
          v51 = __OFSUB__(v49, v50);
          v43 = v49 - v50;
          v44 = v51;
          if (v51)
            goto LABEL_115;
          v52 = v15 - 2;
          v53 = &v38[16 * v15 - 32];
          v55 = *(_QWORD *)v53;
          v54 = *((_QWORD *)v53 + 1);
          v51 = __OFSUB__(v54, v55);
          v56 = v54 - v55;
          if (v51)
            goto LABEL_117;
          v51 = __OFADD__(v43, v56);
          v57 = v43 + v56;
          if (v51)
            goto LABEL_120;
          if (v57 >= v48)
          {
            v75 = &v38[16 * v40];
            v77 = *(_QWORD *)v75;
            v76 = *((_QWORD *)v75 + 1);
            v51 = __OFSUB__(v76, v77);
            v78 = v76 - v77;
            if (v51)
              goto LABEL_124;
            v68 = v43 < v78;
            goto LABEL_84;
          }
        }
        else
        {
          if (v15 != 3)
          {
            v69 = *((_QWORD *)v12 + 4);
            v70 = *((_QWORD *)v12 + 5);
            v51 = __OFSUB__(v70, v69);
            v62 = v70 - v69;
            v63 = v51;
            goto LABEL_78;
          }
          v42 = *((_QWORD *)v12 + 4);
          v41 = *((_QWORD *)v12 + 5);
          v51 = __OFSUB__(v41, v42);
          v43 = v41 - v42;
          v44 = v51;
        }
        if ((v44 & 1) != 0)
          goto LABEL_116;
        v52 = v15 - 2;
        v58 = &v38[16 * v15 - 32];
        v60 = *(_QWORD *)v58;
        v59 = *((_QWORD *)v58 + 1);
        v61 = __OFSUB__(v59, v60);
        v62 = v59 - v60;
        v63 = v61;
        if (v61)
          goto LABEL_119;
        v64 = &v38[16 * v40];
        v66 = *(_QWORD *)v64;
        v65 = *((_QWORD *)v64 + 1);
        v51 = __OFSUB__(v65, v66);
        v67 = v65 - v66;
        if (v51)
          goto LABEL_122;
        if (__OFADD__(v62, v67))
          goto LABEL_123;
        if (v62 + v67 >= v43)
        {
          v68 = v43 < v67;
LABEL_84:
          if (v68)
            v40 = v52;
          goto LABEL_86;
        }
LABEL_78:
        if ((v63 & 1) != 0)
          goto LABEL_118;
        v71 = &v38[16 * v40];
        v73 = *(_QWORD *)v71;
        v72 = *((_QWORD *)v71 + 1);
        v51 = __OFSUB__(v72, v73);
        v74 = v72 - v73;
        if (v51)
          goto LABEL_121;
        if (v74 < v62)
          goto LABEL_14;
LABEL_86:
        v79 = v40 - 1;
        if (v40 - 1 >= v15)
        {
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
          goto LABEL_134;
        }
        if (!v14)
          goto LABEL_136;
        v80 = v12;
        v81 = &v38[16 * v79];
        v82 = *(_QWORD *)v81;
        v83 = &v38[16 * v40];
        v84 = *((_QWORD *)v83 + 1);
        sub_2264E0DB0((char *)(v14 + 8 * *(_QWORD *)v81), (char *)(v14 + 8 * *(_QWORD *)v83), (char *)(v14 + 8 * v84), __dst, v6, v7);
        if (v1)
          goto LABEL_94;
        if (v84 < v82)
          goto LABEL_111;
        if (v40 > *((_QWORD *)v80 + 2))
          goto LABEL_112;
        *(_QWORD *)v81 = v82;
        *(_QWORD *)&v38[16 * v79 + 8] = v84;
        v85 = *((_QWORD *)v80 + 2);
        if (v40 >= v85)
          goto LABEL_113;
        v12 = v80;
        v15 = v85 - 1;
        memmove(&v38[16 * v40], v83 + 16, 16 * (v85 - 1 - v40));
        *((_QWORD *)v80 + 2) = v85 - 1;
        v14 = v99;
        if (v85 <= 2)
          goto LABEL_14;
      }
    }
    v15 = 1;
LABEL_14:
    v9 = v97;
    v4 = v98;
    if (v13 >= v98)
    {
      v2 = v1;
      goto LABEL_97;
    }
  }
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  result = sub_22655D3DC();
  __break(1u);
  return result;
}

void sub_2264E099C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, float32x2_t a5)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  float32x2_t v11;
  float32x2_t v12;
  float v13;
  uint64_t v14;
  float32x2_t *v15;
  float32x2_t v16;
  float32x2_t v17;

  if (a3 != a2)
  {
    v6 = a3;
    v9 = *a4;
    v10 = *a4 + 8 * a3 - 8;
LABEL_5:
    v11 = *(float32x2_t *)(v9 + 8 * v6);
    v12 = vsub_f32(v11, a5);
    v13 = atan2f(v12.f32[1], v12.f32[0]);
    v14 = a1;
    v15 = (float32x2_t *)v10;
    while (1)
    {
      v16 = *v15;
      v17 = vsub_f32(*v15, a5);
      if (v13 >= atan2f(v17.f32[1], v17.f32[0]))
      {
LABEL_4:
        ++v6;
        v10 += 8;
        if (v6 == a2)
          return;
        goto LABEL_5;
      }
      if (!v9)
        break;
      *v15 = v11;
      v15[1] = v16;
      --v15;
      if (v6 == ++v14)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_2264E0A6C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  float32x2_t *v6;
  uint64_t v7;
  float32x2_t **v8;
  float32x2_t *v9;
  float32x2_t v10;
  float32x2_t v11;
  float v12;
  int32x2_t v13;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 8 * a3 - 8;
LABEL_5:
    v6 = *(float32x2_t **)(v4 + 8 * a3);
    v7 = result;
    v8 = (float32x2_t **)v5;
    while (1)
    {
      v9 = *v8;
      v10 = v6[3];
      v11 = (*v8)[3];
      v12 = fabsf(vsub_f32(v10, v11).f32[0]);
      v13 = vcgt_f32(v11, v10);
      if (v12 >= 0.00000011921)
      {
        if ((v13.i8[0] & 1) == 0)
          goto LABEL_4;
      }
      else if ((v13.i8[4] & 1) == 0)
      {
        goto LABEL_4;
      }
      if (!v4)
        break;
      *v8 = v6;
      v8[1] = v9;
      --v8;
      if (a3 == ++v7)
      {
LABEL_4:
        ++a3;
        v5 += 8;
        if (a3 == a2)
          return result;
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2264E0AF8(float32x2_t *__src, float32x2_t *a2, unint64_t a3, float32x2_t *__dst, float32x2_t a5)
{
  float32x2_t *v5;
  float32x2_t *v8;
  float32x2_t *v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  float32x2_t *v16;
  float32x2_t v17;
  float32x2_t v18;
  float32x2_t v19;
  float v20;
  float32x2_t v21;
  float32x2_t *v22;
  float32x2_t *v23;
  float32x2_t *v24;
  float32x2_t *v25;
  float32x2_t *v26;
  float32x2_t v27;
  float32x2_t v28;
  float v29;
  float32x2_t v30;
  uint64_t result;
  float32x2_t *v32;
  float32x2_t *v33;
  float32x2_t *v34;

  v5 = __dst;
  v8 = a2;
  v9 = __src;
  v10 = (char *)a2 - (char *)__src;
  v11 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v11 = (char *)a2 - (char *)__src;
  v12 = v11 >> 3;
  v13 = a3 - (_QWORD)a2;
  v14 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v14 = a3 - (_QWORD)a2;
  v15 = v14 >> 3;
  v34 = __src;
  v33 = __dst;
  if (v12 >= v14 >> 3)
  {
    if (v13 >= -7)
    {
      if (__dst != a2 || &a2[v15] <= __dst)
        memmove(__dst, a2, 8 * v15);
      v23 = &v5[v15];
      v32 = v23;
      v34 = v8;
      if (v9 < v8 && v13 >= 8)
      {
        v24 = (float32x2_t *)(a3 - 8);
        while (1)
        {
          v25 = v24 + 1;
          v26 = v8 - 1;
          v27 = v8[-1];
          v28 = vsub_f32(v23[-1], a5);
          v29 = atan2f(v28.f32[1], v28.f32[0]);
          v30 = vsub_f32(v27, a5);
          if (v29 >= atan2f(v30.f32[1], v30.f32[0]))
          {
            v32 = v23 - 1;
            if (v25 < v23 || v24 >= v23 || v25 != v23)
              *v24 = v23[-1];
            --v23;
            if (v8 <= v9)
              goto LABEL_42;
          }
          else
          {
            if (v25 != v8 || v24 >= v8)
              *v24 = v27;
            v34 = --v8;
            if (v26 <= v9)
              goto LABEL_42;
          }
          --v24;
          if (v23 <= v5)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v10 >= -7)
  {
    if (__dst != __src || &__src[v12] <= __dst)
      memmove(__dst, __src, 8 * v12);
    v16 = &v5[v12];
    v32 = v16;
    if ((unint64_t)v8 < a3 && v10 >= 8)
    {
      do
      {
        v17 = *v8;
        v18 = *v5;
        v19 = vsub_f32(*v8, a5);
        v20 = atan2f(v19.f32[1], v19.f32[0]);
        v21 = vsub_f32(v18, a5);
        if (v20 >= atan2f(v21.f32[1], v21.f32[0]))
        {
          if (v9 != v5)
            *v9 = v18;
          v33 = ++v5;
          v22 = v8;
        }
        else
        {
          v22 = v8 + 1;
          if (v9 < v8 || v9 >= v22 || v9 != v8)
            *v9 = v17;
        }
        ++v9;
        if (v5 >= v16)
          break;
        v8 = v22;
      }
      while ((unint64_t)v22 < a3);
      v34 = v9;
    }
LABEL_42:
    sub_2264CA074((void **)&v34, (const void **)&v33, &v32);
    return 1;
  }
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_2264E0DB0(char *__src, char *a2, char *a3, char *__dst, __n128 a5, __n128 a6)
{
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  float32x2_t v17;
  float32x2_t v18;
  float v19;
  char *v20;
  char *v21;
  char *v22;
  float32x2_t *v23;
  float32x2_t v24;
  float32x2_t v25;
  float v26;
  char *v27;
  uint64_t result;
  char *v29;
  char *v30;
  char *v31;

  v6 = __dst;
  v7 = a3;
  v8 = a2;
  v9 = __src;
  v10 = a2 - __src;
  v11 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v11 = a2 - __src;
  v12 = v11 >> 3;
  v13 = a3 - a2;
  v14 = a3 - a2 + 7;
  if (a3 - a2 >= 0)
    v14 = a3 - a2;
  v15 = v14 >> 3;
  v31 = __src;
  v30 = __dst;
  if (v12 >= v14 >> 3)
  {
    if (v13 < -7)
      goto LABEL_49;
    if (__dst != a2 || &a2[8 * v15] <= __dst)
      memmove(__dst, a2, 8 * v15);
    v21 = &v6[8 * v15];
    v29 = v21;
    v31 = v8;
    if (v9 >= v8 || v13 < 8)
    {
LABEL_48:
      sub_2264CA070(&v31, &v30, &v29, a5, a6);
      return 1;
    }
    a5.n128_u64[0] = 0x3400000034000000;
    while (1)
    {
      v22 = v8 - 8;
      v23 = (float32x2_t *)*((_QWORD *)v8 - 1);
      v24 = *(float32x2_t *)(*((_QWORD *)v21 - 1) + 24);
      v25 = v23[3];
      v26 = fabsf(vsub_f32(v24, v25).f32[0]);
      v27 = v7 - 8;
      a6.n128_u64[0] = (unint64_t)vcgt_f32(v25, v24);
      if (v26 >= 0.00000011921)
      {
        if ((a6.n128_u8[0] & 1) == 0)
        {
LABEL_38:
          v29 = v21 - 8;
          if (v7 < v21 || v27 >= v21 || v7 != v21)
            *(_QWORD *)v27 = *((_QWORD *)v21 - 1);
          v21 -= 8;
          if (v8 <= v9)
            goto LABEL_48;
          goto LABEL_35;
        }
      }
      else if ((a6.n128_u8[4] & 1) == 0)
      {
        goto LABEL_38;
      }
      if (v7 != v8 || v27 >= v8)
        *(_QWORD *)v27 = v23;
      v31 = v8 - 8;
      v8 -= 8;
      if (v22 <= v9)
        goto LABEL_48;
LABEL_35:
      v7 -= 8;
      if (v21 <= v6)
        goto LABEL_48;
    }
  }
  if (v10 >= -7)
  {
    if (__dst != __src || &__src[8 * v12] <= __dst)
      memmove(__dst, __src, 8 * v12);
    v16 = &v6[8 * v12];
    v29 = v16;
    if (v8 < v7 && v10 >= 8)
    {
      a5.n128_u64[0] = 0x3400000034000000;
      while (1)
      {
        v17 = *(float32x2_t *)(*(_QWORD *)v8 + 24);
        v18 = *(float32x2_t *)(*(_QWORD *)v6 + 24);
        v19 = fabsf(vsub_f32(v17, v18).f32[0]);
        a6.n128_u64[0] = (unint64_t)vcgt_f32(v18, v17);
        if (v19 >= 0.00000011921)
        {
          if ((a6.n128_u8[0] & 1) != 0)
          {
LABEL_19:
            v20 = v8 + 8;
            if (v9 < v8 || v9 >= v20 || v9 != v8)
              *(_QWORD *)v9 = *(_QWORD *)v8;
            goto LABEL_23;
          }
        }
        else if ((a6.n128_u8[4] & 1) != 0)
        {
          goto LABEL_19;
        }
        if (v9 != v6)
          *(_QWORD *)v9 = *(_QWORD *)v6;
        v6 += 8;
        v30 = v6;
        v20 = v8;
LABEL_23:
        v9 += 8;
        if (v6 < v16)
        {
          v8 = v20;
          if (v20 < v7)
            continue;
        }
        v31 = v9;
        goto LABEL_48;
      }
    }
    goto LABEL_48;
  }
LABEL_49:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

void sub_2264E106C(uint64_t a1, float32x2_t *a2, double a3, double a4, double a5, __n128 a6)
{
  __int128 v6;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  float32x2_t *v20;
  float32x2_t v21;
  float v22;
  float v23;
  float32x2_t v24;
  float32x2_t v25;
  float v26;
  float v27;
  float v28;
  float v29;
  float v30;
  float v31;
  float v32;
  float v33;
  simd_float2 v34;
  float v35;
  float32x2_t v37;
  float32x2_t v38;
  float v39;
  float v41;
  float32x2_t v42;
  float v43;
  float32x2_t v44;
  float32x2_t v45;
  float32x2_t v46;
  float32x2_t v47;
  simd_float2 v48;
  float v49;
  float32x2_t v51;
  float v52;
  float32x2_t v54;
  float32x2_t v55;
  float32x2_t v56;
  float v57;
  float v58;
  float v59;
  float v60;
  float v61;
  float v62;
  float32x2_t v63;
  __int128 v64;
  float32x2_t v65;
  __int32 v66;
  __n128 v67;

  v9 = 0;
  v10 = a1 + 64;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(a1 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (v13)
  {
    v15 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    v16 = v15 | (v9 << 6);
LABEL_23:
    v20 = *(float32x2_t **)(*(_QWORD *)(a1 + 56) + 8 * v16);
    *(float32x2_t *)&v6 = v20[2];
    if ((a2[4].i8[0] & 1) != 0)
    {
      v21 = v20[3];
      v22 = v21.f32[1];
      LODWORD(v23) = HIDWORD(*(_QWORD *)&v20[2]);
LABEL_25:
      v24 = a2[2];
      v25 = a2[3];
      v26 = v22 - v24.f32[1];
      v27 = *(float *)&v6 - v24.f32[0];
      v28 = (float)(v22 - v24.f32[1]) * (float)(*(float *)&v6 - v24.f32[0]);
      v29 = v21.f32[0] - v24.f32[0];
      v30 = (float)(v23 - v24.f32[1]) * (float)(v21.f32[0] - v24.f32[0]);
      v31 = vabds_f32(v28, v30);
      v32 = (float)(v22 - v25.f32[1]) * (float)(*(float *)&v6 - v25.f32[0]);
      v33 = (float)(v23 - v25.f32[1]) * (float)(v21.f32[0] - v25.f32[0]);
      if (vabds_f32(v32, v33) >= 1.4211e-14)
      {
        v57 = v28 - v30;
        if ((float)(v32 - v33) <= 0.0)
        {
          if (v31 < 1.4211e-14 || v57 > 0.0)
            goto LABEL_57;
        }
        else if (v31 < 1.4211e-14 || v57 <= 0.0)
        {
          goto LABEL_57;
        }
      }
      else if (v31 >= 1.4211e-14)
      {
LABEL_57:
        v25.f32[0] = vsub_f32(v25, v24).f32[0];
        v58 = (float)(v23 - v24.f32[1]) * v25.f32[0];
        v59 = v27 * (float)(v25.f32[1] - v24.f32[1]);
        v24.f32[0] = vabds_f32(v58, v59);
        v60 = v26 * v25.f32[0];
        v61 = v29 * (float)(v25.f32[1] - v24.f32[1]);
        if (vabds_f32(v26 * v25.f32[0], v61) >= 1.4211e-14)
        {
          v62 = v58 - v59;
          if ((float)(v60 - v61) <= 0.0)
          {
            if (v24.f32[0] < 1.4211e-14 || v62 > 0.0)
            {
LABEL_4:
              swift_retain();
              sub_22655D364();
              sub_22655D388();
              sub_22655D394();
              sub_22655D370();
            }
          }
          else if (v24.f32[0] < 1.4211e-14 || v62 <= 0.0)
          {
            goto LABEL_4;
          }
        }
        else if (v24.f32[0] >= 1.4211e-14)
        {
          goto LABEL_4;
        }
      }
    }
    else
    {
      a6.n128_u64[0] = (unint64_t)a2[2];
      v34 = (simd_float2)vsub_f32(*(float32x2_t *)&v6, (float32x2_t)a6.n128_u64[0]);
      v35 = fabsf(v34.f32[1]);
      if (fabsf(v34.f32[0]) >= 0.0001 || v35 >= 0.0001)
      {
        v37 = a2[3];
        v38 = vsub_f32(*(float32x2_t *)&v6, v37);
        v39 = fabsf(v38.f32[1]);
        if (fabsf(v38.f32[0]) >= 0.0001 || v39 >= 0.0001)
        {
          v23 = *((float *)&v6 + 1);
          v41 = a6.n128_f32[1];
          v34.f32[1] = *((float *)&v6 + 1) - a6.n128_f32[1];
          v64 = v6;
          v65 = (float32x2_t)v34;
          v42 = vsub_f32(v37, (float32x2_t)a6.n128_u64[0]);
          v67 = a6;
          v43 = _simd_orient_vf2(v34, (simd_float2)v42);
          a6.n128_u64[1] = v67.n128_u64[1];
          if (fabsf(v43) > 0.0001
            || (v44 = vmul_f32(v65, v42), vaddv_f32(v44) <= 0.0)
            || (v45 = vsub_f32((float32x2_t)v67.n128_u64[0], v37),
                v46 = vmul_f32(v45, v45),
                (vcgt_f32(vadd_f32(v46, (float32x2_t)vdup_lane_s32((int32x2_t)v46, 1)), vadd_f32(v44, (float32x2_t)vdup_lane_s32((int32x2_t)v44, 1))).u32[0] & 1) == 0))
          {
            v47 = v20[3];
            v48 = (simd_float2)vsub_f32(v47, (float32x2_t)v67.n128_u64[0]);
            v49 = fabsf(v48.f32[1]);
            if (fabsf(v48.f32[0]) >= 0.0001 || v49 >= 0.0001)
            {
              v51 = vsub_f32(v47, v37);
              v52 = fabsf(v51.f32[1]);
              if (fabsf(v51.f32[0]) >= 0.0001 || v52 >= 0.0001)
              {
                v66 = (__int32)v20[3];
                LODWORD(v22) = HIDWORD(*(_QWORD *)&v20[3]);
                v48.f32[1] = v47.f32[1] - v41;
                v63 = (float32x2_t)v48;
                if (fabsf(_simd_orient_vf2(v48, (simd_float2)v42)) > 0.0001
                  || (v54 = vmul_f32(v42, v63), vaddv_f32(v54) <= 0.0))
                {
                  v6 = v64;
                  v21.i32[0] = v66;
                  goto LABEL_25;
                }
                v21.i32[0] = v66;
                v55 = vsub_f32((float32x2_t)v67.n128_u64[0], v37);
                v56 = vmul_f32(v55, v55);
                v6 = v64;
                if ((vcgt_f32(vadd_f32(v56, (float32x2_t)vdup_lane_s32((int32x2_t)v56, 1)), vadd_f32(v54, (float32x2_t)vdup_lane_s32((int32x2_t)v54, 1))).u32[0] & 1) == 0)goto LABEL_25;
              }
            }
          }
        }
      }
    }
  }
  v17 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_70;
  }
  if (v17 >= v14)
    goto LABEL_68;
  v18 = *(_QWORD *)(v10 + 8 * v17);
  ++v9;
  if (v18)
    goto LABEL_22;
  v9 = v17 + 1;
  if (v17 + 1 >= v14)
    goto LABEL_68;
  v18 = *(_QWORD *)(v10 + 8 * v9);
  if (v18)
    goto LABEL_22;
  v9 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_68;
  v18 = *(_QWORD *)(v10 + 8 * v9);
  if (v18)
    goto LABEL_22;
  v9 = v17 + 3;
  if (v17 + 3 >= v14)
    goto LABEL_68;
  v18 = *(_QWORD *)(v10 + 8 * v9);
  if (v18)
  {
LABEL_22:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v9 << 6);
    goto LABEL_23;
  }
  v19 = v17 + 4;
  if (v19 >= v14)
  {
LABEL_68:
    swift_release();
    return;
  }
  v18 = *(_QWORD *)(v10 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_68;
    v18 = *(_QWORD *)(v10 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_22;
  }
LABEL_70:
  __break(1u);
}

uint64_t sub_2264E14F0(uint64_t result)
{
  uint64_t v1;
  uint64_t i;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(result + 16) + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v1; ++i)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255843A38);
      v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_22655F8F0;
      sub_22655CE24();
      sub_22655CF8C();
      sub_22655CE24();
      sub_22655CF8C();
      sub_22655CE24();
      sub_22655CE24();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v3 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v3 + 32) = 0;
      *(_QWORD *)(v3 + 40) = 0xE000000000000000;
      sub_22655D61C();
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2264E1678(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t i;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255843A38);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_22655F8F0;
  v7 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v6 + 32) = 0xD000000000000027;
  *(_QWORD *)(v6 + 40) = 0x800000022656E630;
  sub_22655D61C();
  swift_bridgeObjectRelease();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_22655F8F0;
  *(_QWORD *)(v8 + 56) = v7;
  *(_QWORD *)(v8 + 32) = 123;
  *(_QWORD *)(v8 + 40) = 0xE100000000000000;
  sub_22655D61C();
  swift_bridgeObjectRelease();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_22655F8F0;
  *(_QWORD *)(v9 + 56) = v7;
  *(_QWORD *)(v9 + 32) = 0x5B206E7275746572;
  *(_QWORD *)(v9 + 40) = 0xE800000000000000;
  sub_22655D61C();
  swift_bridgeObjectRelease();
  sub_2264E14F0(a1);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_22655F8F0;
  *(_QWORD *)(v10 + 56) = v7;
  *(_QWORD *)(v10 + 32) = 93;
  *(_QWORD *)(v10 + 40) = 0xE100000000000000;
  sub_22655D61C();
  swift_bridgeObjectRelease();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_22655F8F0;
  *(_QWORD *)(v11 + 56) = v7;
  *(_QWORD *)(v11 + 32) = 125;
  *(_QWORD *)(v11 + 40) = 0xE100000000000000;
  sub_22655D61C();
  swift_bridgeObjectRelease();
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_22655F8F0;
  *(_QWORD *)(v12 + 56) = v7;
  *(_QWORD *)(v12 + 32) = 0xD000000000000025;
  *(_QWORD *)(v12 + 40) = 0x800000022656E660;
  sub_22655D61C();
  swift_bridgeObjectRelease();
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_22655F8F0;
  *(_QWORD *)(v13 + 56) = v7;
  *(_QWORD *)(v13 + 32) = 123;
  *(_QWORD *)(v13 + 40) = 0xE100000000000000;
  v14 = v7;
  sub_22655D61C();
  swift_bridgeObjectRelease();
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_22655F8F0;
  *(_QWORD *)(v15 + 56) = v7;
  *(_QWORD *)(v15 + 32) = 0x5B206E7275746572;
  *(_QWORD *)(v15 + 40) = 0xE800000000000000;
  sub_22655D61C();
  swift_bridgeObjectRelease();
  if (a2)
  {
    v16 = a2;
  }
  else
  {
    type metadata accessor for CDTPolygon();
    swift_allocObject();
    v16 = sub_2264EA930(MEMORY[0x24BEE4AF8]);
  }
  swift_retain();
  sub_2264E14F0(v16);
  swift_release();
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_22655F8F0;
  *(_QWORD *)(v17 + 56) = v7;
  *(_QWORD *)(v17 + 32) = 93;
  *(_QWORD *)(v17 + 40) = 0xE100000000000000;
  sub_22655D61C();
  swift_bridgeObjectRelease();
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_22655F8F0;
  *(_QWORD *)(v18 + 56) = v7;
  *(_QWORD *)(v18 + 32) = 125;
  *(_QWORD *)(v18 + 40) = 0xE100000000000000;
  sub_22655D61C();
  swift_bridgeObjectRelease();
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_22655F8F0;
  *(_QWORD *)(v19 + 56) = v7;
  *(_QWORD *)(v19 + 32) = 0xD000000000000025;
  *(_QWORD *)(v19 + 40) = 0x800000022656E690;
  sub_22655D61C();
  swift_bridgeObjectRelease();
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_22655F8F0;
  *(_QWORD *)(v20 + 56) = v7;
  *(_QWORD *)(v20 + 32) = 123;
  *(_QWORD *)(v20 + 40) = 0xE100000000000000;
  sub_22655D61C();
  swift_bridgeObjectRelease();
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_22655F8F0;
  *(_QWORD *)(v21 + 56) = v7;
  *(_QWORD *)(v21 + 32) = 0x5B206E7275746572;
  *(_QWORD *)(v21 + 40) = 0xE800000000000000;
  sub_22655D61C();
  swift_bridgeObjectRelease();
  v22 = a3;
  if (!(a3 >> 62))
  {
    v23 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v23)
      goto LABEL_6;
LABEL_18:
    swift_bridgeObjectRelease();
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_22655F8F0;
    *(_QWORD *)(v33 + 56) = v14;
    *(_QWORD *)(v33 + 32) = 93;
    *(_QWORD *)(v33 + 40) = 0xE100000000000000;
    sub_22655D61C();
    swift_bridgeObjectRelease();
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_22655F8F0;
    *(_QWORD *)(v34 + 56) = v14;
    *(_QWORD *)(v34 + 32) = 125;
    *(_QWORD *)(v34 + 40) = 0xE100000000000000;
    sub_22655D61C();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v32 = sub_22655D400();
  result = swift_bridgeObjectRelease();
  if (__OFSUB__(v32, 1))
    goto LABEL_20;
  swift_bridgeObjectRetain();
  result = sub_22655D400();
  v23 = result;
  if (!result)
    goto LABEL_18;
LABEL_6:
  if (v23 >= 1)
  {
    v25 = 0;
    v35 = v23;
    do
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        v27 = MEMORY[0x2276999E4](v25, v22);
      }
      else
      {
        v27 = *(_QWORD *)(a3 + 32 + 8 * v25);
        swift_retain();
      }
      v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_22655F8F0;
      *(_QWORD *)(v28 + 56) = v14;
      *(_QWORD *)(v28 + 32) = 91;
      *(_QWORD *)(v28 + 40) = 0xE100000000000000;
      sub_22655D61C();
      swift_bridgeObjectRelease();
      v37 = *(_QWORD *)(*(_QWORD *)(v27 + 16) + 16);
      if (v37)
      {
        swift_bridgeObjectRetain();
        for (i = 0; i != v37; ++i)
        {
          v30 = v5;
          v31 = swift_allocObject();
          *(_OWORD *)(v31 + 16) = xmmword_22655F8F0;
          sub_22655CE24();
          sub_22655CF8C();
          sub_22655CE24();
          sub_22655CF8C();
          sub_22655CE24();
          sub_22655CE24();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v31 + 56) = v14;
          *(_QWORD *)(v31 + 32) = 0;
          *(_QWORD *)(v31 + 40) = 0xE000000000000000;
          sub_22655D61C();
          v5 = v30;
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        v23 = v35;
        v22 = a3;
      }
      v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_22655F8F0;
      sub_22655CE24();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v26 + 56) = v14;
      *(_QWORD *)(v26 + 32) = 93;
      *(_QWORD *)(v26 + 40) = 0xE100000000000000;
      sub_22655D61C();
      swift_release();
      swift_bridgeObjectRelease();
      ++v25;
    }
    while (v25 != v23);
    goto LABEL_18;
  }
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_2264E1E84(uint64_t a1, double a2, double a3)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  float32x2_t i;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  float32x2_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t result;
  _QWORD *v19;

  v3 = 0;
  v4 = a1 + 56;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  for (i = 0; ; i = vadd_f32(i, *(float32x2_t *)&a3))
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (v3 << 6);
      goto LABEL_5;
    }
    v12 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v8)
      goto LABEL_25;
    v13 = *(_QWORD *)(v4 + 8 * v12);
    ++v3;
    if (!v13)
    {
      v3 = v12 + 1;
      if (v12 + 1 >= v8)
        goto LABEL_25;
      v13 = *(_QWORD *)(v4 + 8 * v3);
      if (!v13)
      {
        v3 = v12 + 2;
        if (v12 + 2 >= v8)
          goto LABEL_25;
        v13 = *(_QWORD *)(v4 + 8 * v3);
        if (!v13)
        {
          v3 = v12 + 3;
          if (v12 + 3 >= v8)
            goto LABEL_25;
          v13 = *(_QWORD *)(v4 + 8 * v3);
          if (!v13)
          {
            v3 = v12 + 4;
            if (v12 + 4 >= v8)
              goto LABEL_25;
            v13 = *(_QWORD *)(v4 + 8 * v3);
            if (!v13)
              break;
          }
        }
      }
    }
LABEL_24:
    v7 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v3 << 6);
LABEL_5:
    a3 = *(double *)(*(_QWORD *)(a1 + 48) + 8 * v11);
  }
  v14 = v12 + 5;
  if (v14 >= v8)
  {
LABEL_25:
    *(float *)&a3 = (float)*(uint64_t *)(a1 + 16);
    v15 = vdiv_f32(i, (float32x2_t)vdup_lane_s32(*(int32x2_t *)&a3, 0));
    v16 = swift_bridgeObjectRetain();
    v17 = sub_226535D4C(v16);
    swift_bridgeObjectRelease();
    v19 = v17;
    sub_2264DC530((uint64_t *)&v19, v15);
    return (uint64_t)v19;
  }
  v13 = *(_QWORD *)(v4 + 8 * v14);
  if (v13)
  {
    v3 = v14;
    goto LABEL_24;
  }
  while (1)
  {
    v3 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v3 >= v8)
      goto LABEL_25;
    v13 = *(_QWORD *)(v4 + 8 * v3);
    ++v14;
    if (v13)
      goto LABEL_24;
  }
LABEL_27:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_2264E2028(_QWORD *a1, float a2)
{
  uint64_t v4;
  uint64_t v5;
  float32x2_t *v6;
  float32x2_t v7;
  unint64_t v8;
  float32x2_t v9;
  float v10;
  float v11;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;

  swift_bridgeObjectRetain_n();
  v4 = sub_2264D1B60((uint64_t)a1);
  v5 = *(_QWORD *)(v4 + 16);
  if (!v5)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    return (uint64_t)a1;
  }
  v6 = (float32x2_t *)(v4 + 40);
  while (1)
  {
    v7 = v6[-1];
    if (v7)
      break;
    v8 = a1[2] - 1;
    if ((v8 & 0x8000000000000000) != 0)
      goto LABEL_21;
LABEL_9:
    if (v8 >= a1[2])
      goto LABEL_22;
    v9 = vsub_f32(*v6, (float32x2_t)a1[v8 + 4]);
    v10 = fabsf(v9.f32[0]);
    v11 = fabsf(v9.f32[1]);
    if (v10 < a2 && v11 < a2)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        a1 = sub_2264C10E8(a1);
      v13 = a1[2];
      if (*(_QWORD *)&v7 >= v13)
        goto LABEL_24;
      v14 = v13 - 1;
      v15 = v13 - 1 - *(_QWORD *)&v7;
      if (v15 < 0)
        goto LABEL_25;
      memmove(&a1[*(_QWORD *)&v7 + 4], &a1[*(_QWORD *)&v7 + 5], 8 * v15);
      a1[2] = v14;
    }
    v6 += 2;
    if (!--v5)
      goto LABEL_20;
  }
  v8 = *(_QWORD *)&v7 - 1;
  if (__OFSUB__(*(_QWORD *)&v7, 1))
    goto LABEL_23;
  if ((v8 & 0x8000000000000000) == 0)
    goto LABEL_9;
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_2264E21A4(unint64_t a1, uint64_t a2, double *a3)
{
  unint64_t v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  double v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  double v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  double v20;
  BOOL v21;
  unint64_t v22;
  float32x2_t *v23;
  double v24;
  int32x2_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int32x2_t v34;
  double v35;
  double v36;
  _QWORD *v37;
  uint64_t v38;
  double *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  double *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  float32x2_t v53;
  double v54[9];
  double v55;

  v3 = (unint64_t)a3;
  v5 = a1;
  v55 = MEMORY[0x24BEE4B08];
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(v6 + 16);
  v52 = a3;
  if (v7)
  {
    swift_bridgeObjectRetain();
    v8 = 0;
    LOBYTE(v50) = 1;
    while (v8 < *(_QWORD *)(v6 + 16))
    {
      v9 = *(double *)(v6 + 32 + 8 * v8);
      v10 = v8 + 1;
      if ((sub_226453EFC(a2, 0.00000011921, v9) & 1) != 0)
      {
        ++v8;
        if ((v3 & 1) == 0)
        {
LABEL_7:
          sub_226536A0C(v54, *(float32x2_t *)&v9);
          v3 = v52;
        }
LABEL_3:
        if (v8 == v7)
          goto LABEL_19;
      }
      else
      {
        if ((v3 & 1) == 0)
        {
          if (v10 == v7)
          {
LABEL_18:
            LOBYTE(v50) = 0;
LABEL_19:
            swift_bridgeObjectRelease();
            goto LABEL_21;
          }
          while (v8 + 1 < *(_QWORD *)(v6 + 16))
          {
            v9 = *(double *)(v6 + 40 + 8 * v8);
            if ((sub_226453EFC(a2, 0.00000011921, v9) & 1) != 0)
            {
              LOBYTE(v50) = 0;
              v8 += 2;
              if ((v3 & 1) != 0)
                goto LABEL_3;
              goto LABEL_7;
            }
            if (v7 - 1 == ++v8)
              goto LABEL_18;
          }
          break;
        }
        sub_226536A0C(v54, *(float32x2_t *)&v9);
        v3 = v52;
        LOBYTE(v50) = 0;
        ++v8;
        if (v10 == v7)
          goto LABEL_19;
      }
    }
    __break(1u);
    goto LABEL_87;
  }
  LOBYTE(v50) = 1;
LABEL_21:
  v11 = *(_QWORD *)(a2 + 16);
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    v13 = 0;
    LOBYTE(v14) = 1;
    while (v13 < *(_QWORD *)(v11 + 16))
    {
      v15 = *(double *)(v11 + 32 + 8 * v13);
      v16 = v13 + 1;
      if ((sub_226453EFC(v5, 0.00000011921, v15) & 1) != 0)
      {
        ++v13;
        if ((v3 & 1) == 0)
        {
LABEL_27:
          sub_226536A0C(v54, *(float32x2_t *)&v15);
          v3 = v52;
        }
LABEL_23:
        if (v13 == v12)
        {
LABEL_79:
          swift_bridgeObjectRelease();
          if ((v3 & 1) == 0)
            goto LABEL_75;
          goto LABEL_80;
        }
      }
      else
      {
        if ((v3 & 1) == 0)
        {
          if (v16 != v12)
          {
            while (v13 + 1 < *(_QWORD *)(v11 + 16))
            {
              v15 = *(double *)(v11 + 40 + 8 * v13);
              if ((sub_226453EFC(v5, 0.00000011921, v15) & 1) != 0)
              {
                LOBYTE(v14) = 0;
                v13 += 2;
                if ((v3 & 1) != 0)
                  goto LABEL_23;
                goto LABEL_27;
              }
              if (v12 - 1 == ++v13)
                goto LABEL_38;
            }
            break;
          }
LABEL_38:
          swift_bridgeObjectRelease();
          if ((v50 & 1) != 0)
            goto LABEL_83;
          goto LABEL_39;
        }
        sub_226536A0C(v54, *(float32x2_t *)&v15);
        v3 = v52;
        LOBYTE(v14) = 0;
        ++v13;
        if (v16 == v12)
        {
          swift_bridgeObjectRelease();
          if ((v50 & 1) == 0)
            goto LABEL_39;
          goto LABEL_81;
        }
      }
    }
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  LOBYTE(v14) = 1;
  if ((v3 & 1) == 0)
  {
LABEL_75:
    if ((v50 & 1) == 0)
    {
      if ((v14 & 1) != 0)
        goto LABEL_81;
LABEL_39:
      v3 = *(_QWORD *)(v5 + 24);
      if (!(v3 >> 62))
      {
        v17 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v17)
        {
LABEL_93:
          swift_bridgeObjectRelease();
          v20 = v55;
LABEL_94:
          v37 = (_QWORD *)sub_2264E1E84(*(uint64_t *)&v20, v35, v36);
          swift_bridgeObjectRelease();
          v38 = sub_2264E2028(v37, 0.0001);
          swift_bridgeObjectRelease();
          type metadata accessor for CDTPolygon();
          swift_allocObject();
          return sub_2264EA930(v38);
        }
LABEL_41:
        v18 = *(_QWORD *)(a2 + 24);
        v47 = v18 & 0xFFFFFFFFFFFFFF8;
        if (v18 >> 62)
        {
          swift_bridgeObjectRetain();
          v50 = sub_22655D400();
          swift_bridgeObjectRelease();
        }
        else
        {
          v50 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        v5 = 0;
        v19 = v3 & 0xC000000000000001;
        v20 = v55;
        v40 = (double *)(v3 + 32);
        v41 = v3 & 0xFFFFFFFFFFFFFF8;
        v48 = v18;
        v49 = v18 & 0xC000000000000001;
        v46 = v18 + 32;
        a2 = -1;
        v43 = v17;
        v44 = (double *)v3;
        v42 = v3 & 0xC000000000000001;
        do
        {
          while (1)
          {
            if (v19)
            {
              v51 = MEMORY[0x2276999E4](v5, v3);
              v21 = __OFADD__(v5++, 1);
              if (v21)
                goto LABEL_90;
            }
            else
            {
              if (v5 >= *(_QWORD *)(v41 + 16))
                goto LABEL_91;
              v51 = *(_QWORD *)&v40[v5];
              swift_retain();
              v21 = __OFADD__(v5++, 1);
              if (v21)
                goto LABEL_90;
            }
            if (!v50)
              break;
            v45 = v5;
            swift_bridgeObjectRetain();
            v22 = 0;
            do
            {
              if (v49)
              {
                v23 = (float32x2_t *)MEMORY[0x2276999E4](v22, v18);
                v21 = __OFADD__(v22++, 1);
                if (v21)
                  goto LABEL_88;
              }
              else
              {
                if (v22 >= *(_QWORD *)(v47 + 16))
                  goto LABEL_89;
                v23 = *(float32x2_t **)(v46 + 8 * v22);
                swift_retain();
                v21 = __OFADD__(v22++, 1);
                if (v21)
                  goto LABEL_88;
              }
              v3 = v51;
              v26 = sub_226495860(v23, 1, 0.0001, v24, v25);
              v27 = v26;
              v28 = v26[2];
              if (v28)
              {
                v29 = 0;
                v14 = v26 + 4;
                while (v29 < v27[2])
                {
                  v53 = (float32x2_t)v14[v29];
                  sub_22655D640();
                  sub_22655D664();
                  sub_22655D664();
                  v3 = (unint64_t)v54;
                  v31 = sub_22655D670();
                  v32 = -1 << *(_BYTE *)(*(_QWORD *)&v20 + 32);
                  v5 = v31 & ~v32;
                  if (((*(_QWORD *)(*(_QWORD *)&v20 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
                  {
                    v33 = ~v32;
                    while (1)
                    {
                      v34 = vceq_f32(*(float32x2_t *)(*(_QWORD *)(*(_QWORD *)&v20 + 48) + 8 * v5), v53);
                      if ((v34.i32[0] & v34.i32[1] & 1) != 0)
                        break;
                      v5 = (v5 + 1) & v33;
                      if (((*(_QWORD *)(*(_QWORD *)&v20 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
                        goto LABEL_63;
                    }
                  }
                  else
                  {
LABEL_63:
                    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    v54[0] = v20;
                    v3 = (unint64_t)v54;
                    sub_2265390A8(v5, isUniquelyReferenced_nonNull_native, v53);
                    v20 = v54[0];
                    swift_bridgeObjectRelease();
                  }
                  if (++v29 == v28)
                  {
                    v55 = v20;
                    swift_release();
                    swift_bridgeObjectRelease();
                    v18 = v48;
                    goto LABEL_54;
                  }
                }
                __break(1u);
                goto LABEL_79;
              }
              swift_release();
              swift_bridgeObjectRelease();
LABEL_54:
              ;
            }
            while (v22 != v50);
            swift_release();
            swift_bridgeObjectRelease();
            v17 = v43;
            v3 = (unint64_t)v44;
            v5 = v45;
            v19 = v42;
            if (v45 == v43)
              goto LABEL_73;
          }
          swift_release();
        }
        while (v5 != v17);
LABEL_73:
        swift_bridgeObjectRelease();
        goto LABEL_94;
      }
LABEL_92:
      swift_bridgeObjectRetain();
      v17 = sub_22655D400();
      if (!v17)
        goto LABEL_93;
      goto LABEL_41;
    }
LABEL_83:
    swift_bridgeObjectRelease();
    swift_retain();
    return v5;
  }
LABEL_80:
  if ((v50 & 1) == 0)
  {
    if ((v14 & 1) == 0)
      goto LABEL_39;
    goto LABEL_83;
  }
LABEL_81:
  swift_bridgeObjectRelease();
  swift_retain();
  return a2;
}

uint64_t sub_2264E2840(float32x2_t *__src, float32x2_t *a2, unint64_t a3, float32x2_t *__dst, float32x2_t *a5)
{
  float32x2_t *v6;
  float32x2_t *v8;
  float32x2_t *v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  float32x2_t *v16;
  float32x2_t v17;
  float32x2_t v18;
  int32x2_t v19;
  int32x2_t v20;
  float32x2_t v21;
  float32x2_t *v22;
  float32x2_t *v23;
  float32x2_t v24;
  float32x2_t v25;
  float32x2_t *v26;
  float32x2_t *v27;
  float32x2_t v28;
  float32x2_t *v29;
  int32x2_t v30;
  int32x2_t v31;
  float32x2_t v32;
  uint64_t result;
  float32x2_t *v34;
  float32x2_t *v35;
  float32x2_t *v36;

  v6 = __dst;
  v8 = a2;
  v9 = __src;
  v10 = (char *)a2 - (char *)__src;
  v11 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v11 = (char *)a2 - (char *)__src;
  v12 = v11 >> 3;
  v13 = a3 - (_QWORD)a2;
  v14 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v14 = a3 - (_QWORD)a2;
  v15 = v14 >> 3;
  v36 = __src;
  v35 = __dst;
  if (v12 >= v14 >> 3)
  {
    if (v13 >= -7)
    {
      if (__dst != a2 || &a2[v15] <= __dst)
        memmove(__dst, a2, 8 * v15);
      v23 = &v6[v15];
      v34 = v23;
      v36 = v8;
      if (v9 < v8 && v13 >= 8)
      {
        v24 = a5[2];
        v25 = vsub_f32(a5[3], v24);
        v26 = (float32x2_t *)(a3 - 8);
        while (1)
        {
          v27 = v8 - 1;
          v28 = v8[-1];
          v29 = v26 + 1;
          v30 = (int32x2_t)vmul_f32(v25, vsub_f32(v23[-1], v24));
          v31 = (int32x2_t)vmul_f32(v25, vsub_f32(v28, v24));
          v32 = vadd_f32((float32x2_t)vzip1_s32(v30, v31), (float32x2_t)vzip2_s32(v30, v31));
          if ((vcgt_f32((float32x2_t)vdup_lane_s32((int32x2_t)v32, 1), v32).u8[0] & 1) != 0)
          {
            if (v29 != v8 || v26 >= v8)
              *v26 = v28;
            v36 = --v8;
            if (v27 <= v9)
              goto LABEL_43;
          }
          else
          {
            v34 = v23 - 1;
            if (v29 < v23 || v26 >= v23 || v29 != v23)
              *v26 = v23[-1];
            --v23;
            if (v8 <= v9)
              goto LABEL_43;
          }
          --v26;
          if (v23 <= v6)
            goto LABEL_43;
        }
      }
      goto LABEL_43;
    }
  }
  else if (v10 >= -7)
  {
    if (__dst != __src || &__src[v12] <= __dst)
      memmove(__dst, __src, 8 * v12);
    v16 = &v6[v12];
    v34 = v16;
    if ((unint64_t)v8 < a3 && v10 >= 8)
    {
      v17 = a5[2];
      v18 = vsub_f32(a5[3], v17);
      do
      {
        v19 = (int32x2_t)vmul_f32(v18, vsub_f32(*v8, v17));
        v20 = (int32x2_t)vmul_f32(v18, vsub_f32(*v6, v17));
        v21 = vadd_f32((float32x2_t)vzip1_s32(v19, v20), (float32x2_t)vzip2_s32(v19, v20));
        if ((vcgt_f32((float32x2_t)vdup_lane_s32((int32x2_t)v21, 1), v21).u8[0] & 1) != 0)
        {
          v22 = v8 + 1;
          if (v9 < v8 || v9 >= v22 || v9 != v8)
            *v9 = *v8;
        }
        else
        {
          if (v9 != v6)
            *v9 = *v6;
          v35 = ++v6;
          v22 = v8;
        }
        ++v9;
        if (v6 >= v16)
          break;
        v8 = v22;
      }
      while ((unint64_t)v22 < a3);
      v36 = v9;
    }
LABEL_43:
    sub_2264CA074((void **)&v36, (const void **)&v35, &v34);
    return 1;
  }
  swift_release();
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_2264E2B10(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, float32x2_t *a5)
{
  uint64_t v5;
  float32x2_t v6;
  float32x2_t v7;
  uint64_t v8;
  float32x2_t v9;
  float32x2_t v10;
  float32x2_t v11;
  uint64_t v12;
  float32x2_t *v13;
  float32x2_t v14;
  float32x2_t v15;

  if (a3 != a2)
  {
    v5 = *a4;
    v6 = a5[2];
    v7 = vsub_f32(a5[3], v6);
    v8 = *a4 + 8 * a3 - 8;
LABEL_5:
    v9 = *(float32x2_t *)(v5 + 8 * a3);
    v10 = vmul_f32(v7, vsub_f32(v9, v6));
    v11 = vadd_f32(v10, (float32x2_t)vdup_lane_s32((int32x2_t)v10, 1));
    v12 = result;
    v13 = (float32x2_t *)v8;
    while (1)
    {
      v14 = *v13;
      v15 = vmul_f32(v7, vsub_f32(*v13, v6));
      if ((vcgt_f32(vadd_f32(v15, (float32x2_t)vdup_lane_s32((int32x2_t)v15, 1)), v11).u8[0] & 1) == 0)
      {
LABEL_4:
        ++a3;
        v8 += 8;
        if (a3 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v5)
        break;
      *v13 = v9;
      v13[1] = v14;
      --v13;
      if (a3 == ++v12)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2264E2B9C(uint64_t *a1, float32x2_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  float32x2_t v16;
  float32x2_t v17;
  float32x2_t v18;
  int32x2_t v19;
  int32x2_t v20;
  float32x2_t v21;
  int8x8_t v22;
  float32x2_t v23;
  int32x2_t v24;
  int32x2_t v25;
  float32x2_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  float32x2_t v33;
  float32x2_t v34;
  float32x2_t *v35;
  float32x2_t v36;
  float32x2_t v37;
  float32x2_t v38;
  uint64_t v39;
  float32x2_t *v40;
  float32x2_t v41;
  float32x2_t v42;
  unint64_t v43;
  unint64_t v44;
  char *v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  char v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  float32x2_t *v93;
  unint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  float32x2_t *v102;
  float32x2_t *v103;
  uint64_t v104;
  unint64_t v105;
  char *v106;
  unint64_t v107;
  uint64_t result;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  float32x2_t *__dst;
  float32x2_t *v117;
  char *v118;
  char *v119;
  float32x2_t *v120;
  uint64_t v121;

  v5 = a1[1];
  swift_retain_n();
  v6 = sub_22655D538();
  if (v6 >= v5)
  {
    if ((v5 & 0x8000000000000000) == 0)
    {
      if (v5)
      {
        swift_retain();
        sub_2264E2B10(0, v5, 1, a1, a2);
      }
      swift_release_n();
      return swift_release();
    }
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    swift_release_n();
    __break(1u);
LABEL_137:
    swift_release_n();
    __break(1u);
LABEL_138:
    swift_release_n();
    __break(1u);
LABEL_139:
    swift_release_n();
    __break(1u);
LABEL_140:
    swift_release_n();
    result = sub_22655D3DC();
    __break(1u);
    return result;
  }
  if (v5 >= 0)
    v7 = v5;
  else
    v7 = v5 + 1;
  if (v5 < -1)
    goto LABEL_140;
  v117 = a2;
  v112 = v6;
  v113 = v5;
  v109 = a1;
  if (v5 < 2)
  {
    __dst = (float32x2_t *)(MEMORY[0x24BEE4AF8] + 32);
    v111 = MEMORY[0x24BEE4AF8];
    if (v5 != 1)
    {
      v12 = (char *)MEMORY[0x24BEE4AF8];
      v14 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_97:
      v121 = v2;
      v119 = v12;
      if (v14 < 2)
      {
LABEL_108:
        swift_bridgeObjectRelease();
        *(_QWORD *)(v111 + 16) = 0;
        swift_release_n();
        swift_bridgeObjectRelease();
        return swift_release();
      }
      v98 = *v109;
      while (1)
      {
        v99 = v14 - 2;
        if (v14 < 2)
          goto LABEL_127;
        if (!v98)
          goto LABEL_139;
        v100 = *(_QWORD *)&v119[16 * v99 + 32];
        v101 = *(_QWORD *)&v119[16 * v14 + 24];
        v102 = (float32x2_t *)(v98 + 8 * v100);
        v103 = (float32x2_t *)(v98 + 8 * *(_QWORD *)&v119[16 * v14 + 16]);
        v104 = v98;
        v105 = v98 + 8 * v101;
        swift_retain();
        sub_2264E2840(v102, v103, v105, __dst, v117);
        if (v121)
        {
          v97 = v111;
          goto LABEL_94;
        }
        swift_release();
        if (v101 < v100)
          goto LABEL_128;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v119 = sub_2264CA374((uint64_t)v119);
        if (v99 >= *((_QWORD *)v119 + 2))
          goto LABEL_129;
        v106 = &v119[16 * v99 + 32];
        *(_QWORD *)v106 = v100;
        *((_QWORD *)v106 + 1) = v101;
        v107 = *((_QWORD *)v119 + 2);
        if (v14 > v107)
          goto LABEL_130;
        memmove(&v119[16 * v14 + 16], &v119[16 * v14 + 32], 16 * (v107 - v14));
        *((_QWORD *)v119 + 2) = v107 - 1;
        v14 = v107 - 1;
        v98 = v104;
        if (v107 <= 2)
          goto LABEL_108;
      }
    }
  }
  else
  {
    v8 = v7 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558443D0);
    v9 = sub_22655CEFC();
    *(_QWORD *)(v9 + 16) = v8;
    v111 = v9;
    __dst = (float32x2_t *)(v9 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v110 = *a1 - 8;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v13 = v5;
  v115 = *a1;
  while (1)
  {
    v15 = v10 + 1;
    if (v10 + 1 < v13)
    {
      v16 = *(float32x2_t *)(v11 + 8 * v15);
      v17 = v117[2];
      v18 = vsub_f32(v117[3], v17);
      v19 = (int32x2_t)vmul_f32(vsub_f32(v16, v17), v18);
      v20 = (int32x2_t)vmul_f32(vsub_f32(*(float32x2_t *)(v11 + 8 * v10), v17), v18);
      v21 = vadd_f32((float32x2_t)vzip1_s32(v19, v20), (float32x2_t)vzip2_s32(v19, v20));
      v22 = (int8x8_t)vcgt_f32((float32x2_t)vdup_lane_s32((int32x2_t)v21, 1), v21);
      v15 = v10 + 2;
      if (v10 + 2 < v13)
      {
        while (1)
        {
          v23 = vsub_f32(v16, v17);
          v16 = *(float32x2_t *)(v11 + 8 * v15);
          v24 = (int32x2_t)vmul_f32(v18, vsub_f32(v16, v17));
          v25 = (int32x2_t)vmul_f32(v18, v23);
          v26 = vadd_f32((float32x2_t)vzip1_s32(v24, v25), (float32x2_t)vzip2_s32(v24, v25));
          if ((vmvn_s8(veor_s8((int8x8_t)vcgt_f32((float32x2_t)vdup_lane_s32((int32x2_t)v26, 1), v26), v22)).u8[0] & 1) == 0)
            break;
          if (v13 == ++v15)
          {
            v15 = v13;
            break;
          }
        }
      }
      if ((v22.i8[0] & 1) != 0)
      {
        if (v15 < v10)
          goto LABEL_133;
        if (v10 < v15)
        {
          v27 = (uint64_t *)(v110 + 8 * v15);
          v28 = v15;
          v29 = v10;
          v30 = (uint64_t *)(v11 + 8 * v10);
          do
          {
            if (v29 != --v28)
            {
              if (!v11)
                goto LABEL_138;
              v31 = *v30;
              *v30 = *v27;
              *v27 = v31;
            }
            ++v29;
            --v27;
            ++v30;
          }
          while (v29 < v28);
        }
      }
    }
    if (v15 < v13)
    {
      if (__OFSUB__(v15, v10))
        goto LABEL_131;
      if (v15 - v10 < v112)
      {
        v32 = v10 + v112;
        if (__OFADD__(v10, v112))
          goto LABEL_134;
        if (v32 >= v13)
          v32 = v13;
        if (v32 < v10)
          goto LABEL_135;
        if (v15 != v32)
        {
          v33 = v117[2];
          v34 = vsub_f32(v117[3], v33);
          v35 = (float32x2_t *)(v110 + 8 * v15);
          do
          {
            v36 = *(float32x2_t *)(v11 + 8 * v15);
            v37 = vmul_f32(v34, vsub_f32(v36, v33));
            v38 = vadd_f32(v37, (float32x2_t)vdup_lane_s32((int32x2_t)v37, 1));
            v39 = v10;
            v40 = v35;
            do
            {
              v41 = *v40;
              v42 = vmul_f32(v34, vsub_f32(*v40, v33));
              if ((vcgt_f32(vadd_f32(v42, (float32x2_t)vdup_lane_s32((int32x2_t)v42, 1)), v38).u8[0] & 1) == 0)
                break;
              if (!v11)
                goto LABEL_136;
              *v40 = v36;
              v40[1] = v41;
              --v40;
              ++v39;
            }
            while (v15 != v39);
            ++v15;
            ++v35;
          }
          while (v15 != v32);
          v15 = v32;
        }
      }
    }
    if (v15 < v10)
    {
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
      goto LABEL_132;
    }
    v114 = v15;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_2264C9F78(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v44 = *((_QWORD *)v12 + 2);
    v43 = *((_QWORD *)v12 + 3);
    v118 = v12;
    v14 = v44 + 1;
    v11 = v115;
    if (v44 >= v43 >> 1)
    {
      v96 = sub_2264C9F78((char *)(v43 > 1), v44 + 1, 1, v12);
      v11 = v115;
      v118 = v96;
    }
    *((_QWORD *)v118 + 2) = v14;
    v45 = v118 + 32;
    v46 = &v118[16 * v44 + 32];
    *(_QWORD *)v46 = v10;
    *((_QWORD *)v46 + 1) = v15;
    if (v44)
      break;
    v14 = 1;
    v12 = v118;
LABEL_15:
    v13 = v113;
    v10 = v114;
    if (v114 >= v113)
      goto LABEL_97;
  }
  v12 = v118;
  while (1)
  {
    v47 = v14 - 1;
    if (v14 >= 4)
    {
      v52 = &v45[16 * v14];
      v53 = *((_QWORD *)v52 - 8);
      v54 = *((_QWORD *)v52 - 7);
      v58 = __OFSUB__(v54, v53);
      v55 = v54 - v53;
      if (v58)
        goto LABEL_115;
      v57 = *((_QWORD *)v52 - 6);
      v56 = *((_QWORD *)v52 - 5);
      v58 = __OFSUB__(v56, v57);
      v50 = v56 - v57;
      v51 = v58;
      if (v58)
        goto LABEL_116;
      v59 = v14 - 2;
      v60 = &v45[16 * v14 - 32];
      v62 = *(_QWORD *)v60;
      v61 = *((_QWORD *)v60 + 1);
      v58 = __OFSUB__(v61, v62);
      v63 = v61 - v62;
      if (v58)
        goto LABEL_118;
      v58 = __OFADD__(v50, v63);
      v64 = v50 + v63;
      if (v58)
        goto LABEL_121;
      if (v64 >= v55)
      {
        v82 = &v45[16 * v47];
        v84 = *(_QWORD *)v82;
        v83 = *((_QWORD *)v82 + 1);
        v58 = __OFSUB__(v83, v84);
        v85 = v83 - v84;
        if (v58)
          goto LABEL_125;
        v75 = v50 < v85;
        goto LABEL_83;
      }
    }
    else
    {
      if (v14 != 3)
      {
        v76 = *((_QWORD *)v12 + 4);
        v77 = *((_QWORD *)v12 + 5);
        v58 = __OFSUB__(v77, v76);
        v69 = v77 - v76;
        v70 = v58;
        goto LABEL_77;
      }
      v49 = *((_QWORD *)v12 + 4);
      v48 = *((_QWORD *)v12 + 5);
      v58 = __OFSUB__(v48, v49);
      v50 = v48 - v49;
      v51 = v58;
    }
    if ((v51 & 1) != 0)
      goto LABEL_117;
    v59 = v14 - 2;
    v65 = &v45[16 * v14 - 32];
    v67 = *(_QWORD *)v65;
    v66 = *((_QWORD *)v65 + 1);
    v68 = __OFSUB__(v66, v67);
    v69 = v66 - v67;
    v70 = v68;
    if (v68)
      goto LABEL_120;
    v71 = &v45[16 * v47];
    v73 = *(_QWORD *)v71;
    v72 = *((_QWORD *)v71 + 1);
    v58 = __OFSUB__(v72, v73);
    v74 = v72 - v73;
    if (v58)
      goto LABEL_123;
    if (__OFADD__(v69, v74))
      goto LABEL_124;
    if (v69 + v74 >= v50)
    {
      v75 = v50 < v74;
LABEL_83:
      if (v75)
        v47 = v59;
      goto LABEL_85;
    }
LABEL_77:
    if ((v70 & 1) != 0)
      goto LABEL_119;
    v78 = &v45[16 * v47];
    v80 = *(_QWORD *)v78;
    v79 = *((_QWORD *)v78 + 1);
    v58 = __OFSUB__(v79, v80);
    v81 = v79 - v80;
    if (v58)
      goto LABEL_122;
    if (v81 < v69)
      goto LABEL_15;
LABEL_85:
    v86 = v47 - 1;
    if (v47 - 1 >= v14)
    {
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
      goto LABEL_126;
    }
    if (!v11)
      goto LABEL_137;
    v87 = v45;
    v88 = &v45[16 * v86];
    v89 = *(_QWORD *)v88;
    v90 = v47;
    v91 = &v87[16 * v47];
    v92 = *((_QWORD *)v91 + 1);
    v120 = (float32x2_t *)(v11 + 8 * *(_QWORD *)v88);
    v93 = (float32x2_t *)(v11 + 8 * *(_QWORD *)v91);
    v94 = v11 + 8 * v92;
    swift_retain();
    sub_2264E2840(v120, v93, v94, __dst, v117);
    if (v2)
      break;
    swift_release();
    if (v92 < v89)
      goto LABEL_112;
    v12 = v118;
    if (v90 > *((_QWORD *)v118 + 2))
      goto LABEL_113;
    *(_QWORD *)v88 = v89;
    v45 = v118 + 32;
    *(_QWORD *)&v118[16 * v86 + 40] = v92;
    v95 = *((_QWORD *)v118 + 2);
    if (v90 >= v95)
      goto LABEL_114;
    v14 = v95 - 1;
    memmove(v91, v91 + 16, 16 * (v95 - 1 - v90));
    *((_QWORD *)v118 + 2) = v95 - 1;
    v11 = v115;
    if (v95 <= 2)
      goto LABEL_15;
  }
  v97 = v111;
LABEL_94:
  swift_bridgeObjectRelease();
  swift_release();
  *(_QWORD *)(v97 + 16) = 0;
  swift_release_n();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_2264E3398(uint64_t *a1, float32x2_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v4 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_2264CA4C0(v4);
  v5 = *(_QWORD *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  swift_retain();
  sub_2264E2B9C(v7, a2);
  swift_release();
  *a1 = v4;
  return swift_release_n();
}

_QWORD *sub_2264E3438(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  float32x2_t *v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  unsigned __int8 *v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t i;
  float32x2_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v45;
  uint64_t v46[3];
  uint64_t v47;
  _QWORD *v48;

  v48 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v4 = *(_QWORD *)(a1 + 24);
  if (v4 >> 62)
    goto LABEL_41;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v5)
  {
    v6 = 0;
    v43 = v4 & 0xC000000000000001;
    v39 = v4 & 0xFFFFFFFFFFFFFF8;
    v40 = v4;
    v38 = v4 + 32;
    v7 = MEMORY[0x24BEE4B08];
    v41 = v5;
    v42 = a2;
    while (v43)
    {
      v8 = (float32x2_t *)MEMORY[0x2276999E4](v6, v40);
      v9 = v6 + 1;
      if (__OFADD__(v6, 1))
        goto LABEL_38;
LABEL_11:
      v45 = v9;
      if (*(_QWORD *)(a3 + 16))
      {
        v10 = sub_226534A10(v6);
        if ((v11 & 1) != 0)
        {
          v12 = (unsigned __int8 *)(*(_QWORD *)(a3 + 56) + 16 * v10);
          v4 = *v12;
          v13 = *((_QWORD *)v12 + 1);
          v14 = v48;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v14 = sub_2264874D4(0, v14[2] + 1, 1, v14);
          v16 = v14[2];
          v15 = v14[3];
          if (v16 >= v15 >> 1)
            v14 = sub_2264874D4((_QWORD *)(v15 > 1), v16 + 1, 1, v14);
          v14[2] = v16 + 1;
          v17 = &v14[2 * v16];
          *((_BYTE *)v17 + 32) = v4;
          v17[5] = v13;
          v48 = v14;
        }
      }
      v47 = v7;
      if (a2[2]
        && (v18 = sub_226534A10(v6), (v19 & 1) != 0)
        && (v20 = *(_QWORD *)(a2[7] + 8 * v18), (v4 = *(_QWORD *)(v20 + 16)) != 0))
      {
        swift_bridgeObjectRetain();
        for (i = 0; i != v4; ++i)
        {
          v22 = *(float32x2_t *)(v20 + 8 * i + 32);
          sub_226536A0C((double *)v46, v22);
        }
        swift_bridgeObjectRelease();
        v23 = v47;
        v24 = *(_QWORD *)(v47 + 16);
        if (!v24)
        {
LABEL_24:
          v25 = (_QWORD *)MEMORY[0x24BEE4AF8];
          goto LABEL_30;
        }
      }
      else
      {
        v23 = v7;
        v24 = *(_QWORD *)(v7 + 16);
        if (!v24)
          goto LABEL_24;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_255841D18);
      v25 = (_QWORD *)swift_allocObject();
      v26 = _swift_stdlib_malloc_size(v25);
      v27 = v26 - 32;
      if (v26 < 32)
        v27 = v26 - 25;
      v25[2] = v24;
      v25[3] = 2 * (v27 >> 3);
      a2 = sub_22653B8BC(v46, v25 + 4, v24, v23);
      v4 = v46[2];
      swift_bridgeObjectRetain_n();
      sub_22646C924();
      if (a2 != (_QWORD *)v24)
        goto LABEL_39;
      swift_bridgeObjectRelease();
LABEL_30:
      v46[0] = (uint64_t)v25;
      swift_retain();
      swift_retain();
      sub_2264E3398(v46, v8);
      swift_release();
      swift_release();
      v28 = v46[0];
      v29 = *(_QWORD *)(v46[0] + 16);
      if (v29)
      {
        v46[0] = MEMORY[0x24BEE4AF8];
        sub_2264C79A8(0, v29, 0);
        v4 = 0;
        v30 = v46[0];
        v31 = *(_QWORD *)(v46[0] + 16);
        v32 = 16 * v31;
        do
        {
          v33 = *(_QWORD *)(v28 + 8 * v4 + 32);
          v46[0] = v30;
          v34 = *(_QWORD *)(v30 + 24);
          v35 = v31 + v4 + 1;
          if (v31 + v4 >= v34 >> 1)
          {
            sub_2264C79A8(v34 > 1, v31 + v4 + 1, 1);
            v30 = v46[0];
          }
          ++v4;
          *(_QWORD *)(v30 + 16) = v35;
          v36 = v30 + v32;
          *(_BYTE *)(v36 + 32) = 1;
          *(_QWORD *)(v36 + 40) = v33;
          v32 += 16;
        }
        while (v29 != v4);
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
        v30 = MEMORY[0x24BEE4AF8];
      }
      sub_22646AA60(v30);
      swift_release();
      v6 = v45;
      a2 = v42;
      v7 = MEMORY[0x24BEE4B08];
      if (v45 == v41)
      {
        swift_bridgeObjectRelease();
        return v48;
      }
    }
    if (v6 >= *(_QWORD *)(v39 + 16))
      goto LABEL_40;
    v8 = *(float32x2_t **)(v38 + 8 * v6);
    swift_retain();
    v9 = v6 + 1;
    if (!__OFADD__(v6, 1))
      goto LABEL_11;
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    swift_bridgeObjectRetain_n();
    v5 = sub_22655D400();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return (_QWORD *)MEMORY[0x24BEE4AF8];
}

uint64_t sub_2264E38B0(_QWORD **a1, float a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  float32x2_t *i;
  float32x2_t v9;
  unint64_t v10;
  uint64_t v11;
  float32x2_t *v12;
  float32x2_t v13;
  float32x2_t v14;
  float v15;
  float v16;
  int v18;
  char v19;
  float32x2_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t result;

  v4 = *a1;
  v5 = swift_bridgeObjectRetain();
  v6 = sub_2264D1C5C(v5);
  v7 = *(_QWORD *)(v6 + 16);
  if (!v7)
    return swift_bridgeObjectRelease();
  for (i = (float32x2_t *)(v6 + 48); ; i += 3)
  {
    v9 = i[-2];
    v10 = *(_QWORD *)&v9 - 1;
    if (__OFSUB__(*(_QWORD *)&v9, 1))
      break;
    if ((v10 & 0x8000000000000000) != 0)
    {
      v11 = v4[2];
      if (!v11)
        goto LABEL_33;
      v10 = v11 - 1;
    }
    else if (v10 >= v4[2])
    {
      goto LABEL_34;
    }
    v12 = (float32x2_t *)&v4[2 * v10];
    v13 = v12[5];
    v14 = vsub_f32(*i, v13);
    v15 = fabsf(v14.f32[0]);
    v16 = fabsf(v14.f32[1]);
    if (v15 < a2 && v16 < a2)
    {
      v18 = v12[4].u8[0];
      if (i[-1].i8[0] && i[-1].i8[0] == 1)
      {
LABEL_19:
        swift_bridgeObjectRelease();
      }
      else
      {
        v19 = sub_22655D55C();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
        {
          if (v18 == 1)
            goto LABEL_19;
          v24 = sub_22655D55C();
          swift_bridgeObjectRelease();
          if ((v24 & 1) == 0)
          {
LABEL_24:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v4 = sub_2264C1160(v4);
            v21 = v4[2];
            if (*(_QWORD *)&v9 >= v21)
              goto LABEL_35;
            v22 = v21 - 1;
            v23 = v21 - 1 - *(_QWORD *)&v9;
            if (v23 < 0)
              goto LABEL_37;
            memmove(&v4[2 * *(_QWORD *)&v9 + 4], &v4[2 * *(_QWORD *)&v9 + 6], 16 * v23);
            v4[2] = v22;
            *a1 = v4;
            goto LABEL_3;
          }
        }
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_2264C1160(v4);
      if (v10 >= v4[2])
        goto LABEL_36;
      v20 = (float32x2_t *)&v4[2 * v10];
      v20[4].i8[0] = 1;
      v20[5] = v13;
      goto LABEL_24;
    }
LABEL_3:
    if (!--v7)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_2264E3B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_22655C14C();
  swift_bridgeObjectRetain();
  sub_22655CE24();
  sub_22655C14C();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  v11 = a1;
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = 0;
    v6 = a2 + 40;
    do
    {
      v6 += 16;
      sub_22655D2EC();
      sub_22655CE24();
      sub_22655D544();
      sub_22655CE24();
      swift_bridgeObjectRelease();
      sub_22655CE24();
      sub_22655CF8C();
      sub_22655CE24();
      sub_22655CF8C();
      sub_22655CE24();
      sub_22655D3A0();
      sub_22655C14C();
      swift_bridgeObjectRelease();
      ++v5;
    }
    while (v4 != v5);
    swift_bridgeObjectRelease();
    a1 = v11;
  }
  swift_bridgeObjectRetain();
  sub_22655CE24();
  sub_22655C14C();
  result = swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain();
    v9 = 0;
    v10 = a1 + 40;
    do
    {
      v10 += 16;
      sub_22655D2EC();
      sub_22655CE24();
      sub_22655D544();
      sub_22655CE24();
      swift_bridgeObjectRelease();
      sub_22655CE24();
      sub_22655CF8C();
      sub_22655CE24();
      sub_22655CF8C();
      sub_22655CE24();
      sub_22655D3A0();
      sub_22655C14C();
      swift_bridgeObjectRelease();
      ++v9;
    }
    while (v8 != v9);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2264E3F2C(uint64_t a1, float a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  float32x2_t *v8;
  float32x2_t v9;
  uint64_t v10;
  float32x2_t v11;
  float v12;
  float v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;

  swift_bridgeObjectRetain_n();
  v4 = sub_2264D1B60(a1);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = 0;
    v7 = (_QWORD *)a1;
    while (v6 < *(_QWORD *)(v4 + 16))
    {
      v8 = (float32x2_t *)(v4 + 32 + 16 * v6);
      v9 = *v8;
      if ((*(_QWORD *)v8 & 0x8000000000000000) != 0)
        goto LABEL_27;
      if (v9)
      {
        v10 = 0;
        while (1)
        {
          if (*(_QWORD *)&v9 == v10)
          {
            __break(1u);
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
          if (*(_QWORD *)(a1 + 16) == v10)
            goto LABEL_25;
          v11 = vsub_f32(v8[1], *(float32x2_t *)(a1 + 32 + 8 * v10));
          v12 = fabsf(v11.f32[0]);
          v13 = fabsf(v11.f32[1]);
          if (v12 < a2 && v13 < a2)
            break;
          if (*(_QWORD *)&v9 == ++v10)
            goto LABEL_3;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_2264C10E8(v7);
        v15 = v7[2];
        if (*(_QWORD *)&v9 >= v15)
          goto LABEL_28;
        v16 = v15 - 1;
        v17 = v15 - 1 - *(_QWORD *)&v9;
        if (v17 < 0)
          goto LABEL_29;
        memmove(&v7[*(_QWORD *)&v9 + 4], &v7[*(_QWORD *)&v9 + 5], 8 * v17);
        v7[2] = v16;
      }
LABEL_3:
      if (++v6 == v5)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v7;
      }
    }
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    result = sub_22655D43C();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return a1;
  }
  return result;
}

uint64_t sub_2264E40E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double *v4;
  double v5;
  id v6;
  void *v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  id v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    sub_22655D37C();
    v4 = (double *)(a1 + 32);
    do
    {
      v5 = *v4++;
      objc_msgSend(objc_allocWithZone((Class)DelaunayPoint), sel_initWithValue_, v5);
      sub_22655D364();
      sub_22655D388();
      sub_22655D394();
      sub_22655D370();
      --v1;
    }
    while (v1);
  }
  v6 = objc_msgSend((id)objc_opt_self(), sel_shared);
  sub_22643F548(0, &qword_255846F50);
  v7 = (void *)sub_22655CEC0();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_computeTriangulation_, v7);

  sub_22643F548(0, &qword_255846F58);
  v9 = sub_22655CECC();

  if (!(v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
      goto LABEL_6;
LABEL_14:
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRetain();
  v10 = sub_22655D400();
  swift_bridgeObjectRelease();
  if (!v10)
    goto LABEL_14;
LABEL_6:
  v22 = v2;
  result = sub_22655D37C();
  if ((v10 & 0x8000000000000000) == 0)
  {
    v12 = 0;
    do
    {
      if ((v9 & 0xC000000000000001) != 0)
        v13 = (id)MEMORY[0x2276999E4](v12, v9);
      else
        v13 = *(id *)(v9 + 8 * v12 + 32);
      v14 = v13;
      ++v12;
      objc_msgSend(v13, sel_first);
      v16 = v15;
      objc_msgSend(v14, sel_second);
      v18 = v17;
      objc_msgSend(v14, sel_third);
      v20 = v19;
      type metadata accessor for CDTTriangle();
      swift_allocObject();
      sub_22650EA18(v16, v18, v20, 0.001);

      sub_22655D364();
      sub_22655D388();
      sub_22655D394();
      sub_22655D370();
    }
    while (v10 != v12);
    v21 = v22;
    swift_bridgeObjectRelease();
    return v21;
  }
  __break(1u);
  return result;
}

uint64_t sub_2264E43D4(const char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t ObjCClassFromMetadata;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v13;

  v2 = sub_22655CB84();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Constants();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v8 = objc_msgSend(v7, sel_bundleIdentifier);

  if (v8)
  {
    sub_22655CD88();

  }
  sub_22643F548(0, (unint64_t *)&qword_255843DE0);
  sub_22655D124();
  sub_22655CB90();
  v9 = sub_22655CB6C();
  v10 = sub_22655CFF8();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_226423000, v9, v10, a1, v11, 2u);
    MEMORY[0x22769A884](v11, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_2264E458C(unint64_t a1, float32x2_t *a2)
{
  uint64_t v4;
  unint64_t i;
  uint64_t v6;
  unint64_t v7;
  float32x2_t v8;
  uint64_t v9;
  float v10;
  float v11;
  float32x2_t v12;
  float32x2_t v13;
  float v14;
  float v15;
  float v16;
  float v17;
  float v18;
  float v19;
  float v20;
  float v21;
  float32x2_t v22;
  simd_float2 v23;
  float v24;
  float32x2_t v26;
  float32x2_t v27;
  float v28;
  float v30;
  float32x2_t v31;
  float32x2_t v32;
  float32x2_t v33;
  float32x2_t v34;
  float32x2_t v35;
  simd_float2 v36;
  float v37;
  float32x2_t v39;
  float v40;
  float v42;
  float v43;
  float v44;
  float v45;
  float v46;
  float v47;
  float32x2_t v48;
  float32x2_t v49;
  float32x2_t v50;
  float32x2_t *v52;
  float32x2_t v53;
  __int32 v54;
  float32x2_t v55;
  int v56;
  float32x2_t v57;
  uint64_t v58;

  v58 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
  {
LABEL_60:
    v4 = sub_22655D400();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
LABEL_3:
      v52 = a2;
      for (i = 0; ; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          v6 = MEMORY[0x2276999E4](i, a1);
          v7 = i + 1;
          if (__OFADD__(i, 1))
          {
LABEL_57:
            __break(1u);
            return v58;
          }
        }
        else
        {
          if (i >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_60;
          }
          v6 = *(_QWORD *)(a1 + 8 * i + 32);
          swift_retain();
          v7 = i + 1;
          if (__OFADD__(i, 1))
            goto LABEL_57;
        }
        v8 = *(float32x2_t *)(v6 + 16);
        if ((a2[4].i8[0] & 1) != 0)
        {
          v9 = *(_QWORD *)(v6 + 24);
          v10 = *((float *)&v9 + 1);
          LODWORD(v11) = HIDWORD(*(_QWORD *)(v6 + 16));
        }
        else
        {
          v22 = a2[2];
          v23 = (simd_float2)vsub_f32(v8, v22);
          v24 = fabsf(v23.f32[1]);
          if (fabsf(v23.f32[0]) < 0.0001 && v24 < 0.0001)
            goto LABEL_4;
          v26 = a2[3];
          v27 = vsub_f32(v8, v26);
          v28 = fabsf(v27.f32[1]);
          if (fabsf(v27.f32[0]) < 0.0001 && v28 < 0.0001)
            goto LABEL_4;
          LODWORD(v11) = HIDWORD(*(_QWORD *)(v6 + 16));
          LODWORD(v30) = HIDWORD(*(_QWORD *)&a2[2]);
          v23.f32[1] = v8.f32[1] - v22.f32[1];
          v54 = *(_QWORD *)(v6 + 16);
          v55 = (float32x2_t)v23;
          v31 = vsub_f32(v26, v22);
          v57 = a2[2];
          if (fabsf(_simd_orient_vf2(v23, (simd_float2)v31)) <= 0.0001)
          {
            v32 = vmul_f32(v55, v31);
            if (vaddv_f32(v32) > 0.0)
            {
              v33 = vsub_f32(v57, v26);
              v34 = vmul_f32(v33, v33);
              if ((vcgt_f32(vadd_f32(v34, (float32x2_t)vdup_lane_s32((int32x2_t)v34, 1)), vadd_f32(v32, (float32x2_t)vdup_lane_s32((int32x2_t)v32, 1))).u8[0] & 1) != 0)goto LABEL_4;
            }
          }
          v35 = *(float32x2_t *)(v6 + 24);
          v36 = (simd_float2)vsub_f32(v35, v57);
          v37 = fabsf(v36.f32[1]);
          if (fabsf(v36.f32[0]) < 0.0001 && v37 < 0.0001)
            goto LABEL_4;
          v39 = vsub_f32(v35, v26);
          v40 = fabsf(v39.f32[1]);
          if (fabsf(v39.f32[0]) < 0.0001 && v40 < 0.0001)
            goto LABEL_4;
          v56 = *(_QWORD *)(v6 + 24);
          LODWORD(v10) = HIDWORD(*(_QWORD *)(v6 + 24));
          v36.f32[1] = v35.f32[1] - v30;
          v53 = (float32x2_t)v36;
          if (fabsf(_simd_orient_vf2(v36, (simd_float2)v31)) <= 0.0001)
          {
            v8.i32[0] = v54;
            v48 = vmul_f32(v31, v53);
            if (vaddv_f32(v48) <= 0.0)
            {
              LODWORD(v9) = v56;
            }
            else
            {
              LODWORD(v9) = v56;
              v49 = vsub_f32(v57, v26);
              v50 = vmul_f32(v49, v49);
              if ((vcgt_f32(vadd_f32(v50, (float32x2_t)vdup_lane_s32((int32x2_t)v50, 1)), vadd_f32(v48, (float32x2_t)vdup_lane_s32((int32x2_t)v48, 1))).u8[0] & 1) != 0)goto LABEL_4;
            }
          }
          else
          {
            v8.i32[0] = v54;
            LODWORD(v9) = v56;
          }
        }
        v12 = a2[2];
        v13 = a2[3];
        v14 = v10 - v12.f32[1];
        v15 = v8.f32[0] - v12.f32[0];
        v16 = (float)(v10 - v12.f32[1]) * (float)(v8.f32[0] - v12.f32[0]);
        v17 = *(float *)&v9 - v12.f32[0];
        v18 = (float)(v11 - v12.f32[1]) * (float)(*(float *)&v9 - v12.f32[0]);
        v19 = vabds_f32(v16, v18);
        v20 = (float)(v10 - v13.f32[1]) * (float)(v8.f32[0] - v13.f32[0]);
        v21 = (float)(v11 - v13.f32[1]) * (float)(*(float *)&v9 - v13.f32[0]);
        if (vabds_f32(v20, v21) >= 1.4211e-14)
        {
          v42 = v16 - v18;
          if ((float)(v20 - v21) <= 0.0)
          {
            if (v19 >= 1.4211e-14 && v42 <= 0.0)
              goto LABEL_4;
          }
          else if (v19 >= 1.4211e-14 && v42 > 0.0)
          {
            goto LABEL_4;
          }
        }
        else if (v19 < 1.4211e-14)
        {
          goto LABEL_4;
        }
        v13.f32[0] = vsub_f32(v13, v12).f32[0];
        v43 = (float)(v11 - v12.f32[1]) * v13.f32[0];
        v44 = v15 * (float)(v13.f32[1] - v12.f32[1]);
        v12.f32[0] = vabds_f32(v43, v44);
        v45 = v14 * v13.f32[0];
        v46 = v17 * (float)(v13.f32[1] - v12.f32[1]);
        if (vabds_f32(v14 * v13.f32[0], v46) >= 1.4211e-14)
        {
          v47 = v43 - v44;
          if ((float)(v45 - v46) <= 0.0)
          {
            if (v12.f32[0] < 1.4211e-14 || v47 > 0.0)
            {
LABEL_43:
              sub_22655D364();
              sub_22655D388();
              sub_22655D394();
              sub_22655D370();
              a2 = v52;
              goto LABEL_5;
            }
          }
          else if (v12.f32[0] < 1.4211e-14 || v47 <= 0.0)
          {
            goto LABEL_43;
          }
        }
        else if (v12.f32[0] >= 1.4211e-14)
        {
          goto LABEL_43;
        }
LABEL_4:
        swift_release();
LABEL_5:
        if (v7 == v4)
          return v58;
      }
    }
  }
  return MEMORY[0x24BEE4AF8];
}

unint64_t sub_2264E49DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255846F48;
  if (!qword_255846F48)
  {
    v1 = type metadata accessor for CDTTriangle();
    result = MEMORY[0x22769A794](&unk_226568250, v1);
    atomic_store(result, (unint64_t *)&qword_255846F48);
  }
  return result;
}

float32x2_t *sub_2264E4A24(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  float v14;
  uint64_t v15;
  float *v16;
  float v17;
  float v18;
  unint64_t v19;
  unint64_t v20;
  float v21;
  unint64_t v22;
  float v23;
  float v24;
  float v25;
  double v26;
  float v27;
  double v28;
  double v29;
  double v31;
  double v32;
  __int128 v33;
  __int128 v34;
  double v35;
  uint64_t v36;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v36 = MEMORY[0x24BEE4AF8];
    sub_2264C7968(0, v1, 0);
    v5 = 0;
    v6 = v36;
    v7 = (_QWORD *)(a1 + 32);
    v8 = *(_QWORD *)(v36 + 16);
    do
    {
      *(_QWORD *)&v4 = v7[v5];
      v9 = *(_QWORD *)(v36 + 24);
      if (v8 >= v9 >> 1)
      {
        v33 = v4;
        sub_2264C7968(v9 > 1, v8 + 1, 1);
        v4 = v33;
      }
      ++v5;
      *(_QWORD *)(v36 + 16) = v8 + 1;
      *(_DWORD *)(v36 + 4 * v8++ + 32) = v4;
    }
    while (v1 != v5);
    sub_2264C7968(0, v1, 0);
    v11 = *(_QWORD *)(v2 + 16);
    do
    {
      *(_QWORD *)&v10 = *v7;
      v12 = *(_QWORD *)(v2 + 24);
      if (v11 >= v12 >> 1)
      {
        v34 = v10;
        sub_2264C7968(v12 > 1, v11 + 1, 1);
        v10 = v34;
      }
      *(_QWORD *)(v2 + 16) = v11 + 1;
      *(_DWORD *)(v2 + 4 * v11 + 32) = DWORD1(v10);
      ++v7;
      ++v11;
      --v1;
    }
    while (v1);
  }
  else
  {
    v6 = MEMORY[0x24BEE4AF8];
  }
  v13 = *(_QWORD *)(v6 + 16);
  if (!v13)
  {
    swift_bridgeObjectRelease();
LABEL_26:
    swift_bridgeObjectRelease();
    return 0;
  }
  v14 = *(float *)(v6 + 32);
  v15 = v13 - 1;
  if (v15)
  {
    v16 = (float *)(v6 + 36);
    do
    {
      v17 = *v16++;
      v18 = v17;
      if (v17 < v14)
        v14 = v18;
      --v15;
    }
    while (v15);
  }
  v19 = sub_2264DC4D8(v6);
  swift_bridgeObjectRelease();
  if ((v19 & 0x100000000) != 0)
    goto LABEL_26;
  v20 = sub_2264DC480(v2);
  if ((v20 & 0x100000000) != 0)
    goto LABEL_26;
  v21 = *(float *)&v20;
  v22 = sub_2264DC4D8(v2);
  swift_bridgeObjectRelease();
  if ((v22 & 0x100000000) != 0)
    return 0;
  v23 = *(float *)&v22 - v21;
  if ((float)(*(float *)&v22 - v21) <= (float)(*(float *)&v19 - v14))
    v23 = *(float *)&v19 - v14;
  v24 = v23 * 0.1;
  v25 = v21 - v24;
  *(float *)&v26 = (float)((float)(v14 - v24) + (float)(v24 + *(float *)&v19)) * 0.5;
  v27 = (float)((float)(v24 + *(float *)&v19) - (float)(v14 - v24))
      + (float)((float)((float)((float)(v24 + *(float *)&v22) - v25) + (float)((float)(v24 + *(float *)&v22) - v25))
              / 1.7321);
  *(float *)&v28 = *(float *)&v26 - (float)(v27 * 0.5);
  *((float *)&v28 + 1) = v25;
  *(float *)&v29 = *(float *)&v26 + (float)(v27 * 0.5);
  *((float *)&v29 + 1) = v25;
  v32 = v29;
  v35 = v28;
  *((float *)&v26 + 1) = v25 + (float)((float)(v27 * 1.7321) * 0.5);
  v31 = v26;
  type metadata accessor for CDTTriangle();
  swift_allocObject();
  return sub_22650EA18(v35, v32, v31, 0.001);
}

uint64_t sub_2264E4CE4(unint64_t a1, uint64_t a2, char **a3)
{
  char *v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  float32x2_t *v16;
  float32x2_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t result;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = (char *)MEMORY[0x24BEE4AF8];
  *(_QWORD *)a2 = MEMORY[0x24BEE4AF8];
  *a3 = v6;
  if (a1 >> 62)
    goto LABEL_43;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v39 = a1;
  if (!v7)
  {
LABEL_44:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  v8 = 0;
  v41 = a1 & 0xC000000000000001;
  v38 = a1 & 0xFFFFFFFFFFFFFF8;
  v9 = (char *)MEMORY[0x24BEE4AF8];
  v10 = (_QWORD *)MEMORY[0x24BEE4B00];
  v40 = v7;
  while (1)
  {
    if (v41)
    {
      v11 = MEMORY[0x2276999E4](v8, v39);
      v12 = __OFADD__(v8, 1);
      v13 = v8 + 1;
      if (v12)
        goto LABEL_41;
    }
    else
    {
      if (v8 >= *(_QWORD *)(v38 + 16))
        goto LABEL_42;
      v11 = swift_retain();
      v12 = __OFADD__(v8, 1);
      v13 = v8 + 1;
      if (v12)
      {
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        swift_bridgeObjectRetain();
        v7 = sub_22655D400();
        v39 = a1;
        if (!v7)
          goto LABEL_44;
        goto LABEL_3;
      }
    }
    v42 = v13;
    a1 = v11;
    v14 = sub_22650EC78();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
      break;
LABEL_4:
    swift_release();
    swift_bridgeObjectRelease();
    v8 = v42;
    if (v42 == v40)
      goto LABEL_44;
  }
  v16 = (float32x2_t *)(v14 + 32);
  while (1)
  {
    v17 = *v16;
    if (!v10[2])
      break;
    v18 = sub_2265349B8(*v16);
    if ((v19 & 1) == 0)
      break;
    LODWORD(v20) = *(_DWORD *)(v10[7] + 4 * v18);
LABEL_33:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v9 = sub_226486AEC(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    v36 = *((_QWORD *)v9 + 2);
    v35 = *((_QWORD *)v9 + 3);
    a1 = v36 + 1;
    if (v36 >= v35 >> 1)
      v9 = sub_226486AEC((char *)(v35 > 1), v36 + 1, 1, v9);
    *((_QWORD *)v9 + 2) = a1;
    *(_DWORD *)&v9[4 * v36 + 32] = v20;
    *a3 = v9;
    ++v16;
    if (!--v15)
      goto LABEL_4;
  }
  v21 = *(_QWORD **)a2;
  v20 = *(_QWORD *)(*(_QWORD *)a2 + 16);
  if (!HIDWORD(v20))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v21 = sub_226486C2C(0, v20 + 1, 1, v21);
    v23 = v21[2];
    v22 = v21[3];
    if (v23 >= v22 >> 1)
      v21 = sub_226486C2C((_QWORD *)(v22 > 1), v23 + 1, 1, v21);
    v21[2] = v23 + 1;
    v21[v23 + 4] = v17;
    *(_QWORD *)a2 = v21;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v43 = v10;
    a1 = (unint64_t)v10;
    v26 = sub_2265349B8(v17);
    v27 = v10[2];
    v28 = (v25 & 1) == 0;
    v29 = v27 + v28;
    if (__OFADD__(v27, v28))
    {
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    v30 = v25;
    if (v10[3] < v29)
    {
      sub_2265420D4(v29, isUniquelyReferenced_nonNull_native);
      a1 = (unint64_t)v43;
      v31 = sub_2265349B8(v17);
      if ((v30 & 1) != (v32 & 1))
        goto LABEL_46;
      v26 = v31;
      v10 = v43;
      if ((v30 & 1) == 0)
        goto LABEL_30;
LABEL_28:
      *(_DWORD *)(v10[7] + 4 * v26) = v20;
LABEL_32:
      swift_bridgeObjectRelease();
      v9 = *a3;
      goto LABEL_33;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v10 = v43;
      if ((v25 & 1) != 0)
        goto LABEL_28;
    }
    else
    {
      a1 = (unint64_t)&v43;
      sub_22654831C();
      v10 = v43;
      if ((v30 & 1) != 0)
        goto LABEL_28;
    }
LABEL_30:
    v10[(v26 >> 6) + 8] |= 1 << v26;
    *(float32x2_t *)(v10[6] + 8 * v26) = v17;
    *(_DWORD *)(v10[7] + 4 * v26) = v20;
    v33 = v10[2];
    v12 = __OFADD__(v33, 1);
    v34 = v33 + 1;
    if (v12)
      goto LABEL_40;
    v10[2] = v34;
    goto LABEL_32;
  }
  sub_22655D3DC();
  __break(1u);
LABEL_46:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558443D0);
  result = sub_22655D5A4();
  __break(1u);
  return result;
}

uint64_t storeEnumTagSinglePayload for CDTTriangulator.VertexType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2264E5124 + 4 * byte_226566AA5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2264E5158 + 4 * byte_226566AA0[v4]))();
}

uint64_t sub_2264E5158(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264E5160(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2264E5168);
  return result;
}

uint64_t sub_2264E5174(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2264E517CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2264E5180(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264E5188(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CDTTriangulator.VertexType()
{
  return &type metadata for CDTTriangulator.VertexType;
}

unint64_t sub_2264E51A8()
{
  unint64_t result;

  result = qword_255846F60;
  if (!qword_255846F60)
  {
    result = MEMORY[0x22769A794](&unk_226566BDC, &type metadata for CDTTriangulator.VertexType);
    atomic_store(result, (unint64_t *)&qword_255846F60);
  }
  return result;
}

uint64_t sub_2264E51EC()
{
  unint64_t v0;

  v0 = sub_22655D454();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

unint64_t sub_2264E5234()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000043;
  else
    return 0xD000000000000044;
}

double sub_2264E5270()
{
  _OWORD *v0;
  double result;

  type metadata accessor for MeshLoader();
  v0 = (_OWORD *)swift_allocObject();
  result = 0.0;
  v0[1] = 0u;
  v0[2] = 0u;
  v0[3] = 0u;
  v0[4] = 0u;
  v0[5] = 0u;
  v0[6] = 0u;
  qword_25585AFC8 = (uint64_t)v0;
  return result;
}

uint64_t sub_2264E52A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v14;

  v4 = sub_22655C32C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255847148);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22655C8D8();
  v11 = sub_22655C41C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    sub_22643D7E4((uint64_t)v10, &qword_255847148);
    sub_2264E91F4();
    swift_allocError();
    *v12 = 0;
    return swift_willThrow();
  }
  else
  {
    sub_22655C404();
    sub_22643D7E4((uint64_t)v10, &qword_255847148);
    sub_2264E5430(a3, (uint64_t)v7);
    sub_22655C2FC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return swift_release();
  }
}

uint64_t sub_2264E5430@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  uint64_t v29;
  char *v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  __int128 v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v50 = a1;
  v60 = a2;
  v2 = sub_22655CB24();
  v3 = *(_QWORD *)(v2 - 8);
  v54 = v2;
  *(_QWORD *)&v55 = v3;
  MEMORY[0x24BDAC7A8](v2);
  v53 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22655CB30();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v47 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255847120);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v51 = (char *)&v47 - v16;
  v17 = sub_22655C2F0();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v47 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v48 = (char *)&v47 - v21;
  v22 = sub_22655C32C();
  v58 = *(_QWORD *)(v22 - 8);
  v59 = v22;
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22655C338();
  v57 = v24;
  v25 = v5;
  v26 = v54;
  sub_22655C308();
  v52 = v6;
  v27 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v56 = v11;
  v28 = v11;
  v29 = v17;
  v30 = v53;
  v27(v8, v28, v25);
  sub_226437F28(&qword_255847128, (uint64_t (*)(uint64_t))MEMORY[0x24BDE79A0], MEMORY[0x24BDE79A8]);
  v49 = v8;
  sub_22655CE60();
  sub_226437F28(&qword_255847130, (uint64_t (*)(uint64_t))MEMORY[0x24BDE7990], MEMORY[0x24BDE7998]);
  sub_22655D148();
  v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  v32 = v29;
  if (v31(v14, 1, v29) == 1)
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v30, v26);
    v33 = 1;
    v34 = (uint64_t)v51;
  }
  else
  {
    v35 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    v36 = v47;
    v35(v47, v14, v32);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v30, v26);
    v37 = v51;
    v35(v51, v36, v32);
    v33 = 0;
    v34 = (uint64_t)v37;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v34, v33, 1, v32);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v56, v25);
  if (v31((char *)v34, 1, v32) == 1)
  {
    sub_22643D7E4(v34, &qword_255847120);
    v38 = v57;
  }
  else
  {
    v39 = v48;
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v48, v34, v32);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255847138);
    v40 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    v41 = swift_allocObject();
    v55 = xmmword_22655F8F0;
    *(_OWORD *)(v41 + 16) = xmmword_22655F8F0;
    v56 = (char *)(v41 + v40);
    sub_22655C2E4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255847140);
    v42 = sub_22655C2CC();
    v43 = *(_QWORD *)(v42 - 8);
    v44 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = v55;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v43 + 16))(v45 + v44, v50, v42);
    sub_22655C2D8();
    sub_22655CB18();
    v38 = v57;
    sub_22655C314();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v39, v32);
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v58 + 32))(v60, v38, v59);
}

void sub_2264E58B0(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255847108);
  MEMORY[0x24BDAC7A8](v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255847118);
  MEMORY[0x24BDAC7A8](v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255842910);
  MEMORY[0x24BDAC7A8](v5);
  __asm { BR              X10 }
}

uint64_t sub_2264E59B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 16);
  if (!v5)
    return sub_22655C2C0();
  sub_2265143CC(v5, (__n128)0);
  sub_22655C2C0();
  sub_22655C944();
  sub_22655C2CC();
  sub_22655CB0C();
  swift_bridgeObjectRetain();
  sub_22655C944();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  sub_22655CAF4();
  swift_bridgeObjectRetain();
  sub_22655C950();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255847110);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v0, 0, 1, v6);
  return sub_22655C2B4();
}

void sub_2264E5BA8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9, unsigned __int8 a10, unsigned __int8 a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  float32x2_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;

  v30 = a8;
  v33 = a7;
  v34 = a6;
  v40 = a5;
  v41 = a1;
  v36 = a4;
  v37 = a3;
  v42 = a9;
  v38 = a2;
  v28 = a14;
  v39 = a13;
  v32 = a12;
  v31 = a11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255840818);
  MEMORY[0x24BDAC7A8](v14);
  v35 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848090);
  MEMORY[0x24BDAC7A8](v16);
  MEMORY[0x24BDAC7A8](v17);
  MEMORY[0x24BDAC7A8](v18);
  v19 = type metadata accessor for CapturedRoom.Surface.Curve(0);
  MEMORY[0x24BDAC7A8](v19);
  MEMORY[0x24BDAC7A8](v20);
  MEMORY[0x24BDAC7A8](v21);
  v29 = a10;
  if ((a10 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255841D18);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_22655FA80;
    v23 = (float32x2_t)v42.n128_u64[0];
    *(float *)&v24 = -0.5 * v42.n128_f32[0];
    *(float *)&v25 = -0.5 * v42.n128_f32[0];
    HIDWORD(v25) = vmuls_lane_f32(-0.5, (float32x2_t)v42.n128_u64[0], 1);
    *(float *)&v26 = 0.5 * v42.n128_f32[0];
    *(float *)&v27 = 0.5 * v42.n128_f32[0];
    HIDWORD(v27) = HIDWORD(v25);
    *(_QWORD *)(v22 + 32) = v25;
    *(_QWORD *)(v22 + 40) = v27;
    HIDWORD(v26) = vmuls_lane_f32(0.5, v23, 1);
    HIDWORD(v24) = HIDWORD(v26);
    *(_QWORD *)(v22 + 48) = v26;
    *(_QWORD *)(v22 + 56) = v24;
  }
  __asm { BR              X10 }
}

_QWORD *sub_2264E5DE4(__n128 a1)
{
  uint64_t v1;
  __n128 v2;
  __int128 v3;
  __int128 v4;
  __n128 v5;
  __n128 v6;

  *(__n128 *)(v1 - 176) = a1;
  swift_bridgeObjectRelease();
  v2 = sub_2264510E8(*(int8x16_t *)(v1 - 160));
  v3 = *(_OWORD *)(v1 - 176);
  *(float32x2_t *)&v4 = vadd_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)&v3, 0), (float32x2_t)v2.n128_u64[0]);
  *((float *)&v4 + 2) = *(float *)&v3 + v2.n128_f32[2];
  HIDWORD(v4) = 0;
  *(_OWORD *)(v1 - 176) = v4;
  v5 = sub_226451174((__n128)0);
  if (qword_25583F850 != -1)
  {
    *(__n128 *)(v1 - 160) = v5;
    swift_once();
    v5 = *(__n128 *)(v1 - 160);
  }
  return sub_22645A610(*(_QWORD **)(v1 - 240), v5, *(float32x4_t *)(v1 - 176), 0.0001, v6);
}

uint64_t sub_2264E64D8@<X0>(uint64_t a1@<X8>, float32x4_t a2@<Q0>, float a3@<S1>)
{
  unint64_t v3;
  float v4;
  uint64_t v7;
  uint64_t v8;
  __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  __int8 *v12;
  double v13;
  __n128 v14;
  uint64_t v15;
  float32x4_t v16;
  uint64_t v17;
  int64_t v18;
  _QWORD *v19;
  uint64_t v20;
  float32x4_t v21;
  unint64_t v22;
  __int128 v23;
  unint64_t v24;
  char *v25;
  _QWORD *v26;
  float32x4_t v27;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  unint64_t v30;
  float32x4_t v31;
  int32x4_t v32;
  __int32 v33;
  float32x4_t v34;
  float32x4_t v35;
  unint64_t v36;
  unint64_t v37;
  int32x4_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  float32x4_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  int64_t v46;
  unint64_t v47;
  __int128 v48;
  unint64_t v49;
  unint64_t v50;
  int64_t v51;
  unint64_t v52;
  unint64_t v53;
  int64_t v54;
  int64_t v55;
  char *v56;
  int32x4_t v57;
  float32x4_t v58;
  float32x4_t v59;
  int32x4_t v60;
  int32x4_t v61;
  unint64_t v62;
  int64_t v63;
  float32x4_t v64;
  int32x4_t v65;
  float32x4_t v66;
  int32x4_t v67;
  int v68;
  char *v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  BOOL v78;
  unsigned int v79;
  unint64_t v80;
  unint64_t v81;
  int64_t v82;
  __int128 v83;
  int64_t v84;
  float32x4_t v85;
  unint64_t v86;
  int64_t v87;
  int64_t v88;
  int32x4_t v89;
  unint64_t v90;
  int64_t v91;
  int32x4_t v92;
  int64_t v93;
  int32x4_t v94;
  float32x4_t v95;
  int32x4_t v96;
  float32x4_t v97;
  int64_t v98;
  unint64_t v99;
  int64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  char *v104;
  unint64_t v105;
  unint64_t v106;
  unsigned int v107;
  unint64_t v108;
  unint64_t v109;
  int64_t v110;
  int64_t v111;
  unint64_t v112;
  int64_t v113;
  int64_t v114;
  float32x4_t v115;
  int32x4_t v116;
  unint64_t v117;
  unint64_t v118;
  int32x4_t v119;
  int64_t v120;
  int32x4_t *v121;
  int64_t v122;
  unint64_t v123;
  int64_t v124;
  unint64_t v125;
  unint64_t v126;
  unint64_t v127;
  char *v128;
  unint64_t v129;
  unint64_t v130;
  unsigned int v131;
  unint64_t v132;
  unint64_t v133;
  int64_t v134;
  int64_t v135;
  unint64_t v136;
  int64_t v137;
  int64_t v138;
  float32x4_t v139;
  int32x4_t v140;
  unint64_t v141;
  unint64_t v142;
  int32x4_t v143;
  int64_t v144;
  int32x4_t *v145;
  int64_t v146;
  unint64_t v147;
  int64_t v148;
  unint64_t v149;
  unint64_t v150;
  unint64_t v151;
  char *v152;
  unint64_t v153;
  unint64_t v154;
  unsigned int v155;
  unint64_t v156;
  unint64_t v157;
  int64_t v158;
  unint64_t v159;
  unint64_t v160;
  int64_t v161;
  int64_t v162;
  float32x4_t v163;
  int32x4_t v164;
  float32x2_t v165;
  float32x2_t v166;
  unint64_t v167;
  unint64_t v168;
  float32x4_t v169;
  int64_t v170;
  float32x4_t *v171;
  unint64_t v172;
  unint64_t v173;
  unint64_t v174;
  unint64_t v175;
  unint64_t v176;
  unint64_t v177;
  unint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t result;
  _QWORD *v184;
  _QWORD *v185;
  _QWORD *v186;
  _QWORD *v187;
  _QWORD *v188;
  _QWORD *v189;
  _QWORD *v190;
  char *v191;
  char *v192;
  char *v193;
  char *v194;
  char *v195;
  char *v196;
  int64_t v197;
  _QWORD *v198;
  _QWORD *v199;
  _QWORD *v200;
  _QWORD *v201;
  int64_t v202;
  _QWORD *v203;
  _QWORD *v204;
  _QWORD *v205;
  _QWORD *v206;
  int64_t v207;
  char *v208;
  char *v209;
  char *v210;
  char *v211;
  int64_t v212;
  _QWORD *v213;
  _QWORD *v214;
  _QWORD *v215;
  _QWORD *v216;
  int64_t v217;
  _QWORD *v218;
  _QWORD *v219;
  _QWORD *v220;
  _QWORD *v221;
  int64_t v222;
  char *v223;
  char *v224;
  char *v225;
  char *v226;
  int64_t v227;
  _QWORD *v228;
  _QWORD *v229;
  _QWORD *v230;
  _QWORD *v231;
  int64_t v232;
  _QWORD *v233;
  _QWORD *v234;
  _QWORD *v235;
  _QWORD *v236;
  int64_t v237;
  char *v238;
  char *v239;
  char *v240;
  char *v241;
  int64_t v242;
  _QWORD *v243;
  _QWORD *v244;
  _QWORD *v245;
  _QWORD *v246;
  int64_t v247;
  _QWORD *v248;
  _QWORD *v249;
  _QWORD *v250;
  _QWORD *v251;
  int64_t v252;
  int32x4_t v253;
  float32x4_t v254;
  int32x4_t v255;
  int32x4_t v256;
  __int128 v257;
  __int128 v258;
  __int8 *v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  char *v263;
  float32x4_t v264;
  int32x4_t v265;
  float32x4_t v266;
  float32x4_t v267;
  int32x4_t v268;
  _QWORD *v269;
  float32x4_t v270;
  int32x4_t v271;
  float32x4_t v272;
  int32x4_t v273;
  _QWORD *v274;
  uint64_t v275;

  v273 = (int32x4_t)a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255847108);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v253.i8[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255847118);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v253.i8[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v261 = __swift_instantiateConcreteTypeFromMangledName(&qword_255842910);
  v260 = *(_QWORD *)(v261 - 8);
  MEMORY[0x24BDAC7A8](v261);
  v259 = &v253.i8[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_25583F850 != -1)
    swift_once();
  v269 = sub_226459E38((float32x4_t)v273, (__n128)0, v13, v14);
  v17 = v269[2];
  v18 = *(_QWORD *)(v17 + 16);
  v19 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v18)
  {
    v274 = (_QWORD *)MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_2264C1310(0, v18, 0);
    v20 = 0;
    v4 = vmuls_lane_f32(0.5, (float32x4_t)v273, 2);
    v19 = v274;
    v3 = v274[2];
    do
    {
      v21 = *(float32x4_t *)(v17 + 16 * v20 + 32);
      v274 = v19;
      v22 = v19[3];
      if (v3 >= v22 >> 1)
      {
        v272 = v21;
        sub_2264C1310(v22 > 1, v3 + 1, 1);
        v21 = v272;
        v19 = v274;
      }
      HIDWORD(v23) = 0;
      *(_QWORD *)&v23 = v21.i64[0];
      *((float *)&v23 + 2) = v21.f32[2] - v4;
      ++v20;
      v19[2] = v3 + 1;
      *(_OWORD *)&v19[2 * v3++ + 4] = v23;
    }
    while (v18 != v20);
    swift_bridgeObjectRelease();
  }
  v24 = v19[2];
  if (HIDWORD(v24))
  {
    result = sub_22655D3DC();
    __break(1u);
    return result;
  }
  v26 = (_QWORD *)v269[3];
  v25 = (char *)v269[4];
  v270 = (float32x4_t)COERCE_UNSIGNED_INT(-*(float *)v273.i32);
  v271 = vdupq_lane_s32(0, 0);
  v27 = (float32x4_t)v273;
  v27.f32[0] = -*(float *)v273.i32;
  v272 = v27;
  v16.f32[0] = -*(float *)&v273.i32[1];
  v267 = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  v263 = v9;
  v262 = v12;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v29 = v19[3], v30 = v29 >> 1, v29 >> 1 < v24 + 4))
  {
    v19 = sub_226486AE0(isUniquelyReferenced_nonNull_native, v24 + 4, 1, v19);
    v29 = v19[3];
    v30 = v29 >> 1;
  }
  v34 = v270;
  v32 = v271;
  v35 = v272;
  v31 = (float32x4_t)v273;
  v32.i32[0] = v273.i32[0];
  v33 = v267.i32[0];
  v34.i32[1] = v267.i32[0];
  v35.i32[3] = 0;
  v36 = v19[2];
  v37 = v36 + 1;
  v271 = v32;
  v272 = v35;
  v268 = (int32x4_t)v34;
  if (v30 <= v36)
  {
    v184 = sub_226486AE0((_QWORD *)(v29 > 1), v36 + 1, 1, v19);
    v33 = v267.i32[0];
    v34 = (float32x4_t)v268;
    v35 = v272;
    v31 = (float32x4_t)v273;
    v32 = v271;
    v19 = v184;
    v29 = v184[3];
    v30 = v29 >> 1;
  }
  v38 = v32;
  v38.i32[1] = v33;
  v34.i32[2] = v31.i32[2];
  v19[2] = v37;
  *(float32x4_t *)&v19[2 * v36 + 4] = v35;
  v39 = v36 + 2;
  v267 = v34;
  v265 = v38;
  if ((uint64_t)v30 < (uint64_t)(v36 + 2))
  {
    v185 = sub_226486AE0((_QWORD *)(v29 > 1), v36 + 2, 1, v19);
    v31 = (float32x4_t)v273;
    v32.i32[3] = v271.i32[3];
    v38 = v265;
    v34 = v267;
    v19 = v185;
  }
  v38.i32[2] = v31.i32[2];
  v19[2] = v39;
  *(float32x4_t *)&v19[2 * v37 + 4] = v34;
  v40 = v19[3];
  v41 = v36 + 3;
  v264 = (float32x4_t)v38;
  if ((uint64_t)(v36 + 3) > (uint64_t)(v40 >> 1))
  {
    v186 = sub_226486AE0((_QWORD *)(v40 > 1), v36 + 3, 1, v19);
    v31 = (float32x4_t)v273;
    v32.i32[3] = v271.i32[3];
    v38 = (int32x4_t)v264;
    v19 = v186;
  }
  v42 = v31;
  v42.i32[3] = v32.i32[3];
  v19[2] = v41;
  *(int32x4_t *)&v19[2 * v39 + 4] = v38;
  v43 = v19[3];
  v266 = v42;
  if ((uint64_t)(v36 + 4) > (uint64_t)(v43 >> 1))
  {
    v187 = sub_226486AE0((_QWORD *)(v43 > 1), v36 + 4, 1, v19);
    v42 = v266;
    v19 = v187;
  }
  v19[2] = v36 + 4;
  *(float32x4_t *)&v19[2 * v41 + 4] = v42;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v26 = sub_226486AE0(0, v26[2] + 1, 1, v26);
  v45 = v26[2];
  v44 = v26[3];
  v46 = v44 >> 1;
  v47 = v45 + 1;
  if (v44 >> 1 <= v45)
  {
    v26 = sub_226486AE0((_QWORD *)(v44 > 1), v45 + 1, 1, v26);
    v44 = v26[3];
    v46 = v44 >> 1;
  }
  v26[2] = v47;
  v48 = xmmword_226560090;
  *(_OWORD *)&v26[2 * v45 + 4] = xmmword_226560090;
  v49 = v45 + 2;
  if (v46 < (uint64_t)(v45 + 2))
  {
    v258 = xmmword_226560090;
    v188 = sub_226486AE0((_QWORD *)(v44 > 1), v45 + 2, 1, v26);
    v48 = v258;
    v26 = v188;
  }
  v26[2] = v49;
  *(_OWORD *)&v26[2 * v47 + 4] = v48;
  v50 = v26[3];
  v51 = v45 + 3;
  if ((uint64_t)(v45 + 3) > (uint64_t)(v50 >> 1))
  {
    v258 = v48;
    v189 = sub_226486AE0((_QWORD *)(v50 > 1), v45 + 3, 1, v26);
    v48 = v258;
    v26 = v189;
  }
  v26[2] = v51;
  *(_OWORD *)&v26[2 * v49 + 4] = v48;
  v52 = v26[3];
  if ((uint64_t)(v45 + 4) > (uint64_t)(v52 >> 1))
  {
    v258 = v48;
    v190 = sub_226486AE0((_QWORD *)(v52 > 1), v45 + 4, 1, v26);
    v48 = v258;
    v26 = v190;
  }
  v26[2] = v45 + 4;
  v53 = (unint64_t)&v26[2 * v51];
  *(_OWORD *)(v53 + 32) = v48;
  v54 = (v24 + 3);
  if (v24 >= 0xFFFFFFFD)
  {
    __break(1u);
    goto LABEL_156;
  }
  v53 = (unint64_t)&v275;
  *(_QWORD *)&v258 = a1;
  v3 = *((_QWORD *)v25 + 2);
  v55 = v3 + 6;
  if (__OFADD__(v3, 6))
  {
LABEL_156:
    __break(1u);
LABEL_157:
    v191 = sub_226486AEC((char *)(v53 > 1), v51, 1, v25);
    v64 = v272;
    v67 = v273;
    v66 = v266;
    v65 = v271;
    v25 = v191;
    v53 = *((_QWORD *)v191 + 3);
    v62 = v53 >> 1;
    goto LABEL_40;
  }
  v56 = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)v56 || (v53 = *((_QWORD *)v25 + 3), v62 = v53 >> 1, (uint64_t)(v53 >> 1) < v55))
  {
    if ((uint64_t)v3 <= v55)
      v63 = v3 + 6;
    else
      v63 = v3;
    v25 = sub_226486AEC(v56, v63, 1, v25);
    v53 = *((_QWORD *)v25 + 3);
    v62 = v53 >> 1;
  }
  v65 = v271;
  v64 = v272;
  v66 = v266;
  v67 = v273;
  LODWORD(v9) = v24 + 1;
  v3 = *((_QWORD *)v25 + 2);
  v51 = v3 + 1;
  if (v62 <= v3)
    goto LABEL_157;
LABEL_40:
  v68 = v24 + 2;
  *((_QWORD *)v25 + 2) = v51;
  v69 = &v25[4 * v3];
  *((_DWORD *)v69 + 8) = v24;
  v70 = v3 + 2;
  if ((uint64_t)v62 < (uint64_t)(v3 + 2))
  {
    v192 = sub_226486AEC((char *)(v53 > 1), v3 + 2, 1, v25);
    v64 = v272;
    v67 = v273;
    v66 = v266;
    v65 = v271;
    v25 = v192;
  }
  *((_QWORD *)v25 + 2) = v70;
  *(_DWORD *)&v25[4 * v51 + 32] = (_DWORD)v9;
  v71 = *((_QWORD *)v25 + 3);
  v72 = v3 + 3;
  if ((uint64_t)(v3 + 3) > (uint64_t)(v71 >> 1))
  {
    v193 = sub_226486AEC((char *)(v71 > 1), v3 + 3, 1, v25);
    v64 = v272;
    v67 = v273;
    v66 = v266;
    v65 = v271;
    v25 = v193;
  }
  *((_QWORD *)v25 + 2) = v72;
  *(_DWORD *)&v25[4 * v70 + 32] = v68;
  v73 = *((_QWORD *)v25 + 3);
  v74 = v3 + 4;
  if ((uint64_t)(v3 + 4) > (uint64_t)(v73 >> 1))
  {
    v194 = sub_226486AEC((char *)(v73 > 1), v3 + 4, 1, v25);
    v64 = v272;
    v67 = v273;
    v66 = v266;
    v65 = v271;
    v25 = v194;
  }
  *((_QWORD *)v25 + 2) = v74;
  *(_DWORD *)&v25[4 * v72 + 32] = v24;
  v75 = *((_QWORD *)v25 + 3);
  v76 = v3 + 5;
  if ((uint64_t)(v3 + 5) > (uint64_t)(v75 >> 1))
  {
    v195 = sub_226486AEC((char *)(v75 > 1), v3 + 5, 1, v25);
    v64 = v272;
    v67 = v273;
    v66 = v266;
    v65 = v271;
    v25 = v195;
  }
  *((_QWORD *)v25 + 2) = v76;
  *(_DWORD *)&v25[4 * v74 + 32] = v68;
  v77 = *((_QWORD *)v25 + 3);
  if ((uint64_t)(v3 + 6) > (uint64_t)(v77 >> 1))
  {
    v196 = sub_226486AEC((char *)(v77 > 1), v3 + 6, 1, v25);
    v64 = v272;
    v67 = v273;
    v66 = v266;
    v65 = v271;
    v25 = v196;
  }
  *((_QWORD *)v25 + 2) = v3 + 6;
  *(_DWORD *)&v25[4 * v76 + 32] = v54;
  v78 = __CFADD__((_DWORD)v24, 4);
  v79 = v24 + 4;
  if (v78)
  {
    __break(1u);
  }
  else
  {
    v54 = v19[2];
    v69 = (char *)(v54 + 3);
    if (!__OFADD__(v54, 3))
    {
      v4 = *(float *)&v67.i32[2];
      v80 = v19[3];
      v81 = v80 >> 1;
      if ((uint64_t)(v80 >> 1) >= (uint64_t)v69)
        goto LABEL_53;
      goto LABEL_160;
    }
  }
  __break(1u);
LABEL_160:
  if (v54 <= (uint64_t)v69)
    v197 = (int64_t)v69;
  else
    v197 = v54;
  v198 = sub_226486AE0((_QWORD *)1, v197, 1, v19);
  v64 = v272;
  v67 = v273;
  v66 = v266;
  v65 = v271;
  v19 = v198;
  v54 = v198[2];
  v80 = v198[3];
  v81 = v80 >> 1;
LABEL_53:
  *(float *)v57.i32 = v4 + a3;
  v82 = v54 + 1;
  if (v81 <= v54)
  {
    v256 = v57;
    v199 = sub_226486AE0((_QWORD *)(v80 > 1), v54 + 1, 1, v19);
    v57 = v256;
    v64 = v272;
    v67 = v273;
    v66 = v266;
    v65 = v271;
    v19 = v199;
    v80 = v199[3];
    v81 = v80 >> 1;
  }
  *(_QWORD *)&v83 = 0;
  HIDWORD(v83) = 0;
  v19[2] = v82;
  *(float32x4_t *)&v19[2 * v54 + 4] = v64;
  v84 = v54 + 2;
  v85 = v270;
  if ((uint64_t)v81 < v54 + 2)
  {
    v256 = v57;
    v200 = sub_226486AE0((_QWORD *)(v80 > 1), v54 + 2, 1, v19);
    v57 = v256;
    v64 = v272;
    v67 = v273;
    v66 = v266;
    v85 = v270;
    v65 = v271;
    *(_QWORD *)&v83 = 0;
    HIDWORD(v83) = 0;
    v19 = v200;
  }
  DWORD2(v83) = v57.i32[0];
  v19[2] = v84;
  *(float32x4_t *)&v19[2 * v82 + 4] = v66;
  v86 = v19[3];
  if (v54 + 3 > (uint64_t)(v86 >> 1))
  {
    v257 = v83;
    v256 = v57;
    v201 = sub_226486AE0((_QWORD *)(v86 > 1), v54 + 3, 1, v19);
    v57.i32[0] = v256.i32[0];
    v64 = v272;
    v67 = v273;
    v66 = v266;
    v85 = v270;
    v65 = v271;
    v83 = v257;
    v19 = v201;
  }
  v19[2] = v54 + 3;
  *(_OWORD *)&v19[2 * v84 + 4] = v83;
  v87 = v26[2];
  v88 = v87 + 3;
  if (__OFADD__(v87, 3))
  {
    __break(1u);
  }
  else
  {
    v85.i32[1] = v67.i32[1];
    v65.i32[1] = v67.i32[1];
    v59.f32[0] = v4 - *(float *)v57.i32;
    v60 = (int32x4_t)v85;
    *(float *)&v60.i32[2] = v4 - *(float *)v57.i32;
    v61 = v65;
    *(float *)&v61.i32[2] = v4 - *(float *)v57.i32;
    v89 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v61, v61), (int8x16_t)v61, 0xCuLL), vnegq_f32((float32x4_t)v60)), (float32x4_t)v61, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v60, v60), (int8x16_t)v60, 0xCuLL));
    v58 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v89, v89), (int8x16_t)v89, 0xCuLL);
    v67 = (int32x4_t)vmulq_f32((float32x4_t)v89, (float32x4_t)v89);
    v67.i32[0] = vadd_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v67.i8, 1), vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v67, 2), *(float32x2_t *)v67.i8)).u32[0];
    *(float32x2_t *)v89.i8 = vrsqrte_f32((float32x2_t)v67.u32[0]);
    *(float32x2_t *)v89.i8 = vmul_f32(*(float32x2_t *)v89.i8, vrsqrts_f32((float32x2_t)v67.u32[0], vmul_f32(*(float32x2_t *)v89.i8, *(float32x2_t *)v89.i8)));
    *(float32x2_t *)v67.i8 = vmul_f32(*(float32x2_t *)v89.i8, vrsqrts_f32((float32x2_t)v67.u32[0], vmul_f32(*(float32x2_t *)v89.i8, *(float32x2_t *)v89.i8)));
    v90 = v26[3];
    v91 = v90 >> 1;
    if ((uint64_t)(v90 >> 1) >= v88)
      goto LABEL_61;
  }
  if (v87 <= v88)
    v202 = v87 + 3;
  else
    v202 = v87;
  v270 = v85;
  v257 = v83;
  v273 = (int32x4_t)v59;
  v256 = v60;
  v271 = v65;
  v255 = v61;
  v254 = v58;
  v253 = v67;
  v203 = sub_226486AE0((_QWORD *)1, v202, 1, v26);
  v67.i32[0] = v253.i32[0];
  v58 = v254;
  v61 = v255;
  v66 = v266;
  v65 = v271;
  v64 = v272;
  v60 = v256;
  v59 = (float32x4_t)v273;
  v83 = v257;
  v85 = v270;
  v26 = v203;
  v87 = v203[2];
  v90 = v203[3];
  v91 = v90 >> 1;
LABEL_61:
  v92 = (int32x4_t)vmulq_n_f32(v58, *(float *)v67.i32);
  v93 = v87 + 1;
  v95 = v267;
  v94 = v268;
  v96 = v265;
  v97 = v264;
  if (v91 <= (unint64_t)v87)
  {
    v270 = v85;
    v257 = v83;
    v273 = (int32x4_t)v59;
    v256 = v60;
    v271 = v65;
    v255 = v61;
    v254 = (float32x4_t)v92;
    v204 = sub_226486AE0((_QWORD *)(v90 > 1), v87 + 1, 1, v26);
    v92 = (int32x4_t)v254;
    v61 = v255;
    v96 = v265;
    v66 = v266;
    v65 = v271;
    v64 = v272;
    v60 = v256;
    v59 = (float32x4_t)v273;
    v83 = v257;
    v97 = v264;
    v95 = v267;
    v94 = v268;
    v85 = v270;
    v26 = v204;
    v90 = v204[3];
    v91 = v90 >> 1;
  }
  v26[2] = v93;
  *(int32x4_t *)&v26[2 * v87 + 4] = v92;
  v98 = v87 + 2;
  if (v91 < v87 + 2)
  {
    v270 = v85;
    v257 = v83;
    v273 = (int32x4_t)v59;
    v256 = v60;
    v271 = v65;
    v255 = v61;
    v254 = (float32x4_t)v92;
    v205 = sub_226486AE0((_QWORD *)(v90 > 1), v87 + 2, 1, v26);
    v92 = (int32x4_t)v254;
    v61 = v255;
    v96 = v265;
    v66 = v266;
    v65 = v271;
    v64 = v272;
    v60 = v256;
    v59 = (float32x4_t)v273;
    v83 = v257;
    v97 = v264;
    v95 = v267;
    v94 = v268;
    v85 = v270;
    v26 = v205;
  }
  v26[2] = v98;
  *(int32x4_t *)&v26[2 * v93 + 4] = v92;
  v99 = v26[3];
  if (v87 + 3 > (uint64_t)(v99 >> 1))
  {
    v270 = v85;
    v257 = v83;
    v273 = (int32x4_t)v59;
    v256 = v60;
    v271 = v65;
    v255 = v61;
    v254 = (float32x4_t)v92;
    v206 = sub_226486AE0((_QWORD *)(v99 > 1), v87 + 3, 1, v26);
    v92 = (int32x4_t)v254;
    v61 = v255;
    v96 = v265;
    v66 = v266;
    v65 = v271;
    v64 = v272;
    v60 = v256;
    v59 = (float32x4_t)v273;
    v83 = v257;
    v97 = v264;
    v95 = v267;
    v94 = v268;
    v85 = v270;
    v26 = v206;
  }
  v26[2] = v87 + 3;
  *(int32x4_t *)&v26[2 * v98 + 4] = v92;
  v100 = v79 + 2;
  if (v79 >= 0xFFFFFFFE)
  {
    __break(1u);
  }
  else
  {
    v3 = *((_QWORD *)v25 + 2);
    v91 = v3 + 3;
    if (!__OFADD__(v3, 3))
    {
      v101 = *((_QWORD *)v25 + 3);
      v102 = v101 >> 1;
      if ((uint64_t)(v101 >> 1) >= v91)
        goto LABEL_70;
      goto LABEL_171;
    }
  }
  __break(1u);
LABEL_171:
  if ((uint64_t)v3 <= v91)
    v207 = v91;
  else
    v207 = v3;
  v270 = v85;
  v257 = v83;
  v273 = (int32x4_t)v59;
  v256 = v60;
  v271 = v65;
  v255 = v61;
  v208 = sub_226486AEC((char *)1, v207, 1, v25);
  v61 = v255;
  v96 = v265;
  v66 = v266;
  v65 = v271;
  v64 = v272;
  v60 = v256;
  v59 = (float32x4_t)v273;
  v83 = v257;
  v97 = v264;
  v95 = v267;
  v94 = v268;
  v85 = v270;
  v25 = v208;
  v3 = *((_QWORD *)v208 + 2);
  v101 = *((_QWORD *)v208 + 3);
  v102 = v101 >> 1;
LABEL_70:
  v103 = v3 + 1;
  if (v102 <= v3)
  {
    v270 = v85;
    v257 = v83;
    v273 = (int32x4_t)v59;
    v256 = v60;
    v271 = v65;
    v255 = v61;
    v209 = sub_226486AEC((char *)(v101 > 1), v3 + 1, 1, v25);
    v61 = v255;
    v96 = v265;
    v66 = v266;
    v65 = v271;
    v64 = v272;
    v60 = v256;
    v59 = (float32x4_t)v273;
    v83 = v257;
    v97 = v264;
    v95 = v267;
    v94 = v268;
    v85 = v270;
    v25 = v209;
    v101 = *((_QWORD *)v209 + 3);
    v102 = v101 >> 1;
  }
  *((_QWORD *)v25 + 2) = v103;
  v104 = &v25[4 * v3];
  *((_DWORD *)v104 + 8) = v79;
  v105 = v3 + 2;
  if ((uint64_t)v102 < (uint64_t)(v3 + 2))
  {
    v270 = v85;
    v257 = v83;
    v273 = (int32x4_t)v59;
    v256 = v60;
    v271 = v65;
    v255 = v61;
    v210 = sub_226486AEC((char *)(v101 > 1), v3 + 2, 1, v25);
    v61 = v255;
    v96 = v265;
    v66 = v266;
    v65 = v271;
    v64 = v272;
    v60 = v256;
    v59 = (float32x4_t)v273;
    v83 = v257;
    v97 = v264;
    v95 = v267;
    v94 = v268;
    v85 = v270;
    v25 = v210;
  }
  *((_QWORD *)v25 + 2) = v105;
  *(_DWORD *)&v25[4 * v103 + 32] = v79 + 1;
  v106 = *((_QWORD *)v25 + 3);
  if ((uint64_t)(v3 + 3) > (uint64_t)(v106 >> 1))
  {
    v270 = v85;
    v257 = v83;
    v273 = (int32x4_t)v59;
    v256 = v60;
    v271 = v65;
    v255 = v61;
    v211 = sub_226486AEC((char *)(v106 > 1), v3 + 3, 1, v25);
    v61 = v255;
    v96 = v265;
    v66 = v266;
    v65 = v271;
    v64 = v272;
    v60 = v256;
    v59 = (float32x4_t)v273;
    v83 = v257;
    v97 = v264;
    v95 = v267;
    v94 = v268;
    v85 = v270;
    v25 = v211;
  }
  *((_QWORD *)v25 + 2) = v3 + 3;
  *(_DWORD *)&v25[4 * v105 + 32] = v100;
  v78 = __CFADD__(v79, 3);
  v107 = v79 + 3;
  if (v78)
  {
    __break(1u);
  }
  else
  {
    v100 = v19[2];
    v104 = (char *)(v100 + 3);
    if (!__OFADD__(v100, 3))
    {
      v108 = v19[3];
      v109 = v108 >> 1;
      if ((uint64_t)(v108 >> 1) >= (uint64_t)v104)
        goto LABEL_79;
      goto LABEL_177;
    }
  }
  __break(1u);
LABEL_177:
  if (v100 <= (uint64_t)v104)
    v212 = (int64_t)v104;
  else
    v212 = v100;
  v270 = v85;
  v257 = v83;
  v273 = (int32x4_t)v59;
  v256 = v60;
  v271 = v65;
  v255 = v61;
  v213 = sub_226486AE0((_QWORD *)1, v212, 1, v19);
  v61 = v255;
  v96 = v265;
  v66 = v266;
  v65 = v271;
  v64 = v272;
  v60 = v256;
  v59 = (float32x4_t)v273;
  v83 = v257;
  v97 = v264;
  v95 = v267;
  v94 = v268;
  v85 = v270;
  v19 = v213;
  v100 = v213[2];
  v108 = v213[3];
  v109 = v108 >> 1;
LABEL_79:
  v110 = v100 + 1;
  if (v109 <= v100)
  {
    v270 = v85;
    v257 = v83;
    v273 = (int32x4_t)v59;
    v256 = v60;
    v271 = v65;
    v255 = v61;
    v214 = sub_226486AE0((_QWORD *)(v108 > 1), v100 + 1, 1, v19);
    v61 = v255;
    v96 = v265;
    v66 = v266;
    v65 = v271;
    v64 = v272;
    v60 = v256;
    v59 = (float32x4_t)v273;
    v83 = v257;
    v97 = v264;
    v95 = v267;
    v94 = v268;
    v85 = v270;
    v19 = v214;
    v108 = v214[3];
    v109 = v108 >> 1;
  }
  v19[2] = v110;
  *(float32x4_t *)&v19[2 * v100 + 4] = v66;
  v111 = v100 + 2;
  if ((uint64_t)v109 < v100 + 2)
  {
    v270 = v85;
    v257 = v83;
    v273 = (int32x4_t)v59;
    v256 = v60;
    v271 = v65;
    v255 = v61;
    v215 = sub_226486AE0((_QWORD *)(v108 > 1), v100 + 2, 1, v19);
    v61 = v255;
    v65 = v271;
    v64 = v272;
    v60 = v256;
    v59 = (float32x4_t)v273;
    v83 = v257;
    v97 = v264;
    v96 = v265;
    v95 = v267;
    v94 = v268;
    v85 = v270;
    v19 = v215;
  }
  v19[2] = v111;
  *(float32x4_t *)&v19[2 * v110 + 4] = v97;
  v112 = v19[3];
  if (v100 + 3 > (uint64_t)(v112 >> 1))
  {
    v270 = v85;
    v257 = v83;
    v273 = (int32x4_t)v59;
    v256 = v60;
    v271 = v65;
    v255 = v61;
    v216 = sub_226486AE0((_QWORD *)(v112 > 1), v100 + 3, 1, v19);
    v61 = v255;
    v65 = v271;
    v64 = v272;
    v60 = v256;
    v59 = (float32x4_t)v273;
    v83 = v257;
    v97 = v264;
    v96 = v265;
    v95 = v267;
    v94 = v268;
    v85 = v270;
    v19 = v216;
  }
  v19[2] = v100 + 3;
  *(_OWORD *)&v19[2 * v111 + 4] = v83;
  v113 = v26[2];
  v114 = v113 + 3;
  if (__OFADD__(v113, 3))
  {
    __break(1u);
  }
  else
  {
    v115 = v59;
    *(uint64_t *)((char *)v115.i64 + 4) = v65.i64[0];
    v65 = v96;
    v65.i32[2] = v59.i32[0];
    v116 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v65, v65), (int8x16_t)v65, 0xCuLL), vnegq_f32((float32x4_t)v61)), (float32x4_t)v65, v115);
    v66 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v116, v116), (int8x16_t)v116, 0xCuLL);
    v92 = (int32x4_t)vmulq_f32((float32x4_t)v116, (float32x4_t)v116);
    v92.i32[0] = vadd_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v92.i8, 1), vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v92, 2), *(float32x2_t *)v92.i8)).u32[0];
    *(float32x2_t *)v116.i8 = vrsqrte_f32((float32x2_t)v92.u32[0]);
    *(float32x2_t *)v116.i8 = vmul_f32(*(float32x2_t *)v116.i8, vrsqrts_f32((float32x2_t)v92.u32[0], vmul_f32(*(float32x2_t *)v116.i8, *(float32x2_t *)v116.i8)));
    *(float32x2_t *)v92.i8 = vmul_f32(*(float32x2_t *)v116.i8, vrsqrts_f32((float32x2_t)v92.u32[0], vmul_f32(*(float32x2_t *)v116.i8, *(float32x2_t *)v116.i8)));
    v117 = v26[3];
    v118 = v117 >> 1;
    if ((uint64_t)(v117 >> 1) >= v114)
      goto LABEL_87;
  }
  if (v113 <= v114)
    v217 = v113 + 3;
  else
    v217 = v113;
  v270 = v85;
  v257 = v83;
  v273 = (int32x4_t)v59;
  v256 = v60;
  v271 = v65;
  v266 = v66;
  v255 = v92;
  v218 = sub_226486AE0((_QWORD *)1, v217, 1, v26);
  v92.i32[0] = v255.i32[0];
  v96 = v265;
  v66 = v266;
  v65 = v271;
  v64 = v272;
  v60 = v256;
  v59 = (float32x4_t)v273;
  v83 = v257;
  v97 = v264;
  v95 = v267;
  v94 = v268;
  v85 = v270;
  v26 = v218;
  v113 = v218[2];
  v117 = v218[3];
  v118 = v117 >> 1;
LABEL_87:
  v119 = (int32x4_t)vmulq_n_f32(v66, *(float *)v92.i32);
  v120 = v113 + 1;
  if (v118 <= v113)
  {
    v270 = v85;
    v257 = v83;
    v273 = (int32x4_t)v59;
    v256 = v60;
    v271 = v65;
    v266 = (float32x4_t)v119;
    v219 = sub_226486AE0((_QWORD *)(v117 > 1), v113 + 1, 1, v26);
    v96 = v265;
    v119 = (int32x4_t)v266;
    v65 = v271;
    v64 = v272;
    v60 = v256;
    v59 = (float32x4_t)v273;
    v83 = v257;
    v97 = v264;
    v95 = v267;
    v94 = v268;
    v85 = v270;
    v26 = v219;
    v117 = v219[3];
    v118 = v117 >> 1;
  }
  v26[2] = v120;
  v121 = (int32x4_t *)&v26[2 * v113];
  v121[2] = v119;
  v122 = v113 + 2;
  if ((uint64_t)v118 < v113 + 2)
  {
    v270 = v85;
    v257 = v83;
    v273 = (int32x4_t)v59;
    v256 = v60;
    v271 = v65;
    v266 = (float32x4_t)v119;
    v220 = sub_226486AE0((_QWORD *)(v117 > 1), v113 + 2, 1, v26);
    v96 = v265;
    v119 = (int32x4_t)v266;
    v65 = v271;
    v64 = v272;
    v60 = v256;
    v59 = (float32x4_t)v273;
    v83 = v257;
    v97 = v264;
    v95 = v267;
    v94 = v268;
    v85 = v270;
    v26 = v220;
  }
  v26[2] = v122;
  *(int32x4_t *)&v26[2 * v120 + 4] = v119;
  v123 = v26[3];
  if (v113 + 3 > (uint64_t)(v123 >> 1))
  {
    v270 = v85;
    v257 = v83;
    v273 = (int32x4_t)v59;
    v256 = v60;
    v271 = v65;
    v266 = (float32x4_t)v119;
    v221 = sub_226486AE0((_QWORD *)(v123 > 1), v113 + 3, 1, v26);
    v96 = v265;
    v119 = (int32x4_t)v266;
    v65 = v271;
    v64 = v272;
    v60 = v256;
    v59 = (float32x4_t)v273;
    v83 = v257;
    v97 = v264;
    v95 = v267;
    v94 = v268;
    v85 = v270;
    v26 = v221;
  }
  v26[2] = v113 + 3;
  *(int32x4_t *)&v26[2 * v122 + 4] = v119;
  v124 = v107 + 2;
  if (v107 >= 0xFFFFFFFE)
  {
    __break(1u);
  }
  else
  {
    v3 = *((_QWORD *)v25 + 2);
    v121 = (int32x4_t *)(v3 + 3);
    if (!__OFADD__(v3, 3))
    {
      v125 = *((_QWORD *)v25 + 3);
      v126 = v125 >> 1;
      if ((uint64_t)(v125 >> 1) >= (uint64_t)v121)
        goto LABEL_96;
      goto LABEL_188;
    }
  }
  __break(1u);
LABEL_188:
  if ((uint64_t)v3 <= (uint64_t)v121)
    v222 = (int64_t)v121;
  else
    v222 = v3;
  v270 = v85;
  v257 = v83;
  v273 = (int32x4_t)v59;
  v256 = v60;
  v271 = v65;
  v223 = sub_226486AEC((char *)1, v222, 1, v25);
  v65 = v271;
  v64 = v272;
  v60 = v256;
  v59 = (float32x4_t)v273;
  v83 = v257;
  v97 = v264;
  v96 = v265;
  v95 = v267;
  v94 = v268;
  v85 = v270;
  v25 = v223;
  v3 = *((_QWORD *)v223 + 2);
  v125 = *((_QWORD *)v223 + 3);
  v126 = v125 >> 1;
LABEL_96:
  v127 = v3 + 1;
  if (v126 <= v3)
  {
    v270 = v85;
    v257 = v83;
    v273 = (int32x4_t)v59;
    v256 = v60;
    v271 = v65;
    v224 = sub_226486AEC((char *)(v125 > 1), v3 + 1, 1, v25);
    v65 = v271;
    v64 = v272;
    v60 = v256;
    v59 = (float32x4_t)v273;
    v83 = v257;
    v97 = v264;
    v96 = v265;
    v95 = v267;
    v94 = v268;
    v85 = v270;
    v25 = v224;
    v125 = *((_QWORD *)v224 + 3);
    v126 = v125 >> 1;
  }
  *((_QWORD *)v25 + 2) = v127;
  v128 = &v25[4 * v3];
  *((_DWORD *)v128 + 8) = v107;
  v129 = v3 + 2;
  if ((uint64_t)v126 < (uint64_t)(v3 + 2))
  {
    v270 = v85;
    v257 = v83;
    v273 = (int32x4_t)v59;
    v256 = v60;
    v271 = v65;
    v225 = sub_226486AEC((char *)(v125 > 1), v3 + 2, 1, v25);
    v65 = v271;
    v64 = v272;
    v60 = v256;
    v59 = (float32x4_t)v273;
    v83 = v257;
    v97 = v264;
    v96 = v265;
    v95 = v267;
    v94 = v268;
    v85 = v270;
    v25 = v225;
  }
  *((_QWORD *)v25 + 2) = v129;
  *(_DWORD *)&v25[4 * v127 + 32] = v107 + 1;
  v130 = *((_QWORD *)v25 + 3);
  if ((uint64_t)(v3 + 3) > (uint64_t)(v130 >> 1))
  {
    v270 = v85;
    v257 = v83;
    v273 = (int32x4_t)v59;
    v256 = v60;
    v271 = v65;
    v226 = sub_226486AEC((char *)(v130 > 1), v3 + 3, 1, v25);
    v65 = v271;
    v64 = v272;
    v60 = v256;
    v59 = (float32x4_t)v273;
    v83 = v257;
    v97 = v264;
    v96 = v265;
    v95 = v267;
    v94 = v268;
    v85 = v270;
    v25 = v226;
  }
  *((_QWORD *)v25 + 2) = v3 + 3;
  *(_DWORD *)&v25[4 * v129 + 32] = v124;
  v78 = __CFADD__(v107, 3);
  v131 = v107 + 3;
  if (v78)
  {
    __break(1u);
  }
  else
  {
    v124 = v19[2];
    v128 = (char *)(v124 + 3);
    if (!__OFADD__(v124, 3))
    {
      v132 = v19[3];
      v133 = v132 >> 1;
      if ((uint64_t)(v132 >> 1) >= (uint64_t)v128)
        goto LABEL_105;
      goto LABEL_194;
    }
  }
  __break(1u);
LABEL_194:
  if (v124 <= (uint64_t)v128)
    v227 = (int64_t)v128;
  else
    v227 = v124;
  v270 = v85;
  v257 = v83;
  v273 = (int32x4_t)v59;
  v256 = v60;
  v271 = v65;
  v228 = sub_226486AE0((_QWORD *)1, v227, 1, v19);
  v65 = v271;
  v64 = v272;
  v60 = v256;
  v59 = (float32x4_t)v273;
  v83 = v257;
  v97 = v264;
  v96 = v265;
  v95 = v267;
  v94 = v268;
  v85 = v270;
  v19 = v228;
  v124 = v228[2];
  v132 = v228[3];
  v133 = v132 >> 1;
LABEL_105:
  v134 = v124 + 1;
  if (v133 <= v124)
  {
    v270 = v85;
    v257 = v83;
    v273 = (int32x4_t)v59;
    v256 = v60;
    v271 = v65;
    v229 = sub_226486AE0((_QWORD *)(v132 > 1), v124 + 1, 1, v19);
    v65 = v271;
    v64 = v272;
    v60 = v256;
    v59 = (float32x4_t)v273;
    v83 = v257;
    v97 = v264;
    v96 = v265;
    v95 = v267;
    v94 = v268;
    v85 = v270;
    v19 = v229;
    v132 = v229[3];
    v133 = v132 >> 1;
  }
  v19[2] = v134;
  *(float32x4_t *)&v19[2 * v124 + 4] = v97;
  v135 = v124 + 2;
  if ((uint64_t)v133 < v124 + 2)
  {
    v270 = v85;
    v257 = v83;
    v273 = (int32x4_t)v59;
    v256 = v60;
    v271 = v65;
    v230 = sub_226486AE0((_QWORD *)(v132 > 1), v124 + 2, 1, v19);
    v65 = v271;
    v64 = v272;
    v60 = v256;
    v59 = (float32x4_t)v273;
    v83 = v257;
    v96 = v265;
    v95 = v267;
    v94 = v268;
    v85 = v270;
    v19 = v230;
  }
  v19[2] = v135;
  *(float32x4_t *)&v19[2 * v134 + 4] = v95;
  v136 = v19[3];
  if (v124 + 3 > (uint64_t)(v136 >> 1))
  {
    v270 = v85;
    v257 = v83;
    v273 = (int32x4_t)v59;
    v256 = v60;
    v271 = v65;
    v231 = sub_226486AE0((_QWORD *)(v136 > 1), v124 + 3, 1, v19);
    v65 = v271;
    v64 = v272;
    v60 = v256;
    v59 = (float32x4_t)v273;
    v83 = v257;
    v96 = v265;
    v95 = v267;
    v94 = v268;
    v85 = v270;
    v19 = v231;
  }
  v19[2] = v124 + 3;
  *(_OWORD *)&v19[2 * v135 + 4] = v83;
  v137 = v26[2];
  v138 = v137 + 3;
  if (__OFADD__(v137, 3))
  {
    __break(1u);
  }
  else
  {
    v139 = v59;
    *(uint64_t *)((char *)v139.i64 + 4) = v96.i64[0];
    v96 = v94;
    v96.i32[2] = v59.i32[0];
    v140 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v96, v96), (int8x16_t)v96, 0xCuLL), vnegq_f32((float32x4_t)v65)), (float32x4_t)v96, v139);
    v97 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v140, v140), (int8x16_t)v140, 0xCuLL);
    v119 = (int32x4_t)vmulq_f32((float32x4_t)v140, (float32x4_t)v140);
    v119.i32[0] = vadd_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v119.i8, 1), vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v119, 2), *(float32x2_t *)v119.i8)).u32[0];
    *(float32x2_t *)v140.i8 = vrsqrte_f32((float32x2_t)v119.u32[0]);
    *(float32x2_t *)v140.i8 = vmul_f32(*(float32x2_t *)v140.i8, vrsqrts_f32((float32x2_t)v119.u32[0], vmul_f32(*(float32x2_t *)v140.i8, *(float32x2_t *)v140.i8)));
    *(float32x2_t *)v119.i8 = vmul_f32(*(float32x2_t *)v140.i8, vrsqrts_f32((float32x2_t)v119.u32[0], vmul_f32(*(float32x2_t *)v140.i8, *(float32x2_t *)v140.i8)));
    v141 = v26[3];
    v142 = v141 >> 1;
    if ((uint64_t)(v141 >> 1) >= v138)
      goto LABEL_113;
  }
  if (v137 <= v138)
    v232 = v137 + 3;
  else
    v232 = v137;
  v270 = v85;
  v257 = v83;
  v273 = (int32x4_t)v59;
  v256 = v60;
  v271 = v96;
  v265 = v119;
  v266 = v97;
  v233 = sub_226486AE0((_QWORD *)1, v232, 1, v26);
  v119.i32[0] = v265.i32[0];
  v97 = v266;
  v96 = v271;
  v64 = v272;
  v60 = v256;
  v59 = (float32x4_t)v273;
  v83 = v257;
  v95 = v267;
  v94.i64[0] = v268.i64[0];
  v85 = v270;
  v26 = v233;
  v137 = v233[2];
  v141 = v233[3];
  v142 = v141 >> 1;
LABEL_113:
  v143 = (int32x4_t)vmulq_n_f32(v97, *(float *)v119.i32);
  v144 = v137 + 1;
  if (v142 <= v137)
  {
    v270 = v85;
    v257 = v83;
    v273 = (int32x4_t)v59;
    v256 = v60;
    v271 = v96;
    v266 = (float32x4_t)v143;
    v234 = sub_226486AE0((_QWORD *)(v141 > 1), v137 + 1, 1, v26);
    v143 = (int32x4_t)v266;
    v95 = v267;
    v96 = v271;
    v64 = v272;
    v60 = v256;
    v59 = (float32x4_t)v273;
    v83 = v257;
    v94.i64[0] = v268.i64[0];
    v85 = v270;
    v26 = v234;
    v141 = v234[3];
    v142 = v141 >> 1;
  }
  v26[2] = v144;
  v145 = (int32x4_t *)&v26[2 * v137];
  v145[2] = v143;
  v146 = v137 + 2;
  if ((uint64_t)v142 < v137 + 2)
  {
    v270 = v85;
    v257 = v83;
    v273 = (int32x4_t)v59;
    v256 = v60;
    v271 = v96;
    v266 = (float32x4_t)v143;
    v235 = sub_226486AE0((_QWORD *)(v141 > 1), v137 + 2, 1, v26);
    v143 = (int32x4_t)v266;
    v95 = v267;
    v96 = v271;
    v64 = v272;
    v60 = v256;
    v59 = (float32x4_t)v273;
    v83 = v257;
    v94.i64[0] = v268.i64[0];
    v85 = v270;
    v26 = v235;
  }
  v26[2] = v146;
  *(int32x4_t *)&v26[2 * v144 + 4] = v143;
  v147 = v26[3];
  if (v137 + 3 > (uint64_t)(v147 >> 1))
  {
    v270 = v85;
    v257 = v83;
    v273 = (int32x4_t)v59;
    v256 = v60;
    v271 = v96;
    v266 = (float32x4_t)v143;
    v236 = sub_226486AE0((_QWORD *)(v147 > 1), v137 + 3, 1, v26);
    v143 = (int32x4_t)v266;
    v95 = v267;
    v96 = v271;
    v64 = v272;
    v60 = v256;
    v59 = (float32x4_t)v273;
    v83 = v257;
    v94.i64[0] = v268.i64[0];
    v85 = v270;
    v26 = v236;
  }
  v26[2] = v137 + 3;
  *(int32x4_t *)&v26[2 * v146 + 4] = v143;
  v148 = v131 + 2;
  if (v131 >= 0xFFFFFFFE)
  {
    __break(1u);
  }
  else
  {
    v3 = *((_QWORD *)v25 + 2);
    v145 = (int32x4_t *)(v3 + 3);
    if (!__OFADD__(v3, 3))
    {
      v149 = *((_QWORD *)v25 + 3);
      v150 = v149 >> 1;
      if ((uint64_t)(v149 >> 1) >= (uint64_t)v145)
        goto LABEL_122;
      goto LABEL_205;
    }
  }
  __break(1u);
LABEL_205:
  if ((uint64_t)v3 <= (uint64_t)v145)
    v237 = (int64_t)v145;
  else
    v237 = v3;
  v270 = v85;
  v257 = v83;
  v273 = (int32x4_t)v59;
  v256 = v60;
  v271 = v96;
  v238 = sub_226486AEC((char *)1, v237, 1, v25);
  v96 = v271;
  v64 = v272;
  v60 = v256;
  v59 = (float32x4_t)v273;
  v83 = v257;
  v95 = v267;
  v94.i64[0] = v268.i64[0];
  v85 = v270;
  v25 = v238;
  v3 = *((_QWORD *)v238 + 2);
  v149 = *((_QWORD *)v238 + 3);
  v150 = v149 >> 1;
LABEL_122:
  v151 = v3 + 1;
  if (v150 <= v3)
  {
    v270 = v85;
    v257 = v83;
    v273 = (int32x4_t)v59;
    v256 = v60;
    v271 = v96;
    v239 = sub_226486AEC((char *)(v149 > 1), v3 + 1, 1, v25);
    v96 = v271;
    v64 = v272;
    v60 = v256;
    v59 = (float32x4_t)v273;
    v83 = v257;
    v95 = v267;
    v94.i64[0] = v268.i64[0];
    v85 = v270;
    v25 = v239;
    v149 = *((_QWORD *)v239 + 3);
    v150 = v149 >> 1;
  }
  *((_QWORD *)v25 + 2) = v151;
  v152 = &v25[4 * v3];
  *((_DWORD *)v152 + 8) = v131;
  v153 = v3 + 2;
  if ((uint64_t)v150 < (uint64_t)(v3 + 2))
  {
    v270 = v85;
    v257 = v83;
    v273 = (int32x4_t)v59;
    v256 = v60;
    v271 = v96;
    v240 = sub_226486AEC((char *)(v149 > 1), v3 + 2, 1, v25);
    v96 = v271;
    v64 = v272;
    v60 = v256;
    v59 = (float32x4_t)v273;
    v83 = v257;
    v95 = v267;
    v94.i64[0] = v268.i64[0];
    v85 = v270;
    v25 = v240;
  }
  *((_QWORD *)v25 + 2) = v153;
  *(_DWORD *)&v25[4 * v151 + 32] = v131 + 1;
  v154 = *((_QWORD *)v25 + 3);
  if ((uint64_t)(v3 + 3) > (uint64_t)(v154 >> 1))
  {
    v270 = v85;
    v257 = v83;
    v273 = (int32x4_t)v59;
    v256 = v60;
    v271 = v96;
    v241 = sub_226486AEC((char *)(v154 > 1), v3 + 3, 1, v25);
    v96 = v271;
    v64 = v272;
    v60 = v256;
    v59 = (float32x4_t)v273;
    v83 = v257;
    v95 = v267;
    v94.i64[0] = v268.i64[0];
    v85 = v270;
    v25 = v241;
  }
  *((_QWORD *)v25 + 2) = v3 + 3;
  *(_DWORD *)&v25[4 * v153 + 32] = v148;
  v78 = __CFADD__(v131, 3);
  v155 = v131 + 3;
  if (v78)
  {
    __break(1u);
  }
  else
  {
    v148 = v19[2];
    v152 = (char *)(v148 + 3);
    if (!__OFADD__(v148, 3))
    {
      v156 = v19[3];
      v157 = v156 >> 1;
      if ((uint64_t)(v156 >> 1) >= (uint64_t)v152)
        goto LABEL_131;
      goto LABEL_211;
    }
  }
  __break(1u);
LABEL_211:
  if (v148 <= (uint64_t)v152)
    v242 = (int64_t)v152;
  else
    v242 = v148;
  v270 = v85;
  v257 = v83;
  v273 = (int32x4_t)v59;
  v256 = v60;
  v271 = v96;
  v243 = sub_226486AE0((_QWORD *)1, v242, 1, v19);
  v96 = v271;
  v64 = v272;
  v60 = v256;
  v59 = (float32x4_t)v273;
  v83 = v257;
  v95 = v267;
  v94.i64[0] = v268.i64[0];
  v85 = v270;
  v19 = v243;
  v148 = v243[2];
  v156 = v243[3];
  v157 = v156 >> 1;
LABEL_131:
  v158 = v148 + 1;
  if (v157 <= v148)
  {
    v270 = v85;
    v257 = v83;
    v273 = (int32x4_t)v59;
    v256 = v60;
    v271 = v96;
    v244 = sub_226486AE0((_QWORD *)(v156 > 1), v148 + 1, 1, v19);
    v96 = v271;
    v64 = v272;
    v60 = v256;
    v59 = (float32x4_t)v273;
    v83 = v257;
    v95 = v267;
    v94.i64[0] = v268.i64[0];
    v85 = v270;
    v19 = v244;
    v156 = v244[3];
    v157 = v156 >> 1;
  }
  v19[2] = v158;
  *(float32x4_t *)&v19[2 * v148 + 4] = v95;
  if ((uint64_t)v157 < v148 + 2)
  {
    v270 = v85;
    v257 = v83;
    v273 = (int32x4_t)v59;
    v256 = v60;
    v271 = v96;
    v245 = sub_226486AE0((_QWORD *)(v156 > 1), v148 + 2, 1, v19);
    v96 = v271;
    v64 = v272;
    v60 = v256;
    v59 = (float32x4_t)v273;
    v83 = v257;
    v94.i64[0] = v268.i64[0];
    v85 = v270;
    v19 = v245;
  }
  v19[2] = v148 + 2;
  *(float32x4_t *)&v19[2 * v158 + 4] = v64;
  v160 = v19[2];
  v159 = v19[3];
  if (v160 >= v159 >> 1)
  {
    v270 = v85;
    v257 = v83;
    v273 = (int32x4_t)v59;
    v256 = v60;
    v271 = v96;
    v246 = sub_226486AE0((_QWORD *)(v159 > 1), v160 + 1, 1, v19);
    v85 = v270;
    v96 = v271;
    v60 = v256;
    v59 = (float32x4_t)v273;
    v83 = v257;
    v94.i64[0] = v268.i64[0];
    v19 = v246;
  }
  v19[2] = v160 + 1;
  *(_OWORD *)&v19[2 * v160 + 4] = v83;
  v161 = v26[2];
  v162 = v161 + 3;
  if (__OFADD__(v161, 3))
  {
    __break(1u);
  }
  else
  {
    v163 = v59;
    v163.i32[1] = v85.i32[0];
    v59.i32[1] = v94.i32[0];
    v163.i32[2] = v85.i32[1];
    v59.i32[2] = v94.i32[1];
    v164 = (int32x4_t)vmlaq_f32(vmulq_f32(v163, vnegq_f32((float32x4_t)v96)), (float32x4_t)v60, v59);
    v85 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v164, v164), (int8x16_t)v164, 0xCuLL);
    v143 = (int32x4_t)vmulq_f32((float32x4_t)v164, (float32x4_t)v164);
    v143.i32[0] = vadd_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v143.i8, 1), vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v143, 2), *(float32x2_t *)v143.i8)).u32[0];
    v165 = vrsqrte_f32((float32x2_t)v143.u32[0]);
    v166 = vmul_f32(v165, vrsqrts_f32((float32x2_t)v143.u32[0], vmul_f32(v165, v165)));
    *(float32x2_t *)v143.i8 = vmul_f32(v166, vrsqrts_f32((float32x2_t)v143.u32[0], vmul_f32(v166, v166)));
    v167 = v26[3];
    v168 = v167 >> 1;
    if ((uint64_t)(v167 >> 1) >= v162)
      goto LABEL_139;
  }
  if (v161 <= v162)
    v247 = v161 + 3;
  else
    v247 = v161;
  v272 = (float32x4_t)v143;
  v273 = (int32x4_t)v85;
  v248 = sub_226486AE0((_QWORD *)1, v247, 1, v26);
  v143.i32[0] = v272.i32[0];
  v85 = (float32x4_t)v273;
  v26 = v248;
  v161 = v248[2];
  v167 = v248[3];
  v168 = v167 >> 1;
LABEL_139:
  v169 = vmulq_n_f32(v85, *(float *)v143.i32);
  v170 = v161 + 1;
  if (v168 <= v161)
  {
    v273 = (int32x4_t)v169;
    v249 = sub_226486AE0((_QWORD *)(v167 > 1), v161 + 1, 1, v26);
    v169 = (float32x4_t)v273;
    v26 = v249;
    v167 = v249[3];
    v168 = v167 >> 1;
  }
  v26[2] = v170;
  v171 = (float32x4_t *)&v26[2 * v161];
  v171[2] = v169;
  if ((uint64_t)v168 < v161 + 2)
  {
    v273 = (int32x4_t)v169;
    v250 = sub_226486AE0((_QWORD *)(v167 > 1), v161 + 2, 1, v26);
    v169 = (float32x4_t)v273;
    v26 = v250;
  }
  v26[2] = v161 + 2;
  *(float32x4_t *)&v26[2 * v170 + 4] = v169;
  v173 = v26[2];
  v172 = v26[3];
  if (v173 >= v172 >> 1)
  {
    v273 = (int32x4_t)v169;
    v251 = sub_226486AE0((_QWORD *)(v172 > 1), v173 + 1, 1, v26);
    v169 = (float32x4_t)v273;
    v26 = v251;
  }
  v26[2] = v173 + 1;
  *(float32x4_t *)&v26[2 * v173 + 4] = v169;
  if (v155 >= 0xFFFFFFFE)
  {
    __break(1u);
    goto LABEL_221;
  }
  v3 = *((_QWORD *)v25 + 2);
  v171 = (float32x4_t *)(v3 + 3);
  if (__OFADD__(v3, 3))
  {
LABEL_221:
    __break(1u);
    goto LABEL_222;
  }
  v174 = *((_QWORD *)v25 + 3);
  v175 = v174 >> 1;
  if ((uint64_t)(v174 >> 1) < (uint64_t)v171)
  {
LABEL_222:
    if ((uint64_t)v3 <= (uint64_t)v171)
      v252 = (int64_t)v171;
    else
      v252 = v3;
    v25 = sub_226486AEC((char *)1, v252, 1, v25);
    v3 = *((_QWORD *)v25 + 2);
    v174 = *((_QWORD *)v25 + 3);
    v175 = v174 >> 1;
  }
  v176 = v3 + 1;
  if (v175 <= v3)
  {
    v25 = sub_226486AEC((char *)(v174 > 1), v3 + 1, 1, v25);
    v174 = *((_QWORD *)v25 + 3);
    v175 = v174 >> 1;
  }
  *((_QWORD *)v25 + 2) = v176;
  *(_DWORD *)&v25[4 * v3 + 32] = v155;
  if ((uint64_t)v175 < (uint64_t)(v3 + 2))
    v25 = sub_226486AEC((char *)(v174 > 1), v3 + 2, 1, v25);
  *((_QWORD *)v25 + 2) = v3 + 2;
  *(_DWORD *)&v25[4 * v176 + 32] = v155 + 1;
  v178 = *((_QWORD *)v25 + 2);
  v177 = *((_QWORD *)v25 + 3);
  if (v178 >= v177 >> 1)
    v25 = sub_226486AEC((char *)(v177 > 1), v178 + 1, 1, v25);
  v179 = v261;
  *((_QWORD *)v25 + 2) = v178 + 1;
  *(_DWORD *)&v25[4 * v178 + 32] = v155 + 2;
  sub_22655C2C0();
  sub_22655C944();
  sub_22655C2CC();
  sub_22655CB0C();
  v180 = v262;
  sub_22655C944();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v260 + 56))(v180, 0, 1, v179);
  sub_22655CAF4();
  v181 = v263;
  sub_22655C950();
  v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_255847110);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v182 - 8) + 56))(v181, 0, 1, v182);
  sub_22655C2B4();
  return swift_release();
}

uint64_t sub_2264E8734(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  unsigned int v21;
  int v22;
  uint64_t inited;
  uint64_t v24;
  int8x8_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  __int128 v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t result;
  _BYTE v36[56];
  uint64_t v37;

  v37 = *MEMORY[0x24BDAC8D0];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255847108);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v36[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255842910);
  MEMORY[0x24BDAC7A8](v5);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_13:
    v7 = 0;
    goto LABEL_14;
  }
  v7 = 0;
  v8 = *(_QWORD *)(type metadata accessor for LineAnimation() - 8);
  v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v10 = *(_QWORD *)(v8 + 72);
  v11 = v9 + 112;
  while (1)
  {
    v13 = *(_QWORD *)(*(_QWORD *)v11 + 16);
    if (v13 <= 2)
    {
      v12 = __OFADD__(v7, v13);
      v7 += v13;
      if (v12)
        goto LABEL_43;
      goto LABEL_4;
    }
    if ((uint64_t)(v13 + 0x3FFFFFFFFFFFFFFELL) < 0)
      goto LABEL_44;
    v14 = 2 * v13 - 4;
    v12 = __OFADD__(v14, 2);
    v15 = v14 + 2;
    if (v12)
      goto LABEL_45;
    v12 = __OFADD__(v7, v15);
    v7 += v15;
    if (v12)
      break;
LABEL_4:
    v11 += v10;
    if (!--v6)
      goto LABEL_11;
  }
  __break(1u);
LABEL_11:
  if (v7 + 0x4000000000000000 < 0)
  {
    __break(1u);
    goto LABEL_13;
  }
LABEL_14:
  sub_2265143CC(2 * v7, (__n128)0);
  if (v7 >= 0)
    v16 = v7;
  else
    v16 = v7 + 1;
  v17 = v16 >> 1;
  v18 = 2 * ((v16 & 0x7FFFFFFFFFFFFFFELL) + (v16 >> 1));
  if ((unsigned __int128)(v17 * (__int128)6) >> 64 != v18 >> 63)
LABEL_46:
    __break(1u);
  v19 = sub_226486AEC(0, v18 & ~(v18 >> 63), 0, MEMORY[0x24BEE4AF8]);
  if (v7 <= -2 || v7 >= 0x200000000)
  {
LABEL_47:
    result = sub_22655D3DC();
    __break(1u);
  }
  else
  {
    v20 = v19;
    if ((_DWORD)v17)
    {
      v21 = 0;
      v22 = 0x40000000;
      while (1)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_255843A78);
        inited = swift_initStackObject();
        if (!v22)
          break;
        v24 = inited;
        *(_DWORD *)(inited + 32) = v21;
        *(_DWORD *)(inited + 36) = v21 + 1;
        v25 = vorr_s8((int8x8_t)vdup_n_s32(v21), (int8x8_t)0x300000002);
        *(_DWORD *)(inited + 40) = v25.i32[0];
        *(int8x8_t *)(inited + 44) = v25;
        *(_DWORD *)(inited + 52) = v21;
        v26 = *((_QWORD *)v20 + 2);
        v27 = v26 + 6;
        if (__OFADD__(v26, 6))
          goto LABEL_40;
        v28 = *((_QWORD *)v20 + 3) >> 1;
        if (v28 < v27)
        {
          if (v26 <= v27)
            v33 = v26 + 6;
          else
            v33 = *((_QWORD *)v20 + 2);
          v20 = sub_226486AEC((char *)1, v33, 1, v20);
          v26 = *((_QWORD *)v20 + 2);
          v28 = *((_QWORD *)v20 + 3) >> 1;
        }
        if (v28 - v26 < 6)
          goto LABEL_41;
        v29 = &v20[4 * v26 + 32];
        if (v24 + 32 < (unint64_t)&v20[4 * v26 + 56] && (unint64_t)v29 < v24 + 56)
        {
          sub_22655D43C();
          __break(1u);
          goto LABEL_47;
        }
        v31 = *(_OWORD *)(v24 + 32);
        *(_QWORD *)&v20[4 * v26 + 48] = *(_QWORD *)(v24 + 48);
        *(_OWORD *)v29 = v31;
        v12 = __OFADD__(v26, 6);
        v32 = v26 + 6;
        if (v12)
          goto LABEL_42;
        *((_QWORD *)v20 + 2) = v32;
        swift_setDeallocating();
        --v22;
        v21 += 4;
        LODWORD(v17) = v17 - 1;
        if (!(_DWORD)v17)
          goto LABEL_38;
      }
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
LABEL_38:
    sub_22655C2C0();
    sub_22655C944();
    sub_22655C2CC();
    sub_22655CB0C();
    sub_22655C950();
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255847110);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v4, 0, 1, v34);
    return sub_22655C2B4();
  }
  return result;
}

uint64_t sub_2264E8B98()
{
  uint64_t v0;

  sub_22643D7E4(v0 + 16, &qword_255847158);
  swift_release();
  sub_22643D7E4(v0 + 64, &qword_255847158);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MeshLoader()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for MeshResourceType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_2264E8C58 + 4 * byte_226566C49[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_2264E8C8C + 4 * byte_226566C44[v4]))();
}

uint64_t sub_2264E8C8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264E8C94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2264E8C9CLL);
  return result;
}

uint64_t sub_2264E8CA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2264E8CB0);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_2264E8CB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264E8CBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MeshResourceType()
{
  return &type metadata for MeshResourceType;
}

unint64_t sub_2264E8CDC()
{
  unint64_t result;

  result = qword_255847100;
  if (!qword_255847100)
  {
    result = MEMORY[0x22769A794](&unk_226566CE4, &type metadata for MeshResourceType);
    atomic_store(result, (unint64_t *)&qword_255847100);
  }
  return result;
}

uint64_t sub_2264E8D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD v22[3];
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  _BYTE v29[40];
  uint64_t v30;

  v22[2] = a2;
  v23 = a4;
  v22[1] = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255847148);
  MEMORY[0x24BDAC7A8](v5);
  v22[0] = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22655CB30();
  MEMORY[0x24BDAC7A8](v7);
  v30 = sub_22655C32C();
  v26 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22655C320();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255847138);
  sub_22655C2F0();
  v10 = swift_allocObject();
  v24 = xmmword_22655F8F0;
  *(_OWORD *)(v10 + 16) = xmmword_22655F8F0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255847140);
  v11 = sub_22655C2CC();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = v24;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 16))(v14 + v13, a3, v11);
  sub_22655C2D8();
  sub_22655CB18();
  sub_22655C314();
  sub_22655C398();
  v15 = v25;
  sub_22655C344();
  if (!v15)
  {
    v16 = v22[0];
    sub_22643D7A0(v23, (uint64_t)&v27, &qword_255843DF0);
    if (v28)
    {
      sub_226438644(&v27, (uint64_t)v29);
      sub_226438600((uint64_t)v29, (uint64_t)&v27);
      v17 = sub_226486AF8(0, 1, 1, MEMORY[0x24BEE4AF8]);
      v19 = v17[2];
      v18 = v17[3];
      if (v19 >= v18 >> 1)
        v17 = sub_226486AF8((_QWORD *)(v18 > 1), v19 + 1, 1, v17);
      v17[2] = v19 + 1;
      sub_226438644(&v27, (uint64_t)&v17[5 * v19 + 4]);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    }
    else
    {
      sub_22643D7E4((uint64_t)&v27, &qword_255843DF0);
    }
    swift_retain();
    sub_22655C3F8();
    v20 = sub_22655C41C();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v16, 0, 1, v20);
    sub_22655C8E4();
    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v9, v30);
}

_QWORD *sub_2264E9064(float32x4_t a1, float a2)
{
  float v2;
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD *result;
  float v10;
  float v12;
  unsigned int v13;

  v10 = a1.f32[0];
  *(float *)&v13 = 0.5 * a1.f32[0];
  v2 = a1.f32[2];
  v12 = vmuls_lane_f32(0.5, a1, 2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255840A78);
  v3 = (_OWORD *)swift_allocObject();
  HIDWORD(v4) = 0;
  *(float *)&v4 = -(float)(v10 * 0.5);
  HIDWORD(v5) = 0;
  *((float *)&v4 + 1) = a2;
  *(_QWORD *)&v5 = __PAIR64__(LODWORD(a2), v13);
  v6 = (unint64_t)v4;
  *((float *)&v6 + 2) = v12;
  v7 = __PAIR64__(LODWORD(a2), v13);
  *((float *)&v7 + 2) = v12;
  *((float *)&v5 + 2) = -(float)(v2 * 0.5);
  v3[1] = xmmword_22655FA80;
  v3[2] = v6;
  v3[3] = v7;
  v3[4] = v5;
  *((float *)&v4 + 2) = *((float *)&v5 + 2);
  v3[5] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255849BA0);
  v8 = sub_22655CEFC();
  *(_QWORD *)(v8 + 16) = 4;
  *(_OWORD *)(v8 + 32) = xmmword_2265600C0;
  *(_OWORD *)(v8 + 48) = xmmword_2265600C0;
  *(_OWORD *)(v8 + 64) = xmmword_2265600C0;
  *(_OWORD *)(v8 + 80) = xmmword_2265600C0;
  type metadata accessor for RoomCaptureMesh();
  result = (_QWORD *)swift_allocObject();
  result[2] = v3;
  result[3] = v8;
  result[4] = &unk_24EDDECC0;
  return result;
}

float sub_2264E9180(unsigned __int8 a1, __n128 a2)
{
  unint64_t v3;

  if (a1 > 5u)
    return 0.08;
  if (a2.n128_f32[2] > 0.0)
    return a2.n128_f32[2] * 0.5;
  v3 = ((0x30100040205uLL >> (8 * a1)) & 7) - 2;
  if (v3 > 3)
    return 0.08;
  else
    return flt_22655FDA0[v3];
}

unint64_t sub_2264E91F4()
{
  unint64_t result;

  result = qword_255847150;
  if (!qword_255847150)
  {
    result = MEMORY[0x22769A794](&unk_226566DCC, &type metadata for MeshLoaderError);
    atomic_store(result, (unint64_t *)&qword_255847150);
  }
  return result;
}

_QWORD *sub_2264E9238(int64_t a1, float32x4_t *a2)
{
  uint64_t v2;
  float32x4_t *v3;
  unint64_t v4;
  int64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  float32x4_t v11;
  float32x4_t v12;
  uint64_t v13;
  float v14;
  float *v15;
  float v16;
  float32x4_t v17;
  float32x4_t v18;
  float32x4_t v19;
  float v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  float32x4_t v25;
  float32x4_t v26;
  float32x4_t v27;
  unint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  int64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  float32x4_t v36;
  float32x4_t v37;
  float32x4_t v39;
  float32x4_t *v40;
  float v41;
  float v42;
  __int32 v43;
  __int32 v44;
  float32x4_t v45;
  float32x4_t v46;
  float32x4_t v47;
  float32x4_t v48;
  float32x4_t v49;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (float32x4_t *)&unk_226566000;
  v4 = (unint64_t)&unk_226566000;
  if (v2)
  {
    v5 = a1;
    v40 = a2;
    v6 = *(_QWORD **)(type metadata accessor for LineAnimation() - 8);
    v7 = (*((unsigned __int8 *)v6 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v6 + 80);
    v8 = qword_25583F9D0;
    swift_bridgeObjectRetain();
    if (v8 != -1)
      goto LABEL_33;
LABEL_3:
    v9 = 0;
    v10 = v5 + v7;
    v11 = v3[193];
    v12 = *(float32x4_t *)(v4 + 3104);
    v13 = v6[9];
    v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      if (v9 == v2)
      {
        __break(1u);
LABEL_33:
        swift_once();
        goto LABEL_3;
      }
      v46 = v12;
      v48 = v11;
      v4 = v10 + v13 * v9;
      v14 = *(float *)(v4 + 96);
      v15 = (float *)off_25584AF28;
      swift_beginAccess();
      v7 = *(_QWORD *)(v4 + 112);
      v3 = *(float32x4_t **)(v7 + 16);
      if (v3)
      {
        v16 = v15[9];
        v42 = v14 * v16;
        v41 = v16 * *(float *)(v4 + 100);
        swift_bridgeObjectRetain();
        v4 = 0;
        v18 = v46;
        v17 = v48;
        while (1)
        {
          v47 = v18;
          v49 = v17;
          v43 = v18.i32[3];
          v44 = v17.i32[3];
          v45 = *(float32x4_t *)(v7 + 16 * v4 + 32);
          if (v4)
          {
            v21 = *(_QWORD *)(v7 + 16) - 1;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            if (v4 != v21)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                v6 = sub_226487924(0, v6[2] + 1, 1, v6);
              v31 = v6[2];
              v30 = v6[3];
              v32 = v30 >> 1;
              v24 = v31 + 1;
              v26 = v47;
              v25 = v49;
              v27 = v45;
              if (v30 >> 1 <= v31)
              {
                v35 = sub_226487924((_QWORD *)(v30 > 1), v31 + 1, 1, v6);
                v27 = v45;
                v26 = v47;
                v25 = v49;
                v6 = v35;
                v30 = v35[3];
                v32 = v30 >> 1;
              }
              v19 = v27;
              v19.i32[3] = 1.0;
              v6[2] = v24;
              *(float32x4_t *)&v6[2 * v31 + 4] = v19;
              v5 = v31 + 2;
              if (v32 < v5)
              {
                v39 = v19;
                v33 = sub_226487924((_QWORD *)(v30 > 1), v5, 1, v6);
                v19 = v39;
                v27 = v45;
                v26 = v47;
                v25 = v49;
                v6 = v33;
              }
              goto LABEL_11;
            }
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              v6 = sub_226487924(0, v6[2] + 1, 1, v6);
            v24 = v6[2];
            v23 = v6[3];
            v5 = v24 + 1;
            v26 = v47;
            v25 = v49;
            v27 = v45;
            if (v24 >= v23 >> 1)
            {
              v34 = sub_226487924((_QWORD *)(v23 > 1), v24 + 1, 1, v6);
              v27 = v45;
              v26 = v47;
              v25 = v49;
              v6 = v34;
            }
            v19 = v27;
            v20 = v41;
          }
          else
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v6 = sub_226487924(0, v6[2] + 1, 1, v6);
            v24 = v6[2];
            v28 = v6[3];
            v5 = v24 + 1;
            v26 = v47;
            v25 = v49;
            v27 = v45;
            if (v24 >= v28 >> 1)
            {
              v29 = sub_226487924((_QWORD *)(v28 > 1), v24 + 1, 1, v6);
              v27 = v45;
              v26 = v47;
              v25 = v49;
              v6 = v29;
            }
            v19 = v27;
            v20 = v42;
          }
          v19.f32[3] = v20;
LABEL_11:
          ++v4;
          v26.i32[3] = 0;
          v27.i32[3] = 0;
          v18 = vminnmq_f32(v26, v27);
          v18.i32[3] = v43;
          v25.i32[3] = 0;
          v17 = vmaxnmq_f32(v25, v27);
          v17.i32[3] = v44;
          v6[2] = v5;
          *(float32x4_t *)&v6[2 * v24 + 4] = v19;
          if (v3 == (float32x4_t *)v4)
          {
            v46 = v18;
            v48 = v17;
            swift_bridgeObjectRelease();
            break;
          }
        }
      }
      ++v9;
      v12 = v46;
      v11 = v48;
    }
    while (v9 != v2);
    swift_bridgeObjectRelease();
    v37 = v46;
    v36 = v48;
    a2 = v40;
  }
  else
  {
    v36 = (float32x4_t)xmmword_226566C10;
    v37 = (float32x4_t)xmmword_226566C20;
    v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  *a2 = vabdq_f32(v36, v37);
  return v6;
}

uint64_t storeEnumTagSinglePayload for MeshLoaderError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2264E9620 + 4 * byte_226566C53[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2264E9654 + 4 * byte_226566C4E[v4]))();
}

uint64_t sub_2264E9654(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264E965C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2264E9664);
  return result;
}

uint64_t sub_2264E9670(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2264E9678);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2264E967C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264E9684(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MeshLoaderError()
{
  return &type metadata for MeshLoaderError;
}

unint64_t sub_2264E96A8()
{
  unint64_t result;

  result = qword_255847160;
  if (!qword_255847160)
  {
    result = MEMORY[0x22769A794](&unk_226566DA4, &type metadata for MeshLoaderError);
    atomic_store(result, (unint64_t *)&qword_255847160);
  }
  return result;
}

uint64_t sub_2264E96EC(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v34[2];

  v3 = v2;
  v34[1] = *(id *)MEMORY[0x24BDAC8D0];
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  type metadata accessor for MetalConstants();
  swift_unknownObjectRetain();
  swift_initStaticObject();
  v6 = (void *)sub_22648BCD8();
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDD6B8]), sel_init);
  v8 = (void *)sub_22655CD64();
  v9 = objc_msgSend(v6, sel_newFunctionWithName_, v8);

  objc_msgSend(v7, sel_setVertexFunction_, v9);
  swift_unknownObjectRelease();
  v10 = (void *)sub_22655CD64();
  v11 = objc_msgSend(v6, sel_newFunctionWithName_, v10);

  objc_msgSend(v7, sel_setFragmentFunction_, v11);
  swift_unknownObjectRelease();
  v12 = objc_msgSend(v7, sel_colorAttachments);
  v13 = objc_msgSend(v12, sel_objectAtIndexedSubscript_, 0);

  if (!v13)
  {
    __break(1u);
    goto LABEL_18;
  }
  objc_msgSend(v13, sel_setBlendingEnabled_, 1);

  v14 = objc_msgSend(v7, sel_colorAttachments);
  v15 = objc_msgSend(v14, sel_objectAtIndexedSubscript_, 0);

  if (!v15)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  objc_msgSend(v15, sel_setRgbBlendOperation_, 0);

  v16 = objc_msgSend(v7, sel_colorAttachments);
  v17 = objc_msgSend(v16, sel_objectAtIndexedSubscript_, 0);

  if (!v17)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  objc_msgSend(v17, sel_setAlphaBlendOperation_, 0);

  v18 = objc_msgSend(v7, sel_colorAttachments);
  v19 = objc_msgSend(v18, sel_objectAtIndexedSubscript_, 0);

  if (!v19)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  objc_msgSend(v19, sel_setSourceRGBBlendFactor_, 4);

  v20 = objc_msgSend(v7, sel_colorAttachments);
  v21 = objc_msgSend(v20, sel_objectAtIndexedSubscript_, 0);

  if (!v21)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  objc_msgSend(v21, sel_setSourceAlphaBlendFactor_, 4);

  v22 = objc_msgSend(v7, sel_colorAttachments);
  v23 = objc_msgSend(v22, sel_objectAtIndexedSubscript_, 0);

  if (!v23)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  objc_msgSend(v23, sel_setDestinationRGBBlendFactor_, 5);

  v24 = objc_msgSend(v7, sel_colorAttachments);
  v25 = objc_msgSend(v24, sel_objectAtIndexedSubscript_, 0);

  if (!v25)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }
  objc_msgSend(v25, sel_setDestinationAlphaBlendFactor_, 5);

  v26 = objc_msgSend(v7, sel_colorAttachments);
  v27 = objc_msgSend(v26, sel_objectAtIndexedSubscript_, 0);

  if (!v27)
    goto LABEL_24;
  objc_msgSend(v27, sel_setPixelFormat_, a2);

  v28 = 8;
  if ((objc_msgSend(a1, sel_supportsTextureSampleCount_, 8) & 1) == 0)
  {
    if (objc_msgSend(a1, sel_supportsTextureSampleCount_, 4))
      v28 = 4;
    else
      v28 = 1;
  }
  objc_msgSend(v7, sel_setRasterSampleCount_, v28);
  v34[0] = 0;
  v29 = objc_msgSend(a1, sel_newRenderPipelineStateWithDescriptor_error_, v7, v34);
  if (v29)
  {
    v30 = v29;
    v31 = v34[0];
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    *(_QWORD *)(v3 + 32) = v30;
  }
  else
  {
    v32 = v34[0];
    sub_22655BF6C();

    swift_willThrow();
    swift_unknownObjectRelease();

    swift_willThrow();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    type metadata accessor for DotsRenderer();
    swift_deallocPartialClassInstance();
  }
  return v3;
}

uint64_t sub_2264E9C0C(void *a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, float a6, float a7)
{
  uint64_t v7;
  void *v11;
  id v12;
  uint64_t v13;
  id v19;
  id v20;
  float v21;
  uint64_t v22;
  float v23;
  id v24;
  uint64_t v30;
  int v31;
  float v32;
  uint64_t v33;
  _OWORD v34[4];
  uint64_t v35;

  v35 = *MEMORY[0x24BDAC8D0];
  objc_msgSend(a1, sel_setRenderPipelineState_, *(_QWORD *)(v7 + 32));
  v34[0] = a2;
  v34[1] = a3;
  v34[2] = a4;
  v34[3] = a5;
  v11 = *(void **)(v7 + 16);
  v12 = objc_msgSend(v11, sel_newBufferWithBytes_length_options_, v34, 64, 0);
  if (!v12)
  {
    __break(1u);
    goto LABEL_8;
  }
  objc_msgSend(a1, sel_setVertexBuffer_offset_atIndex_, v12, 0, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255847228);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 32) = xmmword_226566E10;
  *(_QWORD *)(v13 + 48) = 0;
  *(_OWORD *)(v13 + 64) = xmmword_226566E20;
  *(_QWORD *)(v13 + 80) = 1065353216;
  *(_OWORD *)(v13 + 96) = xmmword_226566E30;
  *(_QWORD *)(v13 + 112) = 0x3F80000000000000;
  *(_OWORD *)(v13 + 128) = xmmword_226566E40;
  __asm { FMOV            V0.2S, #1.0 }
  *(_QWORD *)(v13 + 144) = _D0;
  v19 = objc_msgSend(v11, sel_newBufferWithBytes_length_options_, v13 + 32, 128, 0);
  if (!v19)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v20 = v19;
  swift_setDeallocating();
  swift_deallocClassInstance();
  objc_msgSend(a1, sel_setVertexBuffer_offset_atIndex_, v20, 0, 1);
  v21 = cosf(a7);
  HIDWORD(v22) = 1056964608;
  *(float *)&v22 = (float)(v21 + 1.0) * 0.5;
  v23 = 0.0;
  if (a6 > 0.0)
    v23 = a6;
  v30 = 0x4160000041200000;
  v31 = 1048576000;
  v32 = v23;
  v33 = v22;
  v24 = objc_msgSend(v11, sel_newBufferWithBytes_length_options_, &v30, 24, 0);
  if (!v24)
LABEL_9:
    __break(1u);
  objc_msgSend(a1, sel_setFragmentBuffer_offset_atIndex_, v24, 0, 0);
  objc_msgSend(a1, sel_drawPrimitives_vertexStart_vertexCount_, 4, 0, 4);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_2264E9E7C()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DotsRenderer()
{
  return objc_opt_self();
}

uint64_t sub_2264E9EC8()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for ARFrameLogManager();
  v0 = swift_allocObject();
  result = sub_2264EA730();
  qword_25585AFD0 = v0;
  return result;
}

uint64_t sub_2264E9F00(uint64_t result, uint64_t a2, double a3)
{
  double v3;
  _QWORD *v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(double *)(result + 48);
  if (v3 <= a3)
  {
    if (v3 <= 0.0 || 1.5 / (double)a2 >= a3 - v3)
      goto LABEL_9;
    v4 = (_QWORD *)(result + 56);
    v8 = *(_QWORD *)(result + 56);
    v6 = __OFADD__(v8, 1);
    v7 = v8 + 1;
    if (v6)
    {
      __break(1u);
      goto LABEL_9;
    }
LABEL_3:
    *v4 = v7;
LABEL_9:
    *(double *)(result + 48) = a3;
    *(_QWORD *)(result + 144) = a2;
    return result;
  }
  v4 = (_QWORD *)(result + 64);
  v5 = *(_QWORD *)(result + 64);
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (!v6)
    goto LABEL_3;
  __break(1u);
  return result;
}

uint64_t sub_2264E9F68(uint64_t result, double a2)
{
  double v2;
  _QWORD *v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(double *)(result + 80);
  if (v2 <= a2)
  {
    if (v2 <= 0.0 || 1.5 / (double)*(uint64_t *)(result + 144) >= a2 - v2)
      goto LABEL_9;
    v3 = (_QWORD *)(result + 88);
    v7 = *(_QWORD *)(result + 88);
    v5 = __OFADD__(v7, 1);
    v6 = v7 + 1;
    if (v5)
    {
      __break(1u);
      goto LABEL_9;
    }
LABEL_3:
    *v3 = v6;
LABEL_9:
    *(double *)(result + 80) = a2;
    return result;
  }
  v3 = (_QWORD *)(result + 96);
  v4 = *(_QWORD *)(result + 96);
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (!v5)
    goto LABEL_3;
  __break(1u);
  return result;
}

uint64_t sub_2264E9FD0(uint64_t result, double a2)
{
  double v3;
  double v4;
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(double *)(result + 80);
  v4 = *(double *)(result + 112);
  if (v4 <= a2)
  {
    if (v4 <= 0.0 || 1.5 / (double)*(uint64_t *)(result + 144) >= a2 - v4)
      goto LABEL_9;
    v5 = (_QWORD *)(result + 120);
    v9 = *(_QWORD *)(result + 120);
    v7 = __OFADD__(v9, 1);
    v8 = v9 + 1;
    if (v7)
    {
      __break(1u);
      goto LABEL_9;
    }
  }
  else
  {
    v5 = (_QWORD *)(result + 128);
    v6 = *(_QWORD *)(result + 128);
    v7 = __OFADD__(v6, 1);
    v8 = v6 + 1;
    if (v7)
    {
      __break(1u);
      goto LABEL_14;
    }
  }
  *v5 = v8;
LABEL_9:
  v10 = *(_QWORD *)(result + 136);
  if (v3 == a2)
  {
LABEL_12:
    *(double *)(result + 112) = a2;
    return sub_2264EA09C(*(_QWORD *)(result + 56), *(_QWORD *)(result + 64), *(_QWORD *)(result + 72), *(_QWORD *)(result + 88), *(_QWORD *)(result + 96), *(_QWORD *)(result + 104), *(_QWORD *)(result + 120), *(_QWORD *)(result + 128), *(double *)(result + 48), v3, a2, v10);
  }
  v7 = __OFADD__(v10++, 1);
  if (!v7)
  {
    *(_QWORD *)(result + 136) = v10;
    goto LABEL_12;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_2264EA09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, uint64_t a12)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v37 = a8;
  v35 = a12;
  v36 = a7;
  v21 = sub_22655BF00();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v34 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v34 - v26;
  sub_2264EA2F8(a1, a2, a3, 0x74694B5241, 0xE500000000000000, 0, (uint64_t)&v34 - v26, a9);
  sub_22655BED0();
  sub_22655BEE8();
  v28 = *(void (**)(char *, uint64_t))(v22 + 8);
  v28(v24, v21);
  sub_2264EA2F8(a4, a5, a6, 0x6568636143, 0xE500000000000000, 0, (uint64_t)v24, a10);
  sub_22655BEE8();
  v28(v24, v21);
  sub_22655BED0();
  sub_22655BEE8();
  v28(v24, v21);
  sub_2264EA2F8(v36, v37, v35, 0x2E646E6552, 0xE500000000000000, 1, (uint64_t)v24, a11);
  sub_22655BEE8();
  v28(v24, v21);
  v29 = MEMORY[0x22769A944](v38 + 16);
  if (v29)
  {
    v30 = v29 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_debugDelegate;
    swift_beginAccess();
    if (MEMORY[0x22769A944](v30))
    {
      v31 = *(_QWORD *)(v30 + 8);
      ObjectType = swift_getObjectType();
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 24))(v27, ObjectType, v31);
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
  }
  return ((uint64_t (*)(char *, uint64_t))v28)(v27, v21);
}

uint64_t sub_2264EA2F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>, double a8@<D0>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t KeyPath;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;

  v39 = a6;
  v37 = a2;
  v38 = a3;
  v43 = a7;
  v12 = sub_22655BF30();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_22655BF00();
  v42 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v36 - v17;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v36 - v20;
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v36 - v23;
  v46 = a4;
  v47 = a5;
  swift_bridgeObjectRetain();
  sub_22655CE24();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255843100);
  v25 = swift_allocObject();
  v26 = MEMORY[0x24BEE13C8];
  *(_OWORD *)(v25 + 16) = xmmword_22655F8F0;
  v27 = MEMORY[0x24BEE1448];
  *(_QWORD *)(v25 + 56) = v26;
  *(_QWORD *)(v25 + 64) = v27;
  *(double *)(v25 + 32) = a8;
  v28 = sub_22655CDAC();
  v40 = v29;
  v41 = v28;
  swift_bridgeObjectRelease();
  v46 = 40;
  v47 = 0xE100000000000000;
  v45 = a1;
  sub_22655D544();
  sub_22655CE24();
  swift_bridgeObjectRelease();
  sub_22655CE24();
  sub_22655BF24();
  sub_22655BF0C();
  KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  v30 = (void *)objc_opt_self();
  v46 = (uint64_t)objc_msgSend(v30, sel_systemRedColor);
  sub_2264B10A4();
  sub_22655BEC4();
  v46 = 40;
  v47 = 0xE100000000000000;
  if ((v39 & 1) != 0)
    v31 = v38;
  else
    v31 = v37;
  v45 = v31;
  sub_22655D544();
  sub_22655CE24();
  swift_bridgeObjectRelease();
  sub_22655CE24();
  sub_22655BF24();
  sub_22655BF0C();
  v32 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v32);
  *(&v36 - 2) = v33;
  swift_getKeyPath();
  v46 = (uint64_t)objc_msgSend(v30, sel_systemOrangeColor);
  sub_22655BEC4();
  sub_22655BF24();
  sub_22655BF0C();
  sub_22655BEDC();
  v34 = *(void (**)(char *, uint64_t))(v42 + 8);
  v34(v15, v13);
  sub_22655BEDC();
  v34(v18, v13);
  v34(v21, v13);
  return ((uint64_t (*)(char *, uint64_t))v34)(v24, v13);
}

uint64_t sub_2264EA6D4()
{
  uint64_t v0;

  sub_22644F0C0(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ARFrameLogManager()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for ARFrameLogManager.ARFrameStats()
{
  return &type metadata for ARFrameLogManager.ARFrameStats;
}

uint64_t sub_2264EA730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v1 = sub_22655D064();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22655D04C();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_22655CBFC();
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_BYTE *)(v0 + 32) = 0;
  sub_22646EF58();
  sub_22655CBCC();
  v8[1] = MEMORY[0x24BEE4AF8];
  sub_22646EF94();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558442B0);
  sub_22646EFDC();
  sub_22655D214();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE5750], v1);
  *(_QWORD *)(v0 + 40) = sub_22655D088();
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  *(_QWORD *)(v0 + 144) = 60;
  return v0;
}

uint64_t sub_2264EA8FC()
{
  return 8;
}

uint64_t sub_2264EA908()
{
  return swift_release();
}

uint64_t sub_2264EA910(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

_QWORD *sub_2264EA924(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_2264EA930(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  float32x2_t v10;
  float32x2_t v11;
  float v12;
  float v13;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  double v21;
  double v22;

  v2 = v1;
  v3 = result;
  v4 = *(_QWORD *)(result + 16);
  v5 = MEMORY[0x24BEE4AF8];
  if (v4)
  {
    v6 = 0;
    v7 = result + 32;
    v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
    while (1)
    {
      v9 = v4 - 1 == v6 ? 0 : v6 + 1;
      if (v9 >= *(_QWORD *)(v3 + 16))
        break;
      v10 = *(float32x2_t *)(v7 + 8 * v6);
      v11 = vsub_f32(v10, *(float32x2_t *)(v7 + 8 * v9));
      v12 = fabsf(v11.f32[0]);
      v13 = fabsf(v11.f32[1]);
      if (v12 >= 0.00000011921 || v13 >= 0.00000011921)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_226486C2C(0, v8[2] + 1, 1, v8);
          v8 = (_QWORD *)result;
        }
        v16 = v8[2];
        v15 = v8[3];
        if (v16 >= v15 >> 1)
        {
          result = (uint64_t)sub_226486C2C((_QWORD *)(v15 > 1), v16 + 1, 1, v8);
          v8 = (_QWORD *)result;
        }
        v8[2] = v16 + 1;
        v8[v16 + 4] = v10;
      }
      if (v4 == ++v6)
        goto LABEL_18;
    }
    __break(1u);
  }
  else
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_18:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 16) = v8;
    swift_bridgeObjectRetain_n();
    sub_22655D37C();
    v17 = v8[2];
    result = swift_bridgeObjectRetain();
    if (!v17)
    {
LABEL_22:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v2 + 24) = v5;
      swift_bridgeObjectRelease();
      return v2;
    }
    v18 = 0;
    while (1)
    {
      v19 = v8[2];
      if (!v19)
        break;
      v20 = v18 + 1;
      v21 = *(double *)&v8[v18 + 4];
      v22 = *(double *)&v8[(v18 + 1) % v19 + 4];
      type metadata accessor for CDTEdge();
      swift_allocObject();
      sub_226495C8C(v21, v22);
      sub_22655D364();
      sub_22655D388();
      sub_22655D394();
      result = sub_22655D370();
      v18 = v20;
      if (v17 == v20)
        goto LABEL_22;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2264EAB50(uint64_t a1, float a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  simd_float2 v10;
  simd_float2 *v11;
  float v12;
  uint64_t result;
  simd_float2 *v15;
  float v16;
  uint64_t v17;
  unint64_t v18;
  simd_float2 *v19;
  float v20;
  uint64_t v21;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v6 = *(_QWORD *)(a1 + 24);
    if (v6 >> 62)
    {
LABEL_43:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v7 = sub_22655D400();
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    v8 = 0;
    v9 = v6 & 0xC000000000000001;
    while (1)
    {
      if (v8 >= *(_QWORD *)(v3 + 16))
      {
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      if (v7)
      {
        v10 = *(simd_float2 *)(v3 + 32 + 8 * v8);
        if (v9)
        {
          swift_bridgeObjectRetain();
          v11 = (simd_float2 *)MEMORY[0x2276999E4](0, v6);
        }
        else
        {
          if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_41;
          v11 = *(simd_float2 **)(v6 + 32);
          swift_bridgeObjectRetain();
          swift_retain();
        }
        v12 = _simd_orient_pf2(v11[2], v11[3], v10);
        result = swift_release();
        if (fabsf(v12) >= a2 && v7 != 1)
        {
          if (v9)
          {
            v15 = (simd_float2 *)MEMORY[0x2276999E4](1, v6);
          }
          else
          {
            if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
            {
              __break(1u);
              return result;
            }
            v15 = *(simd_float2 **)(v6 + 40);
            swift_retain();
          }
          v16 = _simd_orient_pf2(v15[2], v15[3], v10);
          swift_release();
          if (fabsf(v16) >= a2)
          {
            if (v12 > 0.0 == v16 <= 0.0)
            {
LABEL_36:
              swift_bridgeObjectRelease();
              v21 = 1;
              goto LABEL_37;
            }
            v17 = 0;
            while (v7 - 2 != v17)
            {
              v18 = v17 + 2;
              if (v9)
              {
                v19 = (simd_float2 *)MEMORY[0x2276999E4](v17 + 2, v6);
                if (__OFADD__(v18, 1))
                  goto LABEL_40;
              }
              else
              {
                if (v18 >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_42;
                v19 = *(simd_float2 **)(v6 + 8 * v17 + 48);
                swift_retain();
                if (__OFADD__(v18, 1))
                  goto LABEL_40;
              }
              v20 = _simd_orient_pf2(v19[2], v19[3], v10);
              swift_release();
              if (fabsf(v20) < a2)
                break;
              ++v17;
              if (v12 > 0.0 == v20 <= 0.0)
                goto LABEL_36;
            }
          }
        }
        swift_bridgeObjectRelease();
      }
      if (++v8 == v4)
      {
        v21 = 0;
LABEL_37:
        swift_bridgeObjectRelease();
        return v21;
      }
    }
  }
  return 0;
}

uint64_t sub_2264EADEC()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  float32x2_t *v11;
  uint64_t v12;
  float32x2_t v13;
  float32x2_t v14;
  float32x2_t v15;
  float32x2_t v16;
  float v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  float32x2_t v22;
  float v23;
  uint64_t v24;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
  if (v1 < 3)
    return 0;
  if (v1 != 3)
  {
    v3 = *(_QWORD *)(v0 + 24);
    if (v3 >> 62)
      goto LABEL_39;
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v5 = v4;
    if (v4)
    {
      while (1)
      {
        if ((v3 & 0xC000000000000001) != 0)
        {
          v6 = 0;
          v7 = 3;
          while (1)
          {
            v9 = MEMORY[0x2276999E4](v6, v3);
            v10 = v6 + 1;
            if (__OFADD__(v6, 1))
              break;
            v11 = (float32x2_t *)v9;
            if (v4 == -1 && v6 == 0x7FFFFFFFFFFFFFFFLL)
              goto LABEL_37;
            v12 = MEMORY[0x2276999E4](v10 % v4, v3);
            v13 = v11[2];
            v14 = v11[3];
            v15 = *(float32x2_t *)(v12 + 24);
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            v16 = vmul_f32(vsub_f32(v14, v13), (float32x2_t)vrev64_s32((int32x2_t)vsub_f32(v15, v13)));
            LODWORD(v17) = vsub_f32(v16, (float32x2_t)vdup_lane_s32((int32x2_t)v16, 1)).u32[0];
            if (fabsf(v17) < 1.4211e-14)
            {
              v8 = v7;
            }
            else
            {
              if (v17 <= 0.0)
                v8 = 1;
              else
                v8 = 2;
              if (v7 != 3 && (_DWORD)v8 != v7)
                goto LABEL_33;
            }
            ++v6;
            v7 = v8;
            if (v10 == v5)
              goto LABEL_42;
          }
          __break(1u);
        }
        else
        {
          v18 = 0;
          v19 = 3;
          while (1)
          {
            v21 = v18 + 1;
            if (__OFADD__(v18, 1))
              break;
            if (v4 == -1 && v18 == 0x7FFFFFFFFFFFFFFFLL)
              goto LABEL_38;
            if ((unint64_t)(v21 % v4) >= *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_36;
            v22 = vmul_f32(vsub_f32(*(float32x2_t *)(*(_QWORD *)(v3 + 8 * v18 + 32) + 24), *(float32x2_t *)(*(_QWORD *)(v3 + 8 * v18 + 32) + 16)), (float32x2_t)vrev64_s32((int32x2_t)vsub_f32(*(float32x2_t *)(*(_QWORD *)(v3 + 32 + 8 * (v21 % v4)) + 24), *(float32x2_t *)(*(_QWORD *)(v3 + 8 * v18 + 32) + 16))));
            LODWORD(v23) = vsub_f32(v22, (float32x2_t)vdup_lane_s32((int32x2_t)v22, 1)).u32[0];
            if (fabsf(v23) < 1.4211e-14)
            {
              v20 = v19;
            }
            else
            {
              if (v23 <= 0.0)
                v20 = 1;
              else
                v20 = 2;
              if (v19 != 3 && (_DWORD)v20 != v19)
              {
LABEL_33:
                swift_bridgeObjectRelease();
                return 0;
              }
            }
            ++v18;
            v19 = v20;
            if (v21 == v5)
              goto LABEL_42;
          }
        }
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        swift_bridgeObjectRetain();
        v24 = sub_22655D400();
        if (!v24)
          break;
        v5 = v24;
        swift_bridgeObjectRetain();
        v4 = sub_22655D400();
        swift_bridgeObjectRelease();
        if (!v4)
        {
          __break(1u);
          break;
        }
      }
    }
LABEL_42:
    swift_bridgeObjectRelease();
  }
  return 1;
}

uint64_t sub_2264EB070()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  float v5;
  uint64_t v6;
  float32x2_t v7;
  float32x2_t v8;
  uint64_t v9;
  float32x2_t *v10;

  v1 = *(_QWORD *)(v0 + 24);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_12:
    swift_bridgeObjectRelease();
    v5 = 0.0;
    return v5 > 0.0;
  }
  swift_bridgeObjectRetain();
  result = sub_22655D400();
  v2 = result;
  if (!result)
    goto LABEL_12;
LABEL_3:
  if (v2 >= 1)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      v4 = 0;
      v5 = 0.0;
      do
      {
        v6 = MEMORY[0x2276999E4](v4++, v1);
        v8 = *(float32x2_t *)(v6 + 16);
        v7 = *(float32x2_t *)(v6 + 24);
        swift_unknownObjectRelease();
        v5 = v5 + vmul_lane_f32(vsub_f32(v7, v8), vadd_f32(v7, v8), 1).f32[0];
      }
      while (v2 != v4);
    }
    else
    {
      v9 = 0;
      v5 = 0.0;
      do
      {
        v10 = *(float32x2_t **)(v1 + 8 * v9++ + 32);
        v5 = v5 + vmul_lane_f32(vsub_f32(v10[3], v10[2]), vadd_f32(v10[3], v10[2]), 1).f32[0];
      }
      while (v2 != v9);
    }
    swift_bridgeObjectRelease();
    return v5 > 0.0;
  }
  __break(1u);
  return result;
}

uint64_t sub_2264EB184(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  float32x2_t *v3;
  double v4;
  float32x2_t *v5;
  unint64_t v6;
  float32x2_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  float32x2_t *v13;
  double v14;
  int32x2_t v15;
  _QWORD *v16;
  uint64_t v17;
  float32x2_t *v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  double v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  float32x2_t v42;
  uint64_t v43;
  uint64_t v44;
  float32x2_t *v45;
  unint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  float32x2_t *v53;
  _QWORD *v54;

  v3 = (float32x2_t *)v1;
  v53 = (float32x2_t *)a1;
  v4 = *(double *)(a1 + 16);
  LOBYTE(v5) = sub_226453EFC(v1, 0.00000011921, v4);
  v6 = MEMORY[0x24BEE4AF8];
  if ((v5 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255841D18);
    v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_22655F8F0;
    *(double *)(v1 + 32) = v4;
    v7 = (float32x2_t *)sub_2264882F0(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v2 = (unint64_t)v7[2];
    v8 = (unint64_t)v7[3];
    v9 = v2 + 1;
    if (v2 >= v8 >> 1)
      goto LABEL_109;
    goto LABEL_3;
  }
  v10 = -1;
  v7 = (float32x2_t *)MEMORY[0x24BEE4AF8];
LABEL_5:
  v54 = (_QWORD *)v6;
  v9 = (uint64_t)v3[3];
  v50 = (uint64_t)v3;
  v3 = v7;
  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v1 = v9;
    else
      v1 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = sub_22655D400();
    if (!v11)
      goto LABEL_17;
  }
  else
  {
    v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v11)
      goto LABEL_17;
  }
  if (v11 < 1)
    goto LABEL_108;
  v12 = 0;
  v6 = v9 & 0xC000000000000001;
  v2 = 953267991;
  do
  {
    if (v6)
    {
      v13 = (float32x2_t *)MEMORY[0x2276999E4](v12, v9);
    }
    else
    {
      v13 = *(float32x2_t **)(v9 + 8 * v12 + 32);
      swift_retain();
    }
    ++v12;
    v16 = sub_226495860(v13, 0, 0.0001, v14, v15);
    sub_22646ABA8((uint64_t)v16);
    swift_release();
  }
  while (v11 != v12);
LABEL_17:
  swift_bridgeObjectRelease();
  swift_retain();
  v9 = 0;
  sub_2264EBA84(&v54, v53);
  swift_release();
  v1 = (unint64_t)v54;
  v17 = v54[2];
  if (v17)
  {
    v6 = (unint64_t)(v54 + 4);
    v9 = (uint64_t)&qword_255841D18;
    v8 = (unint64_t)&unk_22655F000;
    v18 = v3;
    do
    {
      v19 = *(_QWORD *)v6;
      if ((v5 & 1) != 0)
      {
        if ((v10 & 0x8000000000000000) != 0)
          goto LABEL_103;
        v8 = (unint64_t)v18[2];
        if (v10 >= v8)
          goto LABEL_105;
        v20 = (_QWORD *)v18[v10 + 4];
        swift_bridgeObjectRetain();
        v3 = v18;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v20 = sub_226486C2C(0, v20[2] + 1, 1, v20);
        v2 = v20[2];
        v21 = v20[3];
        if (v2 >= v21 >> 1)
          v20 = sub_226486C2C((_QWORD *)(v21 > 1), v2 + 1, 1, v20);
        v20[2] = v2 + 1;
        v20[v2 + 4] = v19;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v18 = (float32x2_t *)sub_2264C1228(v18);
        v18[v10 + 4] = (float32x2_t)v20;
        swift_bridgeObjectRelease();
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_255841D18);
        v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_22655F8F0;
        *(_QWORD *)(v22 + 32) = v19;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v18 = (float32x2_t *)sub_2264882F0(0, *(_QWORD *)&v18[2] + 1, 1, v18);
        v2 = (unint64_t)v18[2];
        v23 = (unint64_t)v18[3];
        v7 = v18;
        if (v2 >= v23 >> 1)
          v7 = (float32x2_t *)sub_2264882F0((_QWORD *)(v23 > 1), v2 + 1, 1, v18);
        v7[2] = (float32x2_t)(v2 + 1);
        v8 = (unint64_t)&v7[v2];
        *(_QWORD *)(v8 + 32) = v22;
        if (__OFADD__(v10++, 1))
          goto LABEL_104;
        v18 = v7;
      }
      LOBYTE(v5) = v5 ^ 1;
      v6 += 8;
      --v17;
    }
    while (v17);
  }
  else
  {
    v18 = v3;
  }
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)&v18[2])
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  v25 = *(double *)&v53[3];
  if ((sub_226453EFC(v50, 0.00000011921, v25) & 1) != 0)
  {
    if ((v10 & 0x8000000000000000) == 0)
    {
      if (v10 < *(_QWORD *)&v18[2])
      {
        v1 = (unint64_t)v18[v10 + 4];
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        {
LABEL_42:
          v6 = *(_QWORD *)(v1 + 16);
          v26 = *(_QWORD *)(v1 + 24);
          v9 = v6 + 1;
          if (v6 >= v26 >> 1)
            v1 = (unint64_t)sub_226486C2C((_QWORD *)(v26 > 1), v6 + 1, 1, (_QWORD *)v1);
          *(_QWORD *)(v1 + 16) = v9;
          *(double *)(v1 + 8 * v6 + 32) = v25;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v18 = (float32x2_t *)sub_2264C1228(v18);
          goto LABEL_57;
        }
LABEL_114:
        v1 = (unint64_t)sub_226486C2C(0, *(_QWORD *)(v1 + 16) + 1, 1, (_QWORD *)v1);
        goto LABEL_42;
      }
      goto LABEL_112;
    }
    __break(1u);
LABEL_111:
    __break(1u);
LABEL_112:
    __break(1u);
    goto LABEL_113;
  }
  if ((v10 & 0x8000000000000000) != 0)
    goto LABEL_111;
  if (v10 >= *(_QWORD *)&v18[2])
  {
LABEL_113:
    __break(1u);
    goto LABEL_114;
  }
  v1 = (unint64_t)v18[v10 + 4];
  if (*(_QWORD *)(v1 + 16) != 1)
  {
LABEL_58:
    v28 = swift_bridgeObjectRetain();
    v29 = sub_2264D216C(v28);
    v49 = *(_QWORD *)(v29 + 16);
    v51 = v29;
    if (v49)
    {
      v30 = 0;
      v48 = v29 + 32;
      do
      {
        v8 = *(_QWORD *)(v51 + 16);
        if (v30 >= v8)
          goto LABEL_106;
        v53 = v18;
        v31 = (unint64_t *)(v48 + 16 * v30);
        v9 = v31[1];
        v52 = *v31;
        swift_bridgeObjectRetain_n();
        v6 = sub_2264D5648(v9);
        v32 = *(_QWORD *)(v6 + 16);
        if (v32 >= 2)
        {
          v1 = 0;
          v2 = v32 >> 1;
          v5 = (float32x2_t *)(v32 - 1);
          v33 = 16 * v32;
          v34 = 40;
          while (1)
          {
            if ((float32x2_t *)v1 != v5)
            {
              v8 = *(_QWORD *)(v6 + 16);
              if (v1 >= v8)
              {
                __break(1u);
LABEL_99:
                __break(1u);
LABEL_100:
                __break(1u);
LABEL_101:
                __break(1u);
LABEL_102:
                __break(1u);
LABEL_103:
                __break(1u);
LABEL_104:
                __break(1u);
LABEL_105:
                __break(1u);
LABEL_106:
                __break(1u);
LABEL_107:
                __break(1u);
LABEL_108:
                __break(1u);
LABEL_109:
                v7 = (float32x2_t *)sub_2264882F0((_QWORD *)(v8 > 1), v9, 1, v7);
LABEL_3:
                v10 = 0;
                v7[2] = (float32x2_t)v9;
                v7[v2 + 4] = (float32x2_t)v1;
                goto LABEL_5;
              }
              if ((unint64_t)v5 >= v8)
                goto LABEL_99;
              v37 = *(_QWORD *)(v6 + v34 - 8);
              v38 = *(_QWORD *)(v6 + v34);
              v3 = *(float32x2_t **)(v6 + v33 + 16);
              v39 = *(_QWORD *)(v6 + v33 + 24);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v6 = (unint64_t)sub_2264C114C((_QWORD *)v6);
              v35 = (_QWORD *)(v6 + v34);
              *(v35 - 1) = v3;
              *v35 = v39;
              v36 = v6 + v33;
              *(_QWORD *)(v36 + 16) = v37;
              *(_QWORD *)(v36 + 24) = v38;
            }
            ++v1;
            v34 += 16;
            v5 = (float32x2_t *)((char *)v5 - 1);
            v33 -= 16;
            if (v2 == v1)
            {
              v32 = *(_QWORD *)(v6 + 16);
              break;
            }
          }
        }
        v2 = v9;
        if (v32)
        {
          v40 = *(_QWORD *)(v6 + 32);
          v2 = v9;
          if (v40 >= 1)
          {
            v41 = 0;
            v5 = (float32x2_t *)(v6 + 40);
            v1 = v32 - 1;
            v2 = v9;
            do
            {
              v8 = v40 - 1;
              if ((unint64_t)(v40 - 1) >= *(_QWORD *)(v2 + 16))
                goto LABEL_100;
              v42 = vsub_f32(*v5, *(float32x2_t *)(v2 + 8 * v8 + 32));
              if (vaddv_f32(vmul_f32(v42, v42)) < 0.00000001)
              {
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v2 = (unint64_t)sub_2264C10E8((_QWORD *)v2);
                v8 = *(_QWORD *)(v2 + 16);
                if (v40 >= v8)
                  goto LABEL_102;
                v3 = (float32x2_t *)(v8 - 1);
                v43 = v8 - 1 - v40;
                if (v43 < 0)
                  goto LABEL_116;
                memmove((void *)(v2 + 8 * v40 + 32), (const void *)(v2 + 8 * v40 + 40), 8 * v43);
                *(_QWORD *)(v2 + 16) = v3;
              }
              if (v1 == v41)
                break;
              v8 = *(_QWORD *)(v6 + 16);
              if (++v41 >= v8)
                goto LABEL_101;
              v40 = (uint64_t)v5[1];
              v5 += 2;
            }
            while (v40 > 0);
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v2 + 16) >= 2uLL)
        {
          v18 = v53;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v18 = (float32x2_t *)sub_2264882F0(0, *(_QWORD *)&v53[2] + 1, 1, v53);
          v1 = (unint64_t)v18[2];
          v46 = (unint64_t)v18[3];
          v9 = v1 + 1;
          if (v1 >= v46 >> 1)
            v18 = (float32x2_t *)sub_2264882F0((_QWORD *)(v46 > 1), v1 + 1, 1, v18);
          v18[2] = (float32x2_t)v9;
          v18[v1 + 4] = (float32x2_t)v2;
        }
        else
        {
          swift_bridgeObjectRelease();
          v18 = v53;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v18 = (float32x2_t *)sub_2264C1228(v53);
          v8 = (unint64_t)v18[2];
          if (v52 >= v8)
            goto LABEL_107;
          v3 = (float32x2_t *)(v8 - 1);
          v44 = v8 - 1 - v52;
          if (v44 < 0)
            goto LABEL_116;
          v45 = &v18[v52];
          v9 = (uint64_t)v45[4];
          memmove(&v45[4], &v45[5], 8 * v44);
          v18[2] = (float32x2_t)v3;
          swift_bridgeObjectRelease();
        }
        ++v30;
      }
      while (v30 != v49);
    }
    swift_bridgeObjectRelease();
    return (uint64_t)v18;
  }
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v1 = (unint64_t)sub_226486C2C(0, 2, 1, (_QWORD *)v1);
  v6 = *(_QWORD *)(v1 + 16);
  v27 = *(_QWORD *)(v1 + 24);
  v9 = v6 + 1;
  if (v6 >= v27 >> 1)
    v1 = (unint64_t)sub_226486C2C((_QWORD *)(v27 > 1), v6 + 1, 1, (_QWORD *)v1);
  *(_QWORD *)(v1 + 16) = v9;
  *(double *)(v1 + 8 * v6 + 32) = v25;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = (float32x2_t *)sub_2264C1228(v18);
  if (v10 < *(_QWORD *)&v18[2])
  {
LABEL_57:
    v18[v10 + 4] = (float32x2_t)v1;
    swift_bridgeObjectRelease();
    goto LABEL_58;
  }
  __break(1u);
LABEL_116:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_2264EBA38()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CDTPolygon()
{
  return objc_opt_self();
}

uint64_t sub_2264EBA84(_QWORD **a1, float32x2_t *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7[2];

  v4 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_2264C10E8(v4);
  v5 = v4[2];
  v7[0] = (uint64_t)(v4 + 4);
  v7[1] = v5;
  swift_retain();
  sub_2264E2B9C(v7, a2);
  swift_release();
  *a1 = v4;
  return swift_release_n();
}

uint64_t sub_2264EBB28(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return 0;
  sub_22655CE0C();
  return sub_22655CE48();
}

uint64_t sub_2264EBBA0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  v1 = v0[1];
  if ((v1 & 0x2000000000000000) == 0)
  {
    if ((*v0 & 0xFFFFFFFFFFFFLL) != 0)
    {
LABEL_5:
      sub_22655CE0C();
      return sub_22655CE30();
    }
    __break(1u);
  }
  if ((v1 & 0xF00000000000000) != 0)
    goto LABEL_5;
  __break(1u);
  return result;
}

void sub_2264EBBF4()
{
  __CFString *v0;
  CFTypeRef v1;
  uint64_t v2;
  uint64_t v3;

  v0 = (__CFString *)sub_22655CD64();
  v1 = sub_2264EBC48(v0);
  v3 = v2;

  qword_255847490 = (uint64_t)v1;
  *(_QWORD *)algn_255847498 = v3;
}

CFTypeRef sub_2264EBC48(const __CFString *a1)
{
  uint64_t v2;
  mach_port_t v3;
  const __CFDictionary *v4;
  io_service_t MatchingService;
  CFTypeRef result;
  const void *v7;
  const void *v8;
  CFTypeID v9;
  uint64_t v10;
  CFTypeID v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;

  v2 = sub_22655CDC4();
  MEMORY[0x24BDAC7A8](v2);
  v3 = *MEMORY[0x24BDD8B18];
  v4 = IOServiceMatching("IOPlatformExpertDevice");
  MatchingService = IOServiceGetMatchingService(v3, v4);
  result = IORegistryEntryCreateCFProperty(MatchingService, a1, (CFAllocatorRef)*MEMORY[0x24BDBD240], 0);
  if (result)
  {
    v7 = result;
    v8 = (const void *)swift_unknownObjectRetain();
    v9 = CFGetTypeID(v8);
    if (v9 == CFStringGetTypeID())
    {
      if (swift_dynamicCast())
        return (CFTypeRef)v18;
      else
        return 0;
    }
    v11 = CFGetTypeID(v7);
    if (v11 != CFDataGetTypeID() || (swift_unknownObjectRetain(), !swift_dynamicCast()))
    {
      swift_unknownObjectRelease();
      return 0;
    }
    sub_22655CDB8();
    v10 = sub_22655CDA0();
    v13 = v12;
    if (v12)
    {
      swift_bridgeObjectRetain();
      v14 = sub_2264EBB28(v10, v13);
      v16 = v15;
      swift_bridgeObjectRelease();
      if (v16)
      {
        if (!v14 && v16 == 0xE100000000000000)
        {
          swift_bridgeObjectRelease();
LABEL_16:
          sub_2264EBBA0();
          swift_unknownObjectRelease();
          sub_226455C98(v18, v19);
          swift_bridgeObjectRelease();
          return (CFTypeRef)v10;
        }
        v17 = sub_22655D55C();
        swift_bridgeObjectRelease();
        if ((v17 & 1) != 0)
          goto LABEL_16;
      }
    }
    swift_unknownObjectRelease();
    sub_226455C98(v18, v19);
    return (CFTypeRef)v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2264EBE98()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CDTBoundingCircle()
{
  return objc_opt_self();
}

uint64_t sub_2264EBEDC@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;

  v2 = sub_22655CD88();
  v4 = v3;
  if (v2 == sub_22655CD88() && v4 == v5)
    goto LABEL_15;
  v7 = sub_22655D55C();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v9 = 0;
  if ((v7 & 1) == 0)
  {
    v10 = sub_22655CD88();
    v12 = v11;
    if (v10 == sub_22655CD88() && v12 == v13)
    {
      v9 = 1;
LABEL_16:
      result = swift_bridgeObjectRelease_n();
      goto LABEL_17;
    }
    v15 = sub_22655D55C();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v15 & 1) != 0)
    {
      v9 = 1;
      goto LABEL_17;
    }
    v16 = sub_22655CD88();
    v18 = v17;
    if (v16 == sub_22655CD88() && v18 == v19)
    {
LABEL_15:
      v9 = 0;
      goto LABEL_16;
    }
    v20 = sub_22655D55C();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v9 = 0;
    if ((v20 & 1) != 0)
      goto LABEL_17;
    v21 = sub_22655CD88();
    v23 = v22;
    if (v21 == sub_22655CD88() && v23 == v24)
    {
      v9 = 2;
      goto LABEL_16;
    }
    v25 = sub_22655D55C();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v25 & 1) != 0)
    {
      v9 = 2;
      goto LABEL_17;
    }
    v26 = sub_22655CD88();
    v28 = v27;
    if (v26 == sub_22655CD88() && v28 == v29)
    {
      v9 = 3;
      goto LABEL_16;
    }
    v30 = sub_22655D55C();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v30 & 1) != 0)
    {
      v9 = 3;
      goto LABEL_17;
    }
    v31 = sub_22655CD88();
    v33 = v32;
    if (v31 == sub_22655CD88() && v33 == v34)
    {
      v9 = 4;
      goto LABEL_16;
    }
    v35 = sub_22655D55C();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v35 & 1) != 0)
    {
      v9 = 4;
      goto LABEL_17;
    }
    v36 = sub_22655CD88();
    v38 = v37;
    if (v36 == sub_22655CD88() && v38 == v39)
    {
      v9 = 5;
      goto LABEL_16;
    }
    v40 = sub_22655D55C();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v40 & 1) != 0)
    {
      v9 = 5;
      goto LABEL_17;
    }
    v41 = sub_22655CD88();
    v43 = v42;
    if (v41 == sub_22655CD88() && v43 == v44)
    {
      v9 = 6;
      goto LABEL_16;
    }
    v45 = sub_22655D55C();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v45 & 1) != 0)
    {
      v9 = 6;
      goto LABEL_17;
    }
    v46 = sub_22655CD88();
    v48 = v47;
    if (v46 == sub_22655CD88() && v48 == v49)
    {
      v9 = 7;
      goto LABEL_16;
    }
    v50 = sub_22655D55C();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v50 & 1) != 0)
    {
      v9 = 7;
      goto LABEL_17;
    }
    v51 = sub_22655CD88();
    v53 = v52;
    if (v51 == sub_22655CD88() && v53 == v54)
    {
      v9 = 8;
      goto LABEL_16;
    }
    v55 = sub_22655D55C();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v55 & 1) != 0)
    {
      v9 = 8;
      goto LABEL_17;
    }
    v56 = sub_22655CD88();
    v58 = v57;
    if (v56 == sub_22655CD88() && v58 == v59)
    {
      v9 = 9;
      goto LABEL_16;
    }
    v60 = sub_22655D55C();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v60 & 1) != 0)
    {
      v9 = 9;
      goto LABEL_17;
    }
    v61 = sub_22655CD88();
    v63 = v62;
    if (v61 == sub_22655CD88() && v63 == v64)
    {
      v9 = 10;
      goto LABEL_16;
    }
    v65 = sub_22655D55C();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v65 & 1) != 0)
    {
      v9 = 10;
      goto LABEL_17;
    }
    v66 = sub_22655CD88();
    v68 = v67;
    if (v66 == sub_22655CD88() && v68 == v69)
    {
      v9 = 11;
      goto LABEL_16;
    }
    v70 = sub_22655D55C();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v70 & 1) != 0)
    {
      v9 = 11;
      goto LABEL_17;
    }
    v71 = sub_22655CD88();
    v73 = v72;
    if (v71 == sub_22655CD88() && v73 == v74)
    {
      v9 = 12;
      goto LABEL_16;
    }
    v75 = sub_22655D55C();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v75 & 1) != 0)
    {
      v9 = 12;
      goto LABEL_17;
    }
    v76 = sub_22655CD88();
    v78 = v77;
    if (v76 == sub_22655CD88() && v78 == v79)
    {
      v9 = 13;
      goto LABEL_16;
    }
    v80 = sub_22655D55C();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v80 & 1) != 0)
    {
      v9 = 13;
      goto LABEL_17;
    }
    v81 = sub_22655CD88();
    v83 = v82;
    if (v81 == sub_22655CD88() && v83 == v84)
    {
      v9 = 14;
      goto LABEL_16;
    }
    v85 = sub_22655D55C();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v85 & 1) != 0)
    {
      v9 = 14;
      goto LABEL_17;
    }
    v86 = sub_22655CD88();
    v88 = v87;
    if (v86 == sub_22655CD88() && v88 == v89)
    {
      v9 = 15;
      goto LABEL_16;
    }
    v90 = sub_22655D55C();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v90 & 1) != 0)
      v9 = 15;
    else
      v9 = 0;
  }
LABEL_17:
  *a1 = v9;
  return result;
}

void sub_2264EC6B8(_QWORD *a1@<X8>)
{
  uint64_t v1;
  objc_class *v3;
  id v4;
  id v5;
  id v6;
  void *v7;

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8RoomPlan16RoomScanKeyframe_coreKeyframe), sel_copy);
  sub_22655D1CC();
  swift_unknownObjectRelease();
  sub_22643F548(0, &qword_2558481A0);
  if (swift_dynamicCast())
  {
    v3 = (objc_class *)type metadata accessor for RoomScanKeyframe(0);
    v4 = objc_allocWithZone(v3);
    v5 = v7;
    v6 = sub_2264F5978(v5);

    a1[3] = v3;
    *a1 = v6;
  }
  else
  {
    sub_22655D3E8();
    __break(1u);
  }
}

id sub_2264EC968()
{
  return sub_2264ED41C(type metadata accessor for RoomScanKeyframe);
}

uint64_t sub_2264EC9B4()
{
  return type metadata accessor for RoomScanKeyframe(0);
}

uint64_t type metadata accessor for RoomScanKeyframe(uint64_t a1)
{
  return sub_2264AA720(a1, (uint64_t *)&unk_255847580);
}

void sub_2264EC9D0()
{
  sub_2264ED4BC();
}

void sub_2264EC9E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255847590)
  {
    sub_22655C140();
    v0 = sub_22655D13C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255847590);
  }
}

void sub_2264ECA34(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  _QWORD v18[4];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255847FE8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 24) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2264F4C40();
  sub_22655D688();
  if (v2)
  {

    type metadata accessor for RoomScanKeyframeWrapper();
    swift_deallocPartialClassInstance();
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return;
  }
  sub_226482534();
  sub_22655D4B4();
  v9 = v18[0];
  v10 = v18[1];
  sub_22643F548(0, &qword_255848000);
  sub_22655D040();
  v14 = v9;
  sub_22643D7A0((uint64_t)v18, (uint64_t)&v15, &qword_2558436D8);
  if (v16)
  {
    sub_226455C88(&v15, &v17);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558436E0);
    swift_dynamicCast();
    v11 = (void *)sub_22655CCBC();
    swift_bridgeObjectRelease();
    v12 = (id)RSKeyframeFromDictionary();

    if (v12)
    {
      sub_226455C98(v14, v10);
      sub_22643D7E4((uint64_t)v18, &qword_2558436D8);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      *(_QWORD *)(v3 + 16) = v12;
      goto LABEL_4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_2264ECCB0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v17;
  id v19[3];

  v19[2] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255848188);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v19[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2264F4C40();
  sub_22655D694();
  v6 = (id)RSKeyframeToDictionary();
  if (v6)
  {
    v7 = v6;
    v8 = (void *)sub_22655CCC8();

  }
  else
  {
    v8 = 0;
  }
  v9 = (void *)objc_opt_self();
  v19[0] = v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848190);
  v10 = sub_22655D130();
  swift_bridgeObjectRelease();
  v19[0] = 0;
  v11 = objc_msgSend(v9, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v10, 1, v19);
  swift_unknownObjectRelease();
  v12 = v19[0];
  if (v11)
  {
    v13 = (void *)sub_22655C080();
    v15 = v14;

    v19[0] = v13;
    v19[1] = v15;
    sub_2264832E0();
    sub_22655D514();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return sub_226455C98((uint64_t)v13, (unint64_t)v15);
  }
  else
  {
    v17 = v12;
    sub_22655BF6C();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_2264ECEDC()
{
  return sub_2264EE348();
}

uint64_t sub_2264ECEF4()
{
  return sub_22655CE00();
}

uint64_t sub_2264ECF0C()
{
  return sub_2264EE3DC();
}

uint64_t sub_2264ECF24@<X0>(BOOL *a1@<X8>)
{
  return sub_2264EE430(a1);
}

void sub_2264ECF30(_QWORD *a1@<X8>)
{
  *a1 = 0x656D61726679656BLL;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_2264ECF4C()
{
  return 0x656D61726679656BLL;
}

uint64_t sub_2264ECF64@<X0>(BOOL *a1@<X8>)
{
  return sub_2264EE4D4(a1);
}

uint64_t sub_2264ECF70()
{
  sub_2264F4C40();
  return sub_22655D6A0();
}

uint64_t sub_2264ECF98()
{
  sub_2264F4C40();
  return sub_22655D6AC();
}

uint64_t sub_2264ECFC0()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RoomScanKeyframeWrapper()
{
  return objc_opt_self();
}

uint64_t sub_2264ED00C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2264EF4A4(a1, (void (*)(void))type metadata accessor for RoomScanKeyframeWrapper, (uint64_t (*)(uint64_t))sub_2264ECA34, a2);
}

uint64_t sub_2264ED038(_QWORD *a1)
{
  return sub_2264ECCB0(a1);
}

id sub_2264ED0D8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1 + *a3;
  swift_beginAccess();
  sub_22643D7A0(v8, (uint64_t)v7, (uint64_t *)&unk_255849AC0);
  v9 = sub_22655C140();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) != 1)
  {
    v11 = (void *)sub_22655C0F8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }
  return v11;
}

void sub_2264ED1C8(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    sub_22655C110();
    v10 = sub_22655C140();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 0, 1, v10);
  }
  else
  {
    v11 = sub_22655C140();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
  }
  v12 = (uint64_t)a1 + *a4;
  swift_beginAccess();
  v13 = a1;
  sub_2264F64F0((uint64_t)v9, v12);
  swift_endAccess();

}

__n128 sub_2264ED2D0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  return *(__n128 *)(a1 + *a3);
}

uint64_t sub_2264ED2F0(uint64_t result, __n128 a2, __n128 a3, __n128 a4, __n128 a5, uint64_t a6, _QWORD *a7)
{
  __n128 *v7;

  v7 = (__n128 *)(result + *a7);
  *v7 = a2;
  v7[1] = a3;
  v7[2] = a4;
  v7[3] = a5;
  return result;
}

id sub_2264ED410()
{
  return sub_2264ED41C(type metadata accessor for ObjectKitKeyframe);
}

id sub_2264ED41C(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_2264ED494()
{
  return type metadata accessor for ObjectKitKeyframe(0);
}

uint64_t type metadata accessor for ObjectKitKeyframe(uint64_t a1)
{
  return sub_2264AA720(a1, (uint64_t *)&unk_2558476A8);
}

void sub_2264ED4B0()
{
  sub_2264ED4BC();
}

void sub_2264ED4BC()
{
  unint64_t v0;

  sub_2264EC9E0();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_2264ED560(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  float32x4_t v8;
  float32x4_t v9;
  float32x4_t v10;
  float32x4_t v11;
  float32x4_t v12;
  float32x4_t v13;
  float32x4_t v14;
  float32x4_t v15;
  float32x4_t v16;
  float32x4_t v22;
  float32x4_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  int v34;
  uint64_t v36;

  v2 = v1;
  v4 = sub_22655D0F4();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_transform, v5);
  v9 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_2265600A0, v8.f32[0]), (float32x4_t)xmmword_226560080, *(float32x2_t *)v8.f32, 1), (float32x4_t)xmmword_2265600B0, v8, 2), (float32x4_t)xmmword_22655FA60, v8, 3);
  v11 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_2265600A0, v10.f32[0]), (float32x4_t)xmmword_226560080, *(float32x2_t *)v10.f32, 1), (float32x4_t)xmmword_2265600B0, v10, 2), (float32x4_t)xmmword_22655FA60, v10, 3);
  v13 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_2265600A0, v12.f32[0]), (float32x4_t)xmmword_226560080, *(float32x2_t *)v12.f32, 1), (float32x4_t)xmmword_2265600B0, v12, 2), (float32x4_t)xmmword_22655FA60, v12, 3);
  v15 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_2265600A0, v14.f32[0]), (float32x4_t)xmmword_226560080, *(float32x2_t *)v14.f32, 1), (float32x4_t)xmmword_2265600B0, v14, 2), (float32x4_t)xmmword_22655FA60, v14, 3);
  v16 = vmulq_f32(v9, (float32x4_t)0);
  __asm { FMOV            V6.4S, #-1.0 }
  v22 = vmlaq_f32(vmlaq_f32(vmlaq_f32(v16, _Q6, v11), (float32x4_t)0, v13), (float32x4_t)0, v15);
  v23 = vmlaq_f32(v16, (float32x4_t)0, v11);
  *(float32x4_t *)(v2 + 80) = vmlaq_f32(vmlaq_f32(vmlaq_f32(v9, (float32x4_t)0, v11), (float32x4_t)0, v13), (float32x4_t)0, v15);
  *(float32x4_t *)(v2 + 96) = v22;
  *(float32x4_t *)(v2 + 112) = vmlaq_f32(vmlaq_f32(v23, _Q6, v13), (float32x4_t)0, v15);
  *(float32x4_t *)(v2 + 128) = vaddq_f32(v15, vmlaq_f32(v23, (float32x4_t)0, v13));
  objc_msgSend(a1, sel_intrinsics);
  *(_OWORD *)(v2 + 144) = v24;
  *(_OWORD *)(v2 + 160) = v25;
  *(_OWORD *)(v2 + 176) = v26;
  objc_msgSend(a1, sel_imageResolution);
  *(_QWORD *)(v2 + 192) = v27;
  *(_QWORD *)(v2 + 200) = v28;
  objc_msgSend(a1, sel_transform);
  *(_OWORD *)(v2 + 16) = v29;
  *(_OWORD *)(v2 + 32) = v30;
  *(_OWORD *)(v2 + 48) = v31;
  *(_OWORD *)(v2 + 64) = v32;
  sub_22655D100();

  v33 = sub_22655D0E8();
  v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v7, 2, v33);
  if (v34)
  {
    if (v34 == 1)
      *(_QWORD *)(v2 + 208) = 0;
    else
      *(_QWORD *)(v2 + 208) = 2;
  }
  else
  {
    *(_QWORD *)(v2 + 208) = 1;
    sub_22643D748((uint64_t)v7, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
  }
  return v2;
}

_OWORD *sub_2264ED720(_QWORD *a1)
{
  _OWORD *v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _OWORD v31[3];
  char v32;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255848008);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2264F4C84();
  sub_22655D688();
  if (v2)
  {
    type metadata accessor for RSCamera();
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)&v29 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255841B50);
    v32 = 0;
    sub_2264F4CC8();
    sub_22655D4B4();
    sub_2264BA77C(v30);
    v27 = v10;
    v28 = v9;
    v25 = v12;
    v26 = v11;
    swift_bridgeObjectRelease();
    v13 = v27;
    v1[1] = v28;
    v1[2] = v13;
    v14 = v25;
    v1[3] = v26;
    v1[4] = v14;
    v32 = 1;
    sub_22655D4B4();
    sub_2264BA77C(v30);
    v27 = v16;
    v28 = v15;
    v25 = v18;
    v26 = v17;
    swift_bridgeObjectRelease();
    v19 = v29;
    v20 = v27;
    v1[5] = v28;
    v1[6] = v20;
    v21 = v25;
    v1[7] = v26;
    v1[8] = v21;
    v32 = 2;
    sub_22655D4B4();
    sub_2264C0DE8(v30, v31);
    swift_bridgeObjectRelease();
    v22 = v31[1];
    v1[9] = v31[0];
    v1[10] = v22;
    v1[11] = v31[2];
    type metadata accessor for CGSize(0);
    v32 = 3;
    sub_226494F3C(&qword_255848028, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x24BDBD860]);
    sub_22655D4B4();
    v1[12] = v30;
    LOBYTE(v30) = 4;
    v23 = sub_22655D4A8();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v5);
    *((_QWORD *)v3 + 26) = v23;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

void sub_2264EDAC8(char *a1)
{
  sub_2264AC72C(*a1);
}

void sub_2264EDAD4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_22655D640();
  __asm { BR              X9 }
}

uint64_t sub_2264EDB24()
{
  sub_22655CE00();
  swift_bridgeObjectRelease();
  return sub_22655D670();
}

void sub_2264EDBC0()
{
  __asm { BR              X10 }
}

uint64_t sub_2264EDC00()
{
  sub_22655CE00();
  return swift_bridgeObjectRelease();
}

void sub_2264EDC88()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_22655D640();
  __asm { BR              X9 }
}

uint64_t sub_2264EDCD4()
{
  sub_22655CE00();
  swift_bridgeObjectRelease();
  return sub_22655D670();
}

uint64_t sub_2264EDD70@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2264F5930();
  *a1 = result;
  return result;
}

uint64_t sub_2264EDD9C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_2264EDDD0 + 4 * byte_22656703F[*v0]))();
}

void sub_2264EDDD0(_QWORD *a1@<X8>)
{
  *a1 = 1702063984;
  a1[1] = 0xE400000000000000;
}

void sub_2264EDDE4(_QWORD *a1@<X8>)
{
  *a1 = 0x69736E6972746E69;
  a1[1] = 0xEA00000000007363;
}

void sub_2264EDE04(_QWORD *a1@<X8>)
{
  *a1 = 0x7365526567616D69;
  a1[1] = 0xEF6E6F6974756C6FLL;
}

void sub_2264EDE2C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "trackingState");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_2264EDE54()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2264EDE88 + 4 * byte_226567044[*v0]))(0x726F66736E617274, 0xE90000000000006DLL);
}

uint64_t sub_2264EDE88()
{
  return 1702063984;
}

uint64_t sub_2264EDE98()
{
  return 0x69736E6972746E69;
}

uint64_t sub_2264EDEB4()
{
  return 0x7365526567616D69;
}

uint64_t sub_2264EDED8()
{
  return 0x676E696B63617274;
}

uint64_t sub_2264EDEFC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2264F5930();
  *a1 = result;
  return result;
}

uint64_t sub_2264EDF20()
{
  sub_2264F4C84();
  return sub_22655D6A0();
}

uint64_t sub_2264EDF48()
{
  sub_2264F4C84();
  return sub_22655D6AC();
}

uint64_t sub_2264EDF70()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RSCamera()
{
  return objc_opt_self();
}

uint64_t sub_2264EDFA0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2264EF4A4(a1, (void (*)(void))type metadata accessor for RSCamera, (uint64_t (*)(uint64_t))sub_2264ED720, a2);
}

uint64_t sub_2264EE024()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for OUCamera()
{
  return objc_opt_self();
}

_QWORD *sub_2264EE074(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255848030);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[3] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2264F4D24();
  sub_22655D688();
  if (v2)
  {
    type metadata accessor for RSRawPointCloud();
    swift_deallocPartialClassInstance();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848040);
    sub_2264F6574(&qword_255845C90, (unint64_t *)&unk_255848050, MEMORY[0x24BEE4118], MEMORY[0x24BEE12D0]);
    sub_22655D4B4();
    v9 = v11;
    v1[4] = v11;
    v1[2] = *(_QWORD *)(v9 + 16);
    v1[3] = v9 + 32;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_2264EE1FC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848170);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2264F4D24();
  sub_22655D694();
  v9[1] = *(_QWORD *)(v2 + 32);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848040);
  sub_2264F6574(&qword_255845CD8, &qword_255848180, MEMORY[0x24BEE4108], MEMORY[0x24BEE12A0]);
  sub_22655D514();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2264EE324()
{
  return sub_2264EE348();
}

uint64_t sub_2264EE348()
{
  sub_22655D640();
  sub_22655CE00();
  return sub_22655D670();
}

uint64_t sub_2264EE394()
{
  return sub_22655CE00();
}

uint64_t sub_2264EE3B8()
{
  return sub_2264EE3DC();
}

uint64_t sub_2264EE3DC()
{
  sub_22655D640();
  sub_22655CE00();
  return sub_22655D670();
}

uint64_t sub_2264EE424@<X0>(BOOL *a1@<X8>)
{
  return sub_2264EE430(a1);
}

uint64_t sub_2264EE430@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_22655D454();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_2264EE47C(_QWORD *a1@<X8>)
{
  *a1 = 0x6E696E6961746572;
  a1[1] = 0xEF73746E696F5067;
}

uint64_t sub_2264EE4A4()
{
  return 0x6E696E6961746572;
}

uint64_t sub_2264EE4C8@<X0>(BOOL *a1@<X8>)
{
  return sub_2264EE4D4(a1);
}

uint64_t sub_2264EE4D4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_22655D454();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_2264EE524()
{
  sub_2264F4D24();
  return sub_22655D6A0();
}

uint64_t sub_2264EE54C()
{
  sub_2264F4D24();
  return sub_22655D6AC();
}

uint64_t sub_2264EE574()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RSRawPointCloud()
{
  return objc_opt_self();
}

uint64_t sub_2264EE5B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2264EF4A4(a1, (void (*)(void))type metadata accessor for RSRawPointCloud, (uint64_t (*)(uint64_t))sub_2264EE074, a2);
}

uint64_t sub_2264EE5E4(_QWORD *a1)
{
  return sub_2264EE1FC(a1);
}

uint64_t sub_2264EE7C0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  void *v34;
  char *v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  char v47;
  uint64_t v48;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255848060);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = v2;
  v45 = a1;
  *(_QWORD *)(v2 + 16) = 0;
  v8 = v2 + 16;
  *(_OWORD *)(v8 + 24) = 0u;
  *(_QWORD *)(v8 + 144) = 0;
  *(_QWORD *)(v8 + 8) = 0;
  *(_OWORD *)(v8 + 40) = 0u;
  *(_QWORD *)(v8 + 56) = 0;
  *(_QWORD *)(v8 + 152) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2264F4D68();
  v9 = v46;
  sub_22655D688();
  if (v9)
  {
    v13 = v44;
    v27 = (uint64_t)v45;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    type metadata accessor for RSFrame();
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)&v42 = v8 + 24;
    *(_QWORD *)&v43 = v8;
    v10 = v5;
    LOBYTE(v48) = 0;
    v11 = v7;
    sub_22655D490();
    v13 = v44;
    *(_QWORD *)(v44 + 32) = v14;
    type metadata accessor for RSCamera();
    v47 = 1;
    v16 = sub_226494F3C(&qword_255848070, v15, (uint64_t (*)(uint64_t))type metadata accessor for RSCamera, (uint64_t)&unk_226567328);
    sub_22655D4B4();
    v39 = v16;
    *(_QWORD *)(v13 + 24) = v48;
    swift_unknownObjectRelease();
    v47 = 2;
    v17 = sub_2264F4DAC();
    v18 = v4;
    v46 = v11;
    sub_22655D4B4();
    v41 = v10;
    v19 = *(void **)v42;
    *(_QWORD *)v42 = v48;

    v20 = (_QWORD *)v43;
    v47 = 3;
    sub_22655D4B4();
    v21 = *(void **)(v13 + 48);
    *(_QWORD *)(v13 + 48) = v48;

    v47 = 4;
    sub_22655D4B4();
    v22 = *(void **)(v13 + 56);
    *(_QWORD *)(v13 + 56) = v48;

    v47 = 5;
    sub_22655D4B4();
    v23 = *(void **)(v13 + 64);
    *(_QWORD *)(v13 + 64) = v48;

    v47 = 6;
    sub_22655D4B4();
    v40 = v17;
    v24 = *(void **)(v13 + 72);
    *(_QWORD *)(v13 + 72) = v48;

    LOBYTE(v48) = 7;
    *(_QWORD *)(v13 + 80) = sub_22655D4A8();
    type metadata accessor for RSRawPointCloud();
    v47 = 8;
    sub_226494F3C((unint64_t *)&unk_255848080, v25, (uint64_t (*)(uint64_t))type metadata accessor for RSRawPointCloud, (uint64_t)&unk_226567300);
    sub_22655D4B4();
    *v20 = v48;
    swift_unknownObjectRelease();
    v26 = (_QWORD *)(v8 + 144);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255841B50);
    v47 = 9;
    sub_2264F4CC8();
    sub_22655D4B4();
    v27 = (uint64_t)v45;
    sub_2264BA77C(v48);
    v42 = v29;
    v43 = v28;
    v37 = v31;
    v38 = v30;
    swift_bridgeObjectRelease();
    v32 = v42;
    *(_OWORD *)(v13 + 96) = v43;
    *(_OWORD *)(v13 + 112) = v32;
    v33 = v37;
    *(_OWORD *)(v13 + 128) = v38;
    *(_OWORD *)(v13 + 144) = v33;
    v47 = 10;
    sub_22655D4B4();
    *v26 = v48;
    swift_unknownObjectRelease();
    v47 = 11;
    sub_22655D4B4();
    v34 = *(void **)(v13 + 168);
    *(_QWORD *)(v13 + 168) = v48;

    LOBYTE(v48) = 12;
    v35 = v46;
    v36 = sub_22655D4A8();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v35, v18);
    *(_QWORD *)(v13 + 176) = v36;
  }
  __swift_destroy_boxed_opaque_existential_1(v27);
  return v13;
}

uint64_t sub_2264EEED4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2264EEF0C + 4 * byte_226567049[a1]))(0x6D617473656D6974, 0xE900000000000070);
}

uint64_t sub_2264EEF0C()
{
  return 0x6172656D6163;
}

uint64_t sub_2264EEF20()
{
  return 0x667542726F6C6F63;
}

unint64_t sub_2264EEF50()
{
  return 0xD000000000000015;
}

uint64_t sub_2264EF028(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2264EF060 + 4 * byte_226567056[a1]))(0x6D617473656D6974, 0xE900000000000070);
}

uint64_t sub_2264EF060()
{
  return 0x6172656D6163;
}

uint64_t sub_2264EF074()
{
  return 0x667542726F6C6F63;
}

unint64_t sub_2264EF0A4()
{
  return 0xD000000000000015;
}

uint64_t sub_2264EF17C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_2264EEED4(*a1);
  v5 = v4;
  if (v3 == sub_2264EEED4(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_22655D55C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2264EF204()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_22655D640();
  sub_2264EEED4(v1);
  sub_22655CE00();
  swift_bridgeObjectRelease();
  return sub_22655D670();
}

uint64_t sub_2264EF264()
{
  unsigned __int8 *v0;

  sub_2264EEED4(*v0);
  sub_22655CE00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2264EF2A4()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_22655D640();
  sub_2264EEED4(v1);
  sub_22655CE00();
  swift_bridgeObjectRelease();
  return sub_22655D670();
}

uint64_t sub_2264EF300@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2264F58E8();
  *a1 = result;
  return result;
}

uint64_t sub_2264EF32C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2264EEED4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2264EF354()
{
  unsigned __int8 *v0;

  return sub_2264EF028(*v0);
}

uint64_t sub_2264EF35C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2264F58E8();
  *a1 = result;
  return result;
}

void sub_2264EF380(_BYTE *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_2264EF38C()
{
  sub_2264F4D68();
  return sub_22655D6A0();
}

uint64_t sub_2264EF3B4()
{
  sub_2264F4D68();
  return sub_22655D6AC();
}

id *sub_2264EF3DC()
{
  id *v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_2264EF438()
{
  sub_2264EF3DC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RSFrame()
{
  return objc_opt_self();
}

uint64_t sub_2264EF478@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2264EF4A4(a1, (void (*)(void))type metadata accessor for RSFrame, (uint64_t (*)(uint64_t))sub_2264EE7C0, a2);
}

uint64_t sub_2264EF4A4@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X3>, uint64_t (*a3)(uint64_t)@<X6>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t result;

  a2();
  v8 = swift_allocObject();
  result = a3(a1);
  if (!v4)
    *a4 = v8;
  return result;
}

void sub_2264EF70C(void *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  id v37;

  v2 = (_QWORD *)v1;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_OWORD *)(v1 + 112) = 0u;
  *(_OWORD *)(v1 + 128) = 0u;
  *(_OWORD *)(v1 + 144) = 0u;
  objc_msgSend(a1, sel_timestamp);
  *(_QWORD *)(v1 + 32) = v4;
  *(_QWORD *)(v1 + 160) = objc_msgSend(a1, sel_deviceOrientation);
  objc_msgSend(a1, sel_referenceOriginTransform);
  *(_OWORD *)(v1 + 48) = v5;
  *(_OWORD *)(v1 + 64) = v6;
  *(_OWORD *)(v1 + 80) = v7;
  *(_OWORD *)(v1 + 96) = v8;
  v9 = objc_msgSend(a1, sel_camera);
  type metadata accessor for OUCamera();
  swift_allocObject();
  v10 = sub_2264F5E68(v9);

  v2[2] = v10;
  swift_unknownObjectRelease();
  v11 = objc_msgSend(a1, sel_rawSceneUnderstandingData);

  if (v11)
  {
    v12 = objc_msgSend(a1, sel_rawSceneUnderstandingData);
    if (v12)
    {
      v13 = v12;
      v14 = objc_msgSend(v12, sel_wideCamera);

      if (!v14)
      {
        v11 = 0;
        goto LABEL_8;
      }
      v15 = objc_msgSend(a1, sel_rawSceneUnderstandingData);
      if (v15)
      {
        v16 = v15;
        v17 = objc_msgSend(v15, sel_wideCamera);

        if (v17)
        {
          swift_allocObject();
          v11 = (id)sub_2264F5E68(v17);

          goto LABEL_8;
        }
LABEL_14:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_8:
  v2[3] = v11;
  swift_unknownObjectRelease();
  v18 = objc_msgSend(a1, sel_capturedImage);
  v19 = (void *)v2[14];
  v2[14] = v18;

  v20 = objc_msgSend(a1, sel_rawSceneUnderstandingData);
  v21 = objc_msgSend(v20, sel_capturedImage);

  v22 = (void *)v2[15];
  v2[15] = v21;

  v23 = objc_msgSend(a1, sel_rawSceneUnderstandingData);
  v24 = objc_msgSend(v23, sel_depthBuffer);

  v25 = (void *)v2[16];
  v2[16] = v24;

  v26 = objc_msgSend(a1, sel_rawSceneUnderstandingData);
  v27 = objc_msgSend(v26, sel_depthConfidenceBuffer);

  v28 = (void *)v2[17];
  v2[17] = v27;

  v29 = objc_msgSend(a1, sel_rawSceneUnderstandingData);
  v30 = objc_msgSend(v29, sel_semanticSegmentationBufferSampledForDepth);

  v31 = (void *)v2[18];
  v2[18] = v30;

  v32 = objc_msgSend(a1, sel_rawSceneUnderstandingData);
  v33 = objc_msgSend(v32, sel_semanticSegmentationConfidenceBufferSampledForDepth);

  v34 = (void *)v2[19];
  v2[19] = v33;

  v35 = objc_msgSend(a1, sel_worldTrackingState);
  if (v35)
  {
    v36 = v35;
    v37 = objc_msgSend(v35, sel_vioTrackingState);

  }
  else
  {
    v37 = 0;
  }

  v2[21] = v37;
}

id *sub_2264EFA68()
{
  id *v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return v0;
}

uint64_t sub_2264EFABC()
{
  sub_2264EFA68();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for OUFrame()
{
  return objc_opt_self();
}

void *sub_2264EFAFC()
{
  uint64_t inited;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void *result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255848100);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_226560650;
  *(_QWORD *)(inited + 32) = 0x79745F7269616863;
  *(_QWORD *)(inited + 40) = 0xEA00000000006570;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255848108);
  v1 = swift_initStackObject();
  *(_OWORD *)(v1 + 16) = xmmword_22655FA80;
  *(_QWORD *)(v1 + 32) = 0x676E696E6964;
  *(_QWORD *)(v1 + 40) = 0xE600000000000000;
  *(_QWORD *)(v1 + 72) = &type metadata for ChairType;
  v2 = sub_2264890BC();
  *(_BYTE *)(v1 + 48) = 0;
  *(_QWORD *)(v1 + 80) = v2;
  *(_QWORD *)(v1 + 88) = 0x6C6F6F7473;
  *(_QWORD *)(v1 + 96) = 0xE500000000000000;
  *(_QWORD *)(v1 + 128) = &type metadata for ChairType;
  *(_QWORD *)(v1 + 136) = v2;
  *(_BYTE *)(v1 + 104) = 1;
  *(_QWORD *)(v1 + 144) = 0x6C6576697773;
  *(_QWORD *)(v1 + 152) = 0xE600000000000000;
  *(_QWORD *)(v1 + 184) = &type metadata for ChairType;
  *(_QWORD *)(v1 + 192) = v2;
  *(_BYTE *)(v1 + 160) = 2;
  *(_QWORD *)(v1 + 200) = 0x726568746FLL;
  *(_QWORD *)(v1 + 208) = 0xE500000000000000;
  *(_QWORD *)(v1 + 240) = &type metadata for ChairType;
  *(_QWORD *)(v1 + 248) = v2;
  *(_BYTE *)(v1 + 216) = 3;
  *(_QWORD *)(inited + 48) = sub_226513D08(v1);
  strcpy((char *)(inited + 56), "chair_leg_type");
  *(_BYTE *)(inited + 71) = -18;
  v3 = swift_initStackObject();
  *(_OWORD *)(v3 + 16) = xmmword_226563280;
  *(_QWORD *)(v3 + 32) = 1920298854;
  *(_QWORD *)(v3 + 40) = 0xE400000000000000;
  *(_QWORD *)(v3 + 72) = &type metadata for ChairLegType;
  v4 = sub_226489144();
  *(_BYTE *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 80) = v4;
  *(_QWORD *)(v3 + 88) = 1918989427;
  *(_QWORD *)(v3 + 96) = 0xE400000000000000;
  *(_QWORD *)(v3 + 128) = &type metadata for ChairLegType;
  *(_QWORD *)(v3 + 136) = v4;
  *(_BYTE *)(v3 + 104) = 1;
  *(_QWORD *)(v3 + 144) = 0x726568746FLL;
  *(_QWORD *)(v3 + 152) = 0xE500000000000000;
  *(_QWORD *)(v3 + 184) = &type metadata for ChairLegType;
  *(_QWORD *)(v3 + 192) = v4;
  *(_BYTE *)(v3 + 160) = 2;
  *(_QWORD *)(inited + 72) = sub_226513D08(v3);
  strcpy((char *)(inited + 80), "chair_arm_type");
  *(_BYTE *)(inited + 95) = -18;
  v5 = swift_initStackObject();
  *(_OWORD *)(v5 + 16) = xmmword_22655FA10;
  *(_QWORD *)(v5 + 32) = 0x676E697373696DLL;
  *(_QWORD *)(v5 + 40) = 0xE700000000000000;
  *(_QWORD *)(v5 + 72) = &type metadata for ChairArmType;
  v6 = sub_226489188();
  *(_BYTE *)(v5 + 48) = 1;
  *(_QWORD *)(v5 + 80) = v6;
  *(_QWORD *)(v5 + 88) = 0x676E697473697865;
  *(_QWORD *)(v5 + 96) = 0xE800000000000000;
  *(_QWORD *)(v5 + 128) = &type metadata for ChairArmType;
  *(_QWORD *)(v5 + 136) = v6;
  *(_BYTE *)(v5 + 104) = 0;
  *(_QWORD *)(inited + 96) = sub_226513D08(v5);
  *(_QWORD *)(inited + 104) = 0x61625F7269616863;
  *(_QWORD *)(inited + 112) = 0xEF657079745F6B63;
  v7 = swift_initStackObject();
  *(_OWORD *)(v7 + 16) = xmmword_22655FA10;
  *(_QWORD *)(v7 + 32) = 0x676E697373696DLL;
  *(_QWORD *)(v7 + 40) = 0xE700000000000000;
  *(_QWORD *)(v7 + 72) = &type metadata for ChairBackType;
  v8 = sub_226489100();
  *(_BYTE *)(v7 + 48) = 1;
  *(_QWORD *)(v7 + 80) = v8;
  *(_QWORD *)(v7 + 88) = 0x676E697473697865;
  *(_QWORD *)(v7 + 96) = 0xE800000000000000;
  *(_QWORD *)(v7 + 128) = &type metadata for ChairBackType;
  *(_QWORD *)(v7 + 136) = v8;
  *(_BYTE *)(v7 + 104) = 0;
  *(_QWORD *)(inited + 120) = sub_226513D08(v7);
  *(_QWORD *)(inited + 128) = 0x7079745F61666F73;
  *(_QWORD *)(inited + 136) = 0xE900000000000065;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_226567010;
  *(_QWORD *)(v9 + 32) = 0x75676E6174636572;
  *(_QWORD *)(v9 + 40) = 0xEB0000000072616CLL;
  *(_QWORD *)(v9 + 72) = &type metadata for SofaType;
  v10 = sub_226489078();
  *(_BYTE *)(v9 + 48) = 0;
  *(_QWORD *)(v9 + 80) = v10;
  *(_QWORD *)(v9 + 88) = 0x6465706168536CLL;
  *(_QWORD *)(v9 + 96) = 0xE700000000000000;
  *(_QWORD *)(v9 + 128) = &type metadata for SofaType;
  *(_QWORD *)(v9 + 136) = v10;
  *(_BYTE *)(v9 + 104) = 1;
  *(_QWORD *)(v9 + 144) = 0xD000000000000010;
  *(_QWORD *)(v9 + 152) = 0x800000022656A480;
  *(_QWORD *)(v9 + 184) = &type metadata for SofaType;
  *(_QWORD *)(v9 + 192) = v10;
  *(_BYTE *)(v9 + 160) = 2;
  *(_QWORD *)(v9 + 200) = 0x6553656C676E6973;
  *(_QWORD *)(v9 + 208) = 0xEA00000000007461;
  *(_QWORD *)(v9 + 240) = &type metadata for SofaType;
  *(_QWORD *)(v9 + 248) = v10;
  *(_BYTE *)(v9 + 216) = 3;
  *(_QWORD *)(v9 + 256) = 0x726568746FLL;
  *(_QWORD *)(v9 + 264) = 0xE500000000000000;
  *(_QWORD *)(v9 + 296) = &type metadata for SofaType;
  *(_QWORD *)(v9 + 304) = v10;
  *(_BYTE *)(v9 + 272) = 4;
  *(_QWORD *)(inited + 144) = sub_226513D08(v9);
  *(_QWORD *)(inited + 152) = 0x79745F656C626174;
  *(_QWORD *)(inited + 160) = 0xEA00000000006570;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_226563280;
  *(_QWORD *)(v11 + 32) = 0x656566666F63;
  *(_QWORD *)(v11 + 40) = 0xE600000000000000;
  *(_QWORD *)(v11 + 72) = &type metadata for TableType;
  v12 = sub_226488FF0();
  *(_BYTE *)(v11 + 48) = 0;
  *(_QWORD *)(v11 + 80) = v12;
  *(_QWORD *)(v11 + 88) = 0x676E696E6964;
  *(_QWORD *)(v11 + 96) = 0xE600000000000000;
  *(_QWORD *)(v11 + 128) = &type metadata for TableType;
  *(_QWORD *)(v11 + 136) = v12;
  *(_BYTE *)(v11 + 104) = 1;
  *(_QWORD *)(v11 + 144) = 0x726568746FLL;
  *(_QWORD *)(v11 + 152) = 0xE500000000000000;
  *(_QWORD *)(v11 + 184) = &type metadata for TableType;
  *(_QWORD *)(v11 + 192) = v12;
  *(_BYTE *)(v11 + 160) = 2;
  *(_QWORD *)(inited + 168) = sub_226513D08(v11);
  *(_QWORD *)(inited + 176) = 0x68735F656C626174;
  *(_QWORD *)(inited + 184) = 0xEB00000000657061;
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_22655FA80;
  *(_QWORD *)(v13 + 32) = 0x75676E6174636572;
  *(_QWORD *)(v13 + 40) = 0xEB0000000072616CLL;
  *(_QWORD *)(v13 + 72) = &type metadata for TableShapeType;
  v14 = sub_226489034();
  *(_BYTE *)(v13 + 48) = 0;
  *(_QWORD *)(v13 + 80) = v14;
  *(_QWORD *)(v13 + 88) = 0x6465706168536CLL;
  *(_QWORD *)(v13 + 96) = 0xE700000000000000;
  *(_QWORD *)(v13 + 128) = &type metadata for TableShapeType;
  *(_QWORD *)(v13 + 136) = v14;
  *(_BYTE *)(v13 + 104) = 2;
  *(_QWORD *)(v13 + 144) = 0xD000000000000010;
  *(_QWORD *)(v13 + 152) = 0x800000022656A2D0;
  *(_QWORD *)(v13 + 184) = &type metadata for TableShapeType;
  *(_QWORD *)(v13 + 192) = v14;
  *(_BYTE *)(v13 + 160) = 1;
  *(_QWORD *)(v13 + 200) = 0x726568746FLL;
  *(_QWORD *)(v13 + 208) = 0xE500000000000000;
  *(_QWORD *)(v13 + 240) = &type metadata for TableShapeType;
  *(_QWORD *)(v13 + 248) = v14;
  *(_BYTE *)(v13 + 216) = 3;
  *(_QWORD *)(inited + 192) = sub_226513D08(v13);
  strcpy((char *)(inited + 200), "storage_type");
  *(_BYTE *)(inited + 213) = 0;
  *(_WORD *)(inited + 214) = -5120;
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_22655FA10;
  *(_QWORD *)(v15 + 32) = 0x74656E69626163;
  *(_QWORD *)(v15 + 40) = 0xE700000000000000;
  *(_QWORD *)(v15 + 72) = &type metadata for StorageType;
  v16 = sub_226488FAC();
  *(_BYTE *)(v15 + 48) = 0;
  *(_QWORD *)(v15 + 80) = v16;
  *(_QWORD *)(v15 + 88) = 0x666C656873;
  *(_QWORD *)(v15 + 96) = 0xE500000000000000;
  *(_QWORD *)(v15 + 128) = &type metadata for StorageType;
  *(_QWORD *)(v15 + 136) = v16;
  *(_BYTE *)(v15 + 104) = 1;
  *(_QWORD *)(inited + 216) = sub_226513D08(v15);
  result = (void *)sub_226513E48(inited);
  off_255847550 = result;
  return result;
}

uint64_t sub_2264F00F8@<X0>(void *a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char **v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  unint64_t DirectionalAxis;
  float32x4_t v17;
  float32x4_t v18;
  float32x4_t v19;
  float32x4_t v20;
  float32x4_t v21;
  float32x4_t v22;
  float32x4_t v23;
  float32x4_t v24;
  float32x4_t v25;
  unsigned __int32 v26;
  float32x4_t v27;
  float32x4_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x4_t v32;
  float32x4_t v33;
  float32x4_t v34;
  float32x4_t v35;
  float32x4_t v36;
  float32x4_t v37;
  float32x4_t v38;
  float32x4_t v39;
  float32x4_t v40;
  float32x4_t v41;
  float32x4_t v42;
  float32x4_t v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  _QWORD *v47;
  float32x4_t *v48;
  float32x4_t v49;
  unint64_t v50;
  unint64_t v51;
  float32x4_t v52;
  float32x4_t v53;
  float32x4_t v54;
  float32x4_t v55;
  float32x4_t v56;
  id v57;
  unint64_t v58;
  float32x4_t v59;
  __int128 v60;
  float32x4_t v61;
  __int32 v62;
  uint64_t v63;
  float v64;
  unsigned __int8 v65;
  float v66;
  unsigned int v67;
  unint64_t v68;
  unint64_t v69;
  __int128 v70;
  id v71;
  void *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v79;
  uint64_t v80;
  id v81;
  void *v82;
  uint64_t v83;
  id v84;
  __n128 *v85;
  char **v86;
  char *v87;
  uint64_t v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  float32x4_t v93;
  float32x4_t v94;
  float32x4_t v95;
  float32x4_t v96;
  float32x4_t v97;
  float32x4_t v98;
  float32x4_t v99;
  float32x4_t v100;
  float32x4_t v101;
  float32x4_t v102;
  float32x4_t v103;
  float32x4_t v104;
  float32x4_t v105;
  float32x4_t v106;
  float32x4_t v107;
  float32x4_t v108;
  float32x4_t v109;
  float32x4_t v110;
  float32x4_t v111;
  float32x4_t v112;
  int32x4_t v113;
  int32x4_t v114;
  __int128 v115;
  __int128 v116;
  float32x4_t v117;
  __int128 v118;
  __int128 v119;
  float32x4_t v120;
  __int128 v121;
  float32x4_t v122;
  char v123;
  char v124;
  char v125;
  char v126;
  unsigned __int8 v127;
  unsigned __int8 v128;
  unint64_t v129;
  simd_float4x4 v130;
  simd_float4x4 v131;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848090);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_22655C140();
  v7 = *(_QWORD *)(v92 - 8);
  MEMORY[0x24BDAC7A8](v92);
  v9 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char **)((char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = MEMORY[0x24BDAC7A8](v13);
  v91 = (uint64_t)&v85 - v15;
  objc_msgSend(a1, sel_type, v14);
  DirectionalAxis = RS3DSurfaceTypeGetDirectionalAxis();
  objc_msgSend(a1, sel_dimensions);
  v122 = v17;
  objc_msgSend(a1, sel_transform);
  if (DirectionalAxis == 1)
  {
    v22 = (float32x4_t)xmmword_22655FA60;
    v23 = (float32x4_t)xmmword_2265600C0;
    v24 = (float32x4_t)xmmword_226560090;
    v25 = (float32x4_t)xmmword_2265600A0;
    v26 = v122.u32[2];
  }
  else
  {
    v26 = v122.u32[1];
    v25 = *(float32x4_t *)MEMORY[0x24BDAEE00];
    v24 = *(float32x4_t *)(MEMORY[0x24BDAEE00] + 16);
    v23 = *(float32x4_t *)(MEMORY[0x24BDAEE00] + 32);
    v22 = *(float32x4_t *)(MEMORY[0x24BDAEE00] + 48);
  }
  v27 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v18, COERCE_FLOAT(*MEMORY[0x24BE80A88])), v19, *MEMORY[0x24BE80A88], 1), v20, *MEMORY[0x24BE80A88], 2), v21, *MEMORY[0x24BE80A88], 3);
  v28 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v18, COERCE_FLOAT(*(_OWORD *)(MEMORY[0x24BE80A88] + 16))), v19, *(float32x2_t *)(MEMORY[0x24BE80A88] + 16), 1), v20, *(float32x4_t *)(MEMORY[0x24BE80A88] + 16), 2), v21, *(float32x4_t *)(MEMORY[0x24BE80A88] + 16), 3);
  v29 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v18, COERCE_FLOAT(*(_OWORD *)(MEMORY[0x24BE80A88] + 32))), v19, *(float32x2_t *)(MEMORY[0x24BE80A88] + 32), 1), v20, *(float32x4_t *)(MEMORY[0x24BE80A88] + 32), 2), v21, *(float32x4_t *)(MEMORY[0x24BE80A88] + 32), 3);
  v30 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v18, COERCE_FLOAT(*(_OWORD *)(MEMORY[0x24BE80A88] + 48))), v19, *(float32x2_t *)(MEMORY[0x24BE80A88] + 48), 1), v20, *(float32x4_t *)(MEMORY[0x24BE80A88] + 48), 2), v21, *(float32x4_t *)(MEMORY[0x24BE80A88] + 48), 3);
  v31 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v27, v25.f32[0]), v28, *(float32x2_t *)v25.f32, 1), v29, v25, 2);
  v32 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v27, v24.f32[0]), v28, *(float32x2_t *)v24.f32, 1), v29, v24, 2);
  v33 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v27, v23.f32[0]), v28, *(float32x2_t *)v23.f32, 1), v29, v23, 2);
  v34 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v27, v22.f32[0]), v28, *(float32x2_t *)v22.f32, 1), v29, v22, 2);
  if (qword_25583F970 != -1)
    goto LABEL_53;
  while (1)
  {
    v35 = vmlaq_laneq_f32(v31, v30, v25, 3);
    v36 = vmlaq_laneq_f32(v32, v30, v24, 3);
    v37 = vmlaq_laneq_f32(v33, v30, v23, 3);
    v38 = vmlaq_laneq_f32(v34, v30, v22, 3);
    v40 = (float32x4_t)xmmword_25585B020;
    v39 = (float32x4_t)xmmword_25585B030;
    v42 = (float32x4_t)xmmword_25585B040;
    v41 = (float32x4_t)xmmword_25585B050;
    v120 = v36;
    v121 = (__int128)v35;
    v118 = (__int128)v38;
    v119 = (__int128)v37;
    v112 = (float32x4_t)xmmword_25585B050;
    v111 = (float32x4_t)xmmword_25585B040;
    if (qword_25583F968 != -1)
    {
      v122 = (float32x4_t)xmmword_25585B030;
      v117 = (float32x4_t)xmmword_25585B020;
      swift_once();
      v40 = v117;
      v38.i32[0] = v118;
      v35.i32[0] = v121;
      v39 = v122;
      v42 = v111;
      v41 = v112;
      v37.i32[0] = v119;
      v36.i32[0] = v120.i32[0];
    }
    v114 = (int32x4_t)xmmword_25585AFE0;
    v43 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v40, *(float *)&xmmword_25585AFE0), v39, *(float32x2_t *)&xmmword_25585AFE0, 1), v42, (float32x4_t)xmmword_25585AFE0, 2), v41, (float32x4_t)xmmword_25585AFE0, 3);
    v113 = (int32x4_t)xmmword_25585AFF0;
    v110 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v40, *(float *)&xmmword_25585AFF0), v39, *(float32x2_t *)&xmmword_25585AFF0, 1), v42, (float32x4_t)xmmword_25585AFF0, 2), v41, (float32x4_t)xmmword_25585AFF0, 3);
    v115 = xmmword_25585B000;
    v116 = xmmword_25585B010;
    v117 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v40, *(float *)&xmmword_25585B000), v39, *(float32x2_t *)&xmmword_25585B000, 1), v42, (float32x4_t)xmmword_25585B000, 2);
    v122 = vmlaq_lane_f32(vmulq_n_f32(v40, *(float *)&xmmword_25585B010), v39, *(float32x2_t *)&xmmword_25585B010, 1);
    v95 = vmulq_n_f32(v43, v35.f32[0]);
    v94 = vmulq_n_f32(v43, v36.f32[0]);
    v96 = vmulq_n_f32(v43, v37.f32[0]);
    v93 = vmulq_n_f32(v43, v38.f32[0]);
    v129 = MEMORY[0x24BEE4B08];
    if (!objc_msgSend(a1, sel_edgeStates))
      sub_2265371E8(&v123, 0);
    v117 = vmlaq_laneq_f32(v117, v112, (float32x4_t)v115, 3);
    v122 = vmlaq_laneq_f32(v122, v111, (float32x4_t)v116, 2);
    v95 = vmlaq_lane_f32(v95, v110, *(float32x2_t *)&v121, 1);
    v94 = vmlaq_lane_f32(v94, v110, *(float32x2_t *)v120.f32, 1);
    v96 = vmlaq_lane_f32(v96, v110, *(float32x2_t *)&v119, 1);
    v93 = vmlaq_lane_f32(v93, v110, *(float32x2_t *)&v118, 1);
    if ((objc_msgSend(a1, sel_edgeStates) & 0xFF00) == 0)
      sub_2265371E8(&v124, 1);
    v122 = vmlaq_laneq_f32(v122, v112, (float32x4_t)v116, 3);
    v95 = vmlaq_laneq_f32(v95, v117, (float32x4_t)v121, 2);
    v94 = vmlaq_laneq_f32(v94, v117, v120, 2);
    v96 = vmlaq_laneq_f32(v96, v117, (float32x4_t)v119, 2);
    v93 = vmlaq_laneq_f32(v93, v117, (float32x4_t)v118, 2);
    if ((objc_msgSend(a1, sel_edgeStates) & 0xFF0000) == 0)
      sub_2265371E8(&v125, 2);
    v90 = v6;
    v95 = vmlaq_laneq_f32(v95, v122, (float32x4_t)v121, 3);
    v94 = vmlaq_laneq_f32(v94, v122, v120, 3);
    v96 = vmlaq_laneq_f32(v96, v122, (float32x4_t)v119, 3);
    v93 = vmlaq_laneq_f32(v93, v122, (float32x4_t)v118, 3);
    if (!(objc_msgSend(a1, sel_edgeStates) >> 24))
      sub_2265371E8(&v126, 3);
    v130.columns[0] = (simd_float4)v95;
    v130.columns[1] = (simd_float4)v94;
    v130.columns[2] = (simd_float4)v96;
    v130.columns[3] = (simd_float4)v93;
    v131 = __invert_f4(v130);
    v112 = (float32x4_t)v131.columns[0];
    v111 = (float32x4_t)v131.columns[1];
    v110 = (float32x4_t)v131.columns[2];
    v109 = (float32x4_t)v131.columns[3];
    v44 = (uint64_t)objc_msgSend(a1, sel_polygonSize);
    v85 = a2;
    v86 = v12;
    v88 = v7;
    v87 = v9;
    v89 = DirectionalAxis;
    if (v44 < 1)
    {
      v47 = (_QWORD *)MEMORY[0x24BEE4AF8];
      DirectionalAxis = MEMORY[0x24BEE4AF8];
      goto LABEL_37;
    }
    v45 = (unint64_t)objc_msgSend(a1, sel_polygonSize, v85);
    if ((v45 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 56))(v91, 1, 1, v92);
      goto LABEL_58;
    }
    v46 = (char *)v45;
    if (!v45)
      break;
    v6 = 0;
    v108 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v114.i8, 1);
    v107 = (float32x4_t)vdupq_laneq_s32(v114, 2);
    v106 = (float32x4_t)vdupq_laneq_s32(v114, 3);
    v105 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v113.i8, 1);
    v104 = (float32x4_t)vdupq_laneq_s32(v113, 2);
    v103 = (float32x4_t)vdupq_laneq_s32(v113, 3);
    v102 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&v115, 1);
    v101 = (float32x4_t)vdupq_laneq_s32((int32x4_t)v115, 2);
    v100 = (float32x4_t)vdupq_laneq_s32((int32x4_t)v115, 3);
    v99 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&v116, 1);
    v98 = (float32x4_t)vdupq_laneq_s32((int32x4_t)v116, 2);
    v47 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v12 = &selRef_session_didUpdateTextCoaching_;
    DirectionalAxis = MEMORY[0x24BEE4AF8];
    v30 = (float32x4_t)vdupq_laneq_s32((int32x4_t)v116, 3);
    v97 = v30;
    while (v46 != v6)
    {
      v48 = (float32x4_t *)objc_msgSend(a1, sel_polygon);
      if (!v48)
        goto LABEL_55;
      v49 = v48[(_QWORD)v6];
      v118 = xmmword_25585B020;
      v119 = xmmword_25585B030;
      v120 = (float32x4_t)xmmword_25585B040;
      v121 = xmmword_25585B050;
      v122 = v49;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v47 = sub_226486AE0(0, v47[2] + 1, 1, v47);
      v51 = v47[2];
      v50 = v47[3];
      if (v51 >= v50 >> 1)
        v47 = sub_226486AE0((_QWORD *)(v50 > 1), v51 + 1, 1, v47);
      v52 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v112, *(float *)&v118), v111, *(float32x2_t *)&v118, 1), v110, (float32x4_t)v118, 2), v109, (float32x4_t)v118, 3);
      v53 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v112, *(float *)&v119), v111, *(float32x2_t *)&v119, 1), v110, (float32x4_t)v119, 2), v109, (float32x4_t)v119, 3);
      v54 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v112, v120.f32[0]), v111, *(float32x2_t *)v120.f32, 1), v110, v120, 2), v109, v120, 3);
      v55 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v112, *(float *)&v121), v111, *(float32x2_t *)&v121, 1), v110, (float32x4_t)v121, 2), v109, (float32x4_t)v121, 3);
      v56 = vaddq_f32(vmlaq_f32(vmlaq_f32(vmlaq_f32(vmulq_n_f32(v52, *(float *)&v116), v99, v53), v98, v54), v97, v55), vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(vmlaq_f32(vmlaq_f32(vmlaq_f32(vmulq_n_f32(v52, *(float *)v114.i32), v108, v53), v107, v54), v106, v55), v122.f32[0]), vmlaq_f32(vmlaq_f32(vmlaq_f32(vmulq_n_f32(v52, *(float *)v113.i32), v105, v53), v104, v54), v103, v55), *(float32x2_t *)v122.f32, 1), vmlaq_f32(vmlaq_f32(vmlaq_f32(vmulq_n_f32(v52, *(float *)&v115), v102, v53), v101, v54), v100, v55), v122, 2));
      v56.i32[3] = v117.i32[3];
      v47[2] = v51 + 1;
      v122 = v56;
      *(float32x4_t *)&v47[2 * v51 + 4] = v56;
      v57 = objc_msgSend(a1, sel_polygonEdgeSides);
      if (!v57)
        goto LABEL_56;
      if (v6[(_QWORD)v57] >= 4u)
        v7 = 0;
      else
        v7 = v6[(_QWORD)v57];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        DirectionalAxis = (unint64_t)sub_226488AB8(0, *(_QWORD *)(DirectionalAxis + 16) + 1, 1, (char *)DirectionalAxis);
      v9 = *(char **)(DirectionalAxis + 16);
      v58 = *(_QWORD *)(DirectionalAxis + 24);
      a2 = (__n128 *)(v9 + 1);
      if ((unint64_t)v9 >= v58 >> 1)
        DirectionalAxis = (unint64_t)sub_226488AB8((char *)(v58 > 1), (int64_t)(v9 + 1), 1, (char *)DirectionalAxis);
      ++v6;
      *(_QWORD *)(DirectionalAxis + 16) = a2;
      v9[DirectionalAxis + 32] = v7;
      v30 = v122;
      v117 = v122;
      if (v46 == v6)
        goto LABEL_37;
    }
    __break(1u);
LABEL_53:
    v120 = v32;
    v121 = (__int128)v31;
    v118 = (__int128)v34;
    v119 = (__int128)v33;
    v122 = v22;
    v116 = (__int128)v24;
    v117 = v23;
    v115 = (__int128)v25;
    v114 = (int32x4_t)v30;
    swift_once();
    v30 = (float32x4_t)v114;
    v25 = (float32x4_t)v115;
    v24 = (float32x4_t)v116;
    v23 = v117;
    v34 = (float32x4_t)v118;
    v31 = (float32x4_t)v121;
    v22 = v122;
    v33 = (float32x4_t)v119;
    v32 = v120;
  }
  v47 = (_QWORD *)MEMORY[0x24BEE4AF8];
  DirectionalAxis = MEMORY[0x24BEE4AF8];
LABEL_37:
  objc_msgSend(a1, sel_dimensions, v85);
  v122 = v59;
  if (v89 != 1)
  {
    objc_msgSend(a1, sel_dimensions);
    v121 = v60;
    objc_msgSend(a1, sel_dimensions);
    v61 = v122;
    v61.i32[1] = DWORD2(v121);
    v61.i32[2] = v62;
    v122 = v61;
  }
  objc_msgSend(a1, sel_confidence);
  v63 = (uint64_t)v90;
  if (v64 <= 0.9)
  {
    objc_msgSend(a1, sel_confidence);
    if (v66 > 0.5)
      v65 = 1;
    else
      v65 = 2;
  }
  else
  {
    v65 = 0;
  }
  v67 = objc_msgSend(a1, sel_type);
  v68 = 0x50103000402uLL >> (8 * v67);
  if (v67 >= 6)
    LOBYTE(v68) = 2;
  v128 = v68;
  v127 = v65;
  v69 = v129;
  swift_bridgeObjectRetain();
  objc_msgSend(a1, sel_color);
  v121 = v70;
  v71 = objc_msgSend(a1, sel_identifier);
  if (!v71)
    goto LABEL_57;
  v72 = v71;
  v73 = v87;
  sub_22655C110();

  v74 = v88;
  v75 = v91;
  v76 = v92;
  (*(void (**)(uint64_t, char *, uint64_t))(v88 + 32))(v91, v73, v92);
  v77 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56);
  v77(v75, 0, 1, v76);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v75, 1, v76);
  if ((_DWORD)result == 1)
  {
LABEL_58:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
  v79 = type metadata accessor for CapturedRoom.Surface.Curve(0);
  v80 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v63, 1, 1, v79);
  v81 = objc_msgSend(a1, sel_parentIdentifier);
  if (v81)
  {
    v82 = v81;
    v83 = (uint64_t)v86;
    sub_22655C110();

    v80 = 0;
  }
  else
  {
    v83 = (uint64_t)v86;
  }
  v77(v83, v80, 1, v92);
  v120 = vnegq_f32(v96);
  v84 = objc_msgSend(a1, sel_storyLevel);
  return sub_2264B945C(&v128, &v127, v69, v91, v63, v83, (unint64_t)v47, DirectionalAxis, v85, (__n128)v122, v95, v94, v96, v93, (__n128)v120, (__n128)v121, *(float *)&v26, (unint64_t)v84, MEMORY[0x24BEE4AF8]);
}

uint64_t sub_2264F0D64@<X0>(void *a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 *v18;
  float v19;
  long double v20;
  float v21;
  float32x4_t v22;
  void *v23;
  id v24;
  id v25;
  char *v26;
  __n128 v27;
  uint64_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x4_t v32;
  float32x4_t v33;
  float32x4_t v34;
  float32x4_t v35;
  int32x2_t v41;
  int v42;
  int v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  char *v46;
  unint64_t v47;
  __n128 v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  void (*v55)(char *, uint64_t);
  __int128 v57;
  __int128 v58;
  __int128 v59;
  float32x4_t v60;
  char *v61;
  __n128 v62;
  float32x4_t v63;
  float32x4_t v64;
  float32x4_t v65;
  float32x4_t v66;
  float32x4_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  __n128 *v76;
  char *v77;
  uint64_t v78;
  char v79;
  unsigned __int8 v80[9];
  simd_float4x4 v81;
  simd_float4x4 v82;

  v76 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
  MEMORY[0x24BDAC7A8](v3);
  v75 = (uint64_t)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848090);
  MEMORY[0x24BDAC7A8](v5);
  v74 = (uint64_t)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22655C140();
  v70 = *(_QWORD *)(v7 - 8);
  v71 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v73 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CapturedRoom.Surface.Curve(0);
  v69 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_255840958);
  v78 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v57 - v15;
  v68 = type metadata accessor for CapturedRoom.Surface(0);
  MEMORY[0x24BDAC7A8](v68);
  v18 = (__n128 *)((char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2264F00F8(a1, v18);
  objc_msgSend(a1, sel_startOrientation);
  objc_msgSend(a1, sel_endOrientation);
  objc_msgSend(a1, sel_transform);
  v20 = v19;
  objc_msgSend(a1, sel_transform);
  atan2(v20, v21);
  v64 = (float32x4_t)v18[2];
  v63 = (float32x4_t)v18[3];
  v22 = (float32x4_t)v18[4];
  v66 = (float32x4_t)v18[5];
  v67 = v22;
  v23 = (void *)objc_opt_self();
  v24 = objc_msgSend(v23, sel_degrees);
  sub_22643F548(0, (unint64_t *)&qword_255848160);
  v77 = v16;
  sub_22655BDBC();
  v25 = objc_msgSend(v23, sel_degrees);
  v26 = v13;
  sub_22655BDBC();
  objc_msgSend(a1, sel_circleCenter);
  v62 = v27;
  objc_msgSend(a1, sel_circleCenter);
  v29.i64[0] = v28;
  if (qword_25583F970 != -1)
  {
    v65 = v29;
    swift_once();
    v29 = v65;
  }
  v31 = (float32x4_t)xmmword_25585B020;
  v30 = (float32x4_t)xmmword_25585B030;
  v33 = (float32x4_t)xmmword_25585B040;
  v32 = (float32x4_t)xmmword_25585B050;
  if (qword_25583F968 != -1)
  {
    v65 = v29;
    v60 = (float32x4_t)xmmword_25585B050;
    v59 = xmmword_25585B040;
    v58 = xmmword_25585B030;
    v57 = xmmword_25585B020;
    swift_once();
    v31 = (float32x4_t)v57;
    v30 = (float32x4_t)v58;
    v33 = (float32x4_t)v59;
    v32 = v60;
    v29.i64[0] = v65.i64[0];
  }
  v81.columns[0] = (simd_float4)vmlaq_f32(vmlaq_f32(vmlaq_f32(vnegq_f32(v64), (float32x4_t)0, v63), (float32x4_t)0, v67), (float32x4_t)0, v66);
  v65 = (float32x4_t)v81.columns[0];
  v34 = vmulq_f32(v64, (float32x4_t)0);
  v81.columns[1] = (simd_float4)vmlaq_f32(vmlaq_f32(vaddq_f32(v63, v34), (float32x4_t)0, v67), (float32x4_t)0, v66);
  v64 = (float32x4_t)v81.columns[1];
  v35 = vmlaq_f32(v34, (float32x4_t)0, v63);
  __asm { FMOV            V2.4S, #-1.0 }
  v81.columns[2] = (simd_float4)vmlaq_f32(vmlaq_f32(v35, _Q2, v67), (float32x4_t)0, v66);
  v63 = (float32x4_t)v81.columns[2];
  v81.columns[3] = (simd_float4)vaddq_f32(v66, vmlaq_f32(v35, (float32x4_t)0, v67));
  v67 = (float32x4_t)v81.columns[3];
  v66 = vaddq_f32(vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v31, *(float *)&xmmword_25585B010), v30, *(float32x2_t *)&xmmword_25585B010, 1), v33, (float32x4_t)xmmword_25585B010, 2), v32, (float32x4_t)xmmword_25585B010, 3), vmlaq_f32(vmlaq_lane_f32(vmulq_n_f32(vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v31, *(float *)&xmmword_25585AFE0), v30, *(float32x2_t *)&xmmword_25585AFE0, 1),
                    v33,
                    (float32x4_t)xmmword_25585AFE0,
                    2),
                  v32,
                  (float32x4_t)xmmword_25585AFE0,
                  3),
                v62.n128_f32[0]),
              vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v31, *(float *)&xmmword_25585AFF0), v30, *(float32x2_t *)&xmmword_25585AFF0, 1), v33, (float32x4_t)xmmword_25585AFF0, 2), v32, (float32x4_t)xmmword_25585AFF0, 3), *(float32x2_t *)v29.f32, 1), (float32x4_t)0, vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v31, *(float *)&xmmword_25585B000),
                  v30,
                  *(float32x2_t *)&xmmword_25585B000,
                  1),
                v33,
                (float32x4_t)xmmword_25585B000,
                2),
              v32,
              (float32x4_t)xmmword_25585B000,
              3)));
  v82 = __invert_f4(v81);
  v82.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v82.columns[0], v66.f32[0]), (float32x4_t)v82.columns[1], *(float32x2_t *)v66.f32, 1), (float32x4_t)v82.columns[2], v66, 2), (float32x4_t)v82.columns[3], v66, 3);
  v41 = vzip1_s32(*(int32x2_t *)v82.columns[0].f32, (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v82.columns[0], (int8x16_t)v82.columns[0], 8uLL));
  objc_msgSend(a1, sel_radius);
  v43 = v42;
  v44 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
  v45 = v72;
  v44(&v11[*(int *)(v9 + 24)], v77, v72);
  v46 = &v11[*(int *)(v9 + 28)];
  v61 = v26;
  v44(v46, v26, v45);
  *(int32x2_t *)v11 = v41;
  *((_DWORD *)v11 + 2) = v43;
  v80[0] = v18->n128_u8[0];
  v79 = v18->n128_i8[1];
  v47 = v18->n128_u64[1];
  v62 = v18[1];
  v66 = (float32x4_t)v18[6];
  swift_bridgeObjectRetain();
  objc_msgSend(a1, sel_color);
  v60 = (float32x4_t)v48;
  v49 = (int *)v68;
  v50 = (uint64_t)v73;
  (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v73, (char *)v18 + *(int *)(v68 + 44), v71);
  v51 = v74;
  sub_22643D704((uint64_t)v11, v74, type metadata accessor for CapturedRoom.Surface.Curve);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v69 + 56))(v51, 0, 1, v9);
  v52 = v75;
  sub_22643D7A0((uint64_t)v18 + v49[14], v75, (uint64_t *)&unk_255849AC0);
  v53 = *(unint64_t *)((char *)v18->n128_u64 + v49[15]);
  v54 = *(unint64_t *)((char *)v18->n128_u64 + v49[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2264B945C(v80, (unsigned __int8 *)&v79, v47, v50, v51, v52, v53, v54, v76, v62, v65, v64, v63, v67, (__n128)v66, (__n128)v60, 0.0, 0, MEMORY[0x24BEE4AF8]);
  sub_22643D748((uint64_t)v11, type metadata accessor for CapturedRoom.Surface.Curve);
  v55 = *(void (**)(char *, uint64_t))(v78 + 8);
  v55(v61, v45);
  v55(v77, v45);
  return sub_22643D748((uint64_t)v18, type metadata accessor for CapturedRoom.Surface);
}

uint64_t sub_2264F1484@<X0>(void *a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  float32x4_t v15;
  float32x4_t v16;
  float32x4_t v17;
  float32x4_t v18;
  uint64_t v19;
  float32x4_t v20;
  float32x4_t v21;
  float32x4_t *v22;
  float32x4_t *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  float32x4_t v28;
  float32x4_t v29;
  unint64_t v30;
  float v31;
  unsigned __int8 v32;
  float v33;
  float32x4_t v34;
  int32x4_t v35;
  float32x4_t v36;
  float32x4_t v37;
  float32x2_t v38;
  float32x2_t v39;
  int32x4_t v40;
  int32x4_t v41;
  float32x2_t v42;
  float32x2_t v43;
  int32x4_t v44;
  int32x4_t v45;
  float32x4_t v46;
  int32x4_t v47;
  unsigned __int32 v48;
  float32x4_t v49;
  float32x4_t v50;
  float32x4_t v51;
  float32x4_t v52;
  float32x2_t v53;
  float32x2_t v54;
  float32x4_t v55;
  float32x4_t v61;
  float v62;
  float v63;
  float32x4_t v64;
  float32x4_t v65;
  float32x4_t v66;
  float32x4_t v67;
  float32x4_t v68;
  float32x4_t v69;
  float32x4_t v70;
  float32x4_t v71;
  float32x4_t v72;
  float32x4_t v73;
  uint64_t v75;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  float32x4_t v81;
  float32x4_t v82;
  float32x4_t v83;
  float32x4_t v84;
  float32x4_t v85;
  float32x4_t v86;
  float32x4_t v87;
  float32x4_t v88;
  float32x4_t v89;
  float32x4_t v90;
  float32x4_t v91;
  float32x4_t v92;
  float32x4_t v93;
  float32x4_t v94;
  float32x4_t v95;
  float32x4_t v96;
  float32x4_t v97;
  float32x4_t v98;
  float32x4_t v99;
  unsigned __int8 v100;
  unsigned __int8 v101[9];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848090);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22655C140();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_quad, v12);
  v97 = v16;
  v98 = v15;
  v96 = v17;
  v99 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255840A78);
  v19 = swift_allocObject();
  v20 = v97;
  *(float32x4_t *)(v19 + 32) = v98;
  *(float32x4_t *)(v19 + 48) = v20;
  v21 = v99;
  *(float32x4_t *)(v19 + 64) = v96;
  *(float32x4_t *)(v19 + 80) = v21;
  swift_setDeallocating();
  swift_deallocClassInstance();
  if (qword_25583F970 != -1)
    swift_once();
  v22 = (float32x4_t *)MEMORY[0x24BDAEE00];
  v23 = (float32x4_t *)MEMORY[0x24BE80A88];
  v25 = xmmword_25585B020;
  v24 = xmmword_25585B030;
  v27 = xmmword_25585B040;
  v26 = xmmword_25585B050;
  v88 = (float32x4_t)xmmword_25585B050;
  v87 = (float32x4_t)xmmword_25585B040;
  v86 = (float32x4_t)xmmword_25585B030;
  v85 = (float32x4_t)xmmword_25585B020;
  if (qword_25583F968 != -1)
  {
    swift_once();
    v25 = xmmword_25585B020;
    v24 = xmmword_25585B030;
    v27 = xmmword_25585B040;
    v26 = xmmword_25585B050;
  }
  v77 = v25;
  v78 = v24;
  v79 = v27;
  v80 = v26;
  v89 = *v22;
  v90 = v22[1];
  v91 = v22[2];
  v28 = v23[1];
  v92 = *v23;
  v93 = v28;
  v29 = v23[3];
  v94 = v23[2];
  v95 = v29;
  v81 = (float32x4_t)xmmword_25585AFE0;
  v82 = (float32x4_t)xmmword_25585AFF0;
  v83 = (float32x4_t)xmmword_25585B000;
  v84 = (float32x4_t)xmmword_25585B010;
  v30 = sub_2264F6344((uint64_t)&unk_24EDE0160);
  objc_msgSend(a1, sel_score);
  if (v31 <= 0.9)
  {
    objc_msgSend(a1, sel_score);
    if (v33 > 0.5)
      v32 = 1;
    else
      v32 = 2;
  }
  else
  {
    v32 = 0;
  }
  v34.i32[3] = HIDWORD(v79);
  *(float32x2_t *)v34.f32 = vsub_f32(*(float32x2_t *)v97.f32, *(float32x2_t *)v98.f32);
  v34.f32[2] = v97.f32[2] - v98.f32[2];
  v35 = (int32x4_t)vmulq_f32(v34, v34);
  v36 = vaddq_f32((float32x4_t)vdupq_laneq_s32(v35, 2), vaddq_f32((float32x4_t)v35, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v35.i8, 1)));
  v37.i32[3] = v36.i32[3];
  v38 = vrsqrte_f32((float32x2_t)v36.u32[0]);
  v39 = vmul_f32(v38, vrsqrts_f32((float32x2_t)v36.u32[0], vmul_f32(v38, v38)));
  v40 = (int32x4_t)vmulq_n_f32(v34, vmul_f32(v39, vrsqrts_f32((float32x2_t)v36.u32[0], vmul_f32(v39, v39))).f32[0]);
  *(float32x2_t *)v37.f32 = vsub_f32(*(float32x2_t *)v97.f32, *(float32x2_t *)v96.f32);
  v37.f32[2] = v97.f32[2] - v96.f32[2];
  v41 = (int32x4_t)vmulq_f32(v37, v37);
  v41.i32[0] = vaddq_f32((float32x4_t)vdupq_laneq_s32(v41, 2), vaddq_f32((float32x4_t)v41, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v41.i8, 1))).u32[0];
  v42 = vrsqrte_f32((float32x2_t)v41.u32[0]);
  v43 = vmul_f32(v42, vrsqrts_f32((float32x2_t)v41.u32[0], vmul_f32(v42, v42)));
  v44 = (int32x4_t)vmulq_n_f32(v37, vmul_f32(v43, vrsqrts_f32((float32x2_t)v41.u32[0], vmul_f32(v43, v43))).f32[0]);
  v45 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v44, v44), (int8x16_t)v44, 0xCuLL), vnegq_f32((float32x4_t)v40)), (float32x4_t)v44, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v40, v40), (int8x16_t)v40, 0xCuLL));
  v46 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v45, v45), (int8x16_t)v45, 0xCuLL);
  v47 = (int32x4_t)vmulq_f32((float32x4_t)v45, (float32x4_t)v45);
  v48 = vadd_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v47.i8, 1), vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v47, 2), *(float32x2_t *)v47.i8)).u32[0];
  v49 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v85, v81.f32[0]), v86, *(float32x2_t *)v81.f32, 1), v87, v81, 2), v88, v81, 3);
  v50 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v85, v82.f32[0]), v86, *(float32x2_t *)v82.f32, 1), v87, v82, 2), v88, v82, 3);
  v51 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v85, v83.f32[0]), v86, *(float32x2_t *)v83.f32, 1), v87, v83, 2), v88, v83, 3);
  v52 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v85, v84.f32[0]), v86, *(float32x2_t *)v84.f32, 1), v87, v84, 2), v88, v84, 3);
  v53 = vrsqrte_f32((float32x2_t)v48);
  v54 = vmul_f32(v53, vrsqrts_f32((float32x2_t)v48, vmul_f32(v53, v53)));
  v55 = vmulq_n_f32(v46, vmul_f32(v54, vrsqrts_f32((float32x2_t)v48, vmul_f32(v54, v54))).f32[0]);
  __asm { FMOV            V25.2S, #0.25 }
  *(float32x2_t *)v61.f32 = vmul_f32(vadd_f32(*(float32x2_t *)v99.f32, vadd_f32(*(float32x2_t *)v96.f32, vadd_f32(*(float32x2_t *)v97.f32, vadd_f32(*(float32x2_t *)v98.f32, 0)))), _D25);
  v62 = 0.0 - v55.f32[0];
  v63 = 0.0 - v55.f32[1];
  v61.f32[2] = (float)(v99.f32[2] + (float)(v96.f32[2] + (float)(v97.f32[2] + (float)(v98.f32[2] + 0.0)))) * 0.25;
  v61.i32[3] = 1.0;
  v64 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v89, *(float *)v40.i32), v90, *(float32x2_t *)v40.i8, 1), v91, (float32x4_t)v40, 2);
  v65 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v89, *(float *)v44.i32), v90, *(float32x2_t *)v44.i8, 1), v91, (float32x4_t)v44, 2);
  *(float *)v40.i32 = 0.0 - v55.f32[2];
  v66 = vmlaq_f32(v64, (float32x4_t)0, v61);
  v67 = vmlaq_f32(vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(v89, 0.0 - v55.f32[0]), v90, 0.0 - v55.f32[1]), v91, 0.0 - v55.f32[2]), (float32x4_t)0, v61);
  v68 = vmlaq_f32(v65, (float32x4_t)0, v61);
  v69 = vaddq_f32(v61, vmlaq_f32(vmlaq_f32(vmulq_f32(v89, (float32x4_t)0), (float32x4_t)0, v90), (float32x4_t)0, v91));
  v70 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v66, v92.f32[0]), v67, *(float32x2_t *)v92.f32, 1), v68, v92, 2), v69, v92, 3);
  v71 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v66, v93.f32[0]), v67, *(float32x2_t *)v93.f32, 1), v68, v93, 2), v69, v93, 3);
  v72 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v66, v94.f32[0]), v67, *(float32x2_t *)v94.f32, 1), v68, v94, 2), v69, v94, 3);
  v73 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v66, v95.f32[0]), v67, *(float32x2_t *)v95.f32, 1), v68, v95, 2), v69, v95, 3);
  v99 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v49, v70.f32[0]), v50, *(float32x2_t *)v70.f32, 1), v51, v70, 2), v52, v70, 3);
  v98 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v49, v71.f32[0]), v50, *(float32x2_t *)v71.f32, 1), v51, v71, 2), v52, v71, 3);
  v96 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v49, v73.f32[0]), v50, *(float32x2_t *)v73.f32, 1), v51, v73, 2), v52, v73, 3);
  v97 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v49, v72.f32[0]), v50, *(float32x2_t *)v72.f32, 1), v51, v72, 2), v52, v72, 3);
  __asm { FMOV            V0.4S, #-1.0 }
  v94 = (float32x4_t)__PAIR64__(COERCE_UNSIGNED_INT(sqrtf(*(float *)v41.i32)), COERCE_UNSIGNED_INT(sqrtf(v36.f32[0])));
  v95 = vmlaq_f32(vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v77, v81.f32[0]), (float32x4_t)v78, *(float32x2_t *)v81.f32, 1), (float32x4_t)v79, v81, 2), (float32x4_t)v80, v81, 3), 0.0 - v62), vmlaq_laneq_f32(vmlaq_laneq_f32(
                  vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v77, v82.f32[0]), (float32x4_t)v78, *(float32x2_t *)v82.f32, 1), (float32x4_t)v79, v82, 2), (float32x4_t)v80, v82, 3), 0.0 - v63), vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v77, v83.f32[0]), (float32x4_t)v78, *(float32x2_t *)v83.f32, 1), (float32x4_t)v79, v83, 2), (float32x4_t)v80, v83,
              3),
            0.0 - *(float *)v40.i32),
          _Q0,
          vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v77, v84.f32[0]), (float32x4_t)v78, *(float32x2_t *)v84.f32, 1), (float32x4_t)v79, v84, 2), (float32x4_t)v80, v84, 3));
  v101[0] = 2;
  v100 = v32;
  sub_22655C134();
  v75 = type metadata accessor for CapturedRoom.Surface.Curve(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v9, 1, 1, v75);
  sub_22655C128();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  return sub_2264B945C(v101, &v100, v30, (uint64_t)v14, (uint64_t)v9, (uint64_t)v6, MEMORY[0x24BEE4AF8], MEMORY[0x24BEE4AF8], a2, (__n128)v94, v99, v98, v97, v96, (__n128)v95, (__n128)0, 0.0, 0, MEMORY[0x24BEE4AF8]);
}

id sub_2264F1BA4@<X0>(unint64_t a1@<X0>, unint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  float32x4_t v15;
  float32x4_t v16;
  float32x4_t v17;
  unint64_t v18;
  unsigned int v19;
  unsigned __int8 v20;
  id v21;
  id result;
  void *v23;
  unint64_t v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  unsigned __int8 v29;
  int v30;
  float v31;
  float v32;
  int v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  unint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  id v65;
  uint64_t v66;
  void *v67;
  char v68;
  uint64_t v69;
  Swift::Bool v70;
  id v71;
  void *v72;
  _BYTE *v73;
  uint64_t v74;
  void (*v75)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v76;
  uint64_t v77;
  void (*v78)(_BYTE *, uint64_t, uint64_t, uint64_t);
  float32x4_t v79;
  float32x4_t v80;
  float32x4_t v81;
  float32x4_t v82;
  float32x4_t v83;
  float32x4_t v84;
  float32x4_t v85;
  float32x4_t v86;
  id v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  id v92;
  int *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  float32x4_t v97;
  float32x4_t v98;
  uint64_t v99;
  _BYTE v100[12];
  int v101;
  float32x4_t v102;
  float32x4_t v103;
  float32x4_t v104;
  float32x4_t v105;
  float32x4_t v106;
  float32x4_t v107;
  float32x4_t v108;
  float32x4_t v109;
  float32x4_t v110;
  float32x4_t v111;
  float32x4_t v112;
  __int128 v113;
  float32x4_t v114;
  uint64_t v115;
  unint64_t v116;
  int *v117;
  unint64_t v118;
  _BYTE *v119;
  uint64_t v120;
  _BYTE *v121;
  _QWORD *v122;
  _BYTE *v123;
  uint64_t v124;
  uint64_t v125;
  __int128 v126;
  __int128 v127;
  int32x4_t v128;
  float32x4_t v129;
  float32x4_t v130;
  float32x4_t v131;
  int v132;
  float32x4_t v133;
  float32x4_t v134;
  float32x4_t v135;
  float32x4_t v136;
  float32x4_t v137;
  __int128 v138;
  __int128 v139;
  uint64_t v140;
  uint64_t v141[7];

  v141[5] = *MEMORY[0x24BDAC8D0];
  v4 = type metadata accessor for CapturedRoom.Object(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t)&v100[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v124 = sub_22655C140();
  v120 = *(_QWORD *)(v124 - 8);
  MEMORY[0x24BDAC7A8](v124);
  v119 = &v100[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
  MEMORY[0x24BDAC7A8](v9);
  v121 = &v100[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v123 = &v100[-v12];
  v131.i64[0] = sub_22655CB84();
  v130.i64[0] = *(_QWORD *)(v131.i64[0] - 8);
  MEMORY[0x24BDAC7A8](v131.i64[0]);
  v14 = &v100[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = *(float32x4_t *)(MEMORY[0x24BDAEE00] + 16);
  v16 = *(float32x4_t *)(MEMORY[0x24BDAEE00] + 32);
  v17 = *(float32x4_t *)(MEMORY[0x24BDAEE00] + 48);
  v134 = *(float32x4_t *)MEMORY[0x24BDAEE00];
  v135 = v15;
  v136 = v16;
  v137 = v17;
  v138 = xmmword_226567020;
  if (qword_25583F990 == -1)
    goto LABEL_2;
  while (1)
  {
    swift_once();
LABEL_2:
    v18 = (unint64_t)&xmmword_25585B000;
    v19 = objc_msgSend((id)a1, sel_getDimension_dim_, qword_25585B080, &v138);
    v20 = objc_msgSend((id)a1, sel_getTransform_transform_, qword_25585B080, &v134);
    if (!v19 || (v20 & 1) == 0)
      return (id)(*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
    v103 = v134;
    v105 = v135;
    v107 = v136;
    v111 = v137;
    if (qword_25583F970 != -1)
      swift_once();
    v115 = v7;
    v108 = (float32x4_t)xmmword_25585B020;
    v110 = (float32x4_t)xmmword_25585B030;
    v112 = (float32x4_t)xmmword_25585B040;
    v114 = (float32x4_t)xmmword_25585B050;
    if (qword_25583F968 != -1)
      swift_once();
    v102 = (float32x4_t)xmmword_25585AFE0;
    v104 = (float32x4_t)xmmword_25585AFF0;
    v106 = (float32x4_t)xmmword_25585B000;
    v109 = (float32x4_t)xmmword_25585B010;
    v113 = v138;
    v7 = (uint64_t)&selRef_session_didUpdateTextCoaching_;
    v21 = objc_msgSend((id)a1, sel_corners_status);
    v133.i64[0] = a1;
    v118 = a2;
    v117 = (int *)v4;
    v116 = v5;
    if (v21)
      break;
    do
    {
      v132 = 0;
LABEL_28:
      objc_msgSend((id)a1, sel_confidence);
      if (v31 <= 0.9)
      {
        objc_msgSend((id)a1, sel_confidence);
        if (v32 > 0.5)
          v33 = 1;
        else
          v33 = 2;
        v101 = v33;
      }
      else
      {
        v101 = 0;
      }
      v34 = *(void **)(v18 + 128);
      v18 = qword_25583F980;
      v35 = v34;
      if (v18 != -1)
        swift_once();
      v36 = sub_22655CD88();
      v38 = v37;
      v39 = sub_22655CD88();
      v5 = v40;
      if (v36 == v39 && v38 == v40)
      {

        swift_bridgeObjectRelease_n();
      }
      else
      {
        v41 = sub_22655D55C();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v41 & 1) == 0)
        {
          v42 = (void *)v133.i64[0];
          v43 = objc_msgSend((id)v133.i64[0], sel_parts);
          goto LABEL_42;
        }
      }
      v42 = (void *)v133.i64[0];
      v43 = objc_msgSend((id)v133.i64[0], sel_beautified_parts);
LABEL_42:
      v44 = v43;
      if (v44)
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558480E0);
        v45 = sub_22655CCC8();

      }
      else
      {
        v45 = 0;
      }
      if ((byte_25585B078 & 1) != 0)
      {
        swift_bridgeObjectRelease();
LABEL_79:
        v64 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_82:
        v65 = objc_msgSend(v42, sel_type);
        v66 = (uint64_t)v121;
        if (v65)
        {
          v67 = v65;
          sub_2264EBEDC((char *)v141);

          v68 = v141[0];
          if (v64[2])
          {
            v69 = swift_bridgeObjectRetain();
            v70 = CapturedRoom.Object.Category.supportsCombination(_:)((Swift::OpaquePointer)v69);
            swift_bridgeObjectRelease();
            if (!v70)
            {
              swift_bridgeObjectRelease();
              v64 = (_QWORD *)MEMORY[0x24BEE4AF8];
            }
          }
          v122 = v64;
          v71 = objc_msgSend(v42, sel_identifier);
          if (v71)
          {
            v72 = v71;
            v73 = v119;
            sub_22655C110();

            v74 = v120;
            v75 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v120 + 32);
            v76 = v123;
            v77 = v124;
            v75(v123, v73, v124);
            v78 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v74 + 56);
            v78(v76, 0, 1, v77);
            result = (id)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v74 + 48))(v76, 1, v77);
            if ((_DWORD)result != 1)
            {
              v79 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v103, COERCE_FLOAT(*MEMORY[0x24BE80A88])), v105, *MEMORY[0x24BE80A88], 1), v107, *MEMORY[0x24BE80A88], 2), v111, *MEMORY[0x24BE80A88], 3);
              v80 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v103, COERCE_FLOAT(*(_OWORD *)(MEMORY[0x24BE80A88] + 16))), v105, *(float32x2_t *)(MEMORY[0x24BE80A88] + 16), 1), v107, *(float32x4_t *)(MEMORY[0x24BE80A88] + 16), 2), v111, *(float32x4_t *)(MEMORY[0x24BE80A88] + 16), 3);
              v81 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v103, COERCE_FLOAT(*(_OWORD *)(MEMORY[0x24BE80A88] + 32))), v105, *(float32x2_t *)(MEMORY[0x24BE80A88] + 32), 1), v107, *(float32x4_t *)(MEMORY[0x24BE80A88] + 32), 2), v111, *(float32x4_t *)(MEMORY[0x24BE80A88] + 32), 3);
              v82 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v103, COERCE_FLOAT(*(_OWORD *)(MEMORY[0x24BE80A88] + 48))), v105, *(float32x2_t *)(MEMORY[0x24BE80A88] + 48), 1), v107, *(float32x4_t *)(MEMORY[0x24BE80A88] + 48), 2), v111, *(float32x4_t *)(MEMORY[0x24BE80A88] + 48), 3);
              v83 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v108, v102.f32[0]), v110, *(float32x2_t *)v102.f32, 1), v112, v102, 2), v114, v102, 3);
              v84 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v108, v104.f32[0]), v110, *(float32x2_t *)v104.f32, 1), v112, v104, 2), v114, v104, 3);
              v85 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v108, v106.f32[0]), v110, *(float32x2_t *)v106.f32, 1), v112, v106, 2), v114, v106, 3);
              v86 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v108, v109.f32[0]), v110, *(float32x2_t *)v109.f32, 1), v112, v109, 2), v114, v109, 3);
              v133 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v83, v79.f32[0]), v84, *(float32x2_t *)v79.f32, 1), v85, v79, 2), v86, v79, 3);
              v131 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v83, v80.f32[0]), v84, *(float32x2_t *)v80.f32, 1), v85, v80, 2), v86, v80, 3);
              v130 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v83, v81.f32[0]), v84, *(float32x2_t *)v81.f32, 1), v85, v81, 2), v86, v81, 3);
              v129 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v83, v82.f32[0]), v84, *(float32x2_t *)v82.f32, 1), v85, v82, 2), v86, v82, 3);
              v128 = vuzp1q_s32((int32x4_t)v113, vrev64q_s32((int32x4_t)v113));
              v87 = objc_msgSend(v42, sel_parent_id);
              if (v87)
              {
                v88 = v87;
                sub_22655C110();

                v89 = 0;
              }
              else
              {
                v89 = 1;
              }
              v90 = v124;
              v78((_BYTE *)v66, v89, 1, v124);
              objc_msgSend(v42, sel_color);
              v127 = v91;
              v92 = objc_msgSend(v42, sel_storyLevel);
              v93 = v117;
              v94 = v117[10];
              v95 = v115;
              *(_QWORD *)(v115 + v94) = 0;
              v96 = v95 + v93[11];
              v78((_BYTE *)v96, 1, 1, v90);
              *(_BYTE *)v95 = v68;
              *(_BYTE *)(v95 + 1) = v101;
              v97 = v133;
              *(int32x4_t *)(v95 + 16) = v128;
              *(float32x4_t *)(v95 + 32) = v97;
              v98 = v130;
              *(float32x4_t *)(v95 + 48) = v131;
              *(float32x4_t *)(v95 + 64) = v98;
              *(float32x4_t *)(v95 + 80) = v129;
              v75((_BYTE *)(v95 + v93[8]), v123, v90);
              sub_2264F64F0(v66, v96);
              *(_DWORD *)(v95 + v93[12]) = v132;
              *(_OWORD *)(v95 + v93[13]) = v127;
              *(_QWORD *)(v95 + v93[9]) = v122;
              *(_QWORD *)(v95 + v94) = v92;
              v99 = v118;
              sub_22643F6AC(v95, v118, type metadata accessor for CapturedRoom.Object);
              return (id)(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(v116 + 56))(v99, 0, 1, v93);
            }
LABEL_102:
            __break(1u);
            goto LABEL_103;
          }
        }
        else
        {
          __break(1u);
        }
        result = (id)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v120 + 56))(v123, 1, 1, v124);
        goto LABEL_102;
      }
      if (!v45)
        goto LABEL_79;
      a1 = sub_2264F2AA0(v45);
      swift_bridgeObjectRelease();
      if (!a1)
      {
        v64 = (_QWORD *)MEMORY[0x24BEE4AF8];
        v42 = (void *)v133.i64[0];
        goto LABEL_82;
      }
      v7 = 0;
      v47 = *(_QWORD *)(a1 + 64);
      *(_QWORD *)&v127 = a1 + 64;
      v48 = 1 << *(_BYTE *)(a1 + 32);
      v49 = -1;
      if (v48 < 64)
        v49 = ~(-1 << v48);
      a2 = v49 & v47;
      v128.i64[0] = (unint64_t)(v48 + 63) >> 6;
      v122 = (_QWORD *)MEMORY[0x24BEE4AF8];
      *(_QWORD *)&v46 = 136315138;
      v126 = v46;
      v125 = MEMORY[0x24BEE4AD8] + 8;
      v4 = v129.i64[0];
      if ((v49 & v47) != 0)
      {
LABEL_52:
        v50 = __clz(__rbit64(a2));
        a2 &= a2 - 1;
        v51 = v50 | (v7 << 6);
        goto LABEL_67;
      }
      while (1)
      {
        v52 = v7 + 1;
        if (__OFADD__(v7, 1))
          goto LABEL_94;
        if (v52 >= v128.i64[0])
          goto LABEL_80;
        v53 = *(_QWORD *)(v127 + 8 * v52);
        ++v7;
        if (!v53)
        {
          v7 = v52 + 1;
          if (v52 + 1 >= v128.i64[0])
            goto LABEL_80;
          v53 = *(_QWORD *)(v127 + 8 * v7);
          if (!v53)
          {
            v7 = v52 + 2;
            if (v52 + 2 >= v128.i64[0])
              goto LABEL_80;
            v53 = *(_QWORD *)(v127 + 8 * v7);
            if (!v53)
              break;
          }
        }
LABEL_66:
        a2 = (v53 - 1) & v53;
        v51 = __clz(__rbit64(v53)) + (v7 << 6);
LABEL_67:
        v55 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v51);
        v57 = *v55;
        v56 = v55[1];
        swift_bridgeObjectRetain();
        sub_2264F2DC0(v57, v56, (uint64_t)&v139);
        if (v140)
        {
          swift_bridgeObjectRelease();
          sub_226438644(&v139, (uint64_t)v141);
          sub_226438600((uint64_t)v141, (uint64_t)&v139);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v122 = sub_226488640(0, v122[2] + 1, 1, v122);
          v18 = v122[2];
          v62 = v122[3];
          if (v18 >= v62 >> 1)
            v122 = sub_226488640((_QWORD *)(v62 > 1), v18 + 1, 1, v122);
          v63 = v122;
          v122[2] = v18 + 1;
          sub_226438644(&v139, (uint64_t)&v63[5 * v18 + 4]);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v141);
          if (a2)
            goto LABEL_52;
        }
        else
        {
          sub_22643D7E4((uint64_t)&v139, &qword_255845FE0);
          sub_22655CB78();
          swift_bridgeObjectRetain();
          v58 = sub_22655CB6C();
          v59 = sub_22655CFF8();
          v5 = v59;
          if (os_log_type_enabled(v58, v59))
          {
            v60 = swift_slowAlloc();
            v18 = swift_slowAlloc();
            v141[0] = v18;
            *(_DWORD *)v60 = v126;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v60 + 4) = sub_2264F4EC4(v57, v56, v141);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_226423000, v58, (os_log_type_t)v5, "Error: Unable to convert object attribute: %s", (uint8_t *)v60, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x22769A884](v18, -1, -1);
            v61 = v60;
            v4 = v129.i64[0];
            MEMORY[0x22769A884](v61, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          (*(void (**)(_BYTE *, uint64_t))(v130.i64[0] + 8))(v14, v131.i64[0]);
          if (a2)
            goto LABEL_52;
        }
      }
      v54 = v52 + 3;
      if (v54 >= v128.i64[0])
      {
LABEL_80:
        swift_release();
        v42 = (void *)v133.i64[0];
        v64 = v122;
        goto LABEL_82;
      }
      v53 = *(_QWORD *)(v127 + 8 * v54);
      if (v53)
      {
        v7 = v54;
        goto LABEL_66;
      }
      while (1)
      {
        v7 = v54 + 1;
        if (__OFADD__(v54, 1))
          break;
        if (v7 >= v128.i64[0])
          goto LABEL_80;
        v53 = *(_QWORD *)(v127 + 8 * v7);
        ++v54;
        if (v53)
          goto LABEL_66;
      }
      __break(1u);
LABEL_97:
      swift_bridgeObjectRetain();
      v4 = sub_22655D400();
      swift_bridgeObjectRelease_n();
      if (v4 < 0)
      {
        __break(1u);
LABEL_99:
        __break(1u);
      }
LABEL_12:
      ;
    }
    while (!v4);
    v132 = 0;
    v5 = 0;
    a2 = (unint64_t)&selRef_session_didUpdateTextCoaching_;
    while (v4 != v5)
    {
      v25 = objc_msgSend((id)a1, *(SEL *)(v7 + 2064));
      if (!v25)
        goto LABEL_99;
      v26 = v25;
      a1 = sub_22655CECC();

      if ((a1 & 0xC000000000000001) != 0)
      {
        v27 = (id)MEMORY[0x2276999E4](v5, a1);
      }
      else
      {
        if (v5 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_93;
        v27 = *(id *)(a1 + 8 * v5 + 32);
      }
      v28 = v27;
      swift_bridgeObjectRelease();
      v29 = objc_msgSend(v28, sel_BOOLValue);

      if (v5 <= 0x1F && (v29 & 1) != 0)
      {
        v30 = 1 << v5;
        if (((1 << v5) & v132) != 0)
          v30 = 0;
        v132 |= v30;
      }
      ++v5;
      a1 = v133.i64[0];
      if (v4 == v5)
        goto LABEL_28;
    }
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
  }

  result = objc_msgSend((id)a1, sel_corners_status);
  if (result)
  {
    v23 = result;
    sub_22643F548(0, &qword_255845308);
    v24 = sub_22655CECC();

    if (v24 >> 62)
      goto LABEL_97;
    v4 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
LABEL_103:
  __break(1u);
  return result;
}

unint64_t sub_2264F2AA0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t result;
  int64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848150);
    v2 = (_QWORD *)sub_22655D430();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v26 = a1 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(a1 + 64);
  v25 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v10 = (v5 - 1) & v5;
      v11 = __clz(__rbit64(v5)) | (v7 << 6);
      v12 = v7;
    }
    else
    {
      v13 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_37;
      if (v13 >= v25)
      {
LABEL_33:
        sub_22646C924();
        return (unint64_t)v2;
      }
      v14 = *(_QWORD *)(v26 + 8 * v13);
      v12 = v7 + 1;
      if (!v14)
      {
        v12 = v7 + 2;
        if (v7 + 2 >= v25)
          goto LABEL_33;
        v14 = *(_QWORD *)(v26 + 8 * v12);
        if (!v14)
        {
          v12 = v7 + 3;
          if (v7 + 3 >= v25)
            goto LABEL_33;
          v14 = *(_QWORD *)(v26 + 8 * v12);
          if (!v14)
          {
            v12 = v7 + 4;
            if (v7 + 4 >= v25)
              goto LABEL_33;
            v14 = *(_QWORD *)(v26 + 8 * v12);
            if (!v14)
            {
              v15 = v7 + 5;
              if (v7 + 5 >= v25)
                goto LABEL_33;
              v14 = *(_QWORD *)(v26 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  v12 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_38;
                  if (v12 >= v25)
                    goto LABEL_33;
                  v14 = *(_QWORD *)(v26 + 8 * v12);
                  ++v15;
                  if (v14)
                    goto LABEL_26;
                }
              }
              v12 = v7 + 5;
            }
          }
        }
      }
LABEL_26:
      v10 = (v14 - 1) & v14;
      v11 = __clz(__rbit64(v14)) + (v12 << 6);
    }
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v18 = *v16;
    v17 = v16[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558480E0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255841B50);
    if (!swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22646C924();
      swift_release();
      return 0;
    }
    result = sub_2265348F0(v18, v17);
    v19 = result;
    if ((v20 & 1) != 0)
    {
      v8 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v8 = v18;
      v8[1] = v17;
      v9 = v2[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v9 + 8 * v19) = v27;
      goto LABEL_8;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v21 = (uint64_t *)(v2[6] + 16 * result);
    *v21 = v18;
    v21[1] = v17;
    *(_QWORD *)(v2[7] + 8 * result) = v27;
    v22 = v2[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_36;
    v2[2] = v24;
LABEL_8:
    v7 = v12;
    v5 = v10;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_2264F2DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  _QWORD *v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t result;
  __int128 v31;
  __int128 v32;
  uint64_t v33;

  *(_QWORD *)&v31 = a1;
  *((_QWORD *)&v31 + 1) = a2;
  sub_22647D7C4();
  v8 = (_QWORD *)sub_22655D1C0();
  if (v8[2] < 2uLL)
  {
    __break(1u);
  }
  else
  {
    v9 = v8;
    v3 = v8[8];
    v10 = v8[9];
    v11 = v8[10];
    v6 = v8[11];
    swift_bridgeObjectRetain();
    v5 = MEMORY[0x2276994D4](v3, v10, v11, v6);
    v4 = v12;
    swift_bridgeObjectRelease();
    if (v9[2] >= 3uLL)
    {
      v13 = v9[12];
      v14 = v9[13];
      v15 = v9[14];
      v16 = v9[15];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v6 = MEMORY[0x2276994D4](v13, v14, v15, v16);
      v3 = v17;
      swift_bridgeObjectRelease();
      if (qword_25583F960 == -1)
        goto LABEL_4;
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_25:
  swift_once();
LABEL_4:
  v18 = off_255847550;
  if (*((_QWORD *)off_255847550 + 2))
  {
    swift_bridgeObjectRetain();
    v19 = sub_2265348F0(v5, v4);
    if ((v20 & 1) != 0)
    {
      v21 = *(_QWORD *)(v18[7] + 8 * v19);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v21 + 16))
      {
        swift_bridgeObjectRetain();
        v22 = sub_2265348F0(v6, v3);
        if ((v23 & 1) != 0)
        {
          sub_226438600(*(_QWORD *)(v21 + 56) + 40 * v22, (uint64_t)&v31);
        }
        else
        {
          v33 = 0;
          v31 = 0u;
          v32 = 0u;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v33 = 0;
        v31 = 0u;
        v32 = 0u;
      }
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    swift_bridgeObjectRelease();
  }
  v33 = 0;
  v31 = 0u;
  v32 = 0u;
LABEL_15:
  v24 = off_255847550;
  if (*((_QWORD *)off_255847550 + 2) && (v25 = sub_2265348F0(v5, v4), (v26 & 1) != 0))
  {
    v27 = *(_QWORD *)(v24[7] + 8 * v25);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v27 + 16) && (v28 = sub_2265348F0(v6, v3), (v29 & 1) != 0))
    {
      sub_226438600(*(_QWORD *)(v27 + 56) + 40 * v28, a3);
    }
    else
    {
      *(_QWORD *)(a3 + 32) = 0;
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_22643D7E4((uint64_t)&v31, &qword_255845FE0);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_22643D7E4((uint64_t)&v31, &qword_255845FE0);
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

void sub_2264F3060(void *a1@<X0>, uint64_t a2@<X8>)
{
  char **v2;
  float v3;
  float v4;
  id v7;
  unint64_t v8;
  float32x4_t v9;
  float32x4_t v10;
  float32x4_t v11;
  float32x4_t v12;
  float32x4_t v13;
  float32x4_t v14;
  float32x4_t v15;
  float32x4_t v16;
  float32x4_t v17;
  void *v18;
  _QWORD *v19;
  id v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  int v38;
  float v39;
  float v40;
  unsigned int v41;
  float32x4_t v42;
  float32x4_t v43;
  float32x4_t v44;
  float32x4_t v45;
  float32x4_t v46;
  float32x4_t v47;
  float32x4_t v48;
  float32x4_t v49;
  float32x4_t v50;
  float32x4_t v51;
  float32x4_t v52;
  float32x4_t v53;
  float32x4_t v54;
  float32x4_t v55;
  float32x4_t v56;
  id v57;
  uint64_t v58;
  id v59;
  unint64_t v60;
  void *v61;
  _QWORD *v62;
  id v63;
  char *v64;
  unint64_t v65;
  unint64_t v66;
  float32x4_t v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  simd_float4 v89;
  simd_float4 v90;
  simd_float4 v91;
  simd_float4 v92;
  unsigned int v93;
  int v94;
  uint64_t v95;
  float32x4_t v96;
  float32x4_t v97;
  float32x4_t v98;
  float32x4_t v99;
  float32x4_t v100;
  float32x4_t v101;
  float32x4_t v102;
  float32x4_t v103;
  __int128 v104;
  float32x4_t v105;
  float32x4_t v106;
  __int128 v107;
  float32x4_t v108;
  float32x4_t v109;
  __int128 v110;
  float32x4_t v111;
  float32x4_t v112;
  __int128 v113;
  float32x4_t v114;
  float32x4_t v115;
  float32x4_t v116;
  float32x4_t v117;
  float32x4_t v118;
  float32x4_t v119;
  float32x4_t v120;
  float32x4_t v121;
  float32x4_t v122;
  float32x2_t v123;
  __int128 v124;
  float32x4_t v125;
  float32x4_t v126;
  _BYTE v127[16];
  simd_float4 v128;
  id v129;
  simd_float4 v130;
  simd_float4 v131;
  simd_float4 v132;
  simd_float4 v133;
  char v134;
  _QWORD *v135;
  __int128 v136;
  char v137;
  simd_float4x4 v138;
  simd_float4x4 v139;

  v7 = objc_msgSend(a1, sel_polygon);
  v8 = (unint64_t)objc_msgSend(v7, sel_count);

  if ((v8 & 0x8000000000000000) == 0)
  {
    v95 = a2;
    v2 = &selRef_session_didUpdateTextCoaching_;
    if (v8)
    {
      v18 = 0;
      v19 = (_QWORD *)MEMORY[0x24BEE4AF8];
      do
      {
        v20 = objc_msgSend(a1, sel_polygon);
        v21 = objc_msgSend(v20, sel_points);

        v22 = v21[(_QWORD)v18];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v19 = sub_226486C2C(0, v19[2] + 1, 1, v19);
        v24 = v19[2];
        v23 = v19[3];
        if (v24 >= v23 >> 1)
          v19 = sub_226486C2C((_QWORD *)(v23 > 1), v24 + 1, 1, v19);
        v18 = (char *)v18 + 1;
        v19[2] = v24 + 1;
        v19[v24 + 4] = v22;
      }
      while ((void *)v8 != v18);
      swift_bridgeObjectRelease();
    }
    v25 = objc_msgSend(a1, sel_label);
    v26 = sub_22655CD88();
    v28 = v27;
    if (v26 == sub_22655CD88() && v28 == v29)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v31 = sub_22655D55C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v31 & 1) == 0)
      {
        v32 = sub_22655CD88();
        v34 = v33;
        if (v32 == sub_22655CD88() && v34 == v35)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          v36 = sub_22655D55C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v36 & 1) == 0)
          {
            v69 = sub_22655CD88();
            v71 = v70;
            if (v69 == sub_22655CD88() && v71 == v72)
            {
              swift_bridgeObjectRelease_n();
            }
            else
            {
              v73 = sub_22655D55C();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v73 & 1) == 0)
              {
                v74 = sub_22655CD88();
                v76 = v75;
                if (v74 == sub_22655CD88() && v76 == v77)
                {
                  swift_bridgeObjectRelease_n();
                }
                else
                {
                  v78 = sub_22655D55C();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v78 & 1) == 0)
                  {
                    v79 = sub_22655CD88();
                    v81 = v80;
                    if (v79 == sub_22655CD88() && v81 == v82)
                    {
                      swift_bridgeObjectRelease_n();
                    }
                    else
                    {
                      v83 = sub_22655D55C();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      if ((v83 & 1) == 0)
                      {
                        v84 = sub_22655CD88();
                        v86 = v85;
                        if (v84 != sub_22655CD88() || v86 != v87)
                          sub_22655D55C();

                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        v37 = 5;
                        goto LABEL_22;
                      }
                    }

                    v37 = 4;
LABEL_22:
                    v88 = v37;
LABEL_23:
                    objc_msgSend(a1, sel_dimensions);
                    v94 = v38;
                    objc_msgSend(a1, sel_ceilingHeight);
                    v3 = v39;
                    objc_msgSend(a1, sel_floorHeight);
                    v4 = v40;
                    objc_msgSend(a1, sel_dimensions);
                    v93 = v41;
                    objc_msgSend(a1, sel_transform);
                    v13 = *(float32x4_t *)MEMORY[0x24BE80A88];
                    v12 = *(float32x4_t *)(MEMORY[0x24BE80A88] + 16);
                    v11 = *(float32x4_t *)(MEMORY[0x24BE80A88] + 32);
                    v10 = *(float32x4_t *)(MEMORY[0x24BE80A88] + 48);
                    v17 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v42, COERCE_FLOAT(*MEMORY[0x24BE80A88])), v43, *MEMORY[0x24BE80A88], 1), v44, *MEMORY[0x24BE80A88], 2);
                    v16 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v42, v12.f32[0]), v43, *(float32x2_t *)v12.f32, 1), v44, v12, 2);
                    v15 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v42, v11.f32[0]), v43, *(float32x2_t *)v11.f32, 1), v44, v11, 2);
                    v14 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v42, v10.f32[0]), v43, *(float32x2_t *)v10.f32, 1), v44, v10, 2);
                    if (qword_25583F970 == -1)
                      goto LABEL_24;
                    goto LABEL_58;
                  }
                }

                v37 = 3;
                goto LABEL_22;
              }
            }

            v37 = 2;
            goto LABEL_22;
          }
        }

        v37 = 1;
        goto LABEL_22;
      }
    }

    v88 = 0;
    goto LABEL_23;
  }
  __break(1u);
LABEL_58:
  v121 = v15;
  v125 = v14;
  v115 = v17;
  v118 = v16;
  v109 = v10;
  v112 = v9;
  v103 = v12;
  v106 = v11;
  v101 = v13;
  swift_once();
  v13 = v101;
  v12 = v103;
  v11 = v106;
  v10 = v109;
  v9 = v112;
  v17 = v115;
  v16 = v118;
  v15 = v121;
  v14 = v125;
LABEL_24:
  v45 = vmlaq_laneq_f32(v17, v9, v13, 3);
  v46 = vmlaq_laneq_f32(v16, v9, v12, 3);
  v47 = vmlaq_laneq_f32(v15, v9, v11, 3);
  v48 = vmlaq_laneq_f32(v14, v9, v10, 3);
  v49 = (float32x4_t)xmmword_25585B020;
  v50 = (float32x4_t)xmmword_25585B030;
  v52 = (float32x4_t)xmmword_25585B040;
  v51 = (float32x4_t)xmmword_25585B050;
  if (qword_25583F968 != -1)
  {
    v122 = v47;
    v126 = v48;
    v116 = v45;
    v119 = v46;
    v110 = xmmword_25585B040;
    v113 = xmmword_25585B050;
    v104 = xmmword_25585B020;
    v107 = xmmword_25585B030;
    swift_once();
    v49 = (float32x4_t)v104;
    v50 = (float32x4_t)v107;
    v52 = (float32x4_t)v110;
    v51 = (float32x4_t)v113;
    v45 = v116;
    v46 = v119;
    v47 = v122;
    v48 = v126;
  }
  v53 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v49, *(float *)&xmmword_25585AFE0), v50, *(float32x2_t *)&xmmword_25585AFE0, 1), v52, (float32x4_t)xmmword_25585AFE0, 2), v51, (float32x4_t)xmmword_25585AFE0, 3);
  v54 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v49, *(float *)&xmmword_25585AFF0), v50, *(float32x2_t *)&xmmword_25585AFF0, 1), v52, (float32x4_t)xmmword_25585AFF0, 2), v51, (float32x4_t)xmmword_25585AFF0, 3);
  v55 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v49, *(float *)&xmmword_25585B000), v50, *(float32x2_t *)&xmmword_25585B000, 1), v52, (float32x4_t)xmmword_25585B000, 2), v51, (float32x4_t)xmmword_25585B000, 3);
  v56 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v49, *(float *)&xmmword_25585B010), v50, *(float32x2_t *)&xmmword_25585B010, 1), v52, (float32x4_t)xmmword_25585B010, 2), v51, (float32x4_t)xmmword_25585B010, 3);
  v138.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v53, v45.f32[0]), v54, *(float32x2_t *)v45.f32, 1), v55, v45, 2), v56, v45, 3);
  v138.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v53, v46.f32[0]), v54, *(float32x2_t *)v46.f32, 1), v55, v46, 2), v56, v46, 3);
  v138.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v53, v47.f32[0]), v54, *(float32x2_t *)v47.f32, 1), v55, v47, 2), v56, v47, 3);
  v138.columns[3] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v53, v48.f32[0]), v54, *(float32x2_t *)v48.f32, 1), v55, v48, 2), v56, v48, 3);
  v91 = v138.columns[1];
  v92 = v138.columns[0];
  v89 = v138.columns[3];
  v90 = v138.columns[2];
  v139 = __invert_f4(v138);
  v98 = (float32x4_t)v139.columns[1];
  v99 = (float32x4_t)v139.columns[0];
  v96 = (float32x4_t)v139.columns[3];
  v97 = (float32x4_t)v139.columns[2];
  v57 = objc_msgSend(a1, sel_polygon);
  v58 = (uint64_t)objc_msgSend(v57, sel_count);

  if (v58 < 1)
    goto LABEL_36;
  v59 = objc_msgSend(a1, sel_polygon);
  v60 = (unint64_t)objc_msgSend(v59, sel_count);

  if ((v60 & 0x8000000000000000) == 0)
  {
    if (v60)
    {
      v61 = 0;
      v62 = (_QWORD *)MEMORY[0x24BEE4AF8];
      do
      {
        v63 = objc_msgSend(a1, sel_polygon);
        v64 = (char *)objc_msgSend(v63, v2[251]);

        v123 = *(float32x2_t *)&v64[8 * (_QWORD)v61];
        v111 = (float32x4_t)xmmword_25585B020;
        v114 = (float32x4_t)xmmword_25585B030;
        v117 = (float32x4_t)xmmword_25585B040;
        v120 = (float32x4_t)xmmword_25585B050;
        v100 = (float32x4_t)xmmword_25585AFE0;
        v102 = (float32x4_t)xmmword_25585AFF0;
        v105 = (float32x4_t)xmmword_25585B000;
        v108 = (float32x4_t)xmmword_25585B010;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v62 = sub_226486C2C(0, v62[2] + 1, 1, v62);
        v66 = v62[2];
        v65 = v62[3];
        if (v66 >= v65 >> 1)
          v62 = sub_226486C2C((_QWORD *)(v65 > 1), v66 + 1, 1, v62);
        v61 = (char *)v61 + 1;
        v67 = vaddq_f32(vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v111, v108.f32[0]), v114, *(float32x2_t *)v108.f32, 1), v117, v108, 2), v120, v108, 3), vmlaq_f32(vmlaq_lane_f32(vmulq_n_f32(vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v111, v100.f32[0]), v114, *(float32x2_t *)v100.f32, 1), v117, v100, 2), v120,
                        v100,
                        3),
                      v123.f32[0]),
                    vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v111, v102.f32[0]), v114, *(float32x2_t *)v102.f32, 1), v117, v102, 2), v120, v102, 3), v123, 1), (float32x4_t)0, vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v111, v105.f32[0]), v114, *(float32x2_t *)v105.f32, 1), v117, v105, 2), v120, v105,
                    3)));
        v62[2] = v66 + 1;
        v62[v66 + 4] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v99, v67.f32[0]), v98, *(float32x2_t *)v67.f32, 1), v97, v67, 2), v96, v67, 3).u64[0];
      }
      while ((void *)v60 != v61);
      goto LABEL_37;
    }
LABEL_36:
    v62 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_37:
    LODWORD(v68) = v94;
    *((float *)&v68 + 1) = v3 - v4;
    *((_QWORD *)&v68 + 1) = v93;
    v124 = v68;
    v127[0] = v88;
    v128 = v89;
    v129 = objc_msgSend(a1, sel_storyLevel);
    v130 = v92;
    v131 = v91;
    v132 = v90;
    v133 = v89;
    v134 = 0;
    v135 = v62;
    v136 = v124;
    v137 = 0;
    nullsub_1(v127);
    sub_2264F6484((uint64_t)v127, v95);
    return;
  }
  __break(1u);
}

uint64_t sub_2264F38FC(unint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  __n128 *v26;

  v4 = type metadata accessor for CapturedRoom.Surface(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v26 = (__n128 *)((char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v7);
  v9 = (__n128 *)((char *)&v25 - v8);
  if (!(a1 >> 62))
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v10)
      goto LABEL_3;
LABEL_27:
    swift_bridgeObjectRelease();
    v13 = MEMORY[0x24BEE4AF8];
    if (!(a2 >> 62))
      goto LABEL_14;
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  result = sub_22655D400();
  v10 = result;
  if (!result)
    goto LABEL_27;
LABEL_3:
  if (v10 < 1)
  {
    __break(1u);
    goto LABEL_31;
  }
  v12 = 0;
  v25 = a1 & 0xC000000000000001;
  v13 = MEMORY[0x24BEE4AF8];
  v14 = a1;
  do
  {
    if (v25)
      v15 = (id)MEMORY[0x2276999E4](v12, a1);
    else
      v15 = *(id *)(a1 + 8 * v12 + 32);
    v16 = v15;
    sub_2264F00F8(v15, v9);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_226486C18(0, *(_QWORD *)(v13 + 16) + 1, 1, v13);
    v18 = *(_QWORD *)(v13 + 16);
    v17 = *(_QWORD *)(v13 + 24);
    if (v18 >= v17 >> 1)
      v13 = sub_226486C18(v17 > 1, v18 + 1, 1, v13);
    ++v12;
    *(_QWORD *)(v13 + 16) = v18 + 1;
    sub_22643F6AC((uint64_t)v9, v13+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v18, type metadata accessor for CapturedRoom.Surface);

    a1 = v14;
  }
  while (v10 != v12);
  swift_bridgeObjectRelease();
  if (!(a2 >> 62))
  {
LABEL_14:
    v19 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v19)
      goto LABEL_15;
LABEL_29:
    swift_bridgeObjectRelease();
    return v13;
  }
LABEL_28:
  swift_bridgeObjectRetain();
  result = sub_22655D400();
  v19 = result;
  if (!result)
    goto LABEL_29;
LABEL_15:
  if (v19 >= 1)
  {
    v20 = 0;
    do
    {
      if ((a2 & 0xC000000000000001) != 0)
        v21 = (id)MEMORY[0x2276999E4](v20, a2);
      else
        v21 = *(id *)(a2 + 8 * v20 + 32);
      v22 = v21;
      sub_2264F0D64(v21, v26);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v13 = sub_226486C18(0, *(_QWORD *)(v13 + 16) + 1, 1, v13);
      v24 = *(_QWORD *)(v13 + 16);
      v23 = *(_QWORD *)(v13 + 24);
      if (v24 >= v23 >> 1)
        v13 = sub_226486C18(v23 > 1, v24 + 1, 1, v13);
      ++v20;
      *(_QWORD *)(v13 + 16) = v24 + 1;
      sub_22643F6AC((uint64_t)v26, v13+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v24, type metadata accessor for CapturedRoom.Surface);

    }
    while (v19 != v20);
    goto LABEL_29;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_2264F3C20(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558480D0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CapturedRoom.Object(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v22 = (uint64_t)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v19 - v9;
  if (!(a1 >> 62))
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v11)
      goto LABEL_3;
LABEL_18:
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRetain();
  result = sub_22655D400();
  v11 = result;
  if (!result)
    goto LABEL_18;
LABEL_3:
  if (v11 >= 1)
  {
    v13 = 0;
    v21 = a1 & 0xC000000000000001;
    v14 = MEMORY[0x24BEE4AF8];
    v19 = v5;
    v20 = a1;
    do
    {
      if (v21)
        v15 = (id)MEMORY[0x2276999E4](v13, a1);
      else
        v15 = *(id *)(a1 + 8 * v13 + 32);
      v16 = v15;
      sub_2264F1BA4((unint64_t)v15, (unint64_t)v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
      {

        sub_22643D7E4((uint64_t)v4, (uint64_t *)&unk_2558480D0);
      }
      else
      {
        sub_22643F6AC((uint64_t)v4, (uint64_t)v10, type metadata accessor for CapturedRoom.Object);
        sub_22643D704((uint64_t)v10, v22, type metadata accessor for CapturedRoom.Object);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v14 = sub_226488BB8(0, *(_QWORD *)(v14 + 16) + 1, 1, v14);
        v18 = *(_QWORD *)(v14 + 16);
        v17 = *(_QWORD *)(v14 + 24);
        if (v18 >= v17 >> 1)
          v14 = sub_226488BB8(v17 > 1, v18 + 1, 1, v14);
        *(_QWORD *)(v14 + 16) = v18 + 1;
        sub_22643F6AC(v22, v14+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v18, type metadata accessor for CapturedRoom.Object);

        sub_22643D748((uint64_t)v10, type metadata accessor for CapturedRoom.Object);
        v5 = v19;
        a1 = v20;
      }
      ++v13;
    }
    while (v11 != v13);
    swift_bridgeObjectRelease();
    return v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_2264F3EB4(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id i;
  void *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[160];
  _BYTE v20[160];
  _OWORD v21[9];
  char v22;

  if (!(a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_18:
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRetain();
  result = sub_22655D400();
  v2 = result;
  if (!result)
    goto LABEL_18;
LABEL_3:
  v4 = v2 - 1;
  if (v2 >= 1)
  {
    v5 = 0;
    v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if ((a1 & 0xC000000000000001) == 0)
      goto LABEL_6;
LABEL_5:
    for (i = (id)MEMORY[0x2276999E4](v5, a1); ; i = *(id *)(a1 + 8 * v5 + 32))
    {
      v8 = i;
      sub_2264F3060(i, (uint64_t)v19);
      sub_2264F6484((uint64_t)v19, (uint64_t)v20);
      sub_2264F6484((uint64_t)v20, (uint64_t)v21);
      if (sub_2264F64CC((uint64_t)v21) != 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v6 = sub_226488410(0, v6[2] + 1, 1, v6);
        v10 = v6[2];
        v9 = v6[3];
        if (v10 >= v9 >> 1)
          v6 = sub_226488410((_QWORD *)(v9 > 1), v10 + 1, 1, v6);
        v6[2] = v10 + 1;
        v11 = &v6[20 * v10];
        v12 = v21[1];
        *((_OWORD *)v11 + 2) = v21[0];
        *((_OWORD *)v11 + 3) = v12;
        v13 = v21[2];
        v14 = v21[3];
        v15 = v21[5];
        *((_OWORD *)v11 + 6) = v21[4];
        *((_OWORD *)v11 + 7) = v15;
        *((_OWORD *)v11 + 4) = v13;
        *((_OWORD *)v11 + 5) = v14;
        v16 = v21[6];
        v17 = v21[7];
        v18 = v21[8];
        *((_BYTE *)v11 + 176) = v22;
        *((_OWORD *)v11 + 9) = v17;
        *((_OWORD *)v11 + 10) = v18;
        *((_OWORD *)v11 + 8) = v16;
      }

      if (v4 == v5)
        break;
      ++v5;
      if ((a1 & 0xC000000000000001) != 0)
        goto LABEL_5;
LABEL_6:
      ;
    }
    swift_bridgeObjectRelease();
    return (uint64_t)v6;
  }
  __break(1u);
  return result;
}

uint64_t sub_2264F4078@<X0>(void *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, char a5@<W4>, uint64_t *a6@<X8>, __int128 a7@<Q0>, __int128 a8@<Q1>, __int128 a9@<Q2>, __int128 a10@<Q3>)
{
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  id v23;
  unint64_t v24;
  id v25;
  unint64_t v26;
  id v27;
  unint64_t v28;
  id v29;
  unint64_t v30;
  id v31;
  unint64_t v32;
  id v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  unint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  int *v46;
  uint64_t v47;
  uint64_t result;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  unint64_t v57;

  if (qword_25583F970 != -1)
  {
    v52 = a9;
    v54 = a10;
    v49 = a7;
    v50 = a8;
    swift_once();
    a7 = v49;
    a8 = v50;
    a9 = v52;
    a10 = v54;
  }
  xmmword_25585B020 = a7;
  xmmword_25585B030 = a8;
  xmmword_25585B040 = a9;
  xmmword_25585B050 = a10;
  byte_25585B078 = a5 & 1;
  if (qword_25583F990 != -1)
    swift_once();
  v15 = (void *)qword_25585B080;
  qword_25585B080 = (uint64_t)a4;
  v16 = a4;

  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v17 = sub_22655D400();
    swift_bridgeObjectRelease();
    if (v17 >= 1)
      goto LABEL_7;
LABEL_9:
    v18 = objc_msgSend(a1, sel_objects, v49);
    sub_22643F548(0, (unint64_t *)&unk_255849AB0);
    a2 = sub_22655CECC();

    goto LABEL_10;
  }
  if (*(uint64_t *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
    goto LABEL_9;
LABEL_7:
  swift_bridgeObjectRetain();
LABEL_10:
  v19 = objc_msgSend(a1, sel_doors, v49);
  sub_22643F548(0, (unint64_t *)&qword_2558480B0);
  v20 = sub_22655CECC();

  v57 = v20;
  v21 = objc_msgSend(a1, sel_opendoors);
  v22 = sub_22655CECC();

  sub_22646B848(v22);
  v23 = objc_msgSend(a1, sel_walls);
  v24 = sub_22655CECC();

  v25 = objc_msgSend(a1, sel_curvedWalls);
  sub_22643F548(0, &qword_2558480B8);
  v26 = sub_22655CECC();

  v55 = sub_2264F38FC(v24, v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v27 = objc_msgSend(a1, sel_curvedDoors);
  v28 = sub_22655CECC();

  v53 = sub_2264F38FC(v57, v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29 = objc_msgSend(a1, sel_windows);
  v30 = sub_22655CECC();

  v31 = objc_msgSend(a1, sel_curvedWindows);
  v32 = sub_22655CECC();

  v51 = sub_2264F38FC(v30, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v33 = objc_msgSend(a1, sel_openings);
  v34 = sub_22655CECC();

  v35 = MEMORY[0x24BEE4AF8];
  v36 = sub_2264F38FC(v34, MEMORY[0x24BEE4AF8]);
  swift_bridgeObjectRelease();
  v37 = objc_msgSend(a1, sel_floors);
  v38 = sub_22655CECC();

  v39 = sub_2264F38FC(v38, v35);
  swift_bridgeObjectRelease();
  v40 = sub_2264F3C20(a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v41 = objc_msgSend(a1, sel_roomTypes);
  sub_22643F548(0, &qword_2558480C0);
  v42 = sub_22655CECC();

  v43 = sub_2264F3EB4(v42);
  swift_bridgeObjectRelease();
  v44 = a1;
  v45 = objc_msgSend(v44, sel_storyLevel);
  v46 = (int *)type metadata accessor for CapturedRoom(0);
  v47 = v46[12];
  *(uint64_t *)((char *)a6 + v46[13]) = 2;
  *a6 = v55;
  a6[1] = v53;
  a6[2] = v51;
  a6[3] = v36;
  a6[4] = v39;
  a6[5] = v40;
  *(uint64_t *)((char *)a6 + v46[14]) = a3;
  *(uint64_t *)((char *)a6 + v46[15]) = (uint64_t)v44;
  result = sub_22655C134();
  *(uint64_t *)((char *)a6 + v46[11]) = v43;
  *(uint64_t *)((char *)a6 + v47) = (uint64_t)v45;
  return result;
}

uint64_t sub_2264F4564@<X0>(void *a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  id v22;
  unint64_t v23;
  id v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  unint64_t v35;
  id v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  unint64_t v44;
  uint64_t v45;
  id v46;
  unint64_t v47;
  uint64_t v48;
  id v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t *v53;
  id v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  void *v58;
  unint64_t v59;

  v58 = a3;
  v7 = type metadata accessor for CapturedRoom(0);
  v57 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v53 - v11);
  if (!(a2 >> 62))
  {
    v13 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    v54 = a1;
    if (v13)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease();
    v16 = MEMORY[0x24BEE4AF8];
LABEL_18:
    v21 = v54;
    v22 = objc_msgSend(v54, sel_walls, v53);
    sub_22643F548(0, (unint64_t *)&qword_2558480B0);
    v23 = sub_22655CECC();

    v24 = objc_msgSend(v21, sel_curvedWalls);
    sub_22643F548(0, &qword_2558480B8);
    v25 = sub_22655CECC();

    v58 = (void *)sub_2264F38FC(v23, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v26 = objc_msgSend(v21, sel_doors);
    v27 = sub_22655CECC();

    v28 = objc_msgSend(v21, sel_opendoors);
    v29 = sub_22655CECC();

    v59 = v27;
    sub_22646B848(v29);
    v30 = v59;
    v31 = objc_msgSend(v21, sel_curvedDoors);
    v32 = sub_22655CECC();

    v33 = sub_2264F38FC(v30, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v34 = objc_msgSend(v21, sel_windows);
    v35 = sub_22655CECC();

    v36 = objc_msgSend(v21, sel_curvedWindows);
    v37 = sub_22655CECC();

    v38 = sub_2264F38FC(v35, v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v39 = objc_msgSend(v21, sel_openings);
    v40 = sub_22655CECC();

    v41 = MEMORY[0x24BEE4AF8];
    v42 = sub_2264F38FC(v40, MEMORY[0x24BEE4AF8]);
    swift_bridgeObjectRelease();
    v43 = objc_msgSend(v21, sel_objects);
    sub_22643F548(0, (unint64_t *)&unk_255849AB0);
    v44 = sub_22655CECC();

    v45 = sub_2264F3C20(v44);
    swift_bridgeObjectRelease();
    v46 = objc_msgSend(v21, sel_floors);
    v47 = sub_22655CECC();

    v48 = sub_2264F38FC(v47, v41);
    swift_bridgeObjectRelease();
    v49 = objc_msgSend(v21, sel_roomTypes);
    sub_22643F548(0, &qword_2558480C0);
    v50 = sub_22655CECC();

    v51 = sub_2264F3EB4(v50);
    swift_bridgeObjectRelease();
    *(unint64_t *)((char *)a4 + *(int *)(type metadata accessor for CapturedStructure(0) + 52)) = 2;
    v52 = (unint64_t)v58;
    *a4 = v16;
    a4[1] = v52;
    a4[2] = v33;
    a4[3] = v38;
    a4[4] = v42;
    a4[5] = v45;
    result = sub_22655C134();
    a4[6] = v48;
    a4[7] = v51;
    return result;
  }
  swift_bridgeObjectRetain();
  result = sub_22655D400();
  v13 = result;
  v54 = a1;
  if (!result)
    goto LABEL_17;
LABEL_3:
  if (v13 >= 1)
  {
    v53 = a4;
    v15 = 0;
    v55 = a2 & 0xC000000000000001;
    v16 = MEMORY[0x24BEE4AF8];
    v56 = a2;
    do
    {
      if (v55)
        v17 = (id)MEMORY[0x2276999E4](v15, a2);
      else
        v17 = *(id *)(a2 + 8 * v15 + 32);
      v18 = v17;
      if (qword_25583F998 != -1)
        swift_once();
      sub_2264F4078(v18, MEMORY[0x24BEE4AF8], MEMORY[0x24BEE4AF8], v58, 0, v12, xmmword_25585B130, xmmword_25585B140, xmmword_25585B150, xmmword_25585B160);
      sub_22643D704((uint64_t)v12, (uint64_t)v9, type metadata accessor for CapturedRoom);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v16 = sub_226488BCC(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
      v20 = *(_QWORD *)(v16 + 16);
      v19 = *(_QWORD *)(v16 + 24);
      if (v20 >= v19 >> 1)
        v16 = sub_226488BCC(v19 > 1, v20 + 1, 1, v16);
      ++v15;
      *(_QWORD *)(v16 + 16) = v20 + 1;
      sub_22643F6AC((uint64_t)v9, v16+ ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80))+ *(_QWORD *)(v57 + 72) * v20, type metadata accessor for CapturedRoom);

      sub_22643D748((uint64_t)v12, type metadata accessor for CapturedRoom);
      a2 = v56;
    }
    while (v13 != v15);
    swift_bridgeObjectRelease();
    a4 = v53;
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_2264F4B48()
{
  uint64_t result;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;

  result = ARVisionToRenderingCoordinateTransform();
  xmmword_25585AFE0 = v1;
  xmmword_25585AFF0 = v2;
  xmmword_25585B000 = v3;
  xmmword_25585B010 = v4;
  return result;
}

__n128 sub_2264F4B6C()
{
  __n128 result;
  __int128 v1;
  __int128 v2;
  __int128 v3;

  result = *(__n128 *)MEMORY[0x24BDAEE00];
  v1 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 16);
  v2 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 32);
  v3 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 48);
  xmmword_25585B020 = *MEMORY[0x24BDAEE00];
  xmmword_25585B030 = v1;
  xmmword_25585B040 = v2;
  xmmword_25585B050 = v3;
  return result;
}

id sub_2264F4B90()
{
  qword_25585B060 = *MEMORY[0x24BE809A0];
  return (id)qword_25585B060;
}

id sub_2264F4BA8()
{
  qword_25585B068 = *MEMORY[0x24BE80998];
  return (id)qword_25585B068;
}

id sub_2264F4BC0()
{
  qword_25585B070 = *MEMORY[0x24BE809A0];
  return (id)qword_25585B070;
}

id sub_2264F4BD8()
{
  if (qword_25583F978 != -1)
    swift_once();
  qword_25585B080 = qword_25585B060;
  return (id)qword_25585B060;
}

uint64_t type metadata accessor for RSCoreAdaptor()
{
  return objc_opt_self();
}

unint64_t sub_2264F4C40()
{
  unint64_t result;

  result = qword_255847FF0;
  if (!qword_255847FF0)
  {
    result = MEMORY[0x22769A794](&unk_22656785C, &type metadata for RoomScanKeyframeWrapper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255847FF0);
  }
  return result;
}

unint64_t sub_2264F4C84()
{
  unint64_t result;

  result = qword_255848010;
  if (!qword_255848010)
  {
    result = MEMORY[0x22769A794](&unk_22656780C, &type metadata for RSCamera.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255848010);
  }
  return result;
}

unint64_t sub_2264F4CC8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255848020;
  if (!qword_255848020)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255841B50);
    v2 = MEMORY[0x24BEE1520];
    result = MEMORY[0x22769A794](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255848020);
  }
  return result;
}

unint64_t sub_2264F4D24()
{
  unint64_t result;

  result = qword_255848038;
  if (!qword_255848038)
  {
    result = MEMORY[0x22769A794](&unk_2265677BC, &type metadata for RSRawPointCloud.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255848038);
  }
  return result;
}

unint64_t sub_2264F4D68()
{
  unint64_t result;

  result = qword_255848068;
  if (!qword_255848068)
  {
    result = MEMORY[0x22769A794](&unk_22656776C, &type metadata for RSFrame.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255848068);
  }
  return result;
}

unint64_t sub_2264F4DAC()
{
  unint64_t result;

  result = qword_255848078;
  if (!qword_255848078)
  {
    result = MEMORY[0x22769A794](&unk_2265666C0, &type metadata for CVPixelBufferCodableBox);
    atomic_store(result, (unint64_t *)&qword_255848078);
  }
  return result;
}

uint64_t sub_2264F4DF0(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_2264F4E00(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_2264F4E34(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_2264F4E54(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_2264F4EC4(v6, v7, a3);
  v8 = *a1 + 8;
  sub_22655D154();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_2264F4EC4(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_2264F4F94(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_2264F6538((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_2264F6538((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_2264F4F94(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_22655D160();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_2264F514C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_22655D358();
  if (!v8)
  {
    sub_22655D3DC();
    __break(1u);
LABEL_17:
    result = sub_22655D43C();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_2264F514C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_2264F51E0(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_2264F53B8(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_2264F53B8(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_2264F51E0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_2264F5354(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_22655D2F8();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_22655D3DC();
      __break(1u);
LABEL_10:
      v2 = sub_22655CE3C();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_22655D43C();
    __break(1u);
LABEL_14:
    result = sub_22655D3DC();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_2264F5354(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558480F0);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_2264F53B8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558480F0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

_BYTE **sub_2264F5504(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

unint64_t sub_2264F5514(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  BOOL v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t *v36;
  int v37;
  BOOL v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v1 = result;
  v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_22655D400();
    result = swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_255846C00);
      result = sub_22655D2E0();
      v3 = result;
      if (!v2)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x24BEE4B08];
  if (!v2)
  {
LABEL_4:
    v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
      return v3;
    goto LABEL_9;
  }
LABEL_8:
  swift_bridgeObjectRetain();
  v4 = sub_22655D400();
  result = swift_bridgeObjectRelease();
  if (!v4)
    return v3;
LABEL_9:
  v6 = v3 + 56;
  v42 = v4;
  if ((v1 & 0xC000000000000001) == 0)
  {
    v22 = 0;
    v39 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v23 = &OBJC_IVAR____TtC8RoomPlan13HullPointUUID_uuid;
    while (1)
    {
      if (v22 == v39)
        goto LABEL_40;
      v26 = *(_QWORD *)(v1 + 32 + 8 * v22);
      sub_22655D640();
      v44 = v26;
      swift_retain();
      sub_22655C11C();
      result = sub_22655D670();
      v27 = -1 << *(_BYTE *)(v3 + 32);
      v28 = result & ~v27;
      v29 = v28 >> 6;
      v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
      v31 = 1 << v28;
      if (((1 << v28) & v30) == 0)
      {
LABEL_25:
        *(_QWORD *)(v6 + 8 * v29) = v31 | v30;
        *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v28) = v44;
        v24 = *(_QWORD *)(v3 + 16);
        v8 = __OFADD__(v24, 1);
        v25 = v24 + 1;
        if (!v8)
        {
          *(_QWORD *)(v3 + 16) = v25;
          goto LABEL_27;
        }
        goto LABEL_41;
      }
      v41 = v22;
      v32 = ~v27;
      v33 = OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type;
      while (1)
      {
        v34 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v28);
        swift_retain();
        if ((sub_22655C104() & 1) != 0)
          break;
        result = swift_release();
LABEL_32:
        v28 = (v28 + 1) & v32;
        v29 = v28 >> 6;
        v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
        v31 = 1 << v28;
        if ((v30 & (1 << v28)) == 0)
        {
          v22 = v41;
          v4 = v42;
          goto LABEL_25;
        }
      }
      v35 = *(unsigned __int8 *)(v34 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
      v36 = v23;
      v37 = *(unsigned __int8 *)(v44 + v33);
      result = swift_release();
      v38 = v35 == v37;
      v23 = v36;
      if (!v38)
        goto LABEL_32;
      result = swift_release();
      v22 = v41;
      v4 = v42;
LABEL_27:
      if (++v22 == v4)
        return v3;
    }
  }
  v7 = 0;
  v40 = v1;
  while (1)
  {
    result = MEMORY[0x2276999E4](v7, v1);
    v8 = __OFADD__(v7++, 1);
    if (v8)
      break;
    v9 = result;
    sub_22655D640();
    sub_22655C11C();
    result = sub_22655D670();
    v10 = -1 << *(_BYTE *)(v3 + 32);
    v11 = result & ~v10;
    v12 = v11 >> 6;
    v13 = *(_QWORD *)(v6 + 8 * (v11 >> 6));
    v14 = 1 << v11;
    if (((1 << v11) & v13) != 0)
    {
      v43 = v7;
      v15 = ~v10;
      v16 = OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type;
      do
      {
        v17 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11);
        swift_retain();
        if ((sub_22655C104() & 1) != 0)
        {
          v18 = *(unsigned __int8 *)(v17 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
          v19 = *(unsigned __int8 *)(v9 + v16);
          result = swift_release();
          if (v18 == v19)
          {
            swift_unknownObjectRelease();
            v1 = v40;
            v4 = v42;
            v7 = v43;
            goto LABEL_11;
          }
        }
        else
        {
          result = swift_release();
        }
        v11 = (v11 + 1) & v15;
        v12 = v11 >> 6;
        v13 = *(_QWORD *)(v6 + 8 * (v11 >> 6));
        v14 = 1 << v11;
      }
      while ((v13 & (1 << v11)) != 0);
      v1 = v40;
      v4 = v42;
      v7 = v43;
    }
    *(_QWORD *)(v6 + 8 * v12) = v14 | v13;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v9;
    v20 = *(_QWORD *)(v3 + 16);
    v8 = __OFADD__(v20, 1);
    v21 = v20 + 1;
    if (v8)
      goto LABEL_39;
    *(_QWORD *)(v3 + 16) = v21;
LABEL_11:
    if (v7 == v4)
      return v3;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2264F58E8()
{
  unint64_t v0;

  v0 = sub_22655D454();
  swift_bridgeObjectRelease();
  if (v0 >= 0xD)
    return 13;
  else
    return v0;
}

uint64_t sub_2264F5930()
{
  unint64_t v0;

  v0 = sub_22655D454();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

id sub_2264F5978(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  objc_class *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  objc_super v29;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t)&v1[OBJC_IVAR____TtC8RoomPlan16RoomScanKeyframe_identifier];
  v7 = sub_22655C140();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v8(v6, 1, 1, v7);
  v9 = OBJC_IVAR____TtC8RoomPlan16RoomScanKeyframe_points;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan16RoomScanKeyframe_points] = 0;
  v10 = OBJC_IVAR____TtC8RoomPlan16RoomScanKeyframe_pointsToWorld;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan16RoomScanKeyframe_pointsToWorld] = 0;
  v26 = OBJC_IVAR____TtC8RoomPlan16RoomScanKeyframe_semanticLabels;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan16RoomScanKeyframe_semanticLabels] = 0;
  v27 = OBJC_IVAR____TtC8RoomPlan16RoomScanKeyframe_semanticVotes;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan16RoomScanKeyframe_semanticVotes] = 0;
  v28 = OBJC_IVAR____TtC8RoomPlan16RoomScanKeyframe_colors;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan16RoomScanKeyframe_colors] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan16RoomScanKeyframe_coreKeyframe] = a1;
  v11 = v1;
  v12 = a1;
  v13 = objc_msgSend(v12, sel_identifier);
  sub_22655C110();

  v8((uint64_t)v5, 0, 1, v7);
  swift_beginAccess();
  sub_2264F64F0((uint64_t)v5, v6);
  swift_endAccess();
  objc_msgSend(v12, sel_cameraPose);
  v14 = &v11[OBJC_IVAR____TtC8RoomPlan16RoomScanKeyframe_cameraPose];
  *(_OWORD *)v14 = v15;
  *((_OWORD *)v14 + 1) = v16;
  *((_OWORD *)v14 + 2) = v17;
  *((_OWORD *)v14 + 3) = v18;
  v19 = objc_msgSend(v12, sel_count);
  *(_QWORD *)&v11[OBJC_IVAR____TtC8RoomPlan16RoomScanKeyframe_count] = v19;
  *(_QWORD *)&v1[v9] = objc_msgSend(v12, sel_points);
  *(_QWORD *)&v1[v10] = objc_msgSend(v12, sel_pointsToWorld);
  v20 = objc_msgSend(v12, sel_semanticLabels);
  *(_QWORD *)&v1[v26] = v20;
  v21 = objc_msgSend(v12, sel_semanticVotes);
  *(_QWORD *)&v1[v27] = v21;
  v22 = objc_msgSend(v12, sel_colors);
  *(_QWORD *)&v1[v28] = v22;
  objc_msgSend(v12, sel_timestamp);
  *(_QWORD *)&v11[OBJC_IVAR____TtC8RoomPlan16RoomScanKeyframe_timestamp] = v23;

  v24 = (objc_class *)type metadata accessor for RoomScanKeyframe(0);
  v29.receiver = v11;
  v29.super_class = v24;
  return objc_msgSendSuper2(&v29, sel_init);
}

id sub_2264F5BD8(void *a1, void *a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  objc_class *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  objc_super v39;

  v38 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t)&v2[OBJC_IVAR____TtC8RoomPlan17ObjectKitKeyframe_identifier];
  v8 = sub_22655C140();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v10 = 1;
  v9(v7, 1, 1, v8);
  v33 = OBJC_IVAR____TtC8RoomPlan17ObjectKitKeyframe_points;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8RoomPlan17ObjectKitKeyframe_points] = 0;
  v34 = OBJC_IVAR____TtC8RoomPlan17ObjectKitKeyframe_pointsToWorld;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8RoomPlan17ObjectKitKeyframe_pointsToWorld] = 0;
  v35 = OBJC_IVAR____TtC8RoomPlan17ObjectKitKeyframe_semanticLabels;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8RoomPlan17ObjectKitKeyframe_semanticLabels] = 0;
  v36 = OBJC_IVAR____TtC8RoomPlan17ObjectKitKeyframe_semanticVotes;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8RoomPlan17ObjectKitKeyframe_semanticVotes] = 0;
  v37 = OBJC_IVAR____TtC8RoomPlan17ObjectKitKeyframe_colors;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8RoomPlan17ObjectKitKeyframe_colors] = 0;
  v11 = OBJC_IVAR____TtC8RoomPlan17ObjectKitKeyframe_coreKeyframe;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8RoomPlan17ObjectKitKeyframe_coreKeyframe] = 0;
  v12 = v2;
  v13 = objc_msgSend(a1, sel_identifier);
  if (v13)
  {
    v14 = v13;
    sub_22655C110();

    v10 = 0;
  }
  v9((uint64_t)v6, v10, 1, v8);
  swift_beginAccess();
  sub_2264F64F0((uint64_t)v6, v7);
  swift_endAccess();
  objc_msgSend(a1, sel_cameraPose);
  v15 = &v12[OBJC_IVAR____TtC8RoomPlan17ObjectKitKeyframe_cameraPose];
  *(_OWORD *)v15 = v16;
  *((_OWORD *)v15 + 1) = v17;
  *((_OWORD *)v15 + 2) = v18;
  *((_OWORD *)v15 + 3) = v19;
  v20 = objc_msgSend(a1, sel_count);
  *(_QWORD *)&v12[OBJC_IVAR____TtC8RoomPlan17ObjectKitKeyframe_count] = v20;
  v21 = objc_msgSend(a1, sel_points);
  *(_QWORD *)&v2[v33] = v21;
  v22 = objc_msgSend(a1, sel_pointsToWorld);
  *(_QWORD *)&v2[v34] = v22;
  v23 = objc_msgSend(a1, sel_semanticLabels);
  *(_QWORD *)&v2[v35] = v23;
  v24 = objc_msgSend(a1, sel_semanticVotes);
  *(_QWORD *)&v2[v36] = v24;
  v25 = objc_msgSend(a1, sel_colors);
  *(_QWORD *)&v2[v37] = v25;
  objc_msgSend(a1, sel_timestamp);
  *(_QWORD *)&v12[OBJC_IVAR____TtC8RoomPlan17ObjectKitKeyframe_timestamp] = v26;
  v27 = *(void **)&v2[v11];
  v28 = v38;
  *(_QWORD *)&v2[v11] = v38;
  v29 = v28;

  v30 = (objc_class *)type metadata accessor for ObjectKitKeyframe(0);
  v39.receiver = v12;
  v39.super_class = v30;
  return objc_msgSendSuper2(&v39, sel_init);
}

uint64_t sub_2264F5E68(void *a1)
{
  uint64_t v1;
  float32x4_t v3;
  float32x4_t v4;
  float32x4_t v5;
  float32x4_t v6;
  float32x4_t v7;
  float32x4_t v8;
  float32x4_t v9;
  float32x4_t v10;
  float32x4_t v11;
  float32x4_t v17;
  float32x4_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  objc_msgSend(a1, sel_transform);
  v4 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_2265600A0, v3.f32[0]), (float32x4_t)xmmword_226560080, *(float32x2_t *)v3.f32, 1), (float32x4_t)xmmword_2265600B0, v3, 2), (float32x4_t)xmmword_22655FA60, v3, 3);
  v6 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_2265600A0, v5.f32[0]), (float32x4_t)xmmword_226560080, *(float32x2_t *)v5.f32, 1), (float32x4_t)xmmword_2265600B0, v5, 2), (float32x4_t)xmmword_22655FA60, v5, 3);
  v8 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_2265600A0, v7.f32[0]), (float32x4_t)xmmword_226560080, *(float32x2_t *)v7.f32, 1), (float32x4_t)xmmword_2265600B0, v7, 2), (float32x4_t)xmmword_22655FA60, v7, 3);
  v10 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_2265600A0, v9.f32[0]), (float32x4_t)xmmword_226560080, *(float32x2_t *)v9.f32, 1), (float32x4_t)xmmword_2265600B0, v9, 2), (float32x4_t)xmmword_22655FA60, v9, 3);
  v11 = vmulq_f32(v4, (float32x4_t)0);
  __asm { FMOV            V6.4S, #-1.0 }
  v17 = vmlaq_f32(vmlaq_f32(vmlaq_f32(v11, _Q6, v6), (float32x4_t)0, v8), (float32x4_t)0, v10);
  v18 = vmlaq_f32(v11, (float32x4_t)0, v6);
  *(float32x4_t *)(v1 + 80) = vmlaq_f32(vmlaq_f32(vmlaq_f32(v4, (float32x4_t)0, v6), (float32x4_t)0, v8), (float32x4_t)0, v10);
  *(float32x4_t *)(v1 + 96) = v17;
  *(float32x4_t *)(v1 + 112) = vmlaq_f32(vmlaq_f32(v18, _Q6, v8), (float32x4_t)0, v10);
  *(float32x4_t *)(v1 + 128) = vaddq_f32(v10, vmlaq_f32(v18, (float32x4_t)0, v8));
  objc_msgSend(a1, sel_intrinsics);
  *(_OWORD *)(v1 + 144) = v19;
  *(_OWORD *)(v1 + 160) = v20;
  *(_OWORD *)(v1 + 176) = v21;
  objc_msgSend(a1, sel_imageResolution);
  *(_QWORD *)(v1 + 192) = v22;
  *(_QWORD *)(v1 + 200) = v23;
  objc_msgSend(a1, sel_transform);
  *(_OWORD *)(v1 + 16) = v24;
  *(_OWORD *)(v1 + 32) = v25;
  *(_OWORD *)(v1 + 48) = v26;
  *(_OWORD *)(v1 + 64) = v27;
  return v1;
}

void sub_2264F5F84(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  id v39;
  id v40;
  void *v41;

  v2 = v1;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_QWORD *)(v1 + 72) = 0;
  *(_QWORD *)(v1 + 160) = 0;
  *(_QWORD *)(v1 + 168) = 0;
  v4 = objc_msgSend(a1, sel_rawFeaturePoints);
  type metadata accessor for RSRawPointCloud();
  v5 = (_QWORD *)swift_allocObject();
  v5[3] = 0;
  if (v4)
    v6 = sub_22655CFD4();
  else
    v6 = MEMORY[0x24BEE4AF8];
  v5[4] = v6;
  v5[2] = *(_QWORD *)(v6 + 16);
  v5[3] = v6 + 32;

  *(_QWORD *)(v2 + 16) = v5;
  swift_unknownObjectRelease();
  objc_msgSend(a1, sel_timestamp);
  *(_QWORD *)(v2 + 32) = v7;
  v8 = objc_msgSend(a1, sel_camera);
  type metadata accessor for RSCamera();
  v9 = swift_allocObject();
  sub_2264ED560(v8);
  *(_QWORD *)(v2 + 24) = v9;
  swift_unknownObjectRelease();
  v10 = objc_msgSend(a1, sel_capturedImage);
  v11 = *(void **)(v2 + 40);
  *(_QWORD *)(v2 + 40) = v10;

  v12 = objc_msgSend(a1, sel_rawSceneUnderstandingData);
  v13 = objc_msgSend(v12, sel_depthBuffer);

  v14 = *(void **)(v2 + 48);
  *(_QWORD *)(v2 + 48) = v13;

  v15 = objc_msgSend(a1, sel_rawSceneUnderstandingData);
  v16 = objc_msgSend(v15, sel_depthConfidenceBuffer);

  v17 = *(void **)(v2 + 56);
  *(_QWORD *)(v2 + 56) = v16;

  v18 = objc_msgSend(a1, sel_rawSceneUnderstandingData);
  v19 = objc_msgSend(v18, sel_semanticSegmentationBufferSampledForDepth);

  v20 = *(void **)(v2 + 64);
  *(_QWORD *)(v2 + 64) = v19;

  v21 = objc_msgSend(a1, sel_rawSceneUnderstandingData);
  v22 = objc_msgSend(v21, sel_semanticSegmentationConfidenceBufferSampledForDepth);

  v23 = *(void **)(v2 + 72);
  *(_QWORD *)(v2 + 72) = v22;

  v24 = objc_msgSend(a1, sel_worldTrackingState);
  if (v24)
  {
    v25 = v24;
    v26 = objc_msgSend(v24, sel_vioTrackingState);

  }
  else
  {
    v26 = 0;
  }
  *(_QWORD *)(v2 + 80) = v26;
  objc_msgSend(a1, sel_referenceOriginTransform);
  *(_OWORD *)(v2 + 96) = v27;
  *(_OWORD *)(v2 + 112) = v28;
  *(_OWORD *)(v2 + 128) = v29;
  *(_OWORD *)(v2 + 144) = v30;
  v31 = objc_msgSend(a1, sel_rawSceneUnderstandingData);

  if (!v31)
    goto LABEL_13;
  v32 = objc_msgSend(a1, sel_rawSceneUnderstandingData);
  if (!v32)
  {
    __break(1u);
    goto LABEL_16;
  }
  v33 = v32;
  v34 = objc_msgSend(v32, sel_wideCamera);

  if (!v34)
  {
LABEL_13:
    v38 = 0;
    goto LABEL_14;
  }
  v35 = objc_msgSend(a1, sel_rawSceneUnderstandingData);
  if (!v35)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v36 = v35;
  v37 = objc_msgSend(v35, sel_wideCamera);

  if (v37)
  {
    v38 = swift_allocObject();
    sub_2264ED560(v37);
LABEL_14:
    *(_QWORD *)(v2 + 160) = v38;
    swift_unknownObjectRelease();
    v39 = objc_msgSend(a1, sel_rawSceneUnderstandingData);
    v40 = objc_msgSend(v39, sel_capturedImage);

    v41 = *(void **)(v2 + 168);
    *(_QWORD *)(v2 + 168) = v40;

    *(_QWORD *)(v2 + 176) = objc_msgSend(a1, sel_deviceOrientation);
    return;
  }
LABEL_17:
  __break(1u);
}

uint64_t sub_2264F6344(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558480A0);
    v3 = sub_22655D2E0();
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(unsigned __int8 *)(v6 + v4);
      sub_22655D640();
      sub_22655D64C();
      result = sub_22655D670();
      v9 = -1 << *(_BYTE *)(v3 + 32);
      v10 = result & ~v9;
      v11 = v10 >> 6;
      v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
      v13 = 1 << v10;
      v14 = *(_QWORD *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(unsigned __int8 *)(v14 + v10) == v7)
          goto LABEL_3;
        v15 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v15;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            break;
          if (*(unsigned __int8 *)(v14 + v10) == v7)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
      *(_BYTE *)(v14 + v10) = v7;
      v16 = *(_QWORD *)(v3 + 16);
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_2264F6484(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558480C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2264F64CC(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 120);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

uint64_t sub_2264F64F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2264F6538(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2264F6574(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_255848040);
    v10 = sub_2264F65F0(a2, a3);
    result = MEMORY[0x22769A794](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2264F65F0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255849BA0);
    result = MEMORY[0x22769A794](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RSFrame.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for RSFrame.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_2264F6710 + 4 * byte_226567068[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_2264F6744 + 4 * byte_226567063[v4]))();
}

uint64_t sub_2264F6744(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264F674C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2264F6754);
  return result;
}

uint64_t sub_2264F6760(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2264F6768);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_2264F676C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264F6774(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RSFrame.CodingKeys()
{
  return &type metadata for RSFrame.CodingKeys;
}

ValueMetadata *type metadata accessor for RSRawPointCloud.CodingKeys()
{
  return &type metadata for RSRawPointCloud.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for RSCamera.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2264F67F0 + 4 * byte_226567072[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2264F6824 + 4 * byte_22656706D[v4]))();
}

uint64_t sub_2264F6824(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264F682C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2264F6834);
  return result;
}

uint64_t sub_2264F6840(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2264F6848);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2264F684C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264F6854(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RSCamera.CodingKeys()
{
  return &type metadata for RSCamera.CodingKeys;
}

uint64_t _s8RoomPlan15RSRawPointCloudC10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2264F68B0 + 4 * byte_226567077[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2264F68D0 + 4 * byte_22656707C[v4]))();
}

_BYTE *sub_2264F68B0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2264F68D0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2264F68D8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2264F68E0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2264F68E8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2264F68F0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RoomScanKeyframeWrapper.CodingKeys()
{
  return &type metadata for RoomScanKeyframeWrapper.CodingKeys;
}

unint64_t sub_2264F6910()
{
  unint64_t result;

  result = qword_2558481A8;
  if (!qword_2558481A8)
  {
    result = MEMORY[0x22769A794](&unk_226567474, &type metadata for RoomScanKeyframeWrapper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558481A8);
  }
  return result;
}

unint64_t sub_2264F6958()
{
  unint64_t result;

  result = qword_2558481B0;
  if (!qword_2558481B0)
  {
    result = MEMORY[0x22769A794](&unk_226567564, &type metadata for RSCamera.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558481B0);
  }
  return result;
}

unint64_t sub_2264F69A0()
{
  unint64_t result;

  result = qword_2558481B8;
  if (!qword_2558481B8)
  {
    result = MEMORY[0x22769A794](&unk_226567654, &type metadata for RSRawPointCloud.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558481B8);
  }
  return result;
}

unint64_t sub_2264F69E8()
{
  unint64_t result;

  result = qword_2558481C0;
  if (!qword_2558481C0)
  {
    result = MEMORY[0x22769A794](&unk_226567744, &type metadata for RSFrame.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558481C0);
  }
  return result;
}

unint64_t sub_2264F6A30()
{
  unint64_t result;

  result = qword_2558481C8;
  if (!qword_2558481C8)
  {
    result = MEMORY[0x22769A794](&unk_22656767C, &type metadata for RSFrame.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558481C8);
  }
  return result;
}

unint64_t sub_2264F6A78()
{
  unint64_t result;

  result = qword_2558481D0;
  if (!qword_2558481D0)
  {
    result = MEMORY[0x22769A794](&unk_2265676A4, &type metadata for RSFrame.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558481D0);
  }
  return result;
}

unint64_t sub_2264F6AC0()
{
  unint64_t result;

  result = qword_2558481D8;
  if (!qword_2558481D8)
  {
    result = MEMORY[0x22769A794](&unk_22656758C, &type metadata for RSRawPointCloud.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558481D8);
  }
  return result;
}

unint64_t sub_2264F6B08()
{
  unint64_t result;

  result = qword_2558481E0;
  if (!qword_2558481E0)
  {
    result = MEMORY[0x22769A794](&unk_2265675B4, &type metadata for RSRawPointCloud.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558481E0);
  }
  return result;
}

unint64_t sub_2264F6B50()
{
  unint64_t result;

  result = qword_2558481E8;
  if (!qword_2558481E8)
  {
    result = MEMORY[0x22769A794](&unk_22656749C, &type metadata for RSCamera.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558481E8);
  }
  return result;
}

unint64_t sub_2264F6B98()
{
  unint64_t result;

  result = qword_2558481F0;
  if (!qword_2558481F0)
  {
    result = MEMORY[0x22769A794](&unk_2265674C4, &type metadata for RSCamera.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558481F0);
  }
  return result;
}

unint64_t sub_2264F6BE0()
{
  unint64_t result;

  result = qword_2558481F8;
  if (!qword_2558481F8)
  {
    result = MEMORY[0x22769A794](&unk_2265673AC, &type metadata for RoomScanKeyframeWrapper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2558481F8);
  }
  return result;
}

unint64_t sub_2264F6C28()
{
  unint64_t result;

  result = qword_255848200;
  if (!qword_255848200)
  {
    result = MEMORY[0x22769A794](&unk_2265673D4, &type metadata for RoomScanKeyframeWrapper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255848200);
  }
  return result;
}

uint64_t StructureBuilder.__allocating_init(options:)(_QWORD *a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = *a1;
  *(_QWORD *)(result + 24) = 1;
  return result;
}

uint64_t StructureBuilder.init(options:)(_QWORD *a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *a1;
  *(_QWORD *)(v1 + 24) = 1;
  return v1;
}

uint64_t sub_2264F6CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = type metadata accessor for CapturedRoom(0);
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2264F6D4C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _BYTE *v19;
  uint64_t v20;

  v1 = sub_2264F7A2C();

  if (v1)
  {
    if (qword_25583F920 != -1)
      swift_once();
    v2 = *(_QWORD *)(v0 + 24);
    sub_2264A7E28();
    v3 = swift_allocObject();
    v4 = v3;
    *(_QWORD *)(v0 + 64) = v3;
    *(_QWORD *)(v3 + 16) = MEMORY[0x24BEE4AF8];
    v5 = (_QWORD *)(v3 + 16);
    v6 = *(_QWORD *)(v2 + 16);
    if (v6)
    {
      v20 = v3;
      v7 = *(_QWORD *)(v0 + 48);
      v8 = *(_QWORD *)(v0 + 56);
      v9 = *(int *)(*(_QWORD *)(v0 + 40) + 60);
      v10 = *(_QWORD *)(v0 + 24)
          + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      v11 = *(_QWORD *)(v7 + 72);
      swift_bridgeObjectRetain();
      do
      {
        v12 = *(_QWORD *)(v0 + 56);
        sub_22643D704(v10, v12, type metadata accessor for CapturedRoom);
        v13 = *(id *)(v8 + v9);
        v14 = sub_22643D748(v12, type metadata accessor for CapturedRoom);
        MEMORY[0x227699594](v14);
        if (*(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_22655CEF0();
        sub_22655CF08();
        sub_22655CEE4();
        v10 += v11;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease();
      v4 = v20;
    }
    v15 = *(_QWORD *)(v0 + 32);
    v16 = swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v16;
    *(_QWORD *)(v16 + 16) = v15;
    *(_QWORD *)(v16 + 24) = v4;
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v17;
    type metadata accessor for CapturedStructure(0);
    *v17 = v0;
    v17[1] = sub_2264F6FA4;
    return sub_22655D580();
  }
  else
  {
    sub_2264F7B5C();
    swift_allocError();
    *v19 = 5;
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2264F6FA4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2264F7010()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2264F704C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2264F7090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  void *v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  _QWORD aBlock[6];

  v16 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255848538);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v17 = sub_2264F7A2C();
  if (v17)
  {
    swift_beginAccess();
    sub_22643F548(0, (unint64_t *)&unk_255848540);
    swift_bridgeObjectRetain();
    v15 = sub_22655CEC0();
    swift_bridgeObjectRelease();
    sub_226513F60(MEMORY[0x24BEE4AF8]);
    sub_22655C140();
    v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848520);
    sub_226437F28(&qword_2558436F0, v8, MEMORY[0x24BDCEA88]);
    v9 = (void *)sub_22655CCBC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v16, v5);
    v10 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = a2;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v11 + v10, (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
    *(_QWORD *)(v11 + ((v7 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
    aBlock[4] = sub_2264FA34C;
    aBlock[5] = v11;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2264F7900;
    aBlock[3] = &block_descriptor_21;
    v12 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    v13 = v17;
    v14 = (void *)v15;
    objc_msgSend(v17, sel_processMultiLevelWithMultiFloorPlan_withKeyframes_completionHandlerWithError_, v15, v9, v12);
    _Block_release(v12);

  }
  else
  {
    __break(1u);
  }
}

void sub_2264F72DC(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  id v19;
  id v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t ObjCClassFromMetadata;
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  void *v42;
  char *v43;
  _QWORD v44[3];
  int v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  id v50;
  uint64_t v51[3];

  v48 = sub_22655CB84();
  v10 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v12 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CapturedStructure(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (_QWORD *)((char *)v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v16);
  v18 = (_QWORD *)((char *)v44 - v17);
  if (a2
    && (v51[0] = (uint64_t)a2,
        v19 = a2,
        __swift_instantiateConcreteTypeFromMangledName(&qword_2558436F8),
        sub_22643F548(0, (unint64_t *)&unk_255848550),
        (swift_dynamicCast() & 1) != 0))
  {
    v20 = v50;
    v49 = 5;
    if (objc_msgSend(v50, sel_code) == (id)-1001)
    {
      v45 = 2;
      v49 = 2;
    }
    else if (objc_msgSend(v20, sel_code) == (id)-1002)
    {
      v45 = 0;
      v49 = 0;
    }
    else
    {
      v45 = 5;
    }
    v46 = v20;
    type metadata accessor for Constants();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v29 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v30 = objc_msgSend(v29, sel_bundleIdentifier);

    if (v30)
    {
      sub_22655CD88();

    }
    sub_22643F548(0, (unint64_t *)&qword_255843DE0);
    sub_22655D124();
    sub_22655CB90();
    v31 = sub_22655CB6C();
    v32 = sub_22655CFF8();
    v33 = os_log_type_enabled(v31, v32);
    v47 = a3;
    if (v33)
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v51[0] = v35;
      v44[2] = a4;
      *(_DWORD *)v34 = 136315138;
      v44[1] = v34 + 4;
      LOBYTE(v50) = v45;
      sub_2264F7B5C();
      v36 = sub_22655D5B0();
      v50 = (id)sub_2264F4EC4(v36, v37, v51);
      sub_22655D154();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_226423000, v31, v32, "Cannot process multiFloorPlan: %s", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22769A884](v35, -1, -1);
      MEMORY[0x22769A884](v34, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v48);
    if (qword_25583F920 != -1)
      swift_once();
    *(_QWORD *)((char *)v15 + *(int *)(v13 + 52)) = 2;
    v38 = MEMORY[0x24BEE4AF8];
    *v15 = MEMORY[0x24BEE4AF8];
    v15[1] = v38;
    v15[2] = v38;
    v15[3] = v38;
    v15[4] = v38;
    v15[5] = v38;
    sub_22655C134();
    v15[6] = v38;
    v15[7] = v38;
    swift_beginAccess();
    LOBYTE(v50) = v49;
    v39 = sub_22655CDDC();
    sub_2264A7F10((uint64_t)v15, v39, v40, *(_DWORD *)(v47 + 16) & 1);
    swift_bridgeObjectRelease();
    sub_22643D748((uint64_t)v15, type metadata accessor for CapturedStructure);
    sub_2264AA248();
    v41 = v49;
    sub_2264F7B5C();
    v42 = (void *)swift_allocError();
    *v43 = v41;
    v50 = v42;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255848538);
    sub_22655CF20();

  }
  else
  {
    swift_beginAccess();
    v21 = *(_QWORD *)(a5 + 16);
    if ((*(_BYTE *)(a3 + 16) & 1) != 0)
    {
      v22 = a3;
      v25 = qword_25583F980;
      swift_bridgeObjectRetain();
      if (v25 != -1)
        swift_once();
      v24 = &qword_25585B068;
    }
    else
    {
      v22 = a3;
      v23 = qword_25583F988;
      swift_bridgeObjectRetain();
      if (v23 != -1)
        swift_once();
      v24 = &qword_25585B070;
    }
    v26 = (void *)*v24;
    type metadata accessor for RSCoreAdaptor();
    v27 = v26;
    sub_2264F4564(a1, v21, v27, v18);

    swift_bridgeObjectRelease();
    if (qword_25583F920 != -1)
      swift_once();
    sub_2264A7F10((uint64_t)v18, 0x73736563637573, 0xE700000000000000, *(_DWORD *)(v22 + 16) & 1);
    sub_2264AA248();
    sub_22643D704((uint64_t)v18, (uint64_t)v15, type metadata accessor for CapturedStructure);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255848538);
    sub_22655CF2C();
    sub_22643D748((uint64_t)v18, type metadata accessor for CapturedStructure);
  }
}

void sub_2264F7900(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(id, void *);
  id v6;
  id v7;

  v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(v7, a3);
  swift_release();

}

uint64_t StructureBuilder.BuildError.errorDescription.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2264F79AC + 4 * byte_2265678B0[*v0]))(0xD000000000000025, 0x800000022656F4B0);
}

unint64_t sub_2264F79AC()
{
  return 0xD000000000000012;
}

uint64_t sub_2264F79C8@<X0>(uint64_t a1@<X8>)
{
  return a1 + 16;
}

uint64_t sub_2264F7A00()
{
  return 0x6C616E7265746E49;
}

id sub_2264F7A2C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  unsigned __int8 *v4;
  void *v5;
  id v6;

  v1 = *(void **)(v0 + 24);
  v2 = v1;
  if (v1 == (void *)1)
  {
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE80980]), sel_init);
    objc_msgSend(v3, sel_setObjectBeautificationEnabled_, *(_DWORD *)(v0 + 16) & 1);
    if (qword_25583F9D0 != -1)
      swift_once();
    v4 = (unsigned __int8 *)off_25584AF28;
    swift_beginAccess();
    objc_msgSend(v3, sel_setCurveEnabled_, v4[161]);
    v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE80988]), sel_initWithConfiguration_, v3);

    v5 = *(void **)(v0 + 24);
    *(_QWORD *)(v0 + 24) = v2;
    v6 = v2;
    sub_2264F7BBC(v5);
  }
  sub_2264FA2A8(v1);
  return v2;
}

uint64_t sub_2264F7B30()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_2264F7B54(uint64_t a1)
{
  uint64_t v1;

  sub_2264F7090(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_2264F7B5C()
{
  unint64_t result;

  result = qword_255848218;
  if (!qword_255848218)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for StructureBuilder.BuildError, &type metadata for StructureBuilder.BuildError);
    atomic_store(result, (unint64_t *)&qword_255848218);
  }
  return result;
}

uint64_t StructureBuilder.deinit()
{
  uint64_t v0;

  sub_2264F7BBC(*(id *)(v0 + 24));
  return v0;
}

void sub_2264F7BBC(id a1)
{
  if (a1 != (id)1)

}

uint64_t StructureBuilder.__deallocating_deinit()
{
  uint64_t v0;

  sub_2264F7BBC(*(id *)(v0 + 24));
  return swift_deallocClassInstance();
}

int64x2_t *RoomBuilder.__allocating_init(options:)(uint64_t *a1)
{
  int64x2_t *v2;
  uint64_t v3;
  __int8 *v4;
  uint64_t v5;

  v2 = (int64x2_t *)swift_allocObject();
  v3 = *a1;
  v2[1].i8[8] = 0;
  v2[2] = vdupq_n_s64(1uLL);
  v4 = &v2->i8[OBJC_IVAR____TtC8RoomPlan11RoomBuilder_floorPlanModelContinuation];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255848220);
  (*(void (**)(__int8 *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v2[1].i64[0] = v3;
  return v2;
}

int64x2_t *RoomBuilder.init(options:)(uint64_t *a1)
{
  int64x2_t *v1;
  uint64_t v2;
  __int8 *v3;
  uint64_t v4;

  v2 = *a1;
  v1[1].i8[8] = 0;
  v1[2] = vdupq_n_s64(1uLL);
  v3 = &v1->i8[OBJC_IVAR____TtC8RoomPlan11RoomBuilder_floorPlanModelContinuation];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255848220);
  (*(void (**)(__int8 *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v1[1].i64[0] = v2;
  return v1;
}

uint64_t sub_2264F7CE8(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  *(_QWORD *)(v3 + 96) = a1;
  *(_QWORD *)(v3 + 104) = v2;
  v4 = a2[3];
  *(_OWORD *)(v3 + 48) = a2[2];
  *(_OWORD *)(v3 + 64) = v4;
  *(_OWORD *)(v3 + 80) = a2[4];
  v5 = a2[1];
  *(_OWORD *)(v3 + 16) = *a2;
  *(_OWORD *)(v3 + 32) = v5;
  return swift_task_switch();
}

uint64_t sub_2264F7D18()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _BYTE *v7;

  v1 = sub_2264F9144();

  if (v1 && (v2 = sub_2264F9248(), v2, v2))
  {
    if (qword_25583F918 != -1)
      swift_once();
    v3 = *(_QWORD *)(v0 + 104);
    sub_2264A53C8();
    v4 = swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v4;
    *(_QWORD *)(v4 + 16) = v0 + 16;
    *(_QWORD *)(v4 + 24) = v3;
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v5;
    type metadata accessor for CapturedRoom(0);
    *v5 = v0;
    v5[1] = sub_2264F7E68;
    return sub_22655D580();
  }
  else
  {
    sub_2264F92C0();
    swift_allocError();
    *v7 = 4;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2264F7E68()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 128) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2264F7EDC()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2264F7F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  id v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t *v28;
  uint64_t v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  uint64_t (*v35)(uint64_t);
  void *v36;
  void *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  _QWORD aBlock[7];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558484F0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  if (qword_25583F998 != -1)
    swift_once();
  v51 = (uint64_t *)a2;
  v52 = a3;
  v9 = *(_OWORD *)(a2 + 32);
  xmmword_25585B130 = *(_OWORD *)(a2 + 16);
  xmmword_25585B140 = v9;
  v10 = *(_OWORD *)(a2 + 64);
  xmmword_25585B150 = *(_OWORD *)(a2 + 48);
  xmmword_25585B160 = v10;
  v11 = objc_msgSend(*(id *)(a2 + 8), sel_floorPlan);
  v12 = objc_msgSend(v11, sel_objects);

  sub_22643F548(0, (unint64_t *)&unk_255849AB0);
  v13 = sub_22655CECC();

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_22655D400();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v49 = v7;
  v50 = v6;
  v47 = a1;
  v48 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = v8;
  if (v14)
  {
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_2264C7BE4(0, v14 & ~(v14 >> 63), 0);
    if (v14 < 0)
    {
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    v15 = 0;
    v16 = aBlock[0];
    do
    {
      if ((v13 & 0xC000000000000001) != 0)
        v17 = (id)MEMORY[0x2276999E4](v15, v13);
      else
        v17 = *(id *)(v13 + 8 * v15 + 32);
      v18 = v17;
      v19 = objc_msgSend(v17, sel_dictionaryRepresentation, v46);
      if (v19)
      {
        v20 = v19;
        v21 = sub_22655CCC8();

      }
      else
      {

        v21 = 0;
      }
      aBlock[0] = v16;
      v23 = *(_QWORD *)(v16 + 16);
      v22 = *(_QWORD *)(v16 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_2264C7BE4(v22 > 1, v23 + 1, 1);
        v16 = aBlock[0];
      }
      ++v15;
      *(_QWORD *)(v16 + 16) = v23 + 1;
      *(_QWORD *)(v16 + 8 * v23 + 32) = v21;
    }
    while (v14 != v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v16 = MEMORY[0x24BEE4AF8];
  }
  v24 = *(_QWORD *)(v16 + 16);
  if (v24)
  {
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_22655D37C();
    v25 = 0;
    do
    {
      if (*(_QWORD *)(v16 + 8 * v25 + 32))
      {
        swift_bridgeObjectRetain();
        v26 = (void *)sub_22655CCBC();
      }
      else
      {
        v26 = 0;
      }
      v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE6E040]), sel_initWithDictionaryRepresentation_, v26);

      if (!v27)
        goto LABEL_34;
      ++v25;
      swift_bridgeObjectRelease();
      sub_22655D364();
      sub_22655D388();
      sub_22655D394();
      sub_22655D370();
    }
    while (v24 != v25);
  }
  swift_bridgeObjectRelease();
  v28 = v51;
  sub_2264F99F0(*v51);
  v29 = v52;
  v30 = sub_2264F9144();
  if (!v30)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v31 = v30;
  if (qword_25585B178)
  {
    swift_bridgeObjectRetain();
    v32 = (void *)sub_22655CD64();
    swift_bridgeObjectRelease();
  }
  else
  {
    v32 = 0;
  }
  objc_msgSend(v31, sel_setupOfflineDumpWithLogDir_, v32, v46);

  v33 = sub_2264F9248();
  if (v33)
  {
    v34 = v33;
    sub_22655C140();
    v35 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848500);
    sub_226437F28(&qword_2558436F0, v35, MEMORY[0x24BDCEA88]);
    v36 = (void *)sub_22655CCBC();
    swift_release();
    sub_22643F548(0, (unint64_t *)&unk_255848510);
    v37 = (void *)sub_22655CEC0();
    swift_bridgeObjectRelease();
    v39 = v48;
    v38 = v49;
    v40 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v48, v47, v50);
    v41 = (*(unsigned __int8 *)(v38 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    v42 = swift_allocObject();
    v43 = *((_OWORD *)v28 + 3);
    *(_OWORD *)(v42 + 48) = *((_OWORD *)v28 + 2);
    *(_OWORD *)(v42 + 64) = v43;
    *(_OWORD *)(v42 + 80) = *((_OWORD *)v28 + 4);
    v44 = *((_OWORD *)v28 + 1);
    *(_OWORD *)(v42 + 16) = *(_OWORD *)v28;
    *(_OWORD *)(v42 + 32) = v44;
    *(_QWORD *)(v42 + 96) = v29;
    (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v42 + v41, v39, v40);
    aBlock[4] = sub_2264FA14C;
    aBlock[5] = v42;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2264F8FD4;
    aBlock[3] = &block_descriptor_5;
    v45 = _Block_copy(aBlock);
    sub_2264FA1AC((uint64_t)v28);
    swift_retain();
    swift_release();
    objc_msgSend(v34, sel_generateOfflineObjects_onlineObjects_block_, v36, v37, v45);
    _Block_release(v45);

    return;
  }
LABEL_36:
  __break(1u);
}

void sub_2264F84BC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  uint64_t (*v30)(uint64_t);
  void *v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD aBlock[6];
  id v46;

  v44 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558484F0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_22655D400();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v11 = MEMORY[0x24BEE4AF8];
  v42 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = v8;
  v40 = v9;
  v41 = a4;
  if (v10)
  {
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_2264C7BE4(0, v10 & ~(v10 >> 63), 0);
    if (v10 < 0)
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    v38 = v7;
    v39 = a3;
    v12 = 0;
    v13 = aBlock[0];
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v14 = (id)MEMORY[0x2276999E4](v12, a1);
      else
        v14 = *(id *)(a1 + 8 * v12 + 32);
      v15 = v14;
      v16 = objc_msgSend(v14, sel_dictionaryRepresentation, v38, v39, v40);
      if (v16)
      {
        v17 = v16;
        v18 = sub_22655CCC8();

      }
      else
      {

        v18 = 0;
      }
      aBlock[0] = v13;
      v20 = *(_QWORD *)(v13 + 16);
      v19 = *(_QWORD *)(v13 + 24);
      v21 = v20 + 1;
      if (v20 >= v19 >> 1)
      {
        sub_2264C7BE4(v19 > 1, v20 + 1, 1);
        v13 = aBlock[0];
      }
      ++v12;
      *(_QWORD *)(v13 + 16) = v21;
      *(_QWORD *)(v13 + 8 * v20 + 32) = v18;
    }
    while (v10 != v12);
    v11 = MEMORY[0x24BEE4AF8];
LABEL_18:
    aBlock[0] = v11;
    sub_22655D37C();
    v22 = 0;
    while (1)
    {
      if (*(_QWORD *)(v13 + 8 * v22 + 32))
      {
        swift_bridgeObjectRetain();
        v23 = (void *)sub_22655CCBC();
      }
      else
      {
        v23 = 0;
      }
      v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE80950]), sel_initWithDictionaryRepresentation_, v23);

      if (!v24)
        goto LABEL_30;
      ++v22;
      swift_bridgeObjectRelease();
      sub_22655D364();
      sub_22655D388();
      sub_22655D394();
      sub_22655D370();
      if (v21 == v22)
      {
        swift_bridgeObjectRelease();
        v7 = v38;
        a3 = v39;
        goto LABEL_25;
      }
    }
  }
  v21 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
  if (v21)
  {
    v38 = v7;
    v39 = a3;
    v13 = MEMORY[0x24BEE4AF8];
    goto LABEL_18;
  }
  swift_bridgeObjectRelease();
LABEL_25:
  objc_msgSend(*(id *)(v44 + 8), sel_copy, v38, v39);
  sub_22655D1CC();
  swift_unknownObjectRelease();
  sub_22643F548(0, &qword_2558436D0);
  swift_dynamicCast();
  v25 = v46;
  v26 = objc_msgSend(v46, sel_floorPlan);
  sub_22643F548(0, (unint64_t *)&unk_255849AB0);
  v27 = (void *)sub_22655CEC0();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_updateObjects_, v27);

  v28 = sub_2264F9144();
  if (v28)
  {
    v29 = v28;
    sub_22655C140();
    v30 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848520);
    sub_226437F28(&qword_2558436F0, v30, MEMORY[0x24BDCEA88]);
    v31 = (void *)sub_22655CCBC();
    v33 = v42;
    v32 = v43;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v42, v41, v7);
    v34 = (*(unsigned __int8 *)(v32 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    v35 = swift_allocObject();
    *(_QWORD *)(v35 + 16) = a3;
    (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v35 + v34, v33, v7);
    aBlock[4] = sub_2264FA254;
    aBlock[5] = v35;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2264F7900;
    aBlock[3] = &block_descriptor_15;
    v36 = _Block_copy(aBlock);
    v37 = v25;
    swift_retain();
    swift_release();
    objc_msgSend(v29, sel_processWithKeyframes_initialAsset_completionHandlerWithError_, v31, v37, v36);
    _Block_release(v36);

    return;
  }
LABEL_31:
  __break(1u);
}

uint64_t sub_2264F89BC(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t ObjCClassFromMetadata;
  void *v19;
  id v20;
  id v21;
  id v22;
  uint64_t *v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v37;
  id v38;
  _QWORD v39[2];
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;

  v8 = sub_22655CB84();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for CapturedRoom(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (_QWORD *)((char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v15);
  v17 = (_QWORD *)((char *)v39 - v16);
  if (a2)
  {
    *(_QWORD *)&v42 = v9;
    *(_QWORD *)&v43 = v8;
    type metadata accessor for Constants();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v19 = (void *)objc_opt_self();
    v20 = a2;
    v21 = objc_msgSend(v19, sel_bundleForClass_, ObjCClassFromMetadata);
    v22 = objc_msgSend(v21, sel_bundleIdentifier);

    if (v22)
    {
      sub_22655CD88();

    }
    sub_22643F548(0, (unint64_t *)&qword_255843DE0);
    sub_22655D124();
    sub_22655CB90();
    v24 = a2;
    v25 = a2;
    v26 = sub_22655CB6C();
    v27 = sub_22655CFF8();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      *(_QWORD *)&v41 = a4;
      v29 = (uint8_t *)v28;
      v30 = swift_slowAlloc();
      v45 = v30;
      *(_QWORD *)&v40 = a3;
      *(_DWORD *)v29 = 136315138;
      v39[1] = v29 + 4;
      swift_getErrorValue();
      v31 = sub_22655D5B0();
      v44 = sub_2264F4EC4(v31, v32, &v45);
      a3 = v40;
      sub_22655D154();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_226423000, v26, v27, "Cannot generate offline floorplan: %s", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22769A884](v30, -1, -1);
      MEMORY[0x22769A884](v29, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, _QWORD))(v42 + 8))(v11, v43);
    if (qword_25583F918 != -1)
      swift_once();
    *(_QWORD *)((char *)v14 + v12[12]) = 0;
    *(_QWORD *)((char *)v14 + v12[13]) = 2;
    v33 = MEMORY[0x24BEE4AF8];
    *v14 = MEMORY[0x24BEE4AF8];
    v14[1] = v33;
    v14[2] = v33;
    v14[3] = v33;
    v14[4] = v33;
    v14[5] = v33;
    *(_QWORD *)((char *)v14 + v12[14]) = v33;
    sub_22655C134();
    *(_QWORD *)((char *)v14 + v12[11]) = v33;
    *(_QWORD *)((char *)v14 + v12[15]) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE80978]), sel_init);
    LOBYTE(v45) = 4;
    v34 = sub_22655CDDC();
    sub_2264A53EC((uint64_t)v14, v34, v35, *(_DWORD *)(a3 + 16) & 1);
    swift_bridgeObjectRelease();
    sub_22643D748((uint64_t)v14, type metadata accessor for CapturedRoom);
    sub_2264A7628(*(_BYTE *)(a3 + 24));
    v45 = (uint64_t)a2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558484F0);
    return sub_22655CF20();
  }
  else
  {
    if (qword_25583F998 != -1)
      swift_once();
    v42 = xmmword_25585B140;
    v43 = xmmword_25585B130;
    v40 = xmmword_25585B160;
    v41 = xmmword_25585B150;
    if ((*(_BYTE *)(a3 + 16) & 1) != 0)
    {
      if (qword_25583F980 != -1)
        swift_once();
      v23 = &qword_25585B068;
    }
    else
    {
      if (qword_25583F988 != -1)
        swift_once();
      v23 = &qword_25585B070;
    }
    v37 = (void *)*v23;
    type metadata accessor for RSCoreAdaptor();
    v38 = v37;
    sub_2264F4078(a1, MEMORY[0x24BEE4AF8], MEMORY[0x24BEE4AF8], v38, 0, v17, v43, v42, v41, v40);

    if (qword_25583F9E8 != -1)
      swift_once();
    if (*(_BYTE *)(qword_25585B3A0 + 16) == 1)
      sub_22655ABD4((uint64_t)v17);
    if (qword_25583F918 != -1)
      swift_once();
    sub_2264A53EC((uint64_t)v17, 0x73736563637573, 0xE700000000000000, *(_DWORD *)(a3 + 16) & 1);
    sub_2264A7628(*(_BYTE *)(a3 + 24));
    sub_22643D704((uint64_t)v17, (uint64_t)v14, type metadata accessor for CapturedRoom);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558484F0);
    sub_22655CF2C();
    return sub_22643D748((uint64_t)v17, type metadata accessor for CapturedRoom);
  }
}

uint64_t sub_2264F8FD4(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_22643F548(0, (unint64_t *)&unk_255848510);
  v2 = sub_22655CECC();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t RoomBuilder.ConfigurationOptions.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

RoomPlan::RoomBuilder::ConfigurationOptions __swiftcall RoomBuilder.ConfigurationOptions.init(rawValue:)(RoomPlan::RoomBuilder::ConfigurationOptions rawValue)
{
  RoomPlan::RoomBuilder::ConfigurationOptions *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static RoomBuilder.ConfigurationOptions.beautifyObjects.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

uint64_t RoomBuilder.BuildError.errorDescription.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2264F9098 + 4 * byte_2265678B6[*v0]))(0xD000000000000025, 0x800000022656F4B0);
}

unint64_t sub_2264F9098()
{
  return 0xD000000000000012;
}

uint64_t sub_2264F90B4@<X0>(uint64_t a1@<X8>)
{
  return a1 + 12;
}

uint64_t sub_2264F90DC()
{
  return 0x6C616E7265746E49;
}

BOOL static RoomBuilder.BuildError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t RoomBuilder.BuildError.hash(into:)()
{
  return sub_22655D64C();
}

id sub_2264F9144()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  unsigned __int8 *v4;
  void *v5;
  id v6;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  if (v1 == (void *)1)
  {
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE80980]), sel_init);
    objc_msgSend(v3, sel_setObjectBeautificationEnabled_, *(_DWORD *)(v0 + 16) & 1);
    if (qword_25583F9D0 != -1)
      swift_once();
    v4 = (unsigned __int8 *)off_25584AF28;
    swift_beginAccess();
    objc_msgSend(v3, sel_setCurveEnabled_, v4[161]);
    v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE80988]), sel_initWithConfiguration_, v3);

    v5 = *(void **)(v0 + 32);
    *(_QWORD *)(v0 + 32) = v2;
    v6 = v2;
    sub_2264F7BBC(v5);
  }
  sub_2264FA2A8(v1);
  return v2;
}

id sub_2264F9248()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;

  v1 = *(void **)(v0 + 40);
  v2 = v1;
  if (v1 == (void *)1)
  {
    v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE6E068]), sel_init_, 0);
    v3 = *(void **)(v0 + 40);
    *(_QWORD *)(v0 + 40) = v2;
    v4 = v2;
    sub_2264F7BBC(v3);
  }
  sub_2264FA2A8(v1);
  return v2;
}

void sub_2264F92B8(uint64_t a1)
{
  uint64_t v1;

  sub_2264F7F10(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_2264F92C0()
{
  unint64_t result;

  result = qword_255848230;
  if (!qword_255848230)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for RoomBuilder.BuildError, &type metadata for RoomBuilder.BuildError);
    atomic_store(result, (unint64_t *)&qword_255848230);
  }
  return result;
}

double sub_2264F9304()
{
  double result;

  xmmword_25585B130 = xmmword_226560080;
  xmmword_25585B140 = xmmword_2265600C0;
  *(_QWORD *)&result = 3212836864;
  xmmword_25585B150 = xmmword_2265600D0;
  xmmword_25585B160 = xmmword_22655FA60;
  return result;
}

uint64_t RoomBuilder.deinit()
{
  uint64_t v0;

  sub_2264F7BBC(*(id *)(v0 + 32));
  sub_2264F7BBC(*(id *)(v0 + 40));
  sub_2264F936C(v0 + OBJC_IVAR____TtC8RoomPlan11RoomBuilder_floorPlanModelContinuation);
  return v0;
}

uint64_t sub_2264F936C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849B60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t RoomBuilder.__deallocating_deinit()
{
  uint64_t v0;

  sub_2264F7BBC(*(id *)(v0 + 32));
  sub_2264F7BBC(*(id *)(v0 + 40));
  sub_2264F936C(v0 + OBJC_IVAR____TtC8RoomPlan11RoomBuilder_floorPlanModelContinuation);
  return swift_deallocClassInstance();
}

unint64_t sub_2264F93F0()
{
  unint64_t result;

  result = qword_255848240;
  if (!qword_255848240)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for StructureBuilder.BuildError, &type metadata for StructureBuilder.BuildError);
    atomic_store(result, (unint64_t *)&qword_255848240);
  }
  return result;
}

unint64_t sub_2264F943C()
{
  unint64_t result;

  result = qword_255848248;
  if (!qword_255848248)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for RoomBuilder.ConfigurationOptions, &type metadata for RoomBuilder.ConfigurationOptions);
    atomic_store(result, (unint64_t *)&qword_255848248);
  }
  return result;
}

unint64_t sub_2264F9484()
{
  unint64_t result;

  result = qword_255848250;
  if (!qword_255848250)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for RoomBuilder.ConfigurationOptions, &type metadata for RoomBuilder.ConfigurationOptions);
    atomic_store(result, (unint64_t *)&qword_255848250);
  }
  return result;
}

unint64_t sub_2264F94CC()
{
  unint64_t result;

  result = qword_255848258;
  if (!qword_255848258)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for RoomBuilder.ConfigurationOptions, &type metadata for RoomBuilder.ConfigurationOptions);
    atomic_store(result, (unint64_t *)&qword_255848258);
  }
  return result;
}

unint64_t sub_2264F9514()
{
  unint64_t result;

  result = qword_255848260;
  if (!qword_255848260)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for RoomBuilder.ConfigurationOptions, &type metadata for RoomBuilder.ConfigurationOptions);
    atomic_store(result, (unint64_t *)&qword_255848260);
  }
  return result;
}

unint64_t sub_2264F955C()
{
  unint64_t result;

  result = qword_255848268;
  if (!qword_255848268)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for RoomBuilder.BuildError, &type metadata for RoomBuilder.BuildError);
    atomic_store(result, (unint64_t *)&qword_255848268);
  }
  return result;
}

uint64_t type metadata accessor for StructureBuilder()
{
  return objc_opt_self();
}

uint64_t method lookup function for StructureBuilder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StructureBuilder.__allocating_init(options:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of StructureBuilder.capturedStructure(from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 104) + *(_QWORD *)(*(_QWORD *)v2 + 104));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_2264FA3B8;
  return v8(a1, a2);
}

uint64_t storeEnumTagSinglePayload for StructureBuilder.BuildError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2264F9698 + 4 * byte_2265678C0[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2264F96CC + 4 * byte_2265678BB[v4]))();
}

uint64_t sub_2264F96CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264F96D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2264F96DCLL);
  return result;
}

uint64_t sub_2264F96E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2264F96F0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2264F96F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264F96FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StructureBuilder.BuildError()
{
  return &type metadata for StructureBuilder.BuildError;
}

uint64_t sub_2264F9718()
{
  return type metadata accessor for RoomBuilder();
}

uint64_t type metadata accessor for RoomBuilder()
{
  uint64_t result;

  result = qword_255848380;
  if (!qword_255848380)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2264F975C()
{
  unint64_t v0;

  sub_2264F98BC();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for RoomBuilder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RoomBuilder.__allocating_init(options:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of RoomBuilder.capturedRoom(from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 128) + *(_QWORD *)(*(_QWORD *)v2 + 128));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_2264F9874;
  return v8(a1, a2);
}

uint64_t sub_2264F9874()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_2264F98BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255848398[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255848220);
    v0 = sub_22655D13C();
    if (!v1)
      atomic_store(v0, qword_255848398);
  }
}

ValueMetadata *type metadata accessor for RoomBuilder.ConfigurationOptions()
{
  return &type metadata for RoomBuilder.ConfigurationOptions;
}

uint64_t storeEnumTagSinglePayload for RoomBuilder.BuildError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2264F9970 + 4 * byte_2265678CA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2264F99A4 + 4 * byte_2265678C5[v4]))();
}

uint64_t sub_2264F99A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264F99AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2264F99B4);
  return result;
}

uint64_t sub_2264F99C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2264F99C8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2264F99CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2264F99D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RoomBuilder.BuildError()
{
  return &type metadata for RoomBuilder.BuildError;
}

uint64_t sub_2264F99F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t i;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;

  v2 = sub_22655C140();
  v38 = *(_QWORD *)(v2 - 8);
  v39 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v37 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255848530);
  result = sub_22655D40C();
  v5 = (_QWORD *)result;
  v6 = 0;
  v40 = a1;
  v9 = *(_QWORD *)(a1 + 64);
  v8 = a1 + 64;
  v7 = v9;
  v10 = 1 << *(_BYTE *)(v8 - 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v7;
  v33 = v8;
  v34 = (unint64_t)(v10 + 63) >> 6;
  v35 = result + 64;
  v36 = (_QWORD *)result;
  v13 = v37;
  v14 = v38;
  v15 = v39;
  if ((v11 & v7) == 0)
    goto LABEL_5;
LABEL_4:
  v16 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  v41 = v6;
  for (i = v16 | (v6 << 6); ; i = __clz(__rbit64(v19)) + (v20 << 6))
  {
    v22 = *(_QWORD *)(v14 + 72) * i;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v13, *(_QWORD *)(v40 + 48) + v22, v15);
    v23 = 8 * i;
    v24 = objc_allocWithZone((Class)type metadata accessor for ObjectKitKeyframe(0));
    v25 = (void *)swift_unknownObjectRetain();
    v26 = sub_2264F5BD8(v25, 0);
    swift_unknownObjectRelease();
    v27 = (i >> 3) & 0x1FFFFFFFFFFFFFF8;
    v28 = 1 << i;
    v5 = v36;
    *(_QWORD *)(v35 + v27) |= v28;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v14 + 32))(v5[6] + v22, v13, v15);
    *(_QWORD *)(v5[7] + v23) = v26;
    v29 = v5[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (v30)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v5[2] = v31;
    v6 = v41;
    if (v12)
      goto LABEL_4;
LABEL_5:
    v18 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_24;
    if (v18 >= v34)
      return (uint64_t)v5;
    v19 = *(_QWORD *)(v33 + 8 * v18);
    v20 = v6 + 1;
    if (!v19)
    {
      v20 = v6 + 2;
      if (v6 + 2 >= v34)
        return (uint64_t)v5;
      v19 = *(_QWORD *)(v33 + 8 * v20);
      if (!v19)
      {
        v20 = v6 + 3;
        if (v6 + 3 >= v34)
          return (uint64_t)v5;
        v19 = *(_QWORD *)(v33 + 8 * v20);
        if (!v19)
          break;
      }
    }
LABEL_18:
    v12 = (v19 - 1) & v19;
    v41 = v20;
  }
  v21 = v6 + 4;
  if (v6 + 4 >= v34)
    return (uint64_t)v5;
  v19 = *(_QWORD *)(v33 + 8 * v21);
  if (v19)
  {
    v20 = v6 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    v20 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v20 >= v34)
      return (uint64_t)v5;
    v19 = *(_QWORD *)(v33 + 8 * v20);
    ++v21;
    if (v19)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_2264F9C80(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v32 = a1;
  v33 = a3;
  v27 = a2;
  v3 = sub_22655CB84();
  v29 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v28 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_22655C05C();
  v5 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22655BD68();
  MEMORY[0x24BDAC7A8](v8);
  sub_22655BD98();
  swift_allocObject();
  v9 = sub_22655BD8C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558484C8);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_22655FA10;
  sub_22655BD5C();
  sub_22655BD50();
  v35 = v10;
  sub_226437F28(&qword_2558484D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB2A8], MEMORY[0x24BDCB2C8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558484D8);
  sub_2264FA078();
  sub_22655D214();
  sub_22655BD74();
  type metadata accessor for CapturedRoom(0);
  sub_226437F28(&qword_255845B80, type metadata accessor for CapturedRoom, (uint64_t)&protocol conformance descriptor for CapturedRoom);
  v11 = v31;
  v32 = v9;
  v12 = sub_22655BD80();
  if (v11)
  {
    v14 = v33;
    v18 = v28;
    sub_22655CB78();
    swift_bridgeObjectRetain_n();
    v19 = sub_22655CB6C();
    v20 = sub_22655CFF8();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v33 = 0;
      v22 = (uint8_t *)v21;
      v23 = swift_slowAlloc();
      v35 = v23;
      *(_DWORD *)v22 = 136315138;
      swift_bridgeObjectRetain();
      v34 = sub_2264F4EC4(v27, v14, &v35);
      sub_22655D154();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_226423000, v19, v20, "Unable to dump capturedRoom to %s!", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22769A884](v23, -1, -1);
      MEMORY[0x22769A884](v22, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    swift_release();

    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v18, v30);
  }
  else
  {
    v15 = v12;
    v16 = v13;
    v17 = v26;
    sub_22655BFC0();
    sub_22655C08C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v17);
    sub_226455C98(v15, v16);
    return swift_release();
  }
}

unint64_t sub_2264FA078()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2558484E0;
  if (!qword_2558484E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2558484D8);
    result = MEMORY[0x22769A794](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2558484E0);
  }
  return result;
}

uint64_t sub_2264FA0C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558484F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_2264FA14C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558484F0) - 8)
                          + 80);
  sub_2264F84BC(a1, v1 + 16, *(_QWORD *)(v1 + 96), v1 + ((v3 + 104) & ~v3));
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_2264FA1AC(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 8);
  swift_bridgeObjectRetain();
  v3 = v2;
  return a1;
}

uint64_t sub_2264FA1DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558484F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_2264FA254(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558484F0) - 8)
                          + 80);
  return sub_2264F89BC(a1, a2, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

id sub_2264FA2A8(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

uint64_t sub_2264FA2B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255848538);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

void sub_2264FA34C(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255848538) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_2264F72DC(a1, a2, *(_QWORD *)(v2 + 16), v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t type metadata accessor for OpeningEntity()
{
  uint64_t result;

  result = qword_255848560;
  if (!qword_255848560)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2264FA40C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2264FA448()
{
  return type metadata accessor for OpeningEntity();
}

uint64_t sub_2264FA450(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t RoomCaptureViewDelegate.captureView(shouldPresent:error:)()
{
  return 1;
}

uint64_t sub_2264FA488(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_captureSession);
  swift_beginAccess();
  *v3 = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_2264FA4F0()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_2264FA538()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_delegate;
  swift_beginAccess();
  return MEMORY[0x22769A944](v1);
}

uint64_t sub_2264FA584(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_delegate;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_2264FA5EC(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x22769A944](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_2264FA660;
}

void sub_2264FA660(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48) + 8) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t sub_2264FA6D4()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isModelEnabled);
  swift_beginAccess();
  return *v1;
}

id sub_2264FA718(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  id result;
  uint64_t v5;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isModelEnabled);
  result = (id)swift_beginAccess();
  *v3 = a1;
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView);
  if (v5)
  {
    *(_BYTE *)(v5 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_isModelEnabled) = a1 & 1;
    result = *(id *)(v5 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView);
    if (result)
      return objc_msgSend(result, sel_setHidden_, (a1 & 1) == 0);
    else
      __break(1u);
  }
  return result;
}

void (*sub_2264FA7B8(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isModelEnabled;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_2264FA810;
}

void sub_2264FA810(_QWORD **a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  void *v7;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) != 0)
    goto LABEL_5;
  v4 = v3[3];
  v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView);
  if (!v5)
    goto LABEL_5;
  v6 = *(unsigned __int8 *)(v4 + v3[4]);
  *(_BYTE *)(v5 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_isModelEnabled) = v6;
  v7 = *(void **)(v5 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView);
  if (v7)
  {
    objc_msgSend(v7, sel_setHidden_, v6 ^ 1u);
LABEL_5:
    free(v3);
    return;
  }
  __break(1u);
}

void *sub_2264FA9A8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = OBJC_IVAR____TtC8RoomPlan15RoomCaptureView____lazy_storage___settingsManager;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView____lazy_storage___settingsManager))
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView____lazy_storage___settingsManager);
  }
  else
  {
    if (qword_25583F9D0 != -1)
      swift_once();
    v2 = off_25584AF28;
    *((_QWORD *)off_25584AF28 + 3) = &off_24EDE7CF0;
    swift_unknownObjectWeakAssign();
    *(_QWORD *)(v0 + v1) = v2;
    swift_retain_n();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_2264FAA50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC8RoomPlan15RoomCaptureView____lazy_storage___frameProcessor;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView____lazy_storage___frameProcessor);
  v3 = v2;
  if (v2 == 1)
  {
    v3 = sub_2264FAAB8();
    v4 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    swift_retain();
    sub_226503C8C(v4);
  }
  sub_226503C9C(v2);
  return v3;
}

uint64_t sub_2264FAAB8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v0 = sub_22655CB84();
  MEMORY[0x24BDAC7A8](v0);
  type metadata accessor for MetalConstants();
  swift_initStaticObject();
  v1 = (void *)sub_22648BC28();
  sub_22648BCD8();
  type metadata accessor for FrameProcessor();
  swift_allocObject();
  v2 = sub_226494E10(v1);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v2;
}

uint64_t sub_2264FAF50()
{
  char *v0;
  char *v1;
  int v2;
  objc_class *v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  void *v12;
  id v13;
  id v14;
  char v15;
  void *v16;
  id v17;
  char v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  objc_super v25;
  objc_super v26;

  v1 = v0;
  v2 = v0[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isEncoding];
  v3 = (objc_class *)type metadata accessor for RoomCaptureView();
  if (v2 == 1)
  {
    v25.receiver = v1;
    v25.super_class = v3;
    v4 = objc_msgSendSuper2(&v25, sel_subviews);
    sub_22643F548(0, &qword_2558485D8);
    v5 = sub_22655CECC();

    v24 = MEMORY[0x24BEE4AF8];
    if (v5 >> 62)
      goto LABEL_21;
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    v7 = v1;
    if (v6)
    {
      while (1)
      {
        v8 = 0;
        v22 = OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView;
        v23 = OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView;
        while ((v5 & 0xC000000000000001) != 0)
        {
          v9 = (id)MEMORY[0x2276999E4](v8, v5);
LABEL_10:
          v10 = v9;
          v11 = v8 + 1;
          if (__OFADD__(v8, 1))
            goto LABEL_20;
          v12 = *(void **)&v1[v23];
          if (v12)
          {
            v13 = v9;
            v14 = v12;
            v15 = sub_22655D118();

            if ((v15 & 1) != 0)
              goto LABEL_5;
          }
          v16 = *(void **)&v1[v22];
          if (v16
            && (v13 = v10,
                v17 = v16,
                v18 = sub_22655D118(),
                v13,
                v17,
                (v18 & 1) != 0))
          {
LABEL_5:

          }
          else
          {
            sub_22655D364();
            sub_22655D388();
            sub_22655D394();
            sub_22655D370();
          }
          ++v8;
          if (v11 == v6)
          {
            v19 = v24;
            goto LABEL_23;
          }
        }
        if (v8 < *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
          break;
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        v20 = v1;
        v6 = sub_22655D400();
        if (!v6)
          goto LABEL_22;
      }
      v9 = *(id *)(v5 + 8 * v8 + 32);
      goto LABEL_10;
    }
LABEL_22:
    v19 = MEMORY[0x24BEE4AF8];
LABEL_23:
    swift_bridgeObjectRelease();
  }
  else
  {
    v26.receiver = v1;
    v26.super_class = v3;
    v1 = (char *)objc_msgSendSuper2(&v26, sel_subviews);
    sub_22643F548(0, &qword_2558485D8);
    v19 = sub_22655CECC();
  }

  return v19;
}

id RoomCaptureView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id RoomCaptureView.init(frame:)(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  char *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  _BYTE *v28;
  objc_class *v29;
  id v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  objc_super v35;
  uint64_t v36;

  v9 = sub_22655D064();
  v33 = *(_QWORD *)(v9 - 8);
  v34 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v32 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22655D04C();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v11);
  v13 = sub_22655CBFC();
  MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)&v4[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_captureSession] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v4[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isModelEnabled] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView____lazy_storage___settingsManager] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARViewCamera] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_worldSpaceManager] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureSessionObserver] = 0;
  v14 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v4[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_deltaTimeArray] = MEMORY[0x24BEE4AF8];
  v4[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isEndingCaptureSession] = 0;
  v15 = &v4[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_logPerimeterDirectoryPath];
  *v15 = 0;
  v15[1] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_completeTransitionTime] = 0x3FF4000000000000;
  v16 = &v4[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_sceneObserver];
  *(_OWORD *)v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((_QWORD *)v16 + 4) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_sceneShaderRenderer] = 0;
  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)&v4[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_viewportSize] = _Q0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_viewOrientation] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_currentARFrame] = 0;
  v22 = &v4[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_arCameraParameters];
  v23 = *MEMORY[0x24BDAEE00];
  v24 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 16);
  v25 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 32);
  v26 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 48);
  *(_OWORD *)v22 = *MEMORY[0x24BDAEE00];
  *((_OWORD *)v22 + 1) = v24;
  *((_OWORD *)v22 + 2) = v25;
  *((_OWORD *)v22 + 3) = v26;
  *((_OWORD *)v22 + 4) = v23;
  *((_OWORD *)v22 + 5) = v24;
  *((_OWORD *)v22 + 6) = v25;
  *((_OWORD *)v22 + 7) = v26;
  *((_OWORD *)v22 + 8) = xmmword_22655EF60;
  *((_QWORD *)v22 + 18) = 0;
  *((_QWORD *)v22 + 19) = 0;
  *((_QWORD *)v22 + 20) = 0x3FF0000000000000;
  *((_QWORD *)v22 + 21) = 0;
  *((_QWORD *)v22 + 22) = 0;
  *(_OWORD *)(v22 + 184) = xmmword_226567DA0;
  v27 = OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_arCameraQueue;
  sub_22643F548(0, (unint64_t *)&qword_2558442A0);
  v28 = v4;
  sub_22655CBD8();
  v36 = v14;
  sub_226437F28((unint64_t *)&qword_2558491E0, v12, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558442B0);
  sub_2264ABAD4((unint64_t *)&qword_2558491F0, (uint64_t *)&unk_2558442B0);
  sub_22655D214();
  (*(void (**)(char *, _QWORD, uint64_t))(v33 + 104))(v32, *MEMORY[0x24BEE5750], v34);
  *(_QWORD *)&v4[v27] = sub_22655D088();
  *(_QWORD *)&v28[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomBuilder] = 0;
  *(_QWORD *)&v28[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_gradientLayer] = 0;
  v28[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isEncoding] = 0;
  *(_QWORD *)&v28[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_voiceOverManager] = 0;
  *(_QWORD *)&v28[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView____lazy_storage___frameProcessor] = 1;

  v29 = (objc_class *)type metadata accessor for RoomCaptureView();
  v35.receiver = v28;
  v35.super_class = v29;
  v30 = objc_msgSendSuper2(&v35, sel_initWithFrame_, a1, a2, a3, a4);
  sub_2264FB6C0(0);

  return v30;
}

id RoomCaptureView.__allocating_init(frame:arSession:)(void *a1, double a2, double a3, double a4, double a5)
{
  objc_class *v5;
  id v11;
  id v12;

  v11 = objc_allocWithZone(v5);
  v12 = sub_226502334(a1, a2, a3, a4, a5);

  return v12;
}

id RoomCaptureView.init(frame:arSession:)(void *a1, double a2, double a3, double a4, double a5)
{
  id v6;

  v6 = sub_226502334(a1, a2, a3, a4, a5);

  return v6;
}

void sub_2264FB6C0(void *a1)
{
  char *v1;
  char *v2;
  void *v4;
  uint64_t v5;
  id v6;
  double v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;

  v2 = v1;
  v4 = (void *)sub_22655CD64();
  v5 = MGCopyAnswer();

  if (v5)
  {
    swift_unknownObjectRetain();
    if ((swift_dynamicCast() & 1) != 0 && (v14 & 1) != 0)
    {
      sub_2264FD754(a1);
      sub_2264FCAC8();
      sub_2264FD044();
      sub_2264FD184();
      sub_2264FD2B0();
      sub_2264FD8B8();
      v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE56B8]), sel_init, v5);
      objc_msgSend(v2, sel_bounds);
      objc_msgSend(v6, sel_setFrame_);
      LODWORD(v7) = 0;
      objc_msgSend(v6, sel_setOpacity_, v7);
      v8 = objc_msgSend(v2, sel_layer);
      objc_msgSend(v8, sel_insertSublayer_atIndex_, v6, 0);

      v9 = *(void **)&v2[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_gradientLayer];
      *(_QWORD *)&v2[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_gradientLayer] = v6;
      v10 = v6;

      sub_2264FC7F0();
    }
    else
    {
      type metadata accessor for RoomCaptureSession();
      swift_allocObject();
      v11 = a1;
      v12 = sub_226525E3C(a1);

      *(_BYTE *)(v12 + 16) = 1;
      v13 = (uint64_t *)&v2[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_captureSession];
      swift_beginAccess();
      *v13 = v12;
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

id RoomCaptureView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id RoomCaptureView.init(coder:)(void *a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  char *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _BYTE *v21;
  objc_class *v22;
  void *v23;
  id v24;
  id v25;
  char *v26;
  void *v27;
  unsigned __int8 v28;
  unsigned __int8 *v29;
  void *v30;
  id v31;
  uint64_t v32;
  char *v33;
  void *v34;
  id v35;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  unsigned __int8 v42;
  __int128 v43;
  __int128 v44;
  _QWORD v45[3];
  uint64_t v46;
  objc_super v47;

  v40 = a1;
  v2 = sub_22655D064();
  v38 = *(_QWORD *)(v2 - 8);
  v39 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v37 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_22655D04C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v4);
  v6 = sub_22655CBFC();
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_captureSession] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isModelEnabled] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView____lazy_storage___settingsManager] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARViewCamera] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_worldSpaceManager] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureSessionObserver] = 0;
  v7 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_deltaTimeArray] = MEMORY[0x24BEE4AF8];
  v1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isEndingCaptureSession] = 0;
  v8 = &v1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_logPerimeterDirectoryPath];
  *v8 = 0;
  v8[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_completeTransitionTime] = 0x3FF4000000000000;
  v9 = &v1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_sceneObserver];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_sceneShaderRenderer] = 0;
  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)&v1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_viewportSize] = _Q0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_viewOrientation] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_currentARFrame] = 0;
  v15 = &v1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_arCameraParameters];
  v16 = *MEMORY[0x24BDAEE00];
  v17 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 16);
  v18 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 32);
  v19 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 48);
  *(_OWORD *)v15 = *MEMORY[0x24BDAEE00];
  *((_OWORD *)v15 + 1) = v17;
  *((_OWORD *)v15 + 2) = v18;
  *((_OWORD *)v15 + 3) = v19;
  *((_OWORD *)v15 + 4) = v16;
  *((_OWORD *)v15 + 5) = v17;
  *((_OWORD *)v15 + 6) = v18;
  *((_OWORD *)v15 + 7) = v19;
  *((_OWORD *)v15 + 8) = xmmword_22655EF60;
  *((_QWORD *)v15 + 18) = 0;
  *((_QWORD *)v15 + 19) = 0;
  *((_QWORD *)v15 + 20) = 0x3FF0000000000000;
  *((_QWORD *)v15 + 21) = 0;
  *((_QWORD *)v15 + 22) = 0;
  *(_OWORD *)(v15 + 184) = xmmword_226567DA0;
  v20 = OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_arCameraQueue;
  sub_22643F548(0, (unint64_t *)&qword_2558442A0);
  v21 = v1;
  sub_22655CBD8();
  v45[0] = v7;
  sub_226437F28((unint64_t *)&qword_2558491E0, v5, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558442B0);
  sub_2264ABAD4((unint64_t *)&qword_2558491F0, (uint64_t *)&unk_2558442B0);
  sub_22655D214();
  (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v37, *MEMORY[0x24BEE5750], v39);
  *(_QWORD *)&v1[v20] = sub_22655D088();
  *(_QWORD *)&v21[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomBuilder] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_gradientLayer] = 0;
  v21[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isEncoding] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_voiceOverManager] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView____lazy_storage___frameProcessor] = 1;

  v22 = (objc_class *)type metadata accessor for RoomCaptureView();
  v47.receiver = v21;
  v47.super_class = v22;
  v23 = v40;
  v24 = objc_msgSendSuper2(&v47, sel_initWithCoder_, v40);
  v25 = v24;
  if (v24)
  {
    v26 = (char *)v24;
    v27 = (void *)sub_22655CD64();
    v28 = objc_msgSend(v23, sel_decodeBoolForKey_, v27);

    v29 = (unsigned __int8 *)&v26[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isModelEnabled];
    swift_beginAccess();
    *v29 = v28;
    v30 = (void *)sub_22655CD64();
    v31 = objc_msgSend(v23, sel_decodeObjectForKey_, v30);

    if (v31)
    {
      sub_22655D1CC();
      swift_unknownObjectRelease();
    }
    else
    {
      v43 = 0u;
      v44 = 0u;
    }
    sub_226502728((uint64_t)&v43, (uint64_t)v45);
    if (v46)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255848680);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v32 = v41;
        v33 = &v26[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_delegate];
        swift_beginAccess();
        *((_QWORD *)v33 + 1) = v32;
        swift_unknownObjectWeakAssign();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      sub_22643D7E4((uint64_t)v45, &qword_2558436D8);
    }
    v34 = (void *)sub_22655CD64();
    v35 = objc_msgSend(v23, sel_decodeObjectForKey_, v34);

    if (v35)
    {
      sub_22655D1CC();
      swift_unknownObjectRelease();
    }
    else
    {
      v43 = 0u;
      v44 = 0u;
    }
    sub_226502728((uint64_t)&v43, (uint64_t)v45);
    if (v46)
    {
      if ((swift_dynamicCast() & 1) != 0)
        *v29 = v42;
    }
    else
    {
      sub_22643D7E4((uint64_t)v45, &qword_2558436D8);
    }
    sub_2264FB6C0(0);

  }
  return v25;
}

uint64_t sub_2264FBEE8(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  unsigned __int8 *v4;
  uint64_t v5;
  void *v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  void *v10;
  objc_super v11;

  v3 = OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isEncoding;
  v1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isEncoding] = 1;
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for RoomCaptureView();
  objc_msgSendSuper2(&v11, sel_encodeWithCoder_, a1);
  v4 = &v1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isModelEnabled];
  swift_beginAccess();
  v5 = *v4;
  v6 = (void *)sub_22655CD64();
  objc_msgSend(a1, sel_encodeBool_forKey_, v5, v6);

  v7 = &v1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_delegate];
  swift_beginAccess();
  result = MEMORY[0x22769A944](v7);
  if (result)
  {
    v9 = result;
    swift_unknownObjectRetain();
    v10 = (void *)sub_22655CD64();
    objc_msgSend(a1, sel_encodeObject_forKey_, v9, v10);

    result = swift_unknownObjectRelease_n();
  }
  v1[v3] = 0;
  return result;
}

void sub_2264FC074()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView];
  if (v2)
  {
    v3 = v2;
    sub_22650F560();

  }
  v4 = (void *)objc_opt_self();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v1;
  v16 = sub_226503C64;
  v17 = v5;
  v6 = MEMORY[0x24BDAC760];
  v12 = MEMORY[0x24BDAC760];
  v13 = 1107296256;
  v14 = sub_2264FA450;
  v15 = &block_descriptor_135;
  v7 = _Block_copy(&v12);
  v8 = v1;
  swift_release();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  v16 = sub_226503C84;
  v17 = v9;
  v12 = v6;
  v13 = 1107296256;
  v14 = sub_22650F0BC;
  v15 = &block_descriptor_141;
  v10 = _Block_copy(&v12);
  v11 = v8;
  swift_release();
  objc_msgSend(v4, sel_animateWithDuration_animations_completion_, v7, v10, 1.25);
  _Block_release(v10);
  _Block_release(v7);
}

void sub_2264FC1D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;
  void (*v6)(uint64_t *, _QWORD);
  void *v7;
  uint64_t v8;

  v3 = OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView;
  v4 = *(void **)(a2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
  if (v4)
  {
    v5 = v4;
    v6 = (void (*)(uint64_t *, _QWORD))sub_22655C71C();
    sub_22655C704();
    v6(&v8, 0);
    sub_2264FE5A8();

    v7 = *(void **)(a2 + v3);
    if (v7)
    {
      objc_msgSend(v7, sel_removeFromSuperview);
      v4 = *(void **)(a2 + v3);
    }
    else
    {
      v4 = 0;
    }
  }
  *(_QWORD *)(a2 + v3) = 0;

}

void sub_2264FC288()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  char *v6;
  int v7;
  void *v8;
  _OWORD *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  char *v13;
  _QWORD aBlock[6];

  v1 = v0;
  sub_2264FC488();
  v2 = OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView;
  v3 = *(void **)&v0[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView];
  if (v3)
  {
    v4 = v3;
    sub_22650F9D4();

    v5 = *(_QWORD *)&v1[v2];
    if (v5)
    {
      v6 = &v1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isModelEnabled];
      swift_beginAccess();
      v7 = *v6;
      *(_BYTE *)(v5 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_isModelEnabled) = v7;
      v8 = *(void **)(v5 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView);
      if (!v8)
      {
        __break(1u);
        return;
      }
      objc_msgSend(v8, sel_setHidden_, v7 ^ 1u);
    }
  }
  if (qword_25583F950 != -1)
    swift_once();
  v9 = (_OWORD *)qword_25585AFD0;
  *(_OWORD *)(qword_25585AFD0 + 48) = 0u;
  v9[4] = 0u;
  v9[5] = 0u;
  v9[6] = 0u;
  v9[7] = 0u;
  v9[8] = 0u;
  v10 = (void *)objc_opt_self();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v1;
  aBlock[4] = sub_226503C44;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2264FA450;
  aBlock[3] = &block_descriptor_129;
  v12 = _Block_copy(aBlock);
  v13 = v1;
  swift_release();
  objc_msgSend(v10, sel_animateWithDuration_animations_, v12, 1.25);
  _Block_release(v12);
}

id sub_2264FC418(uint64_t a1, double a2, float a3)
{
  void *v5;
  id result;

  v5 = *(void **)(a1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
  if (v5)
    objc_msgSend(v5, sel_setAlpha_);
  result = *(id *)(a1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_gradientLayer);
  if (result)
  {
    *(float *)&a2 = a3;
    return objc_msgSend(result, sel_setOpacity_, a2);
  }
  return result;
}

void sub_2264FC488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v1 = v0;
  if (qword_25583F808 != -1)
    swift_once();
  v2 = qword_25585AC80;
  swift_beginAccess();
  *(_QWORD *)(v2 + 24) = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRelease();
  v3 = *(void **)(v1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView);
  if (v3)
  {
    v4 = v3;
    sub_22650FBF0();

  }
  v5 = *(void **)(v1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_worldSpaceManager);
  if (v5)
  {
    v6 = v5;
    sub_22644DCD8();

  }
}

uint64_t sub_2264FC558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t result;
  uint64_t v11;
  uint64_t Entity;
  uint64_t v13;
  _QWORD v15[4];

  v1 = sub_22655C17C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v15[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v0 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
  if (!v5)
    return 0;
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView);
  if (!v6)
    return 0;
  v7 = *(void **)(v6 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView);
  if (!v7)
    return (uint64_t)v7;
  v8 = v5;
  v9 = v7;
  sub_22655C7D0();
  sub_22655C5C0();
  swift_release();
  sub_22655C170();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  RECustomMatrixCameraComponentGetComponentType();
  result = RESceneGetComponentsOfClass();
  if ((v11 & 0x8000000000000000) == 0)
  {
    if (v11)
    {
      Entity = REComponentGetEntity();
      sub_22655C608();
      sub_22655C4AC();
      swift_release();
      __swift_project_boxed_opaque_existential_1(v15, v15[3]);
      v13 = sub_22655C458();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
      type metadata accessor for VoiceOverManager();
      swift_allocObject();
      v7 = (void *)sub_22650629C(Entity, v13);

      return (uint64_t)v7;
    }

    return 0;
  }
  __break(1u);
  return result;
}

void sub_2264FC704(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = objc_msgSend(v1, sel_traitCollection);
  LODWORD(a1) = objc_msgSend(v3, sel_hasDifferentColorAppearanceComparedToTraitCollection_, a1);

  if ((_DWORD)a1)
    sub_2264FC7F0();
}

void sub_2264FC7F0()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;

  v1 = *(void **)&v0[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_gradientLayer];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, sel_traitCollection);
    v4 = objc_msgSend(v3, sel_userInterfaceStyle);

    v5 = (void *)objc_opt_self();
    if (v4 == (id)1)
    {
      v6 = objc_msgSend(v5, sel_whiteColor);
      v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.85, 0.85, 0.85, 1.0);
    }
    else
    {
      v6 = objc_msgSend(v5, sel_blackColor);
      v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.15, 0.15, 0.15, 1.0);
    }
    v14 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255843A38);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_22655FA10;
    v9 = objc_msgSend(v6, sel_CGColor);
    type metadata accessor for CGColor(0);
    v11 = v10;
    *(_QWORD *)(v8 + 56) = v10;
    *(_QWORD *)(v8 + 32) = v9;
    v12 = objc_msgSend(v14, sel_CGColor);
    *(_QWORD *)(v8 + 88) = v11;
    *(_QWORD *)(v8 + 64) = v12;
    v13 = (void *)sub_22655CEC0();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setColors_, v13);

  }
}

void sub_2264FC9C8()
{
  char *v0;
  void *v1;
  id v2;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for RoomCaptureView();
  objc_msgSendSuper2(&v3, sel_layoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_gradientLayer];
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v0, sel_bounds);
    objc_msgSend(v2, sel_setFrame_);

  }
}

void sub_2264FCAC8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _BYTE *v13;
  id v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  void (*v20)(_BYTE *, _QWORD);
  void (*v21)(_BYTE *, _QWORD);
  void (*v22)(_BYTE *, _QWORD);
  void (*v23)(_BYTE *, _QWORD);
  void (*v24)(_BYTE *, _QWORD);
  void (*v25)(char *, uint64_t);
  void (*v26)(_BYTE *, _QWORD);
  void (*v27)(_BYTE *, _QWORD);
  void (*v28)(_BYTE *, _QWORD);
  void (*v29)(_BYTE *, _QWORD);
  void (*v30)(_BYTE *, _QWORD);
  void (*v31)(_BYTE *, _QWORD);
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double *v45;
  BOOL IsVoiceOverRunning;
  _BYTE v47[32];
  _BYTE v48[32];

  v1 = v0;
  v2 = sub_22655C6EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v47[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v47[-v7];
  v9 = sub_22655C5FC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = &v47[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  objc_msgSend(v1, sel_bounds, v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v10 + 104))(v13, *MEMORY[0x24BDE7E20], v9);
  v14 = objc_allocWithZone((Class)sub_22655C7DC());
  v15 = (void *)sub_22655C7C4();
  objc_msgSend(v1, sel_insertSubview_atIndex_, v15, 0);
  objc_msgSend(v15, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v16 = sub_22655824C();
  sub_2265589C4(v1, v16, v17, v18, v19);
  v20 = (void (*)(_BYTE *, _QWORD))sub_22655C65C();
  v21 = (void (*)(_BYTE *, _QWORD))sub_22655C650();
  sub_22655C638();
  v21(v47, 0);
  v20(v48, 0);
  v22 = (void (*)(_BYTE *, _QWORD))sub_22655C65C();
  v23 = (void (*)(_BYTE *, _QWORD))sub_22655C650();
  sub_22655C644();
  v23(v47, 0);
  v22(v48, 0);
  sub_22655C698();
  v24 = (void (*)(_BYTE *, _QWORD))sub_22655C6F8();
  sub_22650F32C(v8, (uint64_t)v5);
  v25 = *(void (**)(char *, uint64_t))(v3 + 8);
  v25(v5, v2);
  v25(v8, v2);
  v24(v48, 0);
  sub_22655C6A4();
  v26 = (void (*)(_BYTE *, _QWORD))sub_22655C6F8();
  sub_22650F32C(v8, (uint64_t)v5);
  v25(v5, v2);
  v25(v8, v2);
  v26(v48, 0);
  sub_22655C6BC();
  v27 = (void (*)(_BYTE *, _QWORD))sub_22655C6F8();
  sub_22650F32C(v8, (uint64_t)v5);
  v25(v5, v2);
  v25(v8, v2);
  v27(v48, 0);
  sub_22655C6C8();
  v28 = (void (*)(_BYTE *, _QWORD))sub_22655C6F8();
  sub_22650F32C(v8, (uint64_t)v5);
  v25(v5, v2);
  v25(v8, v2);
  v28(v48, 0);
  sub_22655C6E0();
  v29 = (void (*)(_BYTE *, _QWORD))sub_22655C6F8();
  sub_22650F32C(v8, (uint64_t)v5);
  v25(v5, v2);
  v25(v8, v2);
  v29(v48, 0);
  sub_22655C68C();
  v30 = (void (*)(_BYTE *, _QWORD))sub_22655C6F8();
  sub_22650F32C(v8, (uint64_t)v5);
  v25(v5, v2);
  v25(v8, v2);
  v30(v48, 0);
  sub_22655C6D4();
  v31 = (void (*)(_BYTE *, _QWORD))sub_22655C6F8();
  sub_22650F32C(v8, (uint64_t)v5);
  v25(v5, v2);
  v25(v8, v2);
  v31(v48, 0);
  v32 = sub_2264FA9A8();
  sub_22653E450(v15, (uint64_t)v32);
  swift_release();
  v33 = *(void **)&v1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView] = v15;
  v34 = v15;

  sub_22655C7D0();
  v35 = sub_22655C5CC();
  swift_release();
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARViewCamera] = v35;
  swift_release();
  v36 = objc_msgSend(v34, sel_window);
  if (v36
    && (v37 = v36, v38 = objc_msgSend(v36, sel_windowScene), v37, v38))
  {
    v39 = (uint64_t)objc_msgSend(v38, sel_interfaceOrientation);

  }
  else
  {
    v39 = 1;
  }
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_viewOrientation] = v39;
  objc_msgSend(v34, sel_bounds);
  v41 = v40;
  v43 = v42;
  objc_msgSend(v34, sel_contentScaleFactor);
  v45 = (double *)&v1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_viewportSize];
  *v45 = v41 * v44;
  v45[1] = v43 * v44;
  if (qword_25583F928 != -1)
    swift_once();
  IsVoiceOverRunning = UIAccessibilityIsVoiceOverRunning();
  sub_2264AA7E4(IsVoiceOverRunning);

}

void sub_2264FD044()
{
  char *v0;
  void *v1;
  char *v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  float v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;

  v1 = *(void **)&v0[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView];
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    objc_msgSend(v0, sel_bounds);
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;
    objc_msgSend(v3, sel_contentScaleFactor);
    v13 = v12;
    v14 = objc_allocWithZone((Class)type metadata accessor for RoomCaptureCoachingOverlayView());
    sub_226510A34(v5, v7, v9, v11, v13);
    v16 = v15;
    objc_msgSend(v2, sel_addSubview_, v15);
    sub_2265589C4(v2, *MEMORY[0x24BEBE158], *(double *)(MEMORY[0x24BEBE158] + 8), *(double *)(MEMORY[0x24BEBE158] + 16), *(double *)(MEMORY[0x24BEBE158] + 24));
    v17 = *(void **)&v2[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView];
    *(_QWORD *)&v2[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView] = v16;
    v18 = v16;

    v19 = sub_2264FA9A8();
    sub_22653E900((uint64_t)v19);

    swift_release();
  }
}

void sub_2264FD184()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  objc_class *v3;
  _BYTE *v4;
  id v5;
  char *v6;
  double v7;
  float v8;
  id v9;
  void *v10;
  void *v11;
  objc_super v12;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
  if (v1)
  {
    v2 = v0;
    v3 = (objc_class *)type metadata accessor for WorldSpaceManager();
    v4 = objc_allocWithZone(v3);
    v4[OBJC_IVAR____TtC8RoomPlan17WorldSpaceManager_roomCaptureSessionIsRunning] = 0;
    *(_QWORD *)&v4[OBJC_IVAR____TtC8RoomPlan17WorldSpaceManager_arView] = v1;
    v5 = v1;
    v6 = v4;
    sub_22655C7D0();
    objc_msgSend(v5, sel_contentScaleFactor);
    v8 = v7;
    type metadata accessor for WorldViewManager();
    swift_allocObject();
    *(_QWORD *)&v6[OBJC_IVAR____TtC8RoomPlan17WorldSpaceManager_worldViewManager] = sub_226505A8C(v8);

    v12.receiver = v6;
    v12.super_class = v3;
    v9 = objc_msgSendSuper2(&v12, sel_init);
    v10 = *(void **)(v2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_worldSpaceManager);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_worldSpaceManager) = v9;

    v11 = sub_2264FA9A8();
    sub_22653F264((uint64_t)v11);

    swift_release();
  }
}

uint64_t sub_2264FD2B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjCClassFromMetadata;
  id v8;
  id v9;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;

  v1 = sub_22655CB84();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  if (sub_2264FAA50())
  {
    type metadata accessor for SceneShaderRenderer();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v0 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_sceneShaderRenderer) = sub_22649F9DC(v6);
    swift_release();
    return swift_release();
  }
  else
  {
    type metadata accessor for Constants();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v8 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v9 = objc_msgSend(v8, sel_bundleIdentifier);

    if (v9)
    {
      sub_22655CD88();

    }
    sub_22643F548(0, (unint64_t *)&qword_255843DE0);
    sub_22655D124();
    sub_22655CB90();
    v11 = sub_22655CB6C();
    v12 = sub_22655CFF8();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_226423000, v11, v12, "Cannot configure scene renderer because frameProcessor is nil", v13, 2u);
      MEMORY[0x22769A884](v13, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t sub_2264FD754(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;

  v2 = v1;
  type metadata accessor for RoomCaptureSession();
  swift_allocObject();
  v4 = a1;
  v5 = sub_226525E3C(a1);

  *(_BYTE *)(v5 + 16) = 1;
  v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_captureSession);
  swift_beginAccess();
  *v6 = v5;
  result = swift_release();
  v8 = *v6;
  if (!*v6)
  {
    __break(1u);
    goto LABEL_6;
  }
  swift_beginAccess();
  *(_BYTE *)(v8 + 65) = 0;
  type metadata accessor for RoomCaptureSessionInternalObserver();
  v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  result = swift_unknownObjectWeakAssign();
  if (!*v6)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  *(_QWORD *)(*v6 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate + 8) = &off_24EDE5E80;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureSessionObserver) = v9;
  result = swift_release();
  if (*v6)
  {
    *(_QWORD *)(*v6 + 48) = &off_24EDE5E28;
    swift_unknownObjectWeakAssign();
    v10 = sub_2264FA9A8();
    sub_22653F380(v10);
    return swift_release();
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_2264FD8B8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void (*v5)(_BYTE *, _QWORD);
  id v6;
  _BYTE v7[32];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARViewCamera);
    if (v2)
    {
      v6 = v1;
      swift_retain();
      sub_2264FD9E0(v6, v2);
      sub_2264FA9A8();
      v3 = sub_226551D14();
      swift_release();
      v4 = *((_QWORD *)v3 + 2);
      swift_bridgeObjectRelease();
      if (v4)
      {
        swift_allocObject();
        swift_unknownObjectWeakInit();
        swift_retain();
        v5 = (void (*)(_BYTE *, _QWORD))sub_22655C71C();
        sub_22655C704();
        v5(v7, 0);
        swift_release();
        swift_release();

      }
      else
      {
        swift_release();

      }
    }
  }
}

uint64_t sub_2264FD9E0(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  uint64_t v8;
  _OWORD v10[2];
  uint64_t v11;
  _BYTE v12[40];

  sub_2264FE7FC();
  sub_22655C7D0();
  sub_22655C4E8();
  v11 = 0;
  memset(v10, 0, sizeof(v10));
  v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v5;
  v6[3] = a1;
  v6[4] = a2;
  v7 = a1;
  swift_retain();
  sub_22655C5F0();
  swift_release();
  swift_release();
  sub_22643D7E4((uint64_t)v10, (uint64_t *)&unk_255849190);
  v8 = v2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_sceneObserver;
  swift_beginAccess();
  sub_226503AF0((uint64_t)v12, v8);
  return swift_endAccess();
}

uint64_t sub_2264FDB18(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t result;
  char *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  float64x2_t *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t isEscapingClosureAtFileLocation;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char v32;
  uint64_t v33;
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char v38;
  unsigned __int8 *v39;
  int v40;
  unint64_t v41;
  float v42;
  char *v43;
  double v44;
  void *v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char *v65;
  char *v66;
  double Width;
  double Height;
  double v69;
  uint64_t *v70;
  uint64_t v71;
  __int128 v72;
  void *v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  float v77;
  unint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  NSObject *queue;
  void *v83;
  id v84[2];
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(uint64_t);
  void *v88;
  uint64_t (*v89)();
  uint64_t v90;
  __n128 aBlock;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  CGRect v104;
  CGRect v105;

  v6 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x22769A944](v6);
  if (result)
  {
    v8 = (char *)result;
    objc_msgSend(a3, sel_bounds);
    v10 = v9;
    v12 = v11;
    objc_msgSend(a3, sel_contentScaleFactor);
    v14 = (float64x2_t *)&v8[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_viewportSize];
    v14->f64[0] = v10 * v13;
    v14->f64[1] = v12 * v13;
    v83 = a3;
    v15 = objc_msgSend(a3, sel_window);
    if (v15
      && (v16 = v15, v17 = objc_msgSend(v15, sel_windowScene),
                     v16,
                     v17))
    {
      v18 = (uint64_t)objc_msgSend(v17, sel_interfaceOrientation);

    }
    else
    {
      v18 = 1;
    }
    *(_QWORD *)&v8[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_viewOrientation] = v18;
    v19 = *(NSObject **)&v8[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_arCameraQueue];
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v8;
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = sub_226503B80;
    *(_QWORD *)(v21 + 24) = v20;
    *(_QWORD *)&v93 = sub_22646F0CC;
    *((_QWORD *)&v93 + 1) = v21;
    v22 = MEMORY[0x24BDAC760];
    aBlock.n128_u64[0] = MEMORY[0x24BDAC760];
    aBlock.n128_u64[1] = 1107296256;
    *(_QWORD *)&v92 = sub_226558F38;
    *((_QWORD *)&v92 + 1) = &block_descriptor_102;
    v23 = _Block_copy(&aBlock);
    v24 = v8;
    swift_retain();
    swift_release();
    dispatch_sync(v19, v23);
    _Block_release(v23);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      isEscapingClosureAtFileLocation = (uint64_t)&v24[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_arCameraParameters];
      swift_beginAccess();
      v100 = *(_OWORD *)(isEscapingClosureAtFileLocation + 144);
      v101 = *(_OWORD *)(isEscapingClosureAtFileLocation + 160);
      v102 = *(_OWORD *)(isEscapingClosureAtFileLocation + 176);
      v103 = *(_QWORD *)(isEscapingClosureAtFileLocation + 192);
      v96 = *(_OWORD *)(isEscapingClosureAtFileLocation + 80);
      v97 = *(_OWORD *)(isEscapingClosureAtFileLocation + 96);
      v98 = *(_OWORD *)(isEscapingClosureAtFileLocation + 112);
      v99 = *(_OWORD *)(isEscapingClosureAtFileLocation + 128);
      v92 = *(_OWORD *)(isEscapingClosureAtFileLocation + 16);
      v93 = *(_OWORD *)(isEscapingClosureAtFileLocation + 32);
      v94 = *(_OWORD *)(isEscapingClosureAtFileLocation + 48);
      v95 = *(_OWORD *)(isEscapingClosureAtFileLocation + 64);
      aBlock = *(__n128 *)isEscapingClosureAtFileLocation;
      sub_2265029FC(a4, (__int128 *)&aBlock);
      sub_22655C4DC();
      LODWORD(v10) = v26;
      if (qword_25583F950 == -1)
      {
LABEL_8:
        v27 = qword_25585AFD0;
        if (*(_BYTE *)(qword_25585AFD0 + 32) != 1)
          goto LABEL_10;
        v28 = *(_QWORD *)(isEscapingClosureAtFileLocation + 128);
        queue = *(NSObject **)(qword_25585AFD0 + 40);
        v29 = swift_allocObject();
        *(_QWORD *)(v29 + 16) = v27;
        *(_QWORD *)(v29 + 24) = v28;
        v30 = swift_allocObject();
        *(_QWORD *)(v30 + 16) = sub_226503BFC;
        *(_QWORD *)(v30 + 24) = v29;
        v89 = sub_22646F12C;
        v90 = v30;
        v85 = v22;
        v86 = 1107296256;
        v87 = sub_226558F38;
        v88 = &block_descriptor_122_0;
        v31 = _Block_copy(&v85);
        swift_retain();
        swift_retain();
        swift_release();
        dispatch_sync(queue, v31);
        _Block_release(v31);
        v32 = swift_isEscapingClosureAtFileLocation();
        swift_release();
        swift_release();
        if ((v32 & 1) != 0)
        {
          __break(1u);
        }
        else
        {
LABEL_10:
          if (qword_25583F8C0 != -1)
            swift_once();
          v33 = qword_25585AE48;
          if (*(_BYTE *)(qword_25585AE48 + 32) != 1)
            goto LABEL_14;
          v34 = *(NSObject **)(qword_25585AE48 + 40);
          v35 = swift_allocObject();
          *(_QWORD *)(v35 + 16) = v33;
          *(_DWORD *)(v35 + 24) = LODWORD(v10);
          v36 = swift_allocObject();
          *(_QWORD *)(v36 + 16) = sub_226503BBC;
          *(_QWORD *)(v36 + 24) = v35;
          v89 = sub_22646F12C;
          v90 = v36;
          v85 = v22;
          v86 = 1107296256;
          v87 = sub_226558F38;
          v88 = &block_descriptor_112;
          v37 = _Block_copy(&v85);
          swift_retain();
          swift_retain();
          swift_release();
          dispatch_sync(v34, v37);
          _Block_release(v37);
          v38 = swift_isEscapingClosureAtFileLocation();
          swift_release();
          swift_release();
          if ((v38 & 1) == 0)
          {
LABEL_14:
            v39 = (unsigned __int8 *)sub_2264FA9A8();
            swift_beginAccess();
            v40 = v39[155];
            swift_release();
            if (v40 != 1)
              goto LABEL_19;
            if (qword_25583F9D8 == -1)
            {
LABEL_16:
              v41 = sub_226558F90();
              if ((v41 & 0x100000000) == 0)
              {
                v42 = *(float *)&v41;
                sub_22653F91C(*(float *)&v41);
                sub_22653FA24(v42);
                v43 = &v24[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_captureSession];
                result = swift_beginAccess();
                if (!*(_QWORD *)v43)
                  goto LABEL_59;
                swift_retain();
                sub_2264D0F20();
                swift_release();
              }
LABEL_19:
              if (qword_25583F928 != -1)
                swift_once();
              v44 = *(float *)&v10;
              sub_2264AA808(v44);
              if (qword_25583F808 != -1)
                swift_once();
              sub_22643D19C(*(__n128 *)isEscapingClosureAtFileLocation, *(__n128 *)(isEscapingClosureAtFileLocation + 16), *(__n128 *)(isEscapingClosureAtFileLocation + 32), *(__n128 *)(isEscapingClosureAtFileLocation + 48));
              v45 = *(void **)&v24[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_worldSpaceManager];
              if (v45)
              {
                v46 = (uint64_t)vcvt_f32_f64(*v14);
                v47 = v45;
                sub_2264480DC(v46, 0, v44);

              }
              v48 = OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView;
              v49 = *(_QWORD *)&v24[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView];
              if (v49)
              {
                v50 = *(_QWORD *)(isEscapingClosureAtFileLocation + 8);
                v52 = *(_QWORD *)(isEscapingClosureAtFileLocation + 16);
                v51 = *(_QWORD *)(isEscapingClosureAtFileLocation + 24);
                v54 = *(_QWORD *)(isEscapingClosureAtFileLocation + 32);
                v53 = *(_QWORD *)(isEscapingClosureAtFileLocation + 40);
                v56 = *(_QWORD *)(isEscapingClosureAtFileLocation + 48);
                v55 = *(_QWORD *)(isEscapingClosureAtFileLocation + 56);
                v57 = v49 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_cameraTransform;
                *(_QWORD *)v57 = *(_QWORD *)isEscapingClosureAtFileLocation;
                *(_QWORD *)(v57 + 8) = v50;
                *(_QWORD *)(v57 + 16) = v52;
                *(_QWORD *)(v57 + 24) = v51;
                *(_QWORD *)(v57 + 32) = v54;
                *(_QWORD *)(v57 + 40) = v53;
                *(_QWORD *)(v57 + 48) = v56;
                *(_QWORD *)(v57 + 56) = v55;
                *(_BYTE *)(v57 + 64) = 0;
              }
              result = UIAccessibilityIsVoiceOverRunning();
              if (!(_DWORD)result || (v58 = *(_QWORD *)&v24[v48]) == 0)
              {

                return swift_release();
              }
              if (*(_QWORD *)(v58 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse))
              {
                swift_retain();
                v59 = sub_22643501C();
                swift_release();
                v60 = *(char **)&v24[v48];
                if (!v60)
                {

LABEL_50:
                  swift_release();
                  return swift_release();
                }
                v61 = OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_voiceOverManager;
                v62 = *(_QWORD *)&v24[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_voiceOverManager];
                if (v62)
                {
                  v63 = *(_QWORD *)&v60[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arcBallCamera];
                  if (v63)
                    v64 = *(_BYTE *)(v63 + qword_25585B1D0) ^ 1;
                  else
                    v64 = 0;
                  v66 = v60;
                  swift_retain();
                  objc_msgSend(v83, sel_frame);
                  Width = CGRectGetWidth(v104);
                  objc_msgSend(v83, sel_frame);
                  Height = CGRectGetHeight(v105);
                  if ((v64 & 1) != 0)
                  {
                    if (qword_25583F800 != -1)
                      swift_once();
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    v69 = Height;
                    v70 = (uint64_t *)&v24[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_captureSession];
                    result = swift_beginAccess();
                    v71 = *v70;
                    if (!*v70)
                    {
LABEL_61:
                      __break(1u);
                      goto LABEL_62;
                    }
                    swift_retain();
                    result = sub_22655C710();
                    *(_OWORD *)v84 = v72;
                    v73 = *(void **)&v66[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView];
                    if (!v73)
                    {
LABEL_62:
                      __break(1u);
                      return result;
                    }
                    v74 = v73;
                    v75 = sub_22655C7D0();

                    v76 = *(_QWORD *)(v62 + 48);
                    if (v76 <= 29)
                    {
                      *(_QWORD *)(v62 + 48) = v76 + 1;
                      swift_release();
                      swift_release();
                      goto LABEL_48;
                    }
                    v77 = Width / v69;
                    *(_QWORD *)(v62 + 48) = 0;
                    v78 = sub_226507910(v71, *(__n128 *)v84, v77, v59, v75);
                    sub_22650D280(v78, v79);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_release();
                    swift_release();
                  }
                  sub_22650FD2C();
                  swift_bridgeObjectRelease();
LABEL_48:
                  v80 = &v24[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_captureSession];
                  result = swift_beginAccess();
                  if (*(_QWORD *)v80)
                  {
                    v81 = swift_retain();
                    sub_226506368(v81);

                    swift_release();
                    swift_release();

                    goto LABEL_50;
                  }
                  goto LABEL_60;
                }
                v65 = v60;
                *(_QWORD *)&v24[v61] = sub_2264FC558();

                swift_release();
                swift_release();
                return swift_release();
              }
              __break(1u);
LABEL_59:
              __break(1u);
LABEL_60:
              __break(1u);
              goto LABEL_61;
            }
LABEL_57:
            swift_once();
            goto LABEL_16;
          }
        }
        __break(1u);
        goto LABEL_57;
      }
    }
    swift_once();
    goto LABEL_8;
  }
  return result;
}

void sub_2264FE4C8(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;
  id v6;
  __int128 v7;
  _OWORD v8[3];

  v1 = *(void **)(a1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_currentARFrame);
  if (v1)
  {
    v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_viewOrientation);
    v3 = *(double *)(a1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_viewportSize);
    v4 = *(double *)(a1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_viewportSize + 8);
    v5 = a1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_arCameraParameters;
    swift_beginAccess();
    v6 = v1;
    sub_22655A758(v6, v2, v3, v4);
    swift_endAccess();
    if (sub_2264FAA50())
    {
      v7 = *(_OWORD *)(v5 + 152);
      v8[0] = *(_OWORD *)(v5 + 136);
      v8[1] = v7;
      v8[2] = *(_OWORD *)(v5 + 168);
      sub_226494008(v6, v8);
      swift_release();
    }

  }
}

uint64_t sub_2264FE5A8()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD v3[2];
  uint64_t v4;
  _BYTE v5[40];

  sub_2264FE7FC();
  sub_22655C7D0();
  sub_22655C4E8();
  v4 = 0;
  memset(v3, 0, sizeof(v3));
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_22655C5F0();
  swift_release();
  swift_release();
  sub_22643D7E4((uint64_t)v3, (uint64_t *)&unk_255849190);
  v1 = v0 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_sceneObserver;
  swift_beginAccess();
  sub_226503AF0((uint64_t)v5, v1);
  return swift_endAccess();
}

void sub_2264FE6A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  __n128 *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x22769A944](v2);
  if (v3)
  {
    v4 = (char *)v3;
    sub_22655C4DC();
    if (qword_25583F808 != -1)
      swift_once();
    v5 = (__n128 *)&v4[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_arCameraParameters];
    swift_beginAccess();
    sub_22643D19C(*v5, v5[1], v5[2], v5[3]);
    if (UIAccessibilityIsVoiceOverRunning())
    {
      v6 = *(char **)&v4[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView];
      if (v6)
      {
        v7 = *(_QWORD *)&v6[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arcBallCamera];
        if (v7 && (*(_BYTE *)(v7 + qword_25585B1D0) & 1) == 0)
        {
          v9 = qword_25583F800;
          v10 = v6;
          if (v9 != -1)
            swift_once();
          swift_bridgeObjectRetain();
        }
        else
        {
          v8 = v6;
        }
        sub_22650FD2C();

        swift_bridgeObjectRelease();
      }
    }

  }
}

uint64_t sub_2264FE7FC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[4];
  __int128 v4;
  __int128 v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_sceneObserver;
  swift_beginAccess();
  sub_22643D7A0(v1, (uint64_t)&v4, &qword_255847158);
  if (*((_QWORD *)&v5 + 1))
  {
    sub_226438600((uint64_t)&v4, (uint64_t)v3);
    sub_22643D7E4((uint64_t)&v4, &qword_255847158);
    __swift_project_boxed_opaque_existential_1(v3, v3[3]);
    sub_22655CB9C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  else
  {
    sub_22643D7E4((uint64_t)&v4, &qword_255847158);
  }
  v6 = 0;
  v4 = 0u;
  v5 = 0u;
  swift_beginAccess();
  sub_226503AF0((uint64_t)&v4, v1);
  return swift_endAccess();
}

void sub_2264FE8EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x22769A944](v3);
  if (v4)
  {
    v5 = (void *)v4;
    if (*(_QWORD *)(v4 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_sceneShaderRenderer))
    {
      swift_retain();
      sub_2264A14EC(a1);
      swift_release();
    }

  }
}

id RoomCaptureView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  *((_QWORD *)sub_2264FA9A8() + 3) = 0;
  swift_unknownObjectWeakAssign();
  swift_release();
  sub_2264FC488();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RoomCaptureView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2264FEB70(uint64_t a1, uint64_t a2)
{
  return sub_2264FEDA4(a1, a2, (uint64_t)&unk_24EDE62B8, (uint64_t)sub_226503A90, (uint64_t)&block_descriptor_88);
}

void sub_2264FEB8C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  id v10;
  _BYTE *v11;
  _BYTE *v12;
  char *v13;
  char *v14;

  v5 = a1 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x22769A944](v5);
  if (!v6)
    return;
  v7 = (char *)v6;
  if (qword_25583F938 != -1)
    swift_once();
  v8 = &v7[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_captureSession];
  swift_beginAccess();
  v9 = *(_QWORD *)v8;
  if (!v9)
  {
    __break(1u);
    goto LABEL_18;
  }
  swift_beginAccess();
  v10 = *(id *)(v9 + 56);
  sub_2264B13F0(v10);

  if (qword_25583F808 != -1)
    swift_once();
  sub_226439E3C(a2, a3);
  v11 = *(_BYTE **)&v7[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_worldSpaceManager];
  if (v11)
  {
    v11[OBJC_IVAR____TtC8RoomPlan17WorldSpaceManager_roomCaptureSessionIsRunning] = 1;
    v12 = v11;
    sub_226449388(a2);

  }
  v13 = *(char **)&v7[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView];
  if (!v13)
    goto LABEL_12;
  if (!*(_QWORD *)&v13[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse])
  {
LABEL_18:
    __break(1u);
    return;
  }
  v14 = v13;
  swift_retain();
  sub_22643501C();
  sub_226449388(a2);

  swift_release();
  swift_release();
LABEL_12:
  if (UIAccessibilityIsVoiceOverRunning())
  {
    if (*(_QWORD *)&v7[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_voiceOverManager])
    {
      swift_retain();
      sub_226506D84(a2);
      swift_release();
    }
  }

}

uint64_t sub_2264FED88(uint64_t a1, uint64_t a2)
{
  return sub_2264FEDA4(a1, a2, (uint64_t)&unk_24EDE6268, (uint64_t)sub_226503984, (uint64_t)&block_descriptor_81);
}

uint64_t sub_2264FEDA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v24 = a4;
  v25 = a5;
  v22 = a1;
  v23 = a3;
  v6 = sub_22655CBB4();
  v28 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22655CBFC();
  v26 = *(_QWORD *)(v9 - 8);
  v27 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CapturedRoom(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  sub_22655C4D0();
  sub_22655C4C4();
  sub_22655C4B8();
  swift_release();
  sub_22655C8F0();
  swift_release();
  REEngineConfigurationCreateFromEngine();
  v15 = (id)REEngineConfigurationGetEngineQueue();
  if (!v15)
  {
    sub_22643F548(0, (unint64_t *)&qword_2558442A0);
    v15 = (id)sub_22655D070();
  }
  v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_22643D704(v22, (uint64_t)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CapturedRoom);
  v17 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v16;
  sub_2265037A0((uint64_t)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17);
  *(_QWORD *)(v18 + ((v14 + v17 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  aBlock[4] = v24;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2264FA450;
  aBlock[3] = v25;
  v19 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_22655CBCC();
  v29 = MEMORY[0x24BEE4AF8];
  sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
  sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
  sub_22655D214();
  MEMORY[0x22769975C](0, v11, v8, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v27);
  swift_release();
  return swift_release();
}

void sub_2264FF0A4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _BYTE *v8;
  _BYTE *v9;
  char *v10;
  char *v11;

  v5 = a1 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x22769A944](v5);
  if (v6)
  {
    v7 = (char *)v6;
    if (qword_25583F808 != -1)
      swift_once();
    sub_226439E60(a2, a3);
    v8 = *(_BYTE **)&v7[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_worldSpaceManager];
    if (v8)
    {
      v8[OBJC_IVAR____TtC8RoomPlan17WorldSpaceManager_roomCaptureSessionIsRunning] = 1;
      v9 = v8;
      sub_22644A16C((uint64_t)a2);

    }
    v10 = *(char **)&v7[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView];
    if (v10)
    {
      if (*(_QWORD *)&v10[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse])
      {
        v11 = v10;
        swift_retain();
        sub_22643501C();
        sub_22644A16C((uint64_t)a2);

        swift_release();
        swift_release();
      }
      else
      {
        __break(1u);
      }
    }
    else
    {

    }
  }
}

uint64_t sub_2264FF1F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v17 = a1;
  v1 = sub_22655CBB4();
  v20 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_22655CBFC();
  v18 = *(_QWORD *)(v4 - 8);
  v19 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CapturedRoom(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  sub_22655C4D0();
  sub_22655C4C4();
  sub_22655C4B8();
  swift_release();
  sub_22655C8F0();
  swift_release();
  REEngineConfigurationCreateFromEngine();
  v10 = (id)REEngineConfigurationGetEngineQueue();
  if (!v10)
  {
    sub_22643F548(0, (unint64_t *)&qword_2558442A0);
    v10 = (id)sub_22655D070();
  }
  v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_22643D704(v17, (uint64_t)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CapturedRoom);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v11;
  sub_2265037A0((uint64_t)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12);
  aBlock[4] = sub_226503934;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2264FA450;
  aBlock[3] = &block_descriptor_74;
  v14 = _Block_copy(aBlock);
  swift_retain();
  sub_22655CBCC();
  v21 = MEMORY[0x24BEE4AF8];
  sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
  sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
  sub_22655D214();
  MEMORY[0x22769975C](0, v6, v3, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v19);
  swift_release();
  return swift_release();
}

void sub_2264FF4E0(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _BYTE *v6;
  _BYTE *v7;
  char *v8;
  char *v9;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x22769A944](v3);
  if (v4)
  {
    v5 = (char *)v4;
    if (qword_25583F808 != -1)
      swift_once();
    sub_22643A15C(a2);
    v6 = *(_BYTE **)&v5[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_worldSpaceManager];
    if (v6)
    {
      v6[OBJC_IVAR____TtC8RoomPlan17WorldSpaceManager_roomCaptureSessionIsRunning] = 1;
      v7 = v6;
      sub_22644A218(a2);

    }
    v8 = *(char **)&v5[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView];
    if (v8)
    {
      if (*(_QWORD *)&v8[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse])
      {
        v9 = v8;
        swift_retain();
        sub_22643501C();
        sub_22644A218(a2);

        swift_release();
        swift_release();
      }
      else
      {
        __break(1u);
      }
    }
    else
    {

    }
  }
}

uint64_t sub_2264FF628(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  int v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  _QWORD v19[8];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v2 = sub_22655CB84();
  v19[6] = *(_QWORD *)(v2 - 8);
  v19[7] = v2;
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_22655CBB4();
  v23 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22655CBFC();
  v21 = *(_QWORD *)(v6 - 8);
  v22 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CapturedRoom(0);
  v20 = *(_QWORD *)(v9 - 8);
  v10 = *(_QWORD *)(v20 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (unsigned __int8 *)sub_2264FA9A8();
  swift_beginAccess();
  v12 = v11[256];
  swift_release();
  if (v12 == 1)
    sub_226454A60(a1);
  sub_22655C4D0();
  sub_22655C4C4();
  sub_22655C4B8();
  swift_release();
  sub_22655C8F0();
  swift_release();
  REEngineConfigurationCreateFromEngine();
  v13 = (id)REEngineConfigurationGetEngineQueue();
  if (!v13)
  {
    sub_22643F548(0, (unint64_t *)&qword_2558442A0);
    v13 = (id)sub_22655D070();
  }
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_22643D704((uint64_t)a1, (uint64_t)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CapturedRoom);
  v15 = (*(unsigned __int8 *)(v20 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v14;
  sub_2265037A0((uint64_t)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
  aBlock[4] = sub_226503844;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2264FA450;
  aBlock[3] = &block_descriptor_67;
  v17 = _Block_copy(aBlock);
  swift_retain();
  sub_22655CBCC();
  v24 = MEMORY[0x24BEE4AF8];
  sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
  sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
  sub_22655D214();
  MEMORY[0x22769975C](0, v8, v5, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
  swift_release();
  return swift_release();
}

void sub_2264FFC20(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x22769A944](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = *(void **)(v4 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView);
    if (v6)
    {
      v7 = v6;
      sub_22650FDC4(a2);

    }
  }
}

void sub_2264FFC9C(__int128 *a1, void *a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  char *v17;
  uint64_t v18;
  uint64_t ObjectType;
  id v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  void *v30;
  id v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  __int128 aBlock;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;

  v3 = v2;
  v6 = sub_22655CBB4();
  v36 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_22655CBFC();
  v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22655CBC0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v46 = a1[2];
  v47 = v15;
  v48 = a1[4];
  v16 = a1[1];
  v44 = *a1;
  v45 = v16;
  if (v3[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isEndingCaptureSession] == 1)
  {
    v17 = &v3[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_delegate];
    swift_beginAccess();
    if (!MEMORY[0x22769A944](v17))
      goto LABEL_6;
    v18 = *((_QWORD *)v17 + 1);
    ObjectType = swift_getObjectType();
    v41 = v46;
    v42 = v47;
    v43 = v48;
    v40 = v45;
    aBlock = v44;
    LOBYTE(v18) = (*(uint64_t (**)(__int128 *, void *, uint64_t, uint64_t))(v18 + 8))(&aBlock, a2, ObjectType, v18);
    swift_unknownObjectRelease();
    if ((v18 & 1) == 0)
    {
      sub_2264FC288();
    }
    else
    {
LABEL_6:
      if (!a2
        || (*(_QWORD *)&aBlock = a2,
            v20 = a2,
            __swift_instantiateConcreteTypeFromMangledName(&qword_2558436F8),
            (swift_dynamicCast() & 1) == 0)
        || v38 != 2)
      {
        v21 = &v3[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isModelEnabled];
        swift_beginAccess();
        if ((*v21 & 1) != 0)
          goto LABEL_12;
        v22 = OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView;
        v23 = *(_QWORD *)&v3[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView];
        if (!v23)
          goto LABEL_12;
        *(_BYTE *)(v23 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_isModelEnabled) = 1;
        v24 = *(void **)(v23 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView);
        if (v24)
        {
          objc_msgSend(v24, sel_setHidden_, 0);
          v25 = *(void **)&v3[v22];
          if (v25)
            objc_msgSend(v25, sel_setAlpha_, 0.0);
LABEL_12:
          sub_2264FC074();
          sub_22643F548(0, (unint64_t *)&qword_2558442A0);
          (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEE5488], v11);
          v26 = (void *)sub_22655D094();
          (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
          v27 = swift_allocObject();
          *(_QWORD *)(v27 + 16) = v3;
          v28 = v47;
          *(_OWORD *)(v27 + 64) = v46;
          *(_OWORD *)(v27 + 80) = v28;
          *(_OWORD *)(v27 + 96) = v48;
          v29 = v45;
          *(_OWORD *)(v27 + 32) = v44;
          *(_OWORD *)(v27 + 48) = v29;
          *(_QWORD *)(v27 + 112) = a2;
          *(_QWORD *)&v41 = sub_2265035E4;
          *((_QWORD *)&v41 + 1) = v27;
          *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
          *((_QWORD *)&aBlock + 1) = 1107296256;
          *(_QWORD *)&v40 = sub_2264FA450;
          *((_QWORD *)&v40 + 1) = &block_descriptor_31_0;
          v30 = _Block_copy(&aBlock);
          v31 = a2;
          v32 = v3;
          sub_2264FA1AC((uint64_t)&v44);
          sub_22655CBCC();
          v37 = MEMORY[0x24BEE4AF8];
          sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
          sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
          sub_22655D214();
          MEMORY[0x22769975C](0, v10, v8, v30);
          _Block_release(v30);

          (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v6);
          (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v35);
          swift_release();
          return;
        }
        __break(1u);
      }
    }
  }
}

void sub_226500114(char *a1, _OWORD *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int64x2_t *v16;
  __int8 *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  void *v23;
  char *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v6 = sub_22655CBB4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22655CBFC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isEndingCaptureSession] == 1)
  {
    v27 = v12;
    v28 = v7;
    v15 = OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomBuilder;
    if (!*(_QWORD *)&a1[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomBuilder])
    {
      v26 = 1;
      type metadata accessor for RoomBuilder();
      v16 = (int64x2_t *)swift_allocObject();
      v16[1].i8[8] = 0;
      v16[2] = vdupq_n_s64(1uLL);
      v17 = &v16->i8[OBJC_IVAR____TtC8RoomPlan11RoomBuilder_floorPlanModelContinuation];
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255848220);
      (*(void (**)(__int8 *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
      v16[1].i64[0] = v26;
      v16[1].i8[8] = 1;
      *(_QWORD *)&a1[v15] = v16;
      swift_release();
    }
    sub_22655C4D0();
    sub_22655C4C4();
    sub_22655C4B8();
    swift_release();
    sub_22655C8F0();
    swift_release();
    REEngineConfigurationCreateFromEngine();
    v19 = (id)REEngineConfigurationGetEngineQueue();
    if (!v19)
    {
      sub_22643F548(0, (unint64_t *)&qword_2558442A0);
      v19 = (id)sub_22655D070();
    }
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = a1;
    v21 = a2[3];
    *(_OWORD *)(v20 + 64) = a2[2];
    *(_OWORD *)(v20 + 80) = v21;
    *(_OWORD *)(v20 + 96) = a2[4];
    v22 = a2[1];
    *(_OWORD *)(v20 + 32) = *a2;
    *(_OWORD *)(v20 + 48) = v22;
    *(_QWORD *)(v20 + 112) = a3;
    aBlock[4] = sub_226503634;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2264FA450;
    aBlock[3] = &block_descriptor_37_0;
    v23 = _Block_copy(aBlock);
    v24 = a1;
    sub_2264FA1AC((uint64_t)a2);
    v25 = a3;
    sub_22655CBCC();
    v29 = MEMORY[0x24BEE4AF8];
    sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
    sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
    sub_22655D214();
    MEMORY[0x22769975C](0, v14, v9, v23);
    _Block_release(v23);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v27);
    swift_release();
  }
}

uint64_t sub_226500444(uint64_t a1, _OWORD *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558487F8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22655CF5C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_22655CF44();
  swift_retain();
  sub_2264FA1AC((uint64_t)a2);
  v10 = a3;
  v11 = sub_22655CF38();
  v12 = swift_allocObject();
  v13 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v12 + 16) = v11;
  *(_QWORD *)(v12 + 24) = v13;
  *(_QWORD *)(v12 + 32) = v9;
  v14 = a2[3];
  *(_OWORD *)(v12 + 80) = a2[2];
  *(_OWORD *)(v12 + 96) = v14;
  *(_OWORD *)(v12 + 112) = a2[4];
  v15 = a2[1];
  *(_OWORD *)(v12 + 48) = *a2;
  *(_OWORD *)(v12 + 64) = v15;
  *(_QWORD *)(v12 + 128) = a3;
  swift_release();
  sub_2265014E0((uint64_t)v7, (uint64_t)&unk_255848808, v12);
  return swift_release();
}

uint64_t sub_22650058C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6[44] = a5;
  v6[45] = a6;
  v6[43] = a4;
  v7 = sub_22655CBB4();
  v6[46] = v7;
  v6[47] = *(_QWORD *)(v7 - 8);
  v6[48] = swift_task_alloc();
  v8 = sub_22655CBFC();
  v6[49] = v8;
  v6[50] = *(_QWORD *)(v8 - 8);
  v6[51] = swift_task_alloc();
  v9 = sub_22655CC14();
  v6[52] = v9;
  v6[53] = *(_QWORD *)(v9 - 8);
  v6[54] = swift_task_alloc();
  v6[55] = swift_task_alloc();
  v6[56] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AE0);
  v6[57] = swift_task_alloc();
  v6[58] = swift_task_alloc();
  v6[59] = swift_task_alloc();
  v6[60] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255849170);
  v6[61] = swift_task_alloc();
  v10 = type metadata accessor for CapturedRoom(0);
  v6[62] = v10;
  v6[63] = *(_QWORD *)(v10 - 8);
  v6[64] = swift_task_alloc();
  v6[65] = swift_task_alloc();
  v6[66] = swift_task_alloc();
  v6[67] = swift_task_alloc();
  sub_22655CF44();
  v6[68] = sub_22655CF38();
  v6[69] = sub_22655CF14();
  v6[70] = v11;
  return swift_task_switch();
}

uint64_t sub_22650074C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _QWORD *v8;
  void *v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 344) + 16;
  swift_beginAccess();
  v2 = (char *)MEMORY[0x22769A944](v1);
  *(_QWORD *)(v0 + 568) = v2;
  if (!v2)
    goto LABEL_7;
  if ((v2[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isEndingCaptureSession] & 1) == 0)
  {

LABEL_7:
    swift_release();
    goto LABEL_8;
  }
  v3 = *(_QWORD *)&v2[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomBuilder];
  *(_QWORD *)(v0 + 576) = v3;
  if (v3)
  {
    v4 = *(_OWORD **)(v0 + 352);
    *(_OWORD *)(v0 + 16) = *v4;
    v5 = v4[4];
    v7 = v4[1];
    v6 = v4[2];
    *(_OWORD *)(v0 + 64) = v4[3];
    *(_OWORD *)(v0 + 80) = v5;
    *(_OWORD *)(v0 + 32) = v7;
    *(_OWORD *)(v0 + 48) = v6;
    swift_retain();
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 584) = v8;
    *v8 = v0;
    v8[1] = sub_226500948;
    return sub_2264F7CE8(*(_QWORD *)(v0 + 488), (_OWORD *)(v0 + 16));
  }
  swift_release();
  v10 = *(void **)(v0 + 568);
  v11 = *(_QWORD *)(v0 + 488);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 504) + 56))(v11, 1, 1, *(_QWORD *)(v0 + 496));

  sub_22643D7E4(v11, &qword_255849170);
LABEL_8:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_226500948()
{
  void *v0;

  swift_task_dealloc();
  if (v0)

  swift_release();
  return swift_task_switch();
}

void sub_2265009D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t ObjectType;
  _BYTE *v55;
  uint64_t v56;
  void *v57;
  void *v58;
  float *v59;
  double v60;
  uint64_t v61;
  void *v62;
  id v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  float *v70;
  float v71;
  void *v72;
  uint64_t v73;
  void *v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86[5];

  v1 = v0[71];
  v2 = v0[67];
  v3 = v0[62];
  v4 = v0[63];
  v5 = v0[61];
  swift_release();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v5, 0, 1, v3);
  sub_2265037A0(v5, v2);
  v6 = (_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_captureSession);
  swift_beginAccess();
  if (!*v6)
  {
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v7 = v0[67];
  v8 = (__int128 *)v0[44];
  v9 = v8[3];
  v86[2] = v8[2];
  v86[3] = v9;
  v86[4] = v8[4];
  v10 = v8[1];
  v86[0] = *v8;
  v86[1] = v10;
  swift_retain();
  sub_226519C54(v86, v7);
  swift_release();
  if (qword_25583F928 != -1)
    swift_once();
  sub_2264AAB00();
  sub_2264AAE3C();
  if (!*v6)
    goto LABEL_33;
  v11 = *(void **)(*v6 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_rsSessionDelegate);
  if (!v11)
  {
LABEL_34:
    __break(1u);
    return;
  }
  v12 = (_QWORD *)v0[67];
  v13 = v0[60];
  v14 = v0[56];
  v15 = v13 + *(int *)(v14 + 48);
  v16 = (unint64_t *)(v13 + *(int *)(v14 + 64));
  v17 = *(void **)((char *)v12 + *(int *)(v0[62] + 60));
  v18 = v11;
  v19 = v17;
  sub_226520714(v13, v15, v16, v19, v12, 1);

  if (qword_25583F810 != -1)
    swift_once();
  v21 = v0[62];
  v20 = v0[63];
  v23 = v0[59];
  v22 = v0[60];
  v24 = sub_226501B70((uint64_t *)v0[67], 3u);
  v83 = sub_22652B734(v24);
  swift_bridgeObjectRelease();
  v25 = v23 + *(int *)(v14 + 48);
  v81 = v14;
  v26 = v23 + *(int *)(v14 + 64);
  sub_22643D7A0(v22, v23, &qword_255849170);
  sub_22643D7A0(v15, v25, &qword_255849170);
  sub_22643D7A0((uint64_t)v16, v26, &qword_255849170);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (v27(v23, 1, v21) == 1)
  {
    v28 = v0[59];
    sub_22643D7E4(v26, &qword_255849170);
    sub_22643D7E4(v25, &qword_255849170);
    sub_22643D7E4(v28, &qword_255849170);
    v29 = v83;
  }
  else
  {
    sub_2265037A0(v0[59], v0[66]);
    sub_22643D7E4(v26, &qword_255849170);
    sub_22643D7E4(v25, &qword_255849170);
    if (qword_25583F808 != -1)
      swift_once();
    v30 = (uint64_t *)v0[66];
    v29 = v83;
    sub_226439E3C(v30, v83);
    sub_22643D748((uint64_t)v30, type metadata accessor for CapturedRoom);
  }
  v31 = v0[62];
  v32 = v0[58];
  v33 = v32 + *(int *)(v81 + 48);
  v34 = v32 + *(int *)(v81 + 64);
  sub_22643D7A0(v0[60], v32, &qword_255849170);
  sub_22643D7A0(v15, v33, &qword_255849170);
  sub_22643D7A0((uint64_t)v16, v34, &qword_255849170);
  if (v27(v33, 1, v31) == 1)
  {
    v35 = v0[58];
    sub_22643D7E4(v34, &qword_255849170);
    sub_22643D7E4(v33, &qword_255849170);
    sub_22643D7E4(v35, &qword_255849170);
  }
  else
  {
    v36 = v0[58];
    sub_2265037A0(v33, v0[65]);
    sub_22643D7E4(v34, &qword_255849170);
    sub_22643D7E4(v36, &qword_255849170);
    if (qword_25583F808 != -1)
      swift_once();
    v37 = (_QWORD *)v0[65];
    sub_22643A15C(v37);
    sub_22643D748((uint64_t)v37, type metadata accessor for CapturedRoom);
  }
  v38 = v0[62];
  v39 = v0[57];
  v40 = v39 + *(int *)(v81 + 48);
  v41 = v39 + *(int *)(v81 + 64);
  sub_22643D7A0(v0[60], v39, &qword_255849170);
  sub_22643D7A0(v15, v40, &qword_255849170);
  sub_22643D7A0((uint64_t)v16, v41, &qword_255849170);
  if (v27(v41, 1, v38) == 1)
  {
    v42 = v0[57];
    swift_bridgeObjectRelease();
    sub_22643D7E4(v41, &qword_255849170);
    sub_22643D7E4(v40, &qword_255849170);
    sub_22643D7E4(v42, &qword_255849170);
  }
  else
  {
    v43 = v0[57];
    sub_2265037A0(v41, v0[64]);
    sub_22643D7E4(v40, &qword_255849170);
    sub_22643D7E4(v43, &qword_255849170);
    if (qword_25583F808 != -1)
      swift_once();
    v44 = (uint64_t *)v0[64];
    sub_226439E60(v44, v29);
    swift_bridgeObjectRelease();
    sub_22643D748((uint64_t)v44, type metadata accessor for CapturedRoom);
  }
  v45 = v0[71];
  v46 = *(void **)(v45 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView);
  if (v46)
  {
    v47 = v0[67];
    v48 = v0[60];
    v49 = v46;
    sub_22650FF08(v47, v48, v15, (uint64_t)v16);

    v45 = v0[71];
  }
  v50 = v45 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_delegate;
  swift_beginAccess();
  if (MEMORY[0x22769A944](v50))
  {
    v51 = v0[67];
    v52 = v0[45];
    v53 = *(_QWORD *)(v50 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 16))(v51, v52, ObjectType, v53);
    swift_unknownObjectRelease();
  }
  v55 = (_BYTE *)(v0[71] + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isModelEnabled);
  swift_beginAccess();
  v56 = MEMORY[0x24BDAC760];
  if ((*v55 & 1) == 0)
  {
    v57 = (void *)objc_opt_self();
    if (qword_25583F9D0 != -1)
      swift_once();
    v58 = (void *)v0[71];
    v59 = (float *)off_25584AF28;
    swift_beginAccess();
    v60 = v59[19] + 0.5;
    v61 = swift_allocObject();
    *(_QWORD *)(v61 + 16) = v58;
    v0[22] = sub_2265037E4;
    v0[23] = v61;
    v0[18] = v56;
    v0[19] = 1107296256;
    v0[20] = sub_2264FA450;
    v0[21] = &block_descriptor_54;
    v62 = _Block_copy(v0 + 18);
    v63 = v58;
    swift_release();
    objc_msgSend(v57, sel_animateWithDuration_animations_, v62, v60);
    _Block_release(v62);
  }
  v64 = (void *)v0[71];
  v84 = v0[60];
  v85 = v0[67];
  v65 = v0[54];
  v67 = v0[52];
  v66 = v0[53];
  v76 = v0[55];
  v77 = v0[51];
  v68 = v0[48];
  v80 = v0[50];
  v82 = v0[49];
  v69 = v0[46];
  v79 = v0[47];
  v70 = (float *)sub_2264FA9A8();
  swift_beginAccess();
  v71 = v70[19];
  swift_release();
  sub_22643F548(0, (unint64_t *)&qword_2558442A0);
  v72 = (void *)sub_22655D070();
  sub_22655CC08();
  MEMORY[0x227699300](v65, v71);
  v78 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
  v78(v65, v67);
  v73 = swift_allocObject();
  *(_QWORD *)(v73 + 16) = v64;
  v0[16] = sub_22650380C;
  v0[17] = v73;
  v0[12] = MEMORY[0x24BDAC760];
  v0[13] = 1107296256;
  v0[14] = sub_2264FA450;
  v0[15] = &block_descriptor_60;
  v74 = _Block_copy(v0 + 12);
  v75 = v64;
  sub_22655CBCC();
  v0[42] = MEMORY[0x24BEE4AF8];
  sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
  sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
  sub_22655D214();
  MEMORY[0x227699738](v76, v77, v68, v74);
  _Block_release(v74);

  (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v68, v69);
  (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v77, v82);
  v78(v76, v67);
  sub_22643D7E4(v84, (uint64_t *)&unk_255849AE0);
  sub_22643D748(v85, type metadata accessor for CapturedRoom);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  ((void (*)(void))v0[1])();
}

uint64_t sub_2265013C8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  swift_release();
  v1 = *(void **)(v0 + 568);
  v2 = *(_QWORD *)(v0 + 488);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 504) + 56))(v2, 1, 1, *(_QWORD *)(v0 + 496));

  sub_22643D7E4(v2, &qword_255849170);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2265014E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_22655CF5C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_22655CF50();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_22643D7E4(a1, &qword_2558487F8);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_22655CF14();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

id sub_22650162C(void *a1)
{
  uint64_t v1;
  id result;
  void *v4;
  id v5;
  double v6;
  double v7;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isEndingCaptureSession) = 0;
  sub_2264FC288();
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView))
  {
    sub_2264FCAC8();
    sub_2264FD184();
    sub_2264FD8B8();
  }
  result = objc_msgSend(a1, sel_currentFrame);
  if (result)
  {
    v4 = result;
    v5 = objc_msgSend(result, sel_camera);

    objc_msgSend(v5, sel_transform);
    v7 = v6;

    return objc_msgSend(a1, sel_setWorldOrigin_, *MEMORY[0x24BDAEE00], *(double *)(MEMORY[0x24BDAEE00] + 16), *(double *)(MEMORY[0x24BDAEE00] + 32), v7);
  }
  return result;
}

void sub_226501714(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x22769A944](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = *(void **)(v4 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_currentARFrame);
    *(_QWORD *)(v4 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_currentARFrame) = a2;
    v7 = a2;

  }
}

void sub_226501784(uint64_t a1, unsigned __int8 a2)
{
  void *v2;
  id v4;

  v2 = *(void **)(a1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView);
  if (v2)
  {
    v4 = v2;
    sub_226510478(a2);

  }
}

void sub_2265017E4(uint64_t a1, __int128 *a2, void *a3)
{
  uint64_t v5;
  id v6;

  v5 = MEMORY[0x22769A944](a1 + 16);
  if (v5)
  {
    v6 = (id)v5;
    sub_2264FFC9C(a2, a3);

  }
}

uint64_t sub_226501844(uint64_t a1, uint64_t a2)
{
  return sub_22650185C(a1, a2, (void (*)(uint64_t, uint64_t))sub_2264FEB70);
}

uint64_t sub_226501850(uint64_t a1, uint64_t a2)
{
  return sub_22650185C(a1, a2, (void (*)(uint64_t, uint64_t))sub_2264FED88);
}

uint64_t sub_22650185C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v16;

  v7 = type metadata accessor for CapturedRoom(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_25583F810 != -1)
    swift_once();
  v10 = a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_floorPlanModel;
  swift_beginAccess();
  sub_22643D704(v10, (uint64_t)v9, type metadata accessor for CapturedRoom);
  v11 = sub_226501B70(v9, 3u);
  v12 = sub_22652B734(v11);
  swift_bridgeObjectRelease();
  sub_22643D748((uint64_t)v9, type metadata accessor for CapturedRoom);
  v13 = MEMORY[0x22769A944](v3 + 16);
  if (v13)
  {
    v14 = (void *)v13;
    a3(a2, v12);

  }
  return swift_bridgeObjectRelease();
}

void sub_22650198C(uint64_t a1, unsigned __int8 a2)
{
  char *v3;
  void *v4;
  id v5;
  id v6;
  unsigned __int8 v7;

  v3 = (char *)MEMORY[0x22769A944](a1 + 16);
  if (v3)
  {
    v4 = *(void **)&v3[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView];
    if (v4)
    {
      v7 = a2;
      v6 = v3;
      v5 = v4;
      sub_2265101FC(&v7);

    }
    else
    {

    }
  }
}

uint64_t sub_226501A00()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

void sub_226501A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_226501A44(a1, a2, a3, a4, (void (*)(uint64_t))sub_2264FF628);
}

void sub_226501A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_226501A44(a1, a2, a3, a4, (void (*)(uint64_t))sub_2264FF1F4);
}

void sub_226501A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  id v9;

  v8 = MEMORY[0x22769A944](v5 + 16);
  if (v8)
  {
    v9 = (id)v8;
    a5(a2);

  }
}

uint64_t sub_226501AAC(uint64_t a1, char *a2)
{
  return sub_22650330C(a2);
}

uint64_t sub_226501AB4(uint64_t a1, __int128 *a2, void *a3)
{
  return sub_226503030(a2, a3);
}

uint64_t sub_226501AC0(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_226501B24;
  return v6(a1);
}

uint64_t sub_226501B24()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_226501B70(uint64_t *a1, unsigned int a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  float *v19;
  __int128 v20;
  float v21;
  int v22;
  float v23;
  float *v24;
  float v25;
  float v26;
  float v27;
  float v28;
  float v29;
  float v30;
  float v31;
  _OWORD *v32;
  char v33;
  uint64_t v34;
  float v35;
  float v36;
  float v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  char v42;
  const float *v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  BOOL v47;
  uint64_t v48;
  uint64_t inited;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  objc_class *v54;
  char *v55;
  id v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;
  _OWORD *v64;
  int v65;
  unint64_t v66;
  __int128 v67;
  char *v68;
  _OWORD *v69;
  uint64_t v70;
  float *v71;
  objc_super v72;
  unint64_t v73;
  uint64_t v74;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848090);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22655C140();
  v70 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for CapturedRoom.Surface(0);
  v10 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v71 = (float *)((char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x24BEE4AF8];
  v74 = MEMORY[0x24BEE4AF8];
  v13 = *a1;
  v14 = *(_QWORD *)(*a1 + 16);
  if (v14)
  {
    v15 = v13 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    result = swift_bridgeObjectRetain();
    v16 = 0;
    v65 = (a2 >> 1) & 1;
    v57 = xmmword_22655FA10;
    v67 = xmmword_22655FA20;
    v62 = a2;
    v61 = v10;
    v60 = v13;
    v59 = v14;
    v58 = v15;
    while (v16 < *(_QWORD *)(v13 + 16))
    {
      v17 = *(_QWORD *)(v10 + 72);
      v66 = v16;
      v18 = v15 + v17 * v16;
      v19 = v71;
      sub_22643D704(v18, (uint64_t)v71, type metadata accessor for CapturedRoom.Surface);
      v20 = *((_OWORD *)v19 + 1);
      v21 = COERCE_FLOAT(*((_QWORD *)v19 + 3));
      if (v21 <= 0.0)
        v22 = 1;
      else
        v22 = v65;
      if (v22 == 1 && (v21 != 0.0) | a2 & 1)
      {
        v23 = vmuls_lane_f32(-0.5, *(float32x2_t *)&v20, 1);
        v24 = v71;
        v25 = v23 * v71[12];
        v26 = v23 * v71[13];
        v27 = v23 * v71[14];
        v28 = 0.5 * *(float *)&v20;
        v29 = v28 * v71[8];
        v30 = v28 * v71[9];
        v31 = v28 * v71[10];
        __swift_instantiateConcreteTypeFromMangledName(&qword_255840A78);
        v32 = (_OWORD *)swift_allocObject();
        v33 = 0;
        v34 = 0;
        v32[1] = v57;
        v35 = v24[20];
        v36 = v24[21];
        v37 = v24[22];
        HIDWORD(v38) = 0;
        *(float *)&v38 = v25 + (float)(v35 - v29);
        *((float *)&v38 + 1) = v26 + (float)(v36 - v30);
        *((float *)&v38 + 2) = v27 + (float)(v37 - v31);
        v32[2] = v38;
        v69 = v32 + 2;
        HIDWORD(v39) = 0;
        *(float *)&v39 = v25 + (float)(v29 + v35);
        *((float *)&v39 + 1) = v26 + (float)(v30 + v36);
        *((float *)&v39 + 2) = v27 + (float)(v31 + v37);
        v64 = v32;
        v32[3] = v39;
        v68 = (char *)v24 + *(int *)(v63 + 44);
        v40 = (uint64_t)v24 + *(int *)(v63 + 52);
        v41 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
        while (1)
        {
          v42 = v33;
          v43 = (const float *)&v69[v34];
          v44 = *(_OWORD *)vld2_f32(v43).val;
          v41(v9, v68, v7);
          sub_22643D7A0(v40, (uint64_t)v6, (uint64_t *)&unk_255848090);
          v45 = type metadata accessor for CapturedRoom.Surface.Curve(0);
          v46 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(v6, 1, v45) != 1;
          sub_22643D7E4((uint64_t)v6, (uint64_t *)&unk_255848090);
          v47 = v71[6] > 0.0;
          type metadata accessor for HullPointUUID();
          v48 = swift_allocObject();
          (*(void (**)(uint64_t, char *, uint64_t))(v70 + 32))(v48 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_uuid, v9, v7);
          *(_BYTE *)(v48 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type) = v46;
          *(_BYTE *)(v48 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_hasThickness) = v47;
          __swift_instantiateConcreteTypeFromMangledName(&qword_255849180);
          inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = v67;
          *(_QWORD *)(inited + 32) = v48;
          v73 = inited;
          sub_22655CEE4();
          v50 = v73;
          if (v73 >> 62)
          {
            swift_retain();
            swift_bridgeObjectRetain();
            v53 = sub_22655D400();
            swift_bridgeObjectRelease();
            if (!v53)
            {
LABEL_15:
              v52 = MEMORY[0x24BEE4B08];
              goto LABEL_16;
            }
          }
          else
          {
            v51 = *(_QWORD *)((v73 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_retain();
            if (!v51)
              goto LABEL_15;
          }
          v52 = sub_2264F5514(v50);
LABEL_16:
          swift_bridgeObjectRelease();
          v54 = (objc_class *)type metadata accessor for HullPoint();
          v55 = (char *)objc_allocWithZone(v54);
          *(_QWORD *)&v55[OBJC_IVAR____TtC8RoomPlan9HullPoint_position] = v44;
          *(_QWORD *)&v55[OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids] = v52;
          v72.receiver = v55;
          v72.super_class = v54;
          v56 = objc_msgSendSuper2(&v72, sel_init);
          MEMORY[0x227699594]();
          if (*(_QWORD *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_22655CEF0();
          sub_22655CF08();
          sub_22655CEE4();

          swift_release();
          v33 = 1;
          v34 = 1;
          if ((v42 & 1) != 0)
          {
            swift_setDeallocating();
            swift_deallocClassInstance();
            LOBYTE(a2) = v62;
            v10 = v61;
            v13 = v60;
            v14 = v59;
            v15 = v58;
            break;
          }
        }
      }
      v16 = v66 + 1;
      result = sub_22643D748((uint64_t)v71, type metadata accessor for CapturedRoom.Surface);
      if (v16 == v14)
      {
        swift_bridgeObjectRelease();
        return v74;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_226502114(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  unint64_t v8;
  void *v9;
  id v10;
  id v11;
  char v12;
  void *v13;
  id v14;
  char v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v19 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_19;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v5 = 0;
      v17 = OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView;
      v18 = OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v6 = (id)MEMORY[0x2276999E4](v5, a1);
LABEL_9:
        v7 = v6;
        v8 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_18;
        v9 = *(void **)(a2 + v18);
        if (v9)
        {
          sub_22643F548(0, &qword_2558485D8);
          v10 = v7;
          v11 = v9;
          v12 = sub_22655D118();

          if ((v12 & 1) != 0)
            goto LABEL_4;
        }
        v13 = *(void **)(a2 + v17);
        if (v13
          && (sub_22643F548(0, &qword_2558485D8),
              v10 = v7,
              v14 = v13,
              v15 = sub_22655D118(),
              v10,
              v14,
              (v15 & 1) != 0))
        {
LABEL_4:

        }
        else
        {
          sub_22655D364();
          sub_22655D388();
          sub_22655D394();
          sub_22655D370();
        }
        ++v5;
        if (v8 == v4)
          return v19;
      }
      if (v5 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      v4 = sub_22655D400();
      if (!v4)
        return MEMORY[0x24BEE4AF8];
    }
    v6 = *(id *)(a1 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t type metadata accessor for RoomCaptureView()
{
  return objc_opt_self();
}

id sub_226502334(void *a1, double a2, double a3, double a4, double a5)
{
  _BYTE *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  char *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _BYTE *v29;
  objc_class *v30;
  id v31;
  id v32;
  id v33;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  objc_super v40;
  uint64_t v41;

  v39 = a1;
  v10 = sub_22655D064();
  v37 = *(_QWORD *)(v10 - 8);
  v38 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v36 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_22655D04C();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v12);
  v14 = sub_22655CBFC();
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)&v5[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_captureSession] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v5[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isModelEnabled] = 1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView____lazy_storage___settingsManager] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARViewCamera] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_worldSpaceManager] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureSessionObserver] = 0;
  v15 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v5[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_deltaTimeArray] = MEMORY[0x24BEE4AF8];
  v5[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isEndingCaptureSession] = 0;
  v16 = &v5[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_logPerimeterDirectoryPath];
  *v16 = 0;
  v16[1] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_completeTransitionTime] = 0x3FF4000000000000;
  v17 = &v5[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_sceneObserver];
  *(_OWORD *)v17 = 0u;
  *((_OWORD *)v17 + 1) = 0u;
  *((_QWORD *)v17 + 4) = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_sceneShaderRenderer] = 0;
  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)&v5[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_viewportSize] = _Q0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_viewOrientation] = 1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_currentARFrame] = 0;
  v23 = &v5[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_arCameraParameters];
  v24 = *MEMORY[0x24BDAEE00];
  v25 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 16);
  v26 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 32);
  v27 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 48);
  *(_OWORD *)v23 = *MEMORY[0x24BDAEE00];
  *((_OWORD *)v23 + 1) = v25;
  *((_OWORD *)v23 + 2) = v26;
  *((_OWORD *)v23 + 3) = v27;
  *((_OWORD *)v23 + 4) = v24;
  *((_OWORD *)v23 + 5) = v25;
  *((_OWORD *)v23 + 6) = v26;
  *((_OWORD *)v23 + 7) = v27;
  *((_OWORD *)v23 + 8) = xmmword_22655EF60;
  *((_QWORD *)v23 + 18) = 0;
  *((_QWORD *)v23 + 19) = 0;
  *((_QWORD *)v23 + 20) = 0x3FF0000000000000;
  *((_QWORD *)v23 + 21) = 0;
  *((_QWORD *)v23 + 22) = 0;
  *(_OWORD *)(v23 + 184) = xmmword_226567DA0;
  v28 = OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_arCameraQueue;
  sub_22643F548(0, (unint64_t *)&qword_2558442A0);
  v29 = v5;
  sub_22655CBD8();
  v41 = v15;
  sub_226437F28((unint64_t *)&qword_2558491E0, v13, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558442B0);
  sub_2264ABAD4((unint64_t *)&qword_2558491F0, (uint64_t *)&unk_2558442B0);
  sub_22655D214();
  (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v36, *MEMORY[0x24BEE5750], v38);
  *(_QWORD *)&v5[v28] = sub_22655D088();
  *(_QWORD *)&v29[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomBuilder] = 0;
  *(_QWORD *)&v29[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_gradientLayer] = 0;
  v29[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isEncoding] = 0;
  *(_QWORD *)&v29[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_voiceOverManager] = 0;
  *(_QWORD *)&v29[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView____lazy_storage___frameProcessor] = 1;

  v30 = (objc_class *)type metadata accessor for RoomCaptureView();
  v40.receiver = v29;
  v40.super_class = v30;
  v31 = objc_msgSendSuper2(&v40, sel_initWithFrame_, a2, a3, a4, a5);
  v32 = v39;
  v33 = v39;
  sub_2264FB6C0(v32);

  return v31;
}

uint64_t sub_226502728(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558436D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_226502770@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_captureSession);
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

uint64_t sub_2265027C8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_delegate;
  swift_beginAccess();
  result = MEMORY[0x22769A944](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_226502820(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_226502880@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isModelEnabled);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

id sub_2265028D0(char *a1)
{
  return sub_2264FA718(*a1);
}

uint64_t dispatch thunk of RoomCaptureViewDelegate.captureView(shouldPresent:error:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of RoomCaptureViewDelegate.captureView(didPresent:error:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t method lookup function for RoomCaptureView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RoomCaptureView.captureSession.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x118))();
}

uint64_t dispatch thunk of RoomCaptureView.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x130))();
}

uint64_t dispatch thunk of RoomCaptureView.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x138))();
}

uint64_t dispatch thunk of RoomCaptureView.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x140))();
}

uint64_t dispatch thunk of RoomCaptureView.isModelEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x148))();
}

uint64_t dispatch thunk of RoomCaptureView.isModelEnabled.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x150))();
}

uint64_t dispatch thunk of RoomCaptureView.isModelEnabled.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x158))();
}

uint64_t dispatch thunk of RoomCaptureView.__allocating_init(frame:arSession:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 872))();
}

uint64_t type metadata accessor for RoomCaptureSessionInternalObserver()
{
  return objc_opt_self();
}

uint64_t sub_2265029FC(uint64_t a1, __int128 *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  __int128 v8;
  uint64_t (*v9)(_QWORD *, _QWORD);
  _OWORD *v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _QWORD v22[4];

  v3 = sub_22655C1C4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22655C7E8();
  sub_22655C170();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  RECustomMatrixCameraComponentGetComponentType();
  result = REEntityGetComponentByClass();
  if (result)
  {
    RECustomMatrixCameraComponentSetProjectionFromMatrix();
    v8 = *a2;
    v19 = a2[1];
    v20 = v8;
    v18 = a2[2];
    v21 = a2[3];
    sub_22655C8B4();
    v9 = (uint64_t (*)(_QWORD *, _QWORD))sub_22655C29C();
    v11 = v10;
    sub_22655D610();
    v17 = v12;
    sub_22655D028();
    v16 = v13;
    sub_22655D01C();
    *v11 = v14;
    v15 = v17;
    v11[1] = v16;
    v11[2] = v15;
    return v9(v22, 0);
  }
  return result;
}

void sub_226502B58(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  float v16;
  float v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_22655CBB4();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v23 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_22655CBFC();
  v8 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_arCameraQueue);
  v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v11;
  *(_QWORD *)(v12 + 24) = a1;
  aBlock[4] = sub_2265035D8;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2264FA450;
  aBlock[3] = &block_descriptor_25_0;
  v13 = _Block_copy(aBlock);
  swift_retain();
  v20 = a1;
  sub_22655CBCC();
  v24 = MEMORY[0x24BEE4AF8];
  sub_226437F28((unint64_t *)&qword_2558452F8, v5, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
  sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
  sub_22655D214();
  MEMORY[0x22769975C](0, v10, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v22);
  swift_release();
  swift_release();
  v14 = *(void **)(v2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
  if (v14)
  {
    v15 = v14;
    sub_22655C794();
    v17 = v16;
    if ((sub_22655C7AC() & 1) != 0)
      v17 = (float)(uint64_t)objc_msgSend(v20, sel_renderFramesPerSecond);
    sub_22655C4D0();
    sub_22655C4C4();
    sub_22655C4B8();
    swift_release();
    v18 = sub_22655C8F0();
    swift_release();
    MEMORY[0x22769A038](v18, v17);

  }
}

uint64_t sub_226502E1C(char a1)
{
  void *v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v16;
  uint64_t v17;
  _QWORD aBlock[6];

  v3 = sub_22655CBB4();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v17 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22655CBFC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22643F548(0, (unint64_t *)&qword_2558442A0);
  v11 = (void *)sub_22655D070();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v1;
  *(_BYTE *)(v12 + 24) = a1;
  aBlock[4] = sub_22650357C;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2264FA450;
  aBlock[3] = &block_descriptor_16_0;
  v13 = _Block_copy(aBlock);
  v14 = v1;
  swift_release();
  sub_22655CBCC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_226437F28((unint64_t *)&qword_2558452F8, v4, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
  sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
  sub_22655D214();
  MEMORY[0x22769975C](0, v10, v6, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_226503030(__int128 *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  _BYTE *v15;
  void *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  void *v20;
  id v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  v3 = v2;
  v6 = sub_22655CBB4();
  v24 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22655CBFC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v28 = a1[2];
  v29 = v13;
  v30 = a1[4];
  v14 = a1[1];
  v26 = *a1;
  v27 = v14;
  v15 = (_BYTE *)MEMORY[0x22769A944](v3 + 16);
  if (v15)
  {
    v15[OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isEndingCaptureSession] = 1;

  }
  sub_22643F548(0, (unint64_t *)&qword_2558442A0);
  v16 = (void *)sub_22655D070();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v3;
  v18 = v29;
  *(_OWORD *)(v17 + 64) = v28;
  *(_OWORD *)(v17 + 80) = v18;
  *(_OWORD *)(v17 + 96) = v30;
  v19 = v27;
  *(_OWORD *)(v17 + 32) = v26;
  *(_OWORD *)(v17 + 48) = v19;
  *(_QWORD *)(v17 + 112) = a2;
  aBlock[4] = sub_2265032E4;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2264FA450;
  aBlock[3] = &block_descriptor_6;
  v20 = _Block_copy(aBlock);
  swift_retain();
  sub_2264FA1AC((uint64_t)&v26);
  v21 = a2;
  swift_release();
  sub_22655CBCC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
  sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
  sub_22655D214();
  MEMORY[0x22769975C](0, v12, v8, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_2265032A8()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_2265032E4()
{
  uint64_t v0;

  sub_2265017E4(*(_QWORD *)(v0 + 16), (__int128 *)(v0 + 32), *(void **)(v0 + 112));
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_22650330C(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_22655CBB4();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v18 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22655CBFC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  sub_22643F548(0, (unint64_t *)&qword_2558442A0);
  v13 = (void *)sub_22655D070();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v2;
  *(_BYTE *)(v14 + 24) = v12;
  aBlock[4] = sub_22650354C;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2264FA450;
  aBlock[3] = &block_descriptor_10;
  v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_22655CBCC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_226437F28((unint64_t *)&qword_2558452F8, v5, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
  sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
  sub_22655D214();
  MEMORY[0x22769975C](0, v11, v7, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_226503528()
{
  swift_release();
  return swift_deallocObject();
}

void sub_22650354C()
{
  uint64_t v0;

  sub_22650198C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_226503558()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_22650357C()
{
  uint64_t v0;

  sub_226501784(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_226503588()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2265035AC()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_2265035D8()
{
  uint64_t v0;

  sub_226501714(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_2265035E4()
{
  uint64_t v0;

  sub_226500114(*(char **)(v0 + 16), (_OWORD *)(v0 + 32), *(void **)(v0 + 112));
}

uint64_t objectdestroy_27Tm()
{
  id *v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_226503634()
{
  uint64_t v0;

  return sub_226500444(*(_QWORD *)(v0 + 16), (_OWORD *)(v0 + 32), *(void **)(v0 + 112));
}

uint64_t sub_226503644()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_226503688(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (uint64_t)(v1 + 6);
  v8 = v1[16];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_2264F9874;
  return sub_22650058C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_22650370C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_226503730(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2264F9874;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_255848810 + dword_255848810))(a1, v4);
}

uint64_t sub_2265037A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CapturedRoom(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_2265037E4()
{
  uint64_t v0;
  id result;

  result = *(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView);
  if (result)
    return objc_msgSend(result, sel_setAlpha_, 1.0);
  return result;
}

uint64_t sub_22650380C()
{
  uint64_t v0;
  uint64_t result;

  if (*(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isEndingCaptureSession) == 1)
    return sub_2264FE7FC();
  return result;
}

uint64_t sub_226503844()
{
  return sub_226503940((uint64_t (*)(_QWORD, uint64_t))sub_2264FFC20);
}

uint64_t objectdestroy_63Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for CapturedRoom(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 24) & ~v2;
  swift_release();
  v4 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + *(int *)(v1 + 40);
  v6 = sub_22655C140();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_226503934()
{
  return sub_226503940((uint64_t (*)(_QWORD, uint64_t))sub_2264FF4E0);
}

uint64_t sub_226503940(uint64_t (*a1)(_QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CapturedRoom(0) - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), v1 + ((v2 + 24) & ~v2));
}

uint64_t sub_226503984()
{
  return sub_226503A9C((uint64_t (*)(_QWORD, unint64_t, _QWORD))sub_2264FF0A4);
}

uint64_t objectdestroy_77Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for CapturedRoom(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 24) & ~v2;
  swift_release();
  v4 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + *(int *)(v1 + 40);
  v6 = sub_22655C140();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_226503A90()
{
  return sub_226503A9C((uint64_t (*)(_QWORD, unint64_t, _QWORD))sub_2264FEB8C);
}

uint64_t sub_226503A9C(uint64_t (*a1)(_QWORD, unint64_t, _QWORD))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(type metadata accessor for CapturedRoom(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return a1(*(_QWORD *)(v1 + 16), v1 + v3, *(_QWORD *)(v1 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_226503AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255847158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_226503B38(uint64_t a1)
{
  uint64_t v1;

  sub_2264FE6A0(a1, v1);
}

uint64_t sub_226503B40()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_226503B74(uint64_t a1)
{
  uint64_t v1;

  return sub_2264FDB18(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_226503B80()
{
  uint64_t v0;

  sub_2264FE4C8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_226503B88()
{
  return swift_deallocObject();
}

uint64_t sub_226503B98()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_226503BBC()
{
  uint64_t v0;

  return sub_22646E6EC(*(_QWORD *)(v0 + 16), *(float *)(v0 + 24));
}

uint64_t sub_226503BC8()
{
  return swift_deallocObject();
}

uint64_t sub_226503BD8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_226503BFC()
{
  uint64_t v0;

  return sub_2264E9F68(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_226503C08()
{
  return swift_deallocObject();
}

void sub_226503C18(uint64_t a1)
{
  uint64_t v1;

  sub_2264FE8EC(a1, v1);
}

uint64_t sub_226503C20()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_226503C44()
{
  uint64_t v0;

  return sub_2264FC418(*(_QWORD *)(v0 + 16), 1.0, 0.0);
}

id sub_226503C64()
{
  uint64_t v0;

  return sub_2264FC418(*(_QWORD *)(v0 + 16), 0.0, 1.0);
}

void sub_226503C84(uint64_t a1)
{
  uint64_t v1;

  sub_2264FC1D8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_226503C8C(uint64_t result)
{
  if (result != 1)
    return swift_release();
  return result;
}

uint64_t sub_226503C9C(uint64_t result)
{
  if (result != 1)
    return swift_retain();
  return result;
}

double sub_226503D48()
{
  return 3.18618444e-58;
}

double sub_226503DBC(double a1)
{
  _OWORD *v1;
  unint64_t v2;
  __int128 v3;
  unint64_t v4;
  __int128 v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255840A78);
  v1 = (_OWORD *)swift_allocObject();
  *(float *)&v2 = -0.5 * *(float *)&a1;
  v3 = COERCE_UNSIGNED_INT(-0.5 * *(float *)&a1);
  DWORD1(v3) = vmuls_lane_f32(0.5, *(float32x2_t *)&a1, 1);
  v1[1] = xmmword_22655FA80;
  v1[2] = v3;
  *(float *)&v4 = 0.5 * *(float *)&a1;
  v5 = COERCE_UNSIGNED_INT(0.5 * *(float *)&a1);
  DWORD1(v5) = DWORD1(v3);
  HIDWORD(v4) = vmuls_lane_f32(-0.5, *(float32x2_t *)&a1, 1);
  v1[3] = v5;
  v1[4] = v4;
  HIDWORD(v2) = HIDWORD(v4);
  v1[5] = v2;
  return *(double *)&v5;
}

uint64_t sub_226503E4C(_QWORD *a1, float a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  float32x4_t *v9;
  float v10;
  uint64_t v11;
  float32x4_t v12;
  int32x4_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;

  swift_bridgeObjectRetain_n();
  v4 = sub_2264D1EE8((uint64_t)a1);
  v5 = v4;
  v6 = *(_QWORD *)(v4 + 16);
  if (v6 && (v7 = *(_QWORD *)(v4 + 32), v7 >= 1))
  {
    v8 = 0;
    v9 = (float32x4_t *)(v4 + 48);
    v10 = a2 * a2;
    v11 = v6 - 1;
    while ((unint64_t)(v7 - 1) < a1[2])
    {
      v12 = vsubq_f32(*v9, *(float32x4_t *)&a1[2 * v7 + 2]);
      v13 = (int32x4_t)vmulq_f32(v12, v12);
      if (vaddq_f32((float32x4_t)vdupq_laneq_s32(v13, 2), vaddq_f32((float32x4_t)v13, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v13.i8, 1))).f32[0] < v10)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          a1 = sub_2264C11EC(a1);
        v14 = a1[2];
        if (v7 >= v14)
          goto LABEL_17;
        v15 = v14 - 1;
        v16 = v14 - 1 - v7;
        if (v16 < 0)
          goto LABEL_18;
        memmove(&a1[2 * v7 + 4], &a1[2 * v7 + 6], 16 * v16);
        a1[2] = v15;
      }
      if (v11 == v8)
        goto LABEL_14;
      if ((unint64_t)++v8 >= *(_QWORD *)(v5 + 16))
        goto LABEL_16;
      v7 = v9[1].i64[0];
      v9 += 2;
      if (v7 <= 0)
        goto LABEL_14;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    result = sub_22655D43C();
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return (uint64_t)a1;
  }
  return result;
}

uint64_t type metadata accessor for DollHouseCamera()
{
  uint64_t result;

  result = qword_255848980;
  if (!qword_255848980)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22650401C()
{
  unint64_t v0;

  sub_226453DCC();
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

void sub_22650415C()
{
  uint64_t v0;
  void **v1;
  void *v2;
  void **v3;
  void *v4;
  int v5;
  int v6;
  int v7;
  void *v8;
  int v9;
  int v10;
  int v11;
  int v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  int v19;
  int v20;
  void *v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  int v26;
  int v27;
  id v28;
  double v29;
  double v30;
  double v31;
  double v32;
  id v33;
  void *v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  id v41;
  double v42;
  double v43;
  double v44;
  double v45;
  void *v46;
  int v47;
  int v48;
  void *v49;

  v1 = (void **)(v0 + qword_255848848);
  v2 = *(void **)(v0 + qword_255848848);
  *(_QWORD *)(v0 + qword_255848848) = 0;

  v3 = (void **)(v0 + qword_255848838);
  v4 = *(void **)(v0 + qword_255848838);
  *(_QWORD *)(v0 + qword_255848838) = 0;

  v5 = *(unsigned __int8 *)(v0 + qword_25585B1C8);
  if (v5 == 4)
  {
    v19 = *(_DWORD *)(v0 + qword_255848900);
    v20 = *(_DWORD *)(v0 + qword_255848908);
    v21 = (void *)objc_opt_self();
    v22 = *MEMORY[0x24BE08AE0];
    objc_msgSend(v21, sel_floatForKey_, *MEMORY[0x24BE08AE0]);
    v24 = v23;
    v25 = *MEMORY[0x24BE08AD0];
    objc_msgSend(v21, sel_floatForKey_, *MEMORY[0x24BE08AD0]);
    v27 = v26;
    v28 = objc_allocWithZone(MEMORY[0x24BE08B08]);
    LODWORD(v29) = v24;
    LODWORD(v30) = v19;
    LODWORD(v31) = v20;
    LODWORD(v32) = v27;
    v33 = objc_msgSend(v28, sel_initWithRubberBandFactor_minOffset_maxOffset_overshoot_, v29, v30, v31, v32);
    v34 = *v1;
    *v1 = v33;

    v35 = *(_DWORD *)(v0 + qword_2558488F0);
    v36 = *(_DWORD *)(v0 + qword_2558488F8);
    objc_msgSend(v21, sel_floatForKey_, v22);
    v38 = v37;
    objc_msgSend(v21, sel_floatForKey_, v25);
    v40 = v39;
    v41 = objc_allocWithZone(MEMORY[0x24BE08B08]);
LABEL_7:
    LODWORD(v42) = v38;
    LODWORD(v43) = v35;
    LODWORD(v44) = v36;
    LODWORD(v45) = v40;
    v18 = objc_msgSend(v41, sel_initWithRubberBandFactor_minOffset_maxOffset_overshoot_, v42, v43, v44, v45);
    v1 = v3;
    goto LABEL_8;
  }
  if (v5 == 2)
  {
    v35 = *(_DWORD *)(v0 + qword_2558488F0);
    v36 = *(_DWORD *)(v0 + qword_2558488F8);
    v46 = (void *)objc_opt_self();
    objc_msgSend(v46, sel_floatForKey_, *MEMORY[0x24BE08AE0]);
    v38 = v47;
    objc_msgSend(v46, sel_floatForKey_, *MEMORY[0x24BE08AD0]);
    v40 = v48;
    v41 = objc_allocWithZone(MEMORY[0x24BE08B08]);
    goto LABEL_7;
  }
  if (v5 != 1)
    return;
  v6 = *(_DWORD *)(v0 + qword_255848900);
  v7 = *(_DWORD *)(v0 + qword_255848908);
  v8 = (void *)objc_opt_self();
  objc_msgSend(v8, sel_floatForKey_, *MEMORY[0x24BE08AE0]);
  v10 = v9;
  objc_msgSend(v8, sel_floatForKey_, *MEMORY[0x24BE08AD0]);
  v12 = v11;
  v13 = objc_allocWithZone(MEMORY[0x24BE08B08]);
  LODWORD(v14) = v10;
  LODWORD(v15) = v6;
  LODWORD(v16) = v7;
  LODWORD(v17) = v12;
  v18 = objc_msgSend(v13, sel_initWithRubberBandFactor_minOffset_maxOffset_overshoot_, v14, v15, v16, v17);
LABEL_8:
  v49 = *v1;
  *v1 = v18;

}

void sub_226504428()
{
  swift_allocObject();
  sub_22650444C();
}

void sub_22650444C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v1 = v0;
  v2 = (_QWORD *)(v0 + qword_255848820);
  *v2 = 0;
  v2[1] = 0;
  v3 = (_QWORD *)(v0 + qword_255848828);
  *v3 = 0;
  v3[1] = 0;
  v4 = v0 + qword_255848830;
  *(_QWORD *)v4 = 0;
  *(_QWORD *)(v4 + 8) = 0;
  *(_BYTE *)(v4 + 16) = 1;
  *(_QWORD *)(v0 + qword_255848838) = 0;
  *(_QWORD *)(v0 + qword_255848840) = 0;
  *(_QWORD *)(v0 + qword_255848848) = 0;
  *(_QWORD *)(v0 + qword_255848850) = 0;
  *(_QWORD *)(v0 + qword_255848858) = 0;
  *(_QWORD *)(v0 + qword_255848860) = 0;
  *(_DWORD *)(v0 + qword_255848868) = 1065353216;
  *(_DWORD *)(v0 + qword_255848870) = 1084227584;
  *(_DWORD *)(v0 + qword_255848878) = 1065353216;
  *(_DWORD *)(v0 + qword_255848880) = 1084227584;
  *(_DWORD *)(v0 + qword_255848888) = 1084227584;
  v5 = (_OWORD *)(v0 + qword_255848890);
  v6 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 16);
  v7 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 32);
  v8 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 48);
  *v5 = *MEMORY[0x24BDAEE00];
  v5[1] = v6;
  v5[2] = v7;
  v5[3] = v8;
  *(_DWORD *)(v0 + qword_2558488A0) = 1065353216;
  *(_DWORD *)(v0 + qword_2558488A8) = 0;
  *(_DWORD *)(v0 + qword_2558488B0) = 0;
  *(_DWORD *)(v0 + qword_2558488B8) = 0;
  *(_DWORD *)(v0 + qword_2558488C0) = 0;
  *(_DWORD *)(v0 + qword_2558488C8) = 0;
  *(_DWORD *)(v0 + qword_2558488D0) = 1065353216;
  *(_DWORD *)(v0 + qword_2558488D8) = 1065353216;
  *(_DWORD *)(v0 + qword_2558488E0) = 1065353216;
  *(_DWORD *)(v0 + qword_2558488E8) = -1085730854;
  *(_DWORD *)(v0 + qword_2558488F0) = -1080452710;
  *(_DWORD *)(v0 + qword_2558488F8) = -1098907648;
  *(_DWORD *)(v0 + qword_255848900) = -1082130432;
  *(_DWORD *)(v0 + qword_255848908) = 1065353216;
  v9 = v0 + qword_25585B198;
  v10 = sub_22655C0E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(_DWORD *)(v1 + qword_25585B1A0) = 0;
  *(_DWORD *)(v1 + qword_25585B1A8) = 0;
  *(_DWORD *)(v1 + qword_25585B1B0) = 0;
  *(_DWORD *)(v1 + qword_25585B1B8) = 0;
  *(_DWORD *)(v1 + qword_25585B1C0) = 0;
  *(_BYTE *)(v1 + qword_25585B1C8) = 2;
  *(_BYTE *)(v1 + qword_25585B1D0) = 1;
  *(_BYTE *)(v1 + qword_25585B1D8) = 1;
  *(_BYTE *)(v1 + qword_25585B1E0) = 1;
  v11 = qword_255848918;
  sub_22655C8B4();
  swift_allocObject();
  *(_QWORD *)(v1 + v11) = sub_22655C1DC();
  v12 = qword_255848920;
  swift_allocObject();
  *(_QWORD *)(v1 + v12) = sub_22655C1DC();
  v13 = qword_255848928;
  swift_allocObject();
  *(_QWORD *)(v1 + v13) = sub_22655C1DC();
  v14 = qword_255848930;
  swift_allocObject();
  *(_QWORD *)(v1 + v14) = sub_22655C1DC();
  *(_OWORD *)(v1 + qword_255848938) = xmmword_22655FA70;
  *(_DWORD *)(v1 + qword_255848940) = 0;
  *(_DWORD *)(v1 + qword_255848948) = 0;
  *(_BYTE *)(v1 + qword_255848950) = 1;
  v15 = (_QWORD *)(v1 + qword_255848958);
  *v15 = 0;
  v15[1] = 0;
  *(_BYTE *)(v1 + qword_255848960) = 0;
  *(_OWORD *)(v1 + qword_255848968) = xmmword_226560090;
  *(_QWORD *)(v1 + qword_255848970) = 0;
  *(_QWORD *)(v1 + qword_255848978) = 0;
  swift_release();
  sub_22655D3E8();
  __break(1u);
}

uint64_t sub_22650481C(void *a1, uint64_t a2, char a3, float a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  double Width;
  float v26;
  _OWORD *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  CGRect v33;
  CGRect v34;

  v5 = v4;
  v9 = (_QWORD *)(v4 + qword_255848820);
  *v9 = 0;
  v9[1] = 0;
  v10 = (_QWORD *)(v4 + qword_255848828);
  *v10 = 0;
  v10[1] = 0;
  v11 = v4 + qword_255848830;
  *(_QWORD *)v11 = 0;
  *(_QWORD *)(v11 + 8) = 0;
  *(_BYTE *)(v11 + 16) = 1;
  *(_QWORD *)(v4 + qword_255848838) = 0;
  *(_QWORD *)(v4 + qword_255848840) = 0;
  *(_QWORD *)(v4 + qword_255848848) = 0;
  *(_QWORD *)(v4 + qword_255848850) = 0;
  *(_QWORD *)(v4 + qword_255848858) = 0;
  *(_QWORD *)(v4 + qword_255848860) = 0;
  *(_DWORD *)(v4 + qword_255848868) = 1065353216;
  *(_DWORD *)(v4 + qword_255848870) = 1084227584;
  *(_DWORD *)(v4 + qword_255848878) = 1065353216;
  *(_DWORD *)(v4 + qword_255848880) = 1084227584;
  *(_DWORD *)(v4 + qword_255848888) = 1084227584;
  v12 = (_OWORD *)(v4 + qword_255848890);
  v13 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 16);
  v14 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 32);
  v15 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 48);
  *v12 = *MEMORY[0x24BDAEE00];
  v12[1] = v13;
  v12[2] = v14;
  v12[3] = v15;
  *(_DWORD *)(v4 + qword_2558488A0) = 1065353216;
  *(_DWORD *)(v4 + qword_2558488A8) = 0;
  *(_DWORD *)(v4 + qword_2558488B0) = 0;
  *(_DWORD *)(v4 + qword_2558488B8) = 0;
  *(_DWORD *)(v4 + qword_2558488C0) = 0;
  *(_DWORD *)(v4 + qword_2558488C8) = 0;
  *(_DWORD *)(v4 + qword_2558488D0) = 1065353216;
  *(_DWORD *)(v4 + qword_2558488D8) = 1065353216;
  *(_DWORD *)(v4 + qword_2558488E0) = 1065353216;
  *(_DWORD *)(v4 + qword_2558488E8) = -1085730854;
  *(_DWORD *)(v4 + qword_2558488F0) = -1080452710;
  v16 = a3 & 1;
  *(_DWORD *)(v4 + qword_2558488F8) = -1098907648;
  *(_DWORD *)(v4 + qword_255848900) = -1082130432;
  *(_DWORD *)(v4 + qword_255848908) = 1065353216;
  v17 = v4 + qword_25585B198;
  v18 = sub_22655C0E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  *(_DWORD *)(v5 + qword_25585B1A0) = 0;
  *(_DWORD *)(v5 + qword_25585B1A8) = 0;
  *(_DWORD *)(v5 + qword_25585B1B0) = 0;
  *(_DWORD *)(v5 + qword_25585B1B8) = 0;
  *(_DWORD *)(v5 + qword_25585B1C0) = 0;
  *(_BYTE *)(v5 + qword_25585B1C8) = 2;
  *(_BYTE *)(v5 + qword_25585B1D0) = 1;
  *(_BYTE *)(v5 + qword_25585B1D8) = 1;
  *(_BYTE *)(v5 + qword_25585B1E0) = 1;
  v19 = qword_255848918;
  sub_22655C8B4();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)(v5 + v19) = sub_22655C1DC();
  v20 = qword_255848920;
  swift_allocObject();
  *(_QWORD *)(v5 + v20) = sub_22655C1DC();
  v21 = qword_255848928;
  swift_allocObject();
  *(_QWORD *)(v5 + v21) = sub_22655C1DC();
  v22 = qword_255848930;
  swift_allocObject();
  *(_QWORD *)(v5 + v22) = sub_22655C1DC();
  *(_OWORD *)(v5 + qword_255848938) = xmmword_22655FA70;
  *(_DWORD *)(v5 + qword_255848940) = 0;
  *(_DWORD *)(v5 + qword_255848948) = 0;
  *(_BYTE *)(v5 + qword_255848950) = 1;
  v23 = (_QWORD *)(v5 + qword_255848958);
  *v23 = 0;
  v23[1] = 0;
  *(_BYTE *)(v5 + qword_255848960) = 0;
  *(_OWORD *)(v5 + qword_255848968) = xmmword_226560090;
  *(_QWORD *)(v5 + qword_255848970) = 0;
  *(_QWORD *)(v5 + qword_255848978) = 0;
  *(float *)(v5 + qword_255848898) = a4;
  *(_QWORD *)(v5 + qword_25585B1E8) = a2;
  *(_BYTE *)(v5 + qword_255848910) = v16;
  swift_retain();
  swift_release();
  v24 = sub_22655C1DC();
  swift_retain();
  objc_msgSend(a1, sel_bounds);
  Width = CGRectGetWidth(v33);
  objc_msgSend(a1, sel_bounds);
  v26 = Width / CGRectGetHeight(v34);
  *(float *)(v24 + qword_255848868) = v26;
  REMatrix4x4MakePerspectiveFieldOfViewReverseDepth();
  v27 = (_OWORD *)(v24 + qword_255848890);
  *v27 = v28;
  v27[1] = v29;
  v27[2] = v30;
  v27[3] = v31;
  sub_226504CA0();
  swift_release();

  swift_release();
  return v24;
}

void sub_226504CA0()
{
  type metadata accessor for DollHouseCamera();
  swift_retain();
  sub_22655C230();
  swift_release();
  swift_retain();
  sub_22655C230();
  swift_release();
  sub_22655C8B4();
  swift_retain();
  swift_retain();
  sub_22655C230();
  swift_release();
  swift_release();
  swift_retain();
  swift_retain();
  sub_22655C230();
  swift_release();
  swift_release();
  swift_retain();
  sub_22655C230();
  swift_release();
  sub_22650415C();
}

void sub_226504E00(uint64_t a1, uint64_t a2, char a3, char a4, int8x16_t a5, int8x16_t a6, float a7, float a8, int8x16_t a9)
{
  uint64_t v9;
  uint64_t v12;
  BOOL v13;
  float v14;
  float32x4_t v15;
  float32x2_t v16;
  uint64_t v17;
  int8x16_t v18;
  int8x16_t v19;
  int32x4_t v20;
  int8x16_t v21;

  v12 = 0;
  while (1)
  {
    v21 = a6;
    v14 = *(float *)((unint64_t)&v21 & 0xFFFFFFFFFFFFFFF3 | (4 * (v12 & 3)));
    v13 = v14 == 0.0;
    if (v12 == 2)
      break;
    while (1)
    {
      ++v12;
      if (v13)
        break;
      if (v12 == 2)
        goto LABEL_9;
      v13 = 0;
    }
  }
  if (v14 == 0.0)
  {
    v15 = *(float32x4_t *)(v9 + qword_255848938);
  }
  else
  {
LABEL_9:
    v16 = *(float32x2_t *)(v9 + qword_255848938);
    *(int32x2_t *)a9.i8 = vcge_f32(v16, *(float32x2_t *)a6.i8);
    *(int8x8_t *)v15.f32 = vbsl_s8(*(int8x8_t *)a9.i8, (int8x8_t)v16, *(int8x8_t *)a6.i8);
    a6.i32[0] = a6.i32[2];
    if (*(float *)&a6.i32[2] <= *(float *)(v9 + qword_255848938 + 8))
      a6.i32[0] = *(_DWORD *)(v9 + qword_255848938 + 8);
    v15.i64[1] = a6.u32[0];
  }
  if (*(_BYTE *)(v9 + qword_255848960) != 1 || (v17 = qword_255848950, *(_BYTE *)(v9 + qword_255848950) == 1))
  {
    a6.i32[0] = 0;
    a9.i32[0] = a3 & 1;
    v18 = vdupq_lane_s8((int8x8_t)*(_OWORD *)&vceqq_s8(a9, a6), 0);
    v19.i64[0] = a1;
    v19.i64[1] = a2;
    *(_DWORD *)(v9 + qword_255848940) = 0;
    *(int8x16_t *)(v9 + qword_255848958) = vbslq_s8(v18, v19, a5);
    v20 = (int32x4_t)vmulq_f32(v15, v15);
    *(float *)(v9 + qword_255848888) = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32(v20, 2), vaddq_f32((float32x4_t)v20, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v20.i8, 1))).f32[0])* a8;
    sub_226505918(*(double *)(v9 + qword_255848890), *(double *)(v9 + qword_255848890 + 16), *(__n128 *)(v9 + qword_255848890 + 32), *(__n128 *)(v9 + qword_255848890 + 48));
    if (*(float *)a5.i32 <= *(float *)(v9 + qword_255848880))
      a5.i32[0] = *(_DWORD *)(v9 + qword_255848880);
    *(_DWORD *)(v9 + qword_2558488C8) = a5.i32[0];
    if ((*(_BYTE *)(v9 + qword_25585B1D0) & 1) != 0 || (v17 = qword_255848950, *(_BYTE *)(v9 + qword_255848950) == 1))
    {
      *(float *)(v9 + qword_2558488C0) = a7;
      *(float *)(v9 + qword_2558488B0) = a7;
      v17 = qword_255848950;
      if ((*(_BYTE *)(v9 + qword_255848950) & 1) != 0)
        goto LABEL_20;
    }
  }
  if ((a4 & 1) != 0)
  {
LABEL_20:
    *(_BYTE *)(v9 + v17) = 0;
    a5.i32[0] = 1.0;
    sub_2265051AC(*(double *)a5.i64, 1.0);
  }
}

BOOL sub_226504FF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  double v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255841200);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22655C0E0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v17 - v10;
  v12 = v1 + qword_25585B198;
  swift_beginAccess();
  sub_2264533E8(v12, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_2264533A8((uint64_t)v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
    sub_22655C0C8();
    sub_22655C0A4();
    v14 = v13;
    v15 = *(void (**)(char *, uint64_t))(v6 + 8);
    v15(v8, v5);
    v15(v11, v5);
    if (v14 < 0.1)
      return 1;
  }
  if (*(_QWORD *)(v1 + qword_255848860) || *(_QWORD *)(v1 + qword_255848858))
    return 1;
  return *(_QWORD *)(v1 + qword_255848850) != 0;
}

uint64_t sub_2265051AC(double a1, float a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __float2 v9;
  __float2 v10;
  float32x4_t v11;
  float32x4_t v12;
  int32x4_t v13;
  int8x16_t v14;
  float32x4_t v15;
  __int128 v16;
  float v17;
  float v18;
  uint64_t v19;
  float v20;
  void (*v21)(_QWORD *, _QWORD);
  uint64_t v22;
  float v23;
  __int128 v25;
  float32x4_t v26;
  float v27;
  uint64_t (*v28)(_QWORD *, _QWORD);
  uint64_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x4_t v32;
  __int128 v33;
  __int128 v34;
  _QWORD v35[4];

  *(double *)&v34 = a1;
  v4 = sub_22655C1C4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __sincosf_stret(*(float *)(v2 + qword_2558488A8) * 0.5);
  *(float *)&v8 = v9.__cosval;
  *(_QWORD *)&v33 = v8;
  v32 = vmulq_n_f32((float32x4_t)xmmword_2265600C0, v9.__sinval);
  v10 = __sincosf_stret(*(float *)(v2 + qword_2558488B0) * 0.5);
  v11 = vmulq_n_f32((float32x4_t)xmmword_2265600A0, v10.__sinval);
  v11.i32[3] = LODWORD(v10.__cosval);
  v30 = v11;
  sub_22655C8B4();
  swift_retain();
  sub_22655C254();
  v31 = v12;
  swift_release();
  v13 = (int32x4_t)vnegq_f32(v30);
  v14 = (int8x16_t)vtrn2q_s32((int32x4_t)v30, vtrn1q_s32((int32x4_t)v30, v13));
  v15 = (float32x4_t)vrev64q_s32((int32x4_t)v30);
  v15.i32[0] = v13.i32[1];
  v15.i32[3] = v13.i32[2];
  simd_slerp(v31, vaddq_f32(vmlaq_laneq_f32(vmulq_n_f32(v30, *(float *)&v33), v15, v32, 2), vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v30, (int8x16_t)v13, 8uLL), *(float32x2_t *)v32.f32, 1), (float32x4_t)vextq_s8(v14, v14, 8uLL), v32.f32[0])), a2);
  v33 = v16;
  swift_retain();
  sub_22655C260();
  swift_release();
  type metadata accessor for DollHouseCamera();
  sub_22655C284();
  sub_22655C290();
  type metadata accessor for ARViewCameraEntity();
  sub_22655C284();
  v18 = v17;
  v19 = qword_2558488C8;
  v20 = v17 + (float)((float)(*(float *)(v2 + qword_2558488C8) - v17) * *(float *)&v34);
  v21 = (void (*)(_QWORD *, _QWORD))sub_22655C278();
  *(float *)(v22 + 8) = v20;
  v21(v35, 0);
  v23 = *(float *)&v34;
  *(float *)(v2 + qword_255848878) = *(float *)(v2 + qword_255848878)
                                   + (float)((float)(*(float *)(v2 + qword_2558488A0) - *(float *)(v2 + qword_255848878))
                                           * *(float *)&v34);
  *(float *)(v2 + qword_255848870) = *(float *)(v2 + qword_255848870)
                                   + (float)((float)(*(float *)(v2 + qword_255848888) - *(float *)(v2 + qword_255848870))
                                           * v23);
  if ((*(_BYTE *)(v2 + qword_255848910) & 1) != 0)
  {
    sub_22655C7E8();
    sub_22655C170();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    REOrthographicCameraComponentGetComponentType();
    REEntityGetOrAddComponentByClass();
    return REOrthographicCameraComponentSetScale();
  }
  else
  {
    v25 = *(_OWORD *)(v2 + qword_255848890 + 48);
    v33 = *(_OWORD *)(v2 + qword_255848890 + 32);
    v34 = v25;
    v26 = *(float32x4_t *)(v2 + qword_255848890 + 16);
    v31 = *(float32x4_t *)(v2 + qword_255848890);
    v32 = v26;
    sub_22655C7E8();
    sub_22655C170();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    RECustomMatrixCameraComponentGetComponentType();
    REEntityGetOrAddComponentByClass();
    RECustomMatrixCameraComponentSetProjectionFromMatrix();
    v27 = v18
        + (float)(*(float *)(v2 + qword_255848940)
                * (float)((float)(*(float *)(v2 + v19) * *(float *)(v2 + qword_2558488D0)) - v18));
    v28 = (uint64_t (*)(_QWORD *, _QWORD))sub_22655C278();
    *(float *)(v29 + 8) = v27;
    return v28(v35, 0);
  }
}

void sub_2265055B4(double a1, double a2, float32x4_t a3)
{
  uint64_t v3;
  float32x4_t v4;
  float32x4_t v5;
  int32x4_t v6;
  float32x2_t v7;
  float32x2_t v8;
  float32x4_t v9;
  int32x4_t v10;
  int32x4_t v11;
  float v12;
  int32x4_t v13;
  int32x4_t v14;

  if (*(_BYTE *)(v3 + qword_25585B1D0) == 1 && (*(_BYTE *)(v3 + qword_255848960) & 1) == 0)
  {
    v4 = vnegq_f32(a3);
    v4.i32[1] = 0;
    v5 = *(float32x4_t *)(v3 + qword_255848968);
    v6 = (int32x4_t)vmulq_f32(v5, v5);
    v6.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v6, 2), vadd_f32(*(float32x2_t *)v6.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v6.i8, 1))).u32[0];
    v7 = vrsqrte_f32((float32x2_t)v6.u32[0]);
    v8 = vmul_f32(v7, vrsqrts_f32((float32x2_t)v6.u32[0], vmul_f32(v7, v7)));
    v9 = vmulq_n_f32(v5, vmul_f32(v8, vrsqrts_f32((float32x2_t)v6.u32[0], vmul_f32(v8, v8))).f32[0]);
    v10 = (int32x4_t)vmulq_f32(v4, v4);
    v10.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v10, 2), vadd_f32(*(float32x2_t *)v10.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v10.i8, 1))).u32[0];
    *(float32x2_t *)v6.i8 = vrsqrte_f32((float32x2_t)v10.u32[0]);
    *(float32x2_t *)v6.i8 = vmul_f32(*(float32x2_t *)v6.i8, vrsqrts_f32((float32x2_t)v10.u32[0], vmul_f32(*(float32x2_t *)v6.i8, *(float32x2_t *)v6.i8)));
    v13 = (int32x4_t)v9;
    v14 = (int32x4_t)vmulq_n_f32(v4, vmul_f32(*(float32x2_t *)v6.i8, vrsqrts_f32((float32x2_t)v10.u32[0], vmul_f32(*(float32x2_t *)v6.i8, *(float32x2_t *)v6.i8))).f32[0]);
    v11 = (int32x4_t)vmulq_f32(v9, (float32x4_t)v14);
    v12 = acosf(vaddq_f32((float32x4_t)vdupq_laneq_s32(v11, 2), vaddq_f32((float32x4_t)v11, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v11.i8, 1))).f32[0]);
    if (vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v14, v14), (int8x16_t)v14, 0xCuLL), vnegq_f32((float32x4_t)v13)), (float32x4_t)v14, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v13, v13), (int8x16_t)v13, 0xCuLL)).f32[0] < 0.0)v12 = -v12;
    *(_DWORD *)(v3 + qword_2558488B0) = *(_DWORD *)(v3 + qword_2558488E8);
    *(float *)(v3 + qword_2558488B8) = v12;
    *(float *)(v3 + qword_2558488A8) = v12;
    *(_DWORD *)(v3 + qword_2558488A0) = 1065353216;
  }
}

uint64_t sub_226505700()
{
  uint64_t v0;

  sub_2264533A8(v0 + qword_25585B198);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_2265057EC()
{
  uint64_t v0;

  v0 = sub_22655C8C0();

  sub_2264533A8(v0 + qword_25585B198);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_2265058F0()
{
  sub_2265057EC();
  return swift_deallocClassInstance();
}

uint64_t sub_226505910()
{
  return type metadata accessor for DollHouseCamera();
}

void sub_226505918(double a1, double a2, __n128 a3, __n128 a4)
{
  sub_2264DC1D4(a1, a2, a3, a4);
}

uint64_t sub_2265059C8(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  _UNKNOWN **v5;
  __int128 v7[2];
  __int128 v8;
  uint64_t v9;
  _UNKNOWN **v10;

  v2 = *a1;
  *(_BYTE *)(v1 + 16) = v2;
  v3 = *(_QWORD *)(v1 + 24);
  *(_BYTE *)(v3 + 136) = v2;
  if (v2 == 1)
  {
    v4 = type metadata accessor for DebugMaterialFactory();
    v5 = &off_24EDE14F0;
  }
  else
  {
    v4 = type metadata accessor for OcclusionMaterialFactory();
    v5 = &off_24EDE1580;
  }
  v9 = v4;
  v10 = v5;
  *(_QWORD *)&v8 = swift_retain();
  sub_226438644(&v8, (uint64_t)v7);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v3 + 32);
  sub_226438644(v7, v3 + 32);
  return swift_endAccess();
}

uint64_t sub_226505A8C(float a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _UNKNOWN **v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[5];

  v2 = v1;
  *(_BYTE *)(v1 + 16) = 0;
  sub_22655C20C();
  swift_allocObject();
  *(_QWORD *)(v1 + 40) = sub_22655C1DC();
  type metadata accessor for MetalConstants();
  swift_initStaticObject();
  v4 = sub_22648BC28();
  v5 = type metadata accessor for OcclusionMaterialFactory();
  swift_allocObject();
  *(_QWORD *)(v2 + 48) = sub_2264616C8(v4);
  v6 = sub_22648BC28();
  v7 = type metadata accessor for DebugMaterialFactory();
  swift_allocObject();
  *(_QWORD *)(v2 + 56) = sub_226461F18(v6);
  swift_retain();
  sub_22655C5E4();
  swift_release();
  type metadata accessor for EdgeEntityFactory();
  v8 = swift_allocObject();
  *(_QWORD *)(v2 + 32) = v8;
  if (*(_BYTE *)(v2 + 16) == 1)
  {
    v5 = v7;
    v9 = &off_24EDE14F0;
  }
  else
  {
    v9 = &off_24EDE1580;
  }
  v14[3] = v5;
  v14[4] = v9;
  v14[0] = swift_retain();
  v10 = type metadata accessor for EntityManager();
  v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v5);
  swift_retain();
  v12 = sub_22644ECC0(v11, v8, 0, a1, v10, v5, (uint64_t)v9);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  *(_QWORD *)(v2 + 24) = v12;
  *(_QWORD *)(v12 + 72) = *(_QWORD *)(v2 + 40);
  swift_retain_n();
  swift_retain();
  swift_release();
  if (*(_QWORD *)(v12 + 72))
  {
    sub_22655C8B4();
    swift_retain();
    sub_22655C230();
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)(*(_QWORD *)(v2 + 24) + 24) = &off_24EDE6A00;
  swift_unknownObjectWeakAssign();
  return v2;
}

uint64_t sub_226505D0C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WorldViewManager()
{
  return objc_opt_self();
}

uint64_t sub_226505D70()
{
  return 3;
}

uint64_t sub_226505D78()
{
  return 2;
}

uint64_t sub_226505D80()
{
  _BYTE *v0;

  if (qword_25583F9D0 != -1)
    swift_once();
  v0 = off_25584AF28;
  swift_beginAccess();
  if (v0[40])
    return 9;
  else
    return 0;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

BOOL sub_226505E1C(uint64_t (*a1)(char *), _BOOL8 a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  int v16;
  BOOL v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char v21;
  char v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v25[2];
  int v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t);
  _BOOL8 v30;
  uint64_t (*v31)(char *);
  uint64_t v32;

  v4 = v3;
  v30 = a2;
  v31 = a1;
  v32 = sub_22655C140();
  v6 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a3 + 16);
  if (v12)
  {
    v13 = a3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v27 = *(_QWORD *)(v6 + 72);
    v28 = v8;
    v29 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v25[1] = a3;
    swift_bridgeObjectRetain();
    while (1)
    {
      v14 = v32;
      v29(v11, v13, v32);
      v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v15(v11, 0, 1, v14);
      v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v14);
      v17 = v16 != 1;
      if (v16 == 1)
        break;
      v26 = 1;
      v18 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v19 = v6;
      v20 = v28;
      v18(v28, v11, v14);
      v17 = v30;
      v21 = v31(v20);
      if (v4)
      {
        (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v14);
        swift_bridgeObjectRelease();
        return v17;
      }
      v22 = v21;
      v23 = v15;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v14);
      if ((v22 & 1) != 0)
      {
        v17 = v26;
        break;
      }
      v13 += v27;
      --v12;
      v4 = 0;
      v6 = v19;
      if (!v12)
        goto LABEL_9;
    }
  }
  else
  {
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
LABEL_9:
    v23(v11, 1, 1, v32);
    v17 = 0;
  }
  swift_bridgeObjectRelease();
  return v17;
}

void sub_226506044(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  sub_22650608C(a1, a2, a3, type metadata accessor for CapturedRoom.Surface, (void (*)(BOOL, uint64_t, uint64_t))sub_2264C7B14);
}

void sub_226506068(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  sub_22650608C(a1, a2, a3, type metadata accessor for CapturedRoom.Object, (void (*)(BOOL, uint64_t, uint64_t))sub_2264C7B9C);
}

void sub_22650608C(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(BOOL, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  void (*v20)(BOOL, uint64_t, uint64_t);
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *);
  uint64_t v27;
  uint64_t v28;

  v20 = a5;
  v6 = a4;
  v26 = a1;
  v27 = a2;
  v8 = a4(0);
  v25 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v24 = (uint64_t)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v20 - v11;
  v28 = MEMORY[0x24BEE4AF8];
  v23 = *(_QWORD *)(a3 + 16);
  if (v23)
  {
    v13 = 0;
    v14 = MEMORY[0x24BEE4AF8];
    v21 = v6;
    v22 = a3;
    while (v13 < *(_QWORD *)(a3 + 16))
    {
      v15 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
      v16 = *(_QWORD *)(v25 + 72);
      sub_22643D704(a3 + v15 + v16 * v13, (uint64_t)v12, v6);
      v17 = v26(v12);
      if (v5)
      {
        sub_22643D748((uint64_t)v12, v6);
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      if ((v17 & 1) != 0)
      {
        sub_22643F6AC((uint64_t)v12, v24, v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v20(0, *(_QWORD *)(v14 + 16) + 1, 1);
        v14 = v28;
        v19 = *(_QWORD *)(v28 + 16);
        v18 = *(_QWORD *)(v28 + 24);
        if (v19 >= v18 >> 1)
        {
          v20(v18 > 1, v19 + 1, 1);
          v14 = v28;
        }
        *(_QWORD *)(v14 + 16) = v19 + 1;
        v6 = v21;
        sub_22643F6AC(v24, v14 + v15 + v19 * v16, v21);
        a3 = v22;
      }
      else
      {
        sub_22643D748((uint64_t)v12, v6);
      }
      if (v23 == ++v13)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_22650629C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  id v6;

  *(_QWORD *)(v2 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB18E8]), sel_init);
  *(int64x2_t *)(v2 + 24) = vdupq_n_s64(0x1EuLL);
  *(_QWORD *)(v2 + 40) = 0;
  *(_QWORD *)(v2 + 48) = 0;
  v5 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v2 + 56) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v2 + 64) = v5;
  *(_QWORD *)(v2 + 88) = 0;
  *(_QWORD *)(v2 + 96) = 0xE000000000000000;
  *(_BYTE *)(v2 + 104) = 0;
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  v6 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v6, sel_addObserver_selector_name_object_, v2, sel_announcementFinished_, *MEMORY[0x24BEBDDA0], 0);

  return v2;
}

void sub_226506368(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t);
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t inited;
  void *v70;
  uint64_t v71;
  void *v72;
  void *v73;
  uint64_t v74;
  id v75;
  id v76;
  id v77;
  id v78;
  void *v79;
  void *v80;
  id v81;
  uint64_t v82;
  _QWORD v83[2];
  uint64_t v84;
  char *v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t, uint64_t);
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  char v105;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558480D0);
  MEMORY[0x24BDAC7A8](v3);
  v90 = (char *)v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for CapturedRoom.Object(0);
  v103 = *(_QWORD *)(v96 - 8);
  MEMORY[0x24BDAC7A8](v96);
  v88 = (uint64_t)v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v87 = (uint64_t)v83 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255842D10);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = type metadata accessor for CapturedRoom.Surface(0);
  v11 = *(_QWORD *)(v101 - 8);
  MEMORY[0x24BDAC7A8](v101);
  v92 = (uint64_t)v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v91 = (uint64_t)v83 - v14;
  v15 = sub_22655C140();
  v102 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v1 + 104) & 1) == 0)
  {
    v21 = *(_QWORD *)(v1 + 40);
    if (v21 < 30)
    {
      *(_QWORD *)(v1 + 40) = v21 + 1;
      return;
    }
    v99 = v20;
    *(_QWORD *)(v1 + 40) = 0;
    swift_beginAccess();
    v84 = v1;
    v22 = *(_QWORD *)(v1 + 64);
    v23 = *(_QWORD *)(v22 + 16);
    if (!v23)
    {
      v62 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v102 + 56);
      swift_bridgeObjectRetain();
      v89 = MEMORY[0x24BEE4AF8];
      v98 = MEMORY[0x24BEE4AF8];
      v62(v99, 1, 1, v15);
LABEL_36:
      swift_bridgeObjectRelease();
      sub_22650D280(v98, v89);
      v64 = v63;
      v66 = v65;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v67 = HIBYTE(v66) & 0xF;
      if ((v66 & 0x2000000000000000) == 0)
        v67 = v64 & 0xFFFFFFFFFFFFLL;
      if (v67)
      {
        v68 = MEMORY[0x24BEE4AF8];
        __swift_instantiateConcreteTypeFromMangledName(&qword_255848D28);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_22655FA10;
        v70 = (void *)*MEMORY[0x24BEBDEE8];
        *(_QWORD *)(inited + 32) = *MEMORY[0x24BEBDEE8];
        v71 = MEMORY[0x24BEE1328];
        *(_BYTE *)(inited + 40) = 1;
        v72 = (void *)*MEMORY[0x24BEBDED8];
        *(_QWORD *)(inited + 64) = v71;
        *(_QWORD *)(inited + 72) = v72;
        v73 = (void *)*MEMORY[0x24BEBDEB0];
        type metadata accessor for UIAccessibilityPriority(0);
        *(_QWORD *)(inited + 104) = v74;
        *(_QWORD *)(inited + 80) = v73;
        v75 = v70;
        v76 = v72;
        v77 = v73;
        sub_2265142A0(inited);
        v78 = objc_allocWithZone(MEMORY[0x24BDD1458]);
        v79 = (void *)sub_22655CD64();
        swift_bridgeObjectRelease();
        type metadata accessor for Key(0);
        sub_226437F28(&qword_2558401C0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_22655F8A4);
        v80 = (void *)sub_22655CCBC();
        swift_bridgeObjectRelease();
        v81 = objc_msgSend(v78, sel_initWithString_attributes_, v79, v80);

        v82 = v84;
        *(_BYTE *)(v84 + 104) = 1;
        UIAccessibilityPostNotification(*MEMORY[0x24BEBDDB0], v81);
        *(_QWORD *)(v82 + 64) = v68;

      }
      goto LABEL_40;
    }
    v24 = (uint64_t *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_allUuidToSurfaces);
    v25 = (uint64_t *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_allUuidToObjects);
    v26 = v102;
    v27 = v22 + ((*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80));
    v83[1] = v22;
    swift_bridgeObjectRetain();
    v95 = v24;
    swift_beginAccess();
    v86 = v25;
    swift_beginAccess();
    v94 = *(_QWORD *)(v26 + 72);
    v97 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
    v89 = MEMORY[0x24BEE4AF8];
    v98 = MEMORY[0x24BEE4AF8];
    v28 = (uint64_t)v90;
    v29 = v26;
    v85 = v10;
    v93 = v11;
    v100 = v17;
    while (1)
    {
      v32 = (uint64_t)v10;
      v33 = v99;
      v97(v99, v27, v15);
      v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
      v34(v33, 0, 1, v15);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v33, 1, v15) == 1)
        goto LABEL_36;
      v35 = v29;
      v36 = v28;
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v17, v33, v15);
      v37 = *v95;
      if (*(_QWORD *)(*v95 + 16))
      {
        swift_bridgeObjectRetain();
        v38 = sub_226534858((uint64_t)v17);
        v10 = (char *)v32;
        if ((v39 & 1) != 0)
        {
          sub_22643D704(*(_QWORD *)(v37 + 56) + *(_QWORD *)(v11 + 72) * v38, v32, type metadata accessor for CapturedRoom.Surface);
          v40 = 0;
        }
        else
        {
          v40 = 1;
        }
        v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
        v42 = v11;
        v43 = v101;
        v41(v32, v40, 1, v101);
        swift_bridgeObjectRelease();
        v44 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v32, 1, v43);
        v17 = v100;
        if (v44 != 1)
        {
          v49 = v32;
          v50 = v91;
          v51 = type metadata accessor for CapturedRoom.Surface;
          sub_22643F6AC(v49, v91, type metadata accessor for CapturedRoom.Surface);
          sub_22643D704(v50, v92, type metadata accessor for CapturedRoom.Surface);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v98 = sub_226486C18(0, *(_QWORD *)(v98 + 16) + 1, 1, v98);
          v11 = v93;
          v29 = v102;
          v53 = *(_QWORD *)(v98 + 16);
          v52 = *(_QWORD *)(v98 + 24);
          if (v53 >= v52 >> 1)
            v98 = sub_226486C18(v52 > 1, v53 + 1, 1, v98);
          v30 = v98;
          *(_QWORD *)(v98 + 16) = v53 + 1;
          sub_22643F6AC(v92, v30+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v53, type metadata accessor for CapturedRoom.Surface);
          v31 = &v105;
          goto LABEL_8;
        }
      }
      else
      {
        v10 = (char *)v32;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v32, 1, 1, v101);
      }
      sub_22643D7E4((uint64_t)v10, &qword_255842D10);
      v45 = *v86;
      if (!*(_QWORD *)(*v86 + 16))
      {
        v28 = v36;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v103 + 56))(v36, 1, 1, v96);
        v11 = v93;
LABEL_27:
        v29 = v102;
        (*(void (**)(char *, uint64_t))(v102 + 8))(v17, v15);
        sub_22643D7E4(v28, (uint64_t *)&unk_2558480D0);
        goto LABEL_9;
      }
      swift_bridgeObjectRetain();
      v46 = sub_226534858((uint64_t)v17);
      if ((v47 & 1) != 0)
      {
        sub_22643D704(*(_QWORD *)(v45 + 56) + *(_QWORD *)(v103 + 72) * v46, v36, type metadata accessor for CapturedRoom.Object);
        v48 = 0;
      }
      else
      {
        v48 = 1;
      }
      v54 = v103;
      v55 = v96;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v103 + 56))(v36, v48, 1, v96);
      swift_bridgeObjectRelease();
      v56 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v36, 1, v55);
      v10 = v85;
      v11 = v93;
      v28 = v36;
      if (v56 == 1)
        goto LABEL_27;
      v57 = v87;
      v51 = type metadata accessor for CapturedRoom.Object;
      sub_22643F6AC(v36, v87, type metadata accessor for CapturedRoom.Object);
      sub_22643D704(v57, v88, type metadata accessor for CapturedRoom.Object);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v29 = v102;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v89 = sub_226488BB8(0, *(_QWORD *)(v89 + 16) + 1, 1, v89);
      v60 = *(_QWORD *)(v89 + 16);
      v59 = *(_QWORD *)(v89 + 24);
      if (v60 >= v59 >> 1)
        v89 = sub_226488BB8(v59 > 1, v60 + 1, 1, v89);
      v61 = v89;
      *(_QWORD *)(v89 + 16) = v60 + 1;
      sub_22643F6AC(v88, v61+ ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80))+ *(_QWORD *)(v103 + 72) * v60, type metadata accessor for CapturedRoom.Object);
      v31 = &v104;
LABEL_8:
      sub_22643D748(*((_QWORD *)v31 - 32), v51);
      v17 = v100;
      (*(void (**)(char *, uint64_t))(v29 + 8))(v100, v15);
      v28 = (uint64_t)v90;
LABEL_9:
      v27 += v94;
      if (!--v23)
      {
        v34(v99, 1, 1, v15);
        goto LABEL_36;
      }
    }
  }
  swift_beginAccess();
  *(_QWORD *)(v1 + 64) = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(_QWORD *)(v1 + 56) = MEMORY[0x24BEE4B00];
LABEL_40:
  swift_bridgeObjectRelease();
}

uint64_t sub_226506D84(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  int v30;
  _QWORD *v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, char *, uint64_t);
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v54;
  char v55;
  unint64_t v56;
  uint64_t v57;
  _BOOL8 v58;
  uint64_t v59;
  char v60;
  unint64_t v61;
  char v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t, uint64_t);
  int v73;
  _QWORD *v74;
  char v75;
  unint64_t v76;
  uint64_t v77;
  _BOOL8 v78;
  uint64_t v79;
  char v80;
  unint64_t v81;
  char v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t, uint64_t);
  int v93;
  _QWORD *v94;
  char v95;
  unint64_t v96;
  uint64_t v97;
  _BOOL8 v98;
  uint64_t v99;
  char v100;
  unint64_t v101;
  char v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t result;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(uint64_t, uint64_t, uint64_t);
  int v114;
  _QWORD *v115;
  char v116;
  unint64_t v117;
  uint64_t v118;
  _BOOL8 v119;
  uint64_t v120;
  char v121;
  unint64_t v122;
  char v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  _QWORD *v146;

  v128 = type metadata accessor for CapturedRoom.Object(0);
  v129 = *(_QWORD *)(v128 - 8);
  MEMORY[0x24BDAC7A8](v128);
  v134 = (uint64_t)&v127 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_22655C140();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v141 = (uint64_t)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v142 = (uint64_t)&v127 - v7;
  MEMORY[0x24BDAC7A8](v8);
  v143 = (uint64_t)&v127 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v144 = (char *)&v127 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v127 - v13;
  v15 = type metadata accessor for CapturedRoom.Surface(0);
  v16 = *(_QWORD *)(v15 - 8);
  v131 = v15;
  v132 = v16;
  MEMORY[0x24BDAC7A8](v15);
  v138 = (uint64_t)&v127 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v139 = (uint64_t)&v127 - v19;
  MEMORY[0x24BDAC7A8](v20);
  v140 = (uint64_t)&v127 - v21;
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v127 - v23;
  v25 = *a1;
  v26 = *(_QWORD *)(*a1 + 16);
  v145 = v3;
  v130 = a1;
  if (!v26)
  {
LABEL_17:
    v45 = a1[1];
    v46 = *(_QWORD *)(v45 + 16);
    if (!v46)
      goto LABEL_33;
    v137 = (char *)(v140 + *(int *)(v131 + 44));
    v47 = (_QWORD *)(v133 + 56);
    v48 = v45 + ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80));
    v49 = *(char **)(v132 + 72);
    v135 = v45;
    v136 = v49;
    swift_bridgeObjectRetain();
    v50 = (uint64_t)v144;
    while (1)
    {
      v51 = v140;
      sub_22643D704(v48, v140, type metadata accessor for CapturedRoom.Surface);
      v52 = *(void (**)(uint64_t, char *, uint64_t))(v4 + 16);
      v52(v50, v137, v3);
      sub_22643D748(v51, type metadata accessor for CapturedRoom.Surface);
      swift_beginAccess();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v146 = (_QWORD *)*v47;
      v54 = v146;
      *v47 = 0x8000000000000000;
      v56 = sub_226534858(v50);
      v57 = v54[2];
      v58 = (v55 & 1) == 0;
      v59 = v57 + v58;
      if (__OFADD__(v57, v58))
        goto LABEL_83;
      v60 = v55;
      if (v54[3] >= v59)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v3 = v145;
          v63 = v146;
          if ((v55 & 1) == 0)
            goto LABEL_28;
        }
        else
        {
          sub_22654A028();
          v3 = v145;
          v63 = v146;
          if ((v60 & 1) == 0)
            goto LABEL_28;
        }
      }
      else
      {
        sub_226544F70(v59, isUniquelyReferenced_nonNull_native);
        v61 = sub_226534858((uint64_t)v144);
        if ((v60 & 1) != (v62 & 1))
          goto LABEL_92;
        v56 = v61;
        v3 = v145;
        v63 = v146;
        if ((v60 & 1) == 0)
        {
LABEL_28:
          v63[(v56 >> 6) + 8] |= 1 << v56;
          v50 = (uint64_t)v144;
          v52(v63[6] + *(_QWORD *)(v4 + 72) * v56, v144, v3);
          *(_BYTE *)(v63[7] + v56) = 0;
          v64 = v63[2];
          v43 = __OFADD__(v64, 1);
          v65 = v64 + 1;
          if (v43)
            goto LABEL_88;
          v63[2] = v65;
          goto LABEL_20;
        }
      }
      *(_BYTE *)(v63[7] + v56) = 0;
      v50 = (uint64_t)v144;
LABEL_20:
      *v47 = v63;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v50, v3);
      swift_endAccess();
      v48 += (uint64_t)v136;
      if (!--v46)
      {
        swift_bridgeObjectRelease();
        a1 = v130;
LABEL_33:
        v66 = a1[3];
        v67 = *(_QWORD *)(v66 + 16);
        if (!v67)
          goto LABEL_49;
        v144 = (char *)(v139 + *(int *)(v131 + 44));
        v68 = (_QWORD *)(v133 + 56);
        v69 = v66 + ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80));
        v140 = *(_QWORD *)(v132 + 72);
        v137 = (char *)v66;
        swift_bridgeObjectRetain();
        v70 = v143;
        while (2)
        {
          v71 = v139;
          sub_22643D704(v69, v139, type metadata accessor for CapturedRoom.Surface);
          v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
          v72(v70, (uint64_t)v144, v3);
          sub_22643D748(v71, type metadata accessor for CapturedRoom.Surface);
          swift_beginAccess();
          v73 = swift_isUniquelyReferenced_nonNull_native();
          v146 = (_QWORD *)*v68;
          v74 = v146;
          *v68 = 0x8000000000000000;
          v76 = sub_226534858(v70);
          v77 = v74[2];
          v78 = (v75 & 1) == 0;
          v79 = v77 + v78;
          if (__OFADD__(v77, v78))
            goto LABEL_84;
          v80 = v75;
          if (v74[3] >= v79)
          {
            if ((v73 & 1) != 0)
            {
              v3 = v145;
              v83 = v146;
              if ((v75 & 1) == 0)
                goto LABEL_44;
            }
            else
            {
              sub_22654A028();
              v3 = v145;
              v83 = v146;
              if ((v80 & 1) == 0)
                goto LABEL_44;
            }
          }
          else
          {
            sub_226544F70(v79, v73);
            v81 = sub_226534858(v143);
            if ((v80 & 1) != (v82 & 1))
              goto LABEL_92;
            v76 = v81;
            v3 = v145;
            v83 = v146;
            if ((v80 & 1) == 0)
            {
LABEL_44:
              v83[(v76 >> 6) + 8] |= 1 << v76;
              v70 = v143;
              v72(v83[6] + *(_QWORD *)(v4 + 72) * v76, v143, v3);
              *(_BYTE *)(v83[7] + v76) = 0;
              v84 = v83[2];
              v43 = __OFADD__(v84, 1);
              v85 = v84 + 1;
              if (v43)
                goto LABEL_89;
              v83[2] = v85;
LABEL_36:
              *v68 = v83;
              swift_bridgeObjectRelease();
              (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v70, v3);
              swift_endAccess();
              v69 += v140;
              if (--v67)
                continue;
              swift_bridgeObjectRelease();
              a1 = v130;
LABEL_49:
              v86 = a1[2];
              v87 = *(_QWORD *)(v86 + 16);
              if (!v87)
                goto LABEL_65;
              v144 = (char *)(v138 + *(int *)(v131 + 44));
              v88 = (_QWORD *)(v133 + 56);
              v89 = v86
                  + ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80));
              v143 = *(_QWORD *)(v132 + 72);
              v140 = v86;
              swift_bridgeObjectRetain();
              v90 = v142;
              while (2)
              {
                v91 = v138;
                sub_22643D704(v89, v138, type metadata accessor for CapturedRoom.Surface);
                v92 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
                v92(v90, (uint64_t)v144, v3);
                sub_22643D748(v91, type metadata accessor for CapturedRoom.Surface);
                swift_beginAccess();
                v93 = swift_isUniquelyReferenced_nonNull_native();
                v146 = (_QWORD *)*v88;
                v94 = v146;
                *v88 = 0x8000000000000000;
                v96 = sub_226534858(v90);
                v97 = v94[2];
                v98 = (v95 & 1) == 0;
                v99 = v97 + v98;
                if (__OFADD__(v97, v98))
                  goto LABEL_85;
                v100 = v95;
                if (v94[3] >= v99)
                {
                  if ((v93 & 1) != 0)
                  {
                    v3 = v145;
                    v103 = v146;
                    if ((v95 & 1) == 0)
                      goto LABEL_60;
                  }
                  else
                  {
                    sub_22654A028();
                    v3 = v145;
                    v103 = v146;
                    if ((v100 & 1) == 0)
                      goto LABEL_60;
                  }
                }
                else
                {
                  sub_226544F70(v99, v93);
                  v101 = sub_226534858(v142);
                  if ((v100 & 1) != (v102 & 1))
                    goto LABEL_92;
                  v96 = v101;
                  v3 = v145;
                  v103 = v146;
                  if ((v100 & 1) == 0)
                  {
LABEL_60:
                    v103[(v96 >> 6) + 8] |= 1 << v96;
                    v90 = v142;
                    v92(v103[6] + *(_QWORD *)(v4 + 72) * v96, v142, v3);
                    *(_BYTE *)(v103[7] + v96) = 0;
                    v104 = v103[2];
                    v43 = __OFADD__(v104, 1);
                    v105 = v104 + 1;
                    if (v43)
                      goto LABEL_90;
                    v103[2] = v105;
LABEL_52:
                    *v88 = v103;
                    swift_bridgeObjectRelease();
                    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v90, v3);
                    swift_endAccess();
                    v89 += v143;
                    if (--v87)
                      continue;
                    swift_bridgeObjectRelease();
                    a1 = v130;
LABEL_65:
                    result = a1[5];
                    v107 = *(_QWORD *)(result + 16);
                    if (!v107)
                      return result;
                    v144 = (char *)(v134 + *(int *)(v128 + 32));
                    v108 = (_QWORD *)(v133 + 56);
                    v109 = result
                         + ((*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80));
                    v110 = *(_QWORD *)(v129 + 72);
                    v142 = result;
                    v143 = v110;
                    swift_bridgeObjectRetain();
                    v111 = v141;
                    while (2)
                    {
                      v112 = v134;
                      sub_22643D704(v109, v134, type metadata accessor for CapturedRoom.Object);
                      v113 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
                      v113(v111, (uint64_t)v144, v3);
                      sub_22643D748(v112, type metadata accessor for CapturedRoom.Object);
                      swift_beginAccess();
                      v114 = swift_isUniquelyReferenced_nonNull_native();
                      v146 = (_QWORD *)*v108;
                      v115 = v146;
                      *v108 = 0x8000000000000000;
                      v117 = sub_226534858(v111);
                      v118 = v115[2];
                      v119 = (v116 & 1) == 0;
                      v120 = v118 + v119;
                      if (__OFADD__(v118, v119))
                        goto LABEL_86;
                      v121 = v116;
                      if (v115[3] >= v120)
                      {
                        if ((v114 & 1) != 0)
                        {
                          v3 = v145;
                          v124 = v146;
                          if ((v116 & 1) == 0)
                            goto LABEL_76;
                        }
                        else
                        {
                          sub_22654A028();
                          v3 = v145;
                          v124 = v146;
                          if ((v121 & 1) == 0)
                            goto LABEL_76;
                        }
                      }
                      else
                      {
                        sub_226544F70(v120, v114);
                        v122 = sub_226534858(v141);
                        if ((v121 & 1) != (v123 & 1))
                          goto LABEL_92;
                        v117 = v122;
                        v3 = v145;
                        v124 = v146;
                        if ((v121 & 1) == 0)
                        {
LABEL_76:
                          v124[(v117 >> 6) + 8] |= 1 << v117;
                          v111 = v141;
                          v113(v124[6] + *(_QWORD *)(v4 + 72) * v117, v141, v3);
                          *(_BYTE *)(v124[7] + v117) = 0;
                          v125 = v124[2];
                          v43 = __OFADD__(v125, 1);
                          v126 = v125 + 1;
                          if (v43)
                            goto LABEL_91;
                          v124[2] = v126;
LABEL_68:
                          *v108 = v124;
                          swift_bridgeObjectRelease();
                          (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v111, v3);
                          swift_endAccess();
                          v109 += v143;
                          if (!--v107)
                            return swift_bridgeObjectRelease();
                          continue;
                        }
                      }
                      break;
                    }
                    *(_BYTE *)(v124[7] + v117) = 0;
                    v111 = v141;
                    goto LABEL_68;
                  }
                }
                break;
              }
              *(_BYTE *)(v103[7] + v96) = 0;
              v90 = v142;
              goto LABEL_52;
            }
          }
          break;
        }
        *(_BYTE *)(v83[7] + v76) = 0;
        v70 = v143;
        goto LABEL_36;
      }
    }
  }
  v137 = &v24[*(int *)(v131 + 44)];
  v27 = (_QWORD *)(v133 + 56);
  v28 = v25 + ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80));
  v135 = *(_QWORD *)(v132 + 72);
  v127 = v25;
  swift_bridgeObjectRetain();
  v136 = v24;
  while (1)
  {
    sub_22643D704(v28, (uint64_t)v24, type metadata accessor for CapturedRoom.Surface);
    v29 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    v29(v14, v137, v3);
    sub_22643D748((uint64_t)v24, type metadata accessor for CapturedRoom.Surface);
    swift_beginAccess();
    v30 = swift_isUniquelyReferenced_nonNull_native();
    v146 = (_QWORD *)*v27;
    v31 = v146;
    *v27 = 0x8000000000000000;
    v32 = (uint64_t)v14;
    v34 = sub_226534858((uint64_t)v14);
    v35 = v31[2];
    v36 = (v33 & 1) == 0;
    v37 = v35 + v36;
    if (__OFADD__(v35, v36))
      break;
    v38 = v33;
    if (v31[3] >= v37)
    {
      if ((v30 & 1) != 0)
      {
        v3 = v145;
        v41 = v146;
        if ((v33 & 1) == 0)
          goto LABEL_12;
      }
      else
      {
        sub_22654A028();
        v3 = v145;
        v41 = v146;
        if ((v38 & 1) == 0)
          goto LABEL_12;
      }
    }
    else
    {
      sub_226544F70(v37, v30);
      v39 = sub_226534858(v32);
      if ((v38 & 1) != (v40 & 1))
        goto LABEL_92;
      v34 = v39;
      v3 = v145;
      v41 = v146;
      if ((v38 & 1) == 0)
      {
LABEL_12:
        v41[(v34 >> 6) + 8] |= 1 << v34;
        v14 = (char *)v32;
        v29((char *)(v41[6] + *(_QWORD *)(v4 + 72) * v34), (char *)v32, v3);
        *(_BYTE *)(v41[7] + v34) = 0;
        v42 = v41[2];
        v43 = __OFADD__(v42, 1);
        v44 = v42 + 1;
        if (v43)
          goto LABEL_87;
        v41[2] = v44;
        goto LABEL_4;
      }
    }
    *(_BYTE *)(v41[7] + v34) = 0;
    v14 = (char *)v32;
LABEL_4:
    *v27 = v41;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v14, v3);
    swift_endAccess();
    v24 = v136;
    v28 += v135;
    if (!--v26)
    {
      swift_bridgeObjectRelease();
      a1 = v130;
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
LABEL_92:
  result = sub_22655D5A4();
  __break(1u);
  return result;
}

unint64_t sub_226507910(uint64_t a1, __n128 a2, float a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;

  v6 = v5;
  v18 = MEMORY[0x24BEE4AF8];
  v19 = MEMORY[0x24BEE4AF8];
  v10 = sub_22654F7BC();
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v12 = 0;
    do
    {
      v13 = v10 + 16 * v12++;
      v17 = *(_OWORD *)(v13 + 32);
      swift_retain();
      *(float *)&v14 = a3;
      sub_226507A00((uint64_t)&v17, v6, a5, a1, &v19, &v18, v14, a2);
      swift_release();
    }
    while (v11 != v12);
    swift_bridgeObjectRelease();
    return v19;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
}

uint64_t sub_226507A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, unint64_t *a6, double a7, __n128 a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  void (*v48)(char *, unint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t result;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t *v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t *v77;
  unint64_t v78;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(uint64_t);
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t *v88;
  unint64_t v89;
  char v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  void (*v102)(uint64_t, uint64_t);
  unint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  unint64_t v108;
  char v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  __int128 v113;
  char *v114;
  char *v115;
  unint64_t *v116;
  unint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  __n128 v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  char v146;

  v116 = a6;
  v117 = a5;
  v126 = a4;
  v135 = a8;
  v136 = a3;
  v142 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558480D0);
  MEMORY[0x24BDAC7A8](v9);
  v127 = (char *)&v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = type metadata accessor for CapturedRoom.Object(0);
  v128 = *(_QWORD *)(v122 - 8);
  MEMORY[0x24BDAC7A8](v122);
  v119 = (uint64_t)&v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v118 = (uint64_t)&v113 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255842D10);
  MEMORY[0x24BDAC7A8](v14);
  v124 = (uint64_t)&v113 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = type metadata accessor for CapturedRoom.Surface(0);
  v125 = *(_QWORD *)(v123 - 8);
  MEMORY[0x24BDAC7A8](v123);
  v121 = (uint64_t)&v113 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v120 = (uint64_t)&v113 - v18;
  v19 = sub_22655C470();
  v143 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v113 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255848D20);
  MEMORY[0x24BDAC7A8](v22);
  v137 = (char *)&v113 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_22655C3EC();
  v133 = *(_QWORD *)(v134 - 8);
  MEMORY[0x24BDAC7A8](v134);
  v132 = (char *)&v113 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_22655C548();
  v130 = *(_QWORD *)(v131 - 8);
  MEMORY[0x24BDAC7A8](v131);
  v129 = (char *)&v113 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_22655C1C4();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v113 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_22655C140();
  v141 = *(_QWORD *)(v139 - 8);
  MEMORY[0x24BDAC7A8](v139);
  v114 = (char *)&v113 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v115 = (char *)&v113 - v32;
  v34 = MEMORY[0x24BDAC7A8](v33);
  v36 = (char *)&v113 - v35;
  (*(void (**)(_QWORD, double))(*(_QWORD *)(a1 + 8) + 8))(**(_QWORD **)a1, v34);
  sub_22655C7E8();
  sub_22655C170();
  v37 = v29;
  v38 = v142;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v37, v26);
  if (!RECheckEntityInsideCustomMatrixCameraFrustumAnyViewWithCustomViewport())
  {
    sub_226508768((uint64_t)v36);
    return (*(uint64_t (**)(char *, uint64_t))(v141 + 8))(v36, v139);
  }
  v138 = v36;
  sub_22655C284();
  v113 = v39;
  v40 = v130;
  v41 = v129;
  v42 = v131;
  (*(void (**)(char *, _QWORD, uint64_t))(v130 + 104))(v129, *MEMORY[0x24BDE66D0], v131);
  v43 = v132;
  sub_22655C3E0();
  v44 = sub_22655C5D8();
  (*(void (**)(char *, uint64_t))(v133 + 8))(v43, v134);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v42);
  v45 = *(_QWORD *)(v44 + 16);
  if (!v45)
  {
    v52 = 1;
    v50 = (uint64_t)v138;
LABEL_10:
    v54 = (uint64_t)v137;
LABEL_12:
    v55 = v143;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v143 + 56))(v54, v52, 1, v19);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v54, 1, v19) != 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v50, v139);
      return sub_22643D7E4(v54, &qword_255848D20);
    }
    sub_22643D7E4(v54, &qword_255848D20);
    v56 = v126;
    v57 = (uint64_t *)(v126 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_allUuidToSurfaces);
    swift_beginAccess();
    v58 = *v57;
    v59 = v139;
    if (*(_QWORD *)(v58 + 16))
    {
      swift_bridgeObjectRetain();
      v60 = sub_226534858((uint64_t)v138);
      v61 = v128;
      v62 = v125;
      v63 = v124;
      v64 = v59;
      if ((v65 & 1) != 0)
      {
        sub_22643D704(*(_QWORD *)(v58 + 56) + *(_QWORD *)(v125 + 72) * v60, v124, type metadata accessor for CapturedRoom.Surface);
        v66 = 0;
      }
      else
      {
        v66 = 1;
      }
      v69 = v123;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56))(v63, v66, 1, v123);
      swift_bridgeObjectRelease();
      v70 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v63, 1, v69);
      v59 = v64;
      v67 = v61;
      v68 = (uint64_t)v127;
      if (v70 != 1)
      {
        v76 = v120;
        sub_22643F6AC(v63, v120, type metadata accessor for CapturedRoom.Surface);
        sub_22643D704(v76, v121, type metadata accessor for CapturedRoom.Surface);
        v77 = v117;
        v78 = *v117;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v77 = v78;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v78 = sub_226486C18(0, *(_QWORD *)(v78 + 16) + 1, 1, v78);
          *v77 = v78;
        }
        v81 = *(_QWORD *)(v78 + 16);
        v80 = *(_QWORD *)(v78 + 24);
        if (v81 >= v80 >> 1)
        {
          v78 = sub_226486C18(v80 > 1, v81 + 1, 1, v78);
          *v77 = v78;
        }
        *(_QWORD *)(v78 + 16) = v81 + 1;
        v82 = v78
            + ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))
            + *(_QWORD *)(v62 + 72) * v81;
        v83 = type metadata accessor for CapturedRoom.Surface;
        sub_22643F6AC(v121, v82, type metadata accessor for CapturedRoom.Surface);
        v84 = &v146;
        goto LABEL_38;
      }
    }
    else
    {
      v63 = v124;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v125 + 56))(v124, 1, 1, v123);
      v67 = v128;
      v68 = (uint64_t)v127;
    }
    sub_22643D7E4(v63, &qword_255842D10);
    v71 = (uint64_t *)(v56 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_allUuidToObjects);
    swift_beginAccess();
    v72 = *v71;
    if (!*(_QWORD *)(v72 + 16))
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v68, 1, 1, v122);
      goto LABEL_31;
    }
    swift_bridgeObjectRetain();
    v73 = sub_226534858((uint64_t)v138);
    if ((v74 & 1) != 0)
    {
      sub_22643D704(*(_QWORD *)(v72 + 56) + *(_QWORD *)(v67 + 72) * v73, v68, type metadata accessor for CapturedRoom.Object);
      v75 = 0;
    }
    else
    {
      v75 = 1;
    }
    v85 = v122;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v68, v75, 1, v122);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v68, 1, v85) == 1)
    {
LABEL_31:
      sub_22643D7E4(v68, (uint64_t *)&unk_2558480D0);
      if ((*(_BYTE *)(v38 + 104) & 1) != 0)
        return (*(uint64_t (**)(char *, uint64_t))(v141 + 8))(v138, v59);
LABEL_39:
      swift_beginAccess();
      v94 = *(_QWORD *)(v38 + 56);
      if (*(_QWORD *)(v94 + 16))
      {
        swift_bridgeObjectRetain();
        v95 = sub_226534858((uint64_t)v138);
        if ((v96 & 1) != 0)
        {
          v97 = *(_BYTE *)(*(_QWORD *)(v94 + 56) + v95);
          swift_bridgeObjectRelease();
          if ((v97 & 1) == 0)
          {
            v98 = v141;
            v99 = (uint64_t)v115;
            v100 = (uint64_t)v138;
            v143 = *(_QWORD *)(v141 + 16);
            ((void (*)(char *, char *, uint64_t))v143)(v115, v138, v59);
            swift_beginAccess();
            v101 = swift_isUniquelyReferenced_nonNull_native();
            v144 = *(_QWORD *)(v38 + 56);
            *(_QWORD *)(v38 + 56) = 0x8000000000000000;
            sub_226523750(1, v99, v101);
            *(_QWORD *)(v38 + 56) = v144;
            swift_bridgeObjectRelease();
            v102 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
            v102(v99, v59);
            swift_endAccess();
            v103 = (unint64_t *)(v38 + 64);
            v104 = swift_beginAccess();
            v105 = *(_QWORD *)(v38 + 64);
            MEMORY[0x24BDAC7A8](v104);
            *((_QWORD *)&v113 - 2) = v100;
            swift_bridgeObjectRetain();
            LOBYTE(v99) = sub_226505E1C((uint64_t (*)(char *))sub_22650B568, (_BOOL8)(&v113 - 2), v105);
            swift_bridgeObjectRelease();
            if ((v99 & 1) != 0)
            {
              v106 = v100;
            }
            else
            {
              v107 = v114;
              ((void (*)(char *, uint64_t, uint64_t))v143)(v114, v100, v59);
              swift_beginAccess();
              v108 = *v103;
              v109 = swift_isUniquelyReferenced_nonNull_native();
              *v103 = v108;
              if ((v109 & 1) == 0)
              {
                v108 = sub_226487A4C(0, *(_QWORD *)(v108 + 16) + 1, 1, v108);
                *v103 = v108;
              }
              v110 = v141;
              v112 = *(_QWORD *)(v108 + 16);
              v111 = *(_QWORD *)(v108 + 24);
              if (v112 >= v111 >> 1)
              {
                v108 = sub_226487A4C(v111 > 1, v112 + 1, 1, v108);
                *v103 = v108;
              }
              *(_QWORD *)(v108 + 16) = v112 + 1;
              (*(void (**)(unint64_t, char *, uint64_t))(v110 + 32))(v108+ ((*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80))+ *(_QWORD *)(v110 + 72) * v112, v107, v59);
              swift_endAccess();
              v106 = (uint64_t)v138;
            }
            return ((uint64_t (*)(uint64_t, uint64_t))v102)(v106, v59);
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      return (*(uint64_t (**)(char *, uint64_t))(v141 + 8))(v138, v59);
    }
    v86 = v68;
    v87 = v118;
    sub_22643F6AC(v86, v118, type metadata accessor for CapturedRoom.Object);
    sub_22643D704(v87, v119, type metadata accessor for CapturedRoom.Object);
    v88 = v116;
    v89 = *v116;
    v90 = swift_isUniquelyReferenced_nonNull_native();
    *v88 = v89;
    if ((v90 & 1) == 0)
    {
      v89 = sub_226488BB8(0, *(_QWORD *)(v89 + 16) + 1, 1, v89);
      *v116 = v89;
    }
    v92 = *(_QWORD *)(v89 + 16);
    v91 = *(_QWORD *)(v89 + 24);
    if (v92 >= v91 >> 1)
    {
      v89 = sub_226488BB8(v91 > 1, v92 + 1, 1, v89);
      *v116 = v89;
    }
    *(_QWORD *)(v89 + 16) = v92 + 1;
    v93 = v89
        + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))
        + *(_QWORD *)(v67 + 72) * v92;
    v83 = type metadata accessor for CapturedRoom.Object;
    sub_22643F6AC(v119, v93, type metadata accessor for CapturedRoom.Object);
    v84 = &v145;
LABEL_38:
    sub_22643D748(*((_QWORD *)v84 - 32), v83);
    if ((*(_BYTE *)(v38 + 104) & 1) != 0)
      return (*(uint64_t (**)(char *, uint64_t))(v141 + 8))(v138, v59);
    goto LABEL_39;
  }
  v46 = v44 + ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80));
  v47 = *(_QWORD *)(v143 + 72);
  v48 = *(void (**)(char *, unint64_t, uint64_t))(v143 + 16);
  swift_bridgeObjectRetain();
  v49 = v140;
  v50 = (uint64_t)v138;
  while (1)
  {
    v48(v21, v46, v19);
    v51 = sub_22650ADF8((uint64_t)v21, v50, v44);
    if (v49)
      break;
    v49 = 0;
    if ((v51 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v54 = (uint64_t)v137;
      (*(void (**)(char *, char *, uint64_t))(v143 + 32))(v137, v21, v19);
      v52 = 0;
      v38 = v142;
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v143 + 8))(v21, v19);
    v46 += v47;
    if (!--v45)
    {
      swift_bridgeObjectRelease();
      v52 = 1;
      v38 = v142;
      goto LABEL_10;
    }
  }
  (*(void (**)(char *, uint64_t))(v143 + 8))(v21, v19);
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_226508768(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _BYTE *v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  int64_t v10;
  _BYTE v11[16];
  uint64_t v12;
  uint64_t v13;

  v3 = sub_22655C140();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v4 + 16))(v7, a1, v3, v5);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v1 + 56) = 0x8000000000000000;
  sub_226523750(0, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v1 + 56) = v13;
  swift_bridgeObjectRelease();
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
  swift_endAccess();
  v12 = a1;
  swift_beginAccess();
  result = sub_226509688((uint64_t (*)(unint64_t))sub_226508D68, (uint64_t)v11);
  v10 = *(_QWORD *)(*(_QWORD *)(v1 + 64) + 16);
  if (v10 < result)
  {
    __break(1u);
  }
  else
  {
    sub_22650B3C0(result, v10);
    return swift_endAccess();
  }
  return result;
}

BOOL sub_2265088A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char v37;
  void (*v38)(uint64_t, uint64_t);
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v41 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558432E8);
  MEMORY[0x24BDAC7A8](v3);
  v42 = (uint64_t)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
  MEMORY[0x24BDAC7A8](v5);
  v40 = (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v43 = (uint64_t)&v39 - v8;
  v9 = sub_22655C140();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v39 - v14;
  v16 = sub_22655C464();
  v17 = swift_conformsToProtocol2();
  if (v17)
    v18 = v17;
  else
    v18 = 0;
  if (v17)
    v19 = (_QWORD *)v16;
  else
    v19 = 0;
  if (!v19)
    goto LABEL_19;
  v44 = v2;
  if (qword_25583F808 != -1)
    swift_once();
  v20 = qword_25585AC80;
  (*(void (**)(_QWORD, uint64_t))(v18 + 8))(*v19, v18);
  swift_beginAccess();
  v21 = *(_QWORD *)(v20 + 24);
  if (!*(_QWORD *)(v21 + 16))
    goto LABEL_18;
  swift_bridgeObjectRetain();
  v22 = sub_226534858((uint64_t)v15);
  if ((v23 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_18:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
LABEL_19:
    swift_release();
    return 0;
  }
  v24 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v22);
  swift_retain();
  swift_bridgeObjectRelease();
  v25 = *(void (**)(char *, uint64_t))(v10 + 8);
  v25(v15, v9);
  if (*(_BYTE *)(v24 + OBJC_IVAR____TtC8RoomPlan8ScanItem_type) != 1)
  {
    swift_release();
    goto LABEL_19;
  }
  v39 = (void (*)(uint64_t, uint64_t))v25;
  v26 = v24 + OBJC_IVAR____TtC8RoomPlan8ScanItem_parentUUID;
  v27 = v41 + OBJC_IVAR____TtC8RoomPlan8ScanItem_uuid;
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  v41 = v24;
  v29 = v43;
  v28(v43, v27, v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
  v30 = *(int *)(v3 + 48);
  v31 = v42;
  v32 = v42 + v30;
  sub_226450C20(v26, v42);
  sub_226450C20(v29, v32);
  v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (v33(v31, 1, v9) == 1)
  {
    swift_release();
    swift_release();
    sub_22643D7E4(v29, (uint64_t *)&unk_255849AC0);
    if (v33(v32, 1, v9) == 1)
    {
      sub_22643D7E4(v31, (uint64_t *)&unk_255849AC0);
      return 1;
    }
    goto LABEL_24;
  }
  v35 = v40;
  sub_226450C20(v31, v40);
  if (v33(v32, 1, v9) == 1)
  {
    swift_release();
    swift_release();
    sub_22643D7E4(v43, (uint64_t *)&unk_255849AC0);
    v39(v35, v9);
LABEL_24:
    sub_22643D7E4(v31, &qword_2558432E8);
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, v32, v9);
  sub_226437F28((unint64_t *)&qword_255840120, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  v36 = v35;
  v37 = sub_22655CD04();
  swift_release();
  swift_release();
  v38 = v39;
  v39((uint64_t)v12, v9);
  sub_22643D7E4(v43, (uint64_t *)&unk_255849AC0);
  v38(v36, v9);
  sub_22643D7E4(v31, (uint64_t *)&unk_255849AC0);
  return (v37 & 1) != 0;
}

uint64_t sub_226508D0C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VoiceOverManager()
{
  return objc_opt_self();
}

uint64_t sub_226508D68()
{
  return sub_22655C104() & 1;
}

uint64_t sub_226508D98(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v6 = a3;
    v4 = a2;
    v5 = a1;
    if (!(*v3 >> 62))
    {
      v8 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v8 >= a2)
        goto LABEL_4;
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
  }
  swift_bridgeObjectRetain();
  v8 = sub_22655D400();
  swift_bridgeObjectRelease();
  if (v8 < v4)
    goto LABEL_37;
LABEL_4:
  v8 = v4 - v5;
  if (__OFSUB__(v4, v5))
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v7 = v6 >> 62;
  if (!(v6 >> 62))
  {
    v9 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    v10 = v9 - v8;
    if (!__OFSUB__(v9, v8))
      goto LABEL_7;
LABEL_41:
    __break(1u);
LABEL_42:
    swift_bridgeObjectRetain();
    v11 = sub_22655D400();
    swift_bridgeObjectRelease();
    v12 = v11 + v32;
    if (!__OFADD__(v11, v32))
      goto LABEL_9;
LABEL_44:
    __break(1u);
LABEL_45:
    swift_bridgeObjectRetain();
    v16 = sub_22655D400();
    swift_bridgeObjectRelease();
    v13 = *v3;
    goto LABEL_16;
  }
LABEL_39:
  swift_bridgeObjectRetain();
  v9 = sub_22655D400();
  swift_bridgeObjectRelease();
  v10 = v9 - v8;
  if (__OFSUB__(v9, v8))
    goto LABEL_41;
LABEL_7:
  v32 = v10;
  if (*v3 >> 62)
    goto LABEL_42;
  v11 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v12 = v11 + v10;
  if (__OFADD__(v11, v10))
    goto LABEL_44;
LABEL_9:
  v13 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v13;
  v11 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v13 & 0x8000000000000000) == 0
    && (v13 & 0x4000000000000000) == 0)
  {
    v15 = v13 & 0xFFFFFFFFFFFFFF8;
    if (v12 <= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_19;
    v11 = 1;
  }
  v31 = v5;
  v8 = v4;
  v4 = v9;
  v9 = v7;
  v7 = v6;
  if (v13 >> 62)
    goto LABEL_45;
  v16 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_16:
  if (v16 <= v12)
    v16 = v12;
  swift_bridgeObjectRetain();
  *v3 = MEMORY[0x2276999F0](v11, v16, 1, v13);
  swift_bridgeObjectRelease();
  v15 = *v3 & 0xFFFFFFFFFFFFFF8;
  v6 = v7;
  v7 = v9;
  v9 = v4;
  v4 = v8;
  v5 = v31;
LABEL_19:
  v17 = v15 + 32;
  v18 = v15 + 32 + 8 * v5;
  type metadata accessor for HullPoint();
  swift_arrayDestroy();
  v19 = v32;
  if (!v32)
  {
LABEL_29:
    if (v9 < 1)
    {
LABEL_34:
      swift_bridgeObjectRelease();
      return sub_22655CEE4();
    }
    if (v7)
    {
      v26 = swift_bridgeObjectRetain();
      v27 = sub_226535D40(v26);
      swift_bridgeObjectRelease();
      sub_226509624((uint64_t)(v27 + 4), v27[2], v9);
      swift_release();
      goto LABEL_34;
    }
    if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) == v9)
    {
      swift_arrayInitWithCopy();
      goto LABEL_34;
    }
    goto LABEL_52;
  }
  if (!(*v3 >> 62))
  {
    v20 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    v21 = v20 - v4;
    if (!__OFSUB__(v20, v4))
      goto LABEL_22;
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  swift_bridgeObjectRetain();
  v29 = sub_22655D400();
  swift_bridgeObjectRelease();
  v19 = v32;
  v21 = v29 - v4;
  if (__OFSUB__(v29, v4))
    goto LABEL_48;
LABEL_22:
  if ((v21 & 0x8000000000000000) == 0)
  {
    v22 = (char *)(v18 + 8 * v9);
    v23 = (char *)(v17 + 8 * v4);
    if (v22 != v23 || v22 >= &v23[8 * v21])
    {
      memmove(v22, v23, 8 * v21);
      v19 = v32;
    }
    if (!(*v3 >> 62))
    {
      v24 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      v25 = v24 + v19;
      if (!__OFADD__(v24, v19))
      {
LABEL_28:
        *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) = v25;
        goto LABEL_29;
      }
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
LABEL_49:
    swift_bridgeObjectRetain();
    v30 = sub_22655D400();
    swift_bridgeObjectRelease();
    v25 = v30 + v32;
    if (!__OFADD__(v30, v32))
      goto LABEL_28;
    goto LABEL_51;
  }
LABEL_53:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

char *sub_2265091A4(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v7;
  int64_t v8;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  char *result;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v7 = *(_QWORD **)v5;
  v8 = *(_QWORD *)(*(_QWORD *)v5 + 16);
  if (v8 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v11 = 1 - v10;
  if (__OFSUB__(1, v10))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v12 = v8 + v11;
  if (__OFADD__(v8, v11))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v12 > v7[3] >> 1)
  {
    if (v8 <= v12)
      v16 = v8 + v11;
    else
      v16 = v8;
    v7 = sub_226486E44(isUniquelyReferenced_nonNull_native, v16, 1, v7);
  }
  v17 = v7 + 4;
  v18 = &v7[3 * a1 + 4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255843B00);
  result = (char *)swift_arrayDestroy();
  if (!v11)
    goto LABEL_20;
  v20 = v7[2];
  v21 = __OFSUB__(v20, a2);
  v22 = v20 - a2;
  if (v21)
    goto LABEL_26;
  if ((v22 & 0x8000000000000000) == 0)
  {
    result = (char *)(v18 + 3);
    v23 = (char *)&v17[3 * a2];
    if (v18 + 3 != (_QWORD *)v23 || result >= &v23[24 * v22])
      result = (char *)memmove(result, v23, 24 * v22);
    v24 = v7[2];
    v21 = __OFADD__(v24, v11);
    v25 = v24 + v11;
    if (!v21)
    {
      v7[2] = v25;
LABEL_20:
      *v18 = a3;
      v26 = &v17[3 * a1];
      v26[1] = a4;
      v26[2] = a5;
      *(_QWORD *)v5 = v7;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = (char *)sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_22650934C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = a3;
    v5 = a2;
    v6 = a1;
    v7 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v23 = sub_22655D400();
  swift_bridgeObjectRelease();
  if (v23 < v5)
    goto LABEL_31;
LABEL_4:
  v9 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v8 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v10 = sub_22655D400();
    swift_bridgeObjectRelease();
    v11 = v10 + v8;
    if (!__OFADD__(v10, v8))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v14 = sub_22655D400();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v7 = *v4;
  if (*v4 >> 62)
    goto LABEL_34;
  v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  v11 = v10 + v8;
  if (__OFADD__(v10, v8))
    goto LABEL_36;
LABEL_8:
  v7 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v4 = v7;
  v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    v13 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v10 = 1;
  }
  if (v7 >> 62)
    goto LABEL_37;
  v14 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11)
    v14 = v11;
  swift_bridgeObjectRetain();
  v7 = MEMORY[0x2276999F0](v10, v14, 1, v7);
  swift_bridgeObjectRelease();
  *v4 = v7;
  v13 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v15 = (_QWORD *)(v13 + 32 + 8 * v6);
  type metadata accessor for HullPoint();
  swift_arrayDestroy();
  if (!v8)
  {
LABEL_28:
    *v15 = v3;
    return sub_22655CEE4();
  }
  if (!(v7 >> 62))
  {
    v16 = *(_QWORD *)(v13 + 16);
    v17 = v16 - v5;
    if (!__OFSUB__(v16, v5))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v24 = sub_22655D400();
  swift_bridgeObjectRelease();
  v17 = v24 - v5;
  if (__OFSUB__(v24, v5))
    goto LABEL_40;
LABEL_21:
  if ((v17 & 0x8000000000000000) == 0)
  {
    v18 = (char *)(v15 + 1);
    v19 = (char *)(v13 + 32 + 8 * v5);
    if (v15 + 1 != (_QWORD *)v19 || v18 >= &v19[8 * v17])
      memmove(v18, v19, 8 * v17);
    if (!(v7 >> 62))
    {
      v20 = *(_QWORD *)(v13 + 16);
      v21 = v20 + v8;
      if (!__OFADD__(v20, v8))
      {
LABEL_27:
        *(_QWORD *)(v13 + 16) = v21;
        goto LABEL_28;
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v25 = sub_22655D400();
    swift_bridgeObjectRelease();
    v21 = v25 + v8;
    if (!__OFADD__(v25, v8))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_226509624(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2 == a3)
  {
    if (result)
    {
      type metadata accessor for HullPoint();
      return swift_arrayInitWithCopy();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_226509688(uint64_t (*a1)(unint64_t), uint64_t a2)
{
  unint64_t *v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t result;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *);
  void (*v26)(char *, uint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t (*v35)(unint64_t, char *, uint64_t);
  uint64_t v36;
  BOOL v37;
  unint64_t v38;
  _QWORD v39[2];
  uint64_t (*v40)(unint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t *v46;
  unint64_t v47;
  uint64_t v48;

  v4 = v2;
  v7 = sub_22655C140();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v42 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v41 = (char *)v39 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v46 = v4;
  v14 = *v4;
  v15 = *(_QWORD *)(*v4 + 16);
  if (!v15)
    return 0;
  v44 = (char *)v39 - v13;
  v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v48 = *(_QWORD *)(v8 + 72);
  swift_bridgeObjectRetain();
  v17 = 0;
  v39[0] = v16;
  while (1)
  {
    v18 = a1(v14 + v16);
    if (v3)
    {
      swift_bridgeObjectRelease();
      return v17;
    }
    if ((v18 & 1) != 0)
      break;
    ++v17;
    v16 += v48;
    if (v15 == v17)
    {
      swift_bridgeObjectRelease();
      return *(_QWORD *)(v14 + 16);
    }
  }
  result = swift_bridgeObjectRelease();
  if (!__OFADD__(v17, 1))
  {
    v20 = *(_QWORD *)(v14 + 16);
    if (v17 + 1 == v20)
      return v17;
    v21 = v48 + v16;
    v22 = v17 + 1;
    v45 = v7;
    v39[1] = a2;
    v40 = a1;
    v43 = v8;
    while (v22 < v20)
    {
      v47 = v22;
      v23 = v21;
      v24 = v14 + v21;
      v25 = (uint64_t (*)(char *))a1;
      v26 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
      v27 = v44;
      v26(v44, v24, v7);
      LOBYTE(v25) = v25(v27);
      result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v27, v7);
      if ((v25 & 1) != 0)
      {
        a1 = v40;
        v28 = v23;
        v29 = v47;
      }
      else
      {
        v29 = v47;
        v28 = v23;
        if (v47 != v17)
        {
          if ((v17 & 0x8000000000000000) != 0)
            goto LABEL_32;
          v30 = *v46;
          v31 = *(_QWORD *)(*v46 + 16);
          if (v17 >= v31)
            goto LABEL_33;
          v32 = v17 * v48;
          v33 = v45;
          result = ((uint64_t (*)(char *, unint64_t, uint64_t))v26)(v41, v30 + v39[0] + v17 * v48, v45);
          if (v47 >= v31)
            goto LABEL_34;
          v26(v42, v30 + v23, v33);
          result = swift_isUniquelyReferenced_nonNull_native();
          *v46 = v30;
          if ((result & 1) == 0)
          {
            result = sub_2264C119C(v30);
            v30 = result;
            *v46 = result;
          }
          if (v17 >= *(_QWORD *)(v30 + 16))
            goto LABEL_35;
          v34 = v30 + v39[0] + v32;
          v35 = *(uint64_t (**)(unint64_t, char *, uint64_t))(v43 + 40);
          v36 = v45;
          result = v35(v34, v42, v45);
          if (v47 >= *(_QWORD *)(*v46 + 16))
            goto LABEL_36;
          result = v35(*v46 + v23, v41, v36);
          v29 = v47;
        }
        v37 = __OFADD__(v17++, 1);
        a1 = v40;
        if (v37)
          goto LABEL_31;
      }
      v38 = v29 + 1;
      v7 = v45;
      v8 = v43;
      if (__OFADD__(v29, 1))
        goto LABEL_30;
      v14 = *v46;
      v20 = *(_QWORD *)(*v46 + 16);
      v22 = v29 + 1;
      v21 = v28 + v48;
      if (v38 == v20)
        return v17;
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2265099E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v21 = sub_22655D400();
  swift_bridgeObjectRelease();
  if (v21 < v2)
    goto LABEL_31;
LABEL_4:
  v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v7 = sub_22655D400();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v12 = sub_22655D400();
    swift_bridgeObjectRelease();
    v9 = *v3;
    goto LABEL_15;
  }
  if (*v3 >> 62)
    goto LABEL_34;
  v7 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 - v6;
  if (__OFADD__(v7, v5))
    goto LABEL_36;
LABEL_8:
  v9 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v9;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    v11 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v7 = 1;
  }
  if (v9 >> 62)
    goto LABEL_37;
  v12 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v8)
    v12 = v8;
  swift_bridgeObjectRetain();
  *v3 = MEMORY[0x2276999F0](v7, v12, 1, v9);
  swift_bridgeObjectRelease();
  v11 = *v3 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v13 = v11 + 32;
  v14 = (char *)(v11 + 32 + 8 * v4);
  type metadata accessor for HullPointHierarchy();
  swift_arrayDestroy();
  if (!v5)
    return sub_22655CEE4();
  if (!(*v3 >> 62))
  {
    v15 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    v16 = v15 - v2;
    if (!__OFSUB__(v15, v2))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v22 = sub_22655D400();
  swift_bridgeObjectRelease();
  v16 = v22 - v2;
  if (__OFSUB__(v22, v2))
    goto LABEL_40;
LABEL_21:
  if ((v16 & 0x8000000000000000) == 0)
  {
    v17 = (char *)(v13 + 8 * v2);
    if (v4 != v2 || v14 >= &v17[8 * v16])
      memmove(v14, v17, 8 * v16);
    if (!(*v3 >> 62))
    {
      v18 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      v19 = v18 + v5;
      if (!__OFADD__(v18, v5))
      {
LABEL_27:
        *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) = v19;
        return sub_22655CEE4();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v23 = sub_22655D400();
    swift_bridgeObjectRelease();
    v19 = v23 + v5;
    if (!__OFADD__(v23, v5))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_226509CD8(uint64_t a1, uint64_t a2)
{
  return sub_22650A750(a1, a2, (void (*)(_QWORD))type metadata accessor for HullPoint);
}

char *sub_226509CE4(uint64_t a1, int64_t a2)
{
  char **v2;
  char *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  char *result;
  int64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  v4 = *v2;
  v5 = *((_QWORD *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v9 <= *((_QWORD *)v4 + 3) >> 1)
  {
    if (!v8)
      goto LABEL_21;
  }
  else
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    result = (char *)sub_226486AE0(result, v11, 1, v4);
    v4 = result;
    if (!v8)
      goto LABEL_21;
  }
  v12 = *((_QWORD *)v4 + 2);
  v13 = __OFSUB__(v12, a2);
  v14 = v12 - a2;
  if (v13)
    goto LABEL_27;
  if ((v14 & 0x8000000000000000) == 0)
  {
    result = &v4[16 * a1 + 32];
    v15 = &v4[16 * a2 + 32];
    if (a1 != a2 || result >= &v15[16 * v14])
      result = (char *)memmove(result, v15, 16 * v14);
    v16 = *((_QWORD *)v4 + 2);
    v13 = __OFADD__(v16, v8);
    v17 = v16 + v8;
    if (!v13)
    {
      *((_QWORD *)v4 + 2) = v17;
LABEL_21:
      *v2 = v4;
      return result;
    }
    goto LABEL_28;
  }
LABEL_29:
  result = (char *)sub_22655D43C();
  __break(1u);
  return result;
}

void sub_226509E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t i;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;

  v4 = sub_22655C140();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v35 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558432E8);
  MEMORY[0x24BDAC7A8](v40);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13.n128_f64[0] = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v34 - v14;
  v16 = 0;
  v43 = MEMORY[0x24BEE4AF8];
  v41 = a1;
  v17 = *(_QWORD *)(a1 + 64);
  v37 = a1 + 64;
  v18 = 1 << *(_BYTE *)(a1 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v17;
  v39 = a2 + OBJC_IVAR____TtC8RoomPlan8ScanItem_uuid;
  v38 = (unint64_t)(v18 + 63) >> 6;
  v36 = v15;
  if ((v19 & v17) != 0)
    goto LABEL_8;
LABEL_9:
  v23 = v16 + 1;
  if (!__OFADD__(v16, 1))
  {
    if (v23 < v38)
    {
      v24 = *(_QWORD *)(v37 + 8 * v23);
      v25 = v16 + 1;
      if (v24)
        goto LABEL_24;
      v25 = v16 + 2;
      if (v16 + 2 >= v38)
        goto LABEL_32;
      v24 = *(_QWORD *)(v37 + 8 * v25);
      if (v24)
        goto LABEL_24;
      v25 = v16 + 3;
      if (v16 + 3 >= v38)
        goto LABEL_32;
      v24 = *(_QWORD *)(v37 + 8 * v25);
      if (v24)
        goto LABEL_24;
      v25 = v16 + 4;
      if (v16 + 4 >= v38)
        goto LABEL_32;
      v24 = *(_QWORD *)(v37 + 8 * v25);
      if (v24)
      {
LABEL_24:
        v20 = (v24 - 1) & v24;
        v42 = v25;
        for (i = __clz(__rbit64(v24)) + (v25 << 6); ; i = v21 | (v16 << 6))
        {
          v27 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * i) + OBJC_IVAR____TtC8RoomPlan8ScanItem_parentUUID;
          (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v15, v39, v4, v13);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v15, 0, 1, v4);
          v28 = (uint64_t)&v8[*(int *)(v40 + 48)];
          sub_226450C20(v27, (uint64_t)v8);
          sub_226450C20((uint64_t)v15, v28);
          v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
          if (v29((uint64_t)v8, 1, v4) == 1)
          {
            swift_retain();
            sub_22643D7E4((uint64_t)v15, (uint64_t *)&unk_255849AC0);
            if (v29(v28, 1, v4) != 1)
              goto LABEL_6;
            sub_22643D7E4((uint64_t)v8, (uint64_t *)&unk_255849AC0);
          }
          else
          {
            sub_226450C20((uint64_t)v8, (uint64_t)v11);
            if (v29(v28, 1, v4) == 1)
            {
              swift_retain();
              sub_22643D7E4((uint64_t)v15, (uint64_t *)&unk_255849AC0);
              (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
LABEL_6:
              sub_22643D7E4((uint64_t)v8, &qword_2558432E8);
LABEL_7:
              swift_release();
              v16 = v42;
              if (!v20)
                goto LABEL_9;
              goto LABEL_8;
            }
            v30 = v11;
            v31 = v35;
            (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v35, v28, v4);
            sub_226437F28((unint64_t *)&qword_255840120, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
            swift_retain();
            v32 = sub_22655CD04();
            v33 = *(void (**)(char *, uint64_t))(v5 + 8);
            v33(v31, v4);
            sub_22643D7E4((uint64_t)v36, (uint64_t *)&unk_255849AC0);
            v33(v30, v4);
            v11 = v30;
            v15 = v36;
            sub_22643D7E4((uint64_t)v8, (uint64_t *)&unk_255849AC0);
            if ((v32 & 1) == 0)
              goto LABEL_7;
          }
          sub_22655D364();
          sub_22655D388();
          sub_22655D394();
          sub_22655D370();
          v16 = v42;
          if (!v20)
            goto LABEL_9;
LABEL_8:
          v21 = __clz(__rbit64(v20));
          v20 &= v20 - 1;
          v42 = v16;
        }
      }
      v26 = v16 + 5;
      if (v16 + 5 < v38)
      {
        v24 = *(_QWORD *)(v37 + 8 * v26);
        if (v24)
        {
          v25 = v16 + 5;
          goto LABEL_24;
        }
        while (1)
        {
          v25 = v26 + 1;
          if (__OFADD__(v26, 1))
            goto LABEL_34;
          if (v25 >= v38)
            break;
          v24 = *(_QWORD *)(v37 + 8 * v25);
          ++v26;
          if (v24)
            goto LABEL_24;
        }
      }
    }
LABEL_32:
    swift_release();
    return;
  }
  __break(1u);
LABEL_34:
  __break(1u);
}

uint64_t sub_22650A2DC(uint64_t a1, uint64_t a2)
{
  return sub_22650A750(a1, a2, (void (*)(_QWORD))type metadata accessor for ScanItem);
}

uint64_t sub_22650A2E8(uint64_t a1, uint64_t a2)
{
  return sub_22650A750(a1, a2, (void (*)(_QWORD))type metadata accessor for OpeningElement);
}

uint64_t sub_22650A2F4(uint64_t a1, uint64_t a2)
{
  return sub_22650A750(a1, a2, (void (*)(_QWORD))type metadata accessor for CurvedElement);
}

char *sub_22650A300(uint64_t a1, int64_t a2, uint64_t a3)
{
  char **v3;
  char *v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  char *result;
  int64_t v14;
  char *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  v5 = *v3;
  v6 = *((_QWORD *)*v3 + 2);
  if (v6 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v10 = *(_QWORD *)(a3 + 16);
  v11 = v10 - v8;
  if (__OFSUB__(v10, v8))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v12 = v6 + v11;
  if (__OFADD__(v6, v11))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)result || v12 > *((_QWORD *)v5 + 3) >> 1)
  {
    if (v6 <= v12)
      v14 = v6 + v11;
    else
      v14 = v6;
    result = (char *)sub_226487198(result, v14, 1, v5);
    v5 = result;
  }
  v15 = &v5[16 * a1 + 32];
  if (!v11)
    goto LABEL_20;
  v16 = *((_QWORD *)v5 + 2);
  v17 = __OFSUB__(v16, a2);
  v18 = v16 - a2;
  if (v17)
    goto LABEL_28;
  if (v18 < 0)
  {
LABEL_30:
    result = (char *)sub_22655D43C();
    __break(1u);
    return result;
  }
  result = &v15[16 * v10];
  v19 = &v5[16 * a2 + 32];
  if (result != v19 || result >= &v19[16 * v18])
    result = (char *)memmove(result, v19, 16 * v18);
  v20 = *((_QWORD *)v5 + 2);
  v17 = __OFADD__(v20, v11);
  v21 = v20 + v11;
  if (v17)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  *((_QWORD *)v5 + 2) = v21;
LABEL_20:
  if (v10)
    result = (char *)memcpy(v15, (const void *)(a3 + 32), 16 * v10);
  *v3 = v5;
  return result;
}

char *sub_22650A478(uint64_t a1, int64_t a2)
{
  char **v2;
  char *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  char *result;
  int64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  v4 = *v2;
  v5 = *((_QWORD *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v9 <= *((_QWORD *)v4 + 3) >> 1)
  {
    if (!v8)
      goto LABEL_21;
  }
  else
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    result = (char *)sub_2264874D4(result, v11, 1, v4);
    v4 = result;
    if (!v8)
      goto LABEL_21;
  }
  v12 = *((_QWORD *)v4 + 2);
  v13 = __OFSUB__(v12, a2);
  v14 = v12 - a2;
  if (v13)
    goto LABEL_27;
  if ((v14 & 0x8000000000000000) == 0)
  {
    result = &v4[16 * a1 + 32];
    v15 = &v4[16 * a2 + 32];
    if (a1 != a2 || result >= &v15[16 * v14])
      result = (char *)memmove(result, v15, 16 * v14);
    v16 = *((_QWORD *)v4 + 2);
    v13 = __OFADD__(v16, v8);
    v17 = v16 + v8;
    if (!v13)
    {
      *((_QWORD *)v4 + 2) = v17;
LABEL_21:
      *v2 = v4;
      return result;
    }
    goto LABEL_28;
  }
LABEL_29:
  result = (char *)sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_22650A5D0(uint64_t a1, uint64_t a2)
{
  return sub_22650A750(a1, a2, (void (*)(_QWORD))type metadata accessor for CDTTriangleEdge);
}

uint64_t sub_22650A5DC(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_226486B0C(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (_QWORD *)&v16[16 * v15])
      result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_22650A744(uint64_t a1, uint64_t a2)
{
  return sub_22650A750(a1, a2, (void (*)(_QWORD))type metadata accessor for FrameTextures);
}

uint64_t sub_22650A750(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  void (*v6)(_QWORD);
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v6 = a3;
    v3 = a2;
    v5 = a1;
    v7 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v21 = sub_22655D400();
  swift_bridgeObjectRelease();
  if (v21 < v3)
    goto LABEL_31;
LABEL_4:
  v9 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v8 = v5 - v3;
  if (__OFSUB__(0, v9))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v10 = sub_22655D400();
    swift_bridgeObjectRelease();
    v11 = v10 + v8;
    if (!__OFADD__(v10, v8))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v14 = sub_22655D400();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v7 = *v4;
  if (*v4 >> 62)
    goto LABEL_34;
  v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  v11 = v10 - v9;
  if (__OFADD__(v10, v8))
    goto LABEL_36;
LABEL_8:
  v7 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v4 = v7;
  v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    v13 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v10 = 1;
  }
  if (v7 >> 62)
    goto LABEL_37;
  v14 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11)
    v14 = v11;
  swift_bridgeObjectRetain();
  v7 = MEMORY[0x2276999F0](v10, v14, 1, v7);
  swift_bridgeObjectRelease();
  *v4 = v7;
  v13 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v6(0);
  swift_arrayDestroy();
  if (!v8)
    return sub_22655CEE4();
  if (!(v7 >> 62))
  {
    v15 = *(_QWORD *)(v13 + 16);
    v16 = v15 - v3;
    if (!__OFSUB__(v15, v3))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v22 = sub_22655D400();
  swift_bridgeObjectRelease();
  v16 = v22 - v3;
  if (__OFSUB__(v22, v3))
    goto LABEL_40;
LABEL_21:
  if ((v16 & 0x8000000000000000) == 0)
  {
    v17 = (const void *)(v13 + 32 + 8 * v3);
    if (v5 != v3 || v13 + 32 + 8 * v5 >= (unint64_t)v17 + 8 * v16)
      memmove((void *)(v13 + 32 + 8 * v5), v17, 8 * v16);
    if (!(v7 >> 62))
    {
      v18 = *(_QWORD *)(v13 + 16);
      v19 = v18 + v8;
      if (!__OFADD__(v18, v8))
      {
LABEL_27:
        *(_QWORD *)(v13 + 16) = v19;
        return sub_22655CEE4();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v23 = sub_22655D400();
    swift_bridgeObjectRelease();
    v19 = v23 + v8;
    if (!__OFADD__(v23, v8))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_22655D43C();
  __break(1u);
  return result;
}

char *sub_22650AA20(uint64_t a1, int64_t a2)
{
  char **v2;
  char *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  char *result;
  int64_t v11;
  uint64_t v12;
  size_t v13;
  char *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  v4 = *v2;
  v5 = *((_QWORD *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v9 <= *((_QWORD *)v4 + 3) >> 1)
  {
    if (!v8)
      goto LABEL_21;
  }
  else
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    result = sub_226488780(result, v11, 1, v4);
    v4 = result;
    if (!v8)
      goto LABEL_21;
  }
  v12 = *((_QWORD *)v4 + 2);
  v13 = v12 - a2;
  if (__OFSUB__(v12, a2))
    goto LABEL_27;
  if ((v13 & 0x8000000000000000) == 0)
  {
    result = &v4[a1 + 32];
    v14 = &v4[a2 + 32];
    if (a1 != a2 || result >= &v14[v13])
      result = (char *)memmove(result, v14, v13);
    v15 = *((_QWORD *)v4 + 2);
    v16 = __OFADD__(v15, v8);
    v17 = v15 + v8;
    if (!v16)
    {
      *((_QWORD *)v4 + 2) = v17;
LABEL_21:
      *v2 = v4;
      return result;
    }
    goto LABEL_28;
  }
LABEL_29:
  result = (char *)sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_22650AB74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];

  v4 = sub_22655C470();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255848D20);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_type) == 2)
  {
    if (qword_25583F808 != -1)
      swift_once();
    swift_beginAccess();
    swift_retain();
    v11 = swift_bridgeObjectRetain();
    sub_226509E3C(v11, a1);
    v13 = v12;
    swift_release();
  }
  else
  {
    v13 = MEMORY[0x24BEE4AF8];
  }
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_22655D400();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v14)
    return 0;
  v15 = *(_QWORD *)(a2 + 16);
  if (v15)
  {
    v16 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v17 = a2;
    v18 = *(_QWORD *)(v5 + 72);
    v19 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v23[1] = v17;
    swift_bridgeObjectRetain();
    while (1)
    {
      v19(v7, v16, v4);
      if (sub_2265088A4((uint64_t)v7, a1))
        break;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v16 += v18;
      if (!--v15)
      {
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v7, v4);
    v21 = 0;
    v20 = 1;
  }
  else
  {
LABEL_14:
    v20 = 0;
    v21 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, v21, 1, v4);
  sub_22643D7E4((uint64_t)v10, &qword_255848D20);
  return v20;
}

uint64_t sub_22650ADF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  unint64_t v27;
  char v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  char v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  char *v49;
  char v50;
  char *v51;
  void (*v52)(uint64_t, uint64_t);
  char *v53;
  char v54;
  _QWORD v55[2];
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v65 = a3;
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558432E8);
  MEMORY[0x24BDAC7A8](v62);
  v64 = (uint64_t)v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
  MEMORY[0x24BDAC7A8](v6);
  v61 = (uint64_t)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v63 = (char *)v55 - v9;
  v10 = sub_22655C140();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v60 = (char *)v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v55 - v14;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v55 - v17;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v55 - v20;
  sub_22655C464();
  type metadata accessor for ScanEntity();
  v22 = swift_dynamicCastClass();
  if (!v22)
    goto LABEL_15;
  v23 = v22;
  v58 = v15;
  v59 = a2;
  v66 = v3;
  if (qword_25583F808 != -1)
    swift_once();
  v24 = qword_25585AC80;
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v25(v21, v23 + qword_25585ADF8, v10);
  swift_beginAccess();
  v26 = *(_QWORD *)(v24 + 24);
  if (!*(_QWORD *)(v26 + 16))
    goto LABEL_12;
  swift_bridgeObjectRetain();
  v27 = sub_226534858((uint64_t)v21);
  if ((v28 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v21, v10);
    goto LABEL_15;
  }
  v57 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v27);
  swift_retain();
  swift_bridgeObjectRelease();
  v29 = v21;
  v30 = *(void (**)(char *, uint64_t))(v11 + 8);
  v30(v29, v10);
  v31 = qword_25585AC80;
  v25(v18, v59, v10);
  swift_beginAccess();
  v32 = *(_QWORD *)(v31 + 24);
  if (!*(_QWORD *)(v32 + 16))
  {
LABEL_14:
    v30(v18, v10);
    swift_release();
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  v33 = sub_226534858((uint64_t)v18);
  if ((v34 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v35 = *(_QWORD *)(*(_QWORD *)(v32 + 56) + 8 * v33);
  swift_retain();
  swift_bridgeObjectRelease();
  v56 = v30;
  v30(v18, v10);
  v36 = v57;
  if ((sub_22650AB74(v57, v65) & 1) == 0)
  {
    v39 = v36 + OBJC_IVAR____TtC8RoomPlan8ScanItem_uuid;
    v25(v58, v36 + OBJC_IVAR____TtC8RoomPlan8ScanItem_uuid, v10);
    v40 = *(unsigned __int8 *)(v36 + OBJC_IVAR____TtC8RoomPlan8ScanItem_type);
    v55[1] = v35;
    if (v40 == 2)
    {
      v41 = (uint64_t)v63;
      v25(v63, v39, v10);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v41, 0, 1, v10);
      v42 = v35 + OBJC_IVAR____TtC8RoomPlan8ScanItem_parentUUID;
      v43 = v64;
      v44 = v64 + *(int *)(v62 + 48);
      sub_226450C20(v41, v64);
      sub_226450C20(v42, v44);
      v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
      if (v45(v43, 1, v10) == 1)
      {
        sub_22643D7E4(v41, (uint64_t *)&unk_255849AC0);
        if (v45(v44, 1, v10) == 1)
        {
          sub_22643D7E4(v43, (uint64_t *)&unk_255849AC0);
          v46 = 0;
LABEL_26:
          sub_226437F28((unint64_t *)&qword_255840120, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
          v53 = v58;
          v54 = sub_22655CD04();
          swift_release();
          swift_release();
          swift_release();
          v56(v53, v10);
          v37 = (v54 ^ 1) & v46;
          return v37 & 1;
        }
      }
      else
      {
        v47 = v61;
        sub_226450C20(v43, v61);
        if (v45(v44, 1, v10) != 1)
        {
          v48 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 32);
          v49 = v60;
          v48(v60, v44, v10);
          sub_226437F28((unint64_t *)&qword_255840120, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
          v50 = sub_22655CD04();
          v51 = v49;
          v52 = (void (*)(uint64_t, uint64_t))v56;
          v56(v51, v10);
          sub_22643D7E4(v41, (uint64_t *)&unk_255849AC0);
          v52(v47, v10);
          sub_22643D7E4(v43, (uint64_t *)&unk_255849AC0);
          v46 = v50 ^ 1;
          goto LABEL_26;
        }
        sub_22643D7E4(v41, (uint64_t *)&unk_255849AC0);
        v56((char *)v47, v10);
      }
      sub_22643D7E4(v43, &qword_2558432E8);
      v46 = 1;
      goto LABEL_26;
    }
    v46 = 0;
    goto LABEL_26;
  }
  swift_release();
  swift_release();
LABEL_15:
  swift_release();
  v37 = 0;
  return v37 & 1;
}

uint64_t sub_22650B3C0(uint64_t a1, int64_t a2)
{
  unint64_t *v2;
  unint64_t v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(_QWORD *)(v4 + 24) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_226487A4C(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  v12 = *(_QWORD *)(sub_22655C140() - 8);
  v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v14 * a1;
  v16 = v13 + v14 * a1;
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_25;
  v18 = *(_QWORD *)(v4 + 16);
  v19 = v18 - a2;
  if (__OFSUB__(v18, a2))
    goto LABEL_31;
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront();
    }
    v21 = *(_QWORD *)(v4 + 16);
    v22 = __OFADD__(v21, v8);
    v23 = v21 - v7;
    if (!v22)
    {
      *(_QWORD *)(v4 + 16) = v23;
LABEL_25:
      *v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_22650B568()
{
  sub_22655C140();
  sub_226437F28((unint64_t *)&qword_255840120, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  return sub_22655CD04() & 1;
}

uint64_t sub_22650B5DC(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t ObjCClassFromMetadata;

  v2 = sub_22655C164();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_22655CD58();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_22655CD40();
  MEMORY[0x24BDAC7A8](v4);
  result = 0;
  switch(*a1)
  {
    case 5:
      return result;
    default:
      sub_22655CD34();
      sub_22655CD28();
      sub_22655CD1C();
      sub_22655CD28();
      sub_22655CD4C();
      type metadata accessor for VoiceOverManager();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      sub_22655C158();
      result = sub_22655CDD0();
      break;
  }
  return result;
}

void sub_22650B9F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_22655C164();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_22655CD58();
  MEMORY[0x24BDAC7A8](v3);
  __asm { BR              X10 }
}

uint64_t sub_22650BA90()
{
  uint64_t ObjCClassFromMetadata;
  id v1;

  sub_22655CD10();
  type metadata accessor for VoiceOverManager();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_22655C158();
  return sub_22655CDD0();
}

void sub_22650C250(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_22655C164();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_22655CD58();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_22655CD40();
  MEMORY[0x24BDAC7A8](v4);
  __asm { BR              X10 }
}

uint64_t sub_22650C328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjCClassFromMetadata;
  id v3;

  sub_22655CD34();
  sub_22655CD28();
  *(_QWORD *)(v1 - 56) = v0;
  sub_22655CD1C();
  sub_22655CD28();
  sub_22655CD4C();
  type metadata accessor for VoiceOverManager();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_22655C158();
  return sub_22655CDD0();
}

void sub_22650CF78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;

  v2 = type metadata accessor for CapturedRoom.Object(0);
  v28 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v33 = (uint64_t)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (unsigned __int8 *)&v27 - v5;
  v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v30 = 16;
  v8 = 0;
  v9 = *(_QWORD *)(a1 + 16);
  v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v29 = v9;
  v27 = a1;
  while (v8 < 0x10)
  {
    v12 = *((unsigned __int8 *)&unk_24EDDEF88 + v8 + 32);
    v34 = v7;
    swift_bridgeObjectRetain();
    if (v9)
    {
      v31 = v8;
      v32 = v10;
      v13 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
      v14 = *(_QWORD *)(v28 + 72);
      v15 = v9;
      v16 = a1 + v13;
      do
      {
        sub_22643D704(v16, (uint64_t)v6, type metadata accessor for CapturedRoom.Object);
        if (*v6 == v12)
        {
          sub_22643F6AC((uint64_t)v6, v33, type metadata accessor for CapturedRoom.Object);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_2264C7B9C(0, v7[2] + 1, 1);
          v7 = v34;
          v18 = v34[2];
          v17 = v34[3];
          if (v18 >= v17 >> 1)
          {
            sub_2264C7B9C(v17 > 1, v18 + 1, 1);
            v7 = v34;
          }
          v7[2] = v18 + 1;
          sub_22643F6AC(v33, (uint64_t)v7 + v13 + v18 * v14, type metadata accessor for CapturedRoom.Object);
        }
        else
        {
          sub_22643D748((uint64_t)v6, type metadata accessor for CapturedRoom.Object);
        }
        v16 += v14;
        --v15;
      }
      while (v15);
      v19 = v34;
      a1 = v27;
      v8 = v31;
      v10 = v32;
    }
    else
    {
      v19 = v7;
    }
    swift_bridgeObjectRelease();
    v20 = v19[2];
    swift_release();
    if (v20)
    {
      LOBYTE(v34) = v12;
      if (v20 == 1)
        sub_22650B9F4((uint64_t)&v34);
      else
        sub_22650C250((uint64_t)&v34);
      v23 = v21;
      v24 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_226486B0C(0, v10[2] + 1, 1, v10);
      v26 = v10[2];
      v25 = v10[3];
      if (v26 >= v25 >> 1)
        v10 = sub_226486B0C((_QWORD *)(v25 > 1), v26 + 1, 1, v10);
      v10[2] = v26 + 1;
      v11 = &v10[2 * v26];
      v11[4] = v23;
      v11[5] = v24;
    }
    v9 = v29;
    ++v8;
    v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (v8 == v30)
    {
      v34 = v10;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2558432C0);
      sub_22647F26C();
      sub_22655CCF8();
      swift_bridgeObjectRelease();
      return;
    }
  }
  __break(1u);
}

void sub_22650D280(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unsigned __int8 *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  unsigned int v64;
  int v65;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  unsigned int v75;
  int v76;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t ObjCClassFromMetadata;
  id v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  unsigned __int8 *v114;
  uint64_t v115;
  _QWORD v116[2];

  v102 = a2;
  v3 = sub_22655C164();
  MEMORY[0x24BDAC7A8](v3);
  v103 = (char *)&v101 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22655CD58();
  MEMORY[0x24BDAC7A8](v5);
  v104 = (char *)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CapturedRoom.Surface(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v112 = (uint64_t)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (unsigned __int8 *)&v101 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v111 = (uint64_t)&v101 - v14;
  MEMORY[0x24BDAC7A8](v15);
  v113 = (char *)&v101 - v16;
  MEMORY[0x24BDAC7A8](v17);
  v110 = (uint64_t)&v101 - v18;
  MEMORY[0x24BDAC7A8](v19);
  v108 = (char *)&v101 - v20;
  MEMORY[0x24BDAC7A8](v21);
  v109 = (uint64_t)&v101 - v22;
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v101 - v24;
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v101 - v27;
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v101 - v30;
  v32 = MEMORY[0x24BEE4AF8];
  v116[0] = MEMORY[0x24BEE4AF8];
  v33 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v105 = v8;
  v106 = a1;
  v114 = v12;
  v115 = v33;
  if (v33)
  {
    v34 = v33;
    v35 = *(_QWORD *)(v8 + 72);
    v107 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v36 = a1 + v107;
    v37 = MEMORY[0x24BEE4AF8];
    do
    {
      sub_22643D704(v36, (uint64_t)v31, type metadata accessor for CapturedRoom.Surface);
      if (*v31 == 2)
      {
        sub_22643F6AC((uint64_t)v31, (uint64_t)v28, type metadata accessor for CapturedRoom.Surface);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_2264C7B14(0, *(_QWORD *)(v37 + 16) + 1, 1);
        v37 = v116[0];
        v39 = *(_QWORD *)(v116[0] + 16);
        v38 = *(_QWORD *)(v116[0] + 24);
        if (v39 >= v38 >> 1)
        {
          sub_2264C7B14(v38 > 1, v39 + 1, 1);
          v37 = v116[0];
        }
        *(_QWORD *)(v37 + 16) = v39 + 1;
        sub_22643F6AC((uint64_t)v28, v37 + v107 + v39 * v35, type metadata accessor for CapturedRoom.Surface);
      }
      else
      {
        sub_22643D748((uint64_t)v31, type metadata accessor for CapturedRoom.Surface);
      }
      v36 += v35;
      --v34;
    }
    while (v34);
    v107 = v116[0];
    v8 = v105;
    a1 = v106;
    v12 = v114;
    v33 = v115;
    v40 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v107 = v32;
    v40 = v32;
  }
  swift_bridgeObjectRelease();
  v116[0] = v40;
  swift_bridgeObjectRetain();
  if (v33)
  {
    v41 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v42 = *(_QWORD *)(v8 + 72);
    v43 = a1 + v41;
    v44 = MEMORY[0x24BEE4AF8];
    v45 = v33;
    do
    {
      sub_22643D704(v43, (uint64_t)v25, type metadata accessor for CapturedRoom.Surface);
      if (*v25 == 4)
      {
        sub_22643F6AC((uint64_t)v25, v109, type metadata accessor for CapturedRoom.Surface);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_2264C7B14(0, *(_QWORD *)(v44 + 16) + 1, 1);
        v44 = v116[0];
        v47 = *(_QWORD *)(v116[0] + 16);
        v46 = *(_QWORD *)(v116[0] + 24);
        if (v47 >= v46 >> 1)
        {
          sub_2264C7B14(v46 > 1, v47 + 1, 1);
          v44 = v116[0];
        }
        *(_QWORD *)(v44 + 16) = v47 + 1;
        sub_22643F6AC(v109, v44 + v41 + v47 * v42, type metadata accessor for CapturedRoom.Surface);
      }
      else
      {
        sub_22643D748((uint64_t)v25, type metadata accessor for CapturedRoom.Surface);
      }
      v43 += v42;
      --v45;
    }
    while (v45);
    v48 = v116[0];
    v8 = v105;
    a1 = v106;
    v12 = v114;
    v40 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v48 = v40;
  }
  swift_bridgeObjectRelease();
  v116[0] = v40;
  swift_bridgeObjectRetain();
  v49 = (unsigned __int8 *)v113;
  if (v33)
  {
    v50 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v51 = *(_QWORD *)(v8 + 72);
    v52 = a1 + v50;
    v53 = MEMORY[0x24BEE4AF8];
    v54 = v33;
    v55 = v108;
    do
    {
      sub_22643D704(v52, (uint64_t)v55, type metadata accessor for CapturedRoom.Surface);
      if (*v55 == 3)
      {
        sub_22643F6AC((uint64_t)v55, v110, type metadata accessor for CapturedRoom.Surface);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_2264C7B14(0, *(_QWORD *)(v53 + 16) + 1, 1);
        v53 = v116[0];
        v57 = *(_QWORD *)(v116[0] + 16);
        v56 = *(_QWORD *)(v116[0] + 24);
        if (v57 >= v56 >> 1)
        {
          sub_2264C7B14(v56 > 1, v57 + 1, 1);
          v53 = v116[0];
        }
        *(_QWORD *)(v53 + 16) = v57 + 1;
        sub_22643F6AC(v110, v53 + v50 + v57 * v51, type metadata accessor for CapturedRoom.Surface);
        v49 = (unsigned __int8 *)v113;
        v55 = v108;
      }
      else
      {
        sub_22643D748((uint64_t)v55, type metadata accessor for CapturedRoom.Surface);
      }
      v52 += v51;
      --v54;
    }
    while (v54);
    v58 = v116[0];
    v8 = v105;
    a1 = v106;
    v12 = v114;
    v40 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v58 = v40;
  }
  swift_bridgeObjectRelease();
  v116[0] = v40;
  swift_bridgeObjectRetain();
  if (v33)
  {
    v59 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v60 = *(_QWORD *)(v8 + 72);
    v61 = a1 + v59;
    v62 = MEMORY[0x24BEE4AF8];
    do
    {
      sub_22643D704(v61, (uint64_t)v49, type metadata accessor for CapturedRoom.Surface);
      v63 = *v49;
      v64 = v63 - 6;
      v65 = v63 & 1;
      if (v64 <= 0xFFFFFFFB && v65 == 0)
      {
        sub_22643F6AC((uint64_t)v49, v111, type metadata accessor for CapturedRoom.Surface);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_2264C7B14(0, *(_QWORD *)(v62 + 16) + 1, 1);
        v62 = v116[0];
        v68 = *(_QWORD *)(v116[0] + 16);
        v67 = *(_QWORD *)(v116[0] + 24);
        if (v68 >= v67 >> 1)
        {
          sub_2264C7B14(v67 > 1, v68 + 1, 1);
          v62 = v116[0];
        }
        *(_QWORD *)(v62 + 16) = v68 + 1;
        sub_22643F6AC(v111, v62 + v59 + v68 * v60, type metadata accessor for CapturedRoom.Surface);
        v49 = (unsigned __int8 *)v113;
        v12 = v114;
      }
      else
      {
        sub_22643D748((uint64_t)v49, type metadata accessor for CapturedRoom.Surface);
      }
      v61 += v60;
      --v33;
    }
    while (v33);
    v69 = v116[0];
    v8 = v105;
    a1 = v106;
    v33 = v115;
    v40 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v69 = v40;
  }
  swift_bridgeObjectRelease();
  v116[0] = v40;
  swift_bridgeObjectRetain();
  if (v33)
  {
    v70 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v71 = *(_QWORD *)(v8 + 72);
    v72 = a1 + v70;
    v73 = MEMORY[0x24BEE4AF8];
    do
    {
      sub_22643D704(v72, (uint64_t)v12, type metadata accessor for CapturedRoom.Surface);
      v74 = *v12;
      v75 = v74 - 2;
      v76 = v74 & 1;
      if (v75 < 4 || v76 == 0)
      {
        sub_22643D748((uint64_t)v12, type metadata accessor for CapturedRoom.Surface);
      }
      else
      {
        sub_22643F6AC((uint64_t)v12, v112, type metadata accessor for CapturedRoom.Surface);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_2264C7B14(0, *(_QWORD *)(v73 + 16) + 1, 1);
        v73 = v116[0];
        v79 = *(_QWORD *)(v116[0] + 16);
        v78 = *(_QWORD *)(v116[0] + 24);
        if (v79 >= v78 >> 1)
        {
          sub_2264C7B14(v78 > 1, v79 + 1, 1);
          v73 = v116[0];
        }
        *(_QWORD *)(v73 + 16) = v79 + 1;
        sub_22643F6AC(v112, v73 + v70 + v79 * v71, type metadata accessor for CapturedRoom.Surface);
        v12 = v114;
      }
      v72 += v71;
      --v115;
    }
    while (v115);
    v40 = v116[0];
  }
  swift_bridgeObjectRelease();
  v116[0] = v69;
  sub_22646A3FC(v40);
  v80 = *(_QWORD *)(v107 + 16);
  v81 = *(_QWORD *)(v48 + 16);
  v82 = v80 + v81;
  if (__OFADD__(v80, v81))
  {
    __break(1u);
    goto LABEL_94;
  }
  v83 = *(_QWORD *)(v58 + 16);
  v84 = v82 + v83;
  if (__OFADD__(v82, v83))
  {
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  v85 = *(_QWORD *)(v116[0] + 16);
  swift_release();
  if (__OFADD__(v84, v85))
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  v115 = v84 + v85;
  if (v80)
  {
    if (v80 == 1)
    {
      sub_22655CD10();
      type metadata accessor for VoiceOverManager();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v87 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      sub_22655C158();
      v88 = sub_22655CDD0();
    }
    else
    {
      LOBYTE(v116[0]) = 2;
      v88 = sub_22650B5DC(v116);
    }
    v114 = (unsigned __int8 *)v88;
    v90 = v89;
    swift_release();
    if (v81 == 1)
      goto LABEL_77;
  }
  else
  {
    swift_release();
    v114 = 0;
    v90 = 0xE000000000000000;
    if (v81 == 1)
    {
LABEL_77:
      sub_22655CD10();
      type metadata accessor for VoiceOverManager();
      v91 = swift_getObjCClassFromMetadata();
      v92 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v91);
      sub_22655C158();
      sub_22655CDD0();
      goto LABEL_78;
    }
  }
  if (v81 <= 1)
  {
    swift_release();
    if (v83 == 1)
      goto LABEL_79;
    goto LABEL_81;
  }
  LOBYTE(v116[0]) = 4;
  sub_22650B5DC(v116);
LABEL_78:
  swift_release();
  if (v83 == 1)
  {
LABEL_79:
    sub_22655CD10();
    type metadata accessor for VoiceOverManager();
    v93 = swift_getObjCClassFromMetadata();
    v94 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v93);
    sub_22655C158();
    sub_22655CDD0();
    goto LABEL_83;
  }
LABEL_81:
  if (v83 <= 1)
  {
    swift_bridgeObjectRelease();
    if (v85 == 1)
      goto LABEL_84;
    goto LABEL_86;
  }
  LOBYTE(v116[0]) = 3;
  sub_22650B5DC(v116);
LABEL_83:
  swift_bridgeObjectRelease();
  if (v85 == 1)
  {
LABEL_84:
    sub_22655CD10();
    type metadata accessor for VoiceOverManager();
    v95 = swift_getObjCClassFromMetadata();
    v96 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v95);
    sub_22655C158();
    sub_22655CDD0();
    goto LABEL_88;
  }
LABEL_86:
  if (v85 > 1)
  {
    LOBYTE(v116[0]) = 0;
    sub_22650B5DC(v116);
  }
LABEL_88:
  v97 = v102;
  sub_22650CF78(v102);
  v98 = *(_QWORD *)(v97 + 16);
  v99 = __OFADD__(v115, v98);
  v100 = v115 + v98;
  if (v99)
  {
LABEL_96:
    __break(1u);
    return;
  }
  if (v100 <= 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v116[0] = v114;
    v116[1] = v90;
    sub_22655CE24();
    sub_22655CE24();
    swift_bridgeObjectRelease();
    sub_22655CE24();
    sub_22655CE24();
    swift_bridgeObjectRelease();
    sub_22655CE24();
    sub_22655CE24();
    swift_bridgeObjectRelease();
    sub_22655CE24();
    sub_22655CE24();
  }
  swift_bridgeObjectRelease();
}

_OWORD *sub_22650DEA4()
{
  uint64_t v0;
  _OWORD *result;
  unint64_t v2;
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v0 = sub_22650DFBC();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848D30);
  result = (_OWORD *)swift_allocObject();
  result[1] = xmmword_2265680D0;
  v2 = *(_QWORD *)(v0 + 16);
  if (!v2)
  {
    __break(1u);
    goto LABEL_11;
  }
  v3 = result;
  v4 = *(_OWORD *)(v0 + 32);
  result[2] = v4;
  if (v2 == 1)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v5 = *(_OWORD *)(v0 + 48);
  result[3] = v5;
  result[4] = v5;
  if (v2 < 3)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v6 = *(_OWORD *)(v0 + 64);
  result[5] = v6;
  result[6] = v6;
  if (v2 == 3)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v7 = *(_OWORD *)(v0 + 80);
  result[7] = v7;
  result[8] = v7;
  result[9] = v4;
  if (v2 < 5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = *(_OWORD *)(v0 + 96);
  result[10] = v8;
  if (v2 == 5)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v9 = *(_OWORD *)(v0 + 112);
  result[11] = v9;
  result[12] = v9;
  if (v2 < 7)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v10 = *(_OWORD *)(v0 + 128);
  result[13] = v10;
  result[14] = v10;
  if (v2 != 7)
  {
    v11 = *(_OWORD *)(v0 + 144);
    result[15] = v11;
    result[16] = v11;
    result[17] = v8;
    result[18] = v4;
    result[19] = v8;
    result[20] = v5;
    result[21] = v9;
    result[22] = v6;
    result[23] = v10;
    result[24] = v7;
    swift_bridgeObjectRelease();
    v3[25] = v11;
    return v3;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_22650DFBC()
{
  uint64_t v0;
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  float32x4_t v15;
  float32x4_t v16;
  float32x4_t v17;
  float32x4_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  __int128 v26;
  unint64_t v27;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  unsigned int v32;
  float32x4_t v33;
  unsigned int v34;
  __int128 v35;
  float v36;
  float32x4_t v37;
  int v38;
  uint64_t v39;

  *(float *)&v32 = *(float *)(v0 + OBJC_IVAR____TtC8RoomPlan8ScanItem_dollhouseDimensions) * 0.5;
  *(float *)&v34 = *(float *)(v0 + OBJC_IVAR____TtC8RoomPlan8ScanItem_dollhouseDimensions + 4) * 0.5;
  v36 = *(float *)(v0 + OBJC_IVAR____TtC8RoomPlan8ScanItem_dollhouseDimensions + 8) * 0.5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255840A78);
  v1 = (_OWORD *)swift_allocObject();
  *(_QWORD *)&v2 = __PAIR64__(v34, v32);
  v3 = v32;
  *((float *)&v3 + 1) = -*(float *)&v34;
  v4 = v3;
  *((float *)&v4 + 2) = -v36;
  v5 = __PAIR64__(v34, v32);
  *((float *)&v5 + 2) = -v36;
  *(float *)&v6 = -*(float *)&v32;
  v7 = COERCE_UNSIGNED_INT(-*(float *)&v32);
  DWORD1(v7) = v34;
  v8 = v7;
  *((float *)&v8 + 2) = -v36;
  *((float *)&v6 + 1) = -*(float *)&v34;
  v9 = (unint64_t)v6;
  *((float *)&v9 + 2) = -v36;
  v1[2] = v4;
  v1[3] = v5;
  *((float *)&v3 + 2) = v36;
  *((_QWORD *)&v2 + 1) = LODWORD(v36);
  v1[4] = v8;
  v1[5] = v9;
  *((float *)&v7 + 2) = v36;
  *((_QWORD *)&v6 + 1) = LODWORD(v36);
  v1[6] = v3;
  v1[7] = v2;
  v1[8] = v7;
  v1[9] = v6;
  v10 = MEMORY[0x24BEE4AF8];
  v39 = MEMORY[0x24BEE4AF8];
  swift_retain();
  v11 = sub_2264C7A3C(0, 8, 0);
  v12 = OBJC_IVAR____TtC8RoomPlan8ScanItem_dollhousePosition;
  v13 = OBJC_IVAR____TtC8RoomPlan8ScanItem_dollhouseOrientation;
  for (i = 2; i != 10; ++i)
  {
    v37 = (float32x4_t)v1[i];
    v11 = MEMORY[0x227699714](v11, *(__n128 *)(v0 + v12), *(__n128 *)(v0 + v13), (__n128)xmmword_22655FA70);
    v20 = *(_QWORD *)(v39 + 16);
    v19 = *(_QWORD *)(v39 + 24);
    if (v20 >= v19 >> 1)
    {
      v31 = v18;
      v33 = v17;
      v29 = v15;
      v30 = v16;
      v11 = sub_2264C7A3C(v19 > 1, v20 + 1, 1);
      v15 = v29;
      v16 = v30;
      v18 = v31;
      v17 = v33;
    }
    *(_QWORD *)(v39 + 16) = v20 + 1;
    *(float32x4_t *)(v39 + 16 * v20 + 32) = vaddq_f32(v18, vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v15, v37.f32[0]), v16, *(float32x2_t *)v37.f32, 1), v17, v37, 2));
  }
  swift_release();
  swift_setDeallocating();
  swift_deallocClassInstance();
  v21 = *(_QWORD *)(v39 + 16);
  if (v21)
  {
    sub_2264C1310(0, v21, 0);
    v23 = 0;
    v24 = v10;
    v25 = *(_QWORD *)(v10 + 16);
    do
    {
      v26 = *(_OWORD *)(v39 + 16 * v23 + 32);
      v27 = *(_QWORD *)(v24 + 24);
      if (v25 >= v27 >> 1)
      {
        v35 = *(_OWORD *)(v39 + 16 * v23 + 32);
        v38 = v22;
        sub_2264C1310(v27 > 1, v25 + 1, 1);
        v26 = v35;
        v22 = v38;
      }
      ++v23;
      HIDWORD(v26) = v22;
      *(_QWORD *)(v24 + 16) = v25 + 1;
      *(_OWORD *)(v24 + 16 * v25++ + 32) = v26;
    }
    while (v21 != v23);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  return v24;
}

unint64_t sub_22650E294(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  unint64_t v4;

  if (a3 > 1u)
  {
    v4 = 0xD00000000000003ELL;
    if (!(a1 ^ 1 | a2))
      v4 = 0xD000000000000023;
    if (a1 | a2)
      return v4;
    else
      return 0xD000000000000025;
  }
  else
  {
    sub_22655D2EC();
    sub_22655CE24();
    sub_22655D544();
    sub_22655CE24();
    swift_bridgeObjectRelease();
    sub_22655CE24();
    sub_22655D544();
    sub_22655CE24();
    swift_bridgeObjectRelease();
    sub_22655CE24();
    return 0;
  }
}

unint64_t sub_22650E4A8()
{
  uint64_t v0;

  return sub_22650E294(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_22650E4B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;
  __int128 *v10;
  int64_t v11;
  __int128 v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  unint64_t v20;
  __int128 *v21;
  int64_t v22;
  __int128 v23;
  unint64_t v24;
  int v25;
  __int128 v26;
  uint64_t v28;
  __int128 v29;
  __int128 *v30;
  __int128 v31;
  __int128 v32;
  int64x2_t v33;
  id v34;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan16MeshParamTexture_vertexCount);
  if (v3 != v4)
  {
    sub_2264B4220();
    swift_allocError();
    v16 = 0;
    *(_QWORD *)v15 = v3;
    v3 = v4;
    goto LABEL_12;
  }
  v5 = 0;
  v34 = *(id *)(v2 + OBJC_IVAR____TtC8RoomPlan16MeshParamTexture_texture);
  v28 = v2;
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan16MeshParamTexture_bytesPerRow);
  v30 = (__int128 *)(a1 + 32);
  do
  {
    if (v3)
    {
      v33.i64[0] = MEMORY[0x24BEE4AF8];
      sub_2264C7968(0, v3, 0);
      v7 = v33.i64[0];
      v9 = *(_QWORD *)(v33.i64[0] + 16);
      v10 = v30;
      v11 = v3;
      do
      {
        v12 = *v10;
        v33.i64[0] = v7;
        v13 = *(_QWORD *)(v7 + 24);
        if (v9 >= v13 >> 1)
        {
          v26 = v12;
          sub_2264C7968(v13 > 1, v9 + 1, 1);
          v12 = v26;
          v7 = v33.i64[0];
        }
        v32 = v12;
        v14 = *(_DWORD *)((unint64_t)&v32 & 0xFFFFFFFFFFFFFFF3 | (4 * (v5 & 3)));
        *(_QWORD *)(v7 + 16) = v9 + 1;
        *(_DWORD *)(v7 + 4 * v9 + 32) = v14;
        ++v10;
        ++v9;
        --v11;
      }
      while (v11);
    }
    else
    {
      v7 = MEMORY[0x24BEE4AF8];
    }
    MTLRegionMake2D(v5, v3, &v33);
    objc_msgSend(v34, sel_replaceRegion_mipmapLevel_withBytes_bytesPerRow_, &v33, 0, v7 + 32, v6);
    result = swift_bridgeObjectRelease();
    ++v5;
  }
  while (v5 != 3);
  if (*(_BYTE *)(v28 + OBJC_IVAR____TtC8RoomPlan16MeshParamTexture_storeNormals) == 1)
  {
    v17 = *(_QWORD *)(a2 + 16);
    if (v17 == v3)
    {
      for (i = 0; i != 3; ++i)
      {
        if (v3)
        {
          v33.i64[0] = MEMORY[0x24BEE4AF8];
          sub_2264C7968(0, v3, 0);
          v19 = v33.i64[0];
          v20 = *(_QWORD *)(v33.i64[0] + 16);
          v21 = (__int128 *)(a2 + 32);
          v22 = v3;
          do
          {
            v23 = *v21;
            v33.i64[0] = v19;
            v24 = *(_QWORD *)(v19 + 24);
            if (v20 >= v24 >> 1)
            {
              v29 = v23;
              sub_2264C7968(v24 > 1, v20 + 1, 1);
              v23 = v29;
              v19 = v33.i64[0];
            }
            v31 = v23;
            v25 = *(_DWORD *)((unint64_t)&v31 & 0xFFFFFFFFFFFFFFF3 | (4 * (i & 3)));
            *(_QWORD *)(v19 + 16) = v20 + 1;
            *(_DWORD *)(v19 + 4 * v20 + 32) = v25;
            ++v21;
            ++v20;
            --v22;
          }
          while (v22);
        }
        else
        {
          v19 = MEMORY[0x24BEE4AF8];
        }
        MTLRegionMake2D(i + 3, v3, &v33);
        objc_msgSend(v34, sel_replaceRegion_mipmapLevel_withBytes_bytesPerRow_, &v33, 0, v19 + 32, v6);
        result = swift_bridgeObjectRelease();
      }
      return result;
    }
    sub_2264B4220();
    swift_allocError();
    *(_QWORD *)v15 = v17;
    v16 = 1;
LABEL_12:
    *(_QWORD *)(v15 + 8) = v3;
    *(_BYTE *)(v15 + 16) = v16;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_22650E7FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8RoomPlan16MeshParamTexture_materialTexture;
  v2 = sub_22655C974();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_22650E85C()
{
  return type metadata accessor for MeshParamTexture();
}

uint64_t type metadata accessor for MeshParamTexture()
{
  uint64_t result;

  result = qword_255848D78;
  if (!qword_255848D78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22650E8A0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22655C974();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

int64x2_t MTLRegionMake2D@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int64x2_t *a3@<X8>)
{
  int64x2_t result;

  a3->i64[0] = 0;
  a3->i64[1] = a1;
  a3[1].i64[0] = 0;
  a3[1].i64[1] = a2;
  result = vdupq_n_s64(1uLL);
  a3[2] = result;
  return result;
}

uint64_t getEnumTagSinglePayload for MeshParamTextureError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MeshParamTextureError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_22650E9D4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_22650E9EC(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MeshParamTextureError()
{
  return &type metadata for MeshParamTextureError;
}

float32x2_t *sub_22650EA18(double a1, double a2, double a3, float32_t a4)
{
  float32x2_t *v4;
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  float32x2_t v17;
  float32x2_t v18;
  float32x2_t v19;
  float32x2_t v20;
  float32x2_t v21;
  int32x2_t v22;
  int32x2_t v23;
  int32x2_t v24;
  int32x2_t v25;
  float32x2_t v26;
  int32x2_t v27;
  BOOL v28;
  unint64_t v30;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255841D18);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_226563280;
  *(double *)(v9 + 32) = a1;
  *(double *)(v9 + 40) = a2;
  *(double *)(v9 + 48) = a3;
  v4[2] = (float32x2_t)v9;
  __asm { FMOV            V1.2S, #3.0 }
  v4[3] = vdiv_f32(vadd_f32(vadd_f32(*(float32x2_t *)&a1, *(float32x2_t *)&a2), *(float32x2_t *)&a3), _D1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255849180);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_22655FFB0;
  type metadata accessor for CDTEdge();
  swift_allocObject();
  *(_QWORD *)(v15 + 32) = sub_226495C8C(a1, a2);
  swift_allocObject();
  *(_QWORD *)(v15 + 40) = sub_226495C8C(a2, a3);
  swift_allocObject();
  *(_QWORD *)(v15 + 48) = sub_226495C8C(a3, a1);
  v30 = v15;
  sub_22655CEE4();
  if (v15 < 0 || (v30 & 0x4000000000000000) != 0)
  {
    v16 = (uint64_t)sub_226535E50(v30);
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = v30 & 0xFFFFFFFFFFFFFF8;
  }
  v4[4] = (float32x2_t)v16;
  v17 = vsub_f32(*(float32x2_t *)&a3, *(float32x2_t *)&a2);
  v18 = vsub_f32(*(float32x2_t *)&a2, *(float32x2_t *)&a1);
  v19 = (float32x2_t)vrev64_s32((int32x2_t)v18);
  v20 = vmul_f32(v19, v17);
  v17.f32[0] = fabsf(vsub_f32(v20, (float32x2_t)vdup_lane_s32((int32x2_t)v20, 1)).f32[0]/ sqrtf(vaddv_f32(vmul_f32(v17, v17))));
  v21 = vsub_f32(*(float32x2_t *)&a3, *(float32x2_t *)&a1);
  v22 = (int32x2_t)vmul_f32(vsub_f32(*(float32x2_t *)&a1, *(float32x2_t *)&a2), (float32x2_t)vrev64_s32((int32x2_t)v21));
  v23 = (int32x2_t)vmul_f32(v21, v21);
  v24 = (int32x2_t)vmul_f32(v19, vsub_f32(*(float32x2_t *)&a1, *(float32x2_t *)&a3));
  v25 = (int32x2_t)vmul_f32(v18, v18);
  v26 = vabs_f32(vdiv_f32(vsub_f32((float32x2_t)vzip2_s32(v24, v22), (float32x2_t)vzip1_s32(v24, v22)), vsqrt_f32(vadd_f32((float32x2_t)vzip1_s32(v25, v23), (float32x2_t)vzip2_s32(v25, v23)))));
  v27 = vcgt_f32((float32x2_t)0x3400000034000000, v26);
  v4[5].i8[0] = (v17.f32[0] < 0.00000011921) | (v27.i8[4] | v27.i8[0]) & 1;
  v28 = v17.f32[0] < a4;
  if (v26.f32[1] < a4)
    v28 = 1;
  if (v26.f32[0] < a4)
    v28 = 1;
  v4[5].i8[1] = v28;
  v30 = (unint64_t)v4[2];
  swift_bridgeObjectRetain_n();
  sub_22649532C((uint64_t *)&v30);
  swift_bridgeObjectRelease();
  v4[6] = (float32x2_t)v30;
  return v4;
}

uint64_t sub_22650EC78()
{
  uint64_t v0;
  float32x2_t *v1;
  float32x2_t v2;
  float32x2_t v3;
  uint64_t v4;
  float32x2_t *v5;
  float32x2_t v6;
  float32x2_t v7;
  int8x8_t v8;
  unsigned int v9;
  int8x8_t v10;
  unint64_t v11;
  float32x2_t *v12;
  int32x2_t v13;
  int64_t v14;
  float32x2_t v15;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;
  int32x2_t v20;

  v1 = *(float32x2_t **)(v0 + 16);
  v2 = v1[2];
  if (v2)
  {
    v3 = v1[4];
    v4 = *(_QWORD *)&v2 - 1;
    if (*(_QWORD *)&v2 != 1)
    {
      v5 = v1 + 5;
      v6 = v1[4];
      do
      {
        v7 = *v5++;
        v8 = (int8x8_t)v7;
        v20 = vcgt_f32(v6, v7);
        if ((*(_DWORD *)((unint64_t)&v20 | (4 * (fabsf(vsub_f32(v7, v6).f32[0]) < 0.00000011921))) & 1) != 0)
          v9 = -1;
        else
          v9 = 0;
        v10 = (int8x8_t)vdup_n_s32(v9);
        v3 = (float32x2_t)vbsl_s8(v10, v8, (int8x8_t)v3);
        v6 = (float32x2_t)vbsl_s8(v10, v8, (int8x8_t)v6);
        --v4;
      }
      while (v4);
    }
    swift_bridgeObjectRetain_n();
    v11 = 0;
    v12 = v1;
    while (v11 < *(_QWORD *)&v1[2])
    {
      v13 = vceq_f32(v1[v11 + 4], v3);
      if ((v13.i32[0] & v13.i32[1] & 1) != 0)
        goto LABEL_19;
      v14 = (int64_t)v12[2];
      if (!v14)
        goto LABEL_23;
      v15 = v12[4];
      isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
      if (!(_DWORD)isUniquelyReferenced_nonNull_native || (unint64_t)(v14 - 1) > *(_QWORD *)&v12[3] >> 1)
        v12 = (float32x2_t *)sub_226486C2C(isUniquelyReferenced_nonNull_native, v14, 1, v12);
      v17 = (unint64_t)v12[2];
      if (!v17)
        goto LABEL_24;
      memmove(&v12[4], &v12[5], 8 * v17 - 8);
      v12[2] = (float32x2_t)(v17 - 1);
      v18 = (unint64_t)v12[3];
      if (v17 > v18 >> 1)
        v12 = (float32x2_t *)sub_226486C2C((_QWORD *)(v18 > 1), v17, 1, v12);
      ++v11;
      v12[2] = (float32x2_t)v17;
      v12[v17 + 3] = v15;
      if (*(_QWORD *)&v2 == v11)
      {
LABEL_19:
        swift_bridgeObjectRelease();
        return (uint64_t)v12;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    result = sub_22655D43C();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return (uint64_t)v1;
  }
  return result;
}

uint64_t sub_22650EE68()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CDTTriangle()
{
  return objc_opt_self();
}

uint64_t sub_22650EEBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    v2 = 0;
    do
    {
      ++v2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2558443D0);
      sub_22655D5EC();
      sub_22655D64C();
    }
    while (v1 != v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22650EF48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_22655D640();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    v2 = 0;
    do
    {
      ++v2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2558443D0);
      sub_22655D5EC();
      sub_22655D64C();
    }
    while (v1 != v2);
    swift_bridgeObjectRelease();
  }
  return sub_22655D670();
}

uint64_t sub_22650EFE4()
{
  return sub_22650EF48();
}

uint64_t sub_22650F004()
{
  return sub_22650EEBC();
}

uint64_t sub_22650F024()
{
  sub_22655D640();
  sub_22650EEBC();
  return sub_22655D670();
}

uint64_t sub_22650F060(uint64_t a1, uint64_t a2)
{
  return sub_226495394(*(float32x2_t **)(*(_QWORD *)a1 + 48), *(float32x2_t **)(*(_QWORD *)a2 + 48));
}

unint64_t sub_22650F078()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255848F40;
  if (!qword_255848F40)
  {
    v1 = type metadata accessor for CDTTriangle();
    result = MEMORY[0x22769A794](&unk_226568228, v1);
    atomic_store(result, (unint64_t *)&qword_255848F40);
  }
  return result;
}

uint64_t sub_22650F0BC(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_22650F0F8(char *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t, double);
  char v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;

  v30 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558491B8);
  MEMORY[0x24BDAC7A8](v4);
  v28 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v25 - v7;
  v9 = sub_22655C674();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BDE7F20];
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v25 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16);
  v27 = v2;
  v18(v13, v2, v9, v15);
  sub_226437F28((unint64_t *)&qword_2558491C0, v10, MEMORY[0x24BDE7F38]);
  sub_22655D1D8();
  sub_226437F28(&qword_2558491C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDE7F20], MEMORY[0x24BDE7F30]);
  v26 = a2;
  v19 = sub_22655CD04() ^ 1;
  v29 = v4;
  v20 = &v8[*(int *)(v4 + 48)];
  *v8 = v19 & 1;
  if ((v19 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v9);
    v22 = v26;
    ((void (*)(char *, uint64_t, uint64_t))v18)(v20, v26, v9);
    ((void (*)(char *, uint64_t, uint64_t))v18)(v13, v22, v9);
    sub_22655D1FC();
    v21 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  }
  else
  {
    v21 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v21(v20, v17, v9);
  }
  v23 = &v28[*(int *)(v29 + 48)];
  v21(v23, v20, v9);
  v21(v30, v23, v9);
  return v19 & 1;
}

uint64_t sub_22650F32C(char *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t, double);
  char v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;

  v30 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558491A0);
  MEMORY[0x24BDAC7A8](v4);
  v28 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v25 - v7;
  v9 = sub_22655C6EC();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BDE7FA0];
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v25 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16);
  v27 = v2;
  v18(v13, v2, v9, v15);
  sub_226437F28(&qword_2558491A8, v10, MEMORY[0x24BDE7FB8]);
  sub_22655D1D8();
  sub_226437F28(&qword_2558491B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDE7FA0], MEMORY[0x24BDE7FB0]);
  v26 = a2;
  v19 = sub_22655CD04() ^ 1;
  v29 = v4;
  v20 = &v8[*(int *)(v4 + 48)];
  *v8 = v19 & 1;
  if ((v19 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v9);
    v22 = v26;
    ((void (*)(char *, uint64_t, uint64_t))v18)(v20, v26, v9);
    ((void (*)(char *, uint64_t, uint64_t))v18)(v13, v22, v9);
    sub_22655D1FC();
    v21 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  }
  else
  {
    v21 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v21(v20, v17, v9);
  }
  v23 = &v28[*(int *)(v29 + 48)];
  v21(v23, v20, v9);
  v21(v30, v23, v9);
  return v19 & 1;
}

void sub_22650F560()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  double v17;
  double v18;
  double v19;
  double v20;
  id v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double Width;
  void *v31;
  double v32;
  float v33;
  uint64_t v34;
  uint64_t v35;
  int8x16_t v36;
  int8x16_t v37;
  float v38;
  int8x16_t v39;
  float v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  void *v47;
  char *v48;
  int8x16_t v49;
  int8x16_t v50;
  uint64_t aBlock;
  uint64_t v52;
  void *v53;
  void *v54;
  void *v55;
  uint64_t v56;
  CGRect v57;
  CGRect v58;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arGlyphView];
  if (v2)
  {
    *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arGlyphView] = 0;
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v2;
    v4 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v5 = (_QWORD *)swift_allocObject();
    v5[2] = v4;
    v5[3] = sub_2265137E8;
    v5[4] = v3;
    v6 = v2;
    swift_retain();
    swift_retain();
    sub_226439760((uint64_t)sub_226513800, (uint64_t)v5, 0.0);

    swift_release();
    swift_release();
    swift_release();
  }
  v7 = &v1[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_onboardingText];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  swift_bridgeObjectRelease();
  v8 = &v1[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_coachingText];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  swift_bridgeObjectRelease();
  v9 = OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse;
  v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse];
  if (!v10)
  {
    __break(1u);
    goto LABEL_16;
  }
  *(_BYTE *)(v10 + qword_25583FB30) = 0;
  swift_retain();
  sub_226435300();
  swift_release();
  v11 = *(_QWORD *)&v1[v9];
  if (!v11)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  *(_BYTE *)(v11 + qword_25583FB00) = 0;
  v12 = OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView;
  v13 = *(void **)&v1[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView];
  if (!v13)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v14 = v13;
  sub_226558C38();

  v15 = *(void **)&v1[v12];
  if (!v15)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v16 = v15;
  v17 = sub_22655824C();
  sub_2265589C4(v1, v17, v18, v19, v20);

  v21 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v21, sel_bounds);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;

  v57.origin.x = v23;
  v57.origin.y = v25;
  v57.size.width = v27;
  v57.size.height = v29;
  Width = CGRectGetWidth(v57);
  v31 = *(void **)&v1[v12];
  if (!v31)
  {
LABEL_19:
    __break(1u);
    return;
  }
  v32 = Width;
  objc_msgSend(v31, sel_bounds);
  v33 = v32 / CGRectGetWidth(v58);
  v34 = OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_scaleAdjustment;
  *(float *)&v1[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_scaleAdjustment] = v33 * 1.075;
  if (qword_25583F848 != -1)
    swift_once();
  if (qword_25583F808 != -1)
    swift_once();
  swift_beginAccess();
  v35 = swift_bridgeObjectRetain();
  sub_226450DA4(v35);
  v49 = v37;
  v50 = v36;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arcBallCamera])
  {
    swift_retain();
    v38 = sub_2265109AC();
    sub_226504E00(0, 0, 1, 1, v50, v49, v38, *(float *)&v1[v34], v39);
    swift_release();
  }
  v40 = v32
      / (v32
       - (*(double *)&v1[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_completionMargin]
        + *(double *)&v1[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_completionMargin]));
  *(float *)&v1[v34] = v40;
  v41 = (void *)objc_opt_self();
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = v1;
  v55 = sub_226513774;
  v56 = v42;
  v43 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v52 = 1107296256;
  v53 = sub_2264FA450;
  v54 = &block_descriptor_40;
  v44 = _Block_copy(&aBlock);
  v45 = v1;
  swift_release();
  v46 = swift_allocObject();
  *(_QWORD *)(v46 + 16) = v45;
  v55 = sub_22651377C;
  v56 = v46;
  aBlock = v43;
  v52 = 1107296256;
  v53 = sub_22650F0BC;
  v54 = &block_descriptor_46;
  v47 = _Block_copy(&aBlock);
  v48 = v45;
  swift_release();
  objc_msgSend(v41, sel_animateWithDuration_animations_completion_, v44, v47, 1.5);
  _Block_release(v47);
  _Block_release(v44);
}

void sub_22650F9D4()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  char *v13;
  _QWORD v14[6];

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arGlyphView];
  if (v2)
  {
    *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arGlyphView] = 0;
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v2;
    v4 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v5 = (_QWORD *)swift_allocObject();
    v5[2] = v4;
    v5[3] = sub_2265137E8;
    v5[4] = v3;
    v6 = v2;
    swift_retain();
    swift_retain();
    sub_226439760((uint64_t)sub_226513800, (uint64_t)v5, 0.0);

    swift_release();
    swift_release();
    swift_release();
  }
  *(_DWORD *)&v1[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_scaleAdjustment] = 1065982362;
  v7 = OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arcBallCamera;
  v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arcBallCamera];
  if (v8)
  {
    *(_DWORD *)(v8 + qword_2558488A0) = 1065353216;
    *(_DWORD *)(v8 + qword_2558488D0) = 1065353216;
    *(_DWORD *)(v8 + qword_2558488A8) = 0;
    *(_BYTE *)(v8 + qword_255848950) = 1;
    v9 = *(_QWORD *)&v1[v7];
    if (v9)
      *(_BYTE *)(v9 + qword_25585B1D0) = 1;
  }
  sub_226512BBC();
  v10 = (void *)objc_opt_self();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v1;
  v14[4] = sub_226513768;
  v14[5] = v11;
  v14[0] = MEMORY[0x24BDAC760];
  v14[1] = 1107296256;
  v14[2] = sub_2264FA450;
  v14[3] = &block_descriptor_25_1;
  v12 = _Block_copy(v14);
  v13 = v1;
  swift_release();
  objc_msgSend(v10, sel_animateWithDuration_animations_, v12, 1.5);
  _Block_release(v12);
}

void sub_22650FBF0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  id v5;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse))
  {
    swift_retain();
    sub_22643501C();
    sub_22644DCD8();
    swift_release();
    swift_release();
    v1 = *(void **)(v0 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arGlyphView);
    if (v1)
    {
      *(_QWORD *)(v0 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arGlyphView) = 0;
      v2 = swift_allocObject();
      *(_QWORD *)(v2 + 16) = v1;
      v3 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v4 = (_QWORD *)swift_allocObject();
      v4[2] = v3;
      v4[3] = sub_2265137E8;
      v4[4] = v2;
      v5 = v1;
      swift_retain();
      swift_retain();
      sub_226439760((uint64_t)sub_226513800, (uint64_t)v4, 0.0);

      swift_release();
      swift_release();
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_22650FD2C()
{
  char *v0;
  id v1;

  if (*(_QWORD *)&v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_onboardingText + 8]
    || *(_QWORD *)&v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_coachingText + 8])
  {
    swift_bridgeObjectRetain();
    v1 = (id)sub_22655CD64();
    swift_bridgeObjectRelease();
    objc_msgSend(v0, sel_setAccessibilityLabel_, v1);
  }
  else
  {
    v1 = (id)sub_22655CD64();
    objc_msgSend(v0, sel_setAccessibilityLabel_, v1);
  }

}

uint64_t sub_22650FDC4(uint64_t result)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  int8x16_t v4;
  int8x16_t v5;
  float v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse))
  {
    v2 = (uint64_t *)result;
    swift_retain();
    sub_226435980(v2);
    swift_release();
    if (qword_25583F848 != -1)
      swift_once();
    if (qword_25583F808 != -1)
      swift_once();
    swift_beginAccess();
    v3 = swift_bridgeObjectRetain();
    sub_226450DA4(v3);
    v8 = v5;
    v9 = v4;
    result = swift_bridgeObjectRelease();
    if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arcBallCamera))
    {
      swift_retain();
      v6 = sub_2265109AC();
      sub_226504E00(0, 0, 1, 0, v9, v8, v6, *(float *)(v1 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_scaleAdjustment), v7);
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22650FF08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v5 = v4;
  v31 = a4;
  v32 = a3;
  v30 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849170);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v29 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v29 - v14;
  v16 = type metadata accessor for CapturedRoom(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v29 = (uint64_t)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (uint64_t *)((char *)&v29 - v20);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (uint64_t *)((char *)&v29 - v23);
  sub_22651367C(a2, (uint64_t)v15);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v25(v15, 1, v16) == 1)
  {
    v26 = v5;
    sub_22643D7E4((uint64_t)v15, &qword_255849170);
  }
  else
  {
    result = sub_2265037A0((uint64_t)v15, (uint64_t)v24);
    if (!*(_QWORD *)(v5 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse))
    {
      __break(1u);
      goto LABEL_15;
    }
    v26 = v5;
    swift_retain();
    sub_22643501C();
    sub_226449388(v24);
    swift_release();
    swift_release();
    sub_2265136C4((uint64_t)v24);
  }
  sub_22651367C(v32, (uint64_t)v12);
  if (v25(v12, 1, v16) != 1)
  {
    result = sub_2265037A0((uint64_t)v12, (uint64_t)v21);
    if (*(_QWORD *)(v26 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse))
    {
      swift_retain();
      sub_22643501C();
      sub_22644A218(v21);
      swift_release();
      swift_release();
      sub_2265136C4((uint64_t)v21);
      goto LABEL_9;
    }
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_22643D7E4((uint64_t)v12, &qword_255849170);
LABEL_9:
  sub_22651367C(v31, (uint64_t)v9);
  if (v25(v9, 1, v16) == 1)
  {
    sub_22643D7E4((uint64_t)v9, &qword_255849170);
    return sub_22650FDC4(v30);
  }
  v28 = v29;
  result = sub_2265037A0((uint64_t)v9, v29);
  if (*(_QWORD *)(v26 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse))
  {
    swift_retain();
    sub_22643501C();
    sub_22644A16C(v28);
    swift_release();
    swift_release();
    sub_2265136C4(v28);
    return sub_22650FDC4(v30);
  }
LABEL_16:
  __break(1u);
  return result;
}

void sub_2265101FC(unsigned __int8 *a1)
{
  _BYTE *v1;
  int v2;
  int v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _BYTE *v23;
  double *v24;
  void *v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  double *v32;

  v2 = *a1;
  v3 = v1[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_currentInstruction];
  if (v3 != 6 && v2 == v3)
    return;
  if ((v2 & 0xFE) == 4)
  {
    v1[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_currentInstruction] = v2;
LABEL_9:
    v10 = *(void **)&v1[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_coachingLabel];
    v9 = 0.0;
    if (v10 && (v11 = objc_msgSend(v10, sel_text)) != 0)
    {
      v12 = v11;
      v6 = sub_22655CD88();
      v8 = v13;

    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    goto LABEL_13;
  }
  v1[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_currentInstruction] = v2;
  if (!v2)
    goto LABEL_9;
  LOBYTE(v27) = v2;
  sub_226512558((unsigned __int8 *)&v27);
  v6 = v5;
  v8 = v7;
  v9 = 1.0;
LABEL_13:
  v14 = (uint64_t *)&v1[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_coachingText];
  *v14 = v6;
  v14[1] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = *(void **)&v1[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_coachingLabel];
  if (v15)
  {
    if (v8)
    {
      swift_bridgeObjectRetain();
      v16 = v15;
      v17 = (void *)sub_22655CD64();
      swift_bridgeObjectRelease();
    }
    else
    {
      v18 = v15;
      v17 = 0;
    }
    objc_msgSend(v15, sel_setText_, v17);

  }
  v19 = (void *)objc_opt_self();
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v1;
  *(double *)(v20 + 24) = v9;
  v31 = sub_2265133E4;
  v32 = (double *)v20;
  v21 = MEMORY[0x24BDAC760];
  v27 = MEMORY[0x24BDAC760];
  v28 = 1107296256;
  v29 = sub_2264FA450;
  v30 = &block_descriptor_7;
  v22 = _Block_copy(&v27);
  v23 = v1;
  swift_release();
  v24 = (double *)swift_allocObject();
  v24[2] = v9;
  *((_QWORD *)v24 + 3) = v23;
  *((_QWORD *)v24 + 4) = v6;
  *((_QWORD *)v24 + 5) = v8;
  v31 = sub_226513450;
  v32 = v24;
  v27 = v21;
  v28 = 1107296256;
  v29 = sub_22650F0BC;
  v30 = &block_descriptor_7;
  v25 = _Block_copy(&v27);
  v26 = v23;
  swift_release();
  objc_msgSend(v19, sel_animateWithDuration_delay_options_animations_completion_, 4, v22, v25, 1.0, 0.0);
  _Block_release(v25);
  _Block_release(v22);
}

void sub_226510478(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  v2 = a1;
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arGlyphView))
    sub_226512868();
  v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_currentInitializationState);
  if (v3 == 5 || v3 != (_DWORD)v2)
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_currentInitializationState) = v2;
    __asm { BR              X9 }
  }
}

void sub_226510864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  _QWORD *v8;

  v3 = *(void **)(v0 + v1);
  if (v3)
  {
    *(_QWORD *)(v0 + v1) = 0;
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = v3;
    v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v6 = (_QWORD *)swift_allocObject();
    v6[2] = v5;
    v6[3] = sub_226513460;
    v6[4] = v4;
    v7 = v3;
    swift_retain();
    swift_retain();
    sub_226439760((uint64_t)sub_226513498, (uint64_t)v6, 0.0);

    swift_release();
    swift_release();
    swift_release();
  }
  v8 = (_QWORD *)(v0 + *(_QWORD *)(v2 + 4056));
  *v8 = 0;
  v8[1] = 0;
  JUMPOUT(0x2265106F8);
}

float sub_2265109AC()
{
  uint64_t v0;
  _BYTE *v1;
  float v2;
  float result;

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView____lazy_storage___pitchAdjustment);
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView____lazy_storage___pitchAdjustment + 4) & 1) == 0)
    return *(float *)v1;
  sub_22655CF80();
  result = -v2;
  *(float *)v1 = result;
  v1[4] = 0;
  return result;
}

void sub_226510A34(double a1, double a2, double a3, double a4, float a5)
{
  _BYTE *v5;
  objc_class *ObjectType;
  char *v12;
  _QWORD *v13;
  _QWORD *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  objc_super v24;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_OWORD *)&v5[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_directionalLightDirection] = 0u;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse] = 0;
  v5[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_isModelEnabled] = 1;
  v12 = &v5[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView____lazy_storage___pitchAdjustment];
  *(_DWORD *)v12 = 0;
  v12[4] = 1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arcBallCamera] = 0;
  *(_DWORD *)&v5[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_runtimeScaleAdjustment] = 1065982362;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_completionMargin] = 0x4034000000000000;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arGlyphView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_coachingLabel] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_coachingLabelContainer] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_panGestureRecognizer] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_pinchGestureRecognizer] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_immediateLongPressRecognizer] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_directionalDebugEntity] = 0;
  v13 = &v5[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_coachingText];
  *v13 = 0;
  v13[1] = 0;
  v14 = &v5[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_onboardingText];
  *v14 = 0;
  v14[1] = 0;
  v15 = &v5[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_cameraTransform];
  *((_OWORD *)v15 + 2) = 0u;
  *((_OWORD *)v15 + 3) = 0u;
  *(_OWORD *)v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  v15[64] = 1;
  v5[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_currentInstruction] = 6;
  v5[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_currentInitializationState] = 5;
  v16 = &v5[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_sceneObserver];
  *((_QWORD *)v16 + 4) = 0;
  *(_OWORD *)v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_ambientLight] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_directionalLight] = 0;
  v17 = OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_lightingAnchor;
  sub_22655C20C();
  v18 = v5;
  *(_QWORD *)&v5[v17] = MEMORY[0x2276988D4]((__n128)0);
  *(_DWORD *)&v18[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_scaleAdjustment] = 1065982362;

  v24.receiver = v18;
  v24.super_class = ObjectType;
  v19 = (char *)objc_msgSendSuper2(&v24, sel_initWithFrame_, a1, a2, a3, a4);
  sub_226510D30();
  sub_226511320();
  sub_226511430();
  type metadata accessor for DollHouse();
  swift_allocObject();
  v20 = sub_226435690(a5);
  v21 = OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse;
  *(_QWORD *)&v19[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse] = v20;
  swift_release();
  v22 = *(void **)&v19[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView];
  if (v22)
  {
    v23 = v22;
    sub_22655C7D0();

    if (*(_QWORD *)&v19[v21])
    {
      sub_226437F28(&qword_255849178, (uint64_t (*)(uint64_t))type metadata accessor for DollHouse, (uint64_t)&unk_22655F49C);
      swift_retain();
      sub_22655C5E4();
      swift_release();
      swift_release();
      sub_2265115D4();
      sub_226511904();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_226510D30()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  char *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  void (*v36)(_BYTE *, _QWORD);
  void *v37;
  id v38;
  void (*v39)(_BYTE *, _QWORD);
  void (*v40)(char *, uint64_t);
  void *v41;
  id v42;
  void (*v43)(_BYTE *, _QWORD);
  void *v44;
  id v45;
  void (*v46)(_BYTE *, _QWORD);
  char *v47;
  void *v48;
  id v49;
  void (*v50)(_BYTE *, _QWORD);
  char *v51;
  void *v52;
  id v53;
  void (*v54)(_BYTE *, _QWORD);
  char *v55;
  void *v56;
  id v57;
  void (*v58)(_BYTE *, _QWORD);
  char *v59;
  void *v60;
  id v61;
  void (*v62)(_BYTE *, _QWORD);
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  _BYTE v70[32];

  v1 = v0;
  v2 = sub_22655C6EC();
  v69 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v64 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v65 = (char *)&v64 - v5;
  MEMORY[0x24BDAC7A8](v6);
  v66 = (char *)&v64 - v7;
  MEMORY[0x24BDAC7A8](v8);
  v67 = (char *)&v64 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v68 = (char *)&v64 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v64 - v13;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v64 - v16;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v64 - v19;
  v21 = sub_22655C620();
  MEMORY[0x24BDAC7A8](v21);
  v22 = sub_22655C5FC();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v1, sel_bounds, v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(v26, *MEMORY[0x24BDE7E20], v22);
  v27 = objc_allocWithZone((Class)sub_22655C7DC());
  v28 = sub_22655C7C4();
  v29 = OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView;
  v30 = *(void **)&v1[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView] = v28;

  if (!*(_QWORD *)&v1[v29])
  {
    __break(1u);
    goto LABEL_13;
  }
  objc_msgSend(v1, sel_addSubview_);
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v31 = *(void **)&v1[v29];
  if (!v31)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  objc_msgSend(v31, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v32 = *(void **)&v1[v29];
  if (!v32)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v33 = (void *)objc_opt_self();
  v34 = v32;
  v35 = objc_msgSend(v33, sel_clearColor);
  sub_22655C614();

  v36 = (void (*)(_BYTE *, _QWORD))sub_22655C65C();
  sub_22655C62C();
  v36(v70, 0);

  v37 = *(void **)&v1[v29];
  if (!v37)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v38 = v37;
  sub_22655C68C();
  v39 = (void (*)(_BYTE *, _QWORD))sub_22655C6F8();
  sub_22650F32C(v20, (uint64_t)v17);
  v40 = *(void (**)(char *, uint64_t))(v69 + 8);
  v40(v17, v2);
  v40(v20, v2);
  v39(v70, 0);

  v41 = *(void **)&v1[v29];
  if (!v41)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v42 = v41;
  sub_22655C698();
  v43 = (void (*)(_BYTE *, _QWORD))sub_22655C6F8();
  sub_22650F32C(v14, (uint64_t)v17);
  v40(v17, v2);
  v40(v14, v2);
  v43(v70, 0);

  v44 = *(void **)&v1[v29];
  if (!v44)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v45 = v44;
  sub_22655C6A4();
  v46 = (void (*)(_BYTE *, _QWORD))sub_22655C6F8();
  v47 = v68;
  sub_22650F32C(v68, (uint64_t)v17);
  v40(v17, v2);
  v40(v47, v2);
  v46(v70, 0);

  v48 = *(void **)&v1[v29];
  if (!v48)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v49 = v48;
  sub_22655C6B0();
  v50 = (void (*)(_BYTE *, _QWORD))sub_22655C6F8();
  v51 = v67;
  sub_22650F32C(v67, (uint64_t)v17);
  v40(v17, v2);
  v40(v51, v2);
  v50(v70, 0);

  v52 = *(void **)&v1[v29];
  if (!v52)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v53 = v52;
  sub_22655C6BC();
  v54 = (void (*)(_BYTE *, _QWORD))sub_22655C6F8();
  v55 = v66;
  sub_22650F32C(v66, (uint64_t)v17);
  v40(v17, v2);
  v40(v55, v2);
  v54(v70, 0);

  v56 = *(void **)&v1[v29];
  if (!v56)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v57 = v56;
  sub_22655C6C8();
  v58 = (void (*)(_BYTE *, _QWORD))sub_22655C6F8();
  v59 = v65;
  sub_22650F32C(v65, (uint64_t)v17);
  v40(v17, v2);
  v40(v59, v2);
  v58(v70, 0);

  v60 = *(void **)&v1[v29];
  if (v60)
  {
    v61 = v60;
    sub_22655C6E0();
    v62 = (void (*)(_BYTE *, _QWORD))sub_22655C6F8();
    v63 = v64;
    sub_22650F32C(v64, (uint64_t)v17);
    v40(v17, v2);
    v40(v63, v2);
    v62(v70, 0);

    sub_226512BBC();
    return;
  }
LABEL_21:
  __break(1u);
}

void sub_226511320()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  _OWORD v5[2];
  uint64_t v6;
  _BYTE v7[40];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView);
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    sub_22655C7D0();

    sub_22655C4E8();
    v6 = 0;
    memset(v5, 0, sizeof(v5));
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_22655C5F0();
    swift_release();
    swift_release();
    sub_22643D7E4((uint64_t)v5, (uint64_t *)&unk_255849190);
    v4 = v2 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_sceneObserver;
    swift_beginAccess();
    sub_226503AF0((uint64_t)v7, v4);
    swift_endAccess();
  }
  else
  {
    __break(1u);
  }
}

id sub_226511430()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  id result;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD7E0]), sel_initWithTarget_action_, v0, sel_didPanWithPanGesture_);
  v2 = OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_panGestureRecognizer;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_panGestureRecognizer);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_panGestureRecognizer) = v1;

  result = *(id *)(v0 + v2);
  if (!result)
  {
    __break(1u);
    goto LABEL_13;
  }
  objc_msgSend(result, sel_setDelegate_, v0);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD808]), sel_initWithTarget_action_, v0, sel_didPinchWithPinchGesture_);
  v6 = OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_pinchGestureRecognizer;
  v7 = *(void **)(v0 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_pinchGestureRecognizer);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_pinchGestureRecognizer) = v5;

  result = *(id *)(v0 + v6);
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  objc_msgSend(result, sel_setDelegate_, v0);
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD740]), sel_initWithTarget_action_, v0, sel_didTouchDownWithLongPressGesture_);
  v9 = OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_immediateLongPressRecognizer;
  v10 = *(void **)(v0 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_immediateLongPressRecognizer);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_immediateLongPressRecognizer) = v8;

  result = *(id *)(v0 + v9);
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  objc_msgSend(result, sel_setMinimumPressDuration_, 0.0);
  result = *(id *)(v0 + v9);
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  objc_msgSend(result, sel_setDelegate_, v0);
  v11 = OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView;
  result = *(id *)(v0 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView);
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (!*(_QWORD *)(v0 + v2))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  objc_msgSend(result, sel_addGestureRecognizer_);
  result = *(id *)(v0 + v11);
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (!*(_QWORD *)(v0 + v6))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  objc_msgSend(result, sel_addGestureRecognizer_);
  result = *(id *)(v0 + v11);
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (*(_QWORD *)(v0 + v9))
    return objc_msgSend(result, sel_addGestureRecognizer_);
LABEL_21:
  __break(1u);
  return result;
}

void sub_2265115D4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  void (*v5)(_BYTE *, _QWORD);
  void (*v6)(_BYTE *, _QWORD);
  void *v7;
  id v8;
  void (*v9)(_BYTE *, _QWORD);
  void (*v10)(_BYTE *, _QWORD);
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  void (*v15)(_BYTE *, _QWORD);
  uint64_t v16;
  uint64_t v17;
  id v18;
  void (*v19)(_BYTE *, _QWORD);
  void (*v20)(_BYTE *, _QWORD);
  uint64_t v21;
  void *v22;
  id v23;
  _BYTE v24[32];
  _BYTE v25[32];

  v1 = OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView);
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  v3 = v0;
  v4 = v2;
  v5 = (void (*)(_BYTE *, _QWORD))sub_22655C65C();
  v6 = (void (*)(_BYTE *, _QWORD))sub_22655C650();
  sub_22655C638();
  v6(v24, 0);
  v5(v25, 0);

  v7 = *(void **)(v0 + v1);
  if (!v7)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v8 = v7;
  v9 = (void (*)(_BYTE *, _QWORD))sub_22655C65C();
  v10 = (void (*)(_BYTE *, _QWORD))sub_22655C650();
  sub_22655C644();
  v10(v24, 0);
  v9(v25, 0);

  sub_22655C1E8();
  swift_allocObject();
  v11 = sub_22655C1DC();
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_whiteColor);
  v14 = objc_msgSend(v13, sel_CGColor);

  v15 = (void (*)(_BYTE *, _QWORD))sub_22655CADC();
  sub_22655C554();
  v15(v25, 0);
  v16 = OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_ambientLight;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_ambientLight) = v11;
  swift_release();
  if (!*(_QWORD *)(v3 + v16))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  sub_22655C20C();
  swift_retain();
  sub_22655C230();
  swift_release();
  sub_22655C488();
  swift_allocObject();
  v17 = sub_22655C1DC();
  v18 = objc_msgSend(v12, sel_whiteColor);
  v19 = (void (*)(_BYTE *, _QWORD))sub_22655C530();
  sub_22655C584();
  v19(v25, 0);
  v20 = (void (*)(_BYTE *, _QWORD))sub_22655C530();
  sub_22655C578();
  v20(v25, 0);
  v21 = OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_directionalLight;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_directionalLight) = v17;
  swift_release();
  if (!*(_QWORD *)(v3 + v21))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  swift_retain();
  sub_22655C230();
  swift_release();
  v22 = *(void **)(v3 + v1);
  if (v22)
  {
    v23 = v22;
    sub_22655C7D0();

    sub_22655C5E4();
    swift_release();
    return;
  }
LABEL_11:
  __break(1u);
}

void sub_226511904()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  void *v56;
  id v57;
  void *v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  void *v66;
  id v67;
  void *v68;
  id v69;
  id v70;
  uint64_t v71;
  void *v72;
  id v73;
  void *v74;
  id v75;
  id v76;
  void *v77;
  void *v78;
  id v79;

  v1 = v0;
  objc_msgSend(v0, sel_setIsAccessibilityElement_, 1);
  objc_msgSend(v0, sel_setAccessibilityFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  v3 = OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_coachingLabel;
  v4 = *(void **)&v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_coachingLabel];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_coachingLabel] = v2;

  v5 = *(void **)&v0[v3];
  if (!v5)
  {
    __break(1u);
    goto LABEL_32;
  }
  objc_msgSend(v5, sel_setNumberOfLines_, 1);
  v6 = *(void **)&v0[v3];
  if (!v6)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v7 = (void *)objc_opt_self();
  v8 = v6;
  v9 = objc_msgSend(v7, sel_whiteColor);
  objc_msgSend(v8, sel_setTextColor_, v9);

  v10 = *(void **)&v1[v3];
  if (!v10)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  objc_msgSend(v10, sel_setTextAlignment_, 1);
  v11 = *(void **)&v1[v3];
  if (!v11)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  objc_msgSend(v11, sel_setLineBreakMode_, 0);
  v12 = *(void **)&v1[v3];
  if (!v12)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v13 = (void *)objc_opt_self();
  v14 = *MEMORY[0x24BEBE200];
  v15 = v12;
  v16 = objc_msgSend(v13, sel_preferredFontForTextStyle_, v14);
  objc_msgSend(v15, sel_setFont_, v16);

  v17 = *(void **)&v1[v3];
  if (!v17)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  objc_msgSend(v17, sel_setAdjustsFontSizeToFitWidth_, 1);
  v18 = *(void **)&v1[v3];
  if (!v18)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  objc_msgSend(v18, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_initWithFrame_, 0.0, 0.0, 128.0, 47.0);
  v20 = OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_coachingLabelContainer;
  v21 = *(void **)&v1[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_coachingLabelContainer];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_coachingLabelContainer] = v19;

  v22 = *(void **)&v1[v20];
  if (!v22)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  objc_msgSend(v22, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v23 = *(void **)&v1[v20];
  if (!v23)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v24 = v23;
  v25 = objc_msgSend(v7, sel_blackColor);
  v26 = objc_msgSend(v25, sel_colorWithAlphaComponent_, 0.75);

  objc_msgSend(v24, sel_setBackgroundColor_, v26);
  v27 = *(void **)&v1[v20];
  if (!v27)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v28 = objc_msgSend(v27, sel_layer);
  objc_msgSend(v28, sel_setCornerRadius_, 17.0);

  v29 = *(void **)&v1[v20];
  if (!v29)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  objc_msgSend(v29, sel_setAlpha_, 0.0);
  v30 = *(void **)&v1[v20];
  if (!v30)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if (!*(_QWORD *)&v1[v3])
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  objc_msgSend(v30, sel_addSubview_);
  if (!*(_QWORD *)&v1[v20])
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  objc_msgSend(v1, sel_addSubview_);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255849180);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_2265682A0;
  v32 = *(void **)&v1[v20];
  if (!v32)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v33 = objc_msgSend(v32, sel_heightAnchor);
  v34 = objc_msgSend(v33, sel_constraintEqualToConstant_, 47.0);

  *(_QWORD *)(v31 + 32) = v34;
  v35 = *(void **)&v1[v20];
  if (!v35)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v36 = objc_msgSend(v35, sel_centerXAnchor);
  v37 = objc_msgSend(v1, sel_centerXAnchor);
  v38 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v37);

  *(_QWORD *)(v31 + 40) = v38;
  v39 = *(void **)&v1[v20];
  if (!v39)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v40 = objc_msgSend(v39, sel_topAnchor);
  v41 = objc_msgSend(v1, sel_topAnchor);
  v42 = objc_msgSend(v40, sel_constraintEqualToAnchor_constant_, v41, 100.0);

  *(_QWORD *)(v31 + 48) = v42;
  v43 = *(void **)&v1[v20];
  if (!v43)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v44 = objc_msgSend(v43, sel_leadingAnchor);
  v45 = objc_msgSend(v1, sel_leadingAnchor);
  v46 = objc_msgSend(v44, sel_constraintGreaterThanOrEqualToAnchor_, v45);

  *(_QWORD *)(v31 + 56) = v46;
  v47 = *(void **)&v1[v20];
  if (!v47)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v48 = objc_msgSend(v47, sel_trailingAnchor);
  v49 = objc_msgSend(v1, sel_trailingAnchor);
  v50 = objc_msgSend(v48, sel_constraintLessThanOrEqualToAnchor_, v49);

  *(_QWORD *)(v31 + 64) = v50;
  v51 = *(void **)&v1[v3];
  if (!v51)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  v52 = objc_msgSend(v51, sel_topAnchor);
  v53 = *(void **)&v1[v20];
  if (!v53)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v54 = objc_msgSend(v53, sel_topAnchor);
  v55 = objc_msgSend(v52, sel_constraintEqualToAnchor_constant_, v54, 12.0);

  *(_QWORD *)(v31 + 72) = v55;
  v56 = *(void **)&v1[v3];
  if (!v56)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v57 = objc_msgSend(v56, sel_leadingAnchor);
  v58 = *(void **)&v1[v20];
  if (!v58)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v59 = objc_msgSend(v58, sel_leadingAnchor);
  v60 = objc_msgSend(v57, sel_constraintEqualToAnchor_constant_, v59, 12.0);

  *(_QWORD *)(v31 + 80) = v60;
  v61 = *(void **)&v1[v3];
  if (!v61)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v62 = objc_msgSend(v61, sel_bottomAnchor);
  v63 = *(void **)&v1[v20];
  if (!v63)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  v64 = objc_msgSend(v63, sel_bottomAnchor);
  v65 = objc_msgSend(v62, sel_constraintEqualToAnchor_constant_, v64, -12.0);

  *(_QWORD *)(v31 + 88) = v65;
  v66 = *(void **)&v1[v3];
  if (!v66)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  v67 = objc_msgSend(v66, sel_trailingAnchor);
  v68 = *(void **)&v1[v20];
  if (!v68)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  v69 = objc_msgSend(v68, sel_trailingAnchor);
  v70 = objc_msgSend(v67, sel_constraintEqualToAnchor_constant_, v69, -12.0);

  *(_QWORD *)(v31 + 96) = v70;
  sub_22655CEE4();
  v71 = swift_allocObject();
  *(_OWORD *)(v71 + 16) = xmmword_22655FA20;
  v72 = *(void **)&v1[v3];
  if (!v72)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  v73 = objc_msgSend(v72, sel_centerXAnchor);
  v74 = *(void **)&v1[v20];
  if (v74)
  {
    v75 = objc_msgSend(v74, sel_centerXAnchor);
    v76 = objc_msgSend(v73, sel_constraintEqualToAnchor_, v75);

    *(_QWORD *)(v71 + 32) = v76;
    sub_22655CEE4();
    v77 = (void *)objc_opt_self();
    sub_226513700();
    v78 = (void *)sub_22655CEC0();
    swift_bridgeObjectRelease();
    objc_msgSend(v77, sel_activateConstraints_, v78);

    v79 = (id)sub_22655CEC0();
    swift_bridgeObjectRelease();
    objc_msgSend(v77, sel_activateConstraints_, v79);

    return;
  }
LABEL_59:
  __break(1u);
}

void sub_22651219C(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v5;
  double v6;
  float32x4_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  double v12;
  float v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  float32x4_t v21;
  double v22;
  double v23;

  v2 = v1 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_cameraTransform;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_cameraTransform + 64) & 1) == 0)
  {
    v3 = v1;
    v5 = *(double *)v2;
    v6 = *(double *)(v2 + 16);
    v7 = *(float32x4_t *)(v2 + 32);
    v8 = OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arcBallCamera;
    if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arcBallCamera)
      || (v22 = *(double *)(v2 + 16),
          v23 = *(double *)v2,
          v21 = *(float32x4_t *)(v2 + 32),
          sub_2265123FC(),
          v7 = v21,
          v6 = v22,
          v5 = v23,
          *(_QWORD *)(v1 + v8)))
    {
      sub_2265055B4(v5, v6, v7);
      v9 = *(_QWORD *)(v1 + v8);
      if (v9)
      {
        v10 = *(void **)(v3 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView);
        if (!v10)
          goto LABEL_11;
        v11 = v10;
        swift_retain();
        sub_22652FDC0();
        *(float *)&v12 = fminf(*(float *)(v9 + qword_255848940) + 0.01, 1.0);
        *(_DWORD *)(v9 + qword_255848940) = LODWORD(v12);
        v13 = fminf(*(float *)(v9 + qword_255848948) + 0.01, 1.0);
        *(float *)(v9 + qword_255848948) = v13;
        sub_2265051AC(v12, v13);
        swift_release();

      }
    }
    v14 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse);
    if (v14)
    {
      v15 = *(_QWORD *)(v3 + v8);
      swift_retain();
      swift_retain();
      sub_22643501C();
      sub_2264480DC(0, 1, a1);
      swift_release();
      sub_226435A88(v15);
      sub_226434EF4();
      v16 = sub_22643501C();
      swift_beginAccess();
      v17 = *(_QWORD *)(v16 + 96);
      swift_bridgeObjectRetain();
      swift_release();
      v18 = sub_22643501C();
      swift_beginAccess();
      v19 = *(_QWORD *)(v18 + 104);
      swift_bridgeObjectRetain();
      swift_release();
      v20 = *(_QWORD *)(v14 + qword_25583FB48);
      swift_bridgeObjectRetain();
      sub_2264969BC(v17, v19, v15, v20);
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    __break(1u);
LABEL_11:
    __break(1u);
  }
}

void sub_2265123FC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView);
  if (!v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = v0;
  type metadata accessor for ARViewCameraEntity();
  swift_allocObject();
  v4 = v2;
  v5 = sub_22655C1DC();
  sub_22649C158();

  v6 = *(void **)(v0 + v1);
  if (!v6)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  type metadata accessor for DollHouseCamera();
  swift_allocObject();
  swift_retain();
  v7 = sub_22650481C(v6, v5, 1, 0.9273);
  sub_22655C908();
  sub_22655C2A8();
  v8 = *(void **)(v0 + v1);
  if (v8)
  {
    v9 = v8;
    sub_22655C7D0();

    sub_226437F28((unint64_t *)&qword_25584A5B0, (uint64_t (*)(uint64_t))type metadata accessor for DollHouseCamera, (uint64_t)&unk_226567F98);
    swift_retain();
    sub_22655C5E4();
    swift_release();
    swift_release();
    swift_release();
    *(_QWORD *)(v3 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arcBallCamera) = v7;
    swift_release();
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_226512558(unsigned __int8 *a1)
{
  uint64_t v2;
  uint64_t ObjCClassFromMetadata;
  id v4;

  swift_getObjectType();
  v2 = *a1;
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v4 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  __asm { BR              X9 }
}

uint64_t sub_2265125C4()
{
  void *v0;

  return 0;
}

void sub_2265126E0(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t inited;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  if (a1 == 0.0)
  {
    v5 = (_QWORD *)(a3 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_coachingText);
    *v5 = 0;
    v5[1] = 0;
LABEL_3:
    swift_bridgeObjectRelease();
    return;
  }
  if (a5)
  {
    swift_bridgeObjectRetain();
    if (!UIAccessibilityIsVoiceOverRunning())
      goto LABEL_3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255848D28);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22655F8F0;
    v7 = (void *)*MEMORY[0x24BEBDEE8];
    *(_QWORD *)(inited + 32) = *MEMORY[0x24BEBDEE8];
    *(_QWORD *)(inited + 64) = MEMORY[0x24BEE1328];
    *(_BYTE *)(inited + 40) = 1;
    v8 = v7;
    sub_2265142A0(inited);
    v9 = objc_allocWithZone(MEMORY[0x24BDD1458]);
    v10 = (void *)sub_22655CD64();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_226437F28(&qword_2558401C0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_22655F8A4);
    v11 = (void *)sub_22655CCBC();
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(v9, sel_initWithString_attributes_, v10, v11);

    UIAccessibilityPostNotification(*MEMORY[0x24BEBDDB0], v12);
  }
}

void sub_226512868()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;

  v1 = OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arGlyphView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arGlyphView];
  if (v2)
    goto LABEL_2;
  v3 = v0;
  type metadata accessor for ARGlyphView();
  v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v5 = *(void **)&v0[v1];
  *(_QWORD *)&v0[v1] = v4;

  if (*(_QWORD *)&v0[v1])
  {
    objc_msgSend(v0, sel_addSubview_);
    v6 = *(void **)&v0[v1];
    if (v6)
    {
      objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
      v7 = *(void **)&v0[v1];
      if (v7)
      {
        v8 = v7;
        v9 = sub_22655824C();
        sub_2265589C4(v3, v9, v10, v11, v12);

        v2 = *(void **)&v3[v1];
        if (v2)
        {
LABEL_2:
          v13 = v2;
          swift_retain();
          sub_2264A1FB0();
          swift_release();
          sub_226439760(0, 0, 1.0);

        }
      }
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_22651297C(char *a1)
{
  id result;
  uint64_t v3;
  void *v4;
  id v5;
  double Width;
  float v7;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  CGRect v13;
  CGRect v14;

  result = objc_msgSend(a1, sel_layoutIfNeeded);
  v3 = *(_QWORD *)&a1[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arcBallCamera];
  if (v3)
  {
    v4 = *(void **)&a1[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView];
    if (!v4)
    {
      __break(1u);
      return result;
    }
    swift_retain();
    v5 = v4;
    objc_msgSend(v5, sel_bounds);
    Width = CGRectGetWidth(v13);
    objc_msgSend(v5, sel_bounds);
    v7 = Width / CGRectGetHeight(v14);
    *(float *)(v3 + qword_255848868) = v7;
    REMatrix4x4MakePerspectiveFieldOfViewReverseDepth();
    v8 = (_OWORD *)(v3 + qword_255848890);
    *v8 = v9;
    v8[1] = v10;
    v8[2] = v11;
    v8[3] = v12;
    swift_release();

  }
  result = *(id *)&a1[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_coachingLabelContainer];
  if (result)
    return objc_msgSend(result, sel_setAlpha_, 0.0);
  return result;
}

uint64_t sub_226512A94(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int8x16_t v6;
  int8x16_t v7;
  uint64_t result;
  float v9;
  int8x16_t v10;
  int8x16_t v11;
  int8x16_t v12;

  v3 = OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arcBallCamera;
  v4 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arcBallCamera);
  if (v4)
    *(_BYTE *)(v4 + qword_25585B1D0) = 0;
  if (qword_25583F848 != -1)
    swift_once();
  if (qword_25583F808 != -1)
    swift_once();
  swift_beginAccess();
  v5 = swift_bridgeObjectRetain();
  sub_226450DA4(v5);
  v11 = v7;
  v12 = v6;
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a2 + v3))
  {
    swift_retain();
    v9 = sub_2265109AC();
    sub_226504E00(0, 0, 1, 0, v12, v11, v9, *(float *)(a2 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_scaleAdjustment), v10);
    return swift_release();
  }
  return result;
}

void sub_226512BBC()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  id v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  void *v9;
  double v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;

  v1 = OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView];
  if (!v2)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v3 = v0;
  v4 = v2;
  sub_226558C38();

  objc_msgSend(v3, sel_bounds);
  v6 = v5;
  objc_msgSend(v3, sel_bounds);
  if (v7 < v6)
    v6 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255849180);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_22655FFA0;
  v9 = *(void **)&v3[v1];
  if (!v9)
    goto LABEL_10;
  v10 = v6 * 0.45;
  v11 = objc_msgSend(v9, sel_widthAnchor);
  v12 = objc_msgSend(v11, sel_constraintEqualToConstant_, v10);

  *(_QWORD *)(v8 + 32) = v12;
  v13 = *(void **)&v3[v1];
  if (!v13)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v14 = objc_msgSend(v13, sel_heightAnchor);
  v15 = objc_msgSend(v14, sel_constraintEqualToConstant_, v10);

  *(_QWORD *)(v8 + 40) = v15;
  v16 = *(void **)&v3[v1];
  if (!v16)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v17 = objc_msgSend(v16, sel_centerXAnchor);
  v18 = objc_msgSend(v3, sel_centerXAnchor);
  v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v18);

  *(_QWORD *)(v8 + 48) = v19;
  v20 = *(void **)&v3[v1];
  if (v20)
  {
    v21 = objc_msgSend(v20, sel_bottomAnchor);
    v22 = objc_msgSend(v3, sel_bottomAnchor);
    v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_constant_, v22, -40.0);

    *(_QWORD *)(v8 + 56) = v23;
    sub_22655CEE4();
    v24 = (void *)objc_opt_self();
    sub_226513700();
    v25 = (id)sub_22655CEC0();
    swift_bridgeObjectRelease();
    objc_msgSend(v24, sel_activateConstraints_, v25);

    return;
  }
LABEL_13:
  __break(1u);
}

void sub_226512E34(char *a1)
{
  uint64_t v2;
  void *v3;
  double Width;
  float v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  id v11;
  CGRect v12;
  CGRect v13;

  objc_msgSend(a1, sel_layoutIfNeeded);
  v2 = *(_QWORD *)&a1[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arcBallCamera];
  if (v2)
  {
    v3 = *(void **)&a1[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView];
    if (v3)
    {
      swift_retain();
      v11 = v3;
      objc_msgSend(v11, sel_bounds);
      Width = CGRectGetWidth(v12);
      objc_msgSend(v11, sel_bounds);
      v5 = Width / CGRectGetHeight(v13);
      *(float *)(v2 + qword_255848868) = v5;
      REMatrix4x4MakePerspectiveFieldOfViewReverseDepth();
      v6 = (_OWORD *)(v2 + qword_255848890);
      *v6 = v7;
      v6[1] = v8;
      v6[2] = v9;
      v6[3] = v10;
      swift_release();

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_226512F38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  float v5;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x22769A944](v2);
  if (v3)
  {
    v4 = (void *)v3;
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_isModelEnabled) == 1)
    {
      sub_22655C4DC();
      sub_22651219C(v5);
    }

  }
}

uint64_t sub_226512FC4(uint64_t result, uint64_t a2, void *a3, void (*a4)(id))
{
  void *v5;
  id v6;
  id v7;

  if (*(_QWORD *)(result + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arcBallCamera))
  {
    v5 = (void *)result;
    v6 = a3;
    v7 = v5;
    swift_retain();
    a4(v6);

    return swift_release();
  }
  return result;
}

void sub_226513038(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  float v11;
  id v12;

  v3 = OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView;
  objc_msgSend(a1, sel_locationInView_, *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView));
  v4 = objc_msgSend(a1, sel_state);
  if (v4 == (id)3)
  {
    v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arcBallCamera);
    if (v10)
    {
      if (!*(_QWORD *)(v1 + v3))
      {
LABEL_13:
        __break(1u);
        return;
      }
      *(_BYTE *)(v10 + qword_255848960) = 0;
      v11 = 1.0;
      if (*(_BYTE *)(v10 + qword_25585B1D0))
        v11 = 0.0;
      *(float *)(v10 + qword_255848940) = v11;
      *(float *)(v10 + qword_255848948) = v11;
    }
  }
  else if (v4 == (id)1)
  {
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arcBallCamera);
    if (v5)
    {
      v6 = *(void **)(v1 + v3);
      if (v6)
      {
        *(_BYTE *)(v5 + qword_255848960) = 1;
        v7 = *(void **)(v5 + qword_255848860);
        *(_QWORD *)(v5 + qword_255848860) = 0;
        swift_retain();
        v8 = v6;

        v9 = *(void **)(v5 + qword_255848858);
        *(_QWORD *)(v5 + qword_255848858) = 0;

        v12 = *(id *)(v5 + qword_255848850);
        *(_QWORD *)(v5 + qword_255848850) = 0;
        swift_release();

        return;
      }
      __break(1u);
      goto LABEL_13;
    }
  }
}

id sub_2265131F8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for RoomCaptureCoachingOverlayView()
{
  return objc_opt_self();
}

uint64_t sub_226513374()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugBBManager()
{
  return objc_opt_self();
}

uint64_t sub_2265133C0()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_2265133E4()
{
  uint64_t v0;
  id result;

  result = *(id *)(*(_QWORD *)(v0 + 16)
                 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_coachingLabelContainer);
  if (result)
    return objc_msgSend(result, sel_setAlpha_, *(double *)(v0 + 24));
  return result;
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_226513424()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_226513450(uint64_t a1)
{
  uint64_t v1;

  sub_2265126E0(*(double *)(v1 + 16), a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

id sub_226513460()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_removeFromSuperview);
}

uint64_t sub_226513470()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

char *sub_226513498()
{
  uint64_t v0;

  return sub_2264396C8(*(_QWORD *)(v0 + 16), *(uint64_t (**)(char *))(v0 + 24));
}

void sub_2265134A4()
{
  _BYTE *v0;
  char *v1;
  _QWORD *v2;
  _QWORD *v3;
  char *v4;
  char *v5;
  uint64_t v6;

  *(_OWORD *)&v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_directionalLightDirection] = 0u;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse] = 0;
  v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_isModelEnabled] = 1;
  v1 = &v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView____lazy_storage___pitchAdjustment];
  *(_DWORD *)v1 = 0;
  v1[4] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arcBallCamera] = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_runtimeScaleAdjustment] = 1065982362;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_completionMargin] = 0x4034000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_arGlyphView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_coachingLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_coachingLabelContainer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_panGestureRecognizer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_pinchGestureRecognizer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_immediateLongPressRecognizer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_directionalDebugEntity] = 0;
  v2 = &v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_coachingText];
  *v2 = 0;
  v2[1] = 0;
  v3 = &v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_onboardingText];
  *v3 = 0;
  v3[1] = 0;
  v4 = &v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_cameraTransform];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((_OWORD *)v4 + 2) = 0u;
  *((_OWORD *)v4 + 3) = 0u;
  v4[64] = 1;
  v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_currentInstruction] = 6;
  v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_currentInitializationState] = 5;
  v5 = &v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_sceneObserver];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_QWORD *)v5 + 4) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_ambientLight] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_directionalLight] = 0;
  v6 = OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_lightingAnchor;
  sub_22655C20C();
  *(_QWORD *)&v0[v6] = MEMORY[0x2276988D4]((__n128)0);

  sub_22655D3E8();
  __break(1u);
}

uint64_t sub_22651367C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2265136C4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CapturedRoom(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_226513700()
{
  unint64_t result;

  result = qword_255849188;
  if (!qword_255849188)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255849188);
  }
  return result;
}

void sub_22651373C(uint64_t a1)
{
  uint64_t v1;

  sub_226512F38(a1, v1);
}

uint64_t sub_226513744()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_226513768()
{
  uint64_t v0;

  sub_226512E34(*(char **)(v0 + 16));
}

id sub_226513774()
{
  uint64_t v0;

  return sub_22651297C(*(char **)(v0 + 16));
}

uint64_t sub_22651377C(uint64_t a1)
{
  uint64_t v1;

  return sub_226512A94(a1, *(_QWORD *)(v1 + 16));
}

uint64_t objectdestroy_15Tm()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

unint64_t sub_226513804(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849B90);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255849B98);
  v6 = sub_22655D430();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_22643D7A0(v12, (uint64_t)v5, &qword_255849B90);
    result = sub_226534858((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_22655C140();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_226513998(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255849BC8);
  v2 = sub_22655D430();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_22643D7A0(v6, (uint64_t)&v13, &qword_255849BD0);
    v7 = v13;
    result = sub_226534DC0(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_226455C88(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_226513AC4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255849BB8);
  v2 = sub_22655D430();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_22643D7A0(v6, (uint64_t)&v15, &qword_255849BC0);
    v7 = v15;
    v8 = v16;
    result = sub_2265348F0(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_226455C88(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_226513BF8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255849BB0);
  v2 = (_QWORD *)sub_22655D430();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_2265348F0(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_226513D08(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255849B10);
  v2 = sub_22655D430();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_22643D7A0(v6, (uint64_t)&v15, &qword_255849B18);
    v7 = v15;
    v8 = v16;
    result = sub_2265348F0(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = sub_226438644(&v17, v3[7] + 40 * result);
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_226513E48(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255849B08);
  v2 = (_QWORD *)sub_22655D430();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_2265348F0(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_226513F60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849C30);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255849C38);
  v6 = sub_22655D430();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_22643D7A0(v12, (uint64_t)v5, &qword_255849C30);
    result = sub_226534858((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_22655C140();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2265140F4(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t result;
  char v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v30 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v12 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v11 = sub_22655D430();
  v12 = (_QWORD *)v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  v14 = (uint64_t)&v10[*(int *)(v7 + 48)];
  v15 = v11 + 64;
  v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v29 = a1;
  v17 = a1 + v16;
  v18 = *(_QWORD *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_22643D7A0(v17, (uint64_t)v10, v30);
    result = sub_226534858((uint64_t)v10);
    if ((v20 & 1) != 0)
      break;
    v21 = result;
    *(_QWORD *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v22 = v12[6];
    v23 = sub_22655C140();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22 + *(_QWORD *)(*(_QWORD *)(v23 - 8) + 72) * v21, v10, v23);
    v24 = v12[7];
    v25 = a4(0);
    result = sub_22643F6AC(v14, v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v21, a4);
    v26 = v12[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_11;
    v12[2] = v28;
    v17 += v18;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2265142A0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255849A98);
  v2 = sub_22655D430();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_22643D7A0(v6, (uint64_t)&v13, (uint64_t *)&unk_255849AA0);
    v7 = v13;
    result = sub_226534EC4(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_226455C88(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_2265143CC(uint64_t a1, __n128 a2)
{
  uint64_t result;
  uint64_t v4;
  __n128 *v5;

  if (a1 < 0)
  {
    result = sub_22655D3DC();
    __break(1u);
  }
  else if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255849BA0);
    result = sub_22655CEFC();
    v4 = 0;
    *(_QWORD *)(result + 16) = a1;
    do
    {
      v5 = (__n128 *)(result + 16 * v4++);
      v5[2] = a2;
    }
    while (a1 != v4);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_226514488(unsigned int a1, unint64_t a2)
{
  uint64_t result;
  unsigned int *v5;
  unint64_t v6;
  int32x4_t v7;
  int32x4_t *v8;
  unint64_t v9;
  unint64_t v10;

  if ((a2 & 0x8000000000000000) != 0)
  {
    result = sub_22655D3DC();
    __break(1u);
    return result;
  }
  if (!a2)
    return MEMORY[0x24BEE4AF8];
  result = sub_22655CEFC();
  *(_QWORD *)(result + 16) = a2;
  v5 = (unsigned int *)(result + 32);
  if (a2 < 8)
  {
    v6 = 0;
LABEL_9:
    v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  v6 = a2 & 0xFFFFFFFFFFFFFFF8;
  v5 += a2 & 0xFFFFFFFFFFFFFFF8;
  v7 = vdupq_n_s32(a1);
  v8 = (int32x4_t *)(result + 48);
  v9 = a2 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    v8[-1] = v7;
    *v8 = v7;
    v8 += 2;
    v9 -= 8;
  }
  while (v9);
  if (v6 != a2)
    goto LABEL_9;
  return result;
}

uint64_t sub_226514570(char a1, size_t a2)
{
  uint64_t v4;
  uint64_t result;

  if ((a2 & 0x8000000000000000) != 0)
  {
    result = sub_22655D3DC();
    __break(1u);
  }
  else
  {
    if (!a2)
      return MEMORY[0x24BEE4AF8];
    v4 = sub_22655CEFC();
    *(_QWORD *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), a1 & 1, a2);
    return v4;
  }
  return result;
}

void static RoomCaptureSession.isSupported.getter()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)sub_22655CD64();
  v1 = MGCopyAnswer();

  if (v1)
  {
    swift_unknownObjectRetain();
    swift_dynamicCast();
  }
  else
  {
    __break(1u);
  }
}

BOOL static RoomCaptureSession.CaptureError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

id sub_2265146F0(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for ARRoomCaptureConfiguration();
  return objc_msgSendSuper2(&v5, *a3);
}

id sub_22651472C()
{
  return sub_22646DF78(type metadata accessor for ARRoomCaptureConfiguration);
}

uint64_t RoomCaptureSession.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  RoomCaptureSession.init()();
  return v0;
}

uint64_t RoomCaptureSession.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  id v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _OWORD *v23;
  _QWORD v25[5];
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = sub_22655D064();
  v28 = *(_QWORD *)(v2 - 8);
  v29 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v27 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_22655D04C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v4);
  v6 = sub_22655CBFC();
  MEMORY[0x24BDAC7A8](v6);
  *(_BYTE *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 32) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v1 + 48) = 0;
  swift_unknownObjectWeakInit();
  *(_WORD *)(v1 + 64) = 1;
  v7 = v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_recordFileUrl;
  v8 = sub_22655C05C();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v9(v7, 1, 1, v8);
  v9(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_replayFileUrl, 1, 1, v8);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_spiReplayDelegate + 8) = 0;
  swift_unknownObjectWeakInit();
  v10 = (_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_loggingDirectory);
  *v10 = 0;
  v10[1] = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_debugDelegate + 8) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate + 8) = 0;
  swift_unknownObjectWeakInit();
  sub_22655CB78();
  *(_BYTE *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_enableLiveDump) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession____lazy_storage___iuLogManager) = 0;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runActive) = 0;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runAllowed) = 1;
  v11 = v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration;
  *(_QWORD *)v11 = 0x100010101010101;
  *(_BYTE *)(v11 + 8) = 1;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arWorldTrackingConfiguration) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arRunOption) = 8;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arRecordingConfig) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_currentArConfiguration) = 0;
  v12 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_keyframes;
  v13 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1 + v12) = sub_226513F60(MEMORY[0x24BEE4AF8]);
  v14 = (uint64_t *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_floorPlanModel);
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE80978]), sel_init);
  v16 = (int *)type metadata accessor for CapturedRoom(0);
  v17 = v16[12];
  *(uint64_t *)((char *)v14 + v17) = 0;
  *(uint64_t *)((char *)v14 + v16[13]) = 2;
  *v14 = v13;
  v14[1] = v13;
  v14[2] = v13;
  v14[3] = v13;
  v14[4] = v13;
  v14[5] = v13;
  *(uint64_t *)((char *)v14 + v16[14]) = v13;
  *(uint64_t *)((char *)v14 + v16[15]) = (uint64_t)v15;
  sub_22655C134();
  *(uint64_t *)((char *)v14 + v16[11]) = v13;
  *(uint64_t *)((char *)v14 + v17) = 0;
  v18 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_allUuidToSurfaces;
  *(_QWORD *)(v1 + v18) = sub_2265140F4(v13, (uint64_t *)&unk_255849C20, (uint64_t *)&unk_25584A860, type metadata accessor for CapturedRoom.Surface);
  v19 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_allUuidToObjects;
  *(_QWORD *)(v1 + v19) = sub_2265140F4(v13, (uint64_t *)&unk_255849C10, (uint64_t *)&unk_25584A850, type metadata accessor for CapturedRoom.Object);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_floorPlanGenerator) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_okObjDet) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_detectedObjects) = v13;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_objectDetectionEnabled) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_potentiallWalls) = v13;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_addedPotentialWalls) = v13;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_removedPotentialWalls) = v13;
  v26 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_queue;
  v25[4] = sub_22643F548(0, (unint64_t *)&qword_2558442A0);
  sub_22655CBE4();
  v30 = v13;
  v25[2] = sub_226437F28((unint64_t *)&qword_2558491E0, v5, MEMORY[0x24BEE5698]);
  v25[1] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558442B0);
  v25[3] = sub_2264ABAD4((unint64_t *)&qword_2558491F0, (uint64_t *)&unk_2558442B0);
  sub_22655D214();
  v20 = *MEMORY[0x24BEE5750];
  v21 = v27;
  v28 = *(_QWORD *)(v28 + 104);
  v22 = v29;
  ((void (*)(char *, uint64_t, uint64_t))v28)(v27, v20, v29);
  *(_QWORD *)(v1 + v26) = sub_22655D088();
  v26 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_saveFileQueue;
  sub_22655CBF0();
  v30 = v13;
  sub_22655D214();
  ((void (*)(char *, uint64_t, uint64_t))v28)(v21, v20, v22);
  *(_QWORD *)(v1 + v26) = sub_22655D088();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arSessionObserver) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_rsSessionDelegate) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_okSessionDelegate) = 0;
  v23 = (_OWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arFrameReferenceOriginTransform);
  *v23 = xmmword_226560080;
  v23[1] = xmmword_2265600C0;
  v23[2] = xmmword_2265600D0;
  v23[3] = xmmword_22655FA60;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_trackingFailureReportCount) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_trackingFailureReportThreshold) = 600;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error) = 0;
  *(_QWORD *)(v1 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB1558]), sel_init);
  sub_226514DCC(1);
  return v1;
}

uint64_t RoomCaptureSession.__allocating_init(arSession:)(void *a1)
{
  uint64_t v2;

  swift_allocObject();
  v2 = sub_226525E3C(a1);

  return v2;
}

uint64_t RoomCaptureSession.init(arSession:)(void *a1)
{
  uint64_t v2;

  v2 = sub_226525E3C(a1);

  return v2;
}

void sub_226514DCC(char a1)
{
  id *v1;
  id *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char **v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  void *ObjCClassFromMetadata;
  id v32;
  unint64_t v33;
  id *v34;
  id v35;
  uint64_t v36;
  id v37;
  void *v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  id v55;
  id v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint8_t *v60;
  id v61;
  uint64_t v62;
  void *v63;
  id v64;
  uint64_t v65;
  void *v66;
  id v67;
  uint64_t v68;
  void *v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  id *v73;
  char *v74;
  uint64_t v75;
  id *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  unint64_t v83;
  uint64_t v84;
  _QWORD aBlock[6];
  char v86;

  v2 = v1;
  v4 = sub_22655CBB4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22655CBFC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_22655CB84();
  v80 = *(_QWORD *)(v12 - 8);
  v81 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v82 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (void *)sub_22655CD64();
  v15 = MGCopyAnswer();

  if (!v15)
  {
    __break(1u);
    goto LABEL_65;
  }
  swift_unknownObjectRetain();
  aBlock[0] = v15;
  if ((swift_dynamicCast() & 1) == 0 || v86 != 1)
    return;
  v16 = &selRef_session_didUpdateTextCoaching_;
  v79 = v7;
  if ((a1 & 1) == 0)
  {
    swift_beginAccess();
    v17 = objc_msgSend(v2[7], sel_configuration);
    if (v17)
    {
      v18 = v17;
      objc_opt_self();
      v19 = swift_dynamicCastObjCClass();
      if (v19)
      {
        v20 = *(id *)((char *)v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arWorldTrackingConfiguration);
        *(id *)((char *)v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arWorldTrackingConfiguration) = (id)v19;
        goto LABEL_12;
      }

    }
  }
  v21 = v4;
  v22 = v11;
  v23 = v9;
  v24 = v5;
  v25 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ARRoomCaptureConfiguration()), sel_init);
  v26 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arWorldTrackingConfiguration;
  v27 = *(id *)((char *)v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arWorldTrackingConfiguration);
  *(id *)((char *)v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arWorldTrackingConfiguration) = v25;

  v28 = *(id *)((char *)v2 + v26);
  if (!v28)
    goto LABEL_69;
  objc_msgSend(v28, sel_setLightEstimationEnabled_, 0);
  v29 = *(id *)((char *)v2 + v26);
  if (v29)
  {
    v30 = v29;
    v20 = (void *)sub_22655CD64();
    objc_msgSend(v30, sel_setSlamConfiguration_, v20);

    v5 = v24;
    v9 = v23;
    v11 = v22;
    v4 = v21;
    v7 = v79;
LABEL_12:
    v78 = v5;

    if (qword_25583F9D0 != -1)
LABEL_58:
      swift_once();
    sub_226552DE4((BOOL *)aBlock);
    v77 = v8;
    if (LOBYTE(aBlock[0]) != 1)
      goto LABEL_47;
    type metadata accessor for ARRoomCaptureConfiguration();
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    v32 = objc_msgSend(ObjCClassFromMetadata, sel_supportedVideoFormats);
    sub_22643F548(0, (unint64_t *)&unk_255849C00);
    v33 = sub_22655CECC();

    if (v33 >> 62)
    {
      swift_bridgeObjectRetain();
      v71 = sub_22655D400();
      swift_bridgeObjectRelease();
      if (!v71)
        goto LABEL_42;
    }
    else if (!*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_42;
    }
    if ((v33 & 0xC000000000000001) != 0)
    {
      v34 = (id *)MEMORY[0x2276999E4](0, v33);
    }
    else
    {
      if (!*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_63;
      }
      v34 = (id *)*(id *)(v33 + 32);
    }
    v76 = v34;
    swift_bridgeObjectRelease();
    v35 = objc_msgSend(ObjCClassFromMetadata, sel_supportedVideoFormats);
    v33 = sub_22655CECC();

    v73 = v2;
    v72 = v4;
    if (!(v33 >> 62))
    {
      v8 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_21:
      v2 = v76;
      if (v8)
      {
        v83 = v33 & 0xC000000000000001;
        v36 = 4;
        v75 = v9;
        v74 = v11;
        do
        {
          v16 = (char **)(v36 - 4);
          if (v83)
            v37 = (id)MEMORY[0x2276999E4](v36 - 4, v33);
          else
            v37 = *(id *)(v33 + 8 * v36);
          v38 = v37;
          v7 = (char *)(v36 - 3);
          if (__OFADD__(v16, 1))
          {
            __break(1u);
            goto LABEL_58;
          }
          if (objc_msgSend(v37, sel_framesPerSecond) == (id)30)
          {
            objc_msgSend(v38, sel_imageResolution);
            v40 = v39;
            v42 = v41;
            objc_msgSend(v2, sel_imageResolution);
            if (v40 == v44 && v42 == v43)
            {
              v4 = (uint64_t)&selRef_session_didUpdateTextCoaching_;
              v46 = objc_msgSend(v38, sel_captureDevicePosition);
              if (v46 == objc_msgSend(v2, sel_captureDevicePosition))
              {
                v47 = objc_msgSend(v38, sel_captureDeviceType);
                v48 = objc_msgSend(v2, sel_captureDeviceType);
                v49 = sub_22655CD88();
                v51 = v50;
                if (v49 == sub_22655CD88() && v51 == v52)
                {

                  swift_bridgeObjectRelease_n();
                  v9 = v75;
                  v11 = v74;
                  v2 = v76;
LABEL_39:

                  swift_bridgeObjectRelease();
                  v2 = v73;
                  v53 = *(id *)((char *)v73 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arWorldTrackingConfiguration);
                  if (!v53)
                    goto LABEL_71;
                  objc_msgSend(v53, sel_setVideoFormat_, v38);

                  v4 = v72;
                  v7 = v79;
                  v16 = &selRef_session_didUpdateTextCoaching_;
LABEL_47:
                  v61 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ARInternalSessionObserverWrapper()), v16[3]);
                  v62 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arSessionObserver;
                  v63 = *(id *)((char *)v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arSessionObserver);
                  *(id *)((char *)v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arSessionObserver) = v61;

                  v64 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RSSessionDelegateWrapper()), v16[3]);
                  v65 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_rsSessionDelegate;
                  v66 = *(id *)((char *)v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_rsSessionDelegate);
                  *(id *)((char *)v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_rsSessionDelegate) = v64;

                  v67 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for OUSessionDelegateWrapper()), v16[3]);
                  v68 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_okSessionDelegate;
                  v69 = *(id *)((char *)v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_okSessionDelegate);
                  *(id *)((char *)v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_okSessionDelegate) = v67;

                  if (*(id *)((char *)v2 + v62))
                  {
                    swift_weakAssign();
                    if (*(id *)((char *)v2 + v65))
                    {
                      swift_weakAssign();
                      if (*(id *)((char *)v2 + v68))
                      {
                        swift_weakAssign();
                        swift_beginAccess();
                        if (*(id *)((char *)v2 + v62))
                        {
                          objc_msgSend(v2[7], sel__addObserver_);
                          aBlock[4] = sub_22652A348;
                          aBlock[5] = v2;
                          aBlock[0] = MEMORY[0x24BDAC760];
                          aBlock[1] = 1107296256;
                          aBlock[2] = sub_2264FA450;
                          aBlock[3] = &block_descriptor_133;
                          v70 = _Block_copy(aBlock);
                          swift_retain();
                          sub_22655CBCC();
                          v84 = MEMORY[0x24BEE4AF8];
                          sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
                          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
                          sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
                          sub_22655D214();
                          MEMORY[0x22769975C](0, v11, v7, v70);
                          _Block_release(v70);
                          (*(void (**)(char *, uint64_t))(v78 + 8))(v7, v4);
                          (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v77);
                          swift_release();
                          if (qword_25583F950 != -1)
                            swift_once();
                          *(_QWORD *)(qword_25585AFD0 + 24) = &off_24EDE6F18;
                          swift_unknownObjectWeakAssign();
                          if (qword_25583F8C0 != -1)
                            swift_once();
                          *(_QWORD *)(qword_25585AE48 + 24) = &off_24EDE6F28;
                          swift_unknownObjectWeakAssign();
                          return;
                        }
LABEL_68:
                        __break(1u);
LABEL_69:
                        __break(1u);
                        goto LABEL_70;
                      }
LABEL_67:
                      __break(1u);
                      goto LABEL_68;
                    }
LABEL_66:
                    __break(1u);
                    goto LABEL_67;
                  }
LABEL_65:
                  __break(1u);
                  goto LABEL_66;
                }
                v4 = sub_22655D55C();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v9 = v75;
                v11 = v74;
                v2 = v76;
                if ((v4 & 1) != 0)
                  goto LABEL_39;
              }
            }
          }

          ++v36;
        }
        while (v7 != (char *)v8);
      }

      v2 = v73;
      v4 = v72;
      v7 = v79;
LABEL_42:
      swift_bridgeObjectRelease();
      type metadata accessor for Constants();
      v54 = swift_getObjCClassFromMetadata();
      v55 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v54);
      v56 = objc_msgSend(v55, sel_bundleIdentifier);

      v16 = &selRef_session_didUpdateTextCoaching_;
      if (v56)
      {
        sub_22655CD88();

      }
      sub_22643F548(0, (unint64_t *)&qword_255843DE0);
      sub_22655D124();
      sub_22655CB90();
      v57 = sub_22655CB6C();
      v58 = sub_22655CFF8();
      if (os_log_type_enabled(v57, v58))
      {
        v59 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v59 = 0;
        _os_log_impl(&dword_226423000, v57, v58, "Cannot set framerate to 30 fps", v59, 2u);
        v60 = v59;
        v16 = &selRef_session_didUpdateTextCoaching_;
        MEMORY[0x22769A884](v60, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v80 + 8))(v82, v81);
      goto LABEL_47;
    }
LABEL_63:
    swift_bridgeObjectRetain();
    v8 = sub_22655D400();
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
}

id sub_226515848(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id result;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE80970]), sel_init);
  v3 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_floorPlanGenerator;
  v4 = *(void **)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_floorPlanGenerator);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_floorPlanGenerator) = v2;

  v5 = *(void **)(a1 + v3);
  if (v5)
    objc_msgSend(v5, sel_setDelegate_, *(_QWORD *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_rsSessionDelegate));
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE6E068]), sel_init_, 1);
  v7 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_okObjDet;
  v8 = *(void **)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_okObjDet);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_okObjDet) = v6;

  result = *(id *)(a1 + v7);
  if (result)
    return objc_msgSend(result, sel_setDelegate_, *(_QWORD *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_okSessionDelegate));
  return result;
}

void sub_226515910(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  int v13;
  int v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v2 = sub_22655CBB4();
  v28 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22655CBFC();
  v26 = *(_QWORD *)(v5 - 8);
  v27 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v9 = a1[1];
  v10 = a1[2];
  v11 = a1[3];
  v12 = a1[4];
  v13 = a1[5];
  v23 = a1[6];
  v24 = v13;
  v14 = a1[7];
  v21 = a1[8];
  v22 = v14;
  v15 = (void *)sub_22655CD64();
  v16 = MGCopyAnswer();

  if (v16)
  {
    swift_unknownObjectRetain();
    aBlock[0] = v16;
    if ((swift_dynamicCast() & 1) != 0 && v29 == 1)
    {
      v17 = v25;
      v20 = *(_QWORD *)(v25 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_queue);
      v18 = swift_allocObject();
      *(_QWORD *)(v18 + 16) = v17;
      *(_BYTE *)(v18 + 24) = v8;
      *(_BYTE *)(v18 + 25) = v9;
      *(_BYTE *)(v18 + 26) = v10;
      *(_BYTE *)(v18 + 27) = v11;
      *(_BYTE *)(v18 + 28) = v12;
      *(_BYTE *)(v18 + 29) = v24;
      *(_BYTE *)(v18 + 30) = v23;
      *(_BYTE *)(v18 + 31) = v22;
      *(_BYTE *)(v18 + 32) = v21;
      aBlock[4] = sub_226526474;
      aBlock[5] = v18;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_2264FA450;
      aBlock[3] = &block_descriptor_8;
      v19 = _Block_copy(aBlock);
      swift_retain();
      sub_22655CBCC();
      v29 = MEMORY[0x24BEE4AF8];
      sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
      sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
      sub_22655D214();
      MEMORY[0x22769975C](0, v7, v4, v19);
      _Block_release(v19);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v4, v2);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v27);
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_226515BE0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  unint64_t v27;
  unint64_t *v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  double v35;
  id v36;
  uint64_t v37;
  id v38;
  int v39;
  id *v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  void *v45;
  uint64_t v46;
  void *v47;
  id v48;
  void *v49;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  id v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  _BYTE *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  int v71;
  id v72;
  void *v73;
  id v74;
  void *v75;
  void *v76;
  void *v77;
  id v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t *v84;
  unint64_t v85;
  unint64_t *v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t ObjectType;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  id v95;
  void *v96;
  id v97;
  uint64_t v98;
  void *v99;
  void *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  id v104;
  id v105;
  uint64_t v106;
  unsigned int v107;
  char *v108;
  id v109;
  id v110;
  uint64_t (*v111)(char *, uint64_t, uint64_t);
  _BYTE *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  _QWORD v123[16];

  v6 = sub_22655CBB4();
  v122 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v121 = (char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22655CBFC();
  v119 = *(_QWORD *)(v8 - 8);
  v120 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v118 = (char *)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849210);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v106 - v14;
  v16 = sub_22655C05C();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v106 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v106 - v22;
  v24 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arRecordingConfig;
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arRecordingConfig)
    || *(_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runAllowed) != 1
    || !*(_QWORD *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_floorPlanGenerator)
    || !*(_QWORD *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_okObjDet))
  {
    return;
  }
  v108 = (char *)OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_okObjDet;
  v115 = v21;
  v116 = v20;
  v113 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runAllowed;
  v106 = v6;
  v25 = a2 & 1;
  v117 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_floorPlanGenerator;
  v26 = (_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration);
  *(_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration) = a2 & 1;
  LODWORD(v114) = (a2 & 0x1000000000000) != 0;
  v107 = (a2 >> 8) & 1;
  v26[1] = v107;
  v26[2] = (a2 & 0x10000) >> 16;
  LODWORD(v112) = (a2 & 0x10000000000) != 0;
  v26[3] = BYTE3(a2) & 1;
  v26[4] = (a2 & 0x100000000uLL) >> 32;
  LODWORD(v110) = (a2 & 0x100000000) != 0;
  LODWORD(v109) = (a2 & 0x10000) != 0;
  v26[5] = (unsigned __int16)((a2 & 0x10000000000uLL) >> 32) >> 8;
  v26[6] = BYTE6(a2) & 1;
  v26[7] = HIBYTE(a2) & 1;
  LODWORD(v111) = a3 & 1;
  v26[8] = a3 & 1;
  v27 = sub_226513F60(MEMORY[0x24BEE4AF8]);
  v28 = (unint64_t *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_keyframes);
  swift_beginAccess();
  *v28 = v27;
  swift_bridgeObjectRelease();
  v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE80968]), sel_init);
  objc_msgSend(v29, sel_setWindowDoorDetectionEnabled_, v109);
  objc_msgSend(v29, sel_setLiveResultEnabled_, v110);
  objc_msgSend(v29, sel_setTextCoachingEnabled_, v25);
  objc_msgSend(v29, sel_setOnboardingEnabled_, v25);
  objc_msgSend(v29, sel_setNonUniformHeightEnabled_, v111);
  objc_msgSend(v29, sel_setBoundaryRefinementEnabled_, v112);
  objc_msgSend(v29, sel_setBayWindowRecessedAreaEnabled_, v114);
  v30 = *(id *)(a1 + v117);
  if (!v30)
  {
    __break(1u);
    goto LABEL_68;
  }
  v110 = v29;
  v30 = objc_msgSend(v30, sel_runWithConfiguration_, v29);
  v31 = *(void **)&v108[a1];
  if (!v31)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  swift_beginAccess();
  v32 = *(unsigned __int8 *)(a1 + 64);
  v33 = objc_allocWithZone(MEMORY[0x24BE6E050]);
  v34 = v31;
  LODWORD(v35) = 2.0;
  v36 = objc_msgSend(v33, sel_initWithframerate_enable3DOR_rgbRefinemnt_mlRefinement_, 1, v32, 0, v35);
  objc_msgSend(v34, sel_runWithConfiguration_, v36);

  *(_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_objectDetectionEnabled) = v107;
  v37 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arWorldTrackingConfiguration;
  v30 = *(id *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arWorldTrackingConfiguration);
  if (!v30)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  v38 = objc_msgSend(v30, sel_frameSemantics);
  v112 = (_BYTE *)(a1 + 65);
  swift_beginAccess();
  v39 = *(unsigned __int8 *)(a1 + 65);
  v40 = (id *)(a1 + 56);
  v114 = v37;
  v111 = (uint64_t (*)(char *, uint64_t, uint64_t))(a1 + 56);
  if (v39 != 1)
  {
    v109 = v38;
    swift_beginAccess();
    v48 = objc_msgSend(*v40, sel_configuration);
    if (v48)
    {
      v49 = v48;
      objc_opt_self();
      v50 = swift_dynamicCastObjCClass();
      if (v50)
      {
        v51 = (void *)v50;
        v42 = *(id *)(a1 + v37);
LABEL_19:
        *(_QWORD *)(a1 + v37) = v51;
LABEL_23:
        v38 = v109;
        goto LABEL_24;
      }

    }
    v51 = *(void **)(a1 + v37);
    v42 = v51;
    goto LABEL_19;
  }
  swift_beginAccess();
  v41 = objc_msgSend(*v40, sel_configuration);
  if (!v41)
    goto LABEL_25;
  v42 = v41;
  objc_opt_self();
  v43 = (void *)swift_dynamicCastObjCClass();
  if (v43)
  {
    v109 = v38;
    v44 = objc_msgSend(v43, sel_templateConfiguration);
    if (v44)
    {
      v45 = v44;
      objc_opt_self();
      v46 = swift_dynamicCastObjCClass();
      if (v46)
      {
        v47 = (void *)v46;
        v37 = v114;
        v108 = *(char **)(a1 + v114);
LABEL_22:
        *(_QWORD *)(a1 + v37) = v47;

        v42 = v108;
        goto LABEL_23;
      }

    }
    v37 = v114;
    v47 = *(void **)(a1 + v114);
    v108 = v47;
    goto LABEL_22;
  }
LABEL_24:

LABEL_25:
  v30 = *(id *)(a1 + v37);
  if (!v30)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  v30 = objc_msgSend(v30, sel_setFrameSemantics_, v38);
  v52 = *(void **)(a1 + v37);
  if (!v52)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  v53 = *MEMORY[0x24BDB1438];
  v54 = v52;
  v55 = (unint64_t)objc_msgSend(v54, sel_sceneReconstruction);
  if ((v53 & ~v55) != 0)
    v56 = v53;
  else
    v56 = 0;
  objc_msgSend(v54, sel_setSceneReconstruction_, v56 | v55, v106);

  swift_beginAccess();
  objc_msgSend(*(id *)(a1 + 56), sel_setForceAddSceneReconstructionKeyframePointCloudWithColor_, 1);
  v57 = a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_replayFileUrl;
  swift_beginAccess();
  sub_22643D7A0(v57, (uint64_t)v15, &qword_255849210);
  v58 = v115;
  v59 = v116;
  v111 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v115 + 48);
  if (v111(v15, 1, v116) == 1)
  {
    sub_22643D7E4((uint64_t)v15, &qword_255849210);
    v60 = v112;
LABEL_41:
    v67 = v113;
    v68 = v114;
    if (*v60 == 1)
    {
      v69 = *(void **)(a1 + v114);
      if (!v69)
      {
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
        return;
      }
      sub_22643D7A0(v57, (uint64_t)v12, &qword_255849210);
      v70 = v116;
      v71 = v111(v12, 1, v116);
      v72 = v69;
      if (v71 == 1)
      {
        v73 = 0;
      }
      else
      {
        v73 = (void *)sub_22655BFE4();
        (*(void (**)(char *, uint64_t))(v115 + 8))(v12, v70);
      }
      v74 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB1530]), sel_initWithBaseConfiguration_fileURL_, v72, v73);

      v75 = *(void **)(a1 + v24);
      *(_QWORD *)(a1 + v24) = v74;

      v76 = *(void **)(a1 + v24);
      if (!v76)
        goto LABEL_75;
      objc_msgSend(v76, sel_startRecording);
      v77 = *(void **)(a1 + v24);
      if (v77)
      {
        *(_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runActive) = 1;
        *(_BYTE *)(a1 + v113) = 0;
        v104 = v77;
        goto LABEL_53;
      }
      v67 = v113;
    }
    *(_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runActive) = 1;
    *(_BYTE *)(a1 + v67) = 0;
    goto LABEL_52;
  }
  (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v23, v15, v59);
  v60 = v112;
  if (*v112 != 2)
  {
    (*(void (**)(char *, uint64_t))(v58 + 8))(v23, v59);
    goto LABEL_41;
  }
  if (qword_25583F9D0 != -1)
    swift_once();
  v61 = (char *)off_25584AF28 + 32;
  swift_beginAccess();
  v62 = *(void **)(a1 + v114);
  if (!v62)
    goto LABEL_76;
  if (*v61)
    v63 = 2;
  else
    v63 = 0;
  v65 = v115;
  v64 = v116;
  (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v18, v23, v116);
  objc_allocWithZone(MEMORY[0x24BDB1548]);
  v66 = v62;
  v104 = sub_226528A38((uint64_t)v66, (uint64_t)v18, v63);

  objc_msgSend(v104, sel_setDelegate_, *(_QWORD *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arSessionObserver));
  (*(void (**)(char *, uint64_t))(v65 + 8))(v23, v64);
  *(_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runActive) = 1;
  v68 = v114;
  *(_BYTE *)(a1 + v113) = 0;
  v77 = v104;
  if (!v104)
  {
LABEL_52:
    v77 = *(void **)(a1 + v68);
    v78 = v77;
    v104 = 0;
  }
LABEL_53:
  v79 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_currentArConfiguration;
  v80 = *(void **)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_currentArConfiguration);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_currentArConfiguration) = v77;
  v23 = (char *)v104;

  v30 = *(id *)(a1 + 56);
  v81 = *(_QWORD *)(a1 + v79);
  if (!v81)
  {
LABEL_72:
    v105 = v30;

    __break(1u);
LABEL_73:

    __break(1u);
    goto LABEL_74;
  }
  objc_msgSend(v30, sel_runWithConfiguration_options_, v81, 8);
  sub_226518980();
  v82 = MEMORY[0x24BEE4AF8];
  v83 = sub_2265140F4(MEMORY[0x24BEE4AF8], (uint64_t *)&unk_255849C20, (uint64_t *)&unk_25584A860, type metadata accessor for CapturedRoom.Surface);
  v84 = (unint64_t *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_allUuidToSurfaces);
  swift_beginAccess();
  *v84 = v83;
  swift_bridgeObjectRelease();
  v85 = sub_2265140F4(v82, (uint64_t *)&unk_255849C10, (uint64_t *)&unk_25584A850, type metadata accessor for CapturedRoom.Object);
  v86 = (unint64_t *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_allUuidToObjects);
  swift_beginAccess();
  *v86 = v85;
  swift_bridgeObjectRelease();
  v87 = (uint64_t *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_loggingDirectory);
  swift_beginAccess();
  *v87 = 0;
  v87[1] = 0;
  swift_bridgeObjectRelease();
  v88 = a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_debugDelegate;
  swift_beginAccess();
  if (MEMORY[0x22769A944](v88))
  {
    v89 = *(_QWORD *)(v88 + 8);
    ObjectType = swift_getObjectType();
    v91 = (*(uint64_t (**)(uint64_t, uint64_t))(v89 + 8))(ObjectType, v89);
    v93 = v92;
    swift_unknownObjectRelease();
  }
  else
  {
    v91 = 0;
    v93 = 0;
  }
  *v87 = v91;
  v87[1] = v93;
  swift_bridgeObjectRelease();
  sub_22651902C();
  v94 = *(void **)(a1 + v117);
  if (!v94)
    goto LABEL_73;
  if (v87[1])
  {
    v95 = v94;
    swift_bridgeObjectRetain();
    v96 = (void *)sub_22655CD64();
    swift_bridgeObjectRelease();
  }
  else
  {
    v97 = v94;
    v96 = 0;
  }
  v98 = v122;
  objc_msgSend(v94, sel_setUpInternalDumpWithLogDir_enable_, v96, *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_enableLiveDump));

  if (qword_25583F910 != -1)
    swift_once();
  sub_2264A2A88();
  sub_22643F548(0, (unint64_t *)&qword_2558442A0);
  v99 = (void *)sub_22655D070();
  v123[4] = sub_22652A340;
  v123[5] = a1;
  v123[0] = MEMORY[0x24BDAC760];
  v123[1] = 1107296256;
  v123[2] = sub_2264FA450;
  v123[3] = &block_descriptor_130;
  v100 = _Block_copy(v123);
  swift_retain();
  swift_release();
  v101 = v118;
  sub_22655CBCC();
  v123[0] = v82;
  sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
  sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
  v102 = v121;
  v103 = v106;
  sub_22655D214();
  MEMORY[0x22769975C](0, v101, v102, v100);
  _Block_release(v100);

  (*(void (**)(char *, uint64_t))(v98 + 8))(v102, v103);
  (*(void (**)(char *, uint64_t))(v119 + 8))(v101, v120);
}

uint64_t sub_226516984(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  _BYTE v25[9];
  _BYTE v26[24];

  if (MEMORY[0x22769A944](a1 + 40))
  {
    swift_beginAccess();
    v2 = *(id *)(a1 + 56);
    sub_22650162C(v2);

    swift_unknownObjectRelease();
  }
  v3 = a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate;
  if (MEMORY[0x22769A944](a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate))
  {
    v4 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType();
    v6 = *(_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration + 1);
    v7 = *(_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration + 2);
    v8 = *(_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration + 3);
    v9 = *(_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration + 4);
    v10 = *(_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration + 5);
    v11 = *(_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration + 6);
    v12 = *(_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration + 7);
    v13 = *(_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration + 8);
    v26[0] = *(_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration);
    v26[1] = v6;
    v26[2] = v7;
    v26[3] = v8;
    v26[4] = v9;
    v26[5] = v10;
    v26[6] = v11;
    v26[7] = v12;
    v26[8] = v13;
    (*(void (**)(uint64_t, _BYTE *, uint64_t, uint64_t))(v4 + 48))(a1, v26, ObjectType, v4);
    swift_unknownObjectRelease();
  }
  swift_beginAccess();
  result = MEMORY[0x22769A944](a1 + 24);
  if (result)
  {
    v15 = *(_QWORD *)(a1 + 32);
    v16 = swift_getObjectType();
    v17 = *(_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration + 1);
    v18 = *(_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration + 2);
    v19 = *(_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration + 3);
    v20 = *(_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration + 4);
    v21 = *(_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration + 5);
    v22 = *(_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration + 6);
    v23 = *(_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration + 7);
    v24 = *(_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration + 8);
    v25[0] = *(_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration);
    v25[1] = v17;
    v25[2] = v18;
    v25[3] = v19;
    v25[4] = v20;
    v25[5] = v21;
    v25[6] = v22;
    v25[7] = v23;
    v25[8] = v24;
    (*(void (**)(uint64_t, _BYTE *, uint64_t, uint64_t))(v15 + 48))(a1, v25, v16, v15);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_226516B28()
{
  sub_226516B30(1);
}

void sub_226516B30(int a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  id *v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  unint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];
  char v24;

  v3 = sub_22655CBB4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22655CBFC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (void *)sub_22655CD64();
  v12 = MGCopyAnswer();

  if (v12)
  {
    swift_unknownObjectRetain();
    aBlock[0] = v12;
    if ((swift_dynamicCast() & 1) != 0 && v24 == 1)
    {
      v13 = (id *)(v1 + 56);
      swift_beginAccess();
      v14 = objc_msgSend(*(id *)(v1 + 56), sel_configuration);
      if (v14)
      {
        v15 = v14;
        LODWORD(v21) = a1;
        objc_opt_self();
        v16 = swift_dynamicCastObjCClass();
        if (v16)
        {
          v17 = (void *)v16;
          objc_msgSend(*v13, sel_setForceAddSceneReconstructionKeyframePointCloudWithColor_, 0);
          v20 = *MEMORY[0x24BDB1438];
          v18 = (unint64_t)objc_msgSend(v17, sel_sceneReconstruction);
          objc_msgSend(v17, sel_setSceneReconstruction_, v18 & ~v20);
          objc_msgSend(*v13, sel_runWithConfiguration_options_, v17, 8);
        }

        LOBYTE(a1) = v21;
      }
      if ((a1 & 1) != 0)
        objc_msgSend(*v13, sel_pause);
      v21 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_queue);
      aBlock[4] = sub_226526528;
      aBlock[5] = v1;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_2264FA450;
      aBlock[3] = &block_descriptor_3;
      v19 = _Block_copy(aBlock);
      swift_retain();
      sub_22655CBCC();
      v22 = MEMORY[0x24BEE4AF8];
      sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
      sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
      sub_22655D214();
      MEMORY[0x22769975C](0, v10, v6, v19);
      _Block_release(v19);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

void *sub_226516E54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t *v14;
  uint64_t v15;
  void *result;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t aBlock;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;

  v2 = sub_22655CBB4();
  v19 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22655CBFC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void **)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arRecordingConfig);
  v10 = MEMORY[0x24BDAC760];
  if (v9)
  {
    v24 = sub_22652A32C;
    v25 = a1;
    aBlock = MEMORY[0x24BDAC760];
    v21 = 1107296256;
    v22 = sub_226517184;
    v23 = &block_descriptor_127;
    v11 = _Block_copy(&aBlock);
    v12 = v9;
    swift_retain();
    v10 = MEMORY[0x24BDAC760];
    swift_release();
    objc_msgSend(v12, sel_finishRecordingWithHandler_, v11);
    _Block_release(v11);

  }
  v13 = *(void **)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_currentArConfiguration);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_currentArConfiguration) = 0;

  *(_BYTE *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runActive) = 0;
  sub_22651A928();
  v14 = (uint64_t *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_loggingDirectory);
  swift_beginAccess();
  v15 = v14[1];
  qword_25585B170 = *v14;
  qword_25585B178 = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = *(void **)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_floorPlanGenerator);
  if (result)
  {
    objc_msgSend(result, sel_stop);
    result = *(void **)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_okObjDet);
    if (result)
    {
      objc_msgSend(result, sel_stop);
      sub_22643F548(0, (unint64_t *)&qword_2558442A0);
      v17 = (void *)sub_22655D070();
      v24 = sub_22652A308;
      v25 = a1;
      aBlock = v10;
      v21 = 1107296256;
      v22 = sub_2264FA450;
      v23 = &block_descriptor_124;
      v18 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      sub_22655CBCC();
      aBlock = MEMORY[0x24BEE4AF8];
      sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
      sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
      sub_22655D214();
      MEMORY[0x22769975C](0, v8, v4, v18);
      _Block_release(v18);

      (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v2);
      return (void *)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_226517184(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t RoomCaptureSession.Configuration.isCoachingEnabled.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t RoomCaptureSession.Configuration.isCoachingEnabled.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*RoomCaptureSession.Configuration.isCoachingEnabled.modify())()
{
  return nullsub_1;
}

uint64_t RoomCaptureSession.Configuration.isObjectDetectionEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t RoomCaptureSession.Configuration.isObjectDetectionEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*RoomCaptureSession.Configuration.isObjectDetectionEnabled.modify())()
{
  return nullsub_1;
}

uint64_t RoomCaptureSession.Configuration.isDoorWindowDetectionEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t RoomCaptureSession.Configuration.isDoorWindowDetectionEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

uint64_t (*RoomCaptureSession.Configuration.isDoorWindowDetectionEnabled.modify())()
{
  return nullsub_1;
}

uint64_t RoomCaptureSession.Configuration.isWallDetectionEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 3);
}

uint64_t RoomCaptureSession.Configuration.isWallDetectionEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 3) = result;
  return result;
}

uint64_t (*RoomCaptureSession.Configuration.isWallDetectionEnabled.modify())()
{
  return nullsub_1;
}

uint64_t RoomCaptureSession.Configuration.isLiveResultEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 4);
}

uint64_t RoomCaptureSession.Configuration.isLiveResultEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 4) = result;
  return result;
}

uint64_t (*RoomCaptureSession.Configuration.isLiveResultEnabled.modify())()
{
  return nullsub_1;
}

uint64_t RoomCaptureSession.Configuration.isBoundaryRefinementEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 5);
}

uint64_t RoomCaptureSession.Configuration.isBoundaryRefinementEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 5) = result;
  return result;
}

uint64_t (*RoomCaptureSession.Configuration.isBoundaryRefinementEnabled.modify())()
{
  return nullsub_1;
}

uint64_t RoomCaptureSession.Configuration.isBayWindowRecessedWallsEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 6);
}

uint64_t RoomCaptureSession.Configuration.isBayWindowRecessedWallsEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 6) = result;
  return result;
}

uint64_t (*RoomCaptureSession.Configuration.isBayWindowRecessedWallsEnabled.modify())()
{
  return nullsub_1;
}

RoomPlan::RoomCaptureSession::Configuration __swiftcall RoomCaptureSession.Configuration.init()()
{
  uint64_t v0;
  RoomPlan::RoomCaptureSession::Configuration result;

  *(_QWORD *)v0 = 0x100010101010101;
  *(_BYTE *)(v0 + 8) = 1;
  return result;
}

Swift::Void __swiftcall RoomCaptureSession.Configuration.setNonUniformHeight(_:)(Swift::Bool a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = a1;
}

uint64_t RoomCaptureSession.CaptureError.errorDescription.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_226517310 + 4 * byte_226568300[*v0]))(0xD00000000000001CLL, 0x80000002265709D0);
}

uint64_t sub_226517310@<X0>(uint64_t a1@<X8>)
{
  return a1 + 5;
}

uint64_t sub_226517364()
{
  return 0x6C616E7265746E49;
}

uint64_t RoomCaptureSession.CaptureError.hash(into:)()
{
  return sub_22655D64C();
}

uint64_t sub_2265173BC()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x22769A944](v0 + 24);
}

uint64_t sub_226517400(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 32) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_226517460(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x22769A944](v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v3[3] = v4;
  v3[4] = v5;
  return sub_2265174CC;
}

void sub_2265174CC(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 32) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

void sub_22651753C(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(void **)(v3 + 56);
  *(_QWORD *)(v3 + 56) = v2;
  v5 = v2;

}

id sub_226517590()
{
  uint64_t v0;

  swift_beginAccess();
  return *(id *)(v0 + 56);
}

void sub_2265175C0(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  swift_beginAccess();
  v3 = *(void **)(v1 + 56);
  *(_QWORD *)(v1 + 56) = a1;

}

uint64_t (*sub_226517604())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_226517644()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t sub_226517674(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 64) = a1;
  return result;
}

uint64_t (*sub_2265176B0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_2265176EC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *a1 = *(_BYTE *)(v1 + 65);
  return result;
}

uint64_t sub_22651772C(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = swift_beginAccess();
  *(_BYTE *)(v1 + 65) = v2;
  return result;
}

uint64_t (*sub_226517768())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_2265177A4@<X0>(uint64_t a1@<X8>)
{
  return sub_2265178C8(&OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_recordFileUrl, a1);
}

uint64_t sub_2265177B0(uint64_t a1)
{
  return sub_226517928(a1, &OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_recordFileUrl);
}

uint64_t (*sub_2265177BC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_226517800(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849210);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22643D7A0(a1, (uint64_t)v10, &qword_255849210);
  v11 = *a2 + *a5;
  swift_beginAccess();
  sub_226526530((uint64_t)v10, v11);
  return swift_endAccess();
}

uint64_t sub_2265178BC@<X0>(uint64_t a1@<X8>)
{
  return sub_2265178C8(&OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_replayFileUrl, a1);
}

uint64_t sub_2265178C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + *a1;
  swift_beginAccess();
  return sub_22643D7A0(v4, a2, &qword_255849210);
}

uint64_t sub_22651791C(uint64_t a1)
{
  return sub_226517928(a1, &OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_replayFileUrl);
}

uint64_t sub_226517928(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + *a2;
  swift_beginAccess();
  sub_226526530(a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_22651797C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_2265179C0()
{
  return sub_226517BB8(&OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_spiReplayDelegate);
}

uint64_t sub_2265179CC(uint64_t a1, uint64_t a2)
{
  return sub_226517C0C(a1, a2, &OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_spiReplayDelegate);
}

void (*sub_2265179D8(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_spiReplayDelegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x22769A944](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_226517A4C;
}

uint64_t sub_226517A50(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_loggingDirectory);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_226517AB8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_loggingDirectory);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_226517B0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_loggingDirectory);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_226517B68())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_226517BAC()
{
  return sub_226517BB8(&OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_debugDelegate);
}

uint64_t sub_226517BB8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + *a1;
  swift_beginAccess();
  return MEMORY[0x22769A944](v2);
}

uint64_t sub_226517C00(uint64_t a1, uint64_t a2)
{
  return sub_226517C0C(a1, a2, &OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_debugDelegate);
}

uint64_t sub_226517C0C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v5;

  v5 = v3 + *a3;
  swift_beginAccess();
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_226517C70(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_debugDelegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x22769A944](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_226517A4C;
}

uint64_t sub_226517CE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  dispatch_semaphore_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession____lazy_storage___iuLogManager;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession____lazy_storage___iuLogManager))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession____lazy_storage___iuLogManager);
  }
  else
  {
    type metadata accessor for IULogManager();
    v2 = swift_allocObject();
    *(_WORD *)(v2 + 16) = 1792;
    *(_QWORD *)(v2 + 32) = 0;
    swift_unknownObjectWeakInit();
    v3 = dispatch_semaphore_create(1);
    v4 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v2 + 40) = v3;
    *(_QWORD *)(v2 + 48) = v4;
    *(_QWORD *)(v2 + 32) = &off_24EDE6EF8;
    swift_unknownObjectWeakAssign();
    *(_QWORD *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void sub_226517D9C(uint64_t a1)
{
  sub_226517DD4(a1, (uint64_t)&unk_24EDE7790, (uint64_t)sub_22652A260, (uint64_t)&block_descriptor_121);
}

void sub_226517DB8(uint64_t a1)
{
  sub_226517DD4(a1, (uint64_t)&unk_24EDE7740, (uint64_t)sub_22652A1E4, (uint64_t)&block_descriptor_115_0);
}

void sub_226517DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v8 = sub_22655CBB4();
  v18 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22655CBFC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v4 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runActive) == 1)
  {
    v17[1] = *(_QWORD *)(v4 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_queue);
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = v4;
    *(_QWORD *)(v15 + 24) = a1;
    aBlock[4] = a3;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2264FA450;
    aBlock[3] = a4;
    v16 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    sub_22655CBCC();
    v19 = MEMORY[0x24BEE4AF8];
    sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
    sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
    sub_22655D214();
    MEMORY[0x22769975C](0, v14, v10, v16);
    _Block_release(v16);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v8);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    swift_release();
  }
}

void sub_226517FD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  _QWORD v13[2];
  _QWORD aBlock[6];

  v3 = sub_22655CBB4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22655CBFC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runActive) == 1)
  {
    v13[0] = *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_queue);
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = a1;
    *(_QWORD *)(v11 + 24) = v1;
    aBlock[4] = sub_22652A1D0;
    aBlock[5] = v11;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2264FA450;
    aBlock[3] = &block_descriptor_109;
    v12 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_22655CBCC();
    v13[1] = MEMORY[0x24BEE4AF8];
    sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
    sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
    sub_22655D214();
    MEMORY[0x22769975C](0, v10, v6, v12);
    _Block_release(v12);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_release();
  }
}

void sub_2265181DC(unint64_t a1, uint64_t a2)
{
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  char *v19;
  void (*v20)(uint64_t, char *, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  void (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  void *v54;
  uint64_t v55;
  id v56;
  void *v57;
  id v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  _QWORD *v69;
  void *v70;

  isUniquelyReferenced_nonNull_native = sub_22655C140();
  v5 = *(_QWORD **)(isUniquelyReferenced_nonNull_native - 8);
  MEMORY[0x24BDAC7A8](isUniquelyReferenced_nonNull_native);
  v65 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
  MEMORY[0x24BDAC7A8](v7);
  v68 = (uint64_t)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (_QWORD *)(a1 >> 62);
  if (a1 >> 62)
  {
LABEL_29:
    swift_bridgeObjectRetain();
    v10 = sub_22655D400();
    if (v10)
      goto LABEL_3;
  }
  else
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v10)
    {
LABEL_3:
      v60 = v9;
      v61 = a2;
      v67 = (_QWORD *)(a2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_keyframes);
      v63 = a1;
      v64 = a1 & 0xC000000000000001;
      v11 = 4;
      v62 = v10;
      while (1)
      {
        v13 = v11 - 4;
        if (v64)
        {
          v14 = MEMORY[0x2276999E4](v11 - 4, a1);
          v15 = v11 - 3;
          if (__OFADD__(v13, 1))
            goto LABEL_26;
        }
        else
        {
          v14 = swift_retain();
          v15 = v11 - 3;
          if (__OFADD__(v13, 1))
          {
LABEL_26:
            __break(1u);
LABEL_27:
            __break(1u);
LABEL_28:
            __break(1u);
            goto LABEL_29;
          }
        }
        v66 = v15;
        v16 = v14;
        v17 = objc_msgSend(*(id *)(v14 + 16), sel_identifier);
        if (!v17)
        {
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v5[7])(v68, 1, 1, isUniquelyReferenced_nonNull_native);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
          goto LABEL_65;
        }
        v18 = v17;
        v19 = v65;
        sub_22655C110();

        v20 = (void (*)(uint64_t, char *, uint64_t))v5[4];
        v21 = v68;
        v20(v68, v19, isUniquelyReferenced_nonNull_native);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v5[7])(v21, 0, 1, isUniquelyReferenced_nonNull_native);
        v22 = v5;
        a2 = isUniquelyReferenced_nonNull_native;
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v5[6])(v21, 1, isUniquelyReferenced_nonNull_native) == 1)goto LABEL_62;
        a1 = *(_QWORD *)(v16 + 16);
        v5 = v67;
        swift_beginAccess();
        swift_unknownObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v69 = (_QWORD *)*v5;
        v9 = v69;
        *v5 = 0x8000000000000000;
        v24 = sub_226534858(v21);
        v25 = v9[2];
        v26 = (v23 & 1) == 0;
        v27 = v25 + v26;
        if (__OFADD__(v25, v26))
          goto LABEL_27;
        v28 = v23;
        if (v9[3] >= v27)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v9 = v69;
            if ((v23 & 1) == 0)
              goto LABEL_20;
          }
          else
          {
            sub_22654A534();
            v9 = v69;
            if ((v28 & 1) == 0)
              goto LABEL_20;
          }
        }
        else
        {
          sub_226545728(v27, isUniquelyReferenced_nonNull_native);
          v29 = sub_226534858(v68);
          if ((v28 & 1) != (v30 & 1))
            goto LABEL_66;
          v24 = v29;
          v9 = v69;
          if ((v28 & 1) == 0)
          {
LABEL_20:
            v5 = v22;
            v31 = (void (*)(char *, uint64_t, uint64_t))v22[2];
            v32 = v65;
            isUniquelyReferenced_nonNull_native = a2;
            v31(v65, v68, a2);
            v9[(v24 >> 6) + 8] |= 1 << v24;
            v20(v9[6] + v5[9] * v24, v32, a2);
            *(_QWORD *)(v9[7] + 8 * v24) = a1;
            v33 = v9[2];
            v34 = __OFADD__(v33, 1);
            v35 = v33 + 1;
            if (v34)
              goto LABEL_28;
            v9[2] = v35;
            goto LABEL_5;
          }
        }
        v12 = v9[7];
        swift_unknownObjectRelease();
        *(_QWORD *)(v12 + 8 * v24) = a1;
        isUniquelyReferenced_nonNull_native = a2;
        v5 = v22;
LABEL_5:
        *v67 = v9;
        swift_bridgeObjectRelease();
        ((void (*)(uint64_t, uint64_t))v5[1])(v68, isUniquelyReferenced_nonNull_native);
        swift_endAccess();
        swift_release();
        ++v11;
        a1 = v63;
        if (v66 == v62)
        {
          swift_bridgeObjectRelease();
          a2 = v61;
          if (v60)
            goto LABEL_31;
          goto LABEL_25;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  if (v9)
  {
LABEL_31:
    swift_bridgeObjectRetain();
    v36 = sub_22655D400();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_25:
    v36 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v37 = (void *)MEMORY[0x24BEE4AF8];
  if (v36)
  {
    v70 = (void *)MEMORY[0x24BEE4AF8];
    sub_22655D37C();
    if (v36 < 0)
    {
      __break(1u);
      goto LABEL_59;
    }
    if ((a1 & 0xC000000000000001) != 0)
    {
      v38 = 0;
      do
      {
        v39 = v38 + 1;
        MEMORY[0x2276999E4]();
        swift_unknownObjectRetain();
        swift_unknownObjectRelease();
        sub_22655D364();
        sub_22655D388();
        sub_22655D394();
        sub_22655D370();
        v38 = v39;
      }
      while (v36 != v39);
    }
    else
    {
      v40 = a1 + 32;
      v41 = v36;
      do
      {
        v40 += 8;
        swift_unknownObjectRetain();
        sub_22655D364();
        sub_22655D388();
        sub_22655D394();
        sub_22655D370();
        --v41;
      }
      while (v41);
    }
    v37 = v70;
  }
  v42 = *(void **)(a2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_floorPlanGenerator);
  if (!v42)
    goto LABEL_63;
  v43 = v42;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848520);
  isUniquelyReferenced_nonNull_native = sub_22655CEC0();
  swift_bridgeObjectRelease();
  objc_msgSend(v43, sel_updateWithKeyframes_, isUniquelyReferenced_nonNull_native);

  v44 = MEMORY[0x24BEE4AF8];
  if (v36)
  {
    v70 = (void *)MEMORY[0x24BEE4AF8];
    sub_22655D37C();
    if ((v36 & 0x8000000000000000) == 0)
    {
      v45 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          v46 = MEMORY[0x2276999E4](v45, a1);
        }
        else
        {
          v46 = *(_QWORD *)(a1 + 8 * v45 + 32);
          swift_retain();
        }
        ++v45;
        v47 = *(void **)(v46 + 24);
        objc_allocWithZone((Class)type metadata accessor for ObjectKitKeyframe(0));
        v48 = v47;
        v49 = (void *)swift_unknownObjectRetain();
        sub_2264F5BD8(v49, v47);
        swift_release();
        swift_unknownObjectRelease();

        sub_22655D364();
        sub_22655D388();
        sub_22655D394();
        sub_22655D370();
      }
      while (v36 != v45);
      v44 = (unint64_t)v70;
      goto LABEL_50;
    }
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
LABEL_50:
  if ((*(_BYTE *)(a2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_objectDetectionEnabled) & 1) != 0
    && (swift_beginAccess(),
        (v50 = objc_msgSend(*(id *)(a2 + 56), sel_currentFrame)) != 0))
  {
    v51 = v50;
    v52 = objc_msgSend(v50, sel_camera);

    objc_msgSend(v52, sel_transform);
    v53 = objc_msgSend(*(id *)(a2 + 56), sel_currentFrame);
    if (!v53)
      goto LABEL_64;
    v54 = v53;
    type metadata accessor for OUFrame();
    swift_allocObject();
    isUniquelyReferenced_nonNull_native = v54;
    sub_2264EF70C((void *)isUniquelyReferenced_nonNull_native);
    v37 = *(void **)(a2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_okObjDet);
    if (v37)
    {
      v36 = v55;
      if (!(v44 >> 62))
      {
        v56 = v37;
        swift_bridgeObjectRetain();
        sub_22655D568();
LABEL_56:
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848500);
        v57 = (void *)sub_22655CEC0();
        swift_bridgeObjectRelease();
        objc_msgSend(v37, sel_updateWithKeyframes_ouframe_, v57, v36);

        swift_release();
        return;
      }
LABEL_60:
      v58 = v37;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848500);
      sub_22655D3F4();
      swift_bridgeObjectRelease();
      goto LABEL_56;
    }
LABEL_65:
    __break(1u);
LABEL_66:
    sub_22655D5A4();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

void sub_226518980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  _QWORD v11[2];
  _QWORD aBlock[6];

  v1 = sub_22655CBB4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22655CBFC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void **)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error) = 0;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration + 7) == 1)
  {
    v11[0] = *(_QWORD *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_queue);
    aBlock[4] = sub_22652A1B4;
    aBlock[5] = v0;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2264FA450;
    aBlock[3] = &block_descriptor_103;
    v10 = _Block_copy(aBlock);
    swift_retain();
    sub_22655CBCC();
    v11[1] = MEMORY[0x24BEE4AF8];
    sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
    sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
    sub_22655D214();
    MEMORY[0x22769975C](0, v8, v4, v10);
    _Block_release(v10);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_release();
  }
}

void sub_226518B78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  _QWORD v10[2];
  _QWORD aBlock[6];

  v1 = sub_22655CBB4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22655CBFC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration + 7) == 1)
  {
    v10[0] = *(_QWORD *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_queue);
    aBlock[4] = sub_22652A1AC;
    aBlock[5] = v0;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2264FA450;
    aBlock[3] = &block_descriptor_100;
    v9 = _Block_copy(aBlock);
    swift_retain();
    sub_22655CBCC();
    v10[1] = MEMORY[0x24BEE4AF8];
    sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
    sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
    sub_22655D214();
    MEMORY[0x22769975C](0, v8, v4, v9);
    _Block_release(v9);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_release();
  }
}

void sub_226518D5C(uint64_t a1)
{
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  uint64_t v5;
  _BYTE *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_trackingFailureReportCount);
  v2 = __OFADD__(v1, 1);
  v3 = v1 + 1;
  if (v2)
  {
    __break(1u);
LABEL_7:
    swift_once();
    goto LABEL_4;
  }
  *(_QWORD *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_trackingFailureReportCount) = v3;
  if (v3 < 601)
    return;
  sub_2265265C4();
  v5 = swift_allocError();
  *v6 = 1;
  v7 = *(void **)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error) = v5;

  if (qword_25583F910 != -1)
    goto LABEL_7;
LABEL_4:
  v8 = sub_22655CDDC();
  sub_2264A3328(v8, v9);
  swift_bridgeObjectRelease();
  sub_226516B30(1);
}

void sub_226518E48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  _QWORD v10[2];
  _QWORD aBlock[6];

  v1 = sub_22655CBB4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22655CBFC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration + 7) == 1)
  {
    v10[0] = *(_QWORD *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_queue);
    aBlock[4] = sub_22652A414;
    aBlock[5] = v0;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2264FA450;
    aBlock[3] = &block_descriptor_97;
    v9 = _Block_copy(aBlock);
    swift_retain();
    sub_22655CBCC();
    v10[1] = MEMORY[0x24BEE4AF8];
    sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
    sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
    sub_22655D214();
    MEMORY[0x22769975C](0, v8, v4, v9);
    _Block_release(v9);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_release();
  }
}

id sub_22651902C()
{
  uint64_t v0;
  uint64_t v1;
  id result;
  void *v3;
  id v4;
  void *v5;
  unsigned int v6;
  id v7;
  void *v8;
  unsigned int v9;
  id v10;
  id v11[5];

  v11[4] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_loggingDirectory;
  result = (id)swift_beginAccess();
  if (*(_QWORD *)(v1 + 8))
  {
    v3 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v4 = objc_msgSend(v3, sel_defaultManager);
    v5 = (void *)sub_22655CD64();
    v6 = objc_msgSend(v4, sel_fileExistsAtPath_, v5);

    if (v6)
    {
      v7 = objc_msgSend(v3, sel_defaultManager);
      v8 = (void *)sub_22655CD64();
      swift_bridgeObjectRelease();
      v11[0] = 0;
      v9 = objc_msgSend(v7, sel_removeItemAtPath_error_, v8, v11);

      if (v9)
      {
        return v11[0];
      }
      else
      {
        v10 = v11[0];
        sub_22655BF6C();

        swift_willThrow();
        return (id)swift_willThrow();
      }
    }
    else
    {
      return (id)swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_2265191C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  __int128 v27;
  void *v28;
  void (*v29)(char *, uint64_t);
  unsigned int v30;
  id v31;
  void *v32;
  id v33;
  unsigned int v34;
  id v35;
  id v36;
  void *v37;
  void *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  char *v54;
  uint64_t v55;
  void *v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;

  *((_QWORD *)&v48 + 1) = a3;
  *(_QWORD *)&v48 = a2;
  v62 = *MEMORY[0x24BDAC8D0];
  v55 = sub_22655C05C();
  v47 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v54 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_22655BF84();
  v45 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22643F548(0, &qword_255849B70);
  v6 = (void *)sub_22655CFE0();
  *(_QWORD *)&v60 = 0x737463656A626FLL;
  *((_QWORD *)&v60 + 1) = 0xE700000000000000;
  v7 = objc_msgSend(v6, sel___swift_objectForKeyedSubscript_, sub_22655D58C());
  swift_unknownObjectRelease();
  if (!v7)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v8 = (void *)sub_22643F548(0, &qword_255849B78);
  sub_22655D1CC();
  swift_unknownObjectRelease();
  sub_226455C88(&v58, &v60);
  sub_22643F548(0, &qword_255849B80);
  swift_dynamicCast();
  v9 = (void *)v57;
  v52 = v8;
  v51 = (id)sub_22655D0DC();

  v10 = (void *)sub_22655CFE0();
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEB8]), sel_init);
  *(_QWORD *)&v60 = 0x737463656A626FLL;
  *((_QWORD *)&v60 + 1) = 0xE700000000000000;
  objc_msgSend(v10, sel___swift_setObject_forKeyedSubscript_, v11, sub_22655D58C());

  swift_unknownObjectRelease();
  *(_QWORD *)&v60 = 0x737463656A626FLL;
  *((_QWORD *)&v60 + 1) = 0xE700000000000000;
  v12 = sub_22655D58C();
  v50 = v10;
  v13 = objc_msgSend(v10, sel___swift_objectForKeyedSubscript_, v12);
  swift_unknownObjectRelease();
  if (!v13)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
  }
  sub_22655D1CC();
  swift_unknownObjectRelease();
  sub_226455C88(&v58, &v60);
  swift_dynamicCast();
  v53 = (id)v57;
  v44 = v6;
  v14 = (void *)sub_22655CFE0();
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEB8]), sel_init);
  *(_QWORD *)&v60 = 0x737463656A626FLL;
  *((_QWORD *)&v60 + 1) = 0xE700000000000000;
  objc_msgSend(v14, sel___swift_setObject_forKeyedSubscript_, v15, sub_22655D58C());

  swift_unknownObjectRelease();
  *(_QWORD *)&v60 = 0x737463656A626FLL;
  *((_QWORD *)&v60 + 1) = 0xE700000000000000;
  v16 = sub_22655D58C();
  v49 = v14;
  v17 = objc_msgSend(v14, sel___swift_objectForKeyedSubscript_, v16);
  swift_unknownObjectRelease();
  if (!v17)
    goto LABEL_30;
  sub_22655D1CC();
  swift_unknownObjectRelease();
  sub_226455C88(&v58, &v60);
  swift_dynamicCast();
  v52 = (id)v57;
  sub_22655D0D0();
  sub_22655BF78();
  v19 = v54;
  v18 = v55;
  if (v61)
  {
    while (1)
    {
      sub_226455C88(&v60, &v58);
      sub_22643F548(0, (unint64_t *)&unk_255849B50);
      swift_dynamicCast();
      v20 = (void *)v57;
      *(_QWORD *)&v58 = 0x69645F7365786F62;
      *((_QWORD *)&v58 + 1) = 0xEA00000000007463;
      v21 = objc_msgSend((id)v57, sel___swift_objectForKeyedSubscript_, sub_22655D58C());
      swift_unknownObjectRelease();
      if (!v21)
        break;
      sub_22655D1CC();
      swift_unknownObjectRelease();
      sub_226455C88(&v57, &v58);
      swift_dynamicCast();
      v22 = v56;
      if (qword_25583F980 != -1)
        swift_once();
      sub_22655CD88();
      v23 = (void *)sub_22655CD64();
      swift_bridgeObjectRelease();
      v24 = objc_msgSend(v22, sel_objectForKey_, v23);

      if (v24)
      {
        sub_22655D1CC();
        swift_unknownObjectRelease();
        sub_22643D7E4((uint64_t)&v58, &qword_2558436D8);
        objc_msgSend(v53, sel_addObject_, v20);
      }
      else
      {
        v58 = 0u;
        v59 = 0u;
        sub_22643D7E4((uint64_t)&v58, &qword_2558436D8);
      }
      if (qword_25583F988 != -1)
        swift_once();
      sub_22655CD88();
      v25 = (void *)sub_22655CD64();
      swift_bridgeObjectRelease();
      v26 = objc_msgSend(v22, sel_objectForKey_, v25);

      if (v26)
      {
        sub_22655D1CC();
        swift_unknownObjectRelease();
        sub_22643D7E4((uint64_t)&v58, &qword_2558436D8);
        objc_msgSend(v52, sel_addObject_, v20);

      }
      else
      {
        v58 = 0u;
        v59 = 0u;

        sub_22643D7E4((uint64_t)&v58, &qword_2558436D8);
      }
      v19 = v54;
      v18 = v55;
      sub_22655BF78();
      if (!v61)
        goto LABEL_18;
    }
    __break(1u);
    goto LABEL_28;
  }
LABEL_18:
  (*(void (**)(char *, uint64_t))(v45 + 8))(v5, v46);
  v27 = v48;
  v60 = v48;
  swift_bridgeObjectRetain();
  sub_22655CE24();
  swift_bridgeObjectRetain();
  sub_22655CE24();
  swift_bridgeObjectRelease();
  v60 = v27;
  swift_bridgeObjectRetain();
  sub_22655CE24();
  swift_bridgeObjectRetain();
  sub_22655CE24();
  swift_bridgeObjectRelease();
  sub_22655BFC0();
  swift_bridgeObjectRelease();
  v28 = (void *)sub_22655BFE4();
  v29 = *(void (**)(char *, uint64_t))(v47 + 8);
  v29(v19, v18);
  *(_QWORD *)&v60 = 0;
  v30 = objc_msgSend(v50, sel_writeToURL_error_, v28, &v60);

  v31 = (id)v60;
  if (v30)
  {
    sub_22655BFC0();
    swift_bridgeObjectRelease();
    v32 = (void *)sub_22655BFE4();
    v29(v19, v18);
    *(_QWORD *)&v60 = 0;
    v33 = v49;
    v34 = objc_msgSend(v49, sel_writeToURL_error_, v32, &v60);

    v35 = (id)v60;
    v36 = v44;
    if (v34)
    {

      return;
    }
    v37 = v35;
  }
  else
  {
    v37 = v31;
    swift_bridgeObjectRelease();
    v36 = v44;
  }
  v38 = (void *)sub_22655BF6C();

  swift_willThrow();
  swift_bridgeObjectRetain_n();
  v39 = sub_22655CB6C();
  v40 = sub_22655CFF8();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = (uint8_t *)swift_slowAlloc();
    v42 = swift_slowAlloc();
    *(_QWORD *)&v60 = v42;
    *(_DWORD *)v41 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v58 = sub_2264F4EC4(v27, *((unint64_t *)&v27 + 1), (uint64_t *)&v60);
    sub_22655D154();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_226423000, v39, v40, "Unable to log fp_output_wi_beautify.plist or fp_output_no_beautify.plist to %s!", v41, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22769A884](v42, -1, -1);
    MEMORY[0x22769A884](v41, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }

}

uint64_t sub_226519C54(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  _QWORD *v24;
  void *v25;
  char *v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  _QWORD aBlock[6];
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;

  v5 = sub_22655CBB4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v36 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_22655CBFC();
  v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CapturedRoom(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v41 = a1[2];
  v42 = v14;
  v43 = a1[4];
  v15 = a1[1];
  v39 = *a1;
  v40 = v15;
  v16 = (uint64_t *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_loggingDirectory);
  swift_beginAccess();
  v17 = v16[1];
  if (v17)
  {
    v18 = *v16;
    v33 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_saveFileQueue);
    sub_22643D704(a2, (uint64_t)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CapturedRoom);
    v19 = (*(unsigned __int8 *)(v11 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v20 = (v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
    v32 = v6;
    v21 = (_OWORD *)swift_allocObject();
    v22 = v42;
    v21[3] = v41;
    v21[4] = v22;
    v21[5] = v43;
    v23 = v40;
    v21[1] = v39;
    v21[2] = v23;
    sub_22643F6AC((uint64_t)v13, (uint64_t)v21 + v19, type metadata accessor for CapturedRoom);
    *(_QWORD *)((char *)v21 + v20) = v2;
    v24 = (_QWORD *)((char *)v21 + ((v20 + 15) & 0xFFFFFFFFFFFFFFF8));
    *v24 = v18;
    v24[1] = v17;
    aBlock[4] = sub_22652A158;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2264FA450;
    aBlock[3] = &block_descriptor_94;
    v25 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    sub_2264FA1AC((uint64_t)&v39);
    swift_retain();
    sub_22655CBCC();
    v37 = MEMORY[0x24BEE4AF8];
    sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
    sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
    v26 = v36;
    sub_22655D214();
    MEMORY[0x22769975C](0, v9, v26, v25);
    _Block_release(v25);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v26, v5);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v35);
    return swift_release();
  }
  else
  {
    v28 = v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_debugDelegate;
    swift_beginAccess();
    result = MEMORY[0x22769A944](v28);
    if (result)
    {
      v29 = *(_QWORD *)(v28 + 8);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v29 + 40))(ObjectType, v29);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_226519FC4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, unint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  void *v21;
  id v22;
  uint64_t v23;
  char *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  int64x2_t *v39;
  __int8 *v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t ObjectType;
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v50;
  char *v51;
  unsigned int (*v52)(uint64_t, uint64_t, uint64_t);
  char *v53;
  uint64_t v54;
  void *v55;
  unint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;

  v55 = a4;
  v56 = a5;
  v57 = a3;
  v54 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849210);
  MEMORY[0x24BDAC7A8](v5);
  v52 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))((char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_22655C05C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v53 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v47 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v51 = (char *)&v47 - v14;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v47 - v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255849B48);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_22655F8F0;
  v19 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v18 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v18 + 32) = 0x656D61726679656BLL;
  *(_QWORD *)(v18 + 40) = 0xE900000000000073;
  sub_22655C140();
  v20 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255848520);
  sub_226437F28(&qword_2558436F0, v20, MEMORY[0x24BDCEA88]);
  v21 = (void *)sub_22655CCBC();
  v22 = (id)RSKeyframeSequenceToDictionary();

  v50 = v8;
  if (v22)
  {
    v23 = sub_22655CCC8();

    v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558436E0);
    *(_QWORD *)&v58 = v23;
    sub_226455C88(&v58, (_OWORD *)(v18 + 64));
  }
  else
  {
    *(_QWORD *)(v18 + 88) = v19;
    *(_QWORD *)(v18 + 64) = 0x6575716553206F4ELL;
    *(_QWORD *)(v18 + 72) = 0xEB0000000065636ELL;
  }
  v24 = v17;
  sub_22643F548(0, (unint64_t *)&unk_255849B50);
  v25 = (void *)sub_22655CFEC();
  v26 = type metadata accessor for CapturedRoom(0);
  v27 = v54;
  v28 = objc_msgSend(*(id *)(v54 + *(int *)(v26 + 60)), sel_dictionaryRepresentation);
  if (v28)
  {
    v29 = (uint64_t)v28;
    v49 = v25;
    v30 = (uint64_t)v55;
    v31 = v56;
    sub_22651AF18(v25, v28, v55, v56, 0);
    v48 = (void *)v29;
    sub_2265191C8(v29, v30, v31);
    *(_QWORD *)&v58 = 0;
    *((_QWORD *)&v58 + 1) = 0xE000000000000000;
    sub_22655D2EC();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v58 = v30;
    *((_QWORD *)&v58 + 1) = v31;
    sub_22655CE24();
    sub_22655BFC0();
    swift_bridgeObjectRelease();
    sub_22655BFFC();
    v32 = v51;
    sub_22655C014();
    v33 = v12;
    v34 = v50;
    v35 = *(void (**)(char *, uint64_t))(v50 + 8);
    v35(v33, v7);
    *(_QWORD *)&v58 = 0;
    *((_QWORD *)&v58 + 1) = 0xE000000000000000;
    sub_22655D2EC();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v58 = v30;
    *((_QWORD *)&v58 + 1) = v31;
    sub_22655CE24();
    v36 = (uint64_t)v53;
    sub_22655BFC0();
    swift_bridgeObjectRelease();
    v37 = v52;
    (*(void (**)(unsigned int (*)(uint64_t, uint64_t, uint64_t), char *, uint64_t))(v34 + 16))(v52, v32, v7);
    (*(void (**)(unsigned int (*)(uint64_t, uint64_t, uint64_t), _QWORD, uint64_t, uint64_t))(v34 + 56))(v37, 0, 1, v7);
    sub_2264B5654(v36, v37, 0, 0, 2);
    v38 = v57;
    sub_22643D7E4((uint64_t)v37, &qword_255849210);
    v35((char *)v36, v7);
    v35(v32, v7);
    v35(v24, v7);
    type metadata accessor for RoomBuilder();
    v39 = (int64x2_t *)swift_allocObject();
    v39[1].i8[8] = 0;
    v39[2] = vdupq_n_s64(1uLL);
    v40 = &v39->i8[OBJC_IVAR____TtC8RoomPlan11RoomBuilder_floorPlanModelContinuation];
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_255848220);
    (*(void (**)(__int8 *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 1, 1, v41);
    v39[1].i64[0] = 0;
    *(_QWORD *)&v58 = 0;
    *((_QWORD *)&v58 + 1) = 0xE000000000000000;
    sub_22655D2EC();
    v42 = v56;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v58 = v55;
    *((_QWORD *)&v58 + 1) = v42;
    sub_22655CE24();
    sub_2264F9C80(v27, v58, *((unint64_t *)&v58 + 1));
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_22643D7E4((uint64_t)v39->i64 + OBJC_IVAR____TtC8RoomPlan11RoomBuilder_floorPlanModelContinuation, (uint64_t *)&unk_255849B60);
    swift_deallocClassInstance();
    v43 = v48;
    v44 = v38 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_debugDelegate;
    swift_beginAccess();
    if (MEMORY[0x22769A944](v44))
    {
      v45 = *(_QWORD *)(v44 + 8);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v45 + 40))(ObjectType, v45);

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_22651A928()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  _QWORD v14[3];
  _QWORD aBlock[6];

  v1 = sub_22655CBB4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22655CBFC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_enableLiveDump) == 1)
  {
    v9 = (uint64_t *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_loggingDirectory);
    swift_beginAccess();
    v10 = v9[1];
    if (v10)
    {
      v11 = *v9;
      v14[1] = *(_QWORD *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_saveFileQueue);
      v12 = (_QWORD *)swift_allocObject();
      v12[2] = v0;
      v12[3] = v11;
      v12[4] = v10;
      aBlock[4] = sub_22652A034;
      aBlock[5] = v12;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_2264FA450;
      aBlock[3] = &block_descriptor_88_0;
      v13 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_22655CBCC();
      v14[2] = MEMORY[0x24BEE4AF8];
      sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
      sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
      sub_22655D214();
      MEMORY[0x22769975C](0, v8, v4, v13);
      _Block_release(v13);
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      swift_release();
    }
  }
}

void sub_22651AB58(uint64_t a1, void *a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  void *v13;
  unint64_t v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  unsigned __int8 v19;
  id v20;
  void *v21;
  unsigned int v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  _QWORD v37[3];
  id v38;
  unint64_t v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v6 = sub_22655C05C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)(a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_floorPlanGenerator);
  if (!v11)
    __break(1u);
  v12 = objc_msgSend(v11, sel_getDebugInfo, v8);
  if (v12)
  {
    v13 = v12;
    v37[0] = v6;
    v37[1] = a1;
    v38 = a2;
    v39 = a3;
    swift_bridgeObjectRetain();
    sub_22655CE24();
    v15 = v38;
    v14 = v39;
    v16 = (void *)objc_opt_self();
    v17 = objc_msgSend(v16, sel_defaultManager);
    v18 = (void *)sub_22655CD64();
    v19 = objc_msgSend(v17, sel_fileExistsAtPath_, v18);

    if ((v19 & 1) != 0)
      goto LABEL_6;
    v20 = objc_msgSend(v16, sel_defaultManager);
    v21 = (void *)sub_22655CD64();
    v38 = 0;
    v22 = objc_msgSend(v20, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v21, 1, 0, &v38);

    if (v22)
    {
      v23 = v38;
LABEL_6:
      v24 = (void *)objc_opt_self();
      v38 = 0;
      v25 = objc_msgSend(v24, sel_dataWithPropertyList_format_options_error_, v13, 200, 0, &v38);
      v26 = v38;
      if (v25)
      {
        v27 = sub_22655C080();
        v29 = v28;

        v38 = 0;
        v39 = 0xE000000000000000;
        sub_22655D2EC();
        swift_bridgeObjectRelease();
        v38 = v15;
        v39 = v14;
        sub_22655CE24();
        sub_22655BFC0();
        swift_bridgeObjectRelease();
        sub_22655C08C();
        (*(void (**)(char *, _QWORD))(v7 + 8))(v10, v37[0]);

        sub_226455C98(v27, v29);
      }
      else
      {
        v30 = v26;
        swift_bridgeObjectRelease();
        v31 = (void *)sub_22655BF6C();

        swift_willThrow();
      }
      return;
    }
    v32 = v38;
    swift_bridgeObjectRelease();
    v33 = (void *)sub_22655BF6C();

    swift_willThrow();
    v34 = sub_22655CB6C();
    v35 = sub_22655CFF8();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v36 = 0;
      _os_log_impl(&dword_226423000, v34, v35, "Could not write to RSC debug log", v36, 2u);
      MEMORY[0x22769A884](v36, -1, -1);
    }

  }
}

void sub_22651AF18(void *a1, void *a2, void *a3, unint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  unsigned __int8 v19;
  id v20;
  void *v21;
  unsigned int v22;
  id v23;
  id v24;
  void *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint8_t *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  id v55;
  void *v56;
  void *v57;
  id v58;
  id v59;
  void *v60;
  unsigned __int8 v61;
  id v62;
  void *v63;
  unsigned int v64;
  id v65;
  void *v66;
  void (*v67)(char *, uint64_t);
  unsigned int v68;
  id v69;
  void *v70;
  void *v71;
  void *v72;
  unsigned __int8 v73;
  id v74;
  void *v75;
  id v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  void *v80;
  id v81;
  void *v82;
  __int128 v83;
  uint64_t v84;
  __int128 v85;
  char *v86;
  id v87;
  uint64_t v88;
  id v89;
  id v90;
  id v91;
  uint64_t v92;
  int v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  id v99;
  void *v100;
  uint64_t v101;

  v97 = a1;
  v101 = *MEMORY[0x24BDAC8D0];
  v10 = sub_22655C05C();
  v96 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_22655C0E0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 || a4 != 0xE000000000000000) && (sub_22655D55C() & 1) == 0)
  {
    v93 = a5;
    v89 = a2;
    v95 = v5;
    v94 = (id)objc_opt_self();
    v17 = objc_msgSend(v94, sel_defaultManager);
    v18 = (void *)sub_22655CD64();
    v19 = objc_msgSend(v17, sel_fileExistsAtPath_, v18);

    v92 = v10;
    if ((v19 & 1) == 0)
    {
      v20 = objc_msgSend(v94, sel_defaultManager);
      v21 = (void *)sub_22655CD64();
      v99 = 0;
      v22 = objc_msgSend(v20, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v21, 1, 0, &v99);

      if (v22)
      {
        v23 = v99;
      }
      else
      {
        v24 = v99;
        v25 = (void *)sub_22655BF6C();

        swift_willThrow();
        swift_bridgeObjectRetain_n();
        v26 = sub_22655CB6C();
        v27 = sub_22655CFF8();
        if (os_log_type_enabled(v26, v27))
        {
          v28 = swift_slowAlloc();
          v91 = v25;
          v29 = (uint8_t *)v28;
          v90 = (id)swift_slowAlloc();
          v99 = v90;
          *(_DWORD *)v29 = 136315138;
          v88 = (uint64_t)(v29 + 4);
          swift_bridgeObjectRetain();
          v98 = sub_2264F4EC4((uint64_t)a3, a4, (uint64_t *)&v99);
          sub_22655D154();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_226423000, v26, v27, "Unable to create folder %s!", v29, 0xCu);
          v30 = v90;
          swift_arrayDestroy();
          MEMORY[0x22769A884](v30, -1, -1);
          MEMORY[0x22769A884](v29, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }

      }
    }
    v99 = a3;
    v100 = (void *)a4;
    swift_bridgeObjectRetain();
    sub_22655CE24();
    v32 = v99;
    v31 = v100;
    v90 = v99;
    if ((v93 & 1) != 0)
    {
      v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
      v34 = (void *)sub_22655CD64();
      v87 = v33;
      objc_msgSend(v33, sel_setDateFormat_, v34);

      sub_22655C0D4();
      v35 = (void *)sub_22655C0BC();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      v36 = objc_msgSend(v33, sel_stringFromDate_, v35);

      v37 = sub_22655CD88();
      v86 = v12;
      v38 = v37;
      v40 = v39;

      v41 = (void *)objc_opt_self();
      v81 = v41;
      v88 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849B30);
      v42 = swift_allocObject();
      v85 = xmmword_22655FA10;
      *(_OWORD *)(v42 + 16) = xmmword_22655FA10;
      *(_QWORD *)(v42 + 32) = v32;
      *(_QWORD *)(v42 + 40) = v31;
      v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_255843100);
      v43 = swift_allocObject();
      v83 = xmmword_22655F8F0;
      *(_OWORD *)(v43 + 16) = xmmword_22655F8F0;
      v44 = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v43 + 56) = MEMORY[0x24BEE0D00];
      v82 = a3;
      v45 = v44;
      v46 = sub_22646F028();
      *(_QWORD *)(v43 + 64) = v46;
      *(_QWORD *)(v43 + 32) = v38;
      *(_QWORD *)(v43 + 40) = v40;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      *(_QWORD *)(v42 + 48) = sub_22655CDAC();
      *(_QWORD *)(v42 + 56) = v47;
      v48 = (void *)sub_22655CEC0();
      swift_bridgeObjectRelease();
      v49 = objc_msgSend(v41, sel_pathWithComponents_, v48);

      v91 = (id)sub_22655CD88();
      v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = v85;
      *(_QWORD *)(v50 + 32) = v32;
      *(_QWORD *)(v50 + 40) = v31;
      v51 = swift_allocObject();
      *(_OWORD *)(v51 + 16) = v83;
      v52 = v45;
      a3 = v82;
      *(_QWORD *)(v51 + 56) = v52;
      *(_QWORD *)(v51 + 64) = v46;
      *(_QWORD *)(v51 + 32) = v38;
      *(_QWORD *)(v51 + 40) = v40;
      v12 = v86;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v50 + 48) = sub_22655CDAC();
      *(_QWORD *)(v50 + 56) = v53;
      v54 = (void *)sub_22655CEC0();
      swift_bridgeObjectRelease();
      v55 = objc_msgSend(v81, sel_pathWithComponents_, v54);

      v88 = sub_22655CD88();
      v57 = v56;

    }
    else
    {
      v99 = a3;
      v100 = (void *)a4;
      swift_bridgeObjectRetain();
      sub_22655CE24();
      swift_bridgeObjectRetain();
      sub_22655CE24();
      swift_bridgeObjectRelease();
      v91 = v99;
      v99 = a3;
      v100 = (void *)a4;
      swift_bridgeObjectRetain();
      sub_22655CE24();
      swift_bridgeObjectRetain();
      sub_22655CE24();
      swift_bridgeObjectRelease();
      v57 = v100;
      v88 = (uint64_t)v99;
    }
    v58 = v94;
    if (*(_BYTE *)(v95 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_enableLiveDump) != 1
      || (v94 = v57,
          v59 = objc_msgSend(v58, sel_defaultManager),
          v60 = (void *)sub_22655CD64(),
          v61 = objc_msgSend(v59, sel_fileExistsAtPath_, v60),
          v59,
          v60,
          (v61 & 1) != 0))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v62 = objc_msgSend(v58, sel_defaultManager);
      v63 = (void *)sub_22655CD64();
      swift_bridgeObjectRelease();
      v99 = 0;
      v64 = objc_msgSend(v62, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v63, 1, 0, &v99);

      if (!v64)
      {
        v76 = v99;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v71 = (void *)sub_22655BF6C();

        goto LABEL_26;
      }
      v65 = v99;
    }
    sub_22655BFC0();
    swift_bridgeObjectRelease();
    v66 = (void *)sub_22655BFE4();
    v67 = *(void (**)(char *, uint64_t))(v96 + 8);
    v67(v12, v92);
    v99 = 0;
    v68 = objc_msgSend(v97, sel_writeToURL_error_, v66, &v99);

    v69 = v99;
    if (!v68)
    {
      v70 = v69;
      swift_bridgeObjectRelease();
      v71 = (void *)sub_22655BF6C();

LABEL_26:
      swift_willThrow();
      swift_bridgeObjectRetain_n();
      v77 = sub_22655CB6C();
      v78 = sub_22655CFF8();
      if (os_log_type_enabled(v77, v78))
      {
        v79 = (uint8_t *)swift_slowAlloc();
        v80 = (void *)swift_slowAlloc();
        v99 = v80;
        *(_DWORD *)v79 = 136315138;
        swift_bridgeObjectRetain();
        v98 = sub_2264F4EC4((uint64_t)a3, a4, (uint64_t *)&v99);
        sub_22655D154();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_226423000, v77, v78, "Unable to log input and output to %s!", v79, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22769A884](v80, -1, -1);
        MEMORY[0x22769A884](v79, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }

      return;
    }
    if ((v93 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return;
    }
    sub_22655BFC0();
    swift_bridgeObjectRelease();
    v72 = (void *)sub_22655BFE4();
    v67(v12, v92);
    v99 = 0;
    v73 = objc_msgSend(v89, sel_writeToURL_error_, v72, &v99);

    v74 = v99;
    if ((v73 & 1) == 0)
    {
      v75 = v74;
      v71 = (void *)sub_22655BF6C();

      goto LABEL_26;
    }
  }
}

uint64_t RoomCaptureSession.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_22644F0C0(v0 + 24);
  sub_22644F0C0(v0 + 40);

  sub_22643D7E4(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_recordFileUrl, &qword_255849210);
  sub_22643D7E4(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_replayFileUrl, &qword_255849210);
  sub_22644F0C0(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_spiReplayDelegate);
  swift_bridgeObjectRelease();
  sub_22644F0C0(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_debugDelegate);
  sub_22644F0C0(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate);
  v1 = v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_logger;
  v2 = sub_22655CB84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  swift_bridgeObjectRelease();
  sub_22643D748(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_floorPlanModel, type metadata accessor for CapturedRoom);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t RoomCaptureSession.__deallocating_deinit()
{
  RoomCaptureSession.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_22651BBF8(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v25;
  double v26;
  unint64_t v27;
  double v28;
  id v29;
  uint64_t v30;
  int v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _QWORD aBlock[7];

  v4 = sub_22655C0E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22655D0F4();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25583F950 != -1)
    swift_once();
  if (*(_BYTE *)(qword_25585AFD0 + 32) == 1)
  {
    v38 = v5;
    v11 = objc_msgSend(a1, sel_configuration);
    v37 = v7;
    if (v11)
    {
      v12 = v11;
      v13 = v4;
      v14 = objc_msgSend(v11, sel_videoFormat);

      v15 = objc_msgSend(v14, sel_framesPerSecond);
    }
    else
    {
      v13 = v4;
      v15 = objc_msgSend(a2, sel_renderFramesPerSecond);
    }
    v16 = qword_25585AFD0;
    objc_msgSend(a2, sel_timestamp);
    v18 = v17;
    v19 = *(NSObject **)(v16 + 40);
    v20 = (_QWORD *)swift_allocObject();
    v20[2] = v16;
    v20[3] = v18;
    v20[4] = v15;
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = sub_226529FE0;
    *(_QWORD *)(v21 + 24) = v20;
    aBlock[4] = sub_22646F0CC;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_226558F38;
    aBlock[3] = &block_descriptor_76;
    v22 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v19, v22);
    _Block_release(v22);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    v4 = v13;
    v7 = v37;
    v5 = v38;
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
LABEL_29:
      swift_once();
LABEL_13:
      objc_msgSend(a2, sel_timestamp);
      sub_2264A2B6C(v26);
      if (qword_25583F9D8 != -1)
        swift_once();
      sub_2265593DC(a2);
      if (qword_25583F8C0 != -1)
        swift_once();
      if (*(_BYTE *)(qword_25585AE48 + 32) == 1)
      {
        v27 = sub_226558F90();
        sub_22646E3A4(v27 | ((HIDWORD(v27) & 1) << 32));
        objc_msgSend(a2, sel_timestamp);
        sub_22646E58C(v28);
      }
      v29 = objc_msgSend(a2, sel_camera);
      sub_22655D100();

      v30 = sub_22655D0E8();
      v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v10, 2, v30);
      if (v31)
      {
        if (v31 != 1)
        {
          sub_226518E48();
          sub_22643D748((uint64_t)v10, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
LABEL_25:
          type metadata accessor for RSFrame();
          swift_allocObject();
          v32 = a2;
          sub_2264F5F84(v32);
          v34 = v33;

          sub_226517D9C(v34);
          type metadata accessor for OUFrame();
          swift_allocObject();
          sub_2264EF70C(v32);
          sub_226517DB8(v35);
          swift_release();
          swift_release();
          return swift_release();
        }
      }
      else
      {
        sub_22643D748((uint64_t)v10, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
      }
      sub_22655C0D4();
      sub_226518B78();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      goto LABEL_25;
    }
  }
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v25 = result;
  if (MEMORY[0x22769A944](result + 40))
  {
    sub_226502B58(a2);
    swift_unknownObjectRelease();
  }
  if (*(_BYTE *)(v25 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runActive) == 1)
  {
    if (qword_25583F910 == -1)
      goto LABEL_13;
    goto LABEL_29;
  }
  return swift_release();
}

uint64_t sub_22651C1AC(uint64_t a1, void *a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = MEMORY[0x22769A944](result + 40);
    result = swift_release();
    if (v4)
    {
      sub_22650162C(a2);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

id sub_22651C3DC()
{
  return sub_22646DF78(type metadata accessor for ARInternalSessionObserverWrapper);
}

uint64_t sub_22651C3F8(void *a1, _QWORD *a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  _QWORD *v122;
  _QWORD *v123;
  uint64_t (*v124)(uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t (*v128)(uint64_t);
  _QWORD *v129;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v131;
  char v132;
  uint64_t v133;
  _BOOL8 v134;
  uint64_t v135;
  char v136;
  unint64_t v137;
  char v138;
  _QWORD *v139;
  uint64_t v140;
  BOOL v141;
  uint64_t v142;
  size_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void (*v148)(uint64_t, _QWORD *, unint64_t);
  int v149;
  char v150;
  uint64_t v151;
  _BOOL8 v152;
  uint64_t v153;
  char v154;
  unint64_t v155;
  char v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  void (*v163)(uint64_t, _QWORD *, unint64_t);
  int v164;
  char v165;
  uint64_t v166;
  _BOOL8 v167;
  uint64_t v168;
  char v169;
  unint64_t v170;
  char v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  void (*v178)(uint64_t, _QWORD *, unint64_t);
  int v179;
  char v180;
  uint64_t v181;
  _BOOL8 v182;
  uint64_t v183;
  char v184;
  unint64_t v185;
  char v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  void (*v193)(uint64_t, _QWORD *, unint64_t);
  int v194;
  char v195;
  uint64_t v196;
  _BOOL8 v197;
  uint64_t v198;
  char v199;
  unint64_t v200;
  char v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  uint64_t *v209;
  uint64_t v210;
  void (*v211)(char *, unint64_t);
  unint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  unint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  unint64_t v224;
  char v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char v231;
  unint64_t v232;
  uint64_t v233;
  _BOOL8 v234;
  uint64_t v235;
  char v236;
  unint64_t v237;
  char v238;
  _QWORD *v239;
  uint64_t v240;
  uint64_t v241;
  id v242;
  id v243;
  id v244;
  unint64_t v245;
  unint64_t v246;
  uint64_t v247;
  id v248;
  void *v249;
  char *v250;
  id v251;
  void *v252;
  char *v253;
  void (*v254)(char *, char *, unint64_t);
  uint64_t v255;
  unint64_t v256;
  unsigned int (*v257)(uint64_t, uint64_t, unint64_t);
  unint64_t v258;
  char v259;
  uint64_t v260;
  void (*v261)(uint64_t, unint64_t);
  id v262;
  void *v263;
  char *v264;
  uint64_t v265;
  char *v266;
  uint64_t v267;
  uint64_t v268;
  char v269;
  id v270;
  void *v271;
  char *v272;
  uint64_t v273;
  char *v274;
  unint64_t v275;
  uint64_t v276;
  uint64_t v277;
  char v278;
  id v279;
  id v280;
  uint64_t v281;
  id v282;
  unint64_t v283;
  unint64_t v284;
  uint64_t v285;
  id v286;
  void *v287;
  uint64_t v288;
  id v289;
  void *v290;
  char *v291;
  uint64_t v292;
  void (*v293)(char *, char *, unint64_t);
  uint64_t v294;
  unint64_t v295;
  char v296;
  uint64_t v297;
  void (*v298)(uint64_t, unint64_t);
  unsigned int v299;
  id v300;
  void *v301;
  char *v302;
  char *v303;
  char *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  char v308;
  id v309;
  void *v310;
  char *v311;
  char *v312;
  char *v313;
  uint64_t v314;
  uint64_t v315;
  char v316;
  id v317;
  id v318;
  uint64_t v319;
  id v320;
  unint64_t v321;
  unint64_t v322;
  uint64_t v323;
  id v324;
  void *v325;
  char *v326;
  id v327;
  void *v328;
  char *v329;
  void (*v330)(char *, char *, unint64_t);
  uint64_t v331;
  unint64_t v332;
  unint64_t v333;
  char v334;
  uint64_t v335;
  void (*v336)(uint64_t, unint64_t);
  id v337;
  void *v338;
  char *v339;
  char *v340;
  uint64_t v341;
  uint64_t v342;
  char v343;
  id v344;
  void *v345;
  char *v346;
  uint64_t v347;
  char *v348;
  unint64_t v349;
  uint64_t v350;
  uint64_t v351;
  char v352;
  id v353;
  uint64_t v354;
  id v355;
  void *v356;
  char *v357;
  id v358;
  void *v359;
  char *v360;
  void (*v361)(char *, char *, unint64_t);
  uint64_t v362;
  unint64_t v363;
  unint64_t v364;
  char v365;
  uint64_t v366;
  void (*v367)(uint64_t, unint64_t);
  id v368;
  void *v369;
  char *v370;
  uint64_t v371;
  char *v372;
  uint64_t v373;
  uint64_t v374;
  char v375;
  id v376;
  void *v377;
  char *v378;
  char *v379;
  uint64_t v380;
  uint64_t v381;
  char v382;
  id v383;
  uint64_t v384;
  id v385;
  void *v386;
  char *v387;
  id v388;
  void *v389;
  char *v390;
  void (*v391)(char *, char *, unint64_t);
  uint64_t v392;
  unint64_t v393;
  unint64_t v394;
  char v395;
  uint64_t v396;
  void (*v397)(uint64_t, unint64_t);
  id v398;
  void *v399;
  char *v400;
  uint64_t v401;
  char *v402;
  uint64_t v403;
  uint64_t v404;
  char v405;
  id v406;
  void *v407;
  char *v408;
  char *v409;
  uint64_t v410;
  uint64_t v411;
  char v412;
  id v413;
  unint64_t v414;
  uint64_t v415;
  id v416;
  void *v417;
  uint64_t v418;
  id v419;
  void *v420;
  char *v421;
  uint64_t v422;
  void (*v423)(char *, char *, unint64_t);
  uint64_t v424;
  unint64_t v425;
  unint64_t v426;
  char v427;
  uint64_t v428;
  void (*v429)(uint64_t, unint64_t);
  unsigned int v430;
  id v431;
  void *v432;
  char *v433;
  char *v434;
  unint64_t v435;
  int v436;
  uint64_t v437;
  uint64_t v438;
  char v439;
  id v440;
  void *v441;
  char *v442;
  uint64_t v443;
  unint64_t v444;
  unint64_t v445;
  uint64_t v446;
  uint64_t v447;
  char v448;
  unint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t result;
  _QWORD v458[2];
  char *v459;
  char *v460;
  char *v461;
  char *v462;
  char *v463;
  char *v464;
  char *v465;
  char *v466;
  char *v467;
  _QWORD *v468;
  char *v469;
  char *v470;
  char *v471;
  uint64_t Strong;
  uint64_t v473;
  id v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  char *v480;
  uint64_t v481;
  char *v482;
  char *v483;
  char *v484;
  char *v485;
  int v486;
  char *v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  char *v494;
  char *v495;
  char *v496;
  char *v497;
  uint64_t v498;
  uint64_t v499;
  char *v500;
  uint64_t v501;
  char *v502;
  char *v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  void (*v509)(uint64_t, unint64_t);
  uint64_t v510;
  unint64_t v511;
  _QWORD *v512;
  char *v513;
  char *v514;
  char *v515;
  _QWORD *v516;
  uint64_t v517;
  char *v518;
  unint64_t v519;
  uint64_t v520;
  _QWORD *v521;
  _QWORD *v522;

  v486 = a3;
  v474 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v458 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v471 = (char *)v458 - v8;
  MEMORY[0x24BDAC7A8](v9);
  v496 = (char *)v458 - v10;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v458 - v12;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v458 - v15;
  MEMORY[0x24BDAC7A8](v17);
  v497 = (char *)v458 - v18;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v458 - v20;
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)v458 - v23;
  MEMORY[0x24BDAC7A8](v25);
  v500 = (char *)v458 - v26;
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)v458 - v28;
  MEMORY[0x24BDAC7A8](v30);
  v469 = (char *)v458 - v31;
  MEMORY[0x24BDAC7A8](v32);
  v502 = (char *)v458 - v33;
  MEMORY[0x24BDAC7A8](v34);
  v467 = (char *)v458 - v35;
  MEMORY[0x24BDAC7A8](v36);
  v470 = (char *)v458 - v37;
  MEMORY[0x24BDAC7A8](v38);
  v503 = (char *)v458 - v39;
  MEMORY[0x24BDAC7A8](v40);
  v459 = (char *)v458 - v41;
  MEMORY[0x24BDAC7A8](v42);
  v460 = (char *)v458 - v43;
  MEMORY[0x24BDAC7A8](v44);
  v487 = (char *)v458 - v45;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_255842D10);
  MEMORY[0x24BDAC7A8](v46);
  v498 = (uint64_t)v458 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849AF0);
  MEMORY[0x24BDAC7A8](v48);
  v494 = (char *)v458 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v50);
  v513 = (char *)v458 - v51;
  v52 = sub_22655C140();
  v53 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v518 = (char *)v458 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v55);
  v515 = (char *)v458 - v56;
  MEMORY[0x24BDAC7A8](v57);
  v514 = (char *)v458 - v58;
  MEMORY[0x24BDAC7A8](v59);
  v499 = (uint64_t)v458 - v60;
  MEMORY[0x24BDAC7A8](v61);
  v501 = (uint64_t)v458 - v62;
  MEMORY[0x24BDAC7A8](v63);
  v504 = (uint64_t)v458 - v64;
  MEMORY[0x24BDAC7A8](v65);
  v505 = (uint64_t)v458 - v66;
  MEMORY[0x24BDAC7A8](v67);
  v69 = (char *)v458 - v68;
  v506 = type metadata accessor for CapturedRoom.Surface(0);
  v517 = *(_QWORD *)(v506 - 8);
  MEMORY[0x24BDAC7A8](v506);
  v475 = (uint64_t)v458 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v71);
  v481 = (uint64_t)v458 - v72;
  MEMORY[0x24BDAC7A8](v73);
  v476 = (uint64_t)v458 - v74;
  MEMORY[0x24BDAC7A8](v75);
  v482 = (char *)v458 - v76;
  MEMORY[0x24BDAC7A8](v77);
  v477 = (uint64_t)v458 - v78;
  MEMORY[0x24BDAC7A8](v79);
  v483 = (char *)v458 - v80;
  MEMORY[0x24BDAC7A8](v81);
  v478 = (uint64_t)v458 - v82;
  MEMORY[0x24BDAC7A8](v83);
  v485 = (char *)v458 - v84;
  MEMORY[0x24BDAC7A8](v85);
  v479 = (uint64_t)v458 - v86;
  MEMORY[0x24BDAC7A8](v87);
  v484 = (char *)v458 - v88;
  MEMORY[0x24BDAC7A8](v89);
  v495 = (char *)v458 - v90;
  MEMORY[0x24BDAC7A8](v91);
  v473 = (uint64_t)v458 - v92;
  MEMORY[0x24BDAC7A8](v93);
  v480 = (char *)v458 - v94;
  MEMORY[0x24BDAC7A8](v95);
  v511 = (unint64_t)v458 - v96;
  MEMORY[0x24BDAC7A8](v97);
  v516 = (_QWORD *)((char *)v458 - v98);
  MEMORY[0x24BDAC7A8](v99);
  v507 = (uint64_t)v458 - v100;
  MEMORY[0x24BDAC7A8](v101);
  v489 = (uint64_t)v458 - v102;
  MEMORY[0x24BDAC7A8](v103);
  v508 = (uint64_t)v458 - v104;
  MEMORY[0x24BDAC7A8](v105);
  v490 = (uint64_t)v458 - v106;
  MEMORY[0x24BDAC7A8](v107);
  v509 = (void (*)(uint64_t, unint64_t))((char *)v458 - v108);
  MEMORY[0x24BDAC7A8](v109);
  v491 = (uint64_t)v458 - v110;
  MEMORY[0x24BDAC7A8](v111);
  v510 = (uint64_t)v458 - v112;
  MEMORY[0x24BDAC7A8](v113);
  v492 = (uint64_t)v458 - v114;
  MEMORY[0x24BDAC7A8](v115);
  v512 = (_QWORD *)((char *)v458 - v116);
  MEMORY[0x24BDAC7A8](v117);
  v493 = (uint64_t)v458 - v118;
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return MEMORY[0x24BEE4AF8];
  v464 = v29;
  v466 = v24;
  v463 = v21;
  v465 = v16;
  v462 = v13;
  v461 = v6;
  v119 = *a2;
  v120 = *(char **)(*a2 + 16);
  v519 = v52;
  v520 = v53;
  v468 = a2;
  if (v120)
  {
    v488 = v493 + *(int *)(v506 + 44);
    v121 = v119 + ((*(unsigned __int8 *)(v517 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v517 + 80));
    v122 = *(_QWORD **)(v517 + 72);
    v458[1] = v119;
    swift_bridgeObjectRetain();
    v123 = (_QWORD *)MEMORY[0x24BEE4B00];
    v124 = type metadata accessor for CapturedRoom.Surface;
    do
    {
      v125 = v493;
      sub_22643D704(v121, v493, v124);
      v126 = *(_QWORD *)(v53 + 16);
      ((void (*)(char *, uint64_t, unint64_t))v126)(v69, v488, v52);
      v127 = (uint64_t)v69;
      v128 = v124;
      sub_22643F6AC(v125, (uint64_t)v512, v124);
      v129 = v123;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v522 = v123;
      v131 = v127;
      v52 = sub_226534858(v127);
      v133 = v129[2];
      v134 = (v132 & 1) == 0;
      v135 = v133 + v134;
      if (__OFADD__(v133, v134))
      {
        __break(1u);
LABEL_257:
        __break(1u);
LABEL_258:
        __break(1u);
LABEL_259:
        __break(1u);
LABEL_260:
        __break(1u);
LABEL_261:
        __break(1u);
LABEL_262:
        __break(1u);
        goto LABEL_263;
      }
      v136 = v132;
      if (v129[3] >= v135)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_22654A248();
      }
      else
      {
        sub_22654530C(v135, isUniquelyReferenced_nonNull_native);
        v137 = sub_226534858(v131);
        if ((v136 & 1) != (v138 & 1))
          goto LABEL_313;
        v52 = v137;
      }
      v124 = v128;
      v139 = v522;
      v69 = (char *)v131;
      if ((v136 & 1) != 0)
      {
        v123 = v522;
        sub_22652A288((uint64_t)v512, v522[7] + v52 * (_QWORD)v122, v124);
        v53 = v520;
      }
      else
      {
        v522[(v52 >> 6) + 8] |= 1 << v52;
        v53 = v520;
        ((void (*)(unint64_t, uint64_t, unint64_t))v126)(v139[6] + *(_QWORD *)(v520 + 72) * v52, v131, v519);
        sub_22643F6AC((uint64_t)v512, v139[7] + v52 * (_QWORD)v122, v124);
        v140 = v139[2];
        v141 = __OFADD__(v140, 1);
        v142 = v140 + 1;
        if (v141)
          goto LABEL_268;
        v139[2] = v142;
        v123 = v522;
      }
      swift_bridgeObjectRelease();
      v52 = v519;
      (*(void (**)(char *, unint64_t))(v53 + 8))(v69, v519);
      v121 += (uint64_t)v122;
      --v120;
    }
    while (v120);
    swift_bridgeObjectRelease();
    a2 = v468;
    v122 = v123;
  }
  else
  {
    v122 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v144 = a2[1];
  v120 = *(char **)(v144 + 16);
  if (v120)
  {
    v512 = (_QWORD *)(v492 + *(int *)(v506 + 44));
    v145 = v144 + ((*(unsigned __int8 *)(v517 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v517 + 80));
    v126 = *(_QWORD *)(v517 + 72);
    v493 = v144;
    swift_bridgeObjectRetain();
    v146 = v505;
    do
    {
      v147 = v492;
      sub_22643D704(v145, v492, type metadata accessor for CapturedRoom.Surface);
      v148 = *(void (**)(uint64_t, _QWORD *, unint64_t))(v53 + 16);
      v148(v146, v512, v52);
      sub_22643F6AC(v147, v510, type metadata accessor for CapturedRoom.Surface);
      v149 = swift_isUniquelyReferenced_nonNull_native();
      v522 = v122;
      v52 = sub_226534858(v146);
      v151 = v122[2];
      v152 = (v150 & 1) == 0;
      v153 = v151 + v152;
      if (__OFADD__(v151, v152))
        goto LABEL_258;
      v154 = v150;
      if (v122[3] >= v153)
      {
        if ((v149 & 1) == 0)
          sub_22654A248();
      }
      else
      {
        sub_22654530C(v153, v149);
        v155 = sub_226534858(v505);
        if ((v154 & 1) != (v156 & 1))
          goto LABEL_313;
        v52 = v155;
      }
      v53 = v520;
      v146 = v505;
      v122 = v522;
      if ((v154 & 1) != 0)
      {
        sub_22652A288(v510, v522[7] + v52 * v126, type metadata accessor for CapturedRoom.Surface);
      }
      else
      {
        v522[(v52 >> 6) + 8] |= 1 << v52;
        v148(v122[6] + *(_QWORD *)(v53 + 72) * v52, (_QWORD *)v146, v519);
        sub_22643F6AC(v510, v122[7] + v52 * v126, type metadata accessor for CapturedRoom.Surface);
        v157 = v122[2];
        v141 = __OFADD__(v157, 1);
        v158 = v157 + 1;
        if (v141)
          goto LABEL_270;
        v122[2] = v158;
        v122 = v522;
      }
      swift_bridgeObjectRelease();
      v52 = v519;
      (*(void (**)(uint64_t, unint64_t))(v53 + 8))(v146, v519);
      v145 += v126;
      --v120;
    }
    while (v120);
    swift_bridgeObjectRelease();
    a2 = v468;
  }
  v159 = a2[2];
  v120 = *(char **)(v159 + 16);
  if (v120)
  {
    v512 = (_QWORD *)(v491 + *(int *)(v506 + 44));
    v160 = v159 + ((*(unsigned __int8 *)(v517 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v517 + 80));
    v126 = *(_QWORD *)(v517 + 72);
    v510 = v159;
    swift_bridgeObjectRetain();
    v161 = v504;
    do
    {
      v162 = v491;
      sub_22643D704(v160, v491, type metadata accessor for CapturedRoom.Surface);
      v163 = *(void (**)(uint64_t, _QWORD *, unint64_t))(v53 + 16);
      v163(v161, v512, v52);
      sub_22643F6AC(v162, (uint64_t)v509, type metadata accessor for CapturedRoom.Surface);
      v164 = swift_isUniquelyReferenced_nonNull_native();
      v522 = v122;
      v52 = sub_226534858(v161);
      v166 = v122[2];
      v167 = (v165 & 1) == 0;
      v168 = v166 + v167;
      if (__OFADD__(v166, v167))
        goto LABEL_259;
      v169 = v165;
      if (v122[3] >= v168)
      {
        if ((v164 & 1) == 0)
          sub_22654A248();
      }
      else
      {
        sub_22654530C(v168, v164);
        v170 = sub_226534858(v504);
        if ((v169 & 1) != (v171 & 1))
          goto LABEL_313;
        v52 = v170;
      }
      v53 = v520;
      v161 = v504;
      v122 = v522;
      if ((v169 & 1) != 0)
      {
        sub_22652A288((uint64_t)v509, v522[7] + v52 * v126, type metadata accessor for CapturedRoom.Surface);
      }
      else
      {
        v522[(v52 >> 6) + 8] |= 1 << v52;
        v163(v122[6] + *(_QWORD *)(v53 + 72) * v52, (_QWORD *)v161, v519);
        sub_22643F6AC((uint64_t)v509, v122[7] + v52 * v126, type metadata accessor for CapturedRoom.Surface);
        v172 = v122[2];
        v141 = __OFADD__(v172, 1);
        v173 = v172 + 1;
        if (v141)
          goto LABEL_271;
        v122[2] = v173;
        v122 = v522;
      }
      swift_bridgeObjectRelease();
      v52 = v519;
      (*(void (**)(uint64_t, unint64_t))(v53 + 8))(v161, v519);
      v160 += v126;
      --v120;
    }
    while (v120);
    swift_bridgeObjectRelease();
    a2 = v468;
  }
  v174 = a2[3];
  v120 = *(char **)(v174 + 16);
  if (v120)
  {
    v512 = (_QWORD *)(v490 + *(int *)(v506 + 44));
    v175 = v174 + ((*(unsigned __int8 *)(v517 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v517 + 80));
    v126 = *(_QWORD *)(v517 + 72);
    v510 = v174;
    swift_bridgeObjectRetain();
    v176 = v501;
    do
    {
      v177 = v490;
      sub_22643D704(v175, v490, type metadata accessor for CapturedRoom.Surface);
      v178 = *(void (**)(uint64_t, _QWORD *, unint64_t))(v53 + 16);
      v178(v176, v512, v52);
      sub_22643F6AC(v177, v508, type metadata accessor for CapturedRoom.Surface);
      v179 = swift_isUniquelyReferenced_nonNull_native();
      v522 = v122;
      v52 = sub_226534858(v176);
      v181 = v122[2];
      v182 = (v180 & 1) == 0;
      v183 = v181 + v182;
      if (__OFADD__(v181, v182))
        goto LABEL_260;
      v184 = v180;
      if (v122[3] >= v183)
      {
        if ((v179 & 1) == 0)
          sub_22654A248();
      }
      else
      {
        sub_22654530C(v183, v179);
        v185 = sub_226534858(v501);
        if ((v184 & 1) != (v186 & 1))
          goto LABEL_313;
        v52 = v185;
      }
      v53 = v520;
      v176 = v501;
      v122 = v522;
      if ((v184 & 1) != 0)
      {
        sub_22652A288(v508, v522[7] + v52 * v126, type metadata accessor for CapturedRoom.Surface);
      }
      else
      {
        v522[(v52 >> 6) + 8] |= 1 << v52;
        v178(v122[6] + *(_QWORD *)(v53 + 72) * v52, (_QWORD *)v176, v519);
        sub_22643F6AC(v508, v122[7] + v52 * v126, type metadata accessor for CapturedRoom.Surface);
        v187 = v122[2];
        v141 = __OFADD__(v187, 1);
        v188 = v187 + 1;
        if (v141)
          goto LABEL_272;
        v122[2] = v188;
        v122 = v522;
      }
      swift_bridgeObjectRelease();
      v52 = v519;
      (*(void (**)(uint64_t, unint64_t))(v53 + 8))(v176, v519);
      v175 += v126;
      --v120;
    }
    while (v120);
    swift_bridgeObjectRelease();
    a2 = v468;
  }
  v189 = a2[4];
  v120 = *(char **)(v189 + 16);
  if (v120)
  {
    v512 = (_QWORD *)(v489 + *(int *)(v506 + 44));
    v190 = v189 + ((*(unsigned __int8 *)(v517 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v517 + 80));
    v126 = *(_QWORD *)(v517 + 72);
    v510 = v189;
    swift_bridgeObjectRetain();
    v191 = v499;
    do
    {
      v192 = v489;
      sub_22643D704(v190, v489, type metadata accessor for CapturedRoom.Surface);
      v193 = *(void (**)(uint64_t, _QWORD *, unint64_t))(v53 + 16);
      v193(v191, v512, v52);
      sub_22643F6AC(v192, v507, type metadata accessor for CapturedRoom.Surface);
      v194 = swift_isUniquelyReferenced_nonNull_native();
      v522 = v122;
      v52 = sub_226534858(v191);
      v196 = v122[2];
      v197 = (v195 & 1) == 0;
      v198 = v196 + v197;
      if (__OFADD__(v196, v197))
        goto LABEL_261;
      v199 = v195;
      if (v122[3] >= v198)
      {
        if ((v194 & 1) == 0)
          sub_22654A248();
      }
      else
      {
        sub_22654530C(v198, v194);
        v200 = sub_226534858(v499);
        if ((v199 & 1) != (v201 & 1))
          goto LABEL_313;
        v52 = v200;
      }
      v53 = v520;
      v191 = v499;
      v122 = v522;
      if ((v199 & 1) != 0)
      {
        sub_22652A288(v507, v522[7] + v52 * v126, type metadata accessor for CapturedRoom.Surface);
      }
      else
      {
        v522[(v52 >> 6) + 8] |= 1 << v52;
        v193(v122[6] + *(_QWORD *)(v53 + 72) * v52, (_QWORD *)v191, v519);
        sub_22643F6AC(v507, v122[7] + v52 * v126, type metadata accessor for CapturedRoom.Surface);
        v202 = v122[2];
        v141 = __OFADD__(v202, 1);
        v203 = v202 + 1;
        if (v141)
          goto LABEL_273;
        v122[2] = v203;
        v122 = v522;
      }
      swift_bridgeObjectRelease();
      v52 = v519;
      (*(void (**)(uint64_t, unint64_t))(v53 + 8))(v191, v519);
      v190 += v126;
      --v120;
    }
    while (v120);
    swift_bridgeObjectRelease();
  }
  v126 = Strong + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_allUuidToSurfaces;
  swift_beginAccess();
  v204 = *(_QWORD *)v126;
  v205 = *(_QWORD *)(*(_QWORD *)v126 + 64);
  v507 = *(_QWORD *)v126 + 64;
  v206 = 1 << *(_BYTE *)(v204 + 32);
  v207 = -1;
  if (v206 < 64)
    v207 = ~(-1 << v206);
  v208 = v207 & v205;
  v508 = (unint64_t)(v206 + 63) >> 6;
  v509 = (void (*)(uint64_t, unint64_t))v204;
  v505 = v508 - 1;
  swift_bridgeObjectRetain();
  v510 = 0;
  v512 = (_QWORD *)MEMORY[0x24BEE4B00];
  v209 = &qword_255849AF8;
  v120 = v494;
  v210 = (uint64_t)v513;
  while (1)
  {
    while (1)
    {
      if (v208)
      {
        v212 = __clz(__rbit64(v208));
        v208 &= v208 - 1;
        v213 = v212 | (v510 << 6);
LABEL_81:
        v214 = (uint64_t)v509;
        (*(void (**)(char *, uint64_t, unint64_t))(v53 + 16))(v120, *((_QWORD *)v509 + 6) + *(_QWORD *)(v53 + 72) * v213, v52);
        v215 = *(_QWORD *)(v214 + 56) + *(_QWORD *)(v517 + 72) * v213;
        v216 = __swift_instantiateConcreteTypeFromMangledName(v209);
        sub_22643D704(v215, (uint64_t)&v120[*(int *)(v216 + 48)], type metadata accessor for CapturedRoom.Surface);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v216 - 8) + 56))(v120, 0, 1, v216);
        v210 = (uint64_t)v513;
        goto LABEL_100;
      }
      v217 = v510 + 1;
      if (__OFADD__(v510, 1))
        goto LABEL_267;
      if (v217 < v508)
      {
        v218 = *(_QWORD *)(v507 + 8 * v217);
        if (!v218)
        {
          v219 = v510 + 2;
          ++v510;
          if (v217 + 1 >= v508)
            goto LABEL_99;
          v218 = *(_QWORD *)(v507 + 8 * v219);
          if (!v218)
          {
            v510 = v217 + 1;
            if (v217 + 2 >= v508)
              goto LABEL_99;
            v218 = *(_QWORD *)(v507 + 8 * (v217 + 2));
            if (v218)
            {
              v217 += 2;
              goto LABEL_85;
            }
            v219 = v217 + 3;
            v510 = v217 + 2;
            if (v217 + 3 >= v508)
              goto LABEL_99;
            v218 = *(_QWORD *)(v507 + 8 * v219);
            if (!v218)
            {
              while (1)
              {
                v217 = v219 + 1;
                if (__OFADD__(v219, 1))
                  break;
                if (v217 >= v508)
                {
                  v510 = v505;
                  goto LABEL_99;
                }
                v218 = *(_QWORD *)(v507 + 8 * v217);
                ++v219;
                if (v218)
                  goto LABEL_85;
              }
              __break(1u);
LABEL_277:
              (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(v520 + 56))(v503, 1, 1, v52);
LABEL_278:
              __break(1u);
LABEL_279:
              (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(v520 + 56))(v502, 1, 1, v52);
LABEL_280:
              __break(1u);
LABEL_281:
              (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(v520 + 56))(v500, 1, 1, v52);
LABEL_282:
              __break(1u);
LABEL_283:
              (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(v520 + 56))(v497, 1, 1, v52);
LABEL_284:
              __break(1u);
LABEL_285:
              (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(v520 + 56))(v496, 1, 1, v52);
LABEL_286:
              __break(1u);
LABEL_287:
              (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(v520 + 56))(v487, 1, 1, v52);
LABEL_288:
              __break(1u);
LABEL_289:
              ((void (*)(char *, uint64_t, uint64_t, unint64_t))v120)(v470, 1, 1, v519);
LABEL_290:
              __break(1u);
LABEL_291:
              ((void (*)(char *, uint64_t, uint64_t, unint64_t))v120)(v469, 1, 1, v519);
LABEL_292:
              __break(1u);
LABEL_293:
              ((void (*)(char *, uint64_t, uint64_t, unint64_t))v120)(v466, 1, 1, v519);
LABEL_294:
              __break(1u);
LABEL_295:
              ((void (*)(char *, uint64_t, uint64_t, unint64_t))v120)(v465, 1, 1, v519);
LABEL_296:
              __break(1u);
LABEL_297:
              ((void (*)(uint64_t, uint64_t, uint64_t, unint64_t))v120)(v126, 1, 1, v519);
LABEL_298:
              __break(1u);
LABEL_299:
              ((void (*)(char *, uint64_t, uint64_t, unint64_t))v120)(v467, 1, 1, v519);
LABEL_300:
              __break(1u);
LABEL_301:
              ((void (*)(char *, uint64_t, uint64_t, unint64_t))v120)(v464, 1, 1, v519);
LABEL_302:
              __break(1u);
LABEL_303:
              ((void (*)(char *, uint64_t, uint64_t, unint64_t))v120)(v463, 1, 1, v519);
LABEL_304:
              __break(1u);
LABEL_305:
              ((void (*)(char *, uint64_t, uint64_t, unint64_t))v120)(v462, 1, 1, v519);
LABEL_306:
              __break(1u);
LABEL_307:
              ((void (*)(char *, uint64_t, uint64_t, unint64_t))v120)(v461, 1, 1, v519);
LABEL_308:
              __break(1u);
LABEL_309:
              ((void (*)(char *, uint64_t, uint64_t, unint64_t))v120)(v460, 1, 1, v519);
LABEL_310:
              __break(1u);
LABEL_311:
              ((void (*)(char *, uint64_t, uint64_t, unint64_t))v120)(v459, 1, 1, v519);
LABEL_312:
              __break(1u);
LABEL_313:
              result = sub_22655D5A4();
              __break(1u);
              return result;
            }
          }
          v217 = v219;
        }
LABEL_85:
        v208 = (v218 - 1) & v218;
        v213 = __clz(__rbit64(v218)) + (v217 << 6);
        v510 = v217;
        goto LABEL_81;
      }
LABEL_99:
      v220 = __swift_instantiateConcreteTypeFromMangledName(v209);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v220 - 8) + 56))(v120, 1, 1, v220);
      v208 = 0;
LABEL_100:
      sub_226446554((uint64_t)v120, v210, &qword_255849AF0);
      v221 = __swift_instantiateConcreteTypeFromMangledName(v209);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v221 - 8) + 48))(v210, 1, v221) == 1)
      {
        swift_release();
        if (*(_BYTE *)(Strong + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration + 3) == 1)
        {
          v242 = v474;
          v243 = objc_msgSend(v474, sel_walls);
          sub_22643F548(0, (unint64_t *)&qword_2558480B0);
          v126 = sub_22655CECC();

          v244 = objc_msgSend(v242, sel_curvedWalls);
          sub_22643F548(0, &qword_2558480B8);
          v245 = sub_22655CECC();

          if (v245 >> 62)
            goto LABEL_275;
          swift_bridgeObjectRetain();
          sub_22655D568();
          v246 = v245;
          goto LABEL_116;
        }
        v515 = (char *)MEMORY[0x24BEE4B00];
        v516 = (_QWORD *)MEMORY[0x24BEE4B00];
        goto LABEL_141;
      }
      v126 = (uint64_t)v209;
      v222 = v210 + *(int *)(v221 + 48);
      v223 = (uint64_t)v514;
      (*(void (**)(char *, uint64_t, unint64_t))(v53 + 32))(v514, v210, v52);
      sub_22643F6AC(v222, (uint64_t)v516, type metadata accessor for CapturedRoom.Surface);
      if (!v122[2])
        break;
      v224 = sub_226534858(v223);
      if ((v225 & 1) == 0)
        break;
      v226 = v517;
      v227 = v498;
      sub_22643D704(v122[7] + *(_QWORD *)(v517 + 72) * v224, v498, type metadata accessor for CapturedRoom.Surface);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v226 + 56))(v227, 0, 1, v506);
      sub_22643D7E4(v227, &qword_255842D10);
      sub_22643D748((uint64_t)v516, type metadata accessor for CapturedRoom.Surface);
      v210 = (uint64_t)v513;
      v209 = (uint64_t *)v126;
      (*(void (**)(char *, unint64_t))(v53 + 8))(v514, v52);
    }
    v228 = v498;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v517 + 56))(v498, 1, 1, v506);
    sub_22643D7E4(v228, &qword_255842D10);
    v120 = *(char **)(v53 + 16);
    v229 = (uint64_t)v515;
    ((void (*)(char *, uint64_t, unint64_t))v120)(v515, v223, v52);
    sub_22643D704((uint64_t)v516, v511, type metadata accessor for CapturedRoom.Surface);
    v230 = (uint64_t)v512;
    v52 = swift_isUniquelyReferenced_nonNull_native();
    v521 = (_QWORD *)v230;
    v232 = sub_226534858(v229);
    v233 = *(_QWORD *)(v230 + 16);
    v234 = (v231 & 1) == 0;
    v235 = v233 + v234;
    if (__OFADD__(v233, v234))
      goto LABEL_257;
    v236 = v231;
    if (*(_QWORD *)(v230 + 24) >= v235)
    {
      v209 = (uint64_t *)v126;
      if ((v52 & 1) == 0)
        sub_22654A248();
    }
    else
    {
      sub_22654530C(v235, v52);
      v237 = sub_226534858((uint64_t)v515);
      if ((v236 & 1) != (v238 & 1))
        goto LABEL_313;
      v232 = v237;
      v209 = (uint64_t *)v126;
    }
    v52 = v519;
    v239 = v521;
    if ((v236 & 1) != 0)
    {
      v512 = v521;
      sub_22652A288(v511, v521[7] + *(_QWORD *)(v517 + 72) * v232, type metadata accessor for CapturedRoom.Surface);
      v53 = v520;
      goto LABEL_78;
    }
    v521[(v232 >> 6) + 8] |= 1 << v232;
    v53 = v520;
    ((void (*)(unint64_t, char *, unint64_t))v120)(v239[6] + *(_QWORD *)(v520 + 72) * v232, v515, v52);
    sub_22643F6AC(v511, v239[7] + *(_QWORD *)(v517 + 72) * v232, type metadata accessor for CapturedRoom.Surface);
    v240 = v239[2];
    v141 = __OFADD__(v240, 1);
    v241 = v240 + 1;
    if (v141)
      break;
    v239[2] = v241;
    v512 = v521;
LABEL_78:
    swift_bridgeObjectRelease();
    v211 = *(void (**)(char *, unint64_t))(v53 + 8);
    v211(v515, v52);
    sub_22643D748((uint64_t)v516, type metadata accessor for CapturedRoom.Surface);
    v120 = v494;
    v210 = (uint64_t)v513;
    v211(v514, v52);
  }
  while (1)
  {
    __break(1u);
LABEL_270:
    __break(1u);
LABEL_271:
    __break(1u);
LABEL_272:
    __break(1u);
LABEL_273:
    __break(1u);
    while (1)
    {
      __break(1u);
LABEL_275:
      swift_bridgeObjectRetain();
      v246 = sub_22655D3F4();
      swift_bridgeObjectRelease();
LABEL_116:
      swift_bridgeObjectRelease();
      v521 = (_QWORD *)v126;
      sub_22646B848(v246);
      v126 = (uint64_t)v521;
      v514 = (char *)sub_2265222D8((unint64_t)v521);
      if (!v514)
        break;
      v513 = (char *)(v126 & 0xC000000000000001);
      v247 = 4;
      v515 = (char *)MEMORY[0x24BEE4B00];
      v516 = (_QWORD *)MEMORY[0x24BEE4B00];
      v511 = v126;
      while (1)
      {
        v248 = v513 ? (id)MEMORY[0x2276999E4](v247 - 4, v126) : *(id *)(v126 + 8 * v247);
        v249 = v248;
        v250 = (char *)(v247 - 3);
        if (__OFADD__(v247 - 4, 1))
          break;
        v251 = objc_msgSend(v248, sel_identifier);
        if (!v251)
          goto LABEL_287;
        v252 = v251;
        v253 = v518;
        sub_22655C110();

        v126 = v520;
        v254 = *(void (**)(char *, char *, unint64_t))(v520 + 32);
        v255 = (uint64_t)v487;
        v254(v487, v253, v52);
        v120 = *(char **)(v126 + 56);
        ((void (*)(uint64_t, _QWORD, uint64_t, unint64_t))v120)(v255, 0, 1, v52);
        v256 = v52;
        v257 = *(unsigned int (**)(uint64_t, uint64_t, unint64_t))(v126 + 48);
        if (v257(v255, 1, v256) == 1)
          goto LABEL_288;
        if (v122[2] && (v258 = sub_226534858(v255), v255 = (uint64_t)v487, (v259 & 1) != 0))
        {
          v260 = v473;
          sub_22643D704(v122[7] + *(_QWORD *)(v517 + 72) * v258, v473, type metadata accessor for CapturedRoom.Surface);
          sub_22643F6AC(v260, (uint64_t)v480, type metadata accessor for CapturedRoom.Surface);
          v261 = *(void (**)(uint64_t, unint64_t))(v520 + 8);
          v261(v255, v519);
          if (objc_msgSend(v249, sel_individualUpdate))
          {
            if (objc_msgSend(v249, sel_individualUpdate) == 1 || (v486 & 1) != 0)
            {
              v510 = (uint64_t)v261;
              v270 = objc_msgSend(v249, sel_identifier);
              if (!v270)
                goto LABEL_311;
              v271 = v270;
              v272 = v518;
              sub_22655C110();

              v273 = (uint64_t)v459;
              v274 = v272;
              v275 = v519;
              v254(v459, v274, v519);
              ((void (*)(uint64_t, _QWORD, uint64_t, unint64_t))v120)(v273, 0, 1, v275);
              if (v257(v273, 1, v275) == 1)
                goto LABEL_312;
              v120 = v480;
              v276 = (uint64_t)v495;
              sub_22643D704((uint64_t)v480, (uint64_t)v495, type metadata accessor for CapturedRoom.Surface);
              v277 = (uint64_t)v515;
              v278 = swift_isUniquelyReferenced_nonNull_native();
              v521 = (_QWORD *)v277;
              sub_2265238A4(v276, v273, v278, (void (*)(void))sub_22654A248, (void (*)(void))sub_22654530C, type metadata accessor for CapturedRoom.Surface);
              v515 = (char *)v521;
              swift_bridgeObjectRelease();
              ((void (*)(uint64_t, unint64_t))v510)(v273, v275);

              sub_22643D748((uint64_t)v120, type metadata accessor for CapturedRoom.Surface);
              v52 = v275;
            }
            else
            {
              sub_22643D748((uint64_t)v480, type metadata accessor for CapturedRoom.Surface);

              v52 = v519;
            }
          }
          else
          {
            v262 = objc_msgSend(v249, sel_identifier);
            if (!v262)
              goto LABEL_309;
            v263 = v262;
            v510 = (uint64_t)v261;
            v264 = v518;
            sub_22655C110();

            v265 = (uint64_t)v460;
            v266 = (char *)v519;
            v254(v460, v264, v519);
            ((void (*)(uint64_t, _QWORD, uint64_t, char *))v120)(v265, 0, 1, v266);
            v120 = v266;
            if (v257(v265, 1, (unint64_t)v266) == 1)
              goto LABEL_310;
            v267 = (uint64_t)v495;
            sub_22643D704((uint64_t)v480, (uint64_t)v495, type metadata accessor for CapturedRoom.Surface);
            v268 = (uint64_t)v516;
            v269 = swift_isUniquelyReferenced_nonNull_native();
            v521 = (_QWORD *)v268;
            sub_2265238A4(v267, v265, v269, (void (*)(void))sub_22654A248, (void (*)(void))sub_22654530C, type metadata accessor for CapturedRoom.Surface);
            v516 = v521;
            swift_bridgeObjectRelease();
            ((void (*)(uint64_t, char *))v510)(v265, v120);

            sub_22643D748((uint64_t)v480, type metadata accessor for CapturedRoom.Surface);
            v52 = (unint64_t)v120;
          }
        }
        else
        {

          v52 = v519;
          (*(void (**)(uint64_t, unint64_t))(v520 + 8))(v255, v519);
        }
        ++v247;
        v126 = v511;
        if (v250 == v514)
          goto LABEL_140;
      }
    }
    v515 = (char *)MEMORY[0x24BEE4B00];
    v516 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_140:
    swift_bridgeObjectRelease();
LABEL_141:
    v279 = v474;
    v280 = objc_msgSend(v474, sel_doors);
    v509 = (void (*)(uint64_t, unint64_t))sub_22643F548(0, (unint64_t *)&qword_2558480B0);
    v281 = sub_22655CECC();

    v282 = objc_msgSend(v279, sel_curvedDoors);
    v508 = sub_22643F548(0, &qword_2558480B8);
    v283 = sub_22655CECC();

    v284 = sub_22654F4E8(v283);
    swift_bridgeObjectRelease();
    v521 = (_QWORD *)v281;
    sub_22646B848(v284);
    v126 = (uint64_t)v521;
    v514 = (char *)sub_2265222D8((unint64_t)v521);
    if (v514)
    {
      v513 = (char *)(v126 & 0xC000000000000001);
      v285 = 4;
      v511 = v126;
      do
      {
        if (v513)
          v286 = (id)MEMORY[0x2276999E4](v285 - 4, v126);
        else
          v286 = *(id *)(v126 + 8 * v285);
        v287 = v286;
        v288 = v285 - 3;
        if (__OFADD__(v285 - 4, 1))
          goto LABEL_262;
        v289 = objc_msgSend(v286, sel_identifier);
        if (!v289)
          goto LABEL_277;
        v290 = v289;
        v291 = v518;
        sub_22655C110();

        v292 = v520;
        v293 = *(void (**)(char *, char *, unint64_t))(v520 + 32);
        v294 = (uint64_t)v503;
        v293(v503, v291, v52);
        v120 = *(char **)(v292 + 56);
        ((void (*)(uint64_t, _QWORD, uint64_t, unint64_t))v120)(v294, 0, 1, v52);
        v126 = *(_QWORD *)(v292 + 48);
        if (((unsigned int (*)(uint64_t, uint64_t, unint64_t))v126)(v294, 1, v52) == 1)
          goto LABEL_278;
        if (v122[2] && (v295 = sub_226534858(v294), v294 = (uint64_t)v503, (v296 & 1) != 0))
        {
          v510 = v285 - 3;
          v297 = v479;
          sub_22643D704(v122[7] + *(_QWORD *)(v517 + 72) * v295, v479, type metadata accessor for CapturedRoom.Surface);
          sub_22643F6AC(v297, (uint64_t)v484, type metadata accessor for CapturedRoom.Surface);
          v298 = *(void (**)(uint64_t, unint64_t))(v520 + 8);
          v298(v294, v52);
          if (!objc_msgSend(v287, sel_individualUpdate))
          {
            v300 = objc_msgSend(v287, sel_identifier);
            if (!v300)
              goto LABEL_289;
            v301 = v300;
            v302 = v518;
            sub_22655C110();

            v303 = v470;
            v304 = v302;
            v52 = v519;
            v293(v470, v304, v519);
            v305 = (uint64_t)v303;
            ((void (*)(char *, _QWORD, uint64_t, unint64_t))v120)(v303, 0, 1, v52);
            if (((unsigned int (*)(char *, uint64_t, unint64_t))v126)(v303, 1, v52) == 1)
              goto LABEL_290;
            v120 = v484;
            v306 = (uint64_t)v495;
            sub_22643D704((uint64_t)v484, (uint64_t)v495, type metadata accessor for CapturedRoom.Surface);
            v307 = (uint64_t)v516;
            v308 = swift_isUniquelyReferenced_nonNull_native();
            v521 = (_QWORD *)v307;
            sub_2265238A4(v306, v305, v308, (void (*)(void))sub_22654A248, (void (*)(void))sub_22654530C, type metadata accessor for CapturedRoom.Surface);
            v516 = v521;
LABEL_163:
            swift_bridgeObjectRelease();
            v298(v305, v52);

            sub_22643D748((uint64_t)v120, type metadata accessor for CapturedRoom.Surface);
            v288 = v510;
            goto LABEL_144;
          }
          v299 = objc_msgSend(v287, sel_individualUpdate);
          v288 = v510;
          if (v299 == 1 || (v486 & 1) != 0)
          {
            v309 = objc_msgSend(v287, sel_identifier);
            if (!v309)
              goto LABEL_299;
            v310 = v309;
            v311 = v518;
            sub_22655C110();

            v312 = v467;
            v313 = v311;
            v52 = v519;
            v293(v467, v313, v519);
            v305 = (uint64_t)v312;
            ((void (*)(char *, _QWORD, uint64_t, unint64_t))v120)(v312, 0, 1, v52);
            if (((unsigned int (*)(char *, uint64_t, unint64_t))v126)(v312, 1, v52) == 1)
              goto LABEL_300;
            v120 = v484;
            v314 = (uint64_t)v495;
            sub_22643D704((uint64_t)v484, (uint64_t)v495, type metadata accessor for CapturedRoom.Surface);
            v315 = (uint64_t)v515;
            v316 = swift_isUniquelyReferenced_nonNull_native();
            v521 = (_QWORD *)v315;
            sub_2265238A4(v314, v305, v316, (void (*)(void))sub_22654A248, (void (*)(void))sub_22654530C, type metadata accessor for CapturedRoom.Surface);
            v515 = (char *)v521;
            goto LABEL_163;
          }
          sub_22643D748((uint64_t)v484, type metadata accessor for CapturedRoom.Surface);

          v52 = v519;
        }
        else
        {

          (*(void (**)(uint64_t, unint64_t))(v520 + 8))(v294, v52);
        }
LABEL_144:
        ++v285;
        v126 = v511;
      }
      while ((char *)v288 != v514);
    }
    swift_bridgeObjectRelease();
    v317 = v474;
    v318 = objc_msgSend(v474, sel_windows);
    v319 = sub_22655CECC();

    v320 = objc_msgSend(v317, sel_curvedWindows);
    v321 = sub_22655CECC();

    v322 = sub_22654F4E8(v321);
    swift_bridgeObjectRelease();
    v521 = (_QWORD *)v319;
    sub_22646B848(v322);
    v126 = (uint64_t)v521;
    v514 = (char *)sub_2265222D8((unint64_t)v521);
    if (v514)
    {
      v513 = (char *)(v126 & 0xC000000000000001);
      v323 = 4;
      v511 = v126;
      while (1)
      {
        v324 = v513 ? (id)MEMORY[0x2276999E4](v323 - 4, v126) : *(id *)(v126 + 8 * v323);
        v325 = v324;
        v326 = (char *)(v323 - 3);
        if (__OFADD__(v323 - 4, 1))
          break;
        v327 = objc_msgSend(v324, sel_identifier);
        if (!v327)
          goto LABEL_279;
        v328 = v327;
        v329 = v518;
        sub_22655C110();

        v126 = v520;
        v330 = *(void (**)(char *, char *, unint64_t))(v520 + 32);
        v331 = (uint64_t)v502;
        v330(v502, v329, v52);
        v120 = *(char **)(v126 + 56);
        ((void (*)(uint64_t, _QWORD, uint64_t, unint64_t))v120)(v331, 0, 1, v52);
        v332 = v52;
        v52 = *(_QWORD *)(v126 + 48);
        if (((unsigned int (*)(uint64_t, uint64_t, unint64_t))v52)(v331, 1, v332) == 1)
          goto LABEL_280;
        if (v122[2] && (v333 = sub_226534858(v331), v331 = (uint64_t)v502, (v334 & 1) != 0))
        {
          v335 = v478;
          sub_22643D704(v122[7] + *(_QWORD *)(v517 + 72) * v333, v478, type metadata accessor for CapturedRoom.Surface);
          sub_22643F6AC(v335, (uint64_t)v485, type metadata accessor for CapturedRoom.Surface);
          v336 = *(void (**)(uint64_t, unint64_t))(v520 + 8);
          v336(v331, v519);
          v126 = (uint64_t)&selRef_session_didUpdateTextCoaching_;
          if (objc_msgSend(v325, sel_individualUpdate))
          {
            if (objc_msgSend(v325, sel_individualUpdate) == 1 || (v486 & 1) != 0)
            {
              v510 = (uint64_t)v336;
              v344 = objc_msgSend(v325, sel_identifier);
              if (!v344)
                goto LABEL_301;
              v345 = v344;
              v346 = v518;
              sub_22655C110();

              v347 = (uint64_t)v464;
              v348 = v346;
              v349 = v519;
              v330(v464, v348, v519);
              ((void (*)(uint64_t, _QWORD, uint64_t, unint64_t))v120)(v347, 0, 1, v349);
              if (((unsigned int (*)(uint64_t, uint64_t, unint64_t))v52)(v347, 1, v349) == 1)
                goto LABEL_302;
              v120 = v485;
              v350 = (uint64_t)v495;
              sub_22643D704((uint64_t)v485, (uint64_t)v495, type metadata accessor for CapturedRoom.Surface);
              v351 = (uint64_t)v515;
              v352 = swift_isUniquelyReferenced_nonNull_native();
              v521 = (_QWORD *)v351;
              sub_2265238A4(v350, v347, v352, (void (*)(void))sub_22654A248, (void (*)(void))sub_22654530C, type metadata accessor for CapturedRoom.Surface);
              v515 = (char *)v521;
              swift_bridgeObjectRelease();
              ((void (*)(uint64_t, unint64_t))v510)(v347, v349);

              sub_22643D748((uint64_t)v120, type metadata accessor for CapturedRoom.Surface);
              v52 = v349;
            }
            else
            {
              sub_22643D748((uint64_t)v485, type metadata accessor for CapturedRoom.Surface);

              v52 = v519;
            }
          }
          else
          {
            v337 = objc_msgSend(v325, sel_identifier);
            if (!v337)
              goto LABEL_291;
            v338 = v337;
            v510 = (uint64_t)v336;
            v339 = v518;
            sub_22655C110();

            v126 = (uint64_t)v469;
            v340 = (char *)v519;
            v330(v469, v339, v519);
            ((void (*)(uint64_t, _QWORD, uint64_t, char *))v120)(v126, 0, 1, v340);
            v120 = v340;
            if (((unsigned int (*)(uint64_t, uint64_t, char *))v52)(v126, 1, v340) == 1)
              goto LABEL_292;
            v341 = (uint64_t)v495;
            sub_22643D704((uint64_t)v485, (uint64_t)v495, type metadata accessor for CapturedRoom.Surface);
            v342 = (uint64_t)v516;
            v343 = swift_isUniquelyReferenced_nonNull_native();
            v521 = (_QWORD *)v342;
            sub_2265238A4(v341, v126, v343, (void (*)(void))sub_22654A248, (void (*)(void))sub_22654530C, type metadata accessor for CapturedRoom.Surface);
            v516 = v521;
            swift_bridgeObjectRelease();
            ((void (*)(uint64_t, char *))v510)(v126, v120);

            sub_22643D748((uint64_t)v485, type metadata accessor for CapturedRoom.Surface);
            v52 = (unint64_t)v120;
          }
        }
        else
        {

          v52 = v519;
          (*(void (**)(uint64_t, unint64_t))(v520 + 8))(v331, v519);
        }
        ++v323;
        v126 = v511;
        if (v326 == v514)
          goto LABEL_186;
      }
LABEL_263:
      __break(1u);
LABEL_264:
      __break(1u);
LABEL_265:
      __break(1u);
      goto LABEL_266;
    }
LABEL_186:
    swift_bridgeObjectRelease();
    v353 = objc_msgSend(v474, sel_opendoors);
    v126 = sub_22655CECC();

    v514 = (char *)sub_2265222D8(v126);
    if (v514)
    {
      v513 = (char *)(v126 & 0xC000000000000001);
      v354 = 4;
      v511 = v126;
      do
      {
        if (v513)
          v355 = (id)MEMORY[0x2276999E4](v354 - 4, v126);
        else
          v355 = *(id *)(v126 + 8 * v354);
        v356 = v355;
        v357 = (char *)(v354 - 3);
        if (__OFADD__(v354 - 4, 1))
          goto LABEL_264;
        v358 = objc_msgSend(v355, sel_identifier);
        if (!v358)
          goto LABEL_281;
        v359 = v358;
        v360 = v518;
        sub_22655C110();

        v126 = v520;
        v361 = *(void (**)(char *, char *, unint64_t))(v520 + 32);
        v362 = (uint64_t)v500;
        v361(v500, v360, v52);
        v120 = *(char **)(v126 + 56);
        ((void (*)(uint64_t, _QWORD, uint64_t, unint64_t))v120)(v362, 0, 1, v52);
        v363 = v52;
        v52 = *(_QWORD *)(v126 + 48);
        if (((unsigned int (*)(uint64_t, uint64_t, unint64_t))v52)(v362, 1, v363) == 1)
          goto LABEL_282;
        if (v122[2] && (v364 = sub_226534858(v362), v362 = (uint64_t)v500, (v365 & 1) != 0))
        {
          v366 = v477;
          sub_22643D704(v122[7] + *(_QWORD *)(v517 + 72) * v364, v477, type metadata accessor for CapturedRoom.Surface);
          sub_22643F6AC(v366, (uint64_t)v483, type metadata accessor for CapturedRoom.Surface);
          v367 = *(void (**)(uint64_t, unint64_t))(v520 + 8);
          v367(v362, v519);
          v126 = (uint64_t)&selRef_session_didUpdateTextCoaching_;
          if (!objc_msgSend(v356, sel_individualUpdate))
          {
            v510 = (uint64_t)v367;
            v368 = objc_msgSend(v356, sel_identifier);
            if (!v368)
              goto LABEL_293;
            v369 = v368;
            v370 = v518;
            sub_22655C110();

            v371 = (uint64_t)v466;
            v372 = v370;
            v126 = v519;
            v361(v466, v372, v519);
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v120)(v371, 0, 1, v126);
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v52)(v371, 1, v126) == 1)
              goto LABEL_294;
            v120 = v483;
            v373 = (uint64_t)v495;
            sub_22643D704((uint64_t)v483, (uint64_t)v495, type metadata accessor for CapturedRoom.Surface);
            v374 = (uint64_t)v516;
            v375 = swift_isUniquelyReferenced_nonNull_native();
            v521 = (_QWORD *)v374;
            sub_2265238A4(v373, v371, v375, (void (*)(void))sub_22654A248, (void (*)(void))sub_22654530C, type metadata accessor for CapturedRoom.Surface);
            v516 = v521;
LABEL_208:
            swift_bridgeObjectRelease();
            ((void (*)(uint64_t, uint64_t))v510)(v371, v126);

            sub_22643D748((uint64_t)v120, type metadata accessor for CapturedRoom.Surface);
            v52 = v126;
            goto LABEL_189;
          }
          if (objc_msgSend(v356, sel_individualUpdate) == 1 || (v486 & 1) != 0)
          {
            v510 = (uint64_t)v367;
            v376 = objc_msgSend(v356, sel_identifier);
            if (!v376)
              goto LABEL_303;
            v377 = v376;
            v378 = v518;
            sub_22655C110();

            v371 = (uint64_t)v463;
            v379 = v378;
            v126 = v519;
            v361(v463, v379, v519);
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v120)(v371, 0, 1, v126);
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v52)(v371, 1, v126) == 1)
              goto LABEL_304;
            v120 = v483;
            v380 = (uint64_t)v495;
            sub_22643D704((uint64_t)v483, (uint64_t)v495, type metadata accessor for CapturedRoom.Surface);
            v381 = (uint64_t)v515;
            v382 = swift_isUniquelyReferenced_nonNull_native();
            v521 = (_QWORD *)v381;
            sub_2265238A4(v380, v371, v382, (void (*)(void))sub_22654A248, (void (*)(void))sub_22654530C, type metadata accessor for CapturedRoom.Surface);
            v515 = (char *)v521;
            goto LABEL_208;
          }
          sub_22643D748((uint64_t)v483, type metadata accessor for CapturedRoom.Surface);

          v52 = v519;
        }
        else
        {

          v52 = v519;
          (*(void (**)(uint64_t, unint64_t))(v520 + 8))(v362, v519);
        }
LABEL_189:
        ++v354;
        v126 = v511;
      }
      while (v357 != v514);
    }
    swift_bridgeObjectRelease();
    v383 = objc_msgSend(v474, sel_openings);
    v126 = sub_22655CECC();

    v514 = (char *)sub_2265222D8(v126);
    if (v514)
    {
      v513 = (char *)(v126 & 0xC000000000000001);
      v384 = 4;
      v511 = v126;
      do
      {
        if (v513)
          v385 = (id)MEMORY[0x2276999E4](v384 - 4, v126);
        else
          v385 = *(id *)(v126 + 8 * v384);
        v386 = v385;
        v387 = (char *)(v384 - 3);
        if (__OFADD__(v384 - 4, 1))
          goto LABEL_265;
        v388 = objc_msgSend(v385, sel_identifier);
        if (!v388)
          goto LABEL_283;
        v389 = v388;
        v390 = v518;
        sub_22655C110();

        v126 = v520;
        v391 = *(void (**)(char *, char *, unint64_t))(v520 + 32);
        v392 = (uint64_t)v497;
        v391(v497, v390, v52);
        v120 = *(char **)(v126 + 56);
        ((void (*)(uint64_t, _QWORD, uint64_t, unint64_t))v120)(v392, 0, 1, v52);
        v393 = v52;
        v52 = *(_QWORD *)(v126 + 48);
        if (((unsigned int (*)(uint64_t, uint64_t, unint64_t))v52)(v392, 1, v393) == 1)
          goto LABEL_284;
        if (v122[2] && (v394 = sub_226534858(v392), v392 = (uint64_t)v497, (v395 & 1) != 0))
        {
          v396 = v476;
          sub_22643D704(v122[7] + *(_QWORD *)(v517 + 72) * v394, v476, type metadata accessor for CapturedRoom.Surface);
          sub_22643F6AC(v396, (uint64_t)v482, type metadata accessor for CapturedRoom.Surface);
          v397 = *(void (**)(uint64_t, unint64_t))(v520 + 8);
          v397(v392, v519);
          v126 = (uint64_t)&selRef_session_didUpdateTextCoaching_;
          if (!objc_msgSend(v386, sel_individualUpdate))
          {
            v510 = (uint64_t)v397;
            v398 = objc_msgSend(v386, sel_identifier);
            if (!v398)
              goto LABEL_295;
            v399 = v398;
            v400 = v518;
            sub_22655C110();

            v401 = (uint64_t)v465;
            v402 = v400;
            v126 = v519;
            v391(v465, v402, v519);
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v120)(v401, 0, 1, v126);
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v52)(v401, 1, v126) == 1)
              goto LABEL_296;
            v120 = v482;
            v403 = (uint64_t)v495;
            sub_22643D704((uint64_t)v482, (uint64_t)v495, type metadata accessor for CapturedRoom.Surface);
            v404 = (uint64_t)v516;
            v405 = swift_isUniquelyReferenced_nonNull_native();
            v521 = (_QWORD *)v404;
            sub_2265238A4(v403, v401, v405, (void (*)(void))sub_22654A248, (void (*)(void))sub_22654530C, type metadata accessor for CapturedRoom.Surface);
            v516 = v521;
LABEL_231:
            swift_bridgeObjectRelease();
            ((void (*)(uint64_t, uint64_t))v510)(v401, v126);

            sub_22643D748((uint64_t)v120, type metadata accessor for CapturedRoom.Surface);
            v52 = v126;
            goto LABEL_212;
          }
          if (objc_msgSend(v386, sel_individualUpdate) == 1 || (v486 & 1) != 0)
          {
            v510 = (uint64_t)v397;
            v406 = objc_msgSend(v386, sel_identifier);
            if (!v406)
              goto LABEL_305;
            v407 = v406;
            v408 = v518;
            sub_22655C110();

            v401 = (uint64_t)v462;
            v409 = v408;
            v126 = v519;
            v391(v462, v409, v519);
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v120)(v401, 0, 1, v126);
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v52)(v401, 1, v126) == 1)
              goto LABEL_306;
            v120 = v482;
            v410 = (uint64_t)v495;
            sub_22643D704((uint64_t)v482, (uint64_t)v495, type metadata accessor for CapturedRoom.Surface);
            v411 = (uint64_t)v515;
            v412 = swift_isUniquelyReferenced_nonNull_native();
            v521 = (_QWORD *)v411;
            sub_2265238A4(v410, v401, v412, (void (*)(void))sub_22654A248, (void (*)(void))sub_22654530C, type metadata accessor for CapturedRoom.Surface);
            v515 = (char *)v521;
            goto LABEL_231;
          }
          sub_22643D748((uint64_t)v482, type metadata accessor for CapturedRoom.Surface);

          v52 = v519;
        }
        else
        {

          v52 = v519;
          (*(void (**)(uint64_t, unint64_t))(v520 + 8))(v392, v519);
        }
LABEL_212:
        ++v384;
        v126 = v511;
      }
      while (v387 != v514);
    }
    swift_bridgeObjectRelease();
    v413 = objc_msgSend(v474, sel_floors);
    v414 = sub_22655CECC();

    v514 = (char *)sub_2265222D8(v414);
    if (!v514)
      break;
    v513 = (char *)(v414 & 0xC000000000000001);
    v415 = 4;
    v126 = (uint64_t)v471;
    v511 = v414;
    while (1)
    {
      v416 = v513 ? (id)MEMORY[0x2276999E4](v415 - 4, v414) : *(id *)(v414 + 8 * v415);
      v417 = v416;
      v418 = v415 - 3;
      if (__OFADD__(v415 - 4, 1))
        break;
      v419 = objc_msgSend(v416, sel_identifier);
      if (!v419)
        goto LABEL_285;
      v420 = v419;
      v421 = v518;
      sub_22655C110();

      v422 = v520;
      v423 = *(void (**)(char *, char *, unint64_t))(v520 + 32);
      v424 = (uint64_t)v496;
      v423(v496, v421, v52);
      v120 = *(char **)(v422 + 56);
      ((void (*)(uint64_t, _QWORD, uint64_t, unint64_t))v120)(v424, 0, 1, v52);
      v425 = v52;
      v52 = *(_QWORD *)(v422 + 48);
      if (((unsigned int (*)(uint64_t, uint64_t, unint64_t))v52)(v424, 1, v425) == 1)
        goto LABEL_286;
      if (v122[2] && (v426 = sub_226534858(v424), v424 = (uint64_t)v496, (v427 & 1) != 0))
      {
        v510 = v415 - 3;
        v428 = v475;
        sub_22643D704(v122[7] + *(_QWORD *)(v517 + 72) * v426, v475, type metadata accessor for CapturedRoom.Surface);
        sub_22643F6AC(v428, v481, type metadata accessor for CapturedRoom.Surface);
        v429 = *(void (**)(uint64_t, unint64_t))(v520 + 8);
        v429(v424, v519);
        if (objc_msgSend(v417, sel_individualUpdate))
        {
          v430 = objc_msgSend(v417, sel_individualUpdate);
          v418 = v510;
          if (v430 == 1 || (v486 & 1) != 0)
          {
            v509 = v429;
            v440 = objc_msgSend(v417, sel_identifier);
            if (!v440)
              goto LABEL_307;
            v441 = v440;
            v442 = v518;
            sub_22655C110();

            v443 = (uint64_t)v461;
            v444 = v519;
            v423(v461, v442, v519);
            ((void (*)(uint64_t, _QWORD, uint64_t, unint64_t))v120)(v443, 0, 1, v444);
            v445 = v444;
            if (((unsigned int (*)(uint64_t, uint64_t, unint64_t))v52)(v443, 1, v444) == 1)
              goto LABEL_308;
            v446 = v481;
            v120 = v495;
            sub_22643D704(v481, (uint64_t)v495, type metadata accessor for CapturedRoom.Surface);
            v447 = (uint64_t)v515;
            v448 = swift_isUniquelyReferenced_nonNull_native();
            v521 = (_QWORD *)v447;
            sub_2265238A4((uint64_t)v120, v443, v448, (void (*)(void))sub_22654A248, (void (*)(void))sub_22654530C, type metadata accessor for CapturedRoom.Surface);
            v515 = (char *)v521;
            swift_bridgeObjectRelease();
            v449 = v445;
            v509(v443, v445);

            sub_22643D748(v446, type metadata accessor for CapturedRoom.Surface);
            v126 = (uint64_t)v471;
            v52 = v449;
          }
          else
          {
            sub_22643D748(v481, type metadata accessor for CapturedRoom.Surface);

            v52 = v519;
          }
        }
        else
        {
          v509 = v429;
          v431 = objc_msgSend(v417, sel_identifier);
          if (!v431)
            goto LABEL_297;
          v432 = v431;
          v433 = v518;
          sub_22655C110();

          v434 = v433;
          v435 = v519;
          v423((char *)v126, v434, v519);
          ((void (*)(uint64_t, _QWORD, uint64_t, unint64_t))v120)(v126, 0, 1, v435);
          v436 = ((uint64_t (*)(uint64_t, uint64_t, unint64_t))v52)(v126, 1, v435);
          v418 = v510;
          if (v436 == 1)
            goto LABEL_298;
          v437 = v481;
          v120 = v495;
          sub_22643D704(v481, (uint64_t)v495, type metadata accessor for CapturedRoom.Surface);
          v438 = (uint64_t)v516;
          v439 = swift_isUniquelyReferenced_nonNull_native();
          v521 = (_QWORD *)v438;
          sub_2265238A4((uint64_t)v120, v126, v439, (void (*)(void))sub_22654A248, (void (*)(void))sub_22654530C, type metadata accessor for CapturedRoom.Surface);
          v516 = v521;
          swift_bridgeObjectRelease();
          v509(v126, v435);

          sub_22643D748(v437, type metadata accessor for CapturedRoom.Surface);
          v52 = v435;
        }
      }
      else
      {

        v52 = v519;
        (*(void (**)(uint64_t, unint64_t))(v520 + 8))(v424, v519);
      }
      ++v415;
      v414 = v511;
      if ((char *)v418 == v514)
        goto LABEL_254;
    }
LABEL_266:
    __break(1u);
LABEL_267:
    __break(1u);
LABEL_268:
    __break(1u);
  }
LABEL_254:
  swift_bridgeObjectRelease();
  v450 = Strong;
  swift_retain();
  v451 = swift_bridgeObjectRetain();
  sub_226524B68(v451, v450);
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  v452 = swift_bridgeObjectRetain();
  sub_226524F44(v452, v450);
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  v453 = swift_bridgeObjectRetain();
  sub_226524F44(v453, v450);
  swift_bridgeObjectRelease();
  swift_release();
  v454 = swift_bridgeObjectRetain();
  v143 = sub_2265363D0(v454);
  swift_bridgeObjectRelease();
  v455 = swift_bridgeObjectRetain();
  sub_2265363D0(v455);
  swift_bridgeObjectRelease();
  v456 = swift_bridgeObjectRetain();
  sub_2265363D0(v456);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease_n();
  return v143;
}

id sub_22651F908@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  int *v44;
  id result;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;

  v8 = type metadata accessor for CapturedRoom.Surface(0);
  MEMORY[0x24BDAC7A8](v8);
  v54 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v53 = (uint64_t)&v46 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v52 = (uint64_t)&v46 - v13;
  MEMORY[0x24BDAC7A8](v14);
  v51 = (uint64_t)&v46 - v15;
  MEMORY[0x24BDAC7A8](v16);
  v50 = (uint64_t)&v46 - v17;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v46 - v20;
  v22 = *(_QWORD *)(a1 + 16);
  v23 = MEMORY[0x24BEE4AF8];
  if (v22)
  {
    v47 = a2;
    v48 = a3;
    v49 = a4;
    v24 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v25 = a1 + v24;
    v26 = *(_QWORD *)(v19 + 72);
    v46 = a1;
    swift_bridgeObjectRetain();
    v27 = MEMORY[0x24BEE4AF8];
    v56 = MEMORY[0x24BEE4AF8];
    v57 = MEMORY[0x24BEE4AF8];
    v55 = MEMORY[0x24BEE4AF8];
    v28 = MEMORY[0x24BEE4AF8];
    do
    {
      sub_22643D704(v25, (uint64_t)v21, type metadata accessor for CapturedRoom.Surface);
      switch(*v21)
      {
        case 2:
          sub_22643D704((uint64_t)v21, v50, type metadata accessor for CapturedRoom.Surface);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v28 = sub_226486C18(0, *(_QWORD *)(v28 + 16) + 1, 1, v28);
          v35 = *(_QWORD *)(v28 + 16);
          v34 = *(_QWORD *)(v28 + 24);
          v36 = v35 + 1;
          if (v35 >= v34 >> 1)
          {
            v32 = sub_226486C18(v34 > 1, v35 + 1, 1, v28);
            v33 = v50;
            v28 = v32;
          }
          else
          {
            v32 = v28;
            v33 = v50;
          }
          break;
        case 3:
          sub_22643D704((uint64_t)v21, v53, type metadata accessor for CapturedRoom.Surface);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            v39 = v57;
          else
            v39 = sub_226486C18(0, *(_QWORD *)(v57 + 16) + 1, 1, v57);
          v35 = *(_QWORD *)(v39 + 16);
          v40 = *(_QWORD *)(v39 + 24);
          v36 = v35 + 1;
          if (v35 >= v40 >> 1)
          {
            v32 = sub_226486C18(v40 > 1, v35 + 1, 1, v39);
            v33 = v53;
            v57 = v32;
          }
          else
          {
            v57 = v39;
            v32 = v39;
            v33 = v53;
          }
          break;
        case 4:
          sub_22643D704((uint64_t)v21, v52, type metadata accessor for CapturedRoom.Surface);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            v41 = v56;
          else
            v41 = sub_226486C18(0, *(_QWORD *)(v56 + 16) + 1, 1, v56);
          v35 = *(_QWORD *)(v41 + 16);
          v42 = *(_QWORD *)(v41 + 24);
          v36 = v35 + 1;
          if (v35 >= v42 >> 1)
          {
            v32 = sub_226486C18(v42 > 1, v35 + 1, 1, v41);
            v33 = v52;
            v56 = v32;
          }
          else
          {
            v56 = v41;
            v32 = v41;
            v33 = v52;
          }
          break;
        case 5:
          sub_22643D704((uint64_t)v21, v54, type metadata accessor for CapturedRoom.Surface);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v27 = sub_226486C18(0, *(_QWORD *)(v27 + 16) + 1, 1, v27);
          v35 = *(_QWORD *)(v27 + 16);
          v43 = *(_QWORD *)(v27 + 24);
          v36 = v35 + 1;
          if (v35 >= v43 >> 1)
          {
            v32 = sub_226486C18(v43 > 1, v35 + 1, 1, v27);
            v33 = v54;
            v27 = v32;
          }
          else
          {
            v32 = v27;
            v33 = v54;
          }
          break;
        default:
          sub_22643D704((uint64_t)v21, v51, type metadata accessor for CapturedRoom.Surface);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            v37 = v55;
          else
            v37 = sub_226486C18(0, *(_QWORD *)(v55 + 16) + 1, 1, v55);
          v35 = *(_QWORD *)(v37 + 16);
          v38 = *(_QWORD *)(v37 + 24);
          v36 = v35 + 1;
          if (v35 >= v38 >> 1)
          {
            v32 = sub_226486C18(v38 > 1, v35 + 1, 1, v37);
            v33 = v51;
            v55 = v32;
          }
          else
          {
            v55 = v37;
            v32 = v37;
            v33 = v51;
          }
          break;
      }
      *(_QWORD *)(v32 + 16) = v36;
      sub_22643F6AC(v33, v32 + v24 + v35 * v26, type metadata accessor for CapturedRoom.Surface);
      sub_22643D748((uint64_t)v21, type metadata accessor for CapturedRoom.Surface);
      v25 += v26;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    a3 = v48;
    a4 = v49;
    a2 = v47;
    v23 = MEMORY[0x24BEE4AF8];
    v30 = v56;
    v29 = v57;
    v31 = v55;
  }
  else
  {
    v27 = MEMORY[0x24BEE4AF8];
    v29 = MEMORY[0x24BEE4AF8];
    v30 = MEMORY[0x24BEE4AF8];
    v31 = MEMORY[0x24BEE4AF8];
    v28 = MEMORY[0x24BEE4AF8];
  }
  v44 = (int *)type metadata accessor for CapturedRoom(0);
  *(unint64_t *)((char *)a4 + v44[12]) = 0;
  *(unint64_t *)((char *)a4 + v44[13]) = 2;
  *a4 = v28;
  a4[1] = v31;
  a4[2] = v30;
  a4[3] = v29;
  a4[4] = v27;
  a4[5] = a2;
  *(unint64_t *)((char *)a4 + v44[14]) = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_22655C134();
  *(unint64_t *)((char *)a4 + v44[11]) = v23;
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE80978]), sel_init);
  *(unint64_t *)((char *)a4 + v44[15]) = (unint64_t)result;
  return result;
}

uint64_t sub_22651FE14(void *a1, unint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t ObjectType;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  _QWORD *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  unint64_t *v92;

  v92 = a2;
  v4 = type metadata accessor for CapturedRoom(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v84 = (_QWORD **)((char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v7);
  v86 = (char *)&v84 - v8;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v84 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AE0);
  MEMORY[0x24BDAC7A8](v12);
  v85 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v88 = (char *)&v84 - v15;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v84 - v17;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v84 - v20;
  v23 = (char *)&v84 + *(int *)(v22 + 48) - v20;
  v24 = (unint64_t *)((char *)&v84 + *(int *)(v22 + 64) - v20);
  v90 = v2;
  sub_226520714((uint64_t)&v84 - v20, (uint64_t)v23, v24, a1, v92, 0);
  v25 = (uint64_t)&v18[*(int *)(v12 + 48)];
  v89 = v12;
  v26 = (uint64_t)&v18[*(int *)(v12 + 64)];
  v87 = v21;
  sub_22643D7A0((uint64_t)v21, (uint64_t)v18, &qword_255849170);
  v91 = v23;
  sub_22643D7A0((uint64_t)v23, v25, &qword_255849170);
  v92 = v24;
  sub_22643D7A0((uint64_t)v24, v26, &qword_255849170);
  v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  v28 = v4;
  v29 = v27;
  if (v27(v26, 1, v4) == 1)
  {
    sub_22643D7E4(v26, &qword_255849170);
    sub_22643D7E4(v25, &qword_255849170);
    sub_22643D7E4((uint64_t)v18, &qword_255849170);
    v31 = v86;
    v30 = (uint64_t)v87;
    v32 = (uint64_t)v88;
    v33 = v89;
    goto LABEL_16;
  }
  sub_22643F6AC(v26, (uint64_t)v11, type metadata accessor for CapturedRoom);
  sub_22643D7E4(v25, &qword_255849170);
  sub_22643D7E4((uint64_t)v18, &qword_255849170);
  result = swift_weakLoadStrong();
  if (!result)
  {
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  v35 = v11;
  v36 = result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate;
  v37 = MEMORY[0x22769A944](result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate);
  v38 = *(_QWORD *)(v36 + 8);
  swift_release();
  v32 = (uint64_t)v88;
  v33 = v89;
  if (v37)
  {
    result = swift_weakLoadStrong();
    if (!result)
    {
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    v39 = result;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v38 + 24))(v39, v35, ObjectType, v38);
    swift_release();
    swift_unknownObjectRelease();
  }
  result = swift_weakLoadStrong();
  if (!result)
    goto LABEL_48;
  v41 = result;
  v42 = result + 24;
  swift_beginAccess();
  v43 = MEMORY[0x22769A944](v42);
  v44 = *(_QWORD *)(v41 + 32);
  swift_release();
  if (v43)
  {
    result = swift_weakLoadStrong();
    if (!result)
    {
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    v45 = result;
    v46 = swift_getObjectType();
    (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v44 + 24))(v45, v35, v46, v44);
    swift_release();
    swift_unknownObjectRelease();
  }
  result = swift_weakLoadStrong();
  if (!result)
    goto LABEL_49;
  v47 = sub_226517CE4();
  swift_release();
  v48 = *(unsigned __int8 *)(v47 + 16);
  swift_release();
  v31 = v86;
  v30 = (uint64_t)v87;
  if (v48 == 1)
  {
    result = swift_weakLoadStrong();
    if (!result)
    {
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
    sub_226517CE4();
    swift_release();
    sub_2264AE994(v35, 1);
    swift_release();
  }
  sub_22643D748((uint64_t)v35, type metadata accessor for CapturedRoom);
LABEL_16:
  v49 = v32 + *(int *)(v33 + 48);
  v50 = v32 + *(int *)(v33 + 64);
  sub_22643D7A0(v30, v32, &qword_255849170);
  sub_22643D7A0((uint64_t)v91, v49, &qword_255849170);
  sub_22643D7A0((uint64_t)v92, v50, &qword_255849170);
  v51 = v29(v32, 1, v28);
  v52 = (uint64_t)v85;
  if (v51 == 1)
  {
    sub_22643D7E4(v50, &qword_255849170);
    sub_22643D7E4(v49, &qword_255849170);
    sub_22643D7E4(v32, &qword_255849170);
    goto LABEL_31;
  }
  sub_22643F6AC(v32, (uint64_t)v31, type metadata accessor for CapturedRoom);
  sub_22643D7E4(v50, &qword_255849170);
  sub_22643D7E4(v49, &qword_255849170);
  result = swift_weakLoadStrong();
  if (!result)
    goto LABEL_50;
  v53 = result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate;
  v54 = MEMORY[0x22769A944](result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate);
  v55 = *(_QWORD *)(v53 + 8);
  swift_release();
  if (v54)
  {
    result = swift_weakLoadStrong();
    if (!result)
    {
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    v56 = result;
    v57 = swift_getObjectType();
    (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v55 + 16))(v56, v31, v57, v55);
    swift_release();
    swift_unknownObjectRelease();
  }
  result = swift_weakLoadStrong();
  if (!result)
    goto LABEL_51;
  v58 = result;
  v59 = result + 24;
  swift_beginAccess();
  v60 = MEMORY[0x22769A944](v59);
  v61 = *(_QWORD *)(v58 + 32);
  swift_release();
  if (v60)
  {
    result = swift_weakLoadStrong();
    if (!result)
    {
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
    v62 = result;
    v63 = swift_getObjectType();
    (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v61 + 16))(v62, v31, v63, v61);
    swift_release();
    swift_unknownObjectRelease();
  }
  result = swift_weakLoadStrong();
  if (!result)
    goto LABEL_52;
  v64 = sub_226517CE4();
  swift_release();
  v65 = *(unsigned __int8 *)(v64 + 16);
  swift_release();
  if (v65 == 1)
  {
    result = swift_weakLoadStrong();
    if (!result)
    {
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
    sub_226517CE4();
    swift_release();
    sub_2264AE994(v31, 0);
    swift_release();
  }
  sub_22643D748((uint64_t)v31, type metadata accessor for CapturedRoom);
LABEL_31:
  v66 = v52 + *(int *)(v33 + 48);
  v67 = v52 + *(int *)(v33 + 64);
  sub_22643D7A0(v30, v52, &qword_255849170);
  sub_22643D7A0((uint64_t)v91, v66, &qword_255849170);
  sub_22643D7A0((uint64_t)v92, v67, &qword_255849170);
  if (v29(v66, 1, v28) == 1)
  {
    sub_22643D7E4(v30, (uint64_t *)&unk_255849AE0);
    sub_22643D7E4(v67, &qword_255849170);
    sub_22643D7E4(v66, &qword_255849170);
    v68 = v52;
    v69 = &qword_255849170;
    return sub_22643D7E4(v68, v69);
  }
  v70 = v84;
  sub_22643F6AC(v66, (uint64_t)v84, type metadata accessor for CapturedRoom);
  sub_22643D7E4(v67, &qword_255849170);
  sub_22643D7E4(v52, &qword_255849170);
  result = swift_weakLoadStrong();
  if (!result)
    goto LABEL_53;
  v71 = result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate;
  v72 = MEMORY[0x22769A944](result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate);
  v73 = *(_QWORD *)(v71 + 8);
  swift_release();
  if (v72)
  {
    result = swift_weakLoadStrong();
    if (!result)
    {
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
    v74 = result;
    v75 = swift_getObjectType();
    (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v73 + 32))(v74, v70, v75, v73);
    swift_release();
    swift_unknownObjectRelease();
  }
  result = swift_weakLoadStrong();
  if (!result)
    goto LABEL_54;
  v76 = result;
  v77 = result + 24;
  swift_beginAccess();
  v78 = MEMORY[0x22769A944](v77);
  v79 = *(_QWORD *)(v76 + 32);
  swift_release();
  if (v78)
  {
    result = swift_weakLoadStrong();
    if (!result)
    {
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
    v80 = result;
    v81 = swift_getObjectType();
    (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v79 + 32))(v80, v70, v81, v79);
    swift_release();
    swift_unknownObjectRelease();
  }
  result = swift_weakLoadStrong();
  if (!result)
    goto LABEL_55;
  v82 = sub_226517CE4();
  swift_release();
  v83 = *(unsigned __int8 *)(v82 + 16);
  swift_release();
  if (v83 != 1)
  {
LABEL_45:
    sub_22643D748((uint64_t)v70, type metadata accessor for CapturedRoom);
    v69 = (uint64_t *)&unk_255849AE0;
    v68 = v30;
    return sub_22643D7E4(v68, v69);
  }
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_226517CE4();
    swift_release();
    sub_2264AE994(v70, 2);
    swift_release();
    goto LABEL_45;
  }
LABEL_64:
  __break(1u);
  return result;
}

uint64_t sub_226520714(uint64_t a1, uint64_t a2, unint64_t *a3, void *a4, _QWORD *a5, int a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t result;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t *v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t *v46;

  v42 = a3;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849170);
  MEMORY[0x24BDAC7A8](v11);
  v46 = (unint64_t *)((char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v13);
  v45 = (unint64_t *)((char *)&v39 - v14);
  v15 = sub_22651C3F8(a4, a5, a6);
  v17 = v16;
  v44 = v18;
  v19 = sub_226527268(a4, (uint64_t)a5);
  v21 = v20;
  v43 = v22;
  result = swift_weakLoadStrong();
  if (!result)
  {
    __break(1u);
    goto LABEL_21;
  }
  v40 = a1;
  v41 = a2;
  v24 = *(_QWORD *)(result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_addedPotentialWalls);
  swift_bridgeObjectRetain();
  swift_release();
  result = swift_weakLoadStrong();
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v25 = *(_QWORD *)(result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_removedPotentialWalls);
  swift_bridgeObjectRetain();
  swift_release();
  result = swift_weakLoadStrong();
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v26 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_addedPotentialWalls) = MEMORY[0x24BEE4AF8];
  swift_release();
  swift_bridgeObjectRelease();
  result = swift_weakLoadStrong();
  if (!result)
  {
LABEL_23:
    __break(1u);
    return result;
  }
  *(_QWORD *)(result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_removedPotentialWalls) = v26;
  swift_release();
  swift_bridgeObjectRelease();
  v27 = v46;
  if (*(_QWORD *)(v15 + 16) || *(_QWORD *)(v19 + 16))
  {
    v28 = v42;
    sub_22651F908(v15, v19, MEMORY[0x24BEE4AF8], v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29 = type metadata accessor for CapturedRoom(0);
    (*(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 0, 1, v29);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v36 = type metadata accessor for CapturedRoom(0);
    (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v42, 1, 1, v36);
  }
  v31 = v40;
  v30 = v41;
  v32 = v43;
  v33 = v45;
  if (*(_QWORD *)(v17 + 16) || *(_QWORD *)(v21 + 16) || *(_QWORD *)(v24 + 16))
  {
    sub_22651F908(v17, v21, v24, v45);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v34 = type metadata accessor for CapturedRoom(0);
    (*(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 0, 1, v34);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v37 = type metadata accessor for CapturedRoom(0);
    (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v33, 1, 1, v37);
  }
  if (*(_QWORD *)(v44 + 16) || *(_QWORD *)(v32 + 16) || *(_QWORD *)(v25 + 16))
  {
    sub_22651F908(v44, v32, v25, v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v35 = type metadata accessor for CapturedRoom(0);
    (*(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v27, 0, 1, v35);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v38 = type metadata accessor for CapturedRoom(0);
    (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v27, 1, 1, v38);
  }
  sub_226446554((uint64_t)v33, v31, &qword_255849170);
  return sub_226446554((uint64_t)v27, v30, &qword_255849170);
}

uint64_t sub_226520AD0(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  void *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  id v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  v3 = type metadata accessor for CapturedRoom(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (uint64_t *)((char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = result;
    if (qword_25583F910 != -1)
      swift_once();
    sub_2264A2FAC();
    swift_beginAccess();
    v8 = objc_msgSend(*(id *)(v7 + 56), sel_currentFrame);
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v8, sel_referenceOriginTransform);
      v32 = v11;
      v33 = v10;
      v30 = v13;
      v31 = v12;

      v14 = (_OWORD *)(v7 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arFrameReferenceOriginTransform);
      v15 = v32;
      *v14 = v33;
      v14[1] = v15;
      v16 = v30;
      v14[2] = v31;
      v14[3] = v16;
    }
    type metadata accessor for RSCoreAdaptor();
    v17 = *(_QWORD *)(v7 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_detectedObjects);
    v18 = (uint64_t *)(v7 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_potentiallWalls);
    swift_beginAccess();
    v19 = *v18;
    v20 = *(_OWORD *)(v7 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arFrameReferenceOriginTransform);
    v32 = *(_OWORD *)(v7 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arFrameReferenceOriginTransform + 16);
    v33 = v20;
    v21 = *(_OWORD *)(v7 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arFrameReferenceOriginTransform + 32);
    v30 = *(_OWORD *)(v7 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arFrameReferenceOriginTransform + 48);
    v31 = v21;
    v22 = qword_25583F978;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22 != -1)
      swift_once();
    v23 = (id)qword_25585B060;
    sub_2264F4078(a2, v17, v19, v23, 1, v5, v33, v32, v31, v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v24 = (_QWORD *)(v7 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_floorPlanModel);
    swift_beginAccess();
    sub_22652A288((uint64_t)v5, (uint64_t)v24, type metadata accessor for CapturedRoom);
    swift_endAccess();
    if ((*(_BYTE *)(v7 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration + 3) & 1) == 0)
    {
      *v24 = MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRelease();
    }
    sub_22643D704((uint64_t)v24, (uint64_t)v5, type metadata accessor for CapturedRoom);
    sub_22651FE14(a2, (unint64_t *)v5);
    sub_22643D748((uint64_t)v5, type metadata accessor for CapturedRoom);
    v25 = v7 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate;
    if (MEMORY[0x22769A944](v7 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate))
    {
      v26 = *(_QWORD *)(v25 + 8);
      ObjectType = swift_getObjectType();
      sub_22643D704((uint64_t)v24, (uint64_t)v5, type metadata accessor for CapturedRoom);
      (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v26 + 8))(v7, v5, ObjectType, v26);
      swift_unknownObjectRelease();
      sub_22643D748((uint64_t)v5, type metadata accessor for CapturedRoom);
    }
    swift_beginAccess();
    if (MEMORY[0x22769A944](v7 + 24))
    {
      v28 = *(_QWORD *)(v7 + 32);
      v29 = swift_getObjectType();
      sub_22643D704((uint64_t)v24, (uint64_t)v5, type metadata accessor for CapturedRoom);
      (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v28 + 8))(v7, v5, v29, v28);
      swift_unknownObjectRelease();
      swift_release();
      return sub_22643D748((uint64_t)v5, type metadata accessor for CapturedRoom);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_226520EC0(uint64_t a1, void *a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  void *v13;
  void (*v14)(uint64_t, uint64_t *, void *, uint64_t, uint64_t);
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void (*v21)(uint64_t, uint64_t *, void *, uint64_t, uint64_t);
  id v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  void *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;

  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = result;
    v5 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runAllowed;
    if ((*(_BYTE *)(result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runAllowed) & 1) != 0)
    {
      return swift_release();
    }
    else
    {
      if (qword_25583F910 != -1)
        swift_once();
      v6 = objc_msgSend(a2, sel_floorPlan);
      sub_2264A3530(v6);

      result = swift_weakLoadStrong();
      if (result)
      {
        v7 = *(_BYTE *)(result + 16);
        swift_release();
        sub_2264A4C0C(v7);
        v8 = (uint64_t *)(v4 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_keyframes);
        swift_beginAccess();
        v9 = *v8;
        v25 = *(_OWORD *)(v4 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arFrameReferenceOriginTransform + 16);
        v26 = *(_OWORD *)(v4 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arFrameReferenceOriginTransform);
        v23 = *(_OWORD *)(v4 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arFrameReferenceOriginTransform + 48);
        v24 = *(_OWORD *)(v4 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arFrameReferenceOriginTransform + 32);
        v10 = v4 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate;
        if (MEMORY[0x22769A944](v4 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate))
        {
          v11 = *(_QWORD *)(v10 + 8);
          ObjectType = swift_getObjectType();
          v27 = v9;
          v28 = a2;
          v29 = v26;
          v30 = v25;
          v31 = v24;
          v32 = v23;
          v13 = *(void **)(v4 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error);
          v14 = *(void (**)(uint64_t, uint64_t *, void *, uint64_t, uint64_t))(v11 + 56);
          swift_bridgeObjectRetain();
          v15 = a2;
          v16 = v13;
          v14(v4, &v27, v13, ObjectType, v11);
          swift_unknownObjectRelease();

        }
        else
        {
          swift_bridgeObjectRetain();
          v17 = a2;
        }
        swift_beginAccess();
        if (MEMORY[0x22769A944](v4 + 24))
        {
          v18 = *(_QWORD *)(v4 + 32);
          v19 = swift_getObjectType();
          v27 = v9;
          v28 = a2;
          v29 = v26;
          v30 = v25;
          v31 = v24;
          v32 = v23;
          v20 = *(void **)(v4 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error);
          v21 = *(void (**)(uint64_t, uint64_t *, void *, uint64_t, uint64_t))(v18 + 56);
          v22 = v20;
          v21(v4, &v27, v20, v19, v18);
          swift_unknownObjectRelease();

        }
        swift_bridgeObjectRelease();
        *(_BYTE *)(v4 + v5) = 1;
        return swift_release();
      }
      else
      {
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t sub_2265211D8(uint64_t a1, void *a2)
{
  uint64_t result;
  uint64_t v5;
  id v6;
  char v7;
  id v8;
  unsigned __int8 v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18[24];

  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = result;
    v6 = objc_msgSend(a2, sel_type);
    if ((unint64_t)v6 >= 6)
      return swift_release();
    v7 = (char)v6;
    v8 = objc_msgSend(a2, sel_state);
    v9 = (_BYTE)v8 + 1;
    if ((unint64_t)v8 + 1 >= 5)
    {
      return swift_release();
    }
    else
    {
      v10 = 0x50003010204uLL >> (8 * v7);
      v11 = OBJC_IVAR____TtC8RoomPlan24RSSessionDelegateWrapper_initializationState;
      if (*(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8RoomPlan24RSSessionDelegateWrapper_initializationState) != v9
        && MEMORY[0x22769A944](v5 + 40))
      {
        sub_226502E1C(v9);
        swift_unknownObjectRelease();
      }
      *(_BYTE *)(a1 + v11) = v9;
      v12 = v5 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate;
      if (MEMORY[0x22769A944](v5 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate))
      {
        v13 = *(_QWORD *)(v12 + 8);
        ObjectType = swift_getObjectType();
        v18[0] = v10;
        (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v13 + 40))(v5, v18, ObjectType, v13);
        swift_unknownObjectRelease();
      }
      swift_beginAccess();
      if (MEMORY[0x22769A944](v5 + 24))
      {
        v15 = *(_QWORD *)(v5 + 32);
        v16 = swift_getObjectType();
        v17 = v10;
        (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v15 + 40))(v5, &v17, v16, v15);
        swift_release();
        return swift_unknownObjectRelease();
      }
      else
      {
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_2265213F4(uint64_t a1, unint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = result;
    if (a2 <= 0xFFFFFFFFFFFFFFFBLL)
      v5 = 5;
    else
      v5 = 0x10305u >> (8 * a2);
    sub_2265265C4();
    v6 = swift_allocError();
    *v7 = v5;
    v8 = *(void **)(v4 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error);
    *(_QWORD *)(v4 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error) = v6;

    if (qword_25583F910 != -1)
      swift_once();
    v9 = sub_22655CDDC();
    sub_2264A3328(v9, v10);
    swift_bridgeObjectRelease();
    sub_226516B30(1);
    return swift_release();
  }
  return result;
}

void sub_22652156C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 *v12;
  uint64_t Strong;
  uint64_t v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t i;
  id v20;
  void *v21;
  unint64_t v22;
  unint64_t v23;
  __n128 *v24;
  unint64_t v25;
  uint64_t v26;
  float32x2_t *v27;
  float32x4_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  _QWORD *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  float32x2_t *v36;
  unint64_t v37;
  unint64_t v38;
  __n128 *v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  float32x4_t v55;
  float32x4_t v56;
  float32x4_t v57;
  float32x4_t v58;
  float32x4_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  simd_float4x4 v69;

  v4 = type metadata accessor for CapturedRoom.Surface(0);
  v67 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v66 = (uint64_t)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v65 = (uint64_t)&v51 - v7;
  MEMORY[0x24BDAC7A8](v8);
  v61 = (uint64_t)&v51 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (__n128 *)((char *)&v51 - v11);
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v52 = Strong;
    v14 = Strong + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_potentiallWalls;
    swift_beginAccess();
    v51 = (_QWORD *)v14;
    v60 = *(_QWORD *)v14;
    swift_bridgeObjectRetain();
    v15 = objc_msgSend(a2, sel_markers);
    sub_22643F548(0, &qword_255849B00);
    v16 = sub_22655CECC();

    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      v17 = sub_22655D400();
      swift_bridgeObjectRelease();
      if (v17)
        goto LABEL_4;
    }
    else
    {
      v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v17)
      {
LABEL_4:
        v68 = MEMORY[0x24BEE4AF8];
        v18 = &v68;
        sub_2264C7B14(0, v17 & ~(v17 >> 63), 0);
        if (v17 < 0)
        {
LABEL_63:
          __break(1u);
          goto LABEL_64;
        }
        v2 = v68;
        type metadata accessor for RSCoreAdaptor();
        for (i = 0; i != v17; ++i)
        {
          if ((v16 & 0xC000000000000001) != 0)
            v20 = (id)MEMORY[0x2276999E4](i, v16);
          else
            v20 = *(id *)(v16 + 8 * i + 32);
          v21 = v20;
          sub_2264F1484(v20, v12);

          v68 = v2;
          v23 = *(_QWORD *)(v2 + 16);
          v22 = *(_QWORD *)(v2 + 24);
          if (v23 >= v22 >> 1)
          {
            sub_2264C7B14(v22 > 1, v23 + 1, 1);
            v2 = v68;
          }
          *(_QWORD *)(v2 + 16) = v23 + 1;
          sub_22643F6AC((uint64_t)v12, v2+ ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))+ *(_QWORD *)(v67 + 72) * v23, type metadata accessor for CapturedRoom.Surface);
        }
        swift_bridgeObjectRelease();
LABEL_15:
        v18 = *(uint64_t **)(v60 + 16);
        v14 = sub_226514570(0, (size_t)v18);
        v12 = *(__n128 **)(v2 + 16);
        v63 = (_QWORD *)sub_226514570(0, (size_t)v12);
        if (!v12)
        {
          swift_bridgeObjectRelease();
          v40 = MEMORY[0x24BEE4AF8];
          v64 = MEMORY[0x24BEE4AF8];
          goto LABEL_46;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        {
LABEL_17:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v14 = (uint64_t)sub_2264C12E0(v14);
          v24 = 0;
          v25 = (*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
          v26 = v2 + v25;
          v62 = v25;
          v27 = (float32x2_t *)(v60 + v25);
          v28 = *(float32x4_t *)MEMORY[0x24BDAEE00];
          v29 = *(float32x4_t *)(MEMORY[0x24BDAEE00] + 16);
          v30 = *(float32x4_t *)(MEMORY[0x24BDAEE00] + 32);
          v31 = *(float32x4_t *)(MEMORY[0x24BDAEE00] + 48);
          v32 = v63 + 4;
          v54 = (_QWORD *)v14;
          v53 = (_QWORD *)(v14 + 32);
          v14 = (uint64_t)v63;
          v64 = MEMORY[0x24BEE4AF8];
          v58 = v29;
          v59 = v28;
          v57 = v30;
          v56 = v31;
          v55 = (float32x4_t)vdupq_n_s32(0x3DCCCCCDu);
          do
          {
            if (v24 == v12)
            {
              __break(1u);
LABEL_60:
              __break(1u);
LABEL_61:
              __break(1u);
LABEL_62:
              __break(1u);
              goto LABEL_63;
            }
            if ((unint64_t)v24 >= *(_QWORD *)(v2 + 16))
              goto LABEL_60;
            v34 = *(_QWORD *)(v67 + 72);
            v69 = __invert_f4(*(simd_float4x4 *)(v26 + v34 * (_QWORD)v24 + 32));
            if (v18)
            {
              v35 = 0;
              v36 = v27;
              while ((vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vcgeq_f32(v55, vabdq_f32(v58, vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v69.columns[0], COERCE_FLOAT(*(_OWORD *)v36[6].f32)), (float32x4_t)v69.columns[1], v36[6], 1), (float32x4_t)v69.columns[2], *(float32x4_t *)v36[6].f32, 2), (float32x4_t)v69.columns[3], *(float32x4_t *)v36[6].f32,
                                                                   3))),
                                                  (int8x16_t)vcgeq_f32(v55, vabdq_f32(v59, vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v69.columns[0], COERCE_FLOAT(*(_OWORD *)v36[4].f32)), (float32x4_t)v69.columns[1], v36[4], 1), (float32x4_t)v69.columns[2], *(float32x4_t *)v36[4].f32, 2), (float32x4_t)v69.columns[3], *(float32x4_t *)v36[4].f32, 3)))), vandq_s8(
                                                  (int8x16_t)vcgeq_f32(v55, vabdq_f32(v57, vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v69.columns[0], COERCE_FLOAT(*(_OWORD *)v36[8].f32)), (float32x4_t)v69.columns[1], v36[8], 1), (float32x4_t)v69.columns[2], *(float32x4_t *)v36[8].f32, 2), (float32x4_t)v69.columns[3], *(float32x4_t *)v36[8].f32, 3))), (int8x16_t)vcgeq_f32(
                                                               v55,
                                                               vabdq_f32(v56, vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v69.columns[0], COERCE_FLOAT(*(_OWORD *)v36[10].f32)), (float32x4_t)v69.columns[1], v36[10], 1), (float32x4_t)v69.columns[2], *(float32x4_t *)v36[10].f32, 2), (float32x4_t)v69.columns[3], *(float32x4_t *)v36[10].f32, 3)))))) & 0x80000000) == 0)
              {
                v35 = (uint64_t *)((char *)v35 + 1);
                v36 = (float32x2_t *)((char *)v36 + v34);
                if (v18 == v35)
                  goto LABEL_21;
              }
              if ((unint64_t)v24 >= *(_QWORD *)(v14 + 16))
                goto LABEL_61;
              v24->n128_u8[(_QWORD)v32] = 1;
              if ((unint64_t)v35 >= v54[2])
                goto LABEL_62;
              *((_BYTE *)v35 + (_QWORD)v53) = 1;
              sub_22643D704((uint64_t)v36, v61, type metadata accessor for CapturedRoom.Surface);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v64 = sub_226486C18(0, *(_QWORD *)(v64 + 16) + 1, 1, v64);
              v38 = *(_QWORD *)(v64 + 16);
              v37 = *(_QWORD *)(v64 + 24);
              if (v38 >= v37 >> 1)
                v64 = sub_226486C18(v37 > 1, v38 + 1, 1, v64);
              v33 = v64;
              *(_QWORD *)(v64 + 16) = v38 + 1;
              sub_22643F6AC(v61, v33 + v62 + v38 * v34, type metadata accessor for CapturedRoom.Surface);
              v14 = (uint64_t)v63;
            }
LABEL_21:
            v24 = (__n128 *)((char *)v24 + 1);
          }
          while (v24 != v12);
          if ((unint64_t)v12 > *(_QWORD *)(v14 + 16))
          {
            __break(1u);
            goto LABEL_66;
          }
          v39 = 0;
          v40 = MEMORY[0x24BEE4AF8];
          do
          {
            if ((v39[2].n128_u8[v14] & 1) == 0)
            {
              sub_22643D704(v26, v65, type metadata accessor for CapturedRoom.Surface);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v40 = sub_226486C18(0, *(_QWORD *)(v40 + 16) + 1, 1, v40);
              v42 = *(_QWORD *)(v40 + 16);
              v41 = *(_QWORD *)(v40 + 24);
              if (v42 >= v41 >> 1)
                v40 = sub_226486C18(v41 > 1, v42 + 1, 1, v40);
              *(_QWORD *)(v40 + 16) = v42 + 1;
              sub_22643F6AC(v65, v40 + v62 + v42 * v34, type metadata accessor for CapturedRoom.Surface);
              v14 = (uint64_t)v63;
            }
            v39 = (__n128 *)((char *)v39 + 1);
            v26 += v34;
          }
          while (v12 != v39);
          swift_bridgeObjectRelease();
          v14 = (uint64_t)v54;
LABEL_46:
          v54 = (_QWORD *)v14;
          if (!v18)
          {
            v44 = MEMORY[0x24BEE4AF8];
LABEL_57:
            swift_bridgeObjectRelease();
            *v51 = v64;
            swift_bridgeObjectRelease();
            swift_beginAccess();
            v49 = swift_bridgeObjectRetain();
            sub_22646A3FC(v49);
            swift_endAccess();
            v50 = v52;
            *(_QWORD *)(v52 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_addedPotentialWalls) = v40;
            swift_bridgeObjectRelease();
            *(_QWORD *)(v50 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_removedPotentialWalls) = v44;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            return;
          }
          if ((unint64_t)v18 <= *(_QWORD *)(v14 + 16))
          {
            v43 = 0;
            v44 = MEMORY[0x24BEE4AF8];
            do
            {
              if ((*((_BYTE *)v43 + v14 + 32) & 1) == 0)
              {
                v45 = (*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
                v46 = *(_QWORD *)(v67 + 72);
                sub_22643D704(v60 + v45 + v46 * (_QWORD)v43, v66, type metadata accessor for CapturedRoom.Surface);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v44 = sub_226486C18(0, *(_QWORD *)(v44 + 16) + 1, 1, v44);
                v48 = *(_QWORD *)(v44 + 16);
                v47 = *(_QWORD *)(v44 + 24);
                if (v48 >= v47 >> 1)
                  v44 = sub_226486C18(v47 > 1, v48 + 1, 1, v44);
                *(_QWORD *)(v44 + 16) = v48 + 1;
                sub_22643F6AC(v66, v44 + v45 + v48 * v46, type metadata accessor for CapturedRoom.Surface);
              }
              v43 = (uint64_t *)((char *)v43 + 1);
            }
            while (v18 != v43);
            goto LABEL_57;
          }
LABEL_66:
          __break(1u);
          return;
        }
LABEL_64:
        v63 = sub_2264C12E0((uint64_t)v63);
        goto LABEL_17;
      }
    }
    swift_bridgeObjectRelease();
    v2 = MEMORY[0x24BEE4AF8];
    goto LABEL_15;
  }
}

id sub_226521E3C()
{
  return sub_22646DF78(type metadata accessor for RSSessionDelegateWrapper);
}

void sub_226521E58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  void *v7;
  id v8;
  _QWORD *v9;
  uint64_t Strong;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v14 = a1;
    v15 = MEMORY[0x24BEE4AF8];
    sub_22655D37C();
    v5 = (_QWORD *)(a2 + 32);
    while (1)
    {
      if (*v5++)
      {
        swift_bridgeObjectRetain();
        v7 = (void *)sub_22655CCBC();
      }
      else
      {
        v7 = 0;
      }
      v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE80950]), sel_initWithDictionaryRepresentation_, v7);

      if (!v8)
        break;
      swift_bridgeObjectRelease();
      sub_22655D364();
      sub_22655D388();
      sub_22655D394();
      sub_22655D370();
      if (!--v2)
      {
        v3 = v15;
        a1 = v14;
        goto LABEL_9;
      }
    }
    __break(1u);
    goto LABEL_13;
  }
LABEL_9:
  v9 = (_QWORD *)(a1 + 16);
  swift_beginAccess();
  *v9 = v3;
  swift_bridgeObjectRelease();
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v11 = *(void **)(Strong + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_floorPlanGenerator);
  v12 = v11;
  swift_release();
  if (v11)
  {
    swift_beginAccess();
    sub_22643F548(0, (unint64_t *)&unk_255849AB0);
    swift_bridgeObjectRetain();
    v13 = (void *)sub_22655CEC0();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_updateWithObjects_, v13);

    return;
  }
LABEL_14:
  __break(1u);
}

uint64_t sub_226522074(void *a1, uint64_t a2, void *a3, uint64_t a4, unint64_t *a5, uint64_t a6, void (*a7)(uint64_t))
{
  uint64_t v10;
  id v11;
  id v12;

  sub_22643F548(0, a5);
  v10 = sub_22655CECC();
  v11 = a3;
  v12 = a1;
  a7(v10);

  return swift_bridgeObjectRelease();
}

uint64_t sub_2265220F0()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    sub_2265265C4();
    v2 = swift_allocError();
    *v3 = 5;
    v4 = *(void **)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error) = v2;

    if (qword_25583F910 != -1)
      swift_once();
    v5 = sub_22655CDDC();
    sub_2264A3328(v5, v6);
    swift_bridgeObjectRelease();
    sub_226516B30(1);
    return swift_release();
  }
  return result;
}

id sub_226522260(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;
  objc_super v8;

  v6 = swift_weakInit();
  v8.receiver = a1;
  v8.super_class = (Class)a4(v6);
  return objc_msgSendSuper2(&v8, sel_init);
}

id sub_2265222B0()
{
  return sub_22646DF78(type metadata accessor for OUSessionDelegateWrapper);
}

BOOL sub_2265222CC(uint64_t a1)
{
  return (a1 & 0xC000000000000001) == 0;
}

uint64_t sub_2265222D8(unint64_t a1)
{
  uint64_t v2;

  if (!(a1 >> 62))
    return *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v2 = sub_22655D400();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_226522334(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v4 = v3;
  v8 = *v3;
  v10 = sub_2265347C8(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_2265478D4();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_release();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v21 = 8 * v10;
    *(_QWORD *)(v16[6] + v21) = a2;
    *(_QWORD *)(v16[7] + v21) = a1;
    v22 = v16[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v16[2] = v24;
      return swift_retain();
    }
    goto LABEL_14;
  }
  sub_226540978(v13, a3 & 1);
  v19 = sub_2265347C8(a2);
  if ((v14 & 1) == (v20 & 1))
  {
    v10 = v19;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for ScanEntity();
  result = sub_22655D5A4();
  __break(1u);
  return result;
}

uint64_t sub_226522484(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v5 = v4;
  v10 = *v4;
  v12 = sub_2265348F0(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_226547A7C();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v18[7] + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v20 = (uint64_t *)(v18[6] + 16 * v12);
    *v20 = a2;
    v20[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v21 = v18[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_226540CA8(result, a4 & 1);
  result = sub_2265348F0(a2, a3);
  if ((v16 & 1) == (v19 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_22655D5A4();
  __break(1u);
  return result;
}

uint64_t sub_2265225D4(uint64_t a1, uint64_t a2, char a3)
{
  return sub_2265225FC(a1, a2, a3, (void (*)(void))sub_226547A88, (void (*)(void))sub_226540CB4);
}

uint64_t sub_2265225E8(uint64_t a1, uint64_t a2, char a3)
{
  return sub_2265225FC(a1, a2, a3, (void (*)(void))sub_226547A94, (void (*)(void))sub_226540CC0);
}

uint64_t sub_2265225FC(uint64_t a1, uint64_t a2, char a3, void (*a4)(void), void (*a5)(void))
{
  _QWORD *v5;
  _QWORD **v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t result;
  unint64_t v25;
  char v26;
  void (*v27)(void);
  uint64_t v28;

  v27 = a5;
  v28 = a1;
  v7 = (_QWORD **)v5;
  v10 = sub_22655C140();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)*v5;
  v16 = sub_226534858(a2);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_14;
  }
  v20 = v15;
  v21 = v14[3];
  if (v21 >= v19 && (a3 & 1) != 0)
  {
LABEL_7:
    v22 = *v7;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = v22[7];
      result = swift_release();
      *(_QWORD *)(v23 + 8 * v16) = v28;
      return result;
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a3 & 1) == 0)
  {
    a4();
    goto LABEL_7;
  }
  v27();
  v25 = sub_226534858(a2);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_14:
    result = sub_22655D5A4();
    __break(1u);
    return result;
  }
  v16 = v25;
  v22 = *v7;
  if ((v20 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  return sub_226523EA4(v16, (uint64_t)v13, v28, v22);
}

uint64_t sub_226522768(uint64_t a1, uint64_t a2, char a3)
{
  return sub_2265225FC(a1, a2, a3, (void (*)(void))sub_226547AA0, (void (*)(void))sub_226541064);
}

uint64_t sub_22652277C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_2265225FC(a1, a2, a3, (void (*)(void))sub_226547AAC, (void (*)(void))sub_226541070);
}

uint64_t sub_226522790(uint64_t a1, char a2, float32x2_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_2265349B8(a3);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a2 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a2 & 1) == 0)
  {
    result = (uint64_t)sub_226547C8C();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v19 = 8 * v10;
    *(double *)(v16[6] + v19) = *(double *)&a3;
    *(_QWORD *)(v16[7] + v19) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_226541684(result, a2 & 1);
  result = sub_2265349B8(a3);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558443D0);
  result = sub_22655D5A4();
  __break(1u);
  return result;
}

uint64_t sub_2265228C8(uint64_t a1, char a2, double a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v4 = v3;
  v8 = *v3;
  v10 = sub_226534A40(a1);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a2 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a2 & 1) == 0)
  {
    result = (uint64_t)sub_226547FD8();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(double *)(v16[7] + 8 * v10) = a3;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v18 = 8 * v10;
    *(_QWORD *)(v16[6] + v18) = a1;
    *(double *)(v16[7] + v18) = a3;
    v19 = v16[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return swift_retain();
    }
    goto LABEL_14;
  }
  sub_226541C44(result, a2 & 1);
  result = sub_226534A40(a1);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for CDTTriangle();
  result = sub_22655D5A4();
  __break(1u);
  return result;
}

uint64_t sub_226522A08(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_226534A10(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_22654817C();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_release();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v19 = 8 * v10;
    *(_QWORD *)(v16[6] + v19) = a2;
    *(_QWORD *)(v16[7] + v19) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_226541E20(result, a3 & 1);
  result = sub_226534A10(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_22655D5A4();
  __break(1u);
  return result;
}

uint64_t sub_226522B40(char a1, uint64_t a2, char a3, __n128 a4)
{
  _QWORD *v4;
  _QWORD **v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t result;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  __n128 *v22;
  char v23;
  __n128 v24;

  v5 = (_QWORD **)v4;
  v24 = a4;
  v9 = sub_22655C140();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*v4;
  v15 = sub_226534858(a2);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  result = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  v19 = v14;
  v20 = v13[3];
  if (v20 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    v21 = *v5;
    if ((v19 & 1) != 0)
    {
LABEL_8:
      v22 = (__n128 *)(v21[7] + 32 * v15);
      *v22 = v24;
      v22[1].n128_u8[0] = a1 & 1;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_2265486DC();
    goto LABEL_7;
  }
  sub_226542754(result, a3 & 1);
  result = sub_226534858(a2);
  if ((v19 & 1) != (v23 & 1))
  {
LABEL_14:
    result = sub_22655D5A4();
    __break(1u);
    return result;
  }
  v15 = result;
  v21 = *v5;
  if ((v19 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  return sub_226523D10(v15, (uint64_t)v12, a1 & 1, v21, v24);
}

uint64_t sub_226522CAC(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_226534A10(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_226548918();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v19 = 8 * v10;
    *(_QWORD *)(v16[6] + v19) = a2;
    *(_QWORD *)(v16[7] + v19) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_226542B08(result, a3 & 1);
  result = sub_226534A10(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_22655D5A4();
  __break(1u);
  return result;
}

uint64_t sub_226522DE4(uint64_t a1, unsigned __int8 a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v8 = *v3;
  v10 = sub_226534A0C(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_226548ABC();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      return sub_22652A2CC(a1, v16[7] + 40 * v10);
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    v18 = v16[7] + 40 * v10;
    v19 = *(_OWORD *)a1;
    v20 = *(_OWORD *)(a1 + 16);
    *(_DWORD *)(v18 + 32) = *(_DWORD *)(a1 + 32);
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    v21 = v16[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v16[2] = v23;
      return result;
    }
    goto LABEL_14;
  }
  sub_226542DC4(result, a3 & 1);
  result = sub_226534A0C(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      return sub_22652A2CC(a1, v16[7] + 40 * v10);
    goto LABEL_11;
  }
LABEL_15:
  result = sub_22655D5A4();
  __break(1u);
  return result;
}

uint64_t sub_226522F3C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_2265225FC(a1, a2, a3, (void (*)(void))sub_226548CA4, (void (*)(void))sub_2265433B8);
}

uint64_t sub_226522F50(uint64_t a1, uint64_t a2, char a3)
{
  return sub_2265225FC(a1, a2, a3, (void (*)(void))sub_226548CB0, (void (*)(void))sub_2265433C4);
}

_OWORD *sub_226522F64(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_2265348F0(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        return sub_226455C88(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_226548EEC();
      goto LABEL_7;
    }
    sub_2265433D0(v15, a4 & 1);
    v21 = sub_2265348F0(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_226523F3C(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_22655D5A4();
  __break(1u);
  return result;
}

uint64_t sub_226523094(uint64_t a1, uint64_t a2, char a3)
{
  return sub_2265238A4(a1, a2, a3, (void (*)(void))sub_2265490D0, (void (*)(void))sub_2265436CC, (uint64_t (*)(_QWORD))type metadata accessor for ScanItemStrut);
}

uint64_t sub_2265230B0(uint64_t a1, unsigned __int8 a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v4 = v3;
  v8 = *v3;
  v10 = sub_226534A0C(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_2265490E4();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v16[7] + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v18 = v16[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (!v19)
    {
      v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_2265436E0(result, a3 & 1);
  result = sub_226534A0C(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_22655D5A4();
  __break(1u);
  return result;
}

uint64_t sub_2265231D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t result;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;

  v5 = (_QWORD **)v4;
  v28 = a2;
  v9 = sub_22655C140();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*v4;
  v15 = sub_226534858(a3);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  v19 = v14;
  v20 = v13[3];
  if (v20 >= v18 && (a4 & 1) != 0)
  {
LABEL_7:
    v21 = *v5;
    if ((v19 & 1) != 0)
    {
LABEL_8:
      v22 = (uint64_t *)(v21[7] + 16 * v15);
      result = swift_bridgeObjectRelease();
      v24 = v28;
      *v22 = a1;
      v22[1] = v24;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a4 & 1) == 0)
  {
    sub_226549270();
    goto LABEL_7;
  }
  sub_2265439A4(v18, a4 & 1);
  v25 = sub_226534858(a3);
  if ((v19 & 1) != (v26 & 1))
  {
LABEL_14:
    result = sub_22655D5A4();
    __break(1u);
    return result;
  }
  v15 = v25;
  v21 = *v5;
  if ((v19 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  return sub_226523FB0(v15, (uint64_t)v12, a1, v28, v21);
}

uint64_t sub_226523344(uint64_t a1, char a2, __n128 a3, __n128 a4)
{
  _QWORD *v4;
  _QWORD **v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  __n128 v22;
  char v23;
  __n128 v24;
  __n128 v25;

  v5 = (_QWORD **)v4;
  v24 = a3;
  v25 = a4;
  v8 = sub_22655C05C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v4;
  v14 = sub_226534D28(a1);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= result && (a2 & 1) != 0)
  {
LABEL_7:
    v20 = *v5;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7] + 32 * v14;
      v22 = v25;
      *(__n128 *)v21 = v24;
      *(__n128 *)(v21 + 16) = v22;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a2 & 1) == 0)
  {
    result = (uint64_t)sub_226549684();
    goto LABEL_7;
  }
  sub_226543F30(result, a2 & 1);
  result = sub_226534D28(a1);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    result = sub_22655D5A4();
    __break(1u);
    return result;
  }
  v14 = result;
  v20 = *v5;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  return sub_226524050(v14, (uint64_t)v11, v20, v24, v25);
}

void sub_2265234A4(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v8 = *v3;
  v10 = sub_226534E48(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_226549B24();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];

      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v20 = 8 * v10;
    *(_QWORD *)(v16[6] + v20) = a2;
    *(_QWORD *)(v16[7] + v20) = a1;
    v21 = v16[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v16[2] = v23;
      swift_retain();
      return;
    }
    goto LABEL_14;
  }
  sub_226544638(v13, a3 & 1);
  v18 = sub_226534E48(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for PixelBufferFormat();
  sub_22655D5A4();
  __break(1u);
}

void sub_2265235F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_2265348F0(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_226549CC8();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_226544954(v15, a4 & 1);
  v20 = sub_2265348F0(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_22655D5A4();
  __break(1u);
}

uint64_t sub_226523750(char a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;

  v4 = (_QWORD **)v3;
  v8 = sub_22655C140();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_226534858(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      *(_BYTE *)(v20[7] + v14) = a1 & 1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_22654A028();
    goto LABEL_7;
  }
  sub_226544F70(result, a3 & 1);
  result = sub_226534858(a2);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_14:
    result = sub_22655D5A4();
    __break(1u);
    return result;
  }
  v14 = result;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_22652413C(v14, (uint64_t)v11, a1 & 1, v20);
}

