uint64_t sub_2265238A4(uint64_t a1, uint64_t a2, char a3, void (*a4)(void), void (*a5)(void), uint64_t (*a6)(_QWORD))
{
  _QWORD *v6;
  _QWORD **v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  unint64_t v27;
  char v28;
  uint64_t v29;
  void (*v30)(void);
  void (*v31)(void);
  uint64_t v32;

  v30 = a4;
  v31 = a5;
  v8 = (_QWORD **)v6;
  v32 = a1;
  v11 = sub_22655C140();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (_QWORD *)*v6;
  v17 = sub_226534858(a2);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_14;
  }
  v21 = v16;
  v22 = v15[3];
  if (v22 >= v20 && (a3 & 1) != 0)
  {
LABEL_7:
    v23 = *v8;
    if ((v21 & 1) != 0)
    {
LABEL_8:
      v24 = v23[7];
      v25 = a6(0);
      return sub_22652A288(v32, v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v17, a6);
    }
    goto LABEL_11;
  }
  if (v22 >= v20 && (a3 & 1) == 0)
  {
    v30();
    goto LABEL_7;
  }
  v31();
  v27 = sub_226534858(a2);
  if ((v21 & 1) != (v28 & 1))
  {
LABEL_14:
    result = sub_22655D5A4();
    __break(1u);
    return result;
  }
  v17 = v27;
  v23 = *v8;
  if ((v21 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  return sub_2265241D4(v17, (uint64_t)v14, v32, v23, a6);
}

uint64_t sub_226523A28(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_226534CD0(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = sub_22655C05C();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, a1, v18);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_22654A764();
      goto LABEL_7;
    }
    sub_226545ABC(v13, a3 & 1);
    v20 = sub_226534CD0(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_22652428C(v10, a2, a1, v16);
      return swift_bridgeObjectRetain();
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255846718);
  result = sub_22655D5A4();
  __break(1u);
  return result;
}

uint64_t sub_226523B58(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_226534A0C(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = sub_22655C05C();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, a1, v18);
      }
      return sub_226524318(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_22654A990();
      goto LABEL_7;
    }
    sub_226545DCC(v13, a3 & 1);
    v20 = sub_226534A0C(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_226524318(v10, a2, a1, v16);
    }
  }
  result = sub_22655D5A4();
  __break(1u);
  return result;
}

unint64_t sub_226523C7C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a5[6] + 8 * result) = a2;
  v5 = (_QWORD *)(a5[7] + 16 * result);
  *v5 = a3;
  v5[1] = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_226523CC8(unint64_t result, uint64_t a2, _QWORD *a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a3[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a3[6] + v4) = a2;
  *(double *)(a3[7] + v4) = a4;
  v5 = a3[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a3[2] = v7;
  return result;
}

uint64_t sub_226523D10(unint64_t a1, uint64_t a2, unsigned __int8 a3, _QWORD *a4, __n128 a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  __n128 *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v9 = a4[6];
  v10 = sub_22655C140();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a2, v10);
  v12 = (__n128 *)(a4[7] + 32 * a1);
  *v12 = a5;
  v12[1].n128_u8[0] = a3;
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

unint64_t sub_226523DC0(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a4[6] + v4) = a2;
  *(_QWORD *)(a4[7] + v4) = a3;
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

unint64_t sub_226523E08(unint64_t result, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a4[6] + result) = a2;
  v4 = a4[7] + 40 * result;
  v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a3;
  *(_OWORD *)(v4 + 16) = v5;
  *(_DWORD *)(v4 + 32) = *(_DWORD *)(a3 + 32);
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

unint64_t sub_226523E60(unint64_t result, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a4[6] + result) = a2;
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

uint64_t sub_226523EA4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_22655C140();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

_OWORD *sub_226523F3C(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_226455C88(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_226523FA4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_2265241D4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for ScanItemStrut);
}

uint64_t sub_226523FB0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a5[6];
  v11 = sub_22655C140();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a2, v11);
  v13 = (_QWORD *)(a5[7] + 16 * a1);
  *v13 = a3;
  v13[1] = a4;
  v14 = a5[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a5[2] = v16;
  return result;
}

uint64_t sub_226524050(unint64_t a1, uint64_t a2, _QWORD *a3, __n128 a4, __n128 a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  __n128 *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a3[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a3[6];
  v9 = sub_22655C05C();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v11 = (__n128 *)(a3[7] + 32 * a1);
  *v11 = a4;
  v11[1] = a5;
  v12 = a3[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a3[2] = v14;
  return result;
}

unint64_t sub_2265240F4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_22652413C(unint64_t a1, uint64_t a2, char a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_22655C140();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_BYTE *)(a4[7] + a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_2265241D4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a4[6];
  v11 = sub_22655C140();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a2, v11);
  v12 = a4[7];
  v13 = a5(0);
  result = sub_22643F6AC(a3, v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * a1, a5);
  v15 = a4[2];
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    a4[2] = v17;
  return result;
}

uint64_t sub_22652428C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = sub_22655C05C();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

uint64_t sub_226524318(unint64_t a1, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a4[6] + a1) = a2;
  v7 = a4[7];
  v8 = sub_22655C05C();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

uint64_t (*sub_2265243A4(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_226524524(v6, a2, a3);
  return sub_2265243F8;
}

uint64_t (*sub_2265243FC(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_2265245D0(v6, a2, a3);
  return sub_2265243F8;
}

uint64_t (*sub_226524450(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_22652463C(v6, a2, a3);
  return sub_2265243F8;
}

uint64_t (*sub_2265244A4(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_2265246A8(v6, a2, a3);
  return sub_2265243F8;
}

void sub_2265244F8(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_226524524(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x2276999E4](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return sub_226524590;
  }
  __break(1u);
  return result;
}

uint64_t sub_226524590()
{
  return swift_release();
}

uint64_t (*sub_226524598(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(a3 + 16) > a2)
  {
    *(_DWORD *)result = *(_DWORD *)(a3 + 4 * a2 + 32);
    return nullsub_1;
  }
  __break(1u);
  return result;
}

void (*sub_2265245D0(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x2276999E4](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for CVPixelBufferCodableBox;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_22652463C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x2276999E4](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return sub_22652A42C;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_2265246A8(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x2276999E4](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return j__s8RoomPlan23CVPixelBufferCodableBoxVwxx;
  }
  __break(1u);
  return result;
}

unint64_t sub_226524714(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  float32x2_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849BF0);
  v3 = (_QWORD *)sub_22655D430();
  v4 = (float32x2_t)a1[4];
  v5 = a1[5];
  result = sub_2265349B8(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(float32x2_t *)(v3[6] + v9) = v4;
    *(_QWORD *)(v3[7] + v9) = v5;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v4 = (float32x2_t)*(v8 - 1);
    v14 = *v8;
    swift_bridgeObjectRetain();
    result = sub_2265349B8(v4);
    v8 = v13;
    v5 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_226524820(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849BE0);
  v3 = (_QWORD *)sub_22655D430();
  v5 = a1[4];
  v4 = a1[5];
  result = sub_226534A10(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v5 = *(v8 - 1);
    v14 = *v8;
    swift_bridgeObjectRetain();
    result = sub_226534A10(v5);
    v8 = v13;
    v4 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_22652491C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  char *i;
  int32x2_t v5;
  char v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255849BD8);
    v3 = (_QWORD *)sub_22655D430();
    for (i = (char *)(a1 + 40); ; i += 16)
    {
      v5 = *(int32x2_t *)(i - 8);
      v6 = *i;
      result = sub_226534B00(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(int32x2_t *)(v3[6] + 8 * result) = v5;
      *(_BYTE *)(v3[7] + result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_2265249F0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned __int8 v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t result;
  char v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255849B88);
  v3 = (_QWORD *)sub_22655D430();
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_BYTE *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v9 = *(_DWORD *)(a1 + 72);
  result = sub_226534A0C(v4);
  if ((v11 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v12 = (_DWORD *)(a1 + 120);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    v13 = v3[7] + 40 * result;
    *(_QWORD *)v13 = v5;
    *(_BYTE *)(v13 + 8) = v6;
    *(_QWORD *)(v13 + 16) = v7;
    *(_QWORD *)(v13 + 24) = v8;
    *(_DWORD *)(v13 + 32) = v9;
    v14 = v3[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      break;
    v3[2] = v16;
    if (!--v1)
      goto LABEL_8;
    v17 = v12 + 12;
    v4 = *((_BYTE *)v12 - 40);
    v21 = *((_QWORD *)v12 - 4);
    v6 = *((_BYTE *)v12 - 24);
    v19 = *((_QWORD *)v12 - 2);
    v18 = *((_QWORD *)v12 - 1);
    v9 = *v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_226534A0C(v4);
    v12 = v17;
    v8 = v18;
    v7 = v19;
    v5 = v21;
    if ((v20 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_226524B68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  unint64_t v33;
  char v34;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255842D10);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (uint64_t)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849AF8);
  MEMORY[0x24BDAC7A8](v44);
  v49 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v43 = (char *)&v38 - v8;
  v9 = *(_QWORD *)(a1 + 64);
  v39 = a1 + 64;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v42 = (uint64_t *)(a2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_allUuidToSurfaces);
  v40 = (unint64_t)(v10 + 63) >> 6;
  v45 = a1;
  result = swift_bridgeObjectRetain();
  v14 = 0;
  while (1)
  {
    if (v12)
    {
      v47 = (v12 - 1) & v12;
      v48 = v14;
      v17 = __clz(__rbit64(v12)) | (v14 << 6);
      goto LABEL_24;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v40)
      return swift_release();
    v19 = *(_QWORD *)(v39 + 8 * v18);
    v20 = v14 + 1;
    if (!v19)
    {
      v20 = v14 + 2;
      if (v14 + 2 >= v40)
        return swift_release();
      v19 = *(_QWORD *)(v39 + 8 * v20);
      if (!v19)
      {
        v20 = v14 + 3;
        if (v14 + 3 >= v40)
          return swift_release();
        v19 = *(_QWORD *)(v39 + 8 * v20);
        if (!v19)
        {
          v20 = v14 + 4;
          if (v14 + 4 >= v40)
            return swift_release();
          v19 = *(_QWORD *)(v39 + 8 * v20);
          if (!v19)
            break;
        }
      }
    }
LABEL_23:
    v47 = (v19 - 1) & v19;
    v48 = v20;
    v17 = __clz(__rbit64(v19)) + (v20 << 6);
LABEL_24:
    v22 = v45;
    v23 = *(_QWORD *)(v45 + 48);
    v24 = sub_22655C140();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = *(_QWORD *)(v25 + 72);
    v27 = (uint64_t)v43;
    (*(void (**)(char *, unint64_t, uint64_t))(v25 + 16))(v43, v23 + v26 * v17, v24);
    v28 = *(_QWORD *)(v22 + 56);
    v46 = type metadata accessor for CapturedRoom.Surface(0);
    v29 = *(_QWORD *)(v46 - 8);
    v30 = *(_QWORD *)(v29 + 72);
    sub_22643D704(v28 + v30 * v17, v27 + *(int *)(v44 + 48), type metadata accessor for CapturedRoom.Surface);
    v31 = v49;
    sub_226446554(v27, v49, &qword_255849AF8);
    v32 = v42;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v33 = sub_226534858(v31);
    LOBYTE(v31) = v34;
    swift_bridgeObjectRelease();
    if ((v31 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v36 = *v32;
      v50 = *v32;
      *v32 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_22654A248();
        v36 = v50;
      }
      (*(void (**)(unint64_t, uint64_t))(v25 + 8))(*(_QWORD *)(v36 + 48) + v33 * v26, v24);
      v37 = v50;
      v16 = v41;
      sub_22643F6AC(*(_QWORD *)(v50 + 56) + v33 * v30, v41, type metadata accessor for CapturedRoom.Surface);
      sub_226546EF8(v33, v37);
      *v32 = v37;
      swift_bridgeObjectRelease();
      v15 = 0;
    }
    else
    {
      v15 = 1;
      v16 = v41;
    }
    v12 = v47;
    v14 = v48;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v16, v15, 1, v46);
    sub_22643D7E4(v16, &qword_255842D10);
    swift_endAccess();
    result = sub_22643D7E4(v49, &qword_255849AF8);
  }
  v21 = v14 + 5;
  if (v14 + 5 >= v40)
    return swift_release();
  v19 = *(_QWORD *)(v39 + 8 * v21);
  if (v19)
  {
    v20 = v14 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v20 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v20 >= v40)
      return swift_release();
    v19 = *(_QWORD *)(v39 + 8 * v20);
    ++v21;
    if (v19)
      goto LABEL_23;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_226524F44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  void (*v19)(uint64_t, uint64_t);
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(void);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  _BOOL8 v46;
  uint64_t v47;
  char v48;
  unint64_t v49;
  char v50;
  _QWORD *v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t result;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  _QWORD *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  _QWORD *v73;

  v4 = type metadata accessor for CapturedRoom.Surface(0);
  v62 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849AF8);
  MEMORY[0x24BDAC7A8](v61);
  v71 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v72 = (uint64_t)&v56 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v70 = (uint64_t)&v56 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v60 = (char *)&v56 - v13;
  v14 = *(_QWORD *)(a1 + 64);
  v57 = a1 + 64;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v69 = (_QWORD *)(a2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_allUuidToSurfaces);
  v58 = (unint64_t)(v15 + 63) >> 6;
  v63 = a1;
  swift_bridgeObjectRetain();
  v18 = 0;
  v59 = v6;
  while (1)
  {
    if (v17)
    {
      v67 = (v17 - 1) & v17;
      v68 = v18;
      v20 = __clz(__rbit64(v17)) | (v18 << 6);
    }
    else
    {
      v21 = v18 + 1;
      if (__OFADD__(v18, 1))
        goto LABEL_36;
      if (v21 >= v58)
        return swift_release();
      v22 = *(_QWORD *)(v57 + 8 * v21);
      v23 = v18 + 1;
      if (!v22)
      {
        v23 = v18 + 2;
        if (v18 + 2 >= v58)
          return swift_release();
        v22 = *(_QWORD *)(v57 + 8 * v23);
        if (!v22)
        {
          v23 = v18 + 3;
          if (v18 + 3 >= v58)
            return swift_release();
          v22 = *(_QWORD *)(v57 + 8 * v23);
          if (!v22)
          {
            v23 = v18 + 4;
            if (v18 + 4 >= v58)
              return swift_release();
            v22 = *(_QWORD *)(v57 + 8 * v23);
            if (!v22)
            {
              v24 = v18 + 5;
              if (v18 + 5 >= v58)
                return swift_release();
              v22 = *(_QWORD *)(v57 + 8 * v24);
              if (!v22)
              {
                while (1)
                {
                  v23 = v24 + 1;
                  if (__OFADD__(v24, 1))
                    goto LABEL_37;
                  if (v23 >= v58)
                    return swift_release();
                  v22 = *(_QWORD *)(v57 + 8 * v23);
                  ++v24;
                  if (v22)
                    goto LABEL_23;
                }
              }
              v23 = v18 + 5;
            }
          }
        }
      }
LABEL_23:
      v67 = (v22 - 1) & v22;
      v68 = v23;
      v20 = __clz(__rbit64(v22)) + (v23 << 6);
    }
    v25 = v63;
    v26 = *(_QWORD *)(v63 + 48);
    v27 = sub_22655C140();
    v28 = *(_QWORD *)(v27 - 8);
    v64 = *(_QWORD *)(v28 + 72);
    v66 = v28;
    v29 = *(void (**)(void))(v28 + 16);
    v30 = (uint64_t)v60;
    ((void (*)(char *, unint64_t, uint64_t))v29)(v60, v26 + v64 * v20, v27);
    v31 = v61;
    v32 = *(_QWORD *)(v62 + 72);
    sub_22643D704(*(_QWORD *)(v25 + 56) + v32 * v20, v30 + *(int *)(v61 + 48), type metadata accessor for CapturedRoom.Surface);
    v33 = v70;
    sub_226446554(v30, v70, &qword_255849AF8);
    v34 = *(int *)(v31 + 48);
    v35 = v72;
    v36 = v72 + v34;
    v37 = v33 + v34;
    ((void (*)(uint64_t, uint64_t, uint64_t))v29)(v72, v33, v27);
    v65 = v36;
    sub_22643D704(v37, v36, type metadata accessor for CapturedRoom.Surface);
    v38 = (uint64_t)&v71[*(int *)(v31 + 48)];
    v29();
    sub_22643D704(v37, v38, type metadata accessor for CapturedRoom.Surface);
    v39 = v69;
    swift_beginAccess();
    v40 = (uint64_t)v59;
    sub_22643F6AC(v38, (uint64_t)v59, type metadata accessor for CapturedRoom.Surface);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v73 = (_QWORD *)*v39;
    v42 = v73;
    *v39 = 0x8000000000000000;
    v44 = sub_226534858(v35);
    v45 = v42[2];
    v46 = (v43 & 1) == 0;
    v47 = v45 + v46;
    if (__OFADD__(v45, v46))
      break;
    v48 = v43;
    if (v42[3] >= v47)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_22654A248();
    }
    else
    {
      sub_22654530C(v47, isUniquelyReferenced_nonNull_native);
      v49 = sub_226534858(v72);
      if ((v48 & 1) != (v50 & 1))
        goto LABEL_38;
      v44 = v49;
    }
    v51 = v73;
    if ((v48 & 1) != 0)
    {
      sub_22652A288(v40, v73[7] + v44 * v32, type metadata accessor for CapturedRoom.Surface);
    }
    else
    {
      v73[(v44 >> 6) + 8] |= 1 << v44;
      ((void (*)(unint64_t, uint64_t, uint64_t))v29)(v51[6] + v44 * v64, v72, v27);
      sub_22643F6AC(v40, v51[7] + v44 * v32, type metadata accessor for CapturedRoom.Surface);
      v52 = v51[2];
      v53 = __OFADD__(v52, 1);
      v54 = v52 + 1;
      if (v53)
        goto LABEL_35;
      v51[2] = v54;
      v51 = v73;
    }
    *v69 = v51;
    swift_bridgeObjectRelease();
    v19 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
    v19(v72, v27);
    swift_endAccess();
    v19((uint64_t)v71, v27);
    sub_22643D748(v65, type metadata accessor for CapturedRoom.Surface);
    sub_22643D7E4(v70, &qword_255849AF8);
    v17 = v67;
    v18 = v68;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  result = sub_22655D5A4();
  __break(1u);
  return result;
}

uint64_t sub_226525460(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  unint64_t v33;
  char v34;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558480D0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (uint64_t)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849AD8);
  MEMORY[0x24BDAC7A8](v44);
  v49 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v43 = (char *)&v38 - v8;
  v9 = *(_QWORD *)(a1 + 64);
  v39 = a1 + 64;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v42 = (uint64_t *)(a2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_allUuidToObjects);
  v40 = (unint64_t)(v10 + 63) >> 6;
  v45 = a1;
  result = swift_bridgeObjectRetain();
  v14 = 0;
  while (1)
  {
    if (v12)
    {
      v47 = (v12 - 1) & v12;
      v48 = v14;
      v17 = __clz(__rbit64(v12)) | (v14 << 6);
      goto LABEL_24;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v40)
      return swift_release();
    v19 = *(_QWORD *)(v39 + 8 * v18);
    v20 = v14 + 1;
    if (!v19)
    {
      v20 = v14 + 2;
      if (v14 + 2 >= v40)
        return swift_release();
      v19 = *(_QWORD *)(v39 + 8 * v20);
      if (!v19)
      {
        v20 = v14 + 3;
        if (v14 + 3 >= v40)
          return swift_release();
        v19 = *(_QWORD *)(v39 + 8 * v20);
        if (!v19)
        {
          v20 = v14 + 4;
          if (v14 + 4 >= v40)
            return swift_release();
          v19 = *(_QWORD *)(v39 + 8 * v20);
          if (!v19)
            break;
        }
      }
    }
LABEL_23:
    v47 = (v19 - 1) & v19;
    v48 = v20;
    v17 = __clz(__rbit64(v19)) + (v20 << 6);
LABEL_24:
    v22 = v45;
    v23 = *(_QWORD *)(v45 + 48);
    v24 = sub_22655C140();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = *(_QWORD *)(v25 + 72);
    v27 = (uint64_t)v43;
    (*(void (**)(char *, unint64_t, uint64_t))(v25 + 16))(v43, v23 + v26 * v17, v24);
    v28 = *(_QWORD *)(v22 + 56);
    v46 = type metadata accessor for CapturedRoom.Object(0);
    v29 = *(_QWORD *)(v46 - 8);
    v30 = *(_QWORD *)(v29 + 72);
    sub_22643D704(v28 + v30 * v17, v27 + *(int *)(v44 + 48), type metadata accessor for CapturedRoom.Object);
    v31 = v49;
    sub_226446554(v27, v49, &qword_255849AD8);
    v32 = v42;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v33 = sub_226534858(v31);
    LOBYTE(v31) = v34;
    swift_bridgeObjectRelease();
    if ((v31 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v36 = *v32;
      v50 = *v32;
      *v32 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_22654A520();
        v36 = v50;
      }
      (*(void (**)(unint64_t, uint64_t))(v25 + 8))(*(_QWORD *)(v36 + 48) + v33 * v26, v24);
      v37 = v50;
      v16 = v41;
      sub_22643F6AC(*(_QWORD *)(v50 + 56) + v33 * v30, v41, type metadata accessor for CapturedRoom.Object);
      sub_2265471AC(v33, v37);
      *v32 = v37;
      swift_bridgeObjectRelease();
      v15 = 0;
    }
    else
    {
      v15 = 1;
      v16 = v41;
    }
    v12 = v47;
    v14 = v48;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v16, v15, 1, v46);
    sub_22643D7E4(v16, (uint64_t *)&unk_2558480D0);
    swift_endAccess();
    result = sub_22643D7E4(v49, &qword_255849AD8);
  }
  v21 = v14 + 5;
  if (v14 + 5 >= v40)
    return swift_release();
  v19 = *(_QWORD *)(v39 + 8 * v21);
  if (v19)
  {
    v20 = v14 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v20 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v20 >= v40)
      return swift_release();
    v19 = *(_QWORD *)(v39 + 8 * v20);
    ++v21;
    if (v19)
      goto LABEL_23;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_22652583C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  void (*v19)(uint64_t, uint64_t);
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(void);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  _BOOL8 v46;
  uint64_t v47;
  char v48;
  unint64_t v49;
  char v50;
  _QWORD *v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t result;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  _QWORD *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  _QWORD *v73;

  v4 = type metadata accessor for CapturedRoom.Object(0);
  v62 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849AD8);
  MEMORY[0x24BDAC7A8](v61);
  v71 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v72 = (uint64_t)&v56 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v70 = (uint64_t)&v56 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v60 = (char *)&v56 - v13;
  v14 = *(_QWORD *)(a1 + 64);
  v57 = a1 + 64;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v69 = (_QWORD *)(a2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_allUuidToObjects);
  v58 = (unint64_t)(v15 + 63) >> 6;
  v63 = a1;
  swift_bridgeObjectRetain();
  v18 = 0;
  v59 = v6;
  while (1)
  {
    if (v17)
    {
      v67 = (v17 - 1) & v17;
      v68 = v18;
      v20 = __clz(__rbit64(v17)) | (v18 << 6);
    }
    else
    {
      v21 = v18 + 1;
      if (__OFADD__(v18, 1))
        goto LABEL_36;
      if (v21 >= v58)
        return swift_release();
      v22 = *(_QWORD *)(v57 + 8 * v21);
      v23 = v18 + 1;
      if (!v22)
      {
        v23 = v18 + 2;
        if (v18 + 2 >= v58)
          return swift_release();
        v22 = *(_QWORD *)(v57 + 8 * v23);
        if (!v22)
        {
          v23 = v18 + 3;
          if (v18 + 3 >= v58)
            return swift_release();
          v22 = *(_QWORD *)(v57 + 8 * v23);
          if (!v22)
          {
            v23 = v18 + 4;
            if (v18 + 4 >= v58)
              return swift_release();
            v22 = *(_QWORD *)(v57 + 8 * v23);
            if (!v22)
            {
              v24 = v18 + 5;
              if (v18 + 5 >= v58)
                return swift_release();
              v22 = *(_QWORD *)(v57 + 8 * v24);
              if (!v22)
              {
                while (1)
                {
                  v23 = v24 + 1;
                  if (__OFADD__(v24, 1))
                    goto LABEL_37;
                  if (v23 >= v58)
                    return swift_release();
                  v22 = *(_QWORD *)(v57 + 8 * v23);
                  ++v24;
                  if (v22)
                    goto LABEL_23;
                }
              }
              v23 = v18 + 5;
            }
          }
        }
      }
LABEL_23:
      v67 = (v22 - 1) & v22;
      v68 = v23;
      v20 = __clz(__rbit64(v22)) + (v23 << 6);
    }
    v25 = v63;
    v26 = *(_QWORD *)(v63 + 48);
    v27 = sub_22655C140();
    v28 = *(_QWORD *)(v27 - 8);
    v64 = *(_QWORD *)(v28 + 72);
    v66 = v28;
    v29 = *(void (**)(void))(v28 + 16);
    v30 = (uint64_t)v60;
    ((void (*)(char *, unint64_t, uint64_t))v29)(v60, v26 + v64 * v20, v27);
    v31 = v61;
    v32 = *(_QWORD *)(v62 + 72);
    sub_22643D704(*(_QWORD *)(v25 + 56) + v32 * v20, v30 + *(int *)(v61 + 48), type metadata accessor for CapturedRoom.Object);
    v33 = v70;
    sub_226446554(v30, v70, &qword_255849AD8);
    v34 = *(int *)(v31 + 48);
    v35 = v72;
    v36 = v72 + v34;
    v37 = v33 + v34;
    ((void (*)(uint64_t, uint64_t, uint64_t))v29)(v72, v33, v27);
    v65 = v36;
    sub_22643D704(v37, v36, type metadata accessor for CapturedRoom.Object);
    v38 = (uint64_t)&v71[*(int *)(v31 + 48)];
    v29();
    sub_22643D704(v37, v38, type metadata accessor for CapturedRoom.Object);
    v39 = v69;
    swift_beginAccess();
    v40 = (uint64_t)v59;
    sub_22643F6AC(v38, (uint64_t)v59, type metadata accessor for CapturedRoom.Object);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v73 = (_QWORD *)*v39;
    v42 = v73;
    *v39 = 0x8000000000000000;
    v44 = sub_226534858(v35);
    v45 = v42[2];
    v46 = (v43 & 1) == 0;
    v47 = v45 + v46;
    if (__OFADD__(v45, v46))
      break;
    v48 = v43;
    if (v42[3] >= v47)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_22654A520();
    }
    else
    {
      sub_226545714(v47, isUniquelyReferenced_nonNull_native);
      v49 = sub_226534858(v72);
      if ((v48 & 1) != (v50 & 1))
        goto LABEL_38;
      v44 = v49;
    }
    v51 = v73;
    if ((v48 & 1) != 0)
    {
      sub_22652A288(v40, v73[7] + v44 * v32, type metadata accessor for CapturedRoom.Object);
    }
    else
    {
      v73[(v44 >> 6) + 8] |= 1 << v44;
      ((void (*)(unint64_t, uint64_t, uint64_t))v29)(v51[6] + v44 * v64, v72, v27);
      sub_22643F6AC(v40, v51[7] + v44 * v32, type metadata accessor for CapturedRoom.Object);
      v52 = v51[2];
      v53 = __OFADD__(v52, 1);
      v54 = v52 + 1;
      if (v53)
        goto LABEL_35;
      v51[2] = v54;
      v51 = v73;
    }
    *v69 = v51;
    swift_bridgeObjectRelease();
    v19 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
    v19(v72, v27);
    swift_endAccess();
    v19((uint64_t)v71, v27);
    sub_22643D748(v65, type metadata accessor for CapturedRoom.Object);
    sub_22643D7E4(v70, &qword_255849AD8);
    v17 = v67;
    v18 = v68;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  result = sub_22655D5A4();
  __break(1u);
  return result;
}

unint64_t sub_226525D58(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  __int128 *i;
  float32x2_t v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  __int128 v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255849BA8);
    v3 = (_QWORD *)sub_22655D430();
    for (i = (__int128 *)(a1 + 48); ; i += 2)
    {
      v5 = *(float32x2_t *)(i - 1);
      v11 = *i;
      result = sub_2265349B8(v5);
      if ((v7 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(float32x2_t *)(v3[6] + 8 * result) = v5;
      *(_OWORD *)(v3[7] + 16 * result) = v11;
      v8 = v3[2];
      v9 = __OFADD__(v8, 1);
      v10 = v8 + 1;
      if (v9)
        goto LABEL_10;
      v3[2] = v10;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t sub_226525E3C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  id v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void *v24;
  _OWORD *v25;
  id v26;
  id v27;
  _QWORD v29[4];
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;

  v2 = v1;
  v34 = a1;
  v3 = sub_22655D064();
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v31 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22655D04C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v5);
  v7 = sub_22655CBFC();
  MEMORY[0x24BDAC7A8](v7);
  *(_BYTE *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 32) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v2 + 48) = 0;
  swift_unknownObjectWeakInit();
  *(_WORD *)(v2 + 64) = 1;
  v8 = v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_recordFileUrl;
  v9 = sub_22655C05C();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v10(v8, 1, 1, v9);
  v10(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_replayFileUrl, 1, 1, v9);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_spiReplayDelegate + 8) = 0;
  swift_unknownObjectWeakInit();
  v11 = (_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_loggingDirectory);
  *v11 = 0;
  v11[1] = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_debugDelegate + 8) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_internalDelegate + 8) = 0;
  swift_unknownObjectWeakInit();
  sub_22655CB78();
  *(_BYTE *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_enableLiveDump) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession____lazy_storage___iuLogManager) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runActive) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runAllowed) = 1;
  v12 = v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_configuration;
  *(_QWORD *)v12 = 0x100010101010101;
  *(_BYTE *)(v12 + 8) = 1;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arWorldTrackingConfiguration) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arRunOption) = 8;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arRecordingConfig) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_currentArConfiguration) = 0;
  v13 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_keyframes;
  v14 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v2 + v13) = sub_226513F60(MEMORY[0x24BEE4AF8]);
  v15 = (uint64_t *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_floorPlanModel);
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE80978]), sel_init);
  v17 = (int *)type metadata accessor for CapturedRoom(0);
  v18 = v17[12];
  *(uint64_t *)((char *)v15 + v18) = 0;
  *(uint64_t *)((char *)v15 + v17[13]) = 2;
  *v15 = v14;
  v15[1] = v14;
  v15[2] = v14;
  v15[3] = v14;
  v15[4] = v14;
  v15[5] = v14;
  *(uint64_t *)((char *)v15 + v17[14]) = v14;
  *(uint64_t *)((char *)v15 + v17[15]) = (uint64_t)v16;
  sub_22655C134();
  *(uint64_t *)((char *)v15 + v17[11]) = v14;
  *(uint64_t *)((char *)v15 + v18) = 0;
  v19 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_allUuidToSurfaces;
  *(_QWORD *)(v2 + v19) = sub_2265140F4(v14, (uint64_t *)&unk_255849C20, (uint64_t *)&unk_25584A860, type metadata accessor for CapturedRoom.Surface);
  v20 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_allUuidToObjects;
  *(_QWORD *)(v2 + v20) = sub_2265140F4(v14, (uint64_t *)&unk_255849C10, (uint64_t *)&unk_25584A850, type metadata accessor for CapturedRoom.Object);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_floorPlanGenerator) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_okObjDet) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_detectedObjects) = v14;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_objectDetectionEnabled) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_potentiallWalls) = v14;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_addedPotentialWalls) = v14;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_removedPotentialWalls) = v14;
  v30 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_queue;
  v29[3] = sub_22643F548(0, (unint64_t *)&qword_2558442A0);
  sub_22655CBE4();
  v35 = v14;
  v29[1] = sub_226437F28((unint64_t *)&qword_2558491E0, v6, MEMORY[0x24BEE5698]);
  v29[0] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558442B0);
  v29[2] = sub_2264ABAD4((unint64_t *)&qword_2558491F0, (uint64_t *)&unk_2558442B0);
  sub_22655D214();
  v21 = *MEMORY[0x24BEE5750];
  v22 = v31;
  v32 = *(_QWORD *)(v32 + 104);
  v23 = v33;
  ((void (*)(char *, uint64_t, uint64_t))v32)(v31, v21, v33);
  *(_QWORD *)(v2 + v30) = sub_22655D088();
  v30 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_saveFileQueue;
  sub_22655CBF0();
  v35 = v14;
  v24 = v34;
  sub_22655D214();
  ((void (*)(char *, uint64_t, uint64_t))v32)(v22, v21, v23);
  *(_QWORD *)(v2 + v30) = sub_22655D088();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arSessionObserver) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_rsSessionDelegate) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_okSessionDelegate) = 0;
  v25 = (_OWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arFrameReferenceOriginTransform);
  *v25 = xmmword_226560080;
  v25[1] = xmmword_2265600C0;
  v25[2] = xmmword_2265600D0;
  v25[3] = xmmword_22655FA60;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_trackingFailureReportCount) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_trackingFailureReportThreshold) = 600;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error) = 0;
  if (v24)
    v26 = v24;
  else
    v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB1558]), sel_init);
  *(_QWORD *)(v2 + 56) = v26;
  v27 = v24;
  sub_226514DCC(v24 == 0);
  return v2;
}

uint64_t sub_226526450()
{
  swift_release();
  return swift_deallocObject();
}

void sub_226526474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = 256;
  if (!*(_BYTE *)(v0 + 25))
    v1 = 0;
  v2 = v1 | *(unsigned __int8 *)(v0 + 24);
  v3 = 0x10000;
  if (!*(_BYTE *)(v0 + 26))
    v3 = 0;
  v4 = 0x1000000;
  if (!*(_BYTE *)(v0 + 27))
    v4 = 0;
  v5 = v2 | v3 | v4;
  v6 = 0x100000000;
  if (!*(_BYTE *)(v0 + 28))
    v6 = 0;
  v7 = 0x10000000000;
  if (!*(_BYTE *)(v0 + 29))
    v7 = 0;
  v8 = 0x1000000000000;
  if (!*(_BYTE *)(v0 + 30))
    v8 = 0;
  v9 = v6 | v7;
  v10 = 0x100000000000000;
  if (!*(_BYTE *)(v0 + 31))
    v10 = 0;
  sub_226515BE0(*(_QWORD *)(v0 + 16), v5 | v9 | v8 | v10, *(_BYTE *)(v0 + 32));
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

void *sub_226526528()
{
  uint64_t v0;

  return sub_226516E54(v0);
}

uint64_t sub_226526530(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_22652657C()
{
  unint64_t result;

  result = qword_255849218;
  if (!qword_255849218)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for RoomCaptureSession.CaptureError, &type metadata for RoomCaptureSession.CaptureError);
    atomic_store(result, (unint64_t *)&qword_255849218);
  }
  return result;
}

unint64_t sub_2265265C4()
{
  unint64_t result;

  result = qword_255849220;
  if (!qword_255849220)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for RoomCaptureSession.CaptureError, &type metadata for RoomCaptureSession.CaptureError);
    atomic_store(result, (unint64_t *)&qword_255849220);
  }
  return result;
}

unint64_t sub_22652660C()
{
  unint64_t result;

  result = qword_255849228;
  if (!qword_255849228)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for RoomCaptureSession.Instruction, &type metadata for RoomCaptureSession.Instruction);
    atomic_store(result, (unint64_t *)&qword_255849228);
  }
  return result;
}

unint64_t sub_226526654()
{
  unint64_t result;

  result = qword_255849230;
  if (!qword_255849230)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for RoomCaptureSession.mode, &type metadata for RoomCaptureSession.mode);
    atomic_store(result, (unint64_t *)&qword_255849230);
  }
  return result;
}

uint64_t sub_226526698@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *a1 + 24;
  swift_beginAccess();
  result = MEMORY[0x22769A944](v4);
  v6 = *(_QWORD *)(v3 + 32);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_2265266F0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 32) = v2;
  return swift_unknownObjectWeakAssign();
}

id sub_226526748@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(void **)(v3 + 56);
  *a2 = v4;
  return v4;
}

uint64_t sub_226526790@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 64);
  return result;
}

uint64_t sub_2265267D4(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 64) = v2;
  return result;
}

uint64_t sub_226526814@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 65);
  return result;
}

uint64_t sub_226526858(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 65) = v2;
  return result;
}

uint64_t sub_226526898@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_10Tm(a1, &OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_recordFileUrl, a2);
}

uint64_t sub_2265268A4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_226517800(a1, a2, a3, a4, &OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_recordFileUrl);
}

uint64_t sub_2265268C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_10Tm(a1, &OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_replayFileUrl, a2);
}

uint64_t keypath_get_10Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;

  v4 = *a1 + *a2;
  swift_beginAccess();
  return sub_22643D7A0(v4, a3, &qword_255849210);
}

uint64_t sub_226526924(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_226517800(a1, a2, a3, a4, &OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_replayFileUrl);
}

uint64_t sub_226526940@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_14Tm(a1, &OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_spiReplayDelegate, a2);
}

uint64_t sub_22652694C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_15Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_spiReplayDelegate);
}

uint64_t sub_226526958@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_loggingDirectory);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2265269B0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_14Tm(a1, &OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_debugDelegate, a2);
}

uint64_t keypath_get_14Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = *a1 + *a2;
  swift_beginAccess();
  result = MEMORY[0x22769A944](v4);
  v6 = *(_QWORD *)(v4 + 8);
  *a3 = result;
  a3[1] = v6;
  return result;
}

uint64_t sub_226526A10(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_15Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_debugDelegate);
}

uint64_t keypath_set_15Tm(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *a2 + *a5;
  swift_beginAccess();
  *(_QWORD *)(v6 + 8) = v5;
  return swift_unknownObjectWeakAssign();
}

uint64_t type metadata accessor for ARRoomCaptureConfiguration()
{
  return objc_opt_self();
}

uint64_t sub_226526A98()
{
  return type metadata accessor for RoomCaptureSession();
}

uint64_t type metadata accessor for RoomCaptureSession()
{
  uint64_t result;

  result = qword_255849288;
  if (!qword_255849288)
    return swift_getSingletonMetadata();
  return result;
}

void sub_226526ADC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_226526DC4();
  if (v0 <= 0x3F)
  {
    sub_22655CB84();
    if (v1 <= 0x3F)
    {
      type metadata accessor for CapturedRoom(319);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for RoomCaptureSession()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RoomCaptureSession.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 416))();
}

uint64_t dispatch thunk of RoomCaptureSession.__allocating_init(arSession:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 424))();
}

uint64_t dispatch thunk of RoomCaptureSession.run(configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of RoomCaptureSession.stop()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of RoomCaptureSession.stop(pauseARSession:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of RoomCaptureSession.delegate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t dispatch thunk of RoomCaptureSession.delegate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 496))();
}

uint64_t dispatch thunk of RoomCaptureSession.delegate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
}

uint64_t dispatch thunk of RoomCaptureSession.arSession.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t dispatch thunk of RoomCaptureSession.arSession.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 544))();
}

uint64_t dispatch thunk of RoomCaptureSession.arSession.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 552))();
}

uint64_t dispatch thunk of RoomCaptureSession.enableOURGBRefinement.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 560))();
}

uint64_t dispatch thunk of RoomCaptureSession.enableOURGBRefinement.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 568))();
}

uint64_t dispatch thunk of RoomCaptureSession.enableOURGBRefinement.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 576))();
}

uint64_t dispatch thunk of RoomCaptureSession.sessionMode.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 584))();
}

uint64_t dispatch thunk of RoomCaptureSession.sessionMode.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 592))();
}

uint64_t dispatch thunk of RoomCaptureSession.sessionMode.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 600))();
}

uint64_t dispatch thunk of RoomCaptureSession.recordFileUrl.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 608))();
}

uint64_t dispatch thunk of RoomCaptureSession.recordFileUrl.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 616))();
}

uint64_t dispatch thunk of RoomCaptureSession.recordFileUrl.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 624))();
}

uint64_t dispatch thunk of RoomCaptureSession.replayFileUrl.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 632))();
}

uint64_t dispatch thunk of RoomCaptureSession.replayFileUrl.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 640))();
}

uint64_t dispatch thunk of RoomCaptureSession.replayFileUrl.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 648))();
}

uint64_t dispatch thunk of RoomCaptureSession.spiReplayDelegate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 656))();
}

uint64_t dispatch thunk of RoomCaptureSession.spiReplayDelegate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 664))();
}

uint64_t dispatch thunk of RoomCaptureSession.spiReplayDelegate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 672))();
}

uint64_t dispatch thunk of RoomCaptureSession.loggingDirectory.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 680))();
}

uint64_t dispatch thunk of RoomCaptureSession.loggingDirectory.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 688))();
}

uint64_t dispatch thunk of RoomCaptureSession.loggingDirectory.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 696))();
}

uint64_t dispatch thunk of RoomCaptureSession.debugDelegate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 704))();
}

uint64_t dispatch thunk of RoomCaptureSession.debugDelegate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 712))();
}

uint64_t dispatch thunk of RoomCaptureSession.debugDelegate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 720))();
}

void sub_226526DC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255849298[0])
  {
    sub_22655C05C();
    v0 = sub_22655D13C();
    if (!v1)
      atomic_store(v0, qword_255849298);
  }
}

uint64_t __swift_memcpy9_1(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for RoomCaptureSession.Configuration(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[9])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RoomCaptureSession.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for RoomCaptureSession.Configuration()
{
  return &type metadata for RoomCaptureSession.Configuration;
}

ValueMetadata *type metadata accessor for RoomCaptureSession.CaptureError()
{
  return &type metadata for RoomCaptureSession.CaptureError;
}

uint64_t _s8RoomPlan18RoomCaptureSessionC11InstructionOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_226526F38 + 4 * byte_22656830F[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_226526F6C + 4 * byte_22656830A[v4]))();
}

uint64_t sub_226526F6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_226526F74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x226526F7CLL);
  return result;
}

uint64_t sub_226526F88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x226526F90);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_226526F94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_226526F9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RoomCaptureSession.Instruction()
{
  return &type metadata for RoomCaptureSession.Instruction;
}

uint64_t storeEnumTagSinglePayload for RoomCaptureSession.mode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_226527004 + 4 * byte_226568319[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_226527038 + 4 * byte_226568314[v4]))();
}

uint64_t sub_226527038(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_226527040(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x226527048);
  return result;
}

uint64_t sub_226527054(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22652705CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_226527060(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_226527068(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RoomCaptureSession.mode()
{
  return &type metadata for RoomCaptureSession.mode;
}

uint64_t sub_226527084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of RoomCaptureSessionDelegate.captureSession(_:didUpdate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of RoomCaptureSessionDelegate.captureSession(_:didAdd:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of RoomCaptureSessionDelegate.captureSession(_:didChange:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of RoomCaptureSessionDelegate.captureSession(_:didRemove:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of RoomCaptureSessionDelegate.captureSession(_:didProvide:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of RoomCaptureSessionDelegate.captureSession(_:didStartWith:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of RoomCaptureSessionDelegate.captureSession(_:didEndWith:error:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of SpiRoomCaptureSessionReplayDelegate.captureSessionDidFinishReplay(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of SpiDebugDelegate.getLoggingDirectory()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SpiDebugDelegate.displayIndividualUpdateLog(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of SpiDebugDelegate.displayARFrameLog(log:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of SpiDebugDelegate.displayFramerateLog(log:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of SpiDebugDelegate.autoAppExit()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t type metadata accessor for ARInternalSessionObserverWrapper()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for RSSessionDelegateWrapper()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for OUSessionDelegateWrapper()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for RoomCaptureSession.InstructionState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2265271A0 + 4 * byte_226568323[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2265271D4 + 4 * byte_22656831E[v4]))();
}

uint64_t sub_2265271D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2265271DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2265271E4);
  return result;
}

uint64_t sub_2265271F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2265271F8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2265271FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_226527204(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RoomCaptureSession.InstructionState()
{
  return &type metadata for RoomCaptureSession.InstructionState;
}

unint64_t sub_226527224()
{
  unint64_t result;

  result = qword_255849A90;
  if (!qword_255849A90)
  {
    result = MEMORY[0x22769A794](&unk_226568854, &type metadata for RoomCaptureSession.InstructionState);
    atomic_store(result, (unint64_t *)&qword_255849A90);
  }
  return result;
}

uint64_t sub_226527268(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  float32x4_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t Strong;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t);
  _QWORD *v72;
  int isUniquelyReferenced_nonNull_native;
  char v74;
  unint64_t v75;
  uint64_t v76;
  _BOOL8 v77;
  uint64_t v78;
  char v79;
  unint64_t v80;
  char v81;
  _QWORD *v82;
  uint64_t v83;
  BOOL v84;
  uint64_t v85;
  size_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t *v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unsigned int (*v107)(uint64_t, uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(char *, uint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  int v118;
  char v119;
  unint64_t v120;
  uint64_t v121;
  _BOOL8 v122;
  uint64_t v123;
  char v124;
  unint64_t v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  void (*v135)(unint64_t, uint64_t);
  unint64_t v136;
  unint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  char v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  int v151;
  _QWORD *v152;
  int v153;
  char v154;
  uint64_t v155;
  _BOOL8 v156;
  uint64_t v157;
  char v158;
  unint64_t v159;
  char v160;
  uint64_t v161;
  uint64_t v162;
  id v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  id v168;
  void *v169;
  char *v170;
  void (*v171)(uint64_t, char *, uint64_t);
  unsigned int (*v172)(uint64_t, uint64_t, uint64_t);
  unint64_t v173;
  char v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  id v178;
  void *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  char v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  int v190;
  uint64_t v191;
  float32x4_t *v192;
  double v193;
  uint64_t v194;
  id v195;
  void *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t result;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  id v215;
  uint64_t v216;
  float32x4_t *v217;
  char *v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  int64_t v224;
  uint64_t v225;
  char *v226;
  uint64_t v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  uint64_t *v233;
  unint64_t v234;
  unint64_t v235;
  void (*v236)(uint64_t, uint64_t);
  char *v237;
  _QWORD *v238;
  unint64_t v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  _QWORD *v244;
  uint64_t v245;
  _QWORD *v246;
  _QWORD *v247;
  _QWORD *v248;

  v215 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v211 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v222 = (uint64_t)&v211 - v7;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v211 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558480D0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v211 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v227 = (uint64_t)&v211 - v15;
  MEMORY[0x24BDAC7A8](v16);
  v229 = (uint64_t)&v211 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849AD0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v211 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v230 = (uint64_t)&v211 - v22;
  MEMORY[0x24BDAC7A8](v23);
  v232 = (char *)&v211 - v24;
  MEMORY[0x24BDAC7A8](v25);
  v231 = (uint64_t)&v211 - v26;
  v27 = sub_22655C140();
  v242 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v226 = (char *)&v211 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v239 = (unint64_t)&v211 - v30;
  MEMORY[0x24BDAC7A8](v31);
  v234 = (unint64_t)&v211 - v32;
  MEMORY[0x24BDAC7A8](v33);
  v240 = (char *)&v211 - v34;
  MEMORY[0x24BDAC7A8](v35);
  v237 = (char *)&v211 - v36;
  MEMORY[0x24BDAC7A8](v37);
  v233 = (uint64_t *)((char *)&v211 - v38);
  v241 = type metadata accessor for CapturedRoom.Object(0);
  v39 = *(_QWORD *)(v241 - 8);
  MEMORY[0x24BDAC7A8](v241);
  v214 = (uint64_t)&v211 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41);
  v43 = (float32x4_t *)((char *)&v211 - v42);
  MEMORY[0x24BDAC7A8](v44);
  v219 = (uint64_t)&v211 - v45;
  MEMORY[0x24BDAC7A8](v46);
  v223 = (uint64_t)&v211 - v47;
  MEMORY[0x24BDAC7A8](v48);
  v235 = (unint64_t)&v211 - v49;
  MEMORY[0x24BDAC7A8](v50);
  v243 = (char *)&v211 - v51;
  MEMORY[0x24BDAC7A8](v52);
  v236 = (void (*)(uint64_t, uint64_t))((char *)&v211 - v53);
  MEMORY[0x24BDAC7A8](v54);
  v244 = (uint64_t *)((char *)&v211 - v55);
  MEMORY[0x24BDAC7A8](v56);
  v238 = (uint64_t *)((char *)&v211 - v57);
  MEMORY[0x24BDAC7A8](v58);
  v225 = (uint64_t)&v211 - v59;
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return MEMORY[0x24BEE4AF8];
  v228 = v20;
  v217 = v43;
  v218 = v13;
  v220 = v10;
  v213 = v5;
  v61 = *(_QWORD *)(a2 + 40);
  v62 = *(_QWORD *)(v61 + 16);
  v245 = v39;
  v216 = Strong;
  if (v62)
  {
    v224 = v225 + *(int *)(v241 + 32);
    v63 = v39;
    v64 = v61 + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80));
    v65 = v27;
    v27 = *(_QWORD *)(v63 + 72);
    v221 = v61;
    swift_bridgeObjectRetain();
    v246 = (_QWORD *)MEMORY[0x24BEE4B00];
    v66 = type metadata accessor for CapturedRoom.Object;
    v67 = v242;
    v68 = (uint64_t)v233;
    do
    {
      v69 = v225;
      sub_22643D704(v64, v225, v66);
      v67 = *(_QWORD *)(v67 + 16);
      v70 = v65;
      ((void (*)(uint64_t, int64_t, uint64_t))v67)(v68, v224, v65);
      v71 = v66;
      sub_22643F6AC(v69, (uint64_t)v238, v66);
      v72 = v246;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v248 = v72;
      v75 = sub_226534858(v68);
      v76 = v72[2];
      v77 = (v74 & 1) == 0;
      v78 = v76 + v77;
      if (__OFADD__(v76, v77))
        goto LABEL_142;
      v79 = v74;
      if (v72[3] >= v78)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_22654A520();
      }
      else
      {
        sub_226545714(v78, isUniquelyReferenced_nonNull_native);
        v80 = sub_226534858((uint64_t)v233);
        if ((v79 & 1) != (v81 & 1))
          goto LABEL_159;
        v75 = v80;
      }
      v66 = v71;
      v82 = v248;
      if ((v79 & 1) != 0)
      {
        v246 = v248;
        sub_22652A288((uint64_t)v238, v248[7] + v75 * v27, v71);
        v68 = (uint64_t)v233;
      }
      else
      {
        v248[(v75 >> 6) + 8] |= 1 << v75;
        v68 = (uint64_t)v233;
        ((void (*)(unint64_t, uint64_t *, uint64_t))v67)(v82[6] + *(_QWORD *)(v242 + 72) * v75, v233, v70);
        sub_22643F6AC((uint64_t)v238, v82[7] + v75 * v27, v71);
        v83 = v82[2];
        v84 = __OFADD__(v83, 1);
        v85 = v83 + 1;
        if (v84)
          goto LABEL_148;
        v82[2] = v85;
        v246 = v248;
      }
      swift_bridgeObjectRelease();
      v67 = v242;
      v65 = v70;
      (*(void (**)(uint64_t, uint64_t))(v242 + 8))(v68, v70);
      v64 += v27;
      --v62;
    }
    while (v62);
    swift_bridgeObjectRelease();
    Strong = v216;
    v39 = v245;
    v27 = v70;
  }
  else
  {
    v246 = (_QWORD *)MEMORY[0x24BEE4B00];
    v67 = v242;
  }
  v87 = Strong + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_allUuidToObjects;
  swift_beginAccess();
  v233 = (uint64_t *)v87;
  v88 = *(_QWORD *)v87;
  v89 = *(_QWORD *)(*(_QWORD *)v87 + 64);
  v221 = *(_QWORD *)v87 + 64;
  v90 = 1 << *(_BYTE *)(v88 + 32);
  v91 = -1;
  if (v90 < 64)
    v91 = ~(-1 << v90);
  v75 = v91 & v89;
  v224 = (unint64_t)(v90 + 63) >> 6;
  v212 = v224 - 1;
  v225 = v88;
  swift_bridgeObjectRetain();
  v68 = 0;
  v92 = (_QWORD *)MEMORY[0x24BEE4B00];
  v93 = &qword_255849AD8;
  v94 = (uint64_t)v232;
  while (2)
  {
    v238 = v92;
    if (v75)
    {
      v96 = __clz(__rbit64(v75));
      v75 &= v75 - 1;
      v97 = v96 | (v68 << 6);
      goto LABEL_26;
    }
    v101 = v68 + 1;
    if (__OFADD__(v68, 1))
      goto LABEL_144;
    if (v101 >= v224)
      goto LABEL_44;
    v102 = *(_QWORD *)(v221 + 8 * v101);
    if (v102)
      goto LABEL_30;
    v103 = v68 + 2;
    ++v68;
    if (v101 + 1 >= v224)
      goto LABEL_44;
    v102 = *(_QWORD *)(v221 + 8 * v103);
    if (v102)
      goto LABEL_33;
    v68 = v101 + 1;
    if (v101 + 2 >= v224)
      goto LABEL_44;
    v102 = *(_QWORD *)(v221 + 8 * (v101 + 2));
    if (v102)
    {
      v101 += 2;
LABEL_30:
      v75 = (v102 - 1) & v102;
      v97 = __clz(__rbit64(v102)) + (v101 << 6);
      v68 = v101;
LABEL_26:
      v98 = v225;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v67 + 16))(v94, *(_QWORD *)(v225 + 48) + *(_QWORD *)(v67 + 72) * v97, v27);
      v99 = *(_QWORD *)(v98 + 56) + *(_QWORD *)(v39 + 72) * v97;
      v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849AD8);
      sub_22643D704(v99, v94 + *(int *)(v100 + 48), type metadata accessor for CapturedRoom.Object);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 56))(v94, 0, 1, v100);
      goto LABEL_45;
    }
    v103 = v101 + 3;
    v68 = v101 + 2;
    if (v101 + 3 >= v224)
      goto LABEL_44;
    v102 = *(_QWORD *)(v221 + 8 * v103);
    if (v102)
    {
LABEL_33:
      v101 = v103;
      goto LABEL_30;
    }
    while (1)
    {
      v101 = v103 + 1;
      if (__OFADD__(v103, 1))
      {
        __break(1u);
LABEL_151:
        __break(1u);
LABEL_152:
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v68, 1, 1, v27);
LABEL_153:
        __break(1u);
LABEL_154:
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v93)(v222, 1, 1, v67);
LABEL_155:
        __break(1u);
LABEL_156:
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v93)(v213, 1, 1, v27);
LABEL_157:
        __break(1u);
        goto LABEL_158;
      }
      if (v101 >= v224)
        break;
      v102 = *(_QWORD *)(v221 + 8 * v101);
      ++v103;
      if (v102)
        goto LABEL_30;
    }
    v68 = v212;
LABEL_44:
    v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849AD8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 56))(v94, 1, 1, v104);
    v75 = 0;
LABEL_45:
    v105 = v231;
    sub_226446554(v94, v231, &qword_255849AD0);
    v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849AD8);
    v93 = *(uint64_t **)(v106 - 8);
    v107 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v93[6];
    if (v107(v105, 1, v106) == 1)
    {
      swift_release();
      v129 = v246[8];
      v236 = (void (*)(uint64_t, uint64_t))(v246 + 8);
      v130 = 1 << *((_BYTE *)v246 + 32);
      v131 = -1;
      if (v130 < 64)
        v131 = ~(-1 << v130);
      v132 = v131 & v129;
      v237 = (char *)((unint64_t)(v130 + 63) >> 6);
      v232 = v237 - 1;
      swift_bridgeObjectRetain();
      v133 = 0;
      v134 = (_QWORD *)MEMORY[0x24BEE4B00];
      v68 = (uint64_t)v228;
      v75 = v234;
      while (2)
      {
        v244 = v134;
        if (v132)
        {
          v136 = __clz(__rbit64(v132));
          v132 &= v132 - 1;
          v240 = (char *)v133;
          v137 = v136 | (v133 << 6);
          goto LABEL_66;
        }
        v140 = v133 + 1;
        if (__OFADD__(v133, 1))
          goto LABEL_145;
        if (v140 < (uint64_t)v237)
        {
          v141 = *((_QWORD *)v236 + v140);
          if (v141)
          {
LABEL_70:
            v132 = (v141 - 1) & v141;
            v137 = __clz(__rbit64(v141)) + (v140 << 6);
            v240 = (char *)v140;
LABEL_66:
            v138 = v246;
            (*(void (**)(uint64_t, unint64_t, uint64_t))(v67 + 16))(v68, v246[6] + *(_QWORD *)(v67 + 72) * v137, v27);
            sub_22643D704(v138[7] + *(_QWORD *)(v245 + 72) * v137, v68 + *(int *)(v106 + 48), type metadata accessor for CapturedRoom.Object);
            v139 = 0;
LABEL_79:
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v93[7])(v68, v139, 1, v106);
            v142 = v230;
            sub_226446554(v68, v230, &qword_255849AD0);
            if (v107(v142, 1, v106) != 1)
            {
              v143 = v142 + *(int *)(v106 + 48);
              (*(void (**)(unint64_t, uint64_t, uint64_t))(v67 + 32))(v75, v142, v27);
              sub_22643F6AC(v143, (uint64_t)v243, type metadata accessor for CapturedRoom.Object);
              v144 = *v233;
              if (!*(_QWORD *)(*v233 + 16))
              {
                v148 = v227;
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v245 + 56))(v227, 1, 1, v241);
                v134 = v244;
                goto LABEL_86;
              }
              swift_bridgeObjectRetain();
              v145 = sub_226534858(v75);
              if ((v146 & 1) != 0)
              {
                v147 = v245;
                v148 = v227;
                sub_22643D704(*(_QWORD *)(v144 + 56) + *(_QWORD *)(v245 + 72) * v145, v227, type metadata accessor for CapturedRoom.Object);
                v149 = 0;
              }
              else
              {
                v149 = 1;
                v147 = v245;
                v148 = v227;
              }
              v150 = v241;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v147 + 56))(v148, v149, 1, v241);
              swift_bridgeObjectRelease();
              v151 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v147 + 48))(v148, 1, v150);
              v75 = v234;
              v134 = v244;
              if (v151 == 1)
              {
LABEL_86:
                sub_22643D7E4(v148, (uint64_t *)&unk_2558480D0);
                v67 = *(_QWORD *)(v67 + 16);
                v68 = v239;
                ((void (*)(unint64_t, unint64_t, uint64_t))v67)(v239, v75, v27);
                sub_22643D704((uint64_t)v243, v235, type metadata accessor for CapturedRoom.Object);
                v152 = v134;
                v153 = swift_isUniquelyReferenced_nonNull_native();
                v247 = v152;
                v75 = sub_226534858(v68);
                v155 = v152[2];
                v156 = (v154 & 1) == 0;
                v157 = v155 + v156;
                if (__OFADD__(v155, v156))
                  goto LABEL_141;
                v158 = v154;
                if (v152[3] >= v157)
                {
                  if ((v153 & 1) != 0)
                  {
                    v134 = v247;
                    if ((v154 & 1) == 0)
                      goto LABEL_93;
                  }
                  else
                  {
                    sub_22654A520();
                    v134 = v247;
                    if ((v158 & 1) == 0)
                      goto LABEL_93;
                  }
                }
                else
                {
                  sub_226545714(v157, v153);
                  v159 = sub_226534858(v239);
                  if ((v158 & 1) != (v160 & 1))
                    goto LABEL_158;
                  v75 = v159;
                  v134 = v247;
                  if ((v158 & 1) == 0)
                  {
LABEL_93:
                    v134[(v75 >> 6) + 8] |= 1 << v75;
                    ((void (*)(unint64_t, unint64_t, uint64_t))v67)(v134[6] + *(_QWORD *)(v242 + 72) * v75, v239, v27);
                    v68 = (uint64_t)type metadata accessor for CapturedRoom.Object;
                    sub_22643F6AC(v235, v134[7] + *(_QWORD *)(v245 + 72) * v75, type metadata accessor for CapturedRoom.Object);
                    v161 = v134[2];
                    v84 = __OFADD__(v161, 1);
                    v162 = v161 + 1;
                    if (v84)
                      goto LABEL_147;
                    v134[2] = v162;
                    v134 = v247;
LABEL_62:
                    swift_bridgeObjectRelease();
                    v67 = v242;
                    v135 = *(void (**)(unint64_t, uint64_t))(v242 + 8);
                    v135(v239, v27);
                    sub_22643D748((uint64_t)v243, type metadata accessor for CapturedRoom.Object);
                    v68 = (uint64_t)v228;
                    v75 = v234;
                    v135(v234, v27);
LABEL_63:
                    v133 = (uint64_t)v240;
                    continue;
                  }
                }
                sub_22652A288(v235, v134[7] + *(_QWORD *)(v245 + 72) * v75, type metadata accessor for CapturedRoom.Object);
                goto LABEL_62;
              }
              sub_22643D7E4(v148, (uint64_t *)&unk_2558480D0);
              sub_22643D748((uint64_t)v243, type metadata accessor for CapturedRoom.Object);
              v68 = (uint64_t)v228;
              (*(void (**)(unint64_t, uint64_t))(v67 + 8))(v75, v27);
              goto LABEL_63;
            }
            swift_release();
            v163 = objc_msgSend(v215, sel_objects);
            sub_22643F548(0, (unint64_t *)&unk_255849AB0);
            v75 = sub_22655CECC();

            v68 = (uint64_t)v220;
            if (!(v75 >> 62))
            {
              v93 = *(uint64_t **)((v75 & 0xFFFFFFFFFFFFF8) + 0x10);
              goto LABEL_108;
            }
LABEL_149:
            swift_bridgeObjectRetain();
            v93 = (uint64_t *)sub_22655D400();
            swift_bridgeObjectRelease();
LABEL_108:
            if (v93)
            {
              v232 = (char *)MEMORY[0x24BEE4B00];
              v239 = v75 & 0xC000000000000001;
              v164 = 4;
              v235 = v75;
              v237 = (char *)v93;
              while (1)
              {
                v165 = v164 - 4;
                if (v239)
                {
                  v166 = (char *)MEMORY[0x2276999E4](v164 - 4, v75);
                  v167 = v164 - 3;
                  if (__OFADD__(v165, 1))
                    goto LABEL_143;
                }
                else
                {
                  v166 = (char *)*(id *)(v75 + 8 * v164);
                  v167 = v164 - 3;
                  if (__OFADD__(v165, 1))
                    goto LABEL_143;
                }
                v240 = (char *)v167;
                v243 = v166;
                v168 = objc_msgSend(v166, sel_identifier);
                if (!v168)
                  goto LABEL_152;
                v169 = v168;
                v170 = v226;
                sub_22655C110();

                v171 = *(void (**)(uint64_t, char *, uint64_t))(v67 + 32);
                v171(v68, v170, v27);
                v93 = *(uint64_t **)(v67 + 56);
                ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v93)(v68, 0, 1, v27);
                v172 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
                if (v172(v68, 1, v27) == 1)
                  goto LABEL_153;
                if (v246[2])
                {
                  v173 = sub_226534858(v68);
                  if ((v174 & 1) != 0)
                    break;
                }

                (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v68, v27);
LABEL_111:
                v93 = (uint64_t *)v237;
                ++v164;
                if (v240 == v237)
                  goto LABEL_138;
              }
              v175 = v246[7];
              v176 = v67;
              v234 = *(_QWORD *)(v245 + 72);
              v177 = v219;
              sub_22643D704(v175 + v234 * v173, v219, type metadata accessor for CapturedRoom.Object);
              sub_22643F6AC(v177, v223, type metadata accessor for CapturedRoom.Object);
              v67 = v27;
              v236 = *(void (**)(uint64_t, uint64_t))(v176 + 8);
              v236(v68, v27);
              v178 = objc_msgSend(v243, (SEL)&selRef_layoutSubviews);
              if (!v178)
                goto LABEL_154;
              v179 = v178;
              v180 = v226;
              sub_22655C110();

              v181 = v222;
              v171(v222, v180, v27);
              ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v93)(v181, 0, 1, v27);
              if (v172(v181, 1, v27) == 1)
                goto LABEL_155;
              v182 = *v233;
              v183 = v223;
              v75 = v235;
              if (*(_QWORD *)(*v233 + 16))
              {
                swift_bridgeObjectRetain();
                v184 = sub_226534858(v222);
                if ((v185 & 1) != 0)
                {
                  v186 = (uint64_t)v218;
                  sub_22643D704(*(_QWORD *)(v182 + 56) + v184 * v234, (uint64_t)v218, type metadata accessor for CapturedRoom.Object);
                  v187 = 0;
                }
                else
                {
                  v187 = 1;
                  v186 = (uint64_t)v218;
                }
                v188 = v245;
                v189 = v241;
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v245 + 56))(v186, v187, 1, v241);
                swift_bridgeObjectRelease();
                v190 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v188 + 48))(v186, 1, v189);
                v183 = v223;
                v75 = v235;
                if (v190 != 1)
                {
                  v191 = v186;
                  v192 = v217;
                  sub_22643F6AC(v191, (uint64_t)v217, type metadata accessor for CapturedRoom.Object);
                  v236(v222, v27);
                  sub_2264C0938(v192);
                  LODWORD(v193) = 1008981770;
                  if (sub_22654FA0C((unsigned __int8 *)v192, v193))
                  {

                    sub_22643D748((uint64_t)v192, type metadata accessor for CapturedRoom.Object);
                    v194 = v183;
                  }
                  else
                  {
                    v195 = objc_msgSend(v243, (SEL)&selRef_layoutSubviews);
                    if (!v195)
                      goto LABEL_156;
                    v196 = v195;
                    v197 = v226;
                    sub_22655C110();

                    v198 = (uint64_t)v213;
                    v171((uint64_t)v213, v197, v27);
                    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v93)(v198, 0, 1, v27);
                    if (v172(v198, 1, v27) == 1)
                      goto LABEL_157;
                    v199 = v223;
                    v200 = v214;
                    sub_22643D704(v223, v214, type metadata accessor for CapturedRoom.Object);
                    v201 = v232;
                    v202 = swift_isUniquelyReferenced_nonNull_native();
                    v247 = v201;
                    sub_2265238A4(v200, v198, v202, (void (*)(void))sub_22654A520, (void (*)(void))sub_226545714, type metadata accessor for CapturedRoom.Object);
                    v232 = (char *)v247;
                    swift_bridgeObjectRelease();
                    v236(v198, v27);

                    sub_22643D748((uint64_t)v217, type metadata accessor for CapturedRoom.Object);
                    v194 = v199;
                  }
                  sub_22643D748(v194, type metadata accessor for CapturedRoom.Object);
                  goto LABEL_136;
                }
              }
              else
              {
                v186 = (uint64_t)v218;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v245 + 56))(v218, 1, 1, v241);
              }
              sub_22643D748(v183, type metadata accessor for CapturedRoom.Object);

              sub_22643D7E4(v186, (uint64_t *)&unk_2558480D0);
              v236(v222, v27);
LABEL_136:
              v68 = (uint64_t)v220;
              v67 = v242;
              goto LABEL_111;
            }
            v232 = (char *)MEMORY[0x24BEE4B00];
LABEL_138:
            swift_bridgeObjectRelease();
            v203 = v216;
            swift_retain();
            v204 = swift_bridgeObjectRetain();
            sub_226525460(v204, v203);
            swift_bridgeObjectRelease();
            swift_release();
            swift_retain();
            v205 = swift_bridgeObjectRetain();
            sub_22652583C(v205, v203);
            swift_bridgeObjectRelease();
            swift_release();
            swift_retain();
            v206 = swift_bridgeObjectRetain();
            sub_22652583C(v206, v203);
            swift_bridgeObjectRelease();
            swift_release();
            v207 = swift_bridgeObjectRetain();
            v86 = sub_2265363E4(v207);
            swift_bridgeObjectRelease();
            v208 = swift_bridgeObjectRetain();
            sub_2265363E4(v208);
            swift_bridgeObjectRelease();
            v209 = swift_bridgeObjectRetain();
            sub_2265363E4(v209);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease_n();
            return v86;
          }
          v133 += 2;
          if (v140 + 1 >= (uint64_t)v237)
          {
            v132 = 0;
            v139 = 1;
            v240 = (char *)v140;
            goto LABEL_79;
          }
          v141 = *((_QWORD *)v236 + v133);
          if (v141)
          {
LABEL_73:
            v140 = v133;
            goto LABEL_70;
          }
          if (v140 + 2 < (uint64_t)v237)
          {
            v141 = *((_QWORD *)v236 + v140 + 2);
            if (v141)
            {
              v140 += 2;
              goto LABEL_70;
            }
            v133 = v140 + 3;
            if (v140 + 3 >= (uint64_t)v237)
            {
              v132 = 0;
              v139 = 1;
              v240 = (char *)(v140 + 2);
              goto LABEL_79;
            }
            v141 = *((_QWORD *)v236 + v133);
            if (!v141)
            {
              while (1)
              {
                v140 = v133 + 1;
                if (__OFADD__(v133, 1))
                  goto LABEL_151;
                if (v140 >= (uint64_t)v237)
                  break;
                v141 = *((_QWORD *)v236 + v140);
                ++v133;
                if (v141)
                  goto LABEL_70;
              }
              v132 = 0;
              v139 = 1;
              v240 = v232;
              goto LABEL_79;
            }
            goto LABEL_73;
          }
        }
        break;
      }
      v240 = (char *)v133;
      v132 = 0;
      v139 = 1;
      goto LABEL_79;
    }
    v108 = v105;
    v109 = v105 + *(int *)(v106 + 48);
    v110 = (uint64_t)v237;
    (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v237, v108, v27);
    sub_22643F6AC(v109, (uint64_t)v244, type metadata accessor for CapturedRoom.Object);
    if (v246[2])
    {
      v111 = sub_226534858(v110);
      if ((v112 & 1) != 0)
      {
        v113 = v229;
        sub_22643D704(v246[7] + *(_QWORD *)(v39 + 72) * v111, v229, type metadata accessor for CapturedRoom.Object);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v39 + 56))(v113, 0, 1, v241);
        sub_22643D7E4(v113, (uint64_t *)&unk_2558480D0);
        sub_22643D748((uint64_t)v244, type metadata accessor for CapturedRoom.Object);
        v95 = *(void (**)(char *, uint64_t))(v67 + 8);
        v92 = v238;
LABEL_23:
        v94 = (uint64_t)v232;
        v95(v237, v27);
        v93 = &qword_255849AD8;
        continue;
      }
    }
    break;
  }
  v114 = v229;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(v229, 1, 1, v241);
  sub_22643D7E4(v114, (uint64_t *)&unk_2558480D0);
  v115 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
  v116 = (uint64_t)v240;
  v115(v240, v110, v27);
  sub_22643D704((uint64_t)v244, (uint64_t)v236, type metadata accessor for CapturedRoom.Object);
  v117 = (uint64_t)v238;
  v118 = swift_isUniquelyReferenced_nonNull_native();
  v247 = (_QWORD *)v117;
  v120 = sub_226534858(v116);
  v121 = *(_QWORD *)(v117 + 16);
  v122 = (v119 & 1) == 0;
  v123 = v121 + v122;
  if (__OFADD__(v121, v122))
  {
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
    goto LABEL_146;
  }
  v124 = v119;
  if (*(_QWORD *)(v117 + 24) >= v123)
  {
    if ((v118 & 1) == 0)
      sub_22654A520();
LABEL_55:
    v39 = v245;
    v92 = v247;
    if ((v124 & 1) != 0)
    {
      sub_22652A288((uint64_t)v236, v247[7] + *(_QWORD *)(v245 + 72) * v120, type metadata accessor for CapturedRoom.Object);
LABEL_22:
      swift_bridgeObjectRelease();
      v95 = *(void (**)(char *, uint64_t))(v67 + 8);
      v95(v240, v27);
      sub_22643D748((uint64_t)v244, type metadata accessor for CapturedRoom.Object);
      goto LABEL_23;
    }
    v247[(v120 >> 6) + 8] |= 1 << v120;
    v115((char *)(v92[6] + *(_QWORD *)(v67 + 72) * v120), (uint64_t)v240, v27);
    sub_22643F6AC((uint64_t)v236, v92[7] + *(_QWORD *)(v39 + 72) * v120, type metadata accessor for CapturedRoom.Object);
    v127 = v92[2];
    v84 = __OFADD__(v127, 1);
    v128 = v127 + 1;
    if (!v84)
    {
      v92[2] = v128;
      v92 = v247;
      goto LABEL_22;
    }
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
    goto LABEL_149;
  }
  sub_226545714(v123, v118);
  v125 = sub_226534858((uint64_t)v240);
  if ((v124 & 1) == (v126 & 1))
  {
    v120 = v125;
    goto LABEL_55;
  }
LABEL_158:
  sub_22655D5A4();
  __break(1u);
LABEL_159:
  result = sub_22655D5A4();
  __break(1u);
  return result;
}

id sub_226528A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  id v13;
  id v14;
  uint64_t v15;
  id v17[2];

  v4 = v3;
  v17[1] = *(id *)MEMORY[0x24BDAC8D0];
  v8 = (void *)sub_22655BFE4();
  v17[0] = 0;
  v9 = objc_msgSend(v4, sel_initWithBaseConfiguration_fileURL_replayMode_outError_, a1, v8, a3, v17);

  v10 = v17[0];
  if (v9)
  {
    v11 = sub_22655C05C();
    v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
    v13 = v10;
    v12(a2, v11);
  }
  else
  {
    v14 = v17[0];
    sub_22655BF6C();

    swift_willThrow();
    v15 = sub_22655C05C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a2, v15);
  }
  return v9;
}

uint64_t sub_226528B50(unint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;

  result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_25583F910 != -1)
      swift_once();
    sub_2264A2C90();
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      v3 = sub_22655D400();
      swift_bridgeObjectRelease();
    }
    else
    {
      v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v4 = MEMORY[0x24BEE4AF8];
    if (!v3)
      goto LABEL_14;
    v12 = MEMORY[0x24BEE4AF8];
    result = sub_22655D37C();
    if ((v3 & 0x8000000000000000) == 0)
    {
      v5 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v6 = (id)MEMORY[0x2276999E4](v5, a1);
        else
          v6 = *(id *)(a1 + 8 * v5 + 32);
        v7 = v6;
        ++v5;
        type metadata accessor for RoomScanKeyframeWrapper();
        v8 = swift_allocObject();
        *(_QWORD *)(v8 + 24) = 0;
        objc_allocWithZone((Class)type metadata accessor for RoomScanKeyframe(0));
        v9 = v7;
        v10 = sub_2264F5978(v9);

        v11 = *(void **)(v8 + 24);
        *(_QWORD *)(v8 + 16) = v10;
        *(_QWORD *)(v8 + 24) = v9;

        sub_22655D364();
        sub_22655D388();
        sub_22655D394();
        sub_22655D370();
      }
      while (v3 != v5);
      v4 = v12;
LABEL_14:
      sub_226517FD8(v4);
      swift_release();
      return swift_bridgeObjectRelease();
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_226528D3C()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    v2 = result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_spiReplayDelegate;
    swift_beginAccess();
    if (MEMORY[0x22769A944](v2))
    {
      v3 = *(_QWORD *)(v2 + 8);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 8))(v1, ObjectType, v3);
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_226528DE4(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  const void *v16;
  void *v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v3 = sub_22655CBB4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22655CBFC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_weakLoadStrong();
  if (result)
  {
    if (*(_BYTE *)(result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runAllowed) == 1)
    {
      sub_22643F548(0, (unint64_t *)&qword_2558442A0);
      v18 = sub_22655D070();
      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = v1;
      *(_QWORD *)(v12 + 24) = a1;
      aBlock[4] = sub_22652A000;
      aBlock[5] = v12;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_2264FA450;
      aBlock[3] = &block_descriptor_82_0;
      v17 = _Block_copy(aBlock);
      v13 = v1;
      v14 = a1;
      swift_release();
      sub_22655CBCC();
      aBlock[0] = MEMORY[0x24BEE4AF8];
      sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
      sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
      sub_22655D214();
      v16 = v17;
      v15 = (void *)v18;
      MEMORY[0x22769975C](0, v10, v6, v17);
      _Block_release(v16);
      swift_release();

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

void sub_226529044(void *a1)
{
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  _BYTE *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  _BYTE *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;

  if (qword_25583F9D8 != -1)
    swift_once();
  sub_226559168();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v3 = Strong;
    v4 = OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runActive;
    if (*(_BYTE *)(Strong + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runActive) != 1)
      goto LABEL_16;
    if (objc_msgSend(a1, sel_worldAlignment))
    {
      v5 = sub_22655CB6C();
      v6 = sub_22655D004();
      if (os_log_type_enabled(v5, v6))
      {
        v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v7 = 0;
        _os_log_impl(&dword_226423000, v5, v6, "Invalid ARConfiguration.WorldAlignment: only gravity is supported", v7, 2u);
        MEMORY[0x22769A884](v7, -1, -1);
      }

      sub_2265265C4();
      v8 = swift_allocError();
      *v9 = 2;
      v10 = *(void **)(v3 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error);
      *(_QWORD *)(v3 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error) = v8;

      if (qword_25583F910 != -1)
        swift_once();
      v11 = sub_22655CDDC();
      sub_2264A3328(v11, v12);
      swift_bridgeObjectRelease();
      sub_226516B30(0);
      swift_release();
      return;
    }
    if (*(_BYTE *)(v3 + v4) != 1
      || (v13 = *(void **)(v3 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_currentArConfiguration)) == 0)
    {
LABEL_16:
      swift_release();
      return;
    }
    sub_22643F548(0, (unint64_t *)&unk_255849B20);
    v22 = v13;
    if ((sub_22655D118() & 1) != 0)
    {

      goto LABEL_16;
    }
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
    {
      swift_release();

    }
    else
    {
      v14 = sub_22655CB6C();
      v15 = sub_22655D004();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_226423000, v14, v15, "Invalid ARConfiguration: only ARWorldTrackingConfiguration is supported", v16, 2u);
        MEMORY[0x22769A884](v16, -1, -1);
      }

      sub_2265265C4();
      v17 = swift_allocError();
      *v18 = 2;
      v19 = *(void **)(v3 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error);
      *(_QWORD *)(v3 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error) = v17;

      if (qword_25583F910 != -1)
        swift_once();
      v20 = sub_22655CDDC();
      sub_2264A3328(v20, v21);
      swift_bridgeObjectRelease();
      sub_226516B30(0);
      swift_release();

    }
  }
}

uint64_t sub_2265293D4()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    if (*(_BYTE *)(result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_runActive) == 1)
    {
      sub_2265265C4();
      v2 = swift_allocError();
      *v3 = 1;
      v4 = *(void **)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error);
      *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_error) = v2;

      if (qword_25583F910 != -1)
        swift_once();
      v5 = sub_22655CDDC();
      sub_2264A3328(v5, v6);
      swift_bridgeObjectRelease();
      sub_226516B30(1);
      return swift_release();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_2265294E4(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v3 = sub_22655CBB4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22655CBFC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_weakLoadStrong();
  if (result)
  {
    v12 = *(id *)(result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_queue);
    v18[0] = v4;
    v13 = v12;
    swift_release();
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = v1;
    *(_QWORD *)(v14 + 24) = a1;
    aBlock[4] = sub_226529FB4;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2264FA450;
    aBlock[3] = &block_descriptor_67_0;
    v15 = _Block_copy(aBlock);
    v16 = v1;
    v17 = a1;
    sub_22655CBCC();
    v18[1] = MEMORY[0x24BEE4AF8];
    sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
    sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
    sub_22655D214();
    MEMORY[0x22769975C](0, v10, v6, v15);
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v18[0] + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return swift_release();
  }
  return result;
}

uint64_t sub_2265296FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v22 = a4;
  v7 = sub_22655CBB4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_22655CBFC();
  v11 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_weakLoadStrong();
  if (result)
  {
    v15 = *(id *)(result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_queue);
    v21 = v8;
    v16 = v15;
    swift_release();
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v4;
    *(_QWORD *)(v17 + 24) = a1;
    aBlock[4] = a3;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2264FA450;
    aBlock[3] = v22;
    v18 = _Block_copy(aBlock);
    v19 = v4;
    v20 = a1;
    sub_22655CBCC();
    v24 = MEMORY[0x24BEE4AF8];
    sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
    sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
    sub_22655D214();
    MEMORY[0x22769975C](0, v13, v10, v18);
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v7);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v23);
    return swift_release();
  }
  return result;
}

uint64_t sub_226529910(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  _QWORD *v24;
  void *v25;
  id v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void *v35;
  uint64_t v36;
  _QWORD aBlock[6];

  v2 = sub_22655CBB4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22655CBFC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v31 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = sub_22655D400();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v33 = v6;
  v34 = v5;
  v32 = v7;
  if (v9)
  {
    aBlock[0] = MEMORY[0x24BEE4AF8];
    result = sub_2264C7BE4(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0)
    {
      __break(1u);
      goto LABEL_21;
    }
    v29 = v3;
    v30 = v2;
    v11 = 0;
    v12 = aBlock[0];
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v13 = (id)MEMORY[0x2276999E4](v11, a1);
      else
        v13 = *(id *)(a1 + 8 * v11 + 32);
      v14 = v13;
      v15 = objc_msgSend(v13, sel_dictionaryRepresentation, v29, v30);
      if (v15)
      {
        v16 = v15;
        v17 = sub_22655CCC8();

      }
      else
      {

        v17 = 0;
      }
      aBlock[0] = v12;
      v19 = *(_QWORD *)(v12 + 16);
      v18 = *(_QWORD *)(v12 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_2264C7BE4(v18 > 1, v19 + 1, 1);
        v12 = aBlock[0];
      }
      ++v11;
      *(_QWORD *)(v12 + 16) = v19 + 1;
      *(_QWORD *)(v12 + 8 * v19 + 32) = v17;
    }
    while (v9 != v11);
    v3 = v29;
    v2 = v30;
    v20 = v35;
    v21 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v12 = MEMORY[0x24BEE4AF8];
    v20 = v35;
    v21 = MEMORY[0x24BEE4AF8];
  }
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v21;
  result = swift_weakLoadStrong();
  if (result)
  {
    v23 = *(id *)(result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_queue);
    swift_release();
    v24 = (_QWORD *)swift_allocObject();
    v24[2] = v22;
    v24[3] = v12;
    v24[4] = v20;
    aBlock[4] = sub_226529F5C;
    aBlock[5] = v24;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2264FA450;
    aBlock[3] = &block_descriptor_37_1;
    v25 = _Block_copy(aBlock);
    swift_retain();
    v26 = v20;
    v27 = v31;
    sub_22655CBCC();
    v36 = v21;
    sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
    sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
    v28 = v34;
    sub_22655D214();
    MEMORY[0x22769975C](0, v27, v28, v25);
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v28, v2);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v27, v33);
    swift_release();
    return swift_release();
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_226529CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v19 = a5;
  v8 = sub_22655CBB4();
  v21 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_22655CBFC();
  v11 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_weakLoadStrong();
  if (result)
  {
    v15 = *(id *)(result + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_queue);
    swift_release();
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v5;
    *(_QWORD *)(v16 + 24) = a1;
    aBlock[4] = a4;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2264FA450;
    aBlock[3] = v19;
    v17 = _Block_copy(aBlock);
    v18 = v5;
    sub_22655CBCC();
    v22 = MEMORY[0x24BEE4AF8];
    sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
    sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
    sub_22655D214();
    MEMORY[0x22769975C](0, v13, v10, v17);
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v20);
    return swift_release();
  }
  return result;
}

uint64_t sub_226529ED8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_226529EFC()
{
  return sub_2265220F0();
}

uint64_t sub_226529F04()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_226529F28()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_226529F5C()
{
  uint64_t v0;

  sub_226521E58(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_226529F68()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_226529F94()
{
  uint64_t v0;

  sub_22652156C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_226529F9C()
{
  uint64_t v0;

  return sub_2265213F4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_226529FA4()
{
  uint64_t v0;

  return sub_2265211D8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_226529FAC()
{
  uint64_t v0;

  return sub_226520EC0(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_226529FB4()
{
  uint64_t v0;

  return sub_226520AD0(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_226529FBC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_226529FE0()
{
  uint64_t v0;

  return sub_2264E9F00(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 32), *(double *)(v0 + 24));
}

uint64_t sub_226529FF0()
{
  return swift_deallocObject();
}

uint64_t sub_22652A000()
{
  uint64_t v0;

  return sub_22651C1AC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_22652A008()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_22652A034()
{
  uint64_t v0;

  sub_22651AB58(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_22652A040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for CapturedRoom(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 96) & ~v2;
  swift_bridgeObjectRelease();

  v4 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + *(int *)(v1 + 40);
  v6 = sub_22655C140();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_22652A158()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for CapturedRoom(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_226519FC4(v0 + 16, v0 + v2, *(_QWORD *)(v0 + v3), *(void **)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

void sub_22652A1AC()
{
  uint64_t v0;

  sub_226518D5C(v0);
}

void sub_22652A1B4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_trackingFailureReportCount) = 0;
}

uint64_t sub_22652A1C4()
{
  return objectdestroy_105Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

void sub_22652A1D0()
{
  uint64_t v0;

  sub_2265181DC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_22652A1D8()
{
  return objectdestroy_105Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_22652A1E4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 16);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_objectDetectionEnabled) == 1)
  {
    v2 = *(void **)(v1 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_okObjDet);
    if (v2)
      objc_msgSend(v2, sel_updateWithFrame_, *(_QWORD *)(v0 + 24));
    else
      __break(1u);
  }
}

uint64_t sub_22652A224()
{
  return objectdestroy_105Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t objectdestroy_105Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  swift_release();
  return swift_deallocObject();
}

id sub_22652A260()
{
  uint64_t v0;
  id result;

  result = *(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_floorPlanGenerator);
  if (result)
    return objc_msgSend(result, sel_updateWithFrame_, *(_QWORD *)(v0 + 24));
  __break(1u);
  return result;
}

uint64_t sub_22652A288(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_22652A2CC(uint64_t a1, uint64_t a2)
{
  assignWithTake for ScanItemEdge(a2, a1);
  return a2;
}

uint64_t sub_22652A308()
{
  uint64_t v0;
  uint64_t result;

  result = MEMORY[0x22769A944](v0 + 40);
  if (result)
    return swift_unknownObjectRelease();
  return result;
}

void sub_22652A32C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arRecordingConfig);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arRecordingConfig) = 0;

}

uint64_t sub_22652A340()
{
  uint64_t v0;

  return sub_226516984(v0);
}

id sub_22652A348()
{
  uint64_t v0;

  return sub_226515848(v0);
}

void sub_22652A438(unint64_t a1)
{
  float32x2_t *v1;
  _QWORD *v3;
  char v4;
  _QWORD *v5;
  float32x2_t v6;
  uint64_t v7;
  int32x2_t v8;
  int32x2_t v9;
  _QWORD *v10;
  _QWORD *v11;

  v3 = sub_2264D6660(a1, 0.1);
  if ((v4 & 1) == 0)
  {
    v5 = v3;
    if ((v1[4].i8[0] & 1) != 0)
    {
LABEL_5:
      v1[3] = (float32x2_t)v5;
      v1[4].i8[0] = 0;
      sub_2264D7468(a1, v5, 0);
      return;
    }
    v6 = v1[3];
    v10 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255841D18);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_22655FA80;
    *(_QWORD *)(v7 + 32) = v5;
    *(float *)v8.i32 = -*((float *)&v10 + 1);
    v9 = (int32x2_t)vsub_f32(0, (float32x2_t)v10);
    *(int32x2_t *)(v7 + 40) = v9;
    *(int32x2_t *)(v7 + 48) = vzip1_s32(v8, (int32x2_t)v10);
    *(int32x2_t *)(v7 + 56) = vzip1_s32((int32x2_t)COERCE_UNSIGNED_INT(*((float *)&v10 + 1) + 0.0), v9);
    v11 = (_QWORD *)v7;
    sub_22652A54C(&v11, v6);
    if (v11[2])
    {
      v5 = (_QWORD *)v11[4];
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    __break(1u);
  }
}

uint64_t sub_22652A54C(_QWORD **a1, float32x2_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7[2];

  v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_2264C10E8(v4);
  v5 = v4[2];
  v7[0] = (uint64_t)(v4 + 4);
  v7[1] = v5;
  result = sub_22652A5E8(v7, a2);
  *a1 = v4;
  return result;
}

uint64_t type metadata accessor for PerimeterManager()
{
  return objc_opt_self();
}

uint64_t sub_22652A5E8(uint64_t *a1, float32x2_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  float32x2_t v17;
  int32x2_t v18;
  int32x2_t v19;
  float32x2_t v20;
  int8x8_t v21;
  int32x2_t v22;
  int32x2_t v23;
  float32x2_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  float32x2_t *v31;
  float32x2_t v32;
  float32x2_t v33;
  float32x2_t v34;
  uint64_t v35;
  float32x2_t *v36;
  float32x2_t v37;
  float32x2_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  char v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t i;
  float32x2_t v93;
  float32x2_t v94;
  float32x2_t v95;
  uint64_t v96;
  float32x2_t *v97;
  float32x2_t v98;
  char *v99;
  uint64_t v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  unint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  float32x2_t *v113;

  v5 = a1[1];
  result = sub_22655D538();
  if (result >= v5)
  {
    if (v5 < 0)
      goto LABEL_135;
    if ((unint64_t)v5 >= 2)
    {
      v90 = 0;
      v91 = *a1;
      for (i = 1; i != v5; ++i)
      {
        v93 = *(float32x2_t *)(v91 + 8 * i);
        v94 = vmul_f32(v93, a2);
        v95 = vadd_f32(v94, (float32x2_t)vdup_lane_s32((int32x2_t)v94, 1));
        v96 = v90;
        do
        {
          v97 = (float32x2_t *)(v91 + 8 * v96);
          v98 = vmul_f32(*v97, a2);
          if ((vcgt_f32(v95, vadd_f32(v98, (float32x2_t)vdup_lane_s32((int32x2_t)v98, 1))).u8[0] & 1) == 0)
            break;
          if (!v91)
            goto LABEL_139;
          v97[1] = *v97;
          *(float32x2_t *)(v91 + 8 * v96--) = v93;
        }
        while (v96 != -1);
        ++v90;
      }
    }
    return result;
  }
  if (v5 >= 0)
    v7 = v5;
  else
    v7 = v5 + 1;
  if (v5 < -1)
    goto LABEL_144;
  v8 = result;
  v107 = a1;
  if (v5 < 2)
  {
    v11 = MEMORY[0x24BEE4AF8];
    v113 = (float32x2_t *)(MEMORY[0x24BEE4AF8] + 32);
    if (v5 != 1)
    {
      v15 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v14 = (char *)MEMORY[0x24BEE4AF8];
LABEL_101:
      v99 = v14;
      v109 = v11;
      if (v15 >= 2)
      {
        v100 = *v107;
        do
        {
          v101 = v15 - 2;
          if (v15 < 2)
            goto LABEL_130;
          if (!v100)
            goto LABEL_143;
          v102 = v99;
          v103 = *(_QWORD *)&v99[16 * v101 + 32];
          v104 = *(_QWORD *)&v99[16 * v15 + 24];
          sub_22652ACE4((float32x2_t *)(v100 + 8 * v103), (float32x2_t *)(v100 + 8 * *(_QWORD *)&v99[16 * v15 + 16]), v100 + 8 * v104, v113, a2);
          if (v2)
            break;
          if (v104 < v103)
            goto LABEL_131;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v102 = sub_2264CA374((uint64_t)v102);
          if (v101 >= *((_QWORD *)v102 + 2))
            goto LABEL_132;
          v105 = &v102[16 * v101 + 32];
          *(_QWORD *)v105 = v103;
          *((_QWORD *)v105 + 1) = v104;
          v106 = *((_QWORD *)v102 + 2);
          if (v15 > v106)
            goto LABEL_133;
          memmove(&v102[16 * v15 + 16], &v102[16 * v15 + 32], 16 * (v106 - v15));
          v99 = v102;
          *((_QWORD *)v102 + 2) = v106 - 1;
          v15 = v106 - 1;
        }
        while (v106 > 2);
      }
LABEL_92:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v109 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v109 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v9 = v7 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558443D0);
    v10 = sub_22655CEFC();
    *(_QWORD *)(v10 + 16) = v9;
    v109 = v10;
    v113 = (float32x2_t *)(v10 + 32);
  }
  v12 = 0;
  v13 = *a1;
  v108 = *a1 - 8;
  v14 = (char *)MEMORY[0x24BEE4AF8];
  v110 = v8;
  v111 = v5;
  v112 = v13;
  while (1)
  {
    v16 = v12++;
    if (v12 < v5)
    {
      v17 = *(float32x2_t *)(v13 + 8 * v12);
      v18 = (int32x2_t)vmul_f32(v17, a2);
      v19 = (int32x2_t)vmul_f32(*(float32x2_t *)(v13 + 8 * v16), a2);
      v20 = vadd_f32((float32x2_t)vzip1_s32(v19, v18), (float32x2_t)vzip2_s32(v19, v18));
      v21 = (int8x8_t)vcgt_f32((float32x2_t)vdup_lane_s32((int32x2_t)v20, 1), v20);
      v12 = v16 + 2;
      if (v16 + 2 < v5)
      {
        while (1)
        {
          v22 = (int32x2_t)vmul_f32(v17, a2);
          v17 = *(float32x2_t *)(v13 + 8 * v12);
          v23 = (int32x2_t)vmul_f32(v17, a2);
          v24 = vadd_f32((float32x2_t)vzip1_s32(v22, v23), (float32x2_t)vzip2_s32(v22, v23));
          if ((vmvn_s8(veor_s8((int8x8_t)vcgt_f32((float32x2_t)vdup_lane_s32((int32x2_t)v24, 1), v24), v21)).u8[0] & 1) == 0)
            break;
          if (v5 == ++v12)
          {
            v12 = v5;
            break;
          }
        }
      }
      if ((v21.i8[0] & 1) != 0)
      {
        if (v12 < v16)
          goto LABEL_136;
        if (v16 < v12)
        {
          v25 = (uint64_t *)(v108 + 8 * v12);
          v26 = v12;
          v27 = v16;
          v28 = (uint64_t *)(v13 + 8 * v16);
          do
          {
            if (v27 != --v26)
            {
              if (!v13)
                goto LABEL_142;
              v29 = *v28;
              *v28 = *v25;
              *v25 = v29;
            }
            ++v27;
            --v25;
            ++v28;
          }
          while (v27 < v26);
        }
      }
    }
    if (v12 >= v5)
      goto LABEL_45;
    if (__OFSUB__(v12, v16))
      goto LABEL_134;
    if (v12 - v16 >= v8)
      goto LABEL_45;
    v30 = v16 + v8;
    if (__OFADD__(v16, v8))
      goto LABEL_137;
    if (v30 >= v5)
      v30 = v5;
    if (v30 < v16)
      break;
    if (v12 != v30)
    {
      v31 = (float32x2_t *)(v108 + 8 * v12);
      do
      {
        v32 = *(float32x2_t *)(v13 + 8 * v12);
        v33 = vmul_f32(v32, a2);
        v34 = vadd_f32(v33, (float32x2_t)vdup_lane_s32((int32x2_t)v33, 1));
        v35 = v16;
        v36 = v31;
        do
        {
          v37 = *v36;
          v38 = vmul_f32(*v36, a2);
          if ((vcgt_f32(v34, vadd_f32(v38, (float32x2_t)vdup_lane_s32((int32x2_t)v38, 1))).u8[0] & 1) == 0)
            break;
          if (!v13)
            goto LABEL_140;
          *v36 = v32;
          v36[1] = v37;
          --v36;
          ++v35;
        }
        while (v12 != v35);
        ++v12;
        ++v31;
      }
      while (v12 != v30);
      v12 = v30;
    }
LABEL_45:
    if (v12 < v16)
      goto LABEL_129;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v14 = sub_2264C9F78(0, *((_QWORD *)v14 + 2) + 1, 1, v14);
    v40 = *((_QWORD *)v14 + 2);
    v39 = *((_QWORD *)v14 + 3);
    v15 = v40 + 1;
    v13 = v112;
    if (v40 >= v39 >> 1)
    {
      v89 = sub_2264C9F78((char *)(v39 > 1), v40 + 1, 1, v14);
      v13 = v112;
      v14 = v89;
    }
    *((_QWORD *)v14 + 2) = v15;
    v41 = v14 + 32;
    v42 = &v14[16 * v40 + 32];
    *(_QWORD *)v42 = v16;
    *((_QWORD *)v42 + 1) = v12;
    if (v40)
    {
      while (1)
      {
        v43 = v15 - 1;
        if (v15 >= 4)
        {
          v48 = &v41[16 * v15];
          v49 = *((_QWORD *)v48 - 8);
          v50 = *((_QWORD *)v48 - 7);
          v54 = __OFSUB__(v50, v49);
          v51 = v50 - v49;
          if (v54)
            goto LABEL_118;
          v53 = *((_QWORD *)v48 - 6);
          v52 = *((_QWORD *)v48 - 5);
          v54 = __OFSUB__(v52, v53);
          v46 = v52 - v53;
          v47 = v54;
          if (v54)
            goto LABEL_119;
          v55 = v15 - 2;
          v56 = &v41[16 * v15 - 32];
          v58 = *(_QWORD *)v56;
          v57 = *((_QWORD *)v56 + 1);
          v54 = __OFSUB__(v57, v58);
          v59 = v57 - v58;
          if (v54)
            goto LABEL_121;
          v54 = __OFADD__(v46, v59);
          v60 = v46 + v59;
          if (v54)
            goto LABEL_124;
          if (v60 >= v51)
          {
            v78 = &v41[16 * v43];
            v80 = *(_QWORD *)v78;
            v79 = *((_QWORD *)v78 + 1);
            v54 = __OFSUB__(v79, v80);
            v81 = v79 - v80;
            if (v54)
              goto LABEL_128;
            v71 = v46 < v81;
            goto LABEL_82;
          }
        }
        else
        {
          if (v15 != 3)
          {
            v72 = *((_QWORD *)v14 + 4);
            v73 = *((_QWORD *)v14 + 5);
            v54 = __OFSUB__(v73, v72);
            v65 = v73 - v72;
            v66 = v54;
            goto LABEL_76;
          }
          v45 = *((_QWORD *)v14 + 4);
          v44 = *((_QWORD *)v14 + 5);
          v54 = __OFSUB__(v44, v45);
          v46 = v44 - v45;
          v47 = v54;
        }
        if ((v47 & 1) != 0)
          goto LABEL_120;
        v55 = v15 - 2;
        v61 = &v41[16 * v15 - 32];
        v63 = *(_QWORD *)v61;
        v62 = *((_QWORD *)v61 + 1);
        v64 = __OFSUB__(v62, v63);
        v65 = v62 - v63;
        v66 = v64;
        if (v64)
          goto LABEL_123;
        v67 = &v41[16 * v43];
        v69 = *(_QWORD *)v67;
        v68 = *((_QWORD *)v67 + 1);
        v54 = __OFSUB__(v68, v69);
        v70 = v68 - v69;
        if (v54)
          goto LABEL_126;
        if (__OFADD__(v65, v70))
          goto LABEL_127;
        if (v65 + v70 >= v46)
        {
          v71 = v46 < v70;
LABEL_82:
          if (v71)
            v43 = v55;
          goto LABEL_84;
        }
LABEL_76:
        if ((v66 & 1) != 0)
          goto LABEL_122;
        v74 = &v41[16 * v43];
        v76 = *(_QWORD *)v74;
        v75 = *((_QWORD *)v74 + 1);
        v54 = __OFSUB__(v75, v76);
        v77 = v75 - v76;
        if (v54)
          goto LABEL_125;
        if (v77 < v65)
          goto LABEL_15;
LABEL_84:
        v82 = v43 - 1;
        if (v43 - 1 >= v15)
        {
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
          goto LABEL_138;
        }
        if (!v13)
          goto LABEL_141;
        v83 = v14;
        v84 = &v41[16 * v82];
        v85 = *(_QWORD *)v84;
        v86 = &v41[16 * v43];
        v87 = *((_QWORD *)v86 + 1);
        sub_22652ACE4((float32x2_t *)(v13 + 8 * *(_QWORD *)v84), (float32x2_t *)(v13 + 8 * *(_QWORD *)v86), v13 + 8 * v87, v113, a2);
        if (v2)
          goto LABEL_92;
        if (v87 < v85)
          goto LABEL_115;
        if (v43 > *((_QWORD *)v83 + 2))
          goto LABEL_116;
        *(_QWORD *)v84 = v85;
        *(_QWORD *)&v41[16 * v82 + 8] = v87;
        v88 = *((_QWORD *)v83 + 2);
        if (v43 >= v88)
          goto LABEL_117;
        v14 = v83;
        v15 = v88 - 1;
        memmove(&v41[16 * v43], v86 + 16, 16 * (v88 - 1 - v43));
        *((_QWORD *)v83 + 2) = v88 - 1;
        v13 = v112;
        if (v88 <= 2)
          goto LABEL_15;
      }
    }
    v15 = 1;
LABEL_15:
    v8 = v110;
    v5 = v111;
    if (v12 >= v111)
    {
      v11 = v109;
      goto LABEL_101;
    }
  }
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  result = sub_22655D3DC();
  __break(1u);
  return result;
}

uint64_t sub_22652ACE4(float32x2_t *__src, float32x2_t *a2, unint64_t a3, float32x2_t *__dst, float32x2_t a5)
{
  float32x2_t *v5;
  float32x2_t *v8;
  float32x2_t *v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  float32x2_t *v16;
  int32x2_t v17;
  int32x2_t v18;
  float32x2_t v19;
  float32x2_t *v20;
  float32x2_t *v21;
  float32x2_t *v22;
  float32x2_t *v23;
  float32x2_t *v24;
  float32x2_t v25;
  int32x2_t v26;
  int32x2_t v27;
  float32x2_t v28;
  uint64_t result;
  float32x2_t *v30;
  float32x2_t *v31;
  float32x2_t *v32;

  v5 = __dst;
  v8 = a2;
  v9 = __src;
  v10 = (char *)a2 - (char *)__src;
  v11 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v11 = (char *)a2 - (char *)__src;
  v12 = v11 >> 3;
  v13 = a3 - (_QWORD)a2;
  v14 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v14 = a3 - (_QWORD)a2;
  v15 = v14 >> 3;
  v31 = __dst;
  v32 = __src;
  if (v12 >= v14 >> 3)
  {
    if (v13 >= -7)
    {
      if (__dst != a2 || &a2[v15] <= __dst)
        memmove(__dst, a2, 8 * v15);
      v21 = &v5[v15];
      v30 = v21;
      v32 = v8;
      if (v9 < v8 && v13 >= 8)
      {
        v22 = (float32x2_t *)(a3 - 8);
        while (1)
        {
          v23 = v22 + 1;
          v24 = v8 - 1;
          v25 = v8[-1];
          v26 = (int32x2_t)vmul_f32(v21[-1], a5);
          v27 = (int32x2_t)vmul_f32(v25, a5);
          v28 = vadd_f32((float32x2_t)vzip1_s32(v27, v26), (float32x2_t)vzip2_s32(v27, v26));
          if ((vcgt_f32((float32x2_t)vdup_lane_s32((int32x2_t)v28, 1), v28).u8[0] & 1) != 0)
          {
            if (v23 != v8 || v22 >= v8)
              *v22 = v25;
            v32 = --v8;
            if (v24 <= v9)
              goto LABEL_42;
          }
          else
          {
            v30 = v21 - 1;
            if (v23 < v21 || v22 >= v21 || v23 != v21)
              *v22 = v21[-1];
            --v21;
            if (v8 <= v9)
              goto LABEL_42;
          }
          --v22;
          if (v21 <= v5)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v10 >= -7)
  {
    if (__dst != __src || &__src[v12] <= __dst)
      memmove(__dst, __src, 8 * v12);
    v16 = &v5[v12];
    v30 = v16;
    if ((unint64_t)v8 < a3 && v10 >= 8)
    {
      do
      {
        v17 = (int32x2_t)vmul_f32(*v8, a5);
        v18 = (int32x2_t)vmul_f32(*v5, a5);
        v19 = vadd_f32((float32x2_t)vzip1_s32(v18, v17), (float32x2_t)vzip2_s32(v18, v17));
        if ((vcgt_f32((float32x2_t)vdup_lane_s32((int32x2_t)v19, 1), v19).u8[0] & 1) != 0)
        {
          v20 = v8 + 1;
          if (v9 < v8 || v9 >= v20 || v9 != v8)
            *v9 = *v8;
        }
        else
        {
          if (v9 != v5)
            *v9 = *v5;
          v31 = ++v5;
          v20 = v8;
        }
        ++v9;
        if (v5 >= v16)
          break;
        v8 = v20;
      }
      while ((unint64_t)v20 < a3);
      v32 = v9;
    }
LABEL_42:
    sub_2264CA074((void **)&v32, (const void **)&v31, &v30);
    return 1;
  }
  result = sub_22655D43C();
  __break(1u);
  return result;
}

uint64_t sub_22652AF90(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  void *v16;
  char *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  BOOL v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  char isUniquelyReferenced_nonNull_native;
  char v37;
  unint64_t v38;
  uint64_t v39;
  _BOOL8 v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t result;
  uint64_t v58;
  _QWORD *v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  _QWORD *v71;

  v1 = a1;
  v70 = MEMORY[0x24BEE4AF8];
  v60 = a1 >> 62;
  if (a1 >> 62)
    goto LABEL_69;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    if (v70 >> 62)
    {
      swift_bridgeObjectRetain();
      v9 = sub_22655D400();
      swift_bridgeObjectRelease();
      if (v9)
      {
LABEL_13:
        if (v9 >= 1)
        {
          v10 = 0;
          v59 = (_QWORD *)(v70 + 32);
          v11 = v1 & 0xFFFFFFFFFFFFFF8;
          v12 = v1 & 0xC000000000000001;
          v61 = MEMORY[0x24BEE4B00];
          v62 = v1;
          v67 = v1 + 32;
          v64 = v1 & 0xC000000000000001;
          v65 = v1 & 0xFFFFFFFFFFFFFF8;
          v58 = v9;
          while (1)
          {
            v63 = v10;
            v71 = (_QWORD *)MEMORY[0x24BEE4AF8];
            v69 = v59[v10];
            if (v60)
              break;
            v13 = *(_QWORD *)(v11 + 16);
            swift_retain_n();
            swift_bridgeObjectRetain();
            if (v13)
              goto LABEL_19;
LABEL_43:
            v29 = MEMORY[0x24BEE4AF8];
LABEL_44:
            swift_bridgeObjectRelease();
            swift_release();
            if ((v29 & 0x8000000000000000) != 0 || (v29 & 0x4000000000000000) != 0)
            {
              if (sub_22655D400() != 2)
              {
LABEL_15:
                swift_release();
                swift_release();
                goto LABEL_16;
              }
            }
            else if (*(_QWORD *)(v29 + 16) != 2)
            {
              goto LABEL_15;
            }
            if ((v29 & 0xC000000000000001) != 0)
            {
              v1 = v69;
              swift_retain();
              v34 = (id)MEMORY[0x2276999E4](0, v29);
              v35 = (id)MEMORY[0x2276999E4](1, v29);
              swift_release();
              v31 = (_QWORD *)v61;
            }
            else
            {
              v30 = *(_QWORD *)(v29 + 16);
              v31 = (_QWORD *)v61;
              v1 = v69;
              if (!v30)
                goto LABEL_66;
              if (v30 == 1)
                goto LABEL_68;
              v32 = *(void **)(v29 + 32);
              v33 = *(void **)(v29 + 40);
              swift_retain();
              v34 = v32;
              v35 = v33;
              swift_release();
            }
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v70 = (unint64_t)v31;
            v38 = sub_226534954(v1);
            v39 = v31[2];
            v40 = (v37 & 1) == 0;
            v41 = v39 + v40;
            if (__OFADD__(v39, v40))
              goto LABEL_67;
            v42 = v37;
            if (v31[3] >= v41)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                sub_226547AB8();
            }
            else
            {
              sub_22654107C(v41, isUniquelyReferenced_nonNull_native);
              v43 = sub_226534954(v1);
              if ((v42 & 1) != (v44 & 1))
                goto LABEL_75;
              v38 = v43;
            }
            v1 = v62;
            v61 = (uint64_t)v31;
            if ((v42 & 1) != 0)
            {
              v45 = v31[7] + 16 * v38;
              v46 = *(void **)v45;

              *(_QWORD *)v45 = v34;
              *(_QWORD *)(v45 + 8) = v35;
            }
            else
            {
              sub_226523C7C(v38, v69, (uint64_t)v34, (uint64_t)v35, v31);
              swift_retain();
            }
            swift_release_n();
            swift_bridgeObjectRelease();
            v12 = v64;
            v11 = v65;
LABEL_16:
            v10 = v63 + 1;
            if (v63 + 1 == v58)
              goto LABEL_72;
          }
          swift_retain_n();
          swift_bridgeObjectRetain();
          v13 = sub_22655D400();
          if (!v13)
            goto LABEL_43;
LABEL_19:
          v14 = 0;
          v1 = v69;
          v68 = OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type;
          v66 = v13;
          while (1)
          {
            if (v12)
            {
              v15 = (char *)MEMORY[0x2276999E4](v14, v62);
            }
            else
            {
              if (v14 >= *(_QWORD *)(v11 + 16))
                goto LABEL_65;
              v15 = (char *)*(id *)(v67 + 8 * v14);
            }
            v16 = v15;
            if (__OFADD__(v14++, 1))
            {
              __break(1u);
LABEL_65:
              __break(1u);
LABEL_66:
              __break(1u);
LABEL_67:
              __break(1u);
LABEL_68:
              __break(1u);
LABEL_69:
              swift_bridgeObjectRetain();
              v2 = sub_22655D400();
              goto LABEL_3;
            }
            v18 = &v15[OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids];
            swift_beginAccess();
            v19 = *(_QWORD *)v18;
            if ((*(_QWORD *)v18 & 0xC000000000000001) != 0)
            {
              swift_retain();
              swift_bridgeObjectRetain();
              v20 = sub_22655D2A4();
              swift_bridgeObjectRelease();
              swift_release();
              if ((v20 & 1) != 0)
              {
LABEL_28:
                sub_22655D364();
                sub_22655D388();
                v13 = v66;
                sub_22655D394();
                sub_22655D370();
                goto LABEL_21;
              }
            }
            else if (*(_QWORD *)(v19 + 16))
            {
              sub_22655D640();
              swift_bridgeObjectRetain();
              sub_22655C11C();
              v21 = sub_22655D670();
              v22 = -1 << *(_BYTE *)(v19 + 32);
              v23 = v21 & ~v22;
              if (((*(_QWORD *)(v19 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0)
              {
                v24 = ~v22;
                do
                {
                  v25 = *(_QWORD *)(*(_QWORD *)(v19 + 48) + 8 * v23);
                  swift_retain();
                  if ((sub_22655C104() & 1) != 0)
                  {
                    v26 = *(unsigned __int8 *)(v25 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
                    v27 = *(unsigned __int8 *)(v69 + v68);
                    swift_release();
                    v28 = v26 == v27;
                    v1 = v69;
                    if (v28)
                    {
                      swift_bridgeObjectRelease();
                      v12 = v64;
                      v11 = v65;
                      goto LABEL_28;
                    }
                  }
                  else
                  {
                    swift_release();
                  }
                  v23 = (v23 + 1) & v24;
                }
                while (((*(_QWORD *)(v19 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0);

                swift_bridgeObjectRelease();
                v12 = v64;
                v11 = v65;
                v13 = v66;
              }
              else
              {

                swift_bridgeObjectRelease();
                v12 = v64;
                v11 = v65;
              }
              goto LABEL_21;
            }

LABEL_21:
            if (v14 == v13)
            {
              v29 = (unint64_t)v71;
              v1 = v62;
              goto LABEL_44;
            }
          }
        }
        goto LABEL_74;
      }
    }
    else
    {
      v9 = *(_QWORD *)((v70 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v9)
        goto LABEL_13;
    }
    v61 = MEMORY[0x24BEE4B00];
LABEL_72:
    swift_bridgeObjectRelease();
    v47 = sub_2264D61D8(v61);
    sub_2264D7468(v1, 0, 1);
    v49 = v48;
    v50 = sub_2264D76D8(v1, 0.000001);
    v51 = sub_2264D8868(v50, 0.07);
    swift_bridgeObjectRelease();
    v52 = sub_2264D9290(v51);
    v53 = sub_2264DA630(v52, v51);
    swift_bridgeObjectRelease();
    v54 = sub_2264DAAD0(v53, v51);
    swift_bridgeObjectRelease();
    v55 = sub_2264DA630(v54, v51);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v56 = sub_2264DBBD8(v55, v49, v61, v47);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return v56;
  }
  if (v2 >= 1)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      v3 = 0;
      do
      {
        v4 = MEMORY[0x2276999E4](v3++, v1);
        v5 = (uint64_t *)(v4 + OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids);
        swift_beginAccess();
        v6 = *v5;
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        sub_22646A410(v6);
      }
      while (v2 != v3);
    }
    else
    {
      v7 = 0;
      do
      {
        ++v7;
        swift_beginAccess();
        v8 = swift_bridgeObjectRetain();
        sub_22646A410(v8);
      }
      while (v2 != v7);
    }
    goto LABEL_11;
  }
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  type metadata accessor for HullPointUUID();
  result = sub_22655D5A4();
  __break(1u);
  return result;
}

uint64_t sub_22652B734(uint64_t isUniquelyReferenced_nonNull_native)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  unint64_t v22;
  char *v23;
  void *v24;
  char *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  uint64_t v42;
  _QWORD *v43;
  char v44;
  unint64_t v45;
  uint64_t v46;
  _BOOL8 v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  void *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  char *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  int64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  unint64_t v79;
  int32x4_t v80;
  char v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  unint64_t v95;
  int32x4_t v96;
  char v97;
  int32x4_t v98;
  __int128 v99;
  int32x4_t v100;
  int32x4_t v101;
  __int128 v102;
  int32x4_t v103;
  char v104;
  char v105;
  float32x2_t v106;
  float32x2_t v107;
  float32x2_t v108;
  unsigned __int32 v109;
  float32x2_t v110;
  float32x2_t v111;
  float32x2_t v112;
  unsigned __int32 v113;
  float32x2_t v114;
  float32x2_t v115;
  float v116;
  float v117;
  simd_float3 v118;
  simd_float3 v119;
  uint64_t *v120;
  float32x2_t v121;
  id v122;
  float32x2_t v123;
  float32x2_t v124;
  float32x2_t v125;
  float32x2_t v126;
  unsigned __int32 v127;
  float v128;
  float32x2_t v129;
  float32x2_t v130;
  float32x2_t v131;
  float32x2_t v132;
  float32x2_t v133;
  float32x2_t v134;
  float v135;
  float32x2_t v136;
  float32x2_t v137;
  float32x2_t v138;
  unsigned __int32 v139;
  float32x2_t v140;
  float32x2_t v141;
  float v142;
  float32x2_t v143;
  float32x2_t v144;
  float32x2_t v145;
  float32x2_t v146;
  float32x2_t v147;
  float32x2_t v148;
  float32x2_t v149;
  float32x2_t v150;
  float32x2_t v151;
  float32x2_t v152;
  float32x2_t v153;
  float32x2_t v154;
  float32x2_t v155;
  unsigned __int32 v156;
  float32x2_t v157;
  float32x2_t v158;
  int32x2_t v159;
  int32x2_t v160;
  float32x2_t v161;
  uint64_t v162;
  uint64_t v163;
  unsigned __int32 v164;
  float32x2_t v165;
  float32x2_t v166;
  unsigned __int32 v167;
  float32x2_t v168;
  float32x2_t v169;
  uint64_t v170;
  uint64_t v171;
  unsigned __int32 v172;
  float32x2_t v173;
  float32x2_t v174;
  unsigned __int32 v175;
  float32x2_t v176;
  float32x2_t v177;
  float v178;
  uint64_t v179;
  void (*v180)(char *, uint64_t, uint64_t);
  uint64_t v181;
  int v182;
  int v183;
  uint64_t v184;
  void (*v185)(uint64_t, char *, uint64_t);
  uint64_t v186;
  uint64_t result;
  id v188;
  _BOOL4 v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  unint64_t v196;
  uint64_t v197;
  __int128 v198;
  int32x4_t v199;
  char *v200;
  int32x4_t v201;
  simd_float3 v202;
  int32x4_t v203;
  _QWORD *v204;
  unint64_t v205;
  char *v206;
  char *v207;
  uint64_t v208;
  unint64_t v209;
  _QWORD *v210;
  uint64_t v211;
  unint64_t v212;
  uint64_t v213;
  uint64_t v214;

  v193 = sub_22655C140();
  v192 = *(_QWORD *)(v193 - 8);
  v2 = MEMORY[0x24BDAC7A8](v193);
  v195 = (char *)&v188 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v194 = (char *)&v188 - v4;
  v212 = MEMORY[0x24BEE4AF8];
  v200 = (char *)((unint64_t)isUniquelyReferenced_nonNull_native >> 62);
  if ((unint64_t)isUniquelyReferenced_nonNull_native >> 62)
    goto LABEL_183;
  v5 = *(_QWORD *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (2)
  {
    if (v5)
    {
      if (v5 < 1)
      {
        __break(1u);
        goto LABEL_188;
      }
      if ((isUniquelyReferenced_nonNull_native & 0xC000000000000001) != 0)
      {
        v6 = 0;
        do
        {
          v7 = MEMORY[0x2276999E4](v6++, isUniquelyReferenced_nonNull_native);
          v8 = (uint64_t *)(v7 + OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids);
          swift_beginAccess();
          v9 = *v8;
          swift_bridgeObjectRetain();
          swift_unknownObjectRelease();
          sub_22646A410(v9);
        }
        while (v5 != v6);
      }
      else
      {
        v10 = 0;
        do
        {
          ++v10;
          swift_beginAccess();
          v11 = swift_bridgeObjectRetain();
          sub_22646A410(v11);
        }
        while (v5 != v10);
      }
    }
    swift_bridgeObjectRelease();
    v12 = v212;
    if (v212 >> 62)
    {
      swift_bridgeObjectRetain();
      v13 = sub_22655D400();
      swift_bridgeObjectRelease();
    }
    else
    {
      v13 = *(_QWORD *)((v212 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v196 = v12;
    if (!v13)
    {
      v18 = MEMORY[0x24BEE4B00];
LABEL_69:
      swift_bridgeObjectRelease();
      v204 = (_QWORD *)v18;
      v208 = sub_2264D61D8(v18);
      v54 = sub_2264D8868(isUniquelyReferenced_nonNull_native, 0.07);
      v211 = MEMORY[0x24BEE4AF8];
      if (v54 >> 62)
      {
        v55 = sub_22655D400();
        if (v55)
          goto LABEL_71;
      }
      else
      {
        v55 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v55)
        {
LABEL_71:
          if (v55 < 1)
            goto LABEL_189;
          v56 = 0;
          v57 = v54 & 0xC000000000000001;
          v202 = (simd_float3)xmmword_2265600C0;
          v209 = v54 & 0xC000000000000001;
          v205 = v54;
          do
          {
            if (v57)
              v58 = (char *)MEMORY[0x2276999E4](v56, v54);
            else
              v58 = (char *)*(id *)(v54 + 8 * v56 + 32);
            v59 = v58;
            v60 = (uint64_t *)&v58[OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids];
            swift_beginAccess();
            v61 = *v60;
            if ((*v60 & 0xC000000000000001) != 0)
            {
              swift_bridgeObjectRetain();
              isUniquelyReferenced_nonNull_native = sub_22655D274();
              if (!isUniquelyReferenced_nonNull_native)
                goto LABEL_85;
            }
            else
            {
              isUniquelyReferenced_nonNull_native = *(_QWORD *)(v61 + 16);
              swift_bridgeObjectRetain();
              if (!isUniquelyReferenced_nonNull_native)
              {
LABEL_85:
                swift_bridgeObjectRelease();
                v62 = MEMORY[0x24BEE4AF8];
                goto LABEL_89;
              }
            }
            if (isUniquelyReferenced_nonNull_native <= 0)
            {
              v62 = MEMORY[0x24BEE4AF8];
            }
            else
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_255849180);
              v62 = swift_allocObject();
              v63 = _swift_stdlib_malloc_size((const void *)v62);
              v64 = v63 - 32;
              if (v63 < 32)
                v64 = v63 - 25;
              *(_QWORD *)(v62 + 16) = isUniquelyReferenced_nonNull_native;
              *(_QWORD *)(v62 + 24) = (2 * (v64 >> 3)) | 1;
            }
            swift_bridgeObjectRetain();
            v65 = sub_22653B5BC((uint64_t)&v212, (_QWORD *)(v62 + 32), isUniquelyReferenced_nonNull_native, v61);
            sub_22646C924();
            if (v65 != isUniquelyReferenced_nonNull_native)
              goto LABEL_178;
            swift_bridgeObjectRelease();
LABEL_89:
            v66 = *v60;
            if ((v66 & 0xC000000000000001) != 0)
            {
              swift_bridgeObjectRetain();
              v67 = sub_22655D274();
              swift_bridgeObjectRelease();
              if (v67 < 2)
                goto LABEL_105;
            }
            else if (*(uint64_t *)(v66 + 16) < 2)
            {
LABEL_105:

LABEL_106:
              swift_release();
              goto LABEL_74;
            }
            if (v62 < 0 || (v62 & 0x4000000000000000) != 0)
            {
              swift_retain();
              isUniquelyReferenced_nonNull_native = sub_22655D400();
              if (isUniquelyReferenced_nonNull_native)
              {
LABEL_94:
                if ((v62 & 0xC000000000000001) != 0)
                {
                  v68 = MEMORY[0x2276999E4](0, v62);
                }
                else
                {
                  if (!*(_QWORD *)(v62 + 16))
                    goto LABEL_182;
                  v68 = *(_QWORD *)(v62 + 32);
                  swift_retain();
                }
                swift_release();
                v69 = v204;
                if (!v204[2])
                  goto LABEL_108;
                v70 = swift_retain();
                v71 = sub_226534954(v70);
                if ((v72 & 1) == 0)
                {
                  swift_release();
LABEL_108:
                  swift_release();
                  swift_release();

LABEL_110:
                  v57 = v209;
                  goto LABEL_74;
                }
                v73 = v55;
                v74 = v69[7] + 16 * v71;
                v75 = *(void **)(v74 + 8);
                v76 = v208;
                v77 = *(_QWORD *)(v208 + 16);
                v207 = (char *)*(id *)v74;
                v78 = v75;
                if (!v77 || (v206 = v78, v79 = sub_226534954(v68), v78 = v206, (v81 & 1) == 0))
                {

                  swift_release_n();
                  swift_release();

                  v55 = v73;
                  v54 = v205;
                  goto LABEL_110;
                }
                v80.i64[0] = *(_QWORD *)(*(_QWORD *)(v76 + 56) + 8 * v79);
                v203 = v80;
                swift_release();
                v82 = isUniquelyReferenced_nonNull_native - 1;
                if (__OFSUB__(isUniquelyReferenced_nonNull_native, 1))
                  goto LABEL_190;
                v83 = v68;
                if ((v62 & 0xC000000000000001) != 0)
                {
                  v84 = MEMORY[0x2276999E4](v82, v62);
                  swift_release();
                  v55 = v73;
                  v54 = v205;
                  v57 = v209;
                }
                else
                {
                  if ((v82 & 0x8000000000000000) != 0)
                    goto LABEL_191;
                  v55 = v73;
                  v54 = v205;
                  v57 = v209;
                  if (v82 >= *(_QWORD *)(v62 + 16))
                    goto LABEL_192;
                  v84 = *(_QWORD *)(v62 + 8 * v82 + 32);
                  swift_retain();
                  swift_release();
                }
                v85 = v204;
                if (v204[2])
                {
                  v86 = swift_retain();
                  v87 = sub_226534954(v86);
                  if ((v88 & 1) != 0)
                  {
                    v89 = v85[7] + 16 * v87;
                    v90 = *(void **)(v89 + 8);
                    v91 = v208;
                    v92 = *(_QWORD *)(v208 + 16);
                    v93 = (char *)*(id *)v89;
                    v94 = v90;
                    if (v92 && (v95 = sub_226534954(v84), (v97 & 1) != 0))
                    {
                      v96.i64[0] = *(_QWORD *)(*(_QWORD *)(v91 + 56) + 8 * v95);
                      v201 = v96;
                      swift_release();
                      v104 = *(_BYTE *)(v83 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_hasThickness);
                      v105 = *(_BYTE *)(v84 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_hasThickness);
                      v106 = *(float32x2_t *)&v59[OBJC_IVAR____TtC8RoomPlan9HullPoint_position];
                      v200 = v93;
                      if ((v104 & 1) != 0)
                      {
                        v188 = v94;
                        if ((v105 & 1) != 0)
                        {
                          v107 = vadd_f32(v106, vmul_f32(vadd_f32(*(float32x2_t *)&v207[OBJC_IVAR____TtC8RoomPlan9HullPoint_position], *(float32x2_t *)&v206[OBJC_IVAR____TtC8RoomPlan9HullPoint_position]), (float32x2_t)0xBF000000BF000000));
                          v108 = vmul_f32(v107, v107);
                          v101.i64[0] = 1065353216;
                          if (vaddv_f32(v108) >= 0.0001)
                          {
                            v109 = vadd_f32(v108, (float32x2_t)vdup_lane_s32((int32x2_t)v108, 1)).u32[0];
                            v110 = vrsqrte_f32((float32x2_t)v109);
                            v111 = vmul_f32(v110, vrsqrts_f32((float32x2_t)v109, vmul_f32(v110, v110)));
                            *(float32x2_t *)v100.i8 = vmul_f32(v111, v111);
                            *(float32x2_t *)v101.i8 = vmul_n_f32(v107, vmul_f32(v111, vrsqrts_f32((float32x2_t)v109, *(float32x2_t *)v100.i8)).f32[0]);
                          }
                          v112 = vsub_f32(vmul_f32(vadd_f32(*(float32x2_t *)&v93[OBJC_IVAR____TtC8RoomPlan9HullPoint_position], *(float32x2_t *)&v94[OBJC_IVAR____TtC8RoomPlan9HullPoint_position]), (float32x2_t)0x3F0000003F000000), v106);
                          *(float32x2_t *)v98.i8 = vmul_f32(v112, v112);
                          *(_QWORD *)&v99 = 3212836864;
                          if (vaddv_f32(*(float32x2_t *)v98.i8) >= 0.0001)
                          {
                            v113 = vadd_f32(*(float32x2_t *)v98.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v98.i8, 1)).u32[0];
                            v114 = vrsqrte_f32((float32x2_t)v113);
                            v115 = vmul_f32(v114, vrsqrts_f32((float32x2_t)v113, vmul_f32(v114, v114)));
                            *(float32x2_t *)v100.i8 = vmul_f32(v115, v115);
                            *(float32x2_t *)v98.i8 = vmul_f32(v115, vrsqrts_f32((float32x2_t)v113, *(float32x2_t *)v100.i8));
                            *(float32x2_t *)&v99 = vmul_n_f32(v112, *(float *)v98.i32);
                          }
                          v198 = v99;
                          v116 = *(float *)&v101.i32[1];
                          *(float *)v98.i32 = -*(float *)&v101.i32[1];
                          v117 = *((float *)&v99 + 1);
                          v118.i32[1] = 0;
                          v203 = v98;
                          v118.f32[0] = -*(float *)&v101.i32[1];
                          v118.i64[1] = v101.i64[0];
                          *(float *)v100.i32 = -*((float *)&v99 + 1);
                          v119.i32[1] = 0;
                          v201 = v100;
                          v119.f32[0] = -*((float *)&v99 + 1);
                          v119.i64[1] = v99;
                          v199 = v101;
                          if (_simd_orient_vf3(v118, v119, v202) > 0.0)
                          {
                            v103.i64[1] = v199.i64[1];
                            *(float32x2_t *)v103.i8 = vsub_f32(0, *(float32x2_t *)v199.i8);
                            *(int8x8_t *)v100.i8 = vext_s8((int8x8_t)vadd_f32(*(float32x2_t *)v199.i8, 0), *(int8x8_t *)v103.i8, 4uLL);
                            *(float *)&v103.i32[1] = 0.0 - v116;
                            *((_QWORD *)&v102 + 1) = *((_QWORD *)&v198 + 1);
                            *(float32x2_t *)&v102 = vsub_f32(0, *(float32x2_t *)&v198);
                            *(int8x8_t *)v101.i8 = vext_s8((int8x8_t)vadd_f32(*(float32x2_t *)&v198, 0), *(int8x8_t *)&v102, 4uLL);
                            *((float *)&v102 + 1) = 0.0 - v117;
                            goto LABEL_169;
                          }
                          v103 = v199;
                          *(int32x2_t *)v100.i8 = vzip1_s32(*(int32x2_t *)v203.i8, *(int32x2_t *)v199.i8);
                          v102 = v198;
                          *(int32x2_t *)v101.i8 = vzip1_s32(*(int32x2_t *)v201.i8, *(int32x2_t *)&v198);
LABEL_164:
                          v170 = v102;
                          v171 = v101.i64[0];
                          *(_QWORD *)&v102 = v103.i64[0];
                          v101.i64[0] = v100.i64[0];
                          v162 = v83;
                          v163 = v84;
                          v103.i64[0] = v170;
                          v100.i64[0] = v171;
LABEL_170:
                          v198 = v102;
                          v201 = v101;
                          v199 = v103;
                          v203 = v100;
                          v178 = _simd_orient_vf3((simd_float3)vextq_s8((int8x16_t)vzip1q_s32((int32x4_t)0, v101), (int8x16_t)0, 4uLL), (simd_float3)vextq_s8((int8x16_t)vzip1q_s32((int32x4_t)0, v100), (int8x16_t)0, 4uLL), v202);
                          v196 = v83;
                          v179 = v192;
                          v180 = *(void (**)(char *, uint64_t, uint64_t))(v192 + 16);
                          v181 = v193;
                          v180(v194, v162 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_uuid, v193);
                          v190 = v84;
                          v191 = v162;
                          v182 = *(unsigned __int8 *)(v162 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
                          v180(v195, v163 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_uuid, v181);
                          v197 = v163;
                          v183 = *(unsigned __int8 *)(v163 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
                          v189 = v178 >= 0.0;
                          LOBYTE(v180) = v183 == 1;
                          type metadata accessor for JunctionPoint();
                          v184 = swift_allocObject();
                          *(float32x2_t *)(v184 + 16) = v106;
                          v185 = *(void (**)(uint64_t, char *, uint64_t))(v179 + 32);
                          v185(v184 + OBJC_IVAR____TtC8RoomPlan13JunctionPoint_leftUUID, v194, v181);
                          *(_BYTE *)(v184 + OBJC_IVAR____TtC8RoomPlan13JunctionPoint_isLeftCurved) = v182 == 1;
                          *(_QWORD *)(v184 + OBJC_IVAR____TtC8RoomPlan13JunctionPoint_leftDirection) = v198;
                          *(_QWORD *)(v184 + OBJC_IVAR____TtC8RoomPlan13JunctionPoint_leftNormal) = v201.i64[0];
                          v185(v184 + OBJC_IVAR____TtC8RoomPlan13JunctionPoint_rightUUID, v195, v181);
                          *(_BYTE *)(v184 + OBJC_IVAR____TtC8RoomPlan13JunctionPoint_isRightCurved) = (_BYTE)v180;
                          *(_QWORD *)(v184 + OBJC_IVAR____TtC8RoomPlan13JunctionPoint_rightDirection) = v199.i64[0];
                          *(_QWORD *)(v184 + OBJC_IVAR____TtC8RoomPlan13JunctionPoint_rightNormal) = v203.i64[0];
                          *(_BYTE *)(v184 + OBJC_IVAR____TtC8RoomPlan13JunctionPoint_configuration) = v189;
                          swift_retain();
                          swift_retain();
                          v186 = swift_retain();
                          MEMORY[0x227699594](v186);
                          if (*(_QWORD *)((v211 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v211 & 0xFFFFFFFFFFFFFF8)
                                                                                             + 0x18) >> 1)
                            sub_22655CEF0();
                          sub_22655CF08();
                          sub_22655CEE4();

                          swift_release();
                          swift_release();
                          swift_release();
                          swift_release();
                          swift_release();

                          goto LABEL_173;
                        }
                        v129 = *(float32x2_t *)&v93[OBJC_IVAR____TtC8RoomPlan9HullPoint_position];
                        v130 = *(float32x2_t *)&v94[OBJC_IVAR____TtC8RoomPlan9HullPoint_position];
                        v131 = vsub_f32(v130, v129);
                        v132 = vmul_f32(v131, v131);
                        if (vaddv_f32(v132) >= 0.0001)
                        {
                          v139 = vadd_f32(v132, (float32x2_t)vdup_lane_s32((int32x2_t)v132, 1)).u32[0];
                          v140 = vrsqrte_f32((float32x2_t)v139);
                          v141 = vmul_f32(v140, vrsqrts_f32((float32x2_t)v139, vmul_f32(v140, v140)));
                          *(float32x2_t *)&v102 = vmul_n_f32(v131, vmul_f32(v141, vrsqrts_f32((float32x2_t)v139, vmul_f32(v141, v141))).f32[0]);
                        }
                        else
                        {
                          *(_QWORD *)&v102 = 3212836864;
                        }
                        v101 = v201;
                        v142 = vaddv_f32(vmul_f32(vadd_f32(v106, vmul_f32(vadd_f32(v129, v130), (float32x2_t)0xBF000000BF000000)), *(float32x2_t *)&v102));
                        v143 = vmul_f32(vadd_f32(*(float32x2_t *)&v207[OBJC_IVAR____TtC8RoomPlan9HullPoint_position], *(float32x2_t *)&v206[OBJC_IVAR____TtC8RoomPlan9HullPoint_position]), (float32x2_t)0x3F0000003F000000);
                        if (v142 < 0.0)
                        {
                          v144 = vsub_f32(v106, v143);
                          v145 = vmul_f32(v144, v144);
                          if (vaddv_f32(v145) >= 0.0001)
                          {
                            v167 = vadd_f32(v145, (float32x2_t)vdup_lane_s32((int32x2_t)v145, 1)).u32[0];
                            v168 = vrsqrte_f32((float32x2_t)v167);
                            v169 = vmul_f32(v168, vrsqrts_f32((float32x2_t)v167, vmul_f32(v168, v168)));
                            *(float32x2_t *)v103.i8 = vmul_n_f32(v144, vmul_f32(v169, vrsqrts_f32((float32x2_t)v167, vmul_f32(v169, v169))).f32[0]);
                          }
                          else
                          {
                            v103.i64[0] = 1065353216;
                          }
                          v144.f32[0] = -*(float *)&v103.i32[1];
                          *(int32x2_t *)v100.i8 = vzip1_s32((int32x2_t)v144, *(int32x2_t *)v103.i8);
                          goto LABEL_164;
                        }
                        v154 = vsub_f32(v143, v106);
                        v155 = vmul_f32(v154, v154);
                        if (vaddv_f32(v155) >= 0.0001)
                        {
                          v175 = vadd_f32(v155, (float32x2_t)vdup_lane_s32((int32x2_t)v155, 1)).u32[0];
                          v176 = vrsqrte_f32((float32x2_t)v175);
                          v177 = vmul_f32(v176, vrsqrts_f32((float32x2_t)v175, vmul_f32(v176, v176)));
                          *(float32x2_t *)v103.i8 = vmul_n_f32(v154, vmul_f32(v177, vrsqrts_f32((float32x2_t)v175, vmul_f32(v177, v177))).f32[0]);
                        }
                        else
                        {
                          v103.i64[0] = 1065353216;
                        }
                        v154.f32[0] = -*(float *)&v103.i32[1];
                        *(int32x2_t *)v100.i8 = vzip1_s32((int32x2_t)v154, *(int32x2_t *)v103.i8);
LABEL_169:
                        v162 = v84;
                        v163 = v83;
                        goto LABEL_170;
                      }
                      v121 = *(float32x2_t *)&v207[OBJC_IVAR____TtC8RoomPlan9HullPoint_position];
                      v122 = v206;
                      v123 = *(float32x2_t *)&v206[OBJC_IVAR____TtC8RoomPlan9HullPoint_position];
                      v124 = vadd_f32(v106, vmul_f32(vadd_f32(v121, v123), (float32x2_t)0xBF000000BF000000));
                      v125 = vsub_f32(v123, v121);
                      v126 = vmul_f32(v125, v125);
                      v127 = vadd_f32(v126, (float32x2_t)vdup_lane_s32((int32x2_t)v126, 1)).u32[0];
                      v128 = vaddv_f32(v126);
                      if ((v105 & 1) != 0)
                      {
                        if (v128 < 0.0001)
                        {
                          v103.i64[0] = 1065353216;
                        }
                        else
                        {
                          v133 = vrsqrte_f32((float32x2_t)v127);
                          v134 = vmul_f32(v133, vrsqrts_f32((float32x2_t)v127, vmul_f32(v133, v133)));
                          *(float32x2_t *)v103.i8 = vmul_n_f32(v125, vmul_f32(v134, vrsqrts_f32((float32x2_t)v127, vmul_f32(v134, v134))).f32[0]);
                        }
                        v135 = vaddv_f32(vmul_f32(v124, *(float32x2_t *)v103.i8));
                        v136 = vmul_f32(vadd_f32(*(float32x2_t *)&v200[OBJC_IVAR____TtC8RoomPlan9HullPoint_position], *(float32x2_t *)&v94[OBJC_IVAR____TtC8RoomPlan9HullPoint_position]), (float32x2_t)0x3F0000003F000000);
                        v188 = v94;
                        if (v135 > 0.0)
                        {
                          v137 = vsub_f32(v136, v106);
                          v138 = vmul_f32(v137, v137);
                          if (vaddv_f32(v138) >= 0.0001)
                          {
                            v164 = vadd_f32(v138, (float32x2_t)vdup_lane_s32((int32x2_t)v138, 1)).u32[0];
                            v165 = vrsqrte_f32((float32x2_t)v164);
                            v166 = vmul_f32(v165, vrsqrts_f32((float32x2_t)v164, vmul_f32(v165, v165)));
                            *(float32x2_t *)&v102 = vmul_n_f32(v137, vmul_f32(v166, vrsqrts_f32((float32x2_t)v164, vmul_f32(v166, v166))).f32[0]);
                          }
                          else
                          {
                            *(_QWORD *)&v102 = 3212836864;
                          }
                          v100 = v203;
                          v137.f32[0] = -*((float *)&v102 + 1);
                          *(int32x2_t *)v101.i8 = vzip1_s32((int32x2_t)v137, *(int32x2_t *)&v102);
                          goto LABEL_164;
                        }
                        v152 = vsub_f32(v106, v136);
                        v153 = vmul_f32(v152, v152);
                        if (vaddv_f32(v153) >= 0.0001)
                        {
                          v172 = vadd_f32(v153, (float32x2_t)vdup_lane_s32((int32x2_t)v153, 1)).u32[0];
                          v173 = vrsqrte_f32((float32x2_t)v172);
                          v174 = vmul_f32(v173, vrsqrts_f32((float32x2_t)v172, vmul_f32(v173, v173)));
                          *(float32x2_t *)&v102 = vmul_n_f32(v152, vmul_f32(v174, vrsqrts_f32((float32x2_t)v172, vmul_f32(v174, v174))).f32[0]);
                        }
                        else
                        {
                          *(_QWORD *)&v102 = 3212836864;
                        }
                        v100 = v203;
                        v152.f32[0] = -*((float *)&v102 + 1);
                        *(int32x2_t *)v101.i8 = vzip1_s32((int32x2_t)v152, *(int32x2_t *)&v102);
                        goto LABEL_169;
                      }
                      if (v128 < 0.0001)
                      {
                        v103.i64[0] = 1065353216;
                      }
                      else
                      {
                        v146 = vrsqrte_f32((float32x2_t)v127);
                        v147 = vmul_f32(v146, vrsqrts_f32((float32x2_t)v127, vmul_f32(v146, v146)));
                        *(float32x2_t *)v103.i8 = vmul_n_f32(v125, vmul_f32(v147, vrsqrts_f32((float32x2_t)v127, vmul_f32(v147, v147))).f32[0]);
                      }
                      v148 = *(float32x2_t *)&v200[OBJC_IVAR____TtC8RoomPlan9HullPoint_position];
                      v149 = *(float32x2_t *)&v94[OBJC_IVAR____TtC8RoomPlan9HullPoint_position];
                      v150 = vsub_f32(v149, v148);
                      v151 = vmul_f32(v150, v150);
                      if (vaddv_f32(v151) >= 0.0001)
                      {
                        v156 = vadd_f32(v151, (float32x2_t)vdup_lane_s32((int32x2_t)v151, 1)).u32[0];
                        v157 = vrsqrte_f32((float32x2_t)v156);
                        v158 = vmul_f32(v157, vrsqrts_f32((float32x2_t)v156, vmul_f32(v157, v157)));
                        *(float32x2_t *)&v102 = vmul_n_f32(v150, vmul_f32(v158, vrsqrts_f32((float32x2_t)v156, vmul_f32(v158, v158))).f32[0]);
                      }
                      else
                      {
                        *(_QWORD *)&v102 = 3212836864;
                      }
                      v100 = v203;
                      v101 = v201;
                      v159 = (int32x2_t)vmul_f32(v124, *(float32x2_t *)v103.i8);
                      v160 = (int32x2_t)vmul_f32(vadd_f32(v106, vmul_f32(vadd_f32(v148, v149), (float32x2_t)0xBF000000BF000000)), *(float32x2_t *)&v102);
                      v161 = vadd_f32((float32x2_t)vzip1_s32(v159, v160), (float32x2_t)vzip2_s32(v159, v160));
                      if (vmul_lane_f32(v161, v161, 1).f32[0] < 0.0)
                      {
                        v188 = v94;
                        v162 = v84;
                        v163 = v83;
                        if (v161.f32[0] > 0.0)
                          goto LABEL_164;
                        goto LABEL_170;
                      }

                      swift_release();
                      swift_release();

LABEL_173:
                      v120 = &v214;
                    }
                    else
                    {

                      swift_release();
                      swift_release_n();

                      v120 = &v213;
                    }

                    goto LABEL_110;
                  }

                  swift_release();
                }
                else
                {

                }
                swift_release();
                goto LABEL_106;
              }
            }
            else
            {
              isUniquelyReferenced_nonNull_native = *(_QWORD *)(v62 + 16);
              swift_retain();
              if (isUniquelyReferenced_nonNull_native)
                goto LABEL_94;
            }

            swift_release_n();
LABEL_74:
            ++v56;
          }
          while (v55 != v56);
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v211;
    }
    if (v13 < 1)
    {
LABEL_188:
      __break(1u);
LABEL_189:
      __break(1u);
LABEL_190:
      __break(1u);
LABEL_191:
      __break(1u);
LABEL_192:
      __break(1u);
      goto LABEL_193;
    }
    v14 = 0;
    v199.i64[0] = v12 + 32;
    v15 = isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8;
    if (isUniquelyReferenced_nonNull_native < 0)
      v16 = isUniquelyReferenced_nonNull_native;
    else
      v16 = isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8;
    v197 = v16;
    v17 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
    v206 = (char *)(isUniquelyReferenced_nonNull_native + 32);
    v18 = MEMORY[0x24BEE4B00];
    v201.i64[0] = isUniquelyReferenced_nonNull_native;
    v205 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
    *(_QWORD *)&v198 = v13;
    v203.i64[0] = isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8;
    while (2)
    {
      v204 = (_QWORD *)v18;
      v202.i64[0] = v14;
      v19 = *(_QWORD *)(v199.i64[0] + 8 * v14);
      v210 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (v200)
      {
        swift_retain_n();
        swift_bridgeObjectRetain();
        v20 = (char *)sub_22655D400();
      }
      else
      {
        v20 = *(char **)(v15 + 16);
        swift_retain_n();
        swift_bridgeObjectRetain();
      }
      v21 = v206;
      v209 = v19;
      if (!v20)
      {
        v36 = MEMORY[0x24BEE4AF8];
        goto LABEL_48;
      }
      v22 = 0;
      isUniquelyReferenced_nonNull_native = v19 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_uuid;
      v208 = OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type;
      v207 = v20;
      do
      {
        if (v17)
        {
          v23 = (char *)MEMORY[0x2276999E4](v22, v201.i64[0]);
        }
        else
        {
          if (v22 >= *(_QWORD *)(v15 + 16))
            goto LABEL_177;
          v23 = (char *)*(id *)&v21[8 * v22];
        }
        v24 = v23;
        if (__OFADD__(v22++, 1))
        {
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
          goto LABEL_179;
        }
        v26 = &v23[OBJC_IVAR____TtC8RoomPlan9HullPoint_uuids];
        swift_beginAccess();
        v27 = *(_QWORD *)v26;
        if ((*(_QWORD *)v26 & 0xC000000000000001) != 0)
        {
          swift_retain();
          swift_bridgeObjectRetain();
          v28 = sub_22655D2A4();
          swift_bridgeObjectRelease();
          swift_release();
          if ((v28 & 1) == 0)
            goto LABEL_26;
LABEL_34:
          sub_22655D364();
          sub_22655D388();
          v19 = v209;
          sub_22655D394();
          sub_22655D370();
        }
        else
        {
          if (!*(_QWORD *)(v27 + 16))
          {
LABEL_26:

            continue;
          }
          sub_22655D640();
          swift_bridgeObjectRetain();
          sub_22655C11C();
          v29 = sub_22655D670();
          v30 = -1 << *(_BYTE *)(v27 + 32);
          v31 = v29 & ~v30;
          if (((*(_QWORD *)(v27 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) != 0)
          {
            v32 = ~v30;
            do
            {
              v33 = *(_QWORD *)(*(_QWORD *)(v27 + 48) + 8 * v31);
              swift_retain();
              if ((sub_22655C104() & 1) != 0)
              {
                v34 = *(unsigned __int8 *)(v33 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
                v35 = *(unsigned __int8 *)(v209 + v208);
                swift_release();
                if (v34 == v35)
                {
                  swift_bridgeObjectRelease();
                  v15 = v203.i64[0];
                  v17 = v205;
                  v21 = v206;
                  goto LABEL_34;
                }
              }
              else
              {
                swift_release();
              }
              v31 = (v31 + 1) & v32;
            }
            while (((*(_QWORD *)(v27 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) != 0);

            swift_bridgeObjectRelease();
            v15 = v203.i64[0];
            v17 = v205;
            v21 = v206;
            v19 = v209;
          }
          else
          {

            swift_bridgeObjectRelease();
            v17 = v205;
            v21 = v206;
          }
        }
      }
      while ((char *)v22 != v207);
      v36 = (unint64_t)v210;
      isUniquelyReferenced_nonNull_native = v201.i64[0];
LABEL_48:
      swift_bridgeObjectRelease();
      swift_release();
      if ((v36 & 0x8000000000000000) == 0 && (v36 & 0x4000000000000000) == 0)
      {
        if (*(_QWORD *)(v36 + 16) == 2)
          goto LABEL_51;
LABEL_19:
        swift_release();
        swift_release();
LABEL_20:
        v14 = v202.i64[0] + 1;
        v18 = (uint64_t)v204;
        if (v202.i64[0] + 1 == (_QWORD)v198)
          goto LABEL_69;
        continue;
      }
      break;
    }
    if (sub_22655D400() != 2)
      goto LABEL_19;
LABEL_51:
    if ((v36 & 0xC000000000000001) == 0)
    {
      v37 = *(_QWORD *)(v36 + 16);
      if (v37)
      {
        if (v37 != 1)
        {
          v38 = *(void **)(v36 + 32);
          v39 = *(void **)(v36 + 40);
          swift_retain();
          v40 = v38;
          v41 = v39;
          v19 = v209;
          goto LABEL_55;
        }
LABEL_181:
        __break(1u);
LABEL_182:
        __break(1u);
LABEL_183:
        swift_bridgeObjectRetain();
        v5 = sub_22655D400();
        continue;
      }
LABEL_179:
      __break(1u);
LABEL_180:
      __break(1u);
      goto LABEL_181;
    }
    break;
  }
  swift_retain();
  v40 = (id)MEMORY[0x2276999E4](0, v36);
  v41 = (id)MEMORY[0x2276999E4](1, v36);
LABEL_55:
  v42 = (uint64_t)v41;
  swift_release();
  v43 = v204;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v212 = (unint64_t)v43;
  v45 = sub_226534954(v19);
  v46 = v43[2];
  v47 = (v44 & 1) == 0;
  v48 = v46 + v47;
  if (__OFADD__(v46, v47))
    goto LABEL_180;
  v49 = v44;
  if (v43[3] >= v48)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      sub_226547AB8();
    goto LABEL_61;
  }
  sub_22654107C(v48, isUniquelyReferenced_nonNull_native);
  v50 = sub_226534954(v19);
  if ((v49 & 1) == (v51 & 1))
  {
    v45 = v50;
LABEL_61:
    isUniquelyReferenced_nonNull_native = v201.i64[0];
    v204 = (_QWORD *)v212;
    if ((v49 & 1) != 0)
    {
      v52 = *(_QWORD *)(v212 + 56) + 16 * v45;
      v53 = *(void **)v52;

      *(_QWORD *)v52 = v40;
      *(_QWORD *)(v52 + 8) = v42;
    }
    else
    {
      sub_226523C7C(v45, v19, (uint64_t)v40, v42, (_QWORD *)v212);
      swift_retain();
    }
    swift_release_n();
    swift_bridgeObjectRelease();
    v17 = v205;
    goto LABEL_20;
  }
LABEL_193:
  type metadata accessor for HullPointUUID();
  result = sub_22655D5A4();
  __break(1u);
  return result;
}

float32x4_t sub_22652CD44()
{
  uint64_t v0;
  float32x4_t v1;
  float32x4_t v2;
  float32x4_t v3;
  float32x4_t v4;
  float32x4_t v5;
  float32x4_t v6;
  float32x4_t v7;
  float32x4_t v8;
  float32x4_t result;
  float32x4_t v10;

  v1 = (float32x4_t)vdupq_lane_s32(0, 0);
  v2 = v1;
  v2.i32[0] = *(_OWORD *)(v0 + 144);
  v3 = v1;
  v3.i32[1] = HIDWORD(*(_QWORD *)(v0 + 144));
  v1.i32[2] = *(_QWORD *)(v0 + 152);
  v4 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v2, COERCE_FLOAT(*MEMORY[0x24BDAEE00])), v3, *MEMORY[0x24BDAEE00], 1), v1, *MEMORY[0x24BDAEE00], 2), (float32x4_t)xmmword_22655FA60, *MEMORY[0x24BDAEE00], 3);
  v5 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v2, COERCE_FLOAT(*(_OWORD *)(MEMORY[0x24BDAEE00] + 16))), v3, *(float32x2_t *)(MEMORY[0x24BDAEE00] + 16), 1), v1, *(float32x4_t *)(MEMORY[0x24BDAEE00] + 16), 2), (float32x4_t)xmmword_22655FA60, *(float32x4_t *)(MEMORY[0x24BDAEE00] + 16), 3);
  v6 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v2, COERCE_FLOAT(*(_OWORD *)(MEMORY[0x24BDAEE00] + 32))), v3, *(float32x2_t *)(MEMORY[0x24BDAEE00] + 32), 1), v1, *(float32x4_t *)(MEMORY[0x24BDAEE00] + 32), 2), (float32x4_t)xmmword_22655FA60, *(float32x4_t *)(MEMORY[0x24BDAEE00] + 32), 3);
  v7 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v2, COERCE_FLOAT(*(_OWORD *)(v0 + 192))), v3, *(float32x2_t *)(v0 + 192), 1), v1, *(float32x4_t *)(v0 + 192), 2), (float32x4_t)xmmword_22655FA60, *(float32x4_t *)(MEMORY[0x24BDAEE00] + 48), 3);
  v8 = *(float32x4_t *)(v0 + 64);
  result = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v4, COERCE_FLOAT(*(_OWORD *)(v0 + 32))), v5, *(float32x2_t *)(v0 + 32), 1), v6, *(float32x4_t *)(v0 + 32), 2), v7, *(float32x4_t *)(v0 + 32), 3);
  v10 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v4, COERCE_FLOAT(*(_OWORD *)(v0 + 48))), v5, *(float32x2_t *)(v0 + 48), 1), v6, *(float32x4_t *)(v0 + 48), 2), v7, *(float32x4_t *)(v0 + 48), 3);
  *(float32x4_t *)(v0 + 80) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v4, COERCE_FLOAT(*(_OWORD *)(v0 + 16))), v5, *(float32x2_t *)(v0 + 16), 1), v6, *(float32x4_t *)(v0 + 16), 2), v7, *(float32x4_t *)(v0 + 16), 3);
  *(float32x4_t *)(v0 + 96) = result;
  *(float32x4_t *)(v0 + 112) = v10;
  *(float32x4_t *)(v0 + 128) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v4, v8.f32[0]), v5, *(float32x2_t *)v8.f32, 1), v6, v8, 2), v7, v8, 3);
  return result;
}

uint64_t sub_22652CE14()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InstanceTransform()
{
  return objc_opt_self();
}

uint64_t sub_22652CE44()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t inited;
  float32x4_t v3;
  float32x4_t v4;
  float32x4_t v5;
  float32x4_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  float32x4_t v15;
  float32x4_t v16;
  float32x4_t v17;
  float32x4_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  float32x4_t v27;
  float32x4_t v28;
  float32x4_t v29;
  float32x4_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  float32x4_t v39;
  float32x4_t v40;
  float32x4_t v41;
  float32x4_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  float32x4_t v53;
  float32x4_t v54;
  float32x4_t v55;
  float32x4_t v56;
  float32x4_t v57;
  float32x4_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  float32x4_t v67;
  float32x4_t v68;
  float32x4_t v69;
  float32x4_t v70;
  float32x4_t v71;
  float32x4_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  float32x4_t v81;
  float32x4_t v82;
  float32x4_t v83;
  float32x4_t v84;
  float32x4_t v85;
  float32x4_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  float32x4_t v95;
  float32x4_t v96;
  float32x4_t v97;
  float32x4_t v98;
  float32x4_t v99;
  float32x4_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  float32x4_t v111;
  float32x4_t v112;
  float32x4_t v113;
  float32x4_t v114;
  float32x4_t v115;
  float32x4_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  float32x4_t v125;
  float32x4_t v126;
  float32x4_t v127;
  float32x4_t v128;
  float32x4_t v129;
  float32x4_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  float32x4_t v139;
  float32x4_t v140;
  float32x4_t v141;
  float32x4_t v142;
  float32x4_t v143;
  float32x4_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  float32x4_t v153;
  float32x4_t v154;
  float32x4_t v155;
  float32x4_t v156;
  float32x4_t v157;
  float32x4_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t result;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  float32x4_t v173;
  float32x4_t v174;
  float32x4_t v175;
  float32x4_t v176;
  float32x4_t v177;
  float32x4_t v178;
  float32x4_t v179;
  float32x4_t v180;
  float32x4_t v181;
  float32x4_t v182;
  float32x4_t v183;
  float32x4_t v184;
  float32x4_t v185;
  float32x4_t v186;
  float32x4_t v187;
  float32x4_t v188;
  float32x4_t v189;
  float32x4_t v190;
  float32x4_t v191;
  float32x4_t v192;
  float32x4_t v193;
  float32x4_t v194;
  float32x4_t v195;
  float32x4_t v196;
  float32x4_t v197;
  float32x4_t v198;
  float32x4_t v199;
  float32x4_t v200;
  float32x4_t v201;
  float32x4_t v202;
  float32x4_t v203;
  float32x4_t v204;
  float32x4_t v205;
  float32x4_t v206;
  float32x4_t v207;
  float32x4_t v208;
  float32x4_t v209;
  float32x4_t v210;
  float32x4_t v211;
  float32x4_t v212;
  float32x4_t v213;
  float32x4_t v214;
  float32x4_t v215;
  float32x4_t v216;
  float32x4_t v217;
  float32x4_t v218;
  float32x4_t v219;
  float32x4_t v220;
  unint64_t v221;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255849180);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22655FFA0;
  *(__n64 *)v3.f32 = sub_22652F268(0.0, (float32x4_t)xmmword_226560080);
  v192 = v4;
  v204 = v3;
  v173 = v6;
  v181 = v5;
  type metadata accessor for SplineCorner();
  v7 = swift_allocObject();
  *(_QWORD *)(inited + 32) = sub_226439A5C(1.0, 0.93, 0.0, 0.6, 0.98, v204, v192, v181, v7, v8, v9, v10, v11, v12, v13, v14, v173);
  *(__n64 *)v15.f32 = sub_22652F268(90.0, (float32x4_t)xmmword_226560080);
  v193 = v16;
  v205 = v15;
  v174 = v18;
  v182 = v17;
  v19 = swift_allocObject();
  *(_QWORD *)(inited + 40) = sub_226439A5C(1.0, 0.93, 0.0, 0.6, 0.98, v205, v193, v182, v19, v20, v21, v22, v23, v24, v25, v26, v174);
  *(__n64 *)v27.f32 = sub_22652F268(180.0, (float32x4_t)xmmword_226560080);
  v194 = v28;
  v206 = v27;
  v175 = v30;
  v183 = v29;
  v31 = swift_allocObject();
  *(_QWORD *)(inited + 48) = sub_226439A5C(1.0, 0.93, 0.0, 0.6, 0.98, v206, v194, v183, v31, v32, v33, v34, v35, v36, v37, v38, v175);
  *(__n64 *)v39.f32 = sub_22652F268(270.0, (float32x4_t)xmmword_226560080);
  v195 = v40;
  v207 = v39;
  v176 = v42;
  v184 = v41;
  v43 = swift_allocObject();
  *(_QWORD *)(inited + 56) = sub_226439A5C(1.0, 0.93, 0.0, 0.6, 0.98, v207, v195, v184, v43, v44, v45, v46, v47, v48, v49, v50, v176);
  sub_22655CEE4();
  type metadata accessor for SplineGroup();
  swift_allocObject();
  v51 = sub_22646C5B4(inited);
  swift_bridgeObjectRelease();
  v52 = swift_initStackObject();
  *(_OWORD *)(v52 + 16) = xmmword_22655FFA0;
  *(__n64 *)v53.f32 = sub_22652F268(0.0, (float32x4_t)xmmword_226560080);
  v54 = vmulq_f32(v53, (float32x4_t)0);
  v208 = vmlaq_f32(vmlaq_f32(vmlaq_f32(v53, (float32x4_t)0, v55), (float32x4_t)0, v56), (float32x4_t)0, v57);
  v196 = vmlaq_f32(vmlaq_f32(vaddq_f32(v55, v54), (float32x4_t)0, v56), (float32x4_t)0, v57);
  v58 = vmlaq_f32(v54, (float32x4_t)0, v55);
  v185 = vmlaq_f32(vaddq_f32(v56, v58), (float32x4_t)0, v57);
  v177 = vaddq_f32(v57, vmlaq_f32(v58, (float32x4_t)0, v56));
  v59 = swift_allocObject();
  *(_QWORD *)(v52 + 32) = sub_226439A5C(1.0, 1.0, 0.0, 0.4, 0.98, v208, v196, v185, v59, v60, v61, v62, v63, v64, v65, v66, v177);
  *(__n64 *)v67.f32 = sub_22652F268(90.0, (float32x4_t)xmmword_226560080);
  v68 = vmulq_f32(v67, (float32x4_t)0);
  v209 = vmlaq_f32(vmlaq_f32(vmlaq_f32(v67, (float32x4_t)0, v69), (float32x4_t)0, v70), (float32x4_t)0, v71);
  v197 = vmlaq_f32(vmlaq_f32(vaddq_f32(v69, v68), (float32x4_t)0, v70), (float32x4_t)0, v71);
  v72 = vmlaq_f32(v68, (float32x4_t)0, v69);
  v186 = vmlaq_f32(vaddq_f32(v70, v72), (float32x4_t)0, v71);
  v178 = vaddq_f32(v71, vmlaq_f32(v72, (float32x4_t)0, v70));
  v73 = swift_allocObject();
  *(_QWORD *)(v52 + 40) = sub_226439A5C(1.0, 1.0, 0.0, 0.4, 0.98, v209, v197, v186, v73, v74, v75, v76, v77, v78, v79, v80, v178);
  *(__n64 *)v81.f32 = sub_22652F268(180.0, (float32x4_t)xmmword_226560080);
  v82 = vmulq_f32(v81, (float32x4_t)0);
  v210 = vmlaq_f32(vmlaq_f32(vmlaq_f32(v81, (float32x4_t)0, v83), (float32x4_t)0, v84), (float32x4_t)0, v85);
  v198 = vmlaq_f32(vmlaq_f32(vaddq_f32(v83, v82), (float32x4_t)0, v84), (float32x4_t)0, v85);
  v86 = vmlaq_f32(v82, (float32x4_t)0, v83);
  v187 = vmlaq_f32(vaddq_f32(v84, v86), (float32x4_t)0, v85);
  v179 = vaddq_f32(v85, vmlaq_f32(v86, (float32x4_t)0, v84));
  v87 = swift_allocObject();
  *(_QWORD *)(v52 + 48) = sub_226439A5C(1.0, 1.0, 0.0, 0.4, 0.98, v210, v198, v187, v87, v88, v89, v90, v91, v92, v93, v94, v179);
  *(__n64 *)v95.f32 = sub_22652F268(270.0, (float32x4_t)xmmword_226560080);
  v96 = vmulq_f32(v95, (float32x4_t)0);
  v211 = vmlaq_f32(vmlaq_f32(vmlaq_f32(v95, (float32x4_t)0, v97), (float32x4_t)0, v98), (float32x4_t)0, v99);
  v199 = vmlaq_f32(vmlaq_f32(vaddq_f32(v97, v96), (float32x4_t)0, v98), (float32x4_t)0, v99);
  v100 = vmlaq_f32(v96, (float32x4_t)0, v97);
  v188 = vmlaq_f32(vaddq_f32(v98, v100), (float32x4_t)0, v99);
  v180 = vaddq_f32(v99, vmlaq_f32(v100, (float32x4_t)0, v98));
  v101 = swift_allocObject();
  *(_QWORD *)(v52 + 56) = sub_226439A5C(1.0, 1.0, 0.0, 0.4, 0.98, v211, v199, v188, v101, v102, v103, v104, v105, v106, v107, v108, v180);
  sub_22655CEE4();
  swift_allocObject();
  v109 = sub_22646C5B4(v52);
  swift_bridgeObjectRelease();
  v110 = swift_initStackObject();
  *(_OWORD *)(v110 + 16) = xmmword_22655FFA0;
  *(__n64 *)v111.f32 = sub_22652F268(0.0, (float32x4_t)xmmword_226560080);
  v112 = vmulq_f32(v111, (float32x4_t)0);
  v216 = vmlaq_f32(vmlaq_f32(vmlaq_f32(v111, (float32x4_t)0, v113), (float32x4_t)0, v114), (float32x4_t)0, v115);
  v212 = vmlaq_f32(vmlaq_f32(vaddq_f32(v113, v112), (float32x4_t)0, v114), (float32x4_t)0, v115);
  v116 = vmlaq_f32(v112, (float32x4_t)0, v113);
  v200 = vmlaq_f32(vaddq_f32(v114, v116), (float32x4_t)0, v115);
  v189 = vaddq_f32(v115, vmlaq_f32(v116, (float32x4_t)0, v114));
  v117 = swift_allocObject();
  *(_QWORD *)(v110 + 32) = sub_226439A5C(1.0, 0.3, -1.0, 0.0, 0.999, v216, v212, v200, v117, v118, v119, v120, v121, v122, v123, v124, v189);
  *(__n64 *)v125.f32 = sub_22652F268(90.0, (float32x4_t)xmmword_226560080);
  v126 = vmulq_f32(v125, (float32x4_t)0);
  v217 = vmlaq_f32(vmlaq_f32(vmlaq_f32(v125, (float32x4_t)0, v127), (float32x4_t)0, v128), (float32x4_t)0, v129);
  v213 = vmlaq_f32(vmlaq_f32(vaddq_f32(v127, v126), (float32x4_t)0, v128), (float32x4_t)0, v129);
  v130 = vmlaq_f32(v126, (float32x4_t)0, v127);
  v201 = vmlaq_f32(vaddq_f32(v128, v130), (float32x4_t)0, v129);
  v190 = vaddq_f32(v129, vmlaq_f32(v130, (float32x4_t)0, v128));
  v131 = swift_allocObject();
  *(_QWORD *)(v110 + 40) = sub_226439A5C(1.0, 0.3, -1.0, 0.0, 0.999, v217, v213, v201, v131, v132, v133, v134, v135, v136, v137, v138, v190);
  *(__n64 *)v139.f32 = sub_22652F268(180.0, (float32x4_t)xmmword_226560080);
  v140 = vmulq_f32(v139, (float32x4_t)0);
  v218 = vmlaq_f32(vmlaq_f32(vmlaq_f32(v139, (float32x4_t)0, v141), (float32x4_t)0, v142), (float32x4_t)0, v143);
  v214 = vmlaq_f32(vmlaq_f32(vaddq_f32(v141, v140), (float32x4_t)0, v142), (float32x4_t)0, v143);
  v144 = vmlaq_f32(v140, (float32x4_t)0, v141);
  v202 = vmlaq_f32(vaddq_f32(v142, v144), (float32x4_t)0, v143);
  v191 = vaddq_f32(v143, vmlaq_f32(v144, (float32x4_t)0, v142));
  v145 = swift_allocObject();
  *(_QWORD *)(v110 + 48) = sub_226439A5C(1.0, 0.3, -1.0, 0.0, 0.999, v218, v214, v202, v145, v146, v147, v148, v149, v150, v151, v152, v191);
  *(__n64 *)v153.f32 = sub_22652F268(270.0, (float32x4_t)xmmword_226560080);
  v154 = vmulq_f32(v153, (float32x4_t)0);
  v220 = vmlaq_f32(vmlaq_f32(vmlaq_f32(v153, (float32x4_t)0, v155), (float32x4_t)0, v156), (float32x4_t)0, v157);
  v219 = vmlaq_f32(vmlaq_f32(vaddq_f32(v155, v154), (float32x4_t)0, v156), (float32x4_t)0, v157);
  v158 = vmlaq_f32(v154, (float32x4_t)0, v155);
  v215 = vmlaq_f32(vaddq_f32(v156, v158), (float32x4_t)0, v157);
  v203 = vaddq_f32(v157, vmlaq_f32(v158, (float32x4_t)0, v156));
  v159 = swift_allocObject();
  *(_QWORD *)(v110 + 56) = sub_226439A5C(1.0, 0.3, -1.0, 0.0, 0.999, v220, v219, v215, v159, v160, v161, v162, v163, v164, v165, v166, v203);
  sub_22655CEE4();
  swift_allocObject();
  v167 = sub_22646C5B4(v110);
  swift_bridgeObjectRelease();
  v168 = swift_initStackObject();
  *(_OWORD *)(v168 + 16) = xmmword_22655FFB0;
  *(_QWORD *)(v168 + 32) = v51;
  *(_QWORD *)(v168 + 40) = v109;
  *(_QWORD *)(v168 + 48) = v167;
  v221 = v168;
  sub_22655CEE4();
  type metadata accessor for BlendableSplineGroup();
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  *(_QWORD *)(v0 + 72) = sub_22646BA7C(v221);
  result = swift_release();
  v170 = *(_QWORD *)(v0 + 72);
  if (v170)
  {
    result = swift_beginAccess();
    v171 = *(_QWORD *)(v170 + 16);
    if (*(_QWORD *)(v171 + 16))
    {
      v172 = *(_QWORD *)(v171 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_beginAccess();
      *(_QWORD *)(v1 + 80) = v172;
      return swift_bridgeObjectRelease();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_22652D6C4(void *a1)
{
  uint64_t v1;
  unint64_t v2;
  char **v3;
  _QWORD *v4;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  int32x4_t v26;
  __int128 v27;
  float32x4_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  uint64_t v32;
  __int128 v33;
  float32x4_t v34;
  float32x4_t v35;
  float32x4_t v36;
  float32x4_t v37;
  uint64_t v38;
  float32x4_t v39;
  float32x4_t v40;
  float32x4_t v41;
  float32x4_t v42;
  float32x4_t v43;
  uint64_t v44;
  float32x4_t v45;
  float32x4_t v46;
  float32x4_t v47;
  float32x4_t v48;
  float32x4_t v49;
  uint64_t v50;
  float32x4_t v51;
  float32x4_t v52;
  float32x4_t v53;
  float32x4_t v54;
  float32x4_t v55;
  uint64_t v56;
  float32x4_t v57;
  float32x4_t v58;
  float32x4_t v59;
  float32x4_t v60;
  float32x4_t v61;
  uint64_t v62;
  uint64_t v63;
  char **v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  float32x4_t v68;
  float32x4_t v69;
  float32x4_t v70;
  float32x4_t v71;
  float32x4_t v72;
  unint64_t v73;
  unint64_t v74;
  _OWORD *v75;
  unint64_t v76;
  uint64_t v77;
  id v78;
  void *v79;
  void *v80;
  id v81;
  float32x4_t v82;
  float32x4_t v83;
  float32x4_t v84;
  float32x4_t v85;
  float32x4_t v86;
  float32x4_t v87;
  float32x4_t v88;
  float32x4_t v89;
  float32x4_t v90;
  float32x4_t v91;
  float32x4_t v92;
  int32x4_t v93;
  float32x4_t v94;
  float32x4_t v95;
  float32x4_t v96;
  float32x4_t v97;
  float32x4_t v98;
  float32x4_t v99;
  float32x4_t v100;
  float32x4_t v101;
  float32x4_t v102;
  float32x4_t v103;
  float32x4_t v104;
  float32x4_t v105;
  float32x4_t v106;
  float32x4_t v107;
  float32x4_t v108;
  float32x4_t v109;
  float32x4_t v110;
  float32x4_t v111;
  float32x4_t v112;
  float32x4_t v113;
  float32x4_t v114;
  float32x4_t v115;
  float32x4_t v116;
  float32x4_t v117;
  float32x4_t v118;
  float32x4_t v119;
  float32x4_t v120;
  float32x4_t v121;
  float32x4_t v122;
  float32x4_t v123;
  float32x4_t v124;
  float32x4_t v125;

  v4 = (_QWORD *)v1;
  *(_OWORD *)(v1 + 16) = 0u;
  v6 = (void **)(v1 + 16);
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  v7 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1 + 64) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1 + 72) = 0;
  *(_QWORD *)(v1 + 80) = v7;
  *(_OWORD *)(v1 + 96) = xmmword_22655FA70;
  *(_QWORD *)(v1 + 112) = 0;
  *(_QWORD *)(v1 + 120) = 0;
  sub_22652CE44();
  v8 = *(_QWORD *)(v1 + 72);
  if (!v8)
    goto LABEL_42;
  v9 = *(_QWORD *)(*(_QWORD *)(v8 + 32) + 16);
  *(_QWORD *)(v1 + 56) = v9;
  if (v9 >> 55)
  {
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  *(_QWORD *)(v1 + 40) = objc_msgSend(a1, sel_newBufferWithLength_options_, v9 << 8, 32);
  swift_unknownObjectRelease();
  v10 = *(void **)(v1 + 40);
  if (!v10)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  swift_unknownObjectRetain();
  v2 = sub_22655CD64();
  v3 = &selRef_session_didUpdateTextCoaching_;
  objc_msgSend(v10, sel_setLabel_, v2);
  swift_unknownObjectRelease();

  v11 = v4[9];
  if (!v11)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  swift_beginAccess();
  v12 = *(_QWORD *)(v11 + 16);
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_28;
  v13 = *(_QWORD *)(v12 + 32);
  v14 = *(_QWORD *)(v13 + 16);
  if (v14 >> 58)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  *v6 = objc_msgSend(a1, sel_newBufferWithBytes_length_options_, v13 + 32, 32 * v14, 0);
  swift_unknownObjectRelease();
  v15 = *v6;
  if (!*v6)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  swift_unknownObjectRetain();
  v2 = sub_22655CD64();
  objc_msgSend(v15, sel_setLabel_, v2);
  swift_unknownObjectRelease();

  v16 = v4[9];
  if (!v16)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v17 = *(_QWORD *)(v16 + 24);
  v18 = *(_QWORD *)(v17 + 16);
  if (v18 + 0x4000000000000000 < 0)
    goto LABEL_30;
  v4[3] = objc_msgSend(a1, sel_newBufferWithBytes_length_options_, v17 + 32, 2 * v18, 0);
  swift_unknownObjectRelease();
  v19 = (void *)v4[3];
  if (!v19)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  swift_unknownObjectRetain();
  v2 = sub_22655CD64();
  objc_msgSend(v19, sel_setLabel_, v2);
  swift_unknownObjectRelease();

  v20 = v4[9];
  if (!v20)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v21 = *(_QWORD *)(v20 + 32);
  v22 = *(_QWORD *)(v21 + 16);
  if (v22 >> 60)
    goto LABEL_31;
  v4[4] = objc_msgSend(a1, sel_newBufferWithBytes_length_options_, v21 + 32, 8 * v22, 0);
  swift_unknownObjectRelease();
  v23 = (void *)v4[4];
  if (!v23)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  swift_unknownObjectRetain();
  v24 = (void *)sub_22655CD64();
  objc_msgSend(v23, sel_setLabel_, v24);
  swift_unknownObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(&qword_255849180);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_2265688D0;
  v120 = *(float32x4_t *)MEMORY[0x24BDAEE00];
  v122 = *(float32x4_t *)(MEMORY[0x24BDAEE00] + 16);
  v124 = *(float32x4_t *)(MEMORY[0x24BDAEE00] + 32);
  v93 = *(int32x4_t *)(MEMORY[0x24BDAEE00] + 48);
  v26 = v93;
  v26.i32[0] = 0;
  v110 = (float32x4_t)v26;
  v27 = xmmword_2265600B0;
  LODWORD(v27) = 0;
  HIDWORD(v27) = v93.i32[3];
  v82 = (float32x4_t)v27;
  *(__n64 *)v28.f32 = sub_22652F268(90.0, (float32x4_t)xmmword_2265600A0);
  v95 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v29.f32[0]), v122, *(float32x2_t *)v29.f32, 1), v124, v29, 2), v82, v29, 3);
  v103 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v28.f32[0]), v122, *(float32x2_t *)v28.f32, 1), v124, v28, 2), v82, v28, 3);
  v88 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v30.f32[0]), v122, *(float32x2_t *)v30.f32, 1), v124, v30, 2), v82, v30, 3);
  v83 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v31.f32[0]), v122, *(float32x2_t *)v31.f32, 1), v124, v31, 2), v82, v31, 3);
  type metadata accessor for InstanceTransform();
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 144) = 0;
  *(_QWORD *)(v32 + 152) = 0;
  *(_OWORD *)(v32 + 160) = xmmword_22655FA70;
  *(_OWORD *)(v32 + 176) = 0u;
  *(_OWORD *)(v32 + 192) = 0u;
  *(_OWORD *)(v32 + 208) = 0u;
  *(float32x4_t *)(v32 + 16) = v103;
  *(float32x4_t *)(v32 + 32) = v95;
  *(float32x4_t *)(v32 + 48) = v88;
  *(float32x4_t *)(v32 + 64) = v83;
  *(float32x4_t *)(v32 + 80) = v103;
  *(float32x4_t *)(v32 + 96) = v95;
  *(float32x4_t *)(v32 + 112) = v88;
  *(float32x4_t *)(v32 + 128) = v83;
  *(_QWORD *)(v25 + 32) = v32;
  v33 = xmmword_2265600C0;
  LODWORD(v33) = 0;
  HIDWORD(v33) = v93.i32[3];
  v84 = (float32x4_t)v33;
  *(__n64 *)v34.f32 = sub_22652F268(90.0, (float32x4_t)xmmword_2265600A0);
  v96 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v35.f32[0]), v122, *(float32x2_t *)v35.f32, 1), v124, v35, 2), v84, v35, 3);
  v104 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v34.f32[0]), v122, *(float32x2_t *)v34.f32, 1), v124, v34, 2), v84, v34, 3);
  v89 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v36.f32[0]), v122, *(float32x2_t *)v36.f32, 1), v124, v36, 2), v84, v36, 3);
  v85 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v37.f32[0]), v122, *(float32x2_t *)v37.f32, 1), v124, v37, 2), v84, v37, 3);
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 144) = 0;
  *(_QWORD *)(v38 + 152) = 0;
  *(_OWORD *)(v38 + 160) = xmmword_22655FA70;
  *(_OWORD *)(v38 + 176) = 0u;
  *(_OWORD *)(v38 + 192) = 0u;
  *(_OWORD *)(v38 + 208) = 0u;
  *(float32x4_t *)(v38 + 16) = v104;
  *(float32x4_t *)(v38 + 32) = v96;
  *(float32x4_t *)(v38 + 48) = v89;
  *(float32x4_t *)(v38 + 64) = v85;
  *(float32x4_t *)(v38 + 80) = v104;
  *(float32x4_t *)(v38 + 96) = v96;
  *(float32x4_t *)(v38 + 112) = v89;
  *(float32x4_t *)(v38 + 128) = v85;
  *(_QWORD *)(v25 + 40) = v38;
  v39 = v110;
  v39.i32[1] = 0;
  v111 = v39;
  v39.i32[2] = 1.0;
  v86 = v39;
  *(__n64 *)v40.f32 = sub_22652F268(0.0, (float32x4_t)xmmword_2265600A0);
  v97 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v41.f32[0]), v122, *(float32x2_t *)v41.f32, 1), v124, v41, 2), v86, v41, 3);
  v105 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v40.f32[0]), v122, *(float32x2_t *)v40.f32, 1), v124, v40, 2), v86, v40, 3);
  v90 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v42.f32[0]), v122, *(float32x2_t *)v42.f32, 1), v124, v42, 2), v86, v42, 3);
  v87 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v43.f32[0]), v122, *(float32x2_t *)v43.f32, 1), v124, v43, 2), v86, v43, 3);
  v44 = swift_allocObject();
  *(_QWORD *)(v44 + 144) = 0;
  *(_QWORD *)(v44 + 152) = 0;
  *(_OWORD *)(v44 + 160) = xmmword_22655FA70;
  *(_OWORD *)(v44 + 176) = 0u;
  *(_OWORD *)(v44 + 192) = 0u;
  *(_OWORD *)(v44 + 208) = 0u;
  *(float32x4_t *)(v44 + 16) = v105;
  *(float32x4_t *)(v44 + 32) = v97;
  *(float32x4_t *)(v44 + 48) = v90;
  *(float32x4_t *)(v44 + 64) = v87;
  *(float32x4_t *)(v44 + 80) = v105;
  *(float32x4_t *)(v44 + 96) = v97;
  *(float32x4_t *)(v44 + 112) = v90;
  *(float32x4_t *)(v44 + 128) = v87;
  *(_QWORD *)(v25 + 48) = v44;
  v45 = v111;
  v45.i32[2] = -1.0;
  v112 = v45;
  *(__n64 *)v46.f32 = sub_22652F268(0.0, (float32x4_t)xmmword_2265600A0);
  v98 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v47.f32[0]), v122, *(float32x2_t *)v47.f32, 1), v124, v47, 2), v112, v47, 3);
  v106 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v46.f32[0]), v122, *(float32x2_t *)v46.f32, 1), v124, v46, 2), v112, v46, 3);
  v91 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v48.f32[0]), v122, *(float32x2_t *)v48.f32, 1), v124, v48, 2), v112, v48, 3);
  v113 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v49.f32[0]), v122, *(float32x2_t *)v49.f32, 1), v124, v49, 2), v112, v49, 3);
  v50 = swift_allocObject();
  *(_QWORD *)(v50 + 144) = 0;
  *(_QWORD *)(v50 + 152) = 0;
  *(_OWORD *)(v50 + 160) = xmmword_22655FA70;
  *(_OWORD *)(v50 + 176) = 0u;
  *(_OWORD *)(v50 + 192) = 0u;
  *(_OWORD *)(v50 + 208) = 0u;
  *(float32x4_t *)(v50 + 16) = v106;
  *(float32x4_t *)(v50 + 32) = v98;
  *(float32x4_t *)(v50 + 48) = v91;
  *(float32x4_t *)(v50 + 64) = v113;
  *(float32x4_t *)(v50 + 80) = v106;
  *(float32x4_t *)(v50 + 96) = v98;
  *(float32x4_t *)(v50 + 112) = v91;
  *(float32x4_t *)(v50 + 128) = v113;
  *(_QWORD *)(v25 + 56) = v50;
  v51.i64[0] = 1065353216;
  v51.i32[2] = 0;
  v51.i32[3] = v93.i32[3];
  v115 = v51;
  *(__n64 *)v52.f32 = sub_22652F268(90.0, (float32x4_t)xmmword_2265600C0);
  v99 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v53.f32[0]), v122, *(float32x2_t *)v53.f32, 1), v124, v53, 2), v115, v53, 3);
  v107 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v52.f32[0]), v122, *(float32x2_t *)v52.f32, 1), v124, v52, 2), v115, v52, 3);
  v92 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v54.f32[0]), v122, *(float32x2_t *)v54.f32, 1), v124, v54, 2), v115, v54, 3);
  v116 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v55.f32[0]), v122, *(float32x2_t *)v55.f32, 1), v124, v55, 2), v115, v55, 3);
  v56 = swift_allocObject();
  *(_QWORD *)(v56 + 144) = 0;
  *(_QWORD *)(v56 + 152) = 0;
  *(_OWORD *)(v56 + 160) = xmmword_22655FA70;
  *(_OWORD *)(v56 + 176) = 0u;
  *(_OWORD *)(v56 + 192) = 0u;
  *(_OWORD *)(v56 + 208) = 0u;
  *(float32x4_t *)(v56 + 16) = v107;
  *(float32x4_t *)(v56 + 32) = v99;
  *(float32x4_t *)(v56 + 48) = v92;
  *(float32x4_t *)(v56 + 64) = v116;
  *(float32x4_t *)(v56 + 80) = v107;
  *(float32x4_t *)(v56 + 96) = v99;
  *(float32x4_t *)(v56 + 112) = v92;
  *(float32x4_t *)(v56 + 128) = v116;
  *(_QWORD *)(v25 + 64) = v56;
  v57.i64[0] = 3212836864;
  v57.i32[2] = 0;
  v57.i32[3] = v93.i32[3];
  v100 = v57;
  *(__n64 *)v58.f32 = sub_22652F268(90.0, (float32x4_t)xmmword_2265600C0);
  v114 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v59.f32[0]), v122, *(float32x2_t *)v59.f32, 1), v124, v59, 2), v100, v59, 3);
  v117 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v58.f32[0]), v122, *(float32x2_t *)v58.f32, 1), v124, v58, 2), v100, v58, 3);
  v108 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v60.f32[0]), v122, *(float32x2_t *)v60.f32, 1), v124, v60, 2), v100, v60, 3);
  v101 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v120, v61.f32[0]), v122, *(float32x2_t *)v61.f32, 1), v124, v61, 2), v100, v61, 3);
  v62 = swift_allocObject();
  *(_QWORD *)(v62 + 144) = 0;
  *(_QWORD *)(v62 + 152) = 0;
  *(_OWORD *)(v62 + 160) = xmmword_22655FA70;
  *(_OWORD *)(v62 + 176) = 0u;
  *(_OWORD *)(v62 + 192) = 0u;
  *(_OWORD *)(v62 + 208) = 0u;
  *(float32x4_t *)(v62 + 16) = v117;
  *(float32x4_t *)(v62 + 32) = v114;
  *(float32x4_t *)(v62 + 48) = v108;
  *(float32x4_t *)(v62 + 64) = v101;
  *(float32x4_t *)(v62 + 80) = v117;
  *(float32x4_t *)(v62 + 96) = v114;
  *(float32x4_t *)(v62 + 112) = v108;
  *(float32x4_t *)(v62 + 128) = v101;
  *(_QWORD *)(v25 + 72) = v62;
  sub_22655CEE4();
  v4[8] = v25;
  swift_bridgeObjectRelease();
  v2 = v4[8];
  if (v2 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    v63 = sub_22655D400();
    v81 = a1;
    if (v63)
      goto LABEL_16;
LABEL_33:
    v64 = v3;
    v66 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_34;
  }
  v63 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v81 = a1;
  if (!v63)
    goto LABEL_33;
LABEL_16:
  if (v63 < 1)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v64 = v3;
  v65 = 0;
  v118 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32((float32x4_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vmulq_f32(v120, (float32x4_t)0), 0), (float32x4_t)0, *(float32x2_t *)v120.f32, 1), (float32x4_t)0, v120, 2), (float32x4_t)xmmword_22655FA60, v120, 3);
  v109 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32((float32x4_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vmulq_f32(v122, (float32x4_t)0), 0), (float32x4_t)0, *(float32x2_t *)v122.f32, 1), (float32x4_t)0, v122, 2), (float32x4_t)xmmword_22655FA60, v122, 3);
  v102 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32((float32x4_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vmulq_f32(v124, (float32x4_t)0), 0), (float32x4_t)0, *(float32x2_t *)v124.f32, 1), (float32x4_t)0, v124, 2), (float32x4_t)xmmword_22655FA60, v124, 3);
  v94 = (float32x4_t)vdupq_laneq_s32(v93, 3);
  v66 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      v67 = MEMORY[0x2276999E4](v65, v2);
    }
    else
    {
      v67 = *(_QWORD *)(v2 + 8 * v65 + 32);
      swift_retain();
    }
    *(_OWORD *)(v67 + 144) = 0u;
    v68 = vmlaq_f32(vmlaq_laneq_f32(vmlaq_lane_f32((float32x4_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vmulq_f32(*(float32x4_t *)(v67 + 192), (float32x4_t)0), 0), (float32x4_t)0, *(float32x2_t *)(v67 + 192), 1), (float32x4_t)0, *(float32x4_t *)(v67 + 192), 2), (float32x4_t)xmmword_22655FA60, v94);
    v69 = *(float32x4_t *)(v67 + 64);
    v70 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v118, COERCE_FLOAT(*(_OWORD *)(v67 + 32))), v109, *(float32x2_t *)(v67 + 32), 1), v102, *(float32x4_t *)(v67 + 32), 2), v68, *(float32x4_t *)(v67 + 32), 3);
    v71 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v118, COERCE_FLOAT(*(_OWORD *)(v67 + 48))), v109, *(float32x2_t *)(v67 + 48), 1), v102, *(float32x4_t *)(v67 + 48), 2), v68, *(float32x4_t *)(v67 + 48), 3);
    v125 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v118, COERCE_FLOAT(*(_OWORD *)(v67 + 16))), v109, *(float32x2_t *)(v67 + 16), 1), v102, *(float32x4_t *)(v67 + 16), 2), v68, *(float32x4_t *)(v67 + 16), 3);
    *(float32x4_t *)(v67 + 80) = v125;
    *(float32x4_t *)(v67 + 96) = v70;
    v121 = v71;
    v123 = v70;
    v72 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v118, v69.f32[0]), v109, *(float32x2_t *)v69.f32, 1), v102, v69, 2), v68, v69, 3);
    *(float32x4_t *)(v67 + 112) = v71;
    *(float32x4_t *)(v67 + 128) = v72;
    v119 = v72;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v66 = sub_226487DAC(0, v66[2] + 1, 1, v66);
    v74 = v66[2];
    v73 = v66[3];
    if (v74 >= v73 >> 1)
      v66 = sub_226487DAC((_QWORD *)(v73 > 1), v74 + 1, 1, v66);
    ++v65;
    v66[2] = v74 + 1;
    v75 = &v66[8 * v74];
    v75[2] = v125;
    v75[3] = v123;
    v75[4] = v121;
    v75[5] = v119;
    swift_release();
  }
  while (v63 != v65);
LABEL_34:
  swift_bridgeObjectRelease();
  v76 = v4[8];
  if (v76 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v77 = sub_22655D400();
    swift_bridgeObjectRelease();
  }
  else
  {
    v77 = *(_QWORD *)((v76 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  if ((unint64_t)(v77 - 0x200000000000000) >> 58 != 63)
  {
    __break(1u);
    goto LABEL_41;
  }
  v78 = objc_msgSend(v81, sel_newBufferWithBytes_length_options_, v66 + 4, v77 << 6, 0);
  swift_bridgeObjectRelease();
  v4[6] = v78;
  swift_unknownObjectRelease();
  v79 = (void *)v4[6];
  if (v79)
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    v80 = (void *)sub_22655CD64();
    objc_msgSend(v79, (SEL)v64 + 1096, v80);
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    return;
  }
LABEL_50:
  __break(1u);
}

void sub_22652E210()
{
  _QWORD *v0;
  void *v1;
  char *v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char isUniquelyReferenced_nonNull_native;
  _DWORD *v10;
  int v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  __int128 v19;
  __int128 v20;

  v1 = (void *)v0[2];
  if (!v1)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v2 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
  v3 = v1;
  v4 = (unint64_t)(v0 + 10);
  swift_beginAccess();
  v0[10] = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  v5 = v0[9];
  if (v5)
  {
    swift_beginAccess();
    v6 = *(_QWORD *)(v5 + 16);
    if (*(_QWORD *)(v6 + 16))
    {
      v7 = *(_QWORD *)(*(_QWORD *)(v6 + 32) + 16);
      if (v7)
      {
        swift_beginAccess();
        v8 = *(_QWORD **)v4;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)v4 = v8;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v8 = sub_226487C74(0, v8[2] + 1, 1, v8);
        *(_QWORD *)v4 = v8;
        v10 = v2 + 16;
        do
        {
          v20 = *((_OWORD *)v10 - 1);
          v11 = *v10;
          v12 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)v4 = v8;
          if ((v12 & 1) == 0)
          {
            v8 = sub_226487C74(0, v8[2] + 1, 1, v8);
            *(_QWORD *)v4 = v8;
          }
          v14 = v8[2];
          v13 = v8[3];
          if (v14 >= v13 >> 1)
          {
            v8 = sub_226487C74((_QWORD *)(v13 > 1), v14 + 1, 1, v8);
            *(_QWORD *)v4 = v8;
          }
          v8[2] = v14 + 1;
          v15 = &v8[4 * v14];
          *((_OWORD *)v15 + 2) = v20;
          *((_DWORD *)v15 + 12) = v11;
          v8 = *(_QWORD **)v4;
          v10 += 8;
          --v7;
        }
        while (v7);
        swift_endAccess();
      }
      v4 = v0[8];
      if (!(v4 >> 62))
      {
        v16 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v16)
        {
LABEL_16:
          if (v16 >= 1)
          {
            v17 = 0;
            do
            {
              if ((v4 & 0xC000000000000001) != 0)
                v18 = (_OWORD *)MEMORY[0x2276999E4](v17, v4);
              else
                v18 = (_OWORD *)swift_retain();
              ++v17;
              v19 = v18[12];
              v18[10] = v18[9];
              v18[11] = v19;
              swift_release();
            }
            while (v16 != v17);
            goto LABEL_24;
          }
          __break(1u);
          goto LABEL_26;
        }
LABEL_24:
        swift_bridgeObjectRelease();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    swift_bridgeObjectRetain();
    v16 = sub_22655D400();
    if (v16)
      goto LABEL_16;
    goto LABEL_24;
  }
LABEL_27:
  __break(1u);
}

float32x4_t *sub_22652E478(float32x4_t *result, uint64_t a2, double a3)
{
  uint64_t v3;
  void *v4;
  float32x4_t *v6;
  char *v7;
  __int32 v8;
  unint64_t v9;
  float32x4_t v10;
  float32x4_t *v11;
  float *v12;
  float *v13;
  float32x4_t v14;
  float v15;
  float v16;
  float v17;

  v4 = *(void **)(v3 + 16);
  if (!v4)
    goto LABEL_8;
  v6 = result;
  v7 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
  result = v4;
  v9 = v6[1].u64[0];
  if (!v9)
    return result;
  if (v9 > *(_QWORD *)(a2 + 16))
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  v10 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&a3, 0);
  v11 = v6 + 3;
  v12 = (float *)(a2 + 48);
  v13 = (float *)(v7 + 16);
  do
  {
    v14 = vmlaq_f32(v11[-1], vsubq_f32(*(float32x4_t *)(v12 - 4), v11[-1]), v10);
    v14.i32[3] = v8;
    *((float32x4_t *)v13 - 1) = v14;
    v15 = v11->f32[0];
    v11 += 2;
    v16 = v15;
    v17 = *v12;
    v12 += 8;
    *v13 = v16 + (float)(*(float *)&a3 * (float)(v17 - v16));
    v13 += 8;
    --v9;
  }
  while (v9);
  return result;
}

char *sub_22652E544(char *result)
{
  uint64_t v1;
  void *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  _DWORD *v6;
  _DWORD *v7;
  int v8;

  v2 = *(void **)(v1 + 16);
  if (v2)
  {
    v3 = result;
    v4 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
    result = v2;
    v5 = *((_QWORD *)v3 + 2);
    if (v5)
    {
      v6 = v3 + 48;
      v7 = v4 + 16;
      do
      {
        *((_OWORD *)v7 - 1) = *((_OWORD *)v6 - 1);
        v8 = *v6;
        v6 += 8;
        *v7 = v8;
        v7 += 8;
        --v5;
      }
      while (v5);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_22652E5BC(__n128 a1)
{
  uint64_t v1;
  void *v2;
  unint64_t v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  float32x4_t v8;
  float32x4_t v9;
  float32x4_t v10;
  _OWORD *i;
  uint64_t v12;
  uint64_t v13;
  float32x4_t v14;
  float32x4_t v15;
  float32x4_t v16;
  float32x4_t v17;
  _OWORD *v18;
  float32x4_t v19;
  float32x4_t v20;
  float32x4_t v21;
  float32x4_t v22;
  float32x4_t v23;
  float32x4_t v24;
  float32x4_t v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  v2 = *(void **)(v1 + 48);
  if (v2)
  {
    v3 = (unint64_t)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
    v4 = v2;
    v5 = *(_QWORD *)(v1 + 64);
    if (v5 >> 62)
      goto LABEL_23;
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      if (!v6)
        return;
      v7 = 0;
      v8 = (float32x4_t)vdupq_lane_s32(0, 0);
      v9 = v8;
      v9.i32[0] = a1.n128_u32[0];
      v10 = v8;
      v8.i32[2] = a1.n128_i32[2];
      v10.i32[1] = a1.n128_i32[1];
      v21 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v9, COERCE_FLOAT(*(_OWORD *)(MEMORY[0x24BDAEE00] + 16))), v10, *(float32x2_t *)(MEMORY[0x24BDAEE00] + 16), 1), v8, *(float32x4_t *)(MEMORY[0x24BDAEE00] + 16), 2), (float32x4_t)xmmword_22655FA60, *(float32x4_t *)(MEMORY[0x24BDAEE00] + 16), 3);
      v22 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v9, COERCE_FLOAT(*MEMORY[0x24BDAEE00])), v10, *MEMORY[0x24BDAEE00], 1), v8, *MEMORY[0x24BDAEE00], 2), (float32x4_t)xmmword_22655FA60, *MEMORY[0x24BDAEE00], 3);
      v23 = v10;
      v24 = v9;
      v25 = v8;
      v20 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v9, COERCE_FLOAT(*(_OWORD *)(MEMORY[0x24BDAEE00] + 32))), v10, *(float32x2_t *)(MEMORY[0x24BDAEE00] + 32), 1), v8, *(float32x4_t *)(MEMORY[0x24BDAEE00] + 32), 2), (float32x4_t)xmmword_22655FA60, *(float32x4_t *)(MEMORY[0x24BDAEE00] + 32), 3);
      v19 = (float32x4_t)vdupq_laneq_s32(*(int32x4_t *)(MEMORY[0x24BDAEE00] + 48), 3);
      for (i = (_OWORD *)(v3 + 32); ; i += 4)
      {
        v12 = *(_QWORD *)(v1 + 64);
        if ((v12 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          v13 = MEMORY[0x2276999E4](v7, v12);
          swift_bridgeObjectRelease();
          goto LABEL_10;
        }
        if ((v7 & 0x8000000000000000) != 0)
          break;
        if (v7 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_20;
        v13 = *(_QWORD *)(v12 + 8 * v7 + 32);
        swift_retain();
LABEL_10:
        *(__n128 *)(v13 + 144) = a1;
        v14 = vmlaq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v24, COERCE_FLOAT(*(_OWORD *)(v13 + 192))), v23, *(float32x2_t *)(v13 + 192), 1), v25, *(float32x4_t *)(v13 + 192), 2), (float32x4_t)xmmword_22655FA60, v19);
        v15 = *(float32x4_t *)(v13 + 64);
        v16 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v22, COERCE_FLOAT(*(_OWORD *)(v13 + 32))), v21, *(float32x2_t *)(v13 + 32), 1), v20, *(float32x4_t *)(v13 + 32), 2), v14, *(float32x4_t *)(v13 + 32), 3);
        v17 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v22, COERCE_FLOAT(*(_OWORD *)(v13 + 48))), v21, *(float32x2_t *)(v13 + 48), 1), v20, *(float32x4_t *)(v13 + 48), 2), v14, *(float32x4_t *)(v13 + 48), 3);
        *(float32x4_t *)(v13 + 80) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v22, COERCE_FLOAT(*(_OWORD *)(v13 + 16))), v21, *(float32x2_t *)(v13 + 16), 1), v20, *(float32x4_t *)(v13 + 16), 2), v14, *(float32x4_t *)(v13 + 16), 3);
        *(float32x4_t *)(v13 + 96) = v16;
        *(float32x4_t *)(v13 + 112) = v17;
        *(float32x4_t *)(v13 + 128) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v22, v15.f32[0]), v21, *(float32x2_t *)v15.f32, 1), v20, v15, 2), v14, v15, 3);
        swift_release();
        v3 = *(_QWORD *)(v1 + 64);
        if ((v3 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          v18 = (_OWORD *)MEMORY[0x2276999E4](v7, v3);
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((v7 & 0x8000000000000000) != 0)
            goto LABEL_21;
          if (v7 >= *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_22;
          v18 = *(_OWORD **)(v3 + 8 * v7 + 32);
          swift_retain();
        }
        ++v7;
        v29 = v18[6];
        v30 = v18[5];
        v27 = v18[8];
        v28 = v18[7];
        swift_release();
        *(i - 2) = v30;
        *(i - 1) = v29;
        *i = v28;
        i[1] = v27;
        if (v6 == v7)
          return;
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      swift_bridgeObjectRetain();
      v6 = sub_22655D400();
      swift_bridgeObjectRelease();
      if (v6 < 0)
      {
        __break(1u);
        break;
      }
    }
  }
  __break(1u);
}

uint64_t sub_22652E878(uint64_t result, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  unint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  __n128 *v9;
  _OWORD *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v16;

  v3 = v2;
  v4 = *(void **)(v2 + 48);
  if (!v4)
    goto LABEL_17;
  v5 = result;
  v6 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
  v7 = v4;
  v8 = *(_QWORD *)(v3 + 64);
  if ((v8 & 0xC000000000000001) == 0)
  {
    if ((v5 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10) > v5)
    {
      v9 = *(__n128 **)(v8 + 8 * v5 + 32);
      swift_retain();
      goto LABEL_6;
    }
    __break(1u);
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  v9 = (__n128 *)MEMORY[0x2276999E4](v5, v8);
  swift_bridgeObjectRelease();
LABEL_6:
  v9[12] = a2;
  sub_22652CD44();
  result = swift_release();
  v8 = *(_QWORD *)(v3 + 64);
  if ((v8 & 0xC000000000000001) != 0)
  {
LABEL_14:
    swift_bridgeObjectRetain();
    v10 = (_OWORD *)MEMORY[0x2276999E4](v5, v8);
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10) > v5)
  {
    v10 = *(_OWORD **)(v8 + 8 * v5 + 32);
    swift_retain();
LABEL_10:
    v14 = v10[6];
    v16 = v10[5];
    v12 = v10[8];
    v13 = v10[7];
    result = swift_release();
    v11 = &v6[64 * v5];
    *(_OWORD *)v11 = v16;
    *((_OWORD *)v11 + 1) = v14;
    *((_OWORD *)v11 + 2) = v13;
    *((_OWORD *)v11 + 3) = v12;
    return result;
  }
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_22652E9EC()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_22652EA40()
{
  sub_22652E9EC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MetalSplineData()
{
  return objc_opt_self();
}

unint64_t sub_22652EA80@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_22652EE44(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_22652EAA8()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  unint64_t v10;
  uint32x4_t v11;
  uint32x4_t v12;
  uint64_t result;

  v1 = v0 + 16;
  if (MEMORY[0x22769A944](v0 + 16))
  {
    sub_22654CB88();
    swift_unknownObjectRelease();
  }
  if (*(unsigned __int8 *)(v0 + 32) - 1 >= 2)
  {
    if (*(_BYTE *)(v0 + 32))
    {
      v2 = xmmword_226568900;
      v3 = xmmword_226568910;
    }
    else
    {
      v2 = xmmword_2265688E0;
      v3 = xmmword_2265688F0;
    }
  }
  else
  {
    v2 = xmmword_226568920;
    v3 = xmmword_226568930;
  }
  *(_OWORD *)(v0 + 48) = v3;
  *(_OWORD *)(v0 + 64) = v2;
  if (MEMORY[0x22769A944](v1))
  {
    sub_22654CCD4();
    swift_unknownObjectRelease();
  }
  if (*(unsigned __int8 *)(v0 + 32) - 1 >= 2)
  {
    if (*(_BYTE *)(v0 + 32))
    {
      v4 = xmmword_226568950;
      v10 = 0x3FD3333333333333;
    }
    else
    {
      v4 = xmmword_226568940;
      v10 = 0x3FC3333333333333;
    }
    _Q1 = vdupq_n_s64(v10);
  }
  else
  {
    v4 = xmmword_22655EF70;
    __asm { FMOV            V1.2D, #1.0 }
  }
  *(int64x2_t *)(v0 + 80) = _Q1;
  *(_OWORD *)(v0 + 96) = v4;
  if (MEMORY[0x22769A944](v1))
  {
    sub_22654CDA4();
    swift_unknownObjectRelease();
  }
  v11.i32[0] = 2;
  v12.i32[0] = *(unsigned __int8 *)(v0 + 32) - 1;
  *(_QWORD *)(v0 + 128) = 0;
  *(_QWORD *)(v0 + 136) = 0;
  *(int8x16_t *)(v0 + 112) = vandq_s8((int8x16_t)xmmword_22655EF60, (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_u32(v11, v12), 0));
  result = MEMORY[0x22769A944](v1);
  if (result)
  {
    sub_22654CF40();
    return swift_unknownObjectRelease();
  }
  return result;
}

double sub_22652EC1C()
{
  uint64_t v0;

  if (*(unsigned __int8 *)(v0 + 32) - 1 < 2)
    return -0.5;
  if (*(_BYTE *)(v0 + 32))
    return -0.454519478;
  return 0.0499502113;
}

uint64_t sub_22652EC6C()
{
  uint64_t v0;

  sub_22644F0C0(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GlyphState()
{
  return objc_opt_self();
}

float sub_22652ECB0()
{
  float *v0;
  float v1;
  float v2;
  float v3;
  float result;

  v1 = v0[4];
  v2 = v1 - v0[5];
  v3 = fminf(fmaxf(v2 / v0[6], 0.0), 1.0);
  v0[8] = v2;
  v0[9] = v3;
  result = (float)(sinf(v1 * 5.0) * 0.5) + 0.5;
  v0[7] = result;
  return result;
}

uint64_t type metadata accessor for AnimTime()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for AngularVelocity()
{
  return &type metadata for AngularVelocity;
}

uint64_t storeEnumTagSinglePayload for GlyphSnapState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_22652ED7C + 4 * byte_226568965[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_22652EDB0 + 4 * byte_226568960[v4]))();
}

uint64_t sub_22652EDB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22652EDB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22652EDC0);
  return result;
}

uint64_t sub_22652EDCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22652EDD4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_22652EDD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22652EDE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GlyphSnapState()
{
  return &type metadata for GlyphSnapState;
}

unint64_t sub_22652EE00()
{
  unint64_t result;

  result = qword_25584A470;
  if (!qword_25584A470)
  {
    result = MEMORY[0x22769A794](&unk_226568B60, &type metadata for GlyphSnapState);
    atomic_store(result, (unint64_t *)&qword_25584A470);
  }
  return result;
}

unint64_t sub_22652EE44(unint64_t result)
{
  if (result >= 4)
    return 4;
  return result;
}

_QWORD *sub_22652EE54(_QWORD *result, uint64_t a2, double a3)
{
  unint64_t v3;
  _QWORD *v5;
  _QWORD *v6;
  __int32 v7;
  float v8;
  _QWORD *v9;
  uint64_t v10;
  float32x4_t v11;
  unint64_t v12;
  uint64_t v13;
  float32x4_t v14;
  float32x4_t v15;
  float v16;
  float v17;
  unint64_t v18;
  unint64_t v19;
  float32x4_t v20;
  float32x4_t *v21;
  _QWORD *v22;
  float32x4_t v23;
  __int32 v24;
  float32x4_t v25;
  float32x4_t v26;

  v3 = result[2];
  if (!v3)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v3 <= *(_QWORD *)(a2 + 16))
  {
    v5 = result;
    v6 = sub_226487C74(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v8 = *(float *)&a3;
    v9 = v6;
    v10 = 0;
    v11 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&a3, 0);
    v12 = v6[2];
    v13 = 4 * v12;
    do
    {
      v14 = *(float32x4_t *)&v5[v10 + 4];
      v15 = *(float32x4_t *)(a2 + v10 * 8 + 32);
      v16 = *(float *)&v5[v10 + 6];
      v17 = *(float *)(a2 + v10 * 8 + 48);
      v18 = v9[3];
      v19 = v12 + 1;
      if (v12 >= v18 >> 1)
      {
        v25 = *(float32x4_t *)&v5[v10 + 4];
        v26 = v11;
        v23 = *(float32x4_t *)(a2 + v10 * 8 + 32);
        v24 = v7;
        v22 = sub_226487C74((_QWORD *)(v18 > 1), v12 + 1, 1, v9);
        v15 = v23;
        v7 = v24;
        v14 = v25;
        v11 = v26;
        v8 = *(float *)&a3;
        v9 = v22;
      }
      v20 = vmlaq_f32(v14, vsubq_f32(v15, v14), v11);
      v20.i32[3] = v7;
      v9[2] = v19;
      v21 = (float32x4_t *)&v9[v13 + v10];
      v21[2] = v20;
      v21[3].f32[0] = v16 + (float)(v8 * (float)(v17 - v16));
      v10 += 4;
      v12 = v19;
      --v3;
    }
    while (v3);
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t getEnumTagSinglePayload for ScanItemCategory(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEB)
    goto LABEL_17;
  if (a2 + 21 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 21) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 21;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 21;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 21;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x16;
  v8 = v6 - 22;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ScanItemCategory(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 21 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 21) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEA)
    return ((uint64_t (*)(void))((char *)&loc_22652F060 + 4 * byte_226568B95[v4]))();
  *a1 = a2 + 21;
  return ((uint64_t (*)(void))((char *)sub_22652F094 + 4 * byte_226568B90[v4]))();
}

uint64_t sub_22652F094(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22652F09C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22652F0A4);
  return result;
}

uint64_t sub_22652F0B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22652F0B8);
  *(_BYTE *)result = a2 + 21;
  return result;
}

uint64_t sub_22652F0BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22652F0C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScanItemCategory()
{
  return &type metadata for ScanItemCategory;
}

uint64_t storeEnumTagSinglePayload for ScanItemType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_22652F12C + 4 * byte_226568B9F[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_22652F160 + 4 * byte_226568B9A[v4]))();
}

uint64_t sub_22652F160(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22652F168(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22652F170);
  return result;
}

uint64_t sub_22652F17C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22652F184);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_22652F188(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22652F190(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScanItemType()
{
  return &type metadata for ScanItemType;
}

unint64_t sub_22652F1B0()
{
  unint64_t result;

  result = qword_25584A478;
  if (!qword_25584A478)
  {
    result = MEMORY[0x22769A794](&unk_226568C10, &type metadata for ScanItemType);
    atomic_store(result, (unint64_t *)&qword_25584A478);
  }
  return result;
}

uint64_t sub_22652F1F4()
{
  unsigned __int8 *v0;

  return *v0 + 6;
}

unint64_t sub_22652F204()
{
  unint64_t result;

  result = qword_25584A480;
  if (!qword_25584A480)
  {
    result = MEMORY[0x22769A794](&unk_226568C78, &type metadata for ScanItemCategory);
    atomic_store(result, (unint64_t *)&qword_25584A480);
  }
  return result;
}

uint64_t type metadata accessor for TransformationUtility()
{
  return objc_opt_self();
}

__n64 sub_22652F268(float a1, float32x4_t a2)
{
  __float2 v2;
  int32x4_t v3;
  float32x2_t v4;
  float32x2_t v5;
  float32x4_t v6;
  float v7;
  float v8;
  __n64 result;

  v2 = __sincospif_stret(a1 * 0.0055556);
  v3 = (int32x4_t)vmulq_f32(a2, a2);
  v3.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v3, 2), vadd_f32(*(float32x2_t *)v3.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v3.i8, 1))).u32[0];
  v4 = vrsqrte_f32((float32x2_t)v3.u32[0]);
  v5 = vmul_f32(v4, vrsqrts_f32((float32x2_t)v3.u32[0], vmul_f32(v4, v4)));
  v6 = vmulq_n_f32(a2, vmul_f32(v5, vrsqrts_f32((float32x2_t)v3.u32[0], vmul_f32(v5, v5))).f32[0]);
  v7 = (float)(1.0 - v2.__cosval) * v6.f32[0];
  v8 = vmuls_lane_f32(v7, *(float32x2_t *)v6.f32, 1);
  result.n64_f32[0] = v2.__cosval + (float)(v7 * v6.f32[0]);
  result.n64_f32[1] = vmuls_lane_f32(v2.__sinval, v6, 2) + v8;
  return result;
}

float32x2_t sub_22652F398(float32x2_t a1, float32x2_t a2, float32x2_t a3, float32x2_t a4, float a5)
{
  float32x2_t v10;
  float32x2_t v11;
  float32x2_t v12;

  __asm { FMOV            V6.2S, #3.0 }
  v10 = vmul_f32(a1, _D6);
  v11 = vmul_f32(a2, _D6);
  v12 = vmul_f32(a3, _D6);
  __asm
  {
    FMOV            V17.2S, #4.0
    FMOV            V18.2S, #6.0
  }
  return vdiv_f32(vadd_f32(vadd_f32(a1, vadd_f32(a3, vmul_f32(a2, _D17))), vmul_n_f32(vadd_f32(vsub_f32(v12, v10), vmul_n_f32(vadd_f32(vadd_f32(v10, vsub_f32(v12, vmul_f32(a2, _D18))), vmul_n_f32(vsub_f32(vadd_f32(v11, vsub_f32(a4, v12)), a1), a5)), a5)), a5)), _D18);
}

float32x2_t sub_22652F468(float32x2_t a1, float32x2_t a2, float32x2_t a3, float32x2_t a4, float a5)
{
  float32x2_t v10;
  float32x2_t v11;
  float32x2_t v12;
  float32x2_t v14;
  float32x2_t v15;

  __asm { FMOV            V6.2S, #3.0 }
  v10 = vmul_f32(a1, _D6);
  v11 = vmul_f32(a2, _D6);
  v12 = vmul_f32(a3, _D6);
  __asm { FMOV            V6.2S, #6.0 }
  v14 = vsub_f32(vadd_f32(v11, vsub_f32(a4, v12)), a1);
  v15 = vadd_f32(v10, vsub_f32(v12, vmul_f32(a2, _D6)));
  return vdiv_f32(vadd_f32(vmul_n_f32(vadd_f32(v15, vmul_n_f32(vadd_f32(v14, v14), a5)), a5), vadd_f32(vsub_f32(v12, v10), vmul_n_f32(vadd_f32(v15, vmul_n_f32(v14, a5)), a5))), _D6);
}

float sub_22652F52C(float a1, float a2)
{
  return (float)(1.0 / (float)(a2 - a1)) + (float)(1.0 / (float)(a2 - a1));
}

double sub_22652F580(float32x4_t a1, float32x4_t a2, float32x4_t a3)
{
  float32x4_t v3;
  int32x4_t v4;
  float32x2_t v5;
  float32x2_t v6;
  float32x4_t v7;
  float32x4_t v8;
  float32x4_t v9;
  float32x4_t v10;
  int32x4_t v11;
  float32x2_t v12;
  float32x2_t v13;
  float32x4_t v14;

  v3 = vsubq_f32(a2, a1);
  v4 = (int32x4_t)vmulq_f32(v3, v3);
  v4.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v4, 2), vadd_f32(*(float32x2_t *)v4.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v4.i8, 1))).u32[0];
  v5 = vrsqrte_f32((float32x2_t)v4.u32[0]);
  v6 = vmul_f32(v5, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(v5, v5)));
  v7 = vmulq_n_f32(v3, vmul_f32(v6, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(v6, v6))).f32[0]);
  v8 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v7, (int32x4_t)v7), (int8x16_t)v7, 0xCuLL);
  v9 = vmlaq_f32(vmulq_f32(v8, vnegq_f32(a3)), v7, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)a3, (int32x4_t)a3), (int8x16_t)a3, 0xCuLL));
  v10 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v9, (int32x4_t)v9), (int8x16_t)v9, 0xCuLL);
  v11 = (int32x4_t)vmulq_f32(v9, v9);
  v11.i32[0] = vadd_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v11.i8, 1), vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v11, 2), *(float32x2_t *)v11.i8)).u32[0];
  v12 = vrsqrte_f32((float32x2_t)v11.u32[0]);
  v13 = vmul_f32(v12, vrsqrts_f32((float32x2_t)v11.u32[0], vmul_f32(v12, v12)));
  v14 = vmulq_n_f32(v10, vmul_f32(v13, vrsqrts_f32((float32x2_t)v11.u32[0], vmul_f32(v13, v13))).f32[0]);
  return COERCE_DOUBLE(__PAIR64__(vdupq_laneq_s32((int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v14, (int32x4_t)v14), (int8x16_t)v14, 0xCuLL), vnegq_f32(v7)), v14, v8), 2).u32[0], v14.u32[0]));
}

float sub_22652F6CC(float a1, float a2)
{
  return (float)(1.0 / tanf((float)(a1 * 0.5) * 0.017453)) / a2;
}

uint64_t sub_22652F754(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  if ((a1 & 1) == 0)
  {
    v5 = OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_directionalDebugEntity;
    if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_directionalDebugEntity))
    {
      type metadata accessor for DebugFrameEntity();
      swift_retain();
      sub_22655C224();
      swift_release();
    }
    *(_QWORD *)(v1 + v5) = 0;
    return swift_release();
  }
  type metadata accessor for DebugFrameEntity();
  swift_allocObject();
  v2 = sub_2265501B4();
  v3 = OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_directionalDebugEntity;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_directionalDebugEntity) = v2;
  result = swift_release();
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_directionalLight))
  {
    if (*(_QWORD *)(v1 + v3))
    {
      sub_22655C488();
      swift_retain();
      swift_retain();
      sub_22655C230();
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_22652F86C(float a1)
{
  return sub_22652F8B4((uint64_t (*)(_QWORD))MEMORY[0x24BDE7590], &qword_25583FB58, (void (*)(uint64_t, float))MEMORY[0x24BDE7588], (void (*)(char *))MEMORY[0x24BDE75B0], a1);
}

uint64_t sub_22652F890(float a1)
{
  return sub_22652F8B4((uint64_t (*)(_QWORD))MEMORY[0x24BDE75C8], &qword_25583FB60, (void (*)(uint64_t, float))MEMORY[0x24BDE75C0], (void (*)(char *))MEMORY[0x24BDE75D8], a1);
}

uint64_t sub_22652F8B4(uint64_t (*a1)(_QWORD), uint64_t *a2, void (*a3)(uint64_t, float), void (*a4)(char *), float a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  char *v29;
  void (*v30)(_QWORD *, _QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *boxed_opaque_existential_1;
  __int128 v36;
  uint64_t v37;
  char *v38;
  void (*v39)(uint64_t, float);
  void (*v40)(char *);
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD v44[5];
  _QWORD v45[3];
  uint64_t v46;
  uint64_t v47;

  v39 = a3;
  v40 = a4;
  v8 = a1(0);
  MEMORY[0x24BDAC7A8](v8);
  v38 = (char *)&v36 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558400F0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_22655CAD0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = *(_QWORD *)(v5 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse);
  if (!result)
    goto LABEL_19;
  v37 = *a2;
  *(float *)(result + v37) = a5;
  v41 = swift_retain();
  sub_22643501C();
  v18 = sub_22654F570();
  result = swift_release();
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    v19 = sub_22655D400();
    result = swift_bridgeObjectRelease();
    if (v19)
      goto LABEL_4;
LABEL_17:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v19)
    goto LABEL_17;
LABEL_4:
  if (v19 >= 1)
  {
    v20 = 0;
    v42 = v18 & 0xC000000000000001;
    v36 = xmmword_22655F8F0;
    v43 = v18;
    do
    {
      if (v42)
      {
        v22 = MEMORY[0x2276999E4](v20, v18);
      }
      else
      {
        v22 = *(_QWORD *)(v18 + 8 * v20 + 32);
        swift_retain();
      }
      v23 = v22 + qword_25585AE00;
      swift_beginAccess();
      sub_226438600(v23, (uint64_t)v45);
      v25 = v46;
      v24 = v47;
      __swift_project_boxed_opaque_existential_1(v45, v46);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v24 + 8))(v44, v25, v24);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2558400F8);
      v26 = swift_dynamicCast();
      v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
      if (v26)
      {
        v27(v12, 0, 1, v13);
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
        v28 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
        v29 = v38;
        v39(v28, *(float *)(v41 + v37));
        v40(v29);
        type metadata accessor for ScanEntity();
        sub_22652FCD4();
        v30 = (void (*)(_QWORD *, _QWORD))sub_22655C8CC();
        v32 = v31;
        v33 = sub_22655C41C();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33))
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255842740);
          v34 = swift_allocObject();
          *(_OWORD *)(v34 + 16) = v36;
          *(_QWORD *)(v34 + 56) = v13;
          *(_QWORD *)(v34 + 64) = MEMORY[0x24BDE74C8];
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v34 + 32));
          (*(void (**)(uint64_t *, char *, uint64_t))(v14 + 16))(boxed_opaque_existential_1, v16, v13);
          sub_22655C410();
        }
        v30(v45, 0);
        v18 = v43;
        v21 = v19;
        swift_release();
        (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      }
      else
      {
        v27(v12, 1, 1, v13);
        swift_release();
        sub_226438464((uint64_t)v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
        v18 = v43;
        v21 = v19;
      }
      ++v20;
    }
    while (v21 != v20);
    goto LABEL_17;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

unint64_t sub_22652FCD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255840100;
  if (!qword_255840100)
  {
    v1 = type metadata accessor for ScanEntity();
    result = MEMORY[0x22769A794](&unk_226560610, v1);
    atomic_store(result, (unint64_t *)&qword_255840100);
  }
  return result;
}

id sub_22652FD1C(void *a1)
{
  uint64_t v1;
  id result;
  double v4;
  double v5;
  float v6;

  result = objc_msgSend(a1, sel_scale);
  v5 = 1.0 / v4;
  if (v5 != 0.0)
  {
    v6 = v5;
    *(float *)(v1 + qword_2558488A0) = fminf(fmaxf(*(float *)(v1 + qword_2558488A0) / v6, 0.1), 100.0);
    *(float *)(v1 + qword_2558488D0) = *(float *)(v1 + qword_2558488D0) * v6;
    return objc_msgSend(a1, sel_setScale_, 1.0);
  }
  return result;
}

void sub_22652FDC0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  float v8;
  float v9;
  float v10;
  void *v11;
  id v12;
  uint64_t v13;
  float v14;
  float v15;
  float v16;
  id v17;

  v1 = qword_255848850;
  v2 = *(void **)(v0 + qword_255848860);
  if (*(_QWORD *)(v0 + qword_255848850))
  {
    if (!v2)
    {
      v3 = *(void **)(v0 + qword_255848850);
      if (!v3)
        return;
      goto LABEL_10;
    }
  }
  else if (!v2)
  {
    return;
  }
  objc_opt_self();
  v4 = (void *)swift_dynamicCastObjCClass();
  v5 = v2;
  v6 = v5;
  if (v4)
  {
    objc_msgSend(v4, sel_decelerationDelta);
    v7 = qword_2558488A8;
    v9 = v8 + *(float *)(v0 + qword_2558488A8);
  }
  else
  {
    objc_msgSend(v5, sel_decelerationDelta);
    v7 = qword_2558488A8;
    v9 = *(float *)(v0 + qword_2558488A8) - v10;
  }
  *(float *)(v0 + v7) = v9;
  *(float *)(v0 + qword_2558488B8) = v9;

  v3 = *(void **)(v0 + v1);
  if (v3)
  {
LABEL_10:
    objc_opt_self();
    v11 = (void *)swift_dynamicCastObjCClass();
    v12 = v3;
    v17 = v12;
    if (v11)
    {
      objc_msgSend(v11, sel_decelerationDelta);
      v13 = qword_2558488B0;
      v15 = v14 + *(float *)(v0 + qword_2558488B0);
    }
    else
    {
      objc_msgSend(v12, sel_decelerationDelta);
      v13 = qword_2558488B0;
      v15 = *(float *)(v0 + qword_2558488B0) - v16;
    }
    *(float *)(v0 + v13) = v15;
    *(float *)(v0 + qword_2558488C0) = v15;

  }
}

void sub_22652FF44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  int v12;
  int v13;
  uint64_t v14;
  float v15;
  void *v16;
  uint64_t v17;
  float v18;
  float v19;
  void *v20;
  uint64_t v21;
  int v22;
  id v23;
  double v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  id v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  id v38;
  id v39;
  void *v40;
  uint64_t v41;
  float v42;
  float v43;
  float v44;
  int v45;
  int v46;
  float v47;
  float v48;
  float v49;
  float v50;
  id v51;
  double v52;
  double v53;
  double v54;
  double v55;
  id v56;
  float v57;
  int v58;
  int v59;
  int v60;
  id v61;
  double v62;
  double v63;
  double v64;
  double v65;
  id v66;
  void *v67;
  float v68;
  float v69;
  int v70;
  int v71;
  id v72;
  double v73;
  double v74;
  double v75;
  id v76;
  uint64_t v77;
  _QWORD *v78;
  int v79;
  int v80;
  float v81;
  float v82;
  float v83;
  void *v84;
  uint64_t v85;
  int v86;
  id v87;
  double v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  id v96;
  double v97;
  double v98;
  double v99;
  double v100;
  double v101;
  id v102;
  id v103;
  uint64_t v104;
  void *v105;
  float v106;
  float v107;
  float v108;
  int v109;
  int v110;
  float v111;
  float v112;
  float v113;
  float v114;
  id v115;
  double v116;
  double v117;
  double v118;
  double v119;
  id v120;
  float v121;
  int v122;
  int v123;
  int v124;
  id v125;
  double v126;
  double v127;
  double v128;
  double v129;
  id v130;
  void *v131;
  float v132;
  float v133;
  int v134;
  int v135;
  id v136;
  double v137;
  double v138;
  double v139;
  id v140;
  uint64_t v141;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255841200);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v141 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22655C0C8();
  v4 = sub_22655C0E0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
  v5 = v0 + qword_25585B198;
  swift_beginAccess();
  sub_226446510((uint64_t)v3, v5, &qword_255841200);
  swift_endAccess();
  v6 = qword_255848848;
  v7 = *(_QWORD *)(v0 + qword_255848848);
  v8 = (void *)objc_opt_self();
  v9 = (_QWORD *)MEMORY[0x24BE08AF8];
  v10 = (_QWORD *)MEMORY[0x24BE08AE8];
  if (v7)
    v11 = (_QWORD *)MEMORY[0x24BE08AE8];
  else
    v11 = (_QWORD *)MEMORY[0x24BE08AF8];
  objc_msgSend(v8, sel_floatForKey_, *v11);
  v13 = v12;
  v14 = v0 + qword_255848820;
  v15 = *(double *)(v0 + qword_255848820);
  v16 = (void *)objc_opt_self();
  v17 = *MEMORY[0x24BE08AD8];
  objc_msgSend(v16, sel_floatForKey_, *MEMORY[0x24BE08AD8]);
  v19 = v18 * v15;
  v20 = *(void **)(v0 + v6);
  if (!v20)
    goto LABEL_11;
  v21 = qword_2558488A8;
  v22 = *(_DWORD *)(v0 + qword_2558488A8);
  v23 = v20;
  LODWORD(v24) = v22;
  if (objc_msgSend(v23, sel_offsetIsWithinRubberBandedRange_, v24))
  {
    objc_msgSend(v16, sel_floatForKey_, *MEMORY[0x24BE08AB0]);
    v26 = v25;
    v27 = *(_DWORD *)(v0 + v21);
    objc_msgSend(v23, sel_minOffset);
    v29 = v28;
    objc_msgSend(v23, sel_maxOffset);
    v31 = v30;
    v32 = objc_allocWithZone(MEMORY[0x24BE08B20]);
    LODWORD(v33) = 0;
    LODWORD(v34) = v26;
    LODWORD(v35) = v27;
    LODWORD(v36) = v29;
    LODWORD(v37) = v31;
    v38 = objc_msgSend(v32, sel_initWithVelocity_minEndDelta_startingOffset_minOffset_maxOffset_, v33, v34, v35, v36, v37);
    v39 = *(id *)(v0 + qword_255848860);
    *(_QWORD *)(v0 + qword_255848860) = v38;

LABEL_10:
    v9 = (_QWORD *)MEMORY[0x24BE08AF8];
    goto LABEL_13;
  }

  v40 = *(void **)(v0 + v6);
  v9 = (_QWORD *)MEMORY[0x24BE08AF8];
  if (v40)
  {
    v41 = *MEMORY[0x24BE08AC0];
    v39 = v40;
    objc_msgSend(v16, sel_floatForKey_, v41);
    if (v42 <= fabsf(v19))
    {
      objc_msgSend(v16, sel_floatForKey_, *MEMORY[0x24BE08AC8]);
      v44 = v43;
      objc_msgSend(v39, sel_rubberBandFactor);
      v46 = v45;
      objc_msgSend(v39, sel_minOffset);
      v48 = v47 - v44;
      objc_msgSend(v39, sel_maxOffset);
      v50 = v44 + v49;
      v51 = objc_allocWithZone(MEMORY[0x24BE08B08]);
      LODWORD(v52) = v46;
      *(float *)&v53 = v48;
      *(float *)&v54 = v50;
      *(float *)&v55 = v44;
      v56 = objc_msgSend(v51, sel_initWithRubberBandFactor_minOffset_maxOffset_overshoot_, v52, v53, v54, v55);
      v57 = v19 * *(float *)(v0 + qword_2558488D8);
      objc_msgSend(v16, sel_floatForKey_, *MEMORY[0x24BE08AB8]);
      v59 = v58;
      v60 = *(_DWORD *)(v0 + qword_2558488A8);
      v61 = objc_allocWithZone(MEMORY[0x24BE08B10]);
      *(float *)&v62 = v57;
      LODWORD(v63) = v59;
      LODWORD(v64) = v60;
      LODWORD(v65) = v13;
      v66 = objc_msgSend(v61, sel_initWithVelocity_minEndDelta_startingOffset_decelerationRate_rubberBand_, v56, v62, v63, v64, v65);
      v67 = *(void **)(v0 + qword_255848860);
      *(_QWORD *)(v0 + qword_255848860) = v66;

      v39 = v67;
      goto LABEL_10;
    }
  }
  else
  {
LABEL_11:
    objc_msgSend(v16, sel_floatForKey_, *MEMORY[0x24BE08AC0]);
    if (v68 > fabsf(v19))
      goto LABEL_14;
    v69 = v19 * *(float *)(v0 + qword_2558488D8);
    objc_msgSend(v16, sel_floatForKey_, *MEMORY[0x24BE08AB8]);
    v71 = v70;
    v72 = objc_allocWithZone(MEMORY[0x24BE08B00]);
    *(float *)&v73 = v69;
    LODWORD(v74) = v71;
    LODWORD(v75) = v13;
    v76 = objc_msgSend(v72, sel_initWithVelocity_minEndDelta_decelerationRate_, v73, v74, v75);
    v39 = *(id *)(v0 + qword_255848860);
    *(_QWORD *)(v0 + qword_255848860) = v76;
  }
LABEL_13:

LABEL_14:
  v77 = qword_255848838;
  if (*(_QWORD *)(v0 + qword_255848838))
    v78 = v10;
  else
    v78 = v9;
  objc_msgSend(v16, sel_floatForKey_, *v78);
  v80 = v79;
  v81 = *(double *)(v14 + 8);
  objc_msgSend(v16, sel_floatForKey_, v17);
  v83 = v82 * v81;
  v84 = *(void **)(v0 + v77);
  if (v84)
  {
    v85 = qword_2558488B0;
    v86 = *(_DWORD *)(v0 + qword_2558488B0);
    v87 = v84;
    LODWORD(v88) = v86;
    if (objc_msgSend(v87, sel_offsetIsWithinRubberBandedRange_, v88))
    {
      objc_msgSend(v16, sel_floatForKey_, *MEMORY[0x24BE08AB0]);
      v90 = v89;
      v91 = *(_DWORD *)(v0 + v85);
      objc_msgSend(v87, sel_minOffset);
      v93 = v92;
      objc_msgSend(v87, sel_maxOffset);
      v95 = v94;
      v96 = objc_allocWithZone(MEMORY[0x24BE08B20]);
      LODWORD(v97) = 0;
      LODWORD(v98) = v90;
      LODWORD(v99) = v91;
      LODWORD(v100) = v93;
      LODWORD(v101) = v95;
      v102 = objc_msgSend(v96, sel_initWithVelocity_minEndDelta_startingOffset_minOffset_maxOffset_, v97, v98, v99, v100, v101);
      v103 = *(id *)(v0 + qword_255848850);
      *(_QWORD *)(v0 + qword_255848850) = v102;

      goto LABEL_26;
    }

    v105 = *(void **)(v0 + v77);
    v104 = *MEMORY[0x24BE08AC0];
    if (v105)
    {
      v103 = v105;
      objc_msgSend(v16, sel_floatForKey_, v104);
      if (v106 <= fabsf(v83))
      {
        objc_msgSend(v16, sel_floatForKey_, *MEMORY[0x24BE08AC8]);
        v108 = v107;
        objc_msgSend(v103, sel_rubberBandFactor);
        v110 = v109;
        objc_msgSend(v103, sel_minOffset);
        v112 = v111 - v108;
        objc_msgSend(v103, sel_maxOffset);
        v114 = v108 + v113;
        v115 = objc_allocWithZone(MEMORY[0x24BE08B08]);
        LODWORD(v116) = v110;
        *(float *)&v117 = v112;
        *(float *)&v118 = v114;
        *(float *)&v119 = v108;
        v120 = objc_msgSend(v115, sel_initWithRubberBandFactor_minOffset_maxOffset_overshoot_, v116, v117, v118, v119);
        v121 = v83 * *(float *)(v0 + qword_2558488E0);
        objc_msgSend(v16, sel_floatForKey_, *MEMORY[0x24BE08AB8]);
        v123 = v122;
        v124 = *(_DWORD *)(v0 + qword_2558488B0);
        v125 = objc_allocWithZone(MEMORY[0x24BE08B10]);
        *(float *)&v126 = v121;
        LODWORD(v127) = v123;
        LODWORD(v128) = v124;
        LODWORD(v129) = v80;
        v130 = objc_msgSend(v125, sel_initWithVelocity_minEndDelta_startingOffset_decelerationRate_rubberBand_, v120, v126, v127, v128, v129);
        v131 = *(void **)(v0 + qword_255848850);
        *(_QWORD *)(v0 + qword_255848850) = v130;

        v103 = v131;
      }
      goto LABEL_26;
    }
  }
  else
  {
    v104 = *MEMORY[0x24BE08AC0];
  }
  objc_msgSend(v16, sel_floatForKey_, v104);
  if (v132 > fabsf(v83))
    return;
  v133 = v83 * *(float *)(v0 + qword_2558488E0);
  objc_msgSend(v16, sel_floatForKey_, *MEMORY[0x24BE08AB8]);
  v135 = v134;
  v136 = objc_allocWithZone(MEMORY[0x24BE08B00]);
  *(float *)&v137 = v133;
  LODWORD(v138) = v135;
  LODWORD(v139) = v80;
  v140 = objc_msgSend(v136, sel_initWithVelocity_minEndDelta_decelerationRate_, v137, v138, v139);
  v103 = *(id *)(v0 + qword_255848850);
  *(_QWORD *)(v0 + qword_255848850) = v140;
LABEL_26:

}

void sub_226530660(void *a1)
{
  uint64_t v1;
  char *v3;
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  double *v17;

  v3 = (char *)objc_msgSend(a1, sel_state);
  v4 = objc_msgSend(a1, sel_view);
  objc_msgSend(a1, sel_translationInView_, v4);
  v6 = v5;
  v8 = v7;

  if ((unint64_t)(v3 - 3) >= 3)
  {
    if (v3 == (char *)2)
    {
      v11 = objc_msgSend(a1, sel_view);
      objc_msgSend(a1, sel_velocityInView_, v11);
      v13 = v12;
      v15 = v14;

      v16 = (_QWORD *)(v1 + qword_255848820);
      *v16 = v13;
      v16[1] = v15;
      sub_2265317A8(v6, v8);
      v17 = (double *)(v1 + qword_255848828);
      *v17 = v6;
      v17[1] = v8;
    }
    else if (v3 == (char *)1)
    {
      v9 = (double *)(v1 + qword_255848828);
      *v9 = v6;
      v9[1] = v8;
      v10 = (_QWORD *)(v1 + qword_255848820);
      *v10 = 0;
      v10[1] = 0;
    }
  }
  else if (*(_BYTE *)(v1 + qword_25585B1E0) == 1)
  {
    sub_22652FF44();
  }
}

uint64_t sub_2265307D0(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_22653088C(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_delegate;
  swift_beginAccess();
  sub_226446510((uint64_t)v5, v3, &qword_25584A528);
  return swift_endAccess();
}

uint64_t sub_22653083C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_delegate;
  swift_beginAccess();
  return sub_22653088C(v3, a1);
}

uint64_t sub_22653088C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25584A528);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2265308D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_delegate;
  swift_beginAccess();
  sub_226446510(a1, v3, &qword_25584A528);
  return swift_endAccess();
}

uint64_t (*sub_226530934())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

float sub_226530978()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController____lazy_storage___pitchAdjustment);
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController____lazy_storage___pitchAdjustment + 4) & 1) == 0)
    return *(float *)v1;
  *(_DWORD *)v1 = -1085730854;
  v1[4] = 0;
  return -0.7854;
}

id DollHouseCameraController.__allocating_init(arView:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return DollHouseCameraController.init(arView:)(a1);
}

id DollHouseCameraController.init(arView:)(void *a1)
{
  char *v1;
  char *v3;
  char *v4;
  char *v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  objc_super v12;

  v3 = &v1[OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_delegate];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  v4 = &v1[OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_arViewSize];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_panGestureRecognizer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_pinchGestureRecognizer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_immediateLongPressRecognizer] = 0;
  v5 = &v1[OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController____lazy_storage___pitchAdjustment];
  *(_DWORD *)v5 = 0;
  v5[4] = 1;
  v6 = v1;
  sub_22655C0C8();
  *(_QWORD *)&v6[OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_arView] = a1;
  v7 = a1;
  objc_msgSend(v7, sel_bounds);
  *(_QWORD *)v4 = v8;
  *((_QWORD *)v4 + 1) = v9;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_camera] = sub_226531900(v7);

  v12.receiver = v6;
  v12.super_class = (Class)type metadata accessor for DollHouseCameraController();
  v10 = objc_msgSendSuper2(&v12, sel_init);
  sub_226531020(v7);

  return v10;
}

uint64_t sub_226530AFC()
{
  type metadata accessor for DollHouseCamera();
  return sub_22655C224();
}

double sub_226530B3C(float32x4_t a1)
{
  uint64_t v1;
  void *v2;
  double v3;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_arView);
  swift_retain();
  v3 = sub_22649BFE8(v2, a1);
  swift_release();
  return v3;
}

void sub_226530BD0()
{
  uint64_t v0;
  uint64_t v1;
  int8x16_t v2;
  int8x16_t v3;
  float v4;
  int8x16_t v5;
  int8x16_t v6;
  int8x16_t v7;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_camera);
  *(_DWORD *)(v1 + qword_2558488A0) = 1065353216;
  *(_DWORD *)(v1 + qword_2558488D0) = 1065353216;
  *(_DWORD *)(v1 + qword_2558488A8) = 0;
  *(_BYTE *)(v1 + qword_255848950) = 1;
  sub_22655C188();
  v7 = v2;
  sub_22655C194();
  v6 = v3;
  v4 = sub_226530978();
  sub_226504E00(0, 0, 1, 0, v7, v6, v4, 1.0, v5);
}

uint64_t sub_226530C80()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  double v3;
  _QWORD *v4;
  double v5;
  uint64_t v7;
  double Width;
  float v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  float v19;
  CGRect v21;
  CGRect v22;

  v1 = v0;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_arView);
  objc_msgSend(v2, sel_bounds);
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_arViewSize);
  if (v5 != *(double *)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_arViewSize)
    || v3 != *(double *)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_arViewSize + 8))
  {
    v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_camera);
    objc_msgSend(v2, sel_bounds);
    Width = CGRectGetWidth(v21);
    objc_msgSend(v2, sel_bounds);
    v9 = Width / CGRectGetHeight(v22);
    *(float *)(v7 + qword_255848868) = v9;
    REMatrix4x4MakePerspectiveFieldOfViewReverseDepth();
    v10 = (_OWORD *)(v7 + qword_255848890);
    *v10 = v11;
    v10[1] = v12;
    v10[2] = v13;
    v10[3] = v14;
    objc_msgSend(v2, sel_bounds);
    *v4 = v15;
    v4[1] = v16;
  }
  v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_camera);
  sub_2265055B4(*MEMORY[0x24BDAEE00], *(double *)(MEMORY[0x24BDAEE00] + 16), *(float32x4_t *)(MEMORY[0x24BDAEE00] + 32));
  sub_22652FDC0();
  *(float *)&v18 = fminf(*(float *)(v17 + qword_255848940) + 0.01, 1.0);
  *(_DWORD *)(v17 + qword_255848940) = LODWORD(v18);
  v19 = fminf(*(float *)(v17 + qword_255848948) + 0.01, 1.0);
  *(float *)(v17 + qword_255848948) = v19;
  sub_2265051AC(v18, v19);
  return sub_226530DDC();
}

uint64_t sub_226530DDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t result;
  void (*v6)(char *, uint64_t);
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  void (*v15)(_QWORD *, _QWORD);
  _OWORD *v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _QWORD v28[4];

  v0 = sub_22655C1C4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22655C7D0();
  v4 = sub_22655C5CC();
  result = swift_release();
  if (v4)
  {
    sub_22655C7E8();
    sub_22655C170();
    v6 = *(void (**)(char *, uint64_t))(v1 + 8);
    v6(v3, v0);
    RECustomMatrixCameraComponentGetComponentType();
    if (REEntityGetComponentByClass())
    {
      swift_retain();
      sub_22655C7E8();
      sub_22655C170();
      v6(v3, v0);
      RECustomMatrixCameraComponentGetComponentType();
      REEntityGetOrAddComponentByClass();
      RECustomMatrixCameraComponentGetProjectionMatrix();
      v26 = v8;
      v27 = v7;
      v24 = v10;
      v25 = v9;
      swift_release();
      RECustomMatrixCameraComponentSetProjectionFromMatrix();
      type metadata accessor for ARViewCameraEntity();
      swift_retain();
      sub_22655C26C();
      v25 = v12;
      v26 = v11;
      v24 = v13;
      v27 = v14;
      swift_release();
      sub_22655C8B4();
      v15 = (void (*)(_QWORD *, _QWORD))sub_22655C29C();
      v17 = v16;
      sub_22655D610();
      v23 = v18;
      sub_22655D028();
      v22 = v19;
      sub_22655D01C();
      *v17 = v20;
      v21 = v23;
      v17[1] = v22;
      v17[2] = v21;
      v15(v28, 0);
    }
    return swift_release();
  }
  return result;
}

id sub_226531020(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  void *v5;
  id result;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD7E0]), sel_initWithTarget_action_, v1, sel_didPanWithPanGesture_);
  v4 = OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_panGestureRecognizer;
  v5 = *(void **)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_panGestureRecognizer);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_panGestureRecognizer) = v3;

  result = *(id *)(v1 + v4);
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  objc_msgSend(result, sel_setDelegate_, v1);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD808]), sel_initWithTarget_action_, v1, sel_didPinchWithPinchGesture_);
  v8 = OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_pinchGestureRecognizer;
  v9 = *(void **)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_pinchGestureRecognizer);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_pinchGestureRecognizer) = v7;

  result = *(id *)(v1 + v8);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  objc_msgSend(result, sel_setDelegate_, v1);
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD740]), sel_initWithTarget_action_, v1, sel_didTouchDownWithLongPressGesture_);
  v11 = OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_immediateLongPressRecognizer;
  v12 = *(void **)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_immediateLongPressRecognizer);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_immediateLongPressRecognizer) = v10;

  result = *(id *)(v1 + v11);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  objc_msgSend(result, sel_setMinimumPressDuration_, 0.0);
  result = *(id *)(v1 + v11);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  result = objc_msgSend(result, sel_setDelegate_, v1);
  if (!*(_QWORD *)(v1 + v4))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  result = objc_msgSend(a1, sel_addGestureRecognizer_);
  if (!*(_QWORD *)(v1 + v8))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  result = objc_msgSend(a1, sel_addGestureRecognizer_);
  if (*(_QWORD *)(v1 + v11))
    return objc_msgSend(a1, sel_addGestureRecognizer_);
LABEL_15:
  __break(1u);
  return result;
}

id sub_226531210(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  id result;
  double v5;
  double v6;
  float v7;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_camera);
  result = objc_msgSend(a1, sel_scale);
  v6 = 1.0 / v5;
  if (v6 != 0.0)
  {
    v7 = v6;
    *(float *)(v3 + qword_2558488A0) = fminf(fmaxf(*(float *)(v3 + qword_2558488A0) / v7, 0.1), 100.0);
    *(float *)(v3 + qword_2558488D0) = *(float *)(v3 + qword_2558488D0) * v7;
    return objc_msgSend(a1, sel_setScale_, 1.0);
  }
  return result;
}

void sub_226531314(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  BOOL v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  double v24;
  double v25;
  void (*v26)(char *, uint64_t);
  float v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[24];
  uint64_t v35;

  v2 = v1;
  v4 = sub_22655C0E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v31 - v10;
  objc_msgSend(a1, sel_locationInView_, *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_arView), v9);
  v13 = v12;
  v15 = v14;
  v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_camera);
  v17 = sub_226504FF4();
  v18 = objc_msgSend(a1, sel_state);
  if (v18 == (id)3)
  {
    sub_22655C0C8();
    v23 = v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_startTapTime;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v23, v4);
    sub_22655C0A4();
    v25 = v24;
    v26 = *(void (**)(char *, uint64_t))(v5 + 8);
    v26(v7, v4);
    v26(v11, v4);
    *(_BYTE *)(v16 + qword_255848960) = 0;
    v27 = 1.0;
    if (*(_BYTE *)(v16 + qword_25585B1D0))
      v27 = 0.0;
    *(float *)(v16 + qword_255848940) = v27;
    *(float *)(v16 + qword_255848948) = v27;
    if (!v17 && v25 < 0.5)
    {
      v28 = v2 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_delegate;
      swift_beginAccess();
      sub_22653088C(v28, (uint64_t)v34);
      if (v35)
      {
        sub_226438600((uint64_t)v34, (uint64_t)v31);
        sub_226531CD8((uint64_t)v34);
        v29 = v32;
        v30 = v33;
        __swift_project_boxed_opaque_existential_1(v31, v32);
        (*(void (**)(uint64_t, uint64_t, uint64_t, double, double))(v30 + 8))(v2, v29, v30, v13, v15);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      }
      else
      {
        sub_226531CD8((uint64_t)v34);
      }
    }
  }
  else if (v18 == (id)1)
  {
    sub_22655C0C8();
    v19 = v1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_startTapTime;
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v19, v11, v4);
    swift_endAccess();
    *(_BYTE *)(v16 + qword_255848960) = 1;
    v20 = *(void **)(v16 + qword_255848860);
    *(_QWORD *)(v16 + qword_255848860) = 0;

    v21 = *(void **)(v16 + qword_255848858);
    *(_QWORD *)(v16 + qword_255848858) = 0;

    v22 = *(void **)(v16 + qword_255848850);
    *(_QWORD *)(v16 + qword_255848850) = 0;

  }
}

id DollHouseCameraController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DollHouseCameraController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DollHouseCameraController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DollHouseCameraController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_2265317A8(double a1, double a2)
{
  uint64_t v2;
  uint64_t v4;
  float v5;
  void *v6;
  float v7;
  float v8;
  void *v9;
  float v10;
  float v11;
  float v12;
  id result;

  v4 = v2 + qword_255848828;
  v5 = a1 - *(double *)(v2 + qword_255848828);
  v6 = (void *)objc_opt_self();
  objc_msgSend(v6, sel_floatForKey_, *MEMORY[0x24BE08AF0]);
  v8 = *(float *)(v2 + qword_2558488B8) - (float)((float)(v7 * v5) * *(float *)(v2 + qword_2558488D8));
  *(float *)(v2 + qword_2558488B8) = v8;
  v9 = *(void **)(v2 + qword_255848848);
  if (v9)
    objc_msgSend(v9, sel_rubberBandOffsetForOffset_);
  *(float *)(v2 + qword_2558488A8) = v8;
  v10 = a2 - *(double *)(v4 + 8);
  objc_msgSend(v6, sel_floatForKey_, *MEMORY[0x24BE08AD8]);
  v12 = *(float *)(v2 + qword_2558488C0) - (float)((float)(v11 * v10) * *(float *)(v2 + qword_2558488E0));
  *(float *)(v2 + qword_2558488C0) = v12;
  result = *(id *)(v2 + qword_255848838);
  if (result)
    result = objc_msgSend(result, sel_rubberBandOffsetForOffset_);
  *(float *)(v2 + qword_2558488B0) = v12;
  return result;
}

uint64_t sub_226531900(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(_BYTE *, _QWORD);
  _OWORD *v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v12;
  __int128 v13;
  _BYTE v14[32];

  type metadata accessor for ARViewCameraEntity();
  swift_allocObject();
  v2 = a1;
  v3 = sub_22655C1DC();
  type metadata accessor for DollHouseCamera();
  swift_allocObject();
  v4 = sub_22650481C(v2, v3, 0, 0.9273);
  v5 = (void (*)(_BYTE *, _QWORD))sub_22655C29C();
  v7 = v6;
  sub_22655D610();
  v13 = v8;
  sub_22655D028();
  v12 = v9;
  sub_22655D01C();
  *v7 = v10;
  v7[1] = v12;
  v7[2] = v13;
  v5(v14, 0);
  *(_BYTE *)(v4 + qword_25585B1D0) = 0;
  *(_DWORD *)(v4 + qword_2558488F8) = 1067030938;
  sub_22650415C();
  sub_22655C7D0();
  sub_226531D18();
  swift_retain();
  sub_22655C5E4();
  swift_release();
  swift_release();
  return v4;
}

uint64_t type metadata accessor for DollHouseCameraController()
{
  uint64_t result;

  result = qword_25584A598;
  if (!qword_25584A598)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_226531AC8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC8RoomPlan25DollHouseCameraController_delegate;
  swift_beginAccess();
  return sub_22653088C(v3, a2);
}

uint64_t dispatch thunk of DollHouseCameraControllerDelegate.dollHouseCameraController(_:didTapAtLocation:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_226531B28()
{
  return type metadata accessor for DollHouseCameraController();
}

uint64_t sub_226531B30()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22655C0E0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DollHouseCameraController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DollHouseCameraController.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of DollHouseCameraController.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of DollHouseCameraController.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of DollHouseCameraController.__allocating_init(arView:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 296))();
}

uint64_t dispatch thunk of DollHouseCameraController.clear()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x130))();
}

uint64_t dispatch thunk of DollHouseCameraController.project(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x138))();
}

uint64_t dispatch thunk of DollHouseCameraController.moveToFitBoundingBox(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x140))();
}

uint64_t dispatch thunk of DollHouseCameraController.update(deltaTime:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x148))();
}

uint64_t dispatch thunk of DollHouseCameraController.gestureRecognizer(_:shouldRecognizeSimultaneouslyWith:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x160))();
}

uint64_t sub_226531CD8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25584A528);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_226531D18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25584A5B0;
  if (!qword_25584A5B0)
  {
    v1 = type metadata accessor for DollHouseCamera();
    result = MEMORY[0x22769A794](&unk_226567F98, v1);
    atomic_store(result, (unint64_t *)&qword_25584A5B0);
  }
  return result;
}

id sub_226531D8C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorldSpaceManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for WorldSpaceManager()
{
  return objc_opt_self();
}

uint64_t sub_226531E14(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849210);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22655C05C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_22643D7E4(a1, &qword_255849210);
    sub_2265404B4(a2, (uint64_t)v8);
    swift_bridgeObjectRelease();
    return sub_22643D7E4((uint64_t)v8, &qword_255849210);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = *v3;
    *v3 = 0x8000000000000000;
    sub_226523A28((uint64_t)v13, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v17;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_226531F7C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849210);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22655C05C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_22643D7E4(a1, &qword_255849210);
    v14 = sub_226534B60(a2);
    if ((v15 & 1) != 0)
    {
      v16 = v14;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v18 = *v3;
      v23 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_22654A990();
        v18 = v23;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(_QWORD *)(v18 + 56) + *(_QWORD *)(v10 + 72) * v16, v9);
      sub_2265473AC(v16, v18);
      *v3 = v18;
      swift_bridgeObjectRelease();
      v19 = 0;
    }
    else
    {
      v19 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v19, 1, v9);
    return sub_22643D7E4((uint64_t)v8, &qword_255849210);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, a1, v9);
    v20 = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v3;
    *v3 = 0x8000000000000000;
    sub_226523B58((uint64_t)v13, a2, v20);
    *v3 = v23;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_226532154(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t i;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t v25;

  v2 = sub_22655C05C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v24 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849210);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_226437F28(&qword_25584A8F0, v3, MEMORY[0x24BDCDAF0]);
  result = sub_22655CF98();
  v14 = 0;
  v15 = a1 + 64;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(a1 + 64);
  v24 = (unint64_t)(v16 + 63) >> 6;
  v25 = result;
  if (!v18)
    goto LABEL_5;
LABEL_4:
  v19 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  for (i = v19 | (v14 << 6); ; i = __clz(__rbit64(v22)) + (v14 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v12, *(_QWORD *)(a1 + 56) + *(_QWORD *)(v4 + 72) * i, v2);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v12, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v2) == 1)
      goto LABEL_25;
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v12, v2);
    sub_226537330((uint64_t)v9, v6);
    result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v2);
    if (v18)
      goto LABEL_4;
LABEL_5:
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v24)
      goto LABEL_24;
    v22 = *(_QWORD *)(v15 + 8 * v21);
    ++v14;
    if (!v22)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v24)
        goto LABEL_24;
      v22 = *(_QWORD *)(v15 + 8 * v14);
      if (!v22)
      {
        v14 = v21 + 2;
        if (v21 + 2 >= v24)
          goto LABEL_24;
        v22 = *(_QWORD *)(v15 + 8 * v14);
        if (!v22)
        {
          v14 = v21 + 3;
          if (v21 + 3 >= v24)
            goto LABEL_24;
          v22 = *(_QWORD *)(v15 + 8 * v14);
          if (!v22)
            break;
        }
      }
    }
LABEL_20:
    v18 = (v22 - 1) & v22;
  }
  v23 = v21 + 4;
  if (v23 >= v24)
  {
LABEL_24:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, 1, 1, v2);
LABEL_25:
    swift_release();
    return v25;
  }
  v22 = *(_QWORD *)(v15 + 8 * v23);
  if (v22)
  {
    v14 = v23;
    goto LABEL_20;
  }
  while (1)
  {
    v14 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v14 >= v24)
      goto LABEL_24;
    v22 = *(_QWORD *)(v15 + 8 * v14);
    ++v23;
    if (v22)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t CapturedRoom.ModelProvider.modelFileURL(for:)@<X0>(unsigned __int8 *a1@<X0>, char *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  void (*v16)(char *, char *, uint64_t);
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;

  v19 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849210);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22655C05C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v2;
  v12 = v2[1];
  v20 = *v2;
  v21 = v12;
  v14 = type metadata accessor for CapturedRoom.Object(0);
  result = CapturedRoom.ModelProvider.modelFileURL(for:)(*(_QWORD *)&a1[*(int *)(v14 + 36)], v7);
  if (!v3)
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_22643D7E4((uint64_t)v7, &qword_255849210);
      v20 = v13;
      v21 = v12;
      v22 = *a1;
      return CapturedRoom.ModelProvider.modelFileURL(for:)(&v22, v19);
    }
    else
    {
      v16 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v16(v11, v7, v8);
      v17 = v19;
      v16(v19, v11, v8);
      return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v17, 0, 1, v8);
    }
  }
  return result;
}

{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  void (*v18)(char *, uint64_t, uint64_t, uint64_t, __n128);
  id v19;
  void *v20;
  unsigned int v21;
  char *v22;
  uint64_t v23;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  void (*v30)(char *, unint64_t, uint64_t);

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849210);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22655C05C();
  v9 = *(_QWORD *)(v8 - 8);
  v10.n128_f64[0] = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v2;
  if (!*(_QWORD *)(v13 + 16) || (v14 = sub_226534B60(*a1), (v15 & 1) == 0))
  {
    v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56);
    v18(v7, 1, 1, v8, v10);
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(v13 + 56) + *(_QWORD *)(v9 + 72) * v14;
  v17 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
  v17(v7, v16, v8);
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v18)(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_7:
    sub_22643D7E4((uint64_t)v7, &qword_255849210);
    v22 = a2;
    v23 = 1;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v22, v23, 1, v8);
  }
  v30 = v17;
  v29 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v29(v12, v7, v8);
  v19 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_22655C038();
  v20 = (void *)sub_22655CD64();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(v19, sel_fileExistsAtPath_, v20);

  if (v21)
  {
    v29(a2, v12, v8);
    v22 = a2;
    v23 = 0;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v22, v23, 1, v8);
  }
  type metadata accessor for CapturedRoom.ModelProvider.Error();
  sub_226437F28(&qword_25584A630, (uint64_t (*)(uint64_t))type metadata accessor for CapturedRoom.ModelProvider.Error, (uint64_t)&protocol conformance descriptor for CapturedRoom.ModelProvider.Error);
  swift_allocError();
  v26 = v25;
  v30(v25, (unint64_t)v12, v8);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_25584A628);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 0, 1, v27);
  swift_willThrow();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

Swift::Bool __swiftcall CapturedRoom.Object.Category.supportsCombination(_:)(Swift::OpaquePointer a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  Swift::Bool result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _QWORD v39[2];
  int64_t v40;
  uint64_t v41;
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;
  _OWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  LOBYTE(v45[0]) = *v1;
  CapturedRoom.Object.Category.supportedCombinations.getter();
  v4 = v3;
  v5 = *(_QWORD *)(v3 + 16);
  if (v5)
  {
    v39[1] = a1._rawValue;
    v48 = MEMORY[0x24BEE4AF8];
    sub_2264C7B5C(0, v5, 0);
    v6 = 0;
    v39[0] = v4;
    v40 = v5;
    v41 = v4 + 32;
    do
    {
      v7 = *(_QWORD *)(v41 + 8 * v6);
      v8 = *(_QWORD *)(v7 + 16);
      if (v8)
      {
        v47 = MEMORY[0x24BEE4AF8];
        swift_bridgeObjectRetain();
        sub_2264C7B40(0, v8, 0);
        v9 = v7 + 32;
        v10 = v47;
        do
        {
          sub_226438600(v9, (uint64_t)v42);
          v11 = v43;
          v12 = v44;
          v13 = __swift_project_boxed_opaque_existential_1(v42, v43);
          v14 = MEMORY[0x24BDAC7A8](v13);
          v16 = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, double))(v17 + 16))(v16, v14);
          sub_226484E10((uint64_t)v16, v11, v12, (uint64_t *)v45);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2264C7B40(0, *(_QWORD *)(v10 + 16) + 1, 1);
            v10 = v47;
          }
          v19 = *(_QWORD *)(v10 + 16);
          v18 = *(_QWORD *)(v10 + 24);
          if (v19 >= v18 >> 1)
          {
            sub_2264C7B40(v18 > 1, v19 + 1, 1);
            v10 = v47;
          }
          *(_QWORD *)(v10 + 16) = v19 + 1;
          v20 = v10 + 40 * v19;
          v21 = v45[0];
          v22 = v45[1];
          *(_QWORD *)(v20 + 64) = v46;
          *(_OWORD *)(v20 + 32) = v21;
          *(_OWORD *)(v20 + 48) = v22;
          v9 += 40;
          --v8;
        }
        while (v8);
        swift_bridgeObjectRelease();
        v5 = v40;
      }
      else
      {
        v10 = MEMORY[0x24BEE4AF8];
      }
      sub_226535CE4();
      v47 = sub_22655CF98();
      v23 = *(_QWORD *)(v10 + 16);
      if (v23)
      {
        v24 = v10 + 32;
        do
        {
          sub_226496910(v24, (uint64_t)v42);
          sub_226536E40((uint64_t)v45, (uint64_t)v42);
          sub_22649694C((uint64_t)v45);
          v24 += 40;
          --v23;
        }
        while (v23);
      }
      swift_bridgeObjectRelease();
      v25 = v47;
      v26 = v48;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2264C7B5C(0, *(_QWORD *)(v26 + 16) + 1, 1);
        v26 = v48;
      }
      v28 = *(_QWORD *)(v26 + 16);
      v27 = *(_QWORD *)(v26 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_2264C7B5C(v27 > 1, v28 + 1, 1);
        v26 = v48;
      }
      ++v6;
      *(_QWORD *)(v26 + 16) = v28 + 1;
      *(_QWORD *)(v26 + 8 * v28 + 32) = v25;
    }
    while (v6 != v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v26 = MEMORY[0x24BEE4AF8];
  }
  v29 = swift_bridgeObjectRetain();
  v30 = sub_22653D220(v29);
  v31 = *(_QWORD *)(v26 + 16);
  if (!v31)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v32 = swift_bridgeObjectRetain();
  v33 = sub_22653CAC0(v32, v30);
  result = swift_bridgeObjectRelease();
  if ((v33 & 1) != 0)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return 1;
  }
  if (v31 == 1)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return 0;
  }
  v35 = 5;
  while (1)
  {
    v36 = v35 - 3;
    if (__OFADD__(v35 - 4, 1))
      break;
    v37 = swift_bridgeObjectRetain();
    v38 = sub_22653CAC0(v37, v30);
    result = swift_bridgeObjectRelease();
    if ((v38 & 1) != 0)
      goto LABEL_24;
    ++v35;
    if (v36 == v31)
      goto LABEL_31;
  }
  __break(1u);
  return result;
}

unint64_t CapturedRoom.ModelProvider.Error.errorDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v1 = v0;
  v2 = sub_22655C05C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CapturedRoom.ModelProvider.Error();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22643D704(v1, (uint64_t)v8, v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25584A628);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 1, v10) == 1)
    return 0xD00000000000002ALL;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  sub_22655D2EC();
  swift_bridgeObjectRelease();
  strcpy((char *)v13, "File at path ");
  HIWORD(v13[1]) = -4864;
  sub_22655C038();
  sub_22655CE24();
  swift_bridgeObjectRelease();
  sub_22655CE24();
  v11 = v13[0];
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v11;
}

size_t CapturedRoom.ModelProvider.modelFileURLs.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  size_t v5;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_226532154(v0);
  v2 = swift_bridgeObjectRetain();
  v3 = sub_226532154(v2);
  sub_226532B70(v3, v1);
  v5 = sub_226536514(v4);
  swift_bridgeObjectRelease();
  return v5;
}

void sub_226532B70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t i;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD v25[2];

  v4 = sub_22655C05C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v25 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849210);
  v12.n128_f64[0] = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = 0;
  v16 = a1 + 56;
  v17 = 1 << *(_BYTE *)(a1 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(a1 + 56);
  v25[0] = (unint64_t)(v17 + 63) >> 6;
  v25[1] = a2;
  if (!v19)
    goto LABEL_5;
LABEL_4:
  v20 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (i = v20 | (v15 << 6); ; i = __clz(__rbit64(v23)) + (v15 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16))(v14, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v5 + 72) * i, v4, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4) == 1)
      goto LABEL_25;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v14, v4);
    sub_226537330((uint64_t)v10, v7);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    if (v19)
      goto LABEL_4;
LABEL_5:
    v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v25[0])
      goto LABEL_24;
    v23 = *(_QWORD *)(v16 + 8 * v22);
    ++v15;
    if (!v23)
    {
      v15 = v22 + 1;
      if (v22 + 1 >= v25[0])
        goto LABEL_24;
      v23 = *(_QWORD *)(v16 + 8 * v15);
      if (!v23)
      {
        v15 = v22 + 2;
        if (v22 + 2 >= v25[0])
          goto LABEL_24;
        v23 = *(_QWORD *)(v16 + 8 * v15);
        if (!v23)
        {
          v15 = v22 + 3;
          if (v22 + 3 >= v25[0])
            goto LABEL_24;
          v23 = *(_QWORD *)(v16 + 8 * v15);
          if (!v23)
            break;
        }
      }
    }
LABEL_20:
    v19 = (v23 - 1) & v23;
  }
  v24 = v22 + 4;
  if (v24 >= v25[0])
  {
LABEL_24:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56))(v14, 1, 1, v4, v12);
LABEL_25:
    swift_release();
    return;
  }
  v23 = *(_QWORD *)(v16 + 8 * v24);
  if (v23)
  {
    v15 = v24;
    goto LABEL_20;
  }
  while (1)
  {
    v15 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v15 >= v25[0])
      goto LABEL_24;
    v23 = *(_QWORD *)(v16 + 8 * v15);
    ++v24;
    if (v23)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
}

void CapturedRoom.ModelProvider.init()(_QWORD *a1@<X8>)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEE4B00];
  *a1 = MEMORY[0x24BEE4B00];
  a1[1] = v1;
}

uint64_t CapturedRoom.ModelProvider.modelFileURL(for:)@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  void (*v20)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v21;
  uint64_t v22;
  id v23;
  void *v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[16];
  void (*v30)(_BYTE *, _BYTE *, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849210);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v29[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_22655C05C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = &v29[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!*(_QWORD *)(a1 + 16))
    return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t, double))(v10 + 56))(a2, 1, 1, v9, v11);
  v14 = *(_QWORD *)(v2 + 8);
  result = sub_2265333B0(a1);
  if (v3)
    return result;
  v16 = swift_bridgeObjectRetain();
  v17 = sub_22653D220(v16);
  if (*(_QWORD *)(v14 + 16) && (v18 = sub_226534CD0(v17), (v19 & 1) != 0))
  {
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v10 + 16))(v8, *(_QWORD *)(v14 + 56) + *(_QWORD *)(v10 + 72) * v18, v9);
    v20 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v20(v8, 0, 1, v9);
  }
  else
  {
    v20 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v20(v8, 1, 1, v9);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_22643D7E4((uint64_t)v8, &qword_255849210);
    v21 = a2;
    v22 = 1;
    return ((uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v20)(v21, v22, 1, v9);
  }
  v30 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32);
  v30(v13, v8, v9);
  v23 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_22655C038();
  v24 = (void *)sub_22655CD64();
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(v23, sel_fileExistsAtPath_, v24);

  if (v25)
  {
    v30(a2, v13, v9);
    v21 = a2;
    v22 = 0;
    return ((uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v20)(v21, v22, 1, v9);
  }
  type metadata accessor for CapturedRoom.ModelProvider.Error();
  sub_226437F28(&qword_25584A630, (uint64_t (*)(uint64_t))type metadata accessor for CapturedRoom.ModelProvider.Error, (uint64_t)&protocol conformance descriptor for CapturedRoom.ModelProvider.Error);
  swift_allocError();
  v27 = v26;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v10 + 16))(v26, v13, v9);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25584A628);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 0, 1, v28);
  swift_willThrow();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_2265333B0(uint64_t result)
{
  Swift::OpaquePointer v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[5];
  uint64_t v6;

  if (*(_QWORD *)(result + 16))
  {
    v1._rawValue = (void *)result;
    sub_226438600(result + 32, (uint64_t)v5);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    swift_getDynamicType();
    (*(void (**)(uint64_t *__return_ptr))(v5[4] + 24))(&v6);
    if (BYTE1(v6) > 0xFEu || (v6 & 0x100) == 0 || !CapturedRoom.Object.Category.supportsCombination(_:)(v1))
    {
      type metadata accessor for CapturedRoom.ModelProvider.Error();
      sub_226437F28(&qword_25584A630, (uint64_t (*)(uint64_t))type metadata accessor for CapturedRoom.ModelProvider.Error, (uint64_t)&protocol conformance descriptor for CapturedRoom.ModelProvider.Error);
      swift_allocError();
      v3 = v2;
      v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25584A628);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
      swift_willThrow();
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  return result;
}

uint64_t CapturedRoom.ModelProvider.setModelFileURL(_:for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v29 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849210);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v27 - v8;
  v31 = sub_22655C05C();
  v30 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2265333B0(a2);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v2)
  {
    v28 = v6;
    v13 = v29;
    sub_22653D408(v29, (uint64_t)v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v9, 1, v31) == 1)
    {
      sub_22643D7E4((uint64_t)v9, &qword_255849210);
LABEL_6:
      v18 = swift_bridgeObjectRetain();
      v19 = sub_22653D220(v18);
      v20 = v13;
      v21 = (uint64_t)v28;
      sub_22653D408(v20, (uint64_t)v28);
      return sub_226531E14(v21, v19);
    }
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v11, v9, v31);
    v14 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = objc_msgSend(v14, sel_defaultManager);
    sub_22655C038();
    v16 = (void *)sub_22655CD64();
    swift_bridgeObjectRelease();
    v17 = objc_msgSend(v15, sel_fileExistsAtPath_, v16);

    if (v17)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v31);
      v13 = v29;
      goto LABEL_6;
    }
    type metadata accessor for CapturedRoom.ModelProvider.Error();
    sub_226437F28(&qword_25584A630, (uint64_t (*)(uint64_t))type metadata accessor for CapturedRoom.ModelProvider.Error, (uint64_t)&protocol conformance descriptor for CapturedRoom.ModelProvider.Error);
    swift_allocError();
    v23 = v22;
    v24 = v30;
    v25 = v31;
    (*(void (**)(uint64_t, char *, uint64_t))(v30 + 16))(v22, v11, v31);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_25584A628);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v23, 0, 1, v26);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v11, v25);
  }
  return result;
}

uint64_t CapturedRoom.ModelProvider.setModelFileURL(_:for:)(uint64_t a1, char *a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[6];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849210);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v26 - v10;
  v12 = sub_22655C05C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a2;
  sub_22653D408(a1, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_22643D7E4((uint64_t)v11, &qword_255849210);
LABEL_5:
    sub_22653D408(a1, (uint64_t)v8);
    return sub_226531F7C((uint64_t)v8, v16);
  }
  v26[0] = a1;
  v26[2] = v3;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  v26[1] = v2;
  v17 = *v2;
  v18 = v2[1];
  v19 = (void *)objc_opt_self();
  v26[5] = v17;
  swift_bridgeObjectRetain();
  v26[3] = v18;
  swift_bridgeObjectRetain();
  v20 = objc_msgSend(v19, sel_defaultManager);
  sub_22655C038();
  v21 = (void *)sub_22655CD64();
  swift_bridgeObjectRelease();
  LODWORD(v17) = objc_msgSend(v20, sel_fileExistsAtPath_, v21);

  if ((_DWORD)v17)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    a1 = v26[0];
    goto LABEL_5;
  }
  type metadata accessor for CapturedRoom.ModelProvider.Error();
  sub_226437F28(&qword_25584A630, (uint64_t (*)(uint64_t))type metadata accessor for CapturedRoom.ModelProvider.Error, (uint64_t)&protocol conformance descriptor for CapturedRoom.ModelProvider.Error);
  swift_allocError();
  v24 = v23;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v23, v15, v12);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25584A628);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 0, 1, v25);
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

__n128 sub_226533A90()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A700);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_226568E00;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255843B18);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_22655FA80;
  *(_QWORD *)(v1 + 56) = &type metadata for ChairType;
  v2 = sub_2264890BC();
  *(_QWORD *)(v1 + 64) = v2;
  *(_BYTE *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 96) = &type metadata for ChairBackType;
  v3 = sub_226489100();
  *(_QWORD *)(v1 + 104) = v3;
  *(_BYTE *)(v1 + 72) = 0;
  *(_QWORD *)(v1 + 136) = &type metadata for ChairLegType;
  v4 = sub_226489144();
  *(_QWORD *)(v1 + 144) = v4;
  *(_BYTE *)(v1 + 112) = 0;
  *(_QWORD *)(v1 + 176) = &type metadata for ChairArmType;
  v5 = sub_226489188();
  *(_QWORD *)(v1 + 184) = v5;
  *(_BYTE *)(v1 + 152) = 0;
  *(_QWORD *)(v0 + 32) = v1;
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_22655FA80;
  *(_QWORD *)(v6 + 56) = &type metadata for ChairType;
  *(_QWORD *)(v6 + 64) = v2;
  *(_BYTE *)(v6 + 32) = 0;
  *(_QWORD *)(v6 + 96) = &type metadata for ChairBackType;
  *(_QWORD *)(v6 + 104) = v3;
  *(_BYTE *)(v6 + 72) = 0;
  *(_QWORD *)(v6 + 136) = &type metadata for ChairLegType;
  *(_QWORD *)(v6 + 144) = v4;
  *(_BYTE *)(v6 + 112) = 0;
  *(_QWORD *)(v6 + 176) = &type metadata for ChairArmType;
  *(_QWORD *)(v6 + 184) = v5;
  *(_BYTE *)(v6 + 152) = 1;
  *(_QWORD *)(v0 + 40) = v6;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_22655FA80;
  *(_QWORD *)(v7 + 56) = &type metadata for ChairType;
  *(_QWORD *)(v7 + 64) = v2;
  *(_BYTE *)(v7 + 32) = 1;
  *(_QWORD *)(v7 + 96) = &type metadata for ChairBackType;
  *(_QWORD *)(v7 + 104) = v3;
  *(_BYTE *)(v7 + 72) = 1;
  *(_QWORD *)(v7 + 136) = &type metadata for ChairLegType;
  *(_QWORD *)(v7 + 144) = v4;
  *(_BYTE *)(v7 + 112) = 0;
  *(_QWORD *)(v7 + 176) = &type metadata for ChairArmType;
  *(_QWORD *)(v7 + 184) = v5;
  *(_BYTE *)(v7 + 152) = 1;
  *(_QWORD *)(v0 + 48) = v7;
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_22655FA80;
  *(_QWORD *)(v8 + 56) = &type metadata for ChairType;
  *(_QWORD *)(v8 + 64) = v2;
  *(_BYTE *)(v8 + 32) = 1;
  *(_QWORD *)(v8 + 96) = &type metadata for ChairBackType;
  *(_QWORD *)(v8 + 104) = v3;
  *(_BYTE *)(v8 + 72) = 1;
  *(_QWORD *)(v8 + 136) = &type metadata for ChairLegType;
  *(_QWORD *)(v8 + 144) = v4;
  *(_BYTE *)(v8 + 112) = 1;
  *(_QWORD *)(v8 + 176) = &type metadata for ChairArmType;
  *(_QWORD *)(v8 + 184) = v5;
  *(_BYTE *)(v8 + 152) = 1;
  *(_QWORD *)(v0 + 56) = v8;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_22655FA80;
  *(_QWORD *)(v9 + 56) = &type metadata for ChairType;
  *(_QWORD *)(v9 + 64) = v2;
  *(_BYTE *)(v9 + 32) = 1;
  *(_QWORD *)(v9 + 96) = &type metadata for ChairBackType;
  *(_QWORD *)(v9 + 104) = v3;
  *(_BYTE *)(v9 + 72) = 1;
  *(_QWORD *)(v9 + 136) = &type metadata for ChairLegType;
  *(_QWORD *)(v9 + 144) = v4;
  *(_BYTE *)(v9 + 112) = 2;
  *(_QWORD *)(v9 + 176) = &type metadata for ChairArmType;
  *(_QWORD *)(v9 + 184) = v5;
  *(_BYTE *)(v9 + 152) = 1;
  *(_QWORD *)(v0 + 64) = v9;
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_22655FA80;
  *(_QWORD *)(v10 + 56) = &type metadata for ChairType;
  *(_QWORD *)(v10 + 64) = v2;
  *(_BYTE *)(v10 + 32) = 1;
  *(_QWORD *)(v10 + 96) = &type metadata for ChairBackType;
  *(_QWORD *)(v10 + 104) = v3;
  *(_BYTE *)(v10 + 72) = 1;
  *(_QWORD *)(v10 + 136) = &type metadata for ChairLegType;
  *(_QWORD *)(v10 + 144) = v4;
  *(_BYTE *)(v10 + 112) = 0;
  *(_QWORD *)(v10 + 176) = &type metadata for ChairArmType;
  *(_QWORD *)(v10 + 184) = v5;
  *(_BYTE *)(v10 + 152) = 0;
  *(_QWORD *)(v0 + 72) = v10;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_22655FA80;
  *(_QWORD *)(v11 + 56) = &type metadata for ChairType;
  *(_QWORD *)(v11 + 64) = v2;
  *(_BYTE *)(v11 + 32) = 1;
  *(_QWORD *)(v11 + 96) = &type metadata for ChairBackType;
  *(_QWORD *)(v11 + 104) = v3;
  *(_BYTE *)(v11 + 72) = 1;
  *(_QWORD *)(v11 + 136) = &type metadata for ChairLegType;
  *(_QWORD *)(v11 + 144) = v4;
  *(_BYTE *)(v11 + 112) = 1;
  *(_QWORD *)(v11 + 176) = &type metadata for ChairArmType;
  *(_QWORD *)(v11 + 184) = v5;
  *(_BYTE *)(v11 + 152) = 0;
  *(_QWORD *)(v0 + 80) = v11;
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_22655FA80;
  *(_QWORD *)(v12 + 56) = &type metadata for ChairType;
  *(_QWORD *)(v12 + 64) = v2;
  *(_BYTE *)(v12 + 32) = 1;
  *(_QWORD *)(v12 + 96) = &type metadata for ChairBackType;
  *(_QWORD *)(v12 + 104) = v3;
  *(_BYTE *)(v12 + 72) = 1;
  *(_QWORD *)(v12 + 136) = &type metadata for ChairLegType;
  *(_QWORD *)(v12 + 144) = v4;
  *(_BYTE *)(v12 + 112) = 2;
  *(_QWORD *)(v12 + 176) = &type metadata for ChairArmType;
  *(_QWORD *)(v12 + 184) = v5;
  *(_BYTE *)(v12 + 152) = 0;
  *(_QWORD *)(v0 + 88) = v12;
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_22655FA80;
  *(_QWORD *)(v13 + 56) = &type metadata for ChairType;
  *(_QWORD *)(v13 + 64) = v2;
  *(_BYTE *)(v13 + 32) = 2;
  *(_QWORD *)(v13 + 96) = &type metadata for ChairBackType;
  *(_QWORD *)(v13 + 104) = v3;
  *(_BYTE *)(v13 + 72) = 0;
  *(_QWORD *)(v13 + 136) = &type metadata for ChairLegType;
  *(_QWORD *)(v13 + 144) = v4;
  *(_BYTE *)(v13 + 112) = 1;
  *(_QWORD *)(v13 + 176) = &type metadata for ChairArmType;
  *(_QWORD *)(v13 + 184) = v5;
  *(_BYTE *)(v13 + 152) = 0;
  *(_QWORD *)(v0 + 96) = v13;
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_22655FA80;
  *(_QWORD *)(v14 + 56) = &type metadata for ChairType;
  *(_QWORD *)(v14 + 64) = v2;
  *(_BYTE *)(v14 + 32) = 2;
  *(_QWORD *)(v14 + 96) = &type metadata for ChairBackType;
  *(_QWORD *)(v14 + 104) = v3;
  *(_BYTE *)(v14 + 72) = 0;
  *(_QWORD *)(v14 + 136) = &type metadata for ChairLegType;
  *(_QWORD *)(v14 + 144) = v4;
  *(_BYTE *)(v14 + 112) = 1;
  *(_QWORD *)(v14 + 176) = &type metadata for ChairArmType;
  *(_QWORD *)(v14 + 184) = v5;
  *(_BYTE *)(v14 + 152) = 1;
  *(_QWORD *)(v0 + 104) = v14;
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_22655FA80;
  *(_QWORD *)(v15 + 56) = &type metadata for ChairType;
  *(_QWORD *)(v15 + 64) = v2;
  *(_BYTE *)(v15 + 32) = 3;
  *(_QWORD *)(v15 + 96) = &type metadata for ChairBackType;
  *(_QWORD *)(v15 + 104) = v3;
  *(_BYTE *)(v15 + 72) = 0;
  *(_QWORD *)(v15 + 136) = &type metadata for ChairLegType;
  *(_QWORD *)(v15 + 144) = v4;
  *(_BYTE *)(v15 + 112) = 0;
  *(_QWORD *)(v15 + 176) = &type metadata for ChairArmType;
  *(_QWORD *)(v15 + 184) = v5;
  *(_BYTE *)(v15 + 152) = 0;
  *(_QWORD *)(v0 + 112) = v15;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_22655FA80;
  *(_QWORD *)(v16 + 56) = &type metadata for ChairType;
  *(_QWORD *)(v16 + 64) = v2;
  *(_BYTE *)(v16 + 32) = 3;
  *(_QWORD *)(v16 + 96) = &type metadata for ChairBackType;
  *(_QWORD *)(v16 + 104) = v3;
  *(_BYTE *)(v16 + 72) = 0;
  *(_QWORD *)(v16 + 136) = &type metadata for ChairLegType;
  *(_QWORD *)(v16 + 144) = v4;
  *(_BYTE *)(v16 + 112) = 0;
  *(_QWORD *)(v16 + 176) = &type metadata for ChairArmType;
  *(_QWORD *)(v16 + 184) = v5;
  *(_BYTE *)(v16 + 152) = 1;
  *(_QWORD *)(v0 + 120) = v16;
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_22655FA80;
  *(_QWORD *)(v17 + 56) = &type metadata for ChairType;
  *(_QWORD *)(v17 + 64) = v2;
  *(_BYTE *)(v17 + 32) = 3;
  *(_QWORD *)(v17 + 96) = &type metadata for ChairBackType;
  *(_QWORD *)(v17 + 104) = v3;
  *(_BYTE *)(v17 + 72) = 0;
  *(_QWORD *)(v17 + 136) = &type metadata for ChairLegType;
  *(_QWORD *)(v17 + 144) = v4;
  *(_BYTE *)(v17 + 112) = 1;
  *(_QWORD *)(v17 + 176) = &type metadata for ChairArmType;
  *(_QWORD *)(v17 + 184) = v5;
  *(_BYTE *)(v17 + 152) = 0;
  *(_QWORD *)(v0 + 128) = v17;
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_22655FA80;
  *(_QWORD *)(v18 + 56) = &type metadata for ChairType;
  *(_QWORD *)(v18 + 64) = v2;
  *(_BYTE *)(v18 + 32) = 3;
  *(_QWORD *)(v18 + 96) = &type metadata for ChairBackType;
  *(_QWORD *)(v18 + 104) = v3;
  *(_BYTE *)(v18 + 72) = 0;
  *(_QWORD *)(v18 + 136) = &type metadata for ChairLegType;
  *(_QWORD *)(v18 + 144) = v4;
  *(_BYTE *)(v18 + 112) = 1;
  *(_QWORD *)(v18 + 176) = &type metadata for ChairArmType;
  *(_QWORD *)(v18 + 184) = v5;
  *(_BYTE *)(v18 + 152) = 1;
  *(_QWORD *)(v0 + 136) = v18;
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_22655FA80;
  *(_QWORD *)(v19 + 56) = &type metadata for ChairType;
  *(_QWORD *)(v19 + 64) = v2;
  *(_BYTE *)(v19 + 32) = 3;
  *(_QWORD *)(v19 + 96) = &type metadata for ChairBackType;
  *(_QWORD *)(v19 + 104) = v3;
  *(_BYTE *)(v19 + 72) = 0;
  *(_QWORD *)(v19 + 136) = &type metadata for ChairLegType;
  *(_QWORD *)(v19 + 144) = v4;
  *(_BYTE *)(v19 + 112) = 2;
  *(_QWORD *)(v19 + 176) = &type metadata for ChairArmType;
  *(_QWORD *)(v19 + 184) = v5;
  *(_BYTE *)(v19 + 152) = 0;
  *(_QWORD *)(v0 + 144) = v19;
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_22655FA80;
  *(_QWORD *)(v20 + 56) = &type metadata for ChairType;
  *(_QWORD *)(v20 + 64) = v2;
  *(_BYTE *)(v20 + 32) = 3;
  *(_QWORD *)(v20 + 96) = &type metadata for ChairBackType;
  *(_QWORD *)(v20 + 104) = v3;
  *(_BYTE *)(v20 + 72) = 0;
  *(_QWORD *)(v20 + 136) = &type metadata for ChairLegType;
  *(_QWORD *)(v20 + 144) = v4;
  *(_BYTE *)(v20 + 112) = 2;
  *(_QWORD *)(v20 + 176) = &type metadata for ChairArmType;
  *(_QWORD *)(v20 + 184) = v5;
  *(_BYTE *)(v20 + 152) = 1;
  *(_QWORD *)(v0 + 152) = v20;
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_22655FA80;
  *(_QWORD *)(v21 + 56) = &type metadata for ChairType;
  *(_QWORD *)(v21 + 64) = v2;
  *(_BYTE *)(v21 + 32) = 3;
  *(_QWORD *)(v21 + 96) = &type metadata for ChairBackType;
  *(_QWORD *)(v21 + 104) = v3;
  *(_BYTE *)(v21 + 72) = 1;
  *(_QWORD *)(v21 + 136) = &type metadata for ChairLegType;
  *(_QWORD *)(v21 + 144) = v4;
  *(_BYTE *)(v21 + 112) = 0;
  *(_QWORD *)(v21 + 176) = &type metadata for ChairArmType;
  *(_QWORD *)(v21 + 184) = v5;
  *(_BYTE *)(v21 + 152) = 0;
  *(_QWORD *)(v0 + 160) = v21;
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_22655FA80;
  *(_QWORD *)(v22 + 56) = &type metadata for ChairType;
  *(_QWORD *)(v22 + 64) = v2;
  *(_BYTE *)(v22 + 32) = 3;
  *(_QWORD *)(v22 + 96) = &type metadata for ChairBackType;
  *(_QWORD *)(v22 + 104) = v3;
  *(_BYTE *)(v22 + 72) = 1;
  *(_QWORD *)(v22 + 136) = &type metadata for ChairLegType;
  *(_QWORD *)(v22 + 144) = v4;
  *(_BYTE *)(v22 + 112) = 0;
  *(_QWORD *)(v22 + 176) = &type metadata for ChairArmType;
  *(_QWORD *)(v22 + 184) = v5;
  *(_BYTE *)(v22 + 152) = 1;
  *(_QWORD *)(v0 + 168) = v22;
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_22655FA80;
  *(_QWORD *)(v23 + 56) = &type metadata for ChairType;
  *(_QWORD *)(v23 + 64) = v2;
  *(_BYTE *)(v23 + 32) = 3;
  *(_QWORD *)(v23 + 96) = &type metadata for ChairBackType;
  *(_QWORD *)(v23 + 104) = v3;
  *(_BYTE *)(v23 + 72) = 1;
  *(_QWORD *)(v23 + 136) = &type metadata for ChairLegType;
  *(_QWORD *)(v23 + 144) = v4;
  *(_BYTE *)(v23 + 112) = 1;
  *(_QWORD *)(v23 + 176) = &type metadata for ChairArmType;
  *(_QWORD *)(v23 + 184) = v5;
  *(_BYTE *)(v23 + 152) = 0;
  *(_QWORD *)(v0 + 176) = v23;
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_22655FA80;
  *(_QWORD *)(v24 + 56) = &type metadata for ChairType;
  *(_QWORD *)(v24 + 64) = v2;
  *(_BYTE *)(v24 + 32) = 3;
  *(_QWORD *)(v24 + 96) = &type metadata for ChairBackType;
  *(_QWORD *)(v24 + 104) = v3;
  *(_BYTE *)(v24 + 72) = 1;
  *(_QWORD *)(v24 + 136) = &type metadata for ChairLegType;
  *(_QWORD *)(v24 + 144) = v4;
  *(_BYTE *)(v24 + 112) = 1;
  *(_QWORD *)(v24 + 176) = &type metadata for ChairArmType;
  *(_QWORD *)(v24 + 184) = v5;
  *(_BYTE *)(v24 + 152) = 1;
  *(_QWORD *)(v0 + 184) = v24;
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_22655FA80;
  *(_QWORD *)(v25 + 56) = &type metadata for ChairType;
  *(_QWORD *)(v25 + 64) = v2;
  *(_BYTE *)(v25 + 32) = 3;
  *(_QWORD *)(v25 + 96) = &type metadata for ChairBackType;
  *(_QWORD *)(v25 + 104) = v3;
  *(_BYTE *)(v25 + 72) = 1;
  *(_QWORD *)(v25 + 136) = &type metadata for ChairLegType;
  *(_QWORD *)(v25 + 144) = v4;
  *(_BYTE *)(v25 + 112) = 2;
  *(_QWORD *)(v25 + 176) = &type metadata for ChairArmType;
  *(_QWORD *)(v25 + 184) = v5;
  *(_BYTE *)(v25 + 152) = 0;
  *(_QWORD *)(v0 + 192) = v25;
  v26 = swift_allocObject();
  result = (__n128)xmmword_22655FA80;
  *(_OWORD *)(v26 + 16) = xmmword_22655FA80;
  *(_QWORD *)(v26 + 56) = &type metadata for ChairType;
  *(_QWORD *)(v26 + 64) = v2;
  *(_BYTE *)(v26 + 32) = 3;
  *(_QWORD *)(v26 + 96) = &type metadata for ChairBackType;
  *(_QWORD *)(v26 + 104) = v3;
  *(_BYTE *)(v26 + 72) = 1;
  *(_QWORD *)(v26 + 136) = &type metadata for ChairLegType;
  *(_QWORD *)(v26 + 144) = v4;
  *(_BYTE *)(v26 + 112) = 2;
  *(_QWORD *)(v26 + 176) = &type metadata for ChairArmType;
  *(_QWORD *)(v26 + 184) = v5;
  *(_BYTE *)(v26 + 152) = 1;
  *(_QWORD *)(v0 + 200) = v26;
  qword_25584A600 = v0;
  return result;
}

__n128 sub_2265341F0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A700);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_226567010;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255843B18);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_22655F8F0;
  *(_QWORD *)(v1 + 56) = &type metadata for SofaType;
  v2 = sub_226489078();
  *(_QWORD *)(v1 + 64) = v2;
  *(_BYTE *)(v1 + 32) = 0;
  *(_QWORD *)(v0 + 32) = v1;
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_22655F8F0;
  *(_QWORD *)(v3 + 56) = &type metadata for SofaType;
  *(_QWORD *)(v3 + 64) = v2;
  *(_BYTE *)(v3 + 32) = 1;
  *(_QWORD *)(v0 + 40) = v3;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_22655F8F0;
  *(_QWORD *)(v4 + 56) = &type metadata for SofaType;
  *(_QWORD *)(v4 + 64) = v2;
  *(_BYTE *)(v4 + 32) = 2;
  *(_QWORD *)(v0 + 48) = v4;
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22655F8F0;
  *(_QWORD *)(v5 + 56) = &type metadata for SofaType;
  *(_QWORD *)(v5 + 64) = v2;
  *(_BYTE *)(v5 + 32) = 3;
  *(_QWORD *)(v0 + 56) = v5;
  v6 = swift_allocObject();
  result = (__n128)xmmword_22655F8F0;
  *(_OWORD *)(v6 + 16) = xmmword_22655F8F0;
  *(_QWORD *)(v6 + 56) = &type metadata for SofaType;
  *(_QWORD *)(v6 + 64) = v2;
  *(_BYTE *)(v6 + 32) = 4;
  *(_QWORD *)(v0 + 64) = v6;
  qword_25584A608 = v0;
  return result;
}

__n128 sub_226534340()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A700);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_226568E10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255843B18);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_22655FA10;
  *(_QWORD *)(v1 + 56) = &type metadata for TableType;
  v2 = sub_226488FF0();
  *(_QWORD *)(v1 + 64) = v2;
  *(_BYTE *)(v1 + 32) = 1;
  *(_QWORD *)(v1 + 96) = &type metadata for TableShapeType;
  v3 = sub_226489034();
  *(_QWORD *)(v1 + 104) = v3;
  *(_BYTE *)(v1 + 72) = 0;
  *(_QWORD *)(v0 + 32) = v1;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_22655FA10;
  *(_QWORD *)(v4 + 56) = &type metadata for TableType;
  *(_QWORD *)(v4 + 64) = v2;
  *(_BYTE *)(v4 + 32) = 1;
  *(_QWORD *)(v4 + 96) = &type metadata for TableShapeType;
  *(_QWORD *)(v4 + 104) = v3;
  *(_BYTE *)(v4 + 72) = 1;
  *(_QWORD *)(v0 + 40) = v4;
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22655FA10;
  *(_QWORD *)(v5 + 56) = &type metadata for TableType;
  *(_QWORD *)(v5 + 64) = v2;
  *(_BYTE *)(v5 + 32) = 1;
  *(_QWORD *)(v5 + 96) = &type metadata for TableShapeType;
  *(_QWORD *)(v5 + 104) = v3;
  *(_BYTE *)(v5 + 72) = 3;
  *(_QWORD *)(v0 + 48) = v5;
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_22655FA10;
  *(_QWORD *)(v6 + 56) = &type metadata for TableType;
  *(_QWORD *)(v6 + 64) = v2;
  *(_BYTE *)(v6 + 32) = 0;
  *(_QWORD *)(v6 + 96) = &type metadata for TableShapeType;
  *(_QWORD *)(v6 + 104) = v3;
  *(_BYTE *)(v6 + 72) = 0;
  *(_QWORD *)(v0 + 56) = v6;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_22655FA10;
  *(_QWORD *)(v7 + 56) = &type metadata for TableType;
  *(_QWORD *)(v7 + 64) = v2;
  *(_BYTE *)(v7 + 32) = 0;
  *(_QWORD *)(v7 + 96) = &type metadata for TableShapeType;
  *(_QWORD *)(v7 + 104) = v3;
  *(_BYTE *)(v7 + 72) = 1;
  *(_QWORD *)(v0 + 64) = v7;
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_22655FA10;
  *(_QWORD *)(v8 + 56) = &type metadata for TableType;
  *(_QWORD *)(v8 + 64) = v2;
  *(_BYTE *)(v8 + 32) = 0;
  *(_QWORD *)(v8 + 96) = &type metadata for TableShapeType;
  *(_QWORD *)(v8 + 104) = v3;
  *(_BYTE *)(v8 + 72) = 2;
  *(_QWORD *)(v0 + 72) = v8;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_22655FA10;
  *(_QWORD *)(v9 + 56) = &type metadata for TableType;
  *(_QWORD *)(v9 + 64) = v2;
  *(_BYTE *)(v9 + 32) = 0;
  *(_QWORD *)(v9 + 96) = &type metadata for TableShapeType;
  *(_QWORD *)(v9 + 104) = v3;
  *(_BYTE *)(v9 + 72) = 3;
  *(_QWORD *)(v0 + 80) = v9;
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_22655FA10;
  *(_QWORD *)(v10 + 56) = &type metadata for TableType;
  *(_QWORD *)(v10 + 64) = v2;
  *(_BYTE *)(v10 + 32) = 2;
  *(_QWORD *)(v10 + 96) = &type metadata for TableShapeType;
  *(_QWORD *)(v10 + 104) = v3;
  *(_BYTE *)(v10 + 72) = 0;
  *(_QWORD *)(v0 + 88) = v10;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_22655FA10;
  *(_QWORD *)(v11 + 56) = &type metadata for TableType;
  *(_QWORD *)(v11 + 64) = v2;
  *(_BYTE *)(v11 + 32) = 2;
  *(_QWORD *)(v11 + 96) = &type metadata for TableShapeType;
  *(_QWORD *)(v11 + 104) = v3;
  *(_BYTE *)(v11 + 72) = 1;
  *(_QWORD *)(v0 + 96) = v11;
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_22655FA10;
  *(_QWORD *)(v12 + 56) = &type metadata for TableType;
  *(_QWORD *)(v12 + 64) = v2;
  *(_BYTE *)(v12 + 32) = 2;
  *(_QWORD *)(v12 + 96) = &type metadata for TableShapeType;
  *(_QWORD *)(v12 + 104) = v3;
  *(_BYTE *)(v12 + 72) = 2;
  *(_QWORD *)(v0 + 104) = v12;
  v13 = swift_allocObject();
  result = (__n128)xmmword_22655FA10;
  *(_OWORD *)(v13 + 16) = xmmword_22655FA10;
  *(_QWORD *)(v13 + 56) = &type metadata for TableType;
  *(_QWORD *)(v13 + 64) = v2;
  *(_BYTE *)(v13 + 32) = 2;
  *(_QWORD *)(v13 + 96) = &type metadata for TableShapeType;
  *(_QWORD *)(v13 + 104) = v3;
  *(_BYTE *)(v13 + 72) = 3;
  *(_QWORD *)(v0 + 112) = v13;
  qword_25584A610 = v0;
  return result;
}

__n128 sub_2265345E0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  __n128 result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A700);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_22655FA10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255843B18);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_22655F8F0;
  *(_QWORD *)(v1 + 56) = &type metadata for StorageType;
  v2 = sub_226488FAC();
  *(_QWORD *)(v1 + 64) = v2;
  *(_BYTE *)(v1 + 32) = 0;
  *(_QWORD *)(v0 + 32) = v1;
  v3 = swift_allocObject();
  result = (__n128)xmmword_22655F8F0;
  *(_OWORD *)(v3 + 16) = xmmword_22655F8F0;
  *(_QWORD *)(v3 + 56) = &type metadata for StorageType;
  *(_QWORD *)(v3 + 64) = v2;
  *(_BYTE *)(v3 + 32) = 1;
  *(_QWORD *)(v0 + 40) = v3;
  qword_25584A618 = v0;
  return result;
}

void CapturedRoom.Object.Category.supportedCombinations.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_2265346EC()
{
  if (qword_25583F9B8 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

unint64_t sub_2265347C8(uint64_t a1)
{
  uint64_t v2;

  type metadata accessor for ScanEntity();
  sub_226437F28(&qword_25584A6B8, (uint64_t (*)(uint64_t))type metadata accessor for ScanEntity, MEMORY[0x24BDE71F8]);
  v2 = sub_22655CCD4();
  return sub_226534F44(a1, v2);
}

unint64_t sub_226534858(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_22655C140();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  sub_226437F28(&qword_2558436F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v3 = sub_22655CCD4();
  return sub_226535868(a1, v3, v2, (unint64_t *)&qword_255840120, MEMORY[0x24BDCEA98]);
}

unint64_t sub_2265348F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_22655D640();
  sub_22655CE00();
  v4 = sub_22655D670();
  return sub_226535024(a1, a2, v4);
}

unint64_t sub_226534954(uint64_t a1)
{
  uint64_t v2;

  sub_22655D640();
  sub_22655C11C();
  v2 = sub_22655D670();
  return sub_226535104(a1, v2);
}

unint64_t sub_2265349B8(float32x2_t a1)
{
  uint64_t v2;

  sub_22655D640();
  sub_2264968C4();
  v2 = sub_22655D670();
  return sub_22653521C(v2, a1);
}

unint64_t sub_226534A10(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_22655D634();
  return sub_226535294(a1, v2);
}

unint64_t sub_226534A40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_22655D640();
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = 0;
    do
    {
      ++v3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2558443D0);
      sub_22655D5EC();
      sub_22655D64C();
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
  }
  v4 = sub_22655D670();
  return sub_226535330(a1, v4);
}

unint64_t sub_226534B00(int32x2_t a1)
{
  uint64_t v1;

  sub_22655D640();
  sub_22655D664();
  sub_22655D664();
  v1 = sub_22655D670();
  return sub_2265353F8(v1, a1);
}

unint64_t sub_226534B60(unsigned __int8 a1)
{
  uint64_t v2;

  sub_22655D640();
  sub_22655D64C();
  v2 = sub_22655D670();
  return sub_226535470(a1, v2);
}

void sub_226534BC4(char a1)
{
  sub_22655D640();
  __asm { BR              X10 }
}

uint64_t sub_226534C20()
{
  uint64_t v0;
  uint64_t v1;

  sub_22655CE00();
  swift_bridgeObjectRelease();
  v1 = sub_22655D670();
  return sub_226535510(v0, v1);
}

unint64_t sub_226534CD0(uint64_t a1)
{
  uint64_t v2;
  __int128 v4[4];

  sub_22655D640();
  sub_22654ABAC(v4, a1);
  v2 = sub_22655D670();
  return sub_226535768(a1, v2);
}

unint64_t sub_226534D28(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_22655C05C();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0];
  sub_226437F28(&qword_25584A8F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  v3 = sub_22655CCD4();
  return sub_226535868(a1, v3, v2, &qword_25584A6F0, MEMORY[0x24BDCDB00]);
}

unint64_t sub_226534DC0(uint64_t a1)
{
  uint64_t v2;

  sub_22655D640();
  type metadata accessor for CFString(0);
  sub_226437F28(&qword_25584A6D8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_22655F878);
  sub_22655C920();
  v2 = sub_22655D670();
  return sub_226535998(a1, v2);
}

unint64_t sub_226534E48(uint64_t a1)
{
  uint64_t v2;

  sub_22655D640();
  sub_22655CFC8();
  sub_22655D64C();
  sub_22655CFC8();
  sub_22655D64C();
  sub_22655D67C();
  sub_22655D64C();
  v2 = sub_22655D670();
  return sub_226535AD8(a1, v2);
}

unint64_t sub_226534EC4(uint64_t a1)
{
  uint64_t v2;

  sub_22655CD88();
  sub_22655D640();
  sub_22655CE00();
  v2 = sub_22655D670();
  swift_bridgeObjectRelease();
  return sub_226535B70(a1, v2);
}

unint64_t sub_226534F44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    type metadata accessor for ScanEntity();
    sub_226437F28(&qword_25584A6C0, (uint64_t (*)(uint64_t))type metadata accessor for ScanEntity, MEMORY[0x24BDE7200]);
    do
    {
      if ((sub_22655CD04() & 1) != 0)
        break;
      v4 = (v4 + 1) & v5;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_226535024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_22655D55C() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_22655D55C() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_226535104(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v11;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    v11 = OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type;
    do
    {
      v7 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v4);
      swift_retain();
      if ((sub_22655C104() & 1) != 0)
      {
        v8 = *(unsigned __int8 *)(v7 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
        v9 = *(unsigned __int8 *)(a1 + v11);
        swift_release();
        if (v8 == v9)
          return v4;
      }
      else
      {
        swift_release();
      }
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_22653521C(uint64_t a1, float32x2_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t result;
  uint64_t v5;
  int32x2_t v6;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  result = a1 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v5 = ~v3;
    do
    {
      v6 = vceq_f32(*(float32x2_t *)(*(_QWORD *)(v2 + 48) + 8 * result), a2);
      if ((v6.i8[0] & v6.i8[4] & 1) != 0)
        break;
      result = (result + 1) & v5;
    }
    while (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_226535294(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_226535330(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  float32x2_t *v7;
  float32x2_t v8;
  float32x2_t *v9;
  float32x2_t *v10;
  float32x2_t *v11;
  float32x2_t v12;
  int32x2_t v13;

  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = ~v4;
    v7 = *(float32x2_t **)(a1 + 48);
    v8 = v7[2];
    do
    {
      v9 = *(float32x2_t **)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * result) + 48);
      if (*(_QWORD *)&v9[2] == *(_QWORD *)&v8)
      {
        if (!*(_QWORD *)&v8 || v9 == v7)
          return result;
        v10 = v9 + 4;
        v11 = v7 + 4;
        v12 = v7[2];
        while (1)
        {
          v13 = vceq_f32(*v10, *v11);
          if ((v13.i32[0] & v13.i32[1] & 1) == 0)
            break;
          ++v10;
          ++v11;
          if (!--*(_QWORD *)&v12)
            return result;
        }
      }
      result = (result + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_2265353F8(uint64_t a1, int32x2_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t result;
  uint64_t v5;
  int32x2_t v6;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  result = a1 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v5 = ~v3;
    do
    {
      v6 = vceq_s32(*(int32x2_t *)(*(_QWORD *)(v2 + 48) + 8 * result), a2);
      if ((v6.i8[0] & v6.i8[4] & 1) != 0)
        break;
      result = (result + 1) & v5;
    }
    while (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_226535470(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_226535510(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_226535768(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v7 = swift_bridgeObjectRetain();
    v8 = sub_22653CAC0(v7, a1);
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = swift_bridgeObjectRetain();
        v11 = sub_22653CAC0(v10, a1);
        swift_bridgeObjectRelease();
        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_226535868(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  char v17;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  unint64_t *v21;
  uint64_t v22;

  v21 = a4;
  v22 = a5;
  v6 = v5;
  v19 = a1;
  v20 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8]();
  v11 = (char *)&v19 - v10;
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = a2 & ~v12;
  if (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v12;
    v15 = *(_QWORD *)(v9 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    do
    {
      v16(v11, *(_QWORD *)(v6 + 48) + v15 * v13, v8);
      sub_226437F28(v21, v20, v22);
      v17 = sub_22655CD04();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_226535998(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    type metadata accessor for CFString(0);
    v6 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * i);
    sub_226437F28(&qword_25584A6D8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_22655F878);
    v7 = v6;
    v8 = sub_22655C914();

    if ((v8 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v11 = sub_22655C914();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_226535AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;

  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = ~v4;
    do
    {
      v7 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * result);
      if (*(_QWORD *)(v7 + 16) == *(_QWORD *)(a1 + 16)
        && *(_QWORD *)(v7 + 24) == *(_QWORD *)(a1 + 24)
        && *(_DWORD *)(v7 + 32) == *(_DWORD *)(a1 + 32))
      {
        break;
      }
      result = (result + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_226535B70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_22655CD88();
    v8 = v7;
    if (v6 == sub_22655CD88() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_22655D55C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_22655CD88();
          v15 = v14;
          if (v13 == sub_22655CD88() && v15 == v16)
            break;
          v18 = sub_22655D55C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_226535CE4()
{
  unint64_t result;

  result = qword_25584A620;
  if (!qword_25584A620)
  {
    result = MEMORY[0x22769A794](&unk_226561CD4, &type metadata for AnyCapturedRoomAttribute);
    atomic_store(result, (unint64_t *)&qword_25584A620);
  }
  return result;
}

_QWORD *sub_226535D28(unint64_t a1)
{
  return sub_226535F78(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_22646C0CC);
}

_QWORD *sub_226535D34(unint64_t a1)
{
  return sub_226535F78(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_22646C0F0);
}

_QWORD *sub_226535D40(unint64_t a1)
{
  return sub_226535F78(a1, MEMORY[0x24BEE2640]);
}

_QWORD *sub_226535D4C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255841D18);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  v6 = sub_22653B8BC(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_22646C924();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_226535E30(uint64_t a1)
{
  return sub_226536184(a1, &qword_255841D18, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_22653BA50);
}

_QWORD *sub_226535E44(uint64_t a1)
{
  return sub_226535E74(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_22653BBE4);
}

_QWORD *sub_226535E50(unint64_t a1)
{
  return sub_226535F78(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_22646C31C);
}

_QWORD *sub_226535E5C(unint64_t a1)
{
  return sub_226535F78(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_22646C340);
}

_QWORD *sub_226535E68(uint64_t a1)
{
  return sub_226535E74(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_22653BDDC);
}

_QWORD *sub_226535E74(uint64_t a1, uint64_t (*a2)(uint64_t *, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v2;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255849180);
  v5 = (_QWORD *)swift_allocObject();
  v6 = _swift_stdlib_malloc_size(v5);
  v7 = v6 - 32;
  if (v6 < 32)
    v7 = v6 - 25;
  v5[2] = v2;
  v5[3] = (2 * (v7 >> 3)) | 1;
  v8 = a2(&v10, v5 + 4, v2, a1);
  swift_bridgeObjectRetain();
  sub_22646C924();
  if (v8 != v2)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v5;
}

_QWORD *sub_226535F60(unint64_t a1)
{
  return sub_226535F78(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_22646C364);
}

_QWORD *sub_226535F6C(unint64_t a1)
{
  return sub_226535F78(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_22646C388);
}

_QWORD *sub_226535F78(unint64_t a1, void (*a2)(_QWORD *, uint64_t, unint64_t))
{
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *, uint64_t, unint64_t);

  if (a1 >> 62)
    goto LABEL_10;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v4 <= 0)
    {
      v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255849180);
      v5 = (_QWORD *)swift_allocObject();
      v6 = _swift_stdlib_malloc_size(v5);
      v7 = v6 - 32;
      if (v6 < 32)
        v7 = v6 - 25;
      v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(_QWORD *, uint64_t, unint64_t))v4)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v4 = sub_22655D400();
    swift_bridgeObjectRelease();
    if (!v4)
      return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v5;
}

size_t sub_226536078(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255843A20);
  v3 = *(_QWORD *)(sub_22655C140() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      sub_22653BFD4(&v11, (char *)v6 + v5, v1, a1);
      v10 = v9;
      sub_22646C924();
      if (v10 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_226536170(uint64_t a1)
{
  return sub_226536184(a1, &qword_255844B60, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_22653C324);
}

_QWORD *sub_226536184(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t *, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v3;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = (_QWORD *)swift_allocObject();
  v7 = _swift_stdlib_malloc_size(v6);
  v8 = v7 - 32;
  if (v7 < 32)
    v8 = v7 - 25;
  v6[2] = v3;
  v6[3] = 2 * (v8 >> 3);
  v9 = a3(&v11, v6 + 4, v3, a1);
  swift_bridgeObjectRetain();
  sub_22646C924();
  if (v9 != v3)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v6;
}

uint64_t sub_226536268(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x24BEE4AF8];
    v8 = 16 * v5;
    if (v5 <= 0)
    {
      v9 = (char *)MEMORY[0x24BEE4AF8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = v9 + 32;
        v13 = (char *)(a2 + 16 * a3);
        if (v13 < &v9[v8 + 32] && v12 < &v13[v8])
          goto LABEL_19;
        memcpy(v12, v13, 16 * v5);
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255840A78);
      v9 = (char *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 17;
      *((_QWORD *)v9 + 2) = v5;
      *((_QWORD *)v9 + 3) = 2 * (v11 >> 4);
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_22655D43C();
  __break(1u);
  return result;
}

size_t sub_2265363D0(uint64_t a1)
{
  return sub_2265363F8(a1, &qword_2558439F8, type metadata accessor for CapturedRoom.Surface);
}

size_t sub_2265363E4(uint64_t a1)
{
  return sub_2265363F8(a1, &qword_255843A10, type metadata accessor for CapturedRoom.Object);
}

size_t sub_2265363F8(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  size_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = *(_QWORD *)(a3(0) - 8);
  v7 = *(_QWORD *)(v6 + 72);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v9);
  if (v7)
  {
    if (result - v8 != 0x8000000000000000 || v7 != -1)
    {
      v9[2] = v3;
      v9[3] = 2 * ((uint64_t)(result - v8) / v7);
      sub_22653C4B8(&v14, (uint64_t)v9 + v8, v3, a1, a3);
      v13 = v12;
      swift_bridgeObjectRetain();
      sub_22646C924();
      if (v13 == v3)
        return (size_t)v9;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

size_t sub_226536514(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A708);
  v3 = *(_QWORD *)(sub_22655C05C() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      sub_22653C770(&v11, (char *)v6 + v5, v1, a1);
      v10 = v9;
      sub_22646C924();
      if (v10 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_22653660C(float *a1, float a2)
{
  uint64_t *v2;
  uint64_t *v3;
  float v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  float v12;
  uint64_t result;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;

  v3 = v2;
  v4 = a2;
  v6 = *v2;
  if ((LODWORD(a2) & 0x7FFFFFFF) != 0)
    v7 = LODWORD(a2);
  else
    v7 = 0;
  v8 = MEMORY[0x227699D08](*(_QWORD *)(v6 + 40), v7, 4);
  v9 = -1 << *(_BYTE *)(v6 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_11:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *v3;
    *v3 = 0x8000000000000000;
    sub_226538DA8(v10, isUniquelyReferenced_nonNull_native, v4);
    *v3 = v16;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_12;
  }
  v11 = *(_QWORD *)(v6 + 48);
  v12 = *(float *)(v11 + 4 * v10);
  if (v12 != v4)
  {
    v14 = ~v9;
    do
    {
      v10 = (v10 + 1) & v14;
      if (((*(_QWORD *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_11;
      v12 = *(float *)(v11 + 4 * v10);
    }
    while (v12 != v4);
  }
  result = 0;
  v4 = v12;
LABEL_12:
  *a1 = v4;
  return result;
}

uint64_t sub_22653671C(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t *v18;
  int v19;
  BOOL v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
    v8 = sub_22655D280();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for HullPointUUID();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_22655D274();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v23 = sub_22653758C(v7, result + 1);
    v30 = v23;
    if (*(_QWORD *)(v23 + 24) <= *(_QWORD *)(v23 + 16))
    {
      swift_retain();
      sub_226537B4C();
      v24 = v30;
    }
    else
    {
      v24 = v23;
      swift_retain();
    }
    sub_226538AA0(a2, v24);
    *v3 = v24;
    swift_bridgeObjectRelease();
    *a1 = a2;
  }
  else
  {
    v25 = v2;
    sub_22655D640();
    v10 = &OBJC_IVAR____TtC8RoomPlan13HullPointUUID_uuid;
    v27 = a2;
    swift_bridgeObjectRetain();
    sub_22655C11C();
    v11 = sub_22655D670();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      v14 = ~v12;
      v15 = OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type;
      do
      {
        v16 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        swift_retain();
        if ((sub_22655C104() & 1) != 0)
        {
          v17 = *(unsigned __int8 *)(v16 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
          v18 = v10;
          v19 = *(unsigned __int8 *)(v27 + v15);
          swift_release();
          v20 = v17 == v19;
          v10 = v18;
          if (v20)
          {
            swift_release();
            swift_bridgeObjectRelease();
            *a1 = *(_QWORD *)(*(_QWORD *)(*v25 + 48) + 8 * v13);
            swift_retain();
            return 0;
          }
        }
        else
        {
          swift_release();
        }
        v13 = (v13 + 1) & v14;
      }
      while (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v29 = *v25;
    *v25 = 0x8000000000000000;
    v22 = swift_retain();
    sub_226538EDC(v22, v13, isUniquelyReferenced_nonNull_native);
    *v25 = v29;
    swift_bridgeObjectRelease();
    *a1 = v27;
  }
  return 1;
}

uint64_t sub_226536A0C(double *a1, float32x2_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int32x2_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v13;

  v5 = *v2;
  sub_22655D640();
  sub_2264968C4();
  v6 = sub_22655D670();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v9 = ~v7;
    while (1)
    {
      v10 = vceq_f32(*(float32x2_t *)(*(_QWORD *)(v5 + 48) + 8 * v8), a2);
      if ((v10.i32[0] & v10.i32[1] & 1) != 0)
        break;
      v8 = (v8 + 1) & v9;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_5;
    }
    result = 0;
    a2 = *(float32x2_t *)(*(_QWORD *)(*v2 + 48) + 8 * v8);
  }
  else
  {
LABEL_5:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_2265390A8(v8, isUniquelyReferenced_nonNull_native, a2);
    *v2 = v13;
    swift_bridgeObjectRelease();
    result = 1;
  }
  *a1 = *(double *)&a2;
  return result;
}

uint64_t sub_226536B30(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  float32x2_t *v18;
  float32x2_t v19;
  float32x2_t *v20;
  float32x2_t *v21;
  float32x2_t *v22;
  float32x2_t v23;
  int32x2_t v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
  {
    sub_22655D640();
    v10 = *(_QWORD *)(*(_QWORD *)(a2 + 48) + 16);
    if (v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v11 = 0;
      do
      {
        ++v11;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2558443D0);
        sub_22655D5EC();
        sub_22655D64C();
      }
      while (v10 != v11);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    v14 = sub_22655D670();
    v15 = -1 << *(_BYTE *)(v6 + 32);
    v16 = v14 & ~v15;
    if (((*(_QWORD *)(v6 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
    {
      v17 = ~v15;
      v18 = *(float32x2_t **)(a2 + 48);
      v19 = v18[2];
      do
      {
        v20 = *(float32x2_t **)(*(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v16) + 48);
        if (*(_QWORD *)&v20[2] == *(_QWORD *)&v19)
        {
          if (!*(_QWORD *)&v19 || v20 == v18)
          {
LABEL_24:
            swift_release();
            swift_bridgeObjectRelease();
            *a1 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v16);
            swift_retain();
            return 0;
          }
          v21 = v20 + 4;
          v22 = v18 + 4;
          v23 = v18[2];
          while (1)
          {
            v24 = vceq_f32(*v21, *v22);
            if ((v24.i32[0] & v24.i32[1] & 1) == 0)
              break;
            ++v21;
            ++v22;
            if (!--*(_QWORD *)&v23)
              goto LABEL_24;
          }
        }
        v16 = (v16 + 1) & v17;
      }
      while (((*(_QWORD *)(v6 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0);
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v29 = *v2;
    *v2 = 0x8000000000000000;
    v26 = swift_retain();
    sub_2265391F8(v26, v16, isUniquelyReferenced_nonNull_native);
    *v2 = v29;
    goto LABEL_28;
  }
  if (v6 < 0)
    v7 = *v2;
  else
    v7 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  swift_retain();
  v8 = sub_22655D280();
  swift_release();
  if (v8)
  {
    swift_bridgeObjectRelease();
    swift_release();
    type metadata accessor for CDTTriangle();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    *a1 = v27;
    swift_unknownObjectRelease();
    return 0;
  }
  result = sub_22655D274();
  if (!__OFADD__(result, 1))
  {
    v12 = sub_22653779C(v7, result + 1);
    v28 = v12;
    if (*(_QWORD *)(v12 + 24) <= *(_QWORD *)(v12 + 16))
    {
      swift_retain();
      sub_2265380E0();
      v13 = v28;
    }
    else
    {
      v13 = v12;
      swift_retain();
    }
    sub_226538B4C(a2, v13);
    *v3 = v13;
LABEL_28:
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_226536E40(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t DynamicType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  __int128 v16;
  _QWORD *v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[80];

  v3 = v2;
  v6 = *v2;
  sub_22655D640();
  sub_226438600(a2, (uint64_t)&v21);
  __swift_project_boxed_opaque_existential_1(&v21, v22);
  DynamicType = swift_getDynamicType();
  v8 = v23;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  v19[0] = DynamicType;
  v19[1] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558437F0);
  sub_22655CDDC();
  sub_22655CE00();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1((_QWORD *)a2, *(_QWORD *)(a2 + 24));
  sub_22655CE6C();
  sub_22655CE00();
  swift_bridgeObjectRelease();
  v9 = sub_22655D670();
  v10 = -1 << *(_BYTE *)(v6 + 32);
  v11 = v9 & ~v10;
  v18 = v3;
  if (((*(_QWORD *)(v6 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    while (1)
    {
      sub_226496910(*(_QWORD *)(v6 + 48) + 40 * v11, (uint64_t)&v21);
      sub_22655D640();
      sub_226438600((uint64_t)&v21, (uint64_t)v19);
      __swift_project_boxed_opaque_existential_1(v19, v20);
      swift_getDynamicType();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      sub_22655CDDC();
      sub_22655CE00();
      swift_bridgeObjectRelease();
      __swift_project_boxed_opaque_existential_1(&v21, v22);
      sub_22655CE6C();
      sub_22655CE00();
      swift_bridgeObjectRelease();
      v13 = sub_22655D670();
      sub_22655D640();
      sub_226438600(a2, (uint64_t)v19);
      __swift_project_boxed_opaque_existential_1(v19, v20);
      swift_getDynamicType();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      sub_22655CDDC();
      sub_22655CE00();
      swift_bridgeObjectRelease();
      __swift_project_boxed_opaque_existential_1((_QWORD *)a2, *(_QWORD *)(a2 + 24));
      sub_22655CE6C();
      sub_22655CE00();
      swift_bridgeObjectRelease();
      v14 = sub_22655D670();
      sub_22649694C((uint64_t)&v21);
      if (v13 == v14)
        break;
      v11 = (v11 + 1) & v12;
      if (((*(_QWORD *)(v6 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    sub_22649694C(a2);
    sub_226496910(*(_QWORD *)(*v18 + 48) + 40 * v11, a1);
    return 0;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_226496910(a2, (uint64_t)v24);
    v21 = *v18;
    *v18 = 0x8000000000000000;
    sub_2265393F8((uint64_t)v24, v11, isUniquelyReferenced_nonNull_native);
    *v18 = v21;
    swift_bridgeObjectRelease();
    v16 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v16;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    return 1;
  }
}

uint64_t sub_2265371E8(_BYTE *a1, uint64_t a2)
{
  return sub_2265371FC(a1, a2, (uint64_t *)&unk_2558480A0);
}

uint64_t sub_2265371FC(_BYTE *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;

  v7 = *v3;
  sub_22655D640();
  sub_22655D64C();
  v8 = sub_22655D670();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v3;
    *v3 = 0x8000000000000000;
    sub_226539790(a2, v10, isUniquelyReferenced_nonNull_native, a3);
    *v3 = v15;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v11 = *(_QWORD *)(v7 + 48);
  if (*(unsigned __int8 *)(v11 + v10) != a2)
  {
    v12 = ~v9;
    do
    {
      v10 = (v10 + 1) & v12;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_7;
    }
    while (*(unsigned __int8 *)(v11 + v10) != a2);
  }
  result = 0;
  LOBYTE(a2) = *(_BYTE *)(*(_QWORD *)(*v3 + 48) + v10);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_226537330(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_22655C05C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_226437F28(&qword_25584A8F0, v11, MEMORY[0x24BDCDAF0]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_22655CCD4();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_226437F28(&qword_25584A6F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
      v21 = sub_22655CD04();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_2265398E8((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_22653758C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255846C00);
    v2 = sub_22655D2D4();
    v14 = v2;
    sub_22655D244();
    if (sub_22655D298())
    {
      type metadata accessor for HullPointUUID();
      do
      {
        swift_dynamicCast();
        v2 = v14;
        if (*(_QWORD *)(v14 + 24) <= *(_QWORD *)(v14 + 16))
        {
          sub_226537B4C();
          v2 = v14;
        }
        sub_22655D640();
        sub_22655C11C();
        result = sub_22655D670();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v9 = 0;
          v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v11 = v7 == v10;
            if (v7 == v10)
              v7 = 0;
            v9 |= v11;
            v12 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v13;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_22655D298());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  return v2;
}

uint64_t sub_22653779C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25584A6D0);
    v2 = sub_22655D2D4();
    v5 = v2;
    sub_22655D244();
    if (sub_22655D298())
    {
      type metadata accessor for CDTTriangle();
      do
      {
        swift_dynamicCast();
        v2 = v5;
        if (*(_QWORD *)(v5 + 24) <= *(_QWORD *)(v5 + 16))
        {
          sub_2265380E0();
          v2 = v5;
        }
        sub_226538B4C(v4, v2);
      }
      while (sub_22655D298());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  return v2;
}

uint64_t sub_2265378B4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A6F8);
  result = sub_22655D2C8();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v28 = v1;
    v5 = 0;
    v6 = (uint64_t *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    v27 = -1 << v7;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v29 = 1 << *(_BYTE *)(v2 + 32);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_36;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_36;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_36;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_36:
                if (v29 >= 64)
                  bzero((void *)(v2 + 56), 8 * v10);
                else
                  *v6 = v27;
                v1 = v28;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_42;
                  if (v5 >= v10)
                    goto LABEL_36;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v14);
      if ((v18 & 0x7FFFFFFF) != 0)
        v19 = v18;
      else
        v19 = 0;
      result = MEMORY[0x227699D08](*(_QWORD *)(v4 + 40), v19, 4);
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v11 + 8 * v22);
        }
        while (v26 == -1);
        v12 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_226537B4C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255846C00);
  v3 = sub_22655D2C8();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_33;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_33;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_33;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v27 = 1 << *(_BYTE *)(v2 + 32);
                if (v27 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
      sub_22655D640();
      sub_22655C11C();
      result = sub_22655D670();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_226537E10()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  __int128 v4;
  uint64_t v5;
  int64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A6C8);
  result = sub_22655D2C8();
  v5 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v6 = 0;
    v7 = (_QWORD *)(v2 + 56);
    v8 = 1 << *(_BYTE *)(v2 + 32);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v2 + 56);
    v11 = (unint64_t)(v8 + 63) >> 6;
    v12 = result + 56;
    while (1)
    {
      if (v10)
      {
        v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v15 = v14 | (v6 << 6);
      }
      else
      {
        v16 = v6 + 1;
        if (__OFADD__(v6, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v11)
          goto LABEL_33;
        v17 = v7[v16];
        ++v6;
        if (!v17)
        {
          v6 = v16 + 1;
          if (v16 + 1 >= v11)
            goto LABEL_33;
          v17 = v7[v6];
          if (!v17)
          {
            v6 = v16 + 2;
            if (v16 + 2 >= v11)
              goto LABEL_33;
            v17 = v7[v6];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v11)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v7 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v7[v18];
              if (!v17)
              {
                while (1)
                {
                  v6 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v6 >= v11)
                    goto LABEL_33;
                  v17 = v7[v6];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v6 = v18;
            }
          }
        }
LABEL_23:
        v10 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v6 << 6);
      }
      *(_QWORD *)&v4 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
      v27 = v4;
      sub_22655D640();
      sub_22655D664();
      sub_22655D664();
      result = sub_22655D670();
      v19 = -1 << *(_BYTE *)(v5 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v12 + 8 * v21);
        }
        while (v25 == -1);
        v13 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *((_QWORD *)&v4 + 1) = *((_QWORD *)&v27 + 1);
      *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v13) = v27;
      ++*(_QWORD *)(v5 + 16);
    }
  }
  result = swift_release();
  *v1 = v5;
  return result;
}

unint64_t sub_2265380E0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A6D0);
  v3 = sub_22655D2C8();
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = 1 << *(_BYTE *)(v2 + 32);
    v5 = (_QWORD *)(v2 + 56);
    v6 = -1;
    if (v4 < 64)
      v6 = ~(-1 << v4);
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v4 + 63) >> 6;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v11 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v12 = v11 | (v10 << 6);
      }
      else
      {
        v13 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return result;
        }
        if (v13 >= v8)
          goto LABEL_22;
        v14 = v5[v13];
        ++v10;
        if (!v14)
        {
          v10 = v13 + 1;
          if (v13 + 1 >= v8)
            goto LABEL_22;
          v14 = v5[v10];
          if (!v14)
          {
            v10 = v13 + 2;
            if (v13 + 2 >= v8)
              goto LABEL_22;
            v14 = v5[v10];
            if (!v14)
            {
              v15 = v13 + 3;
              if (v15 >= v8)
              {
LABEL_22:
                swift_release();
                v16 = 1 << *(_BYTE *)(v2 + 32);
                if (v16 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v5 = -1 << v16;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v14 = v5[v15];
              if (!v14)
              {
                while (1)
                {
                  v10 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_28;
                  if (v10 >= v8)
                    goto LABEL_22;
                  v14 = v5[v10];
                  ++v15;
                  if (v14)
                    goto LABEL_21;
                }
              }
              v10 = v15;
            }
          }
        }
LABEL_21:
        v7 = (v14 - 1) & v14;
        v12 = __clz(__rbit64(v14)) + (v10 << 6);
      }
      result = sub_226538B4C(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v12), v3);
    }
  }
  result = swift_release();
  *v1 = v3;
  return result;
}

void sub_2265382A8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __n128 v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  __n128 v18[2];
  uint64_t v19;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A718);
  v3 = sub_22655D2C8();
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = 1 << *(_BYTE *)(v2 + 32);
    v5 = (_QWORD *)(v2 + 56);
    v6 = -1;
    if (v4 < 64)
      v6 = ~(-1 << v4);
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v4 + 63) >> 6;
    swift_retain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v14 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return;
        }
        if (v14 >= v8)
          goto LABEL_22;
        v15 = v5[v14];
        ++v9;
        if (!v15)
        {
          v9 = v14 + 1;
          if (v14 + 1 >= v8)
            goto LABEL_22;
          v15 = v5[v9];
          if (!v15)
          {
            v9 = v14 + 2;
            if (v14 + 2 >= v8)
              goto LABEL_22;
            v15 = v5[v9];
            if (!v15)
            {
              v16 = v14 + 3;
              if (v16 >= v8)
              {
LABEL_22:
                swift_release();
                v17 = 1 << *(_BYTE *)(v2 + 32);
                if (v17 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v17 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v5 = -1 << v17;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v15 = v5[v16];
              if (!v15)
              {
                while (1)
                {
                  v9 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_28;
                  if (v9 >= v8)
                    goto LABEL_22;
                  v15 = v5[v9];
                  ++v16;
                  if (v15)
                    goto LABEL_21;
                }
              }
              v9 = v16;
            }
          }
        }
LABEL_21:
        v7 = (v15 - 1) & v15;
        v11 = __clz(__rbit64(v15)) + (v9 << 6);
      }
      v12 = *(_QWORD *)(v2 + 48) + 40 * v11;
      v13 = *(__n128 *)(v12 + 16);
      v18[0] = *(__n128 *)v12;
      v18[1] = v13;
      v19 = *(_QWORD *)(v12 + 32);
      sub_226538C48(v18, v3);
    }
  }
  swift_release();
  *v1 = v3;
}

uint64_t sub_226538490(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  result = sub_22655D2C8();
  v6 = result;
  if (*(_QWORD *)(v4 + 16))
  {
    v7 = 0;
    v8 = (_QWORD *)(v4 + 56);
    v9 = 1 << *(_BYTE *)(v4 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v4 + 56);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v12)
          goto LABEL_33;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_33;
          v18 = v8[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_33;
            v18 = v8[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_33:
                v28 = 1 << *(_BYTE *)(v4 + 32);
                if (v28 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v28;
                v3 = v2;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_39;
                  if (v7 >= v12)
                    goto LABEL_33;
                  v18 = v8[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_23;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_23:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(_BYTE *)(*(_QWORD *)(v4 + 48) + v16);
      sub_22655D640();
      sub_22655D64C();
      result = sub_22655D670();
      v21 = -1 << *(_BYTE *)(v6 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v23);
        }
        while (v27 == -1);
        v14 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_226538734()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v1 = v0;
  v2 = sub_22655C05C();
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A710);
  v6 = sub_22655D2C8();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v35 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v33 = v0;
    v34 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v34)
          goto LABEL_33;
        v19 = v35[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v34)
            goto LABEL_33;
          v19 = v35[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v34)
              goto LABEL_33;
            v19 = v35[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v34)
              {
LABEL_33:
                swift_release();
                v1 = v33;
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 > 63)
                  bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v19 = v35[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v34)
                    goto LABEL_33;
                  v19 = v35[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = v5;
      v22 = *(_QWORD *)(v5 + 48);
      v23 = *(_QWORD *)(v36 + 72);
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 32);
      v24(v4, v22 + v23 * v17, v2);
      sub_226437F28(&qword_25584A8F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
      result = sub_22655CCD4();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(*(_QWORD *)(v7 + 48) + v15 * v23, v4, v2);
      ++*(_QWORD *)(v7 + 16);
      v5 = v21;
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

unint64_t sub_226538AA0(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_22655D640();
  sub_22655C11C();
  sub_22655D670();
  result = sub_22655D22C();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_226538B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t result;

  sub_22655D640();
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = 0;
    do
    {
      ++v5;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2558443D0);
      sub_22655D5EC();
      sub_22655D64C();
    }
    while (v4 != v5);
    swift_bridgeObjectRelease();
  }
  sub_22655D670();
  result = sub_22655D22C();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

__n128 sub_226538C48(__n128 *a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 result;
  _QWORD v8[4];

  sub_22655D640();
  sub_226438600((uint64_t)a1, (uint64_t)v8);
  __swift_project_boxed_opaque_existential_1(v8, v8[3]);
  swift_getDynamicType();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558437F0);
  sub_22655CDDC();
  sub_22655CE00();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(a1, a1[1].n128_i64[1]);
  sub_22655CE6C();
  sub_22655CE00();
  swift_bridgeObjectRelease();
  sub_22655D670();
  v4 = sub_22655D22C();
  *(_QWORD *)(a2 + 56 + ((v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v4;
  v5 = *(_QWORD *)(a2 + 48) + 40 * v4;
  v6 = a1[2].n128_u64[0];
  result = a1[1];
  *(__n128 *)v5 = *a1;
  *(__n128 *)(v5 + 16) = result;
  *(_QWORD *)(v5 + 32) = v6;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_226538DA8(uint64_t result, char a2, float a3)
{
  uint64_t *v3;
  unint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v4 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a2 & 1) != 0)
    goto LABEL_17;
  if ((a2 & 1) != 0)
  {
    sub_2265378B4();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_226539AEC();
      goto LABEL_17;
    }
    sub_22653A538();
  }
  v8 = *v3;
  if ((LODWORD(a3) & 0x7FFFFFFF) != 0)
    v9 = LODWORD(a3);
  else
    v9 = 0;
  result = MEMORY[0x227699D08](*(_QWORD *)(*v3 + 40), v9, 4);
  v10 = -1 << *(_BYTE *)(v8 + 32);
  v4 = result & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v11 = *(_QWORD *)(v8 + 48);
    if (*(float *)(v11 + 4 * v4) == a3)
    {
LABEL_16:
      result = sub_22655D598();
      __break(1u);
    }
    else
    {
      v12 = ~v10;
      while (1)
      {
        v4 = (v4 + 1) & v12;
        if (((*(_QWORD *)(v8 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
          break;
        if (*(float *)(v11 + 4 * v4) == a3)
          goto LABEL_16;
      }
    }
  }
LABEL_17:
  v13 = *v3;
  *(_QWORD *)(*v3 + 8 * (v4 >> 6) + 56) |= 1 << v4;
  *(float *)(*(_QWORD *)(v13 + 48) + 4 * v4) = a3;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    *(_QWORD *)(v13 + 16) = v16;
  return result;
}

uint64_t sub_226538EDC(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;

  v19 = result;
  v5 = *(_QWORD *)(*v3 + 16);
  v6 = *(_QWORD *)(*v3 + 24);
  if (v6 > v5 && (a3 & 1) != 0)
    goto LABEL_15;
  if ((a3 & 1) != 0)
  {
    sub_226537B4C();
  }
  else
  {
    if (v6 > v5)
    {
      result = (uint64_t)sub_226539E20(&qword_255846C00);
      goto LABEL_15;
    }
    sub_22653A7AC();
  }
  v7 = *v3;
  sub_22655D640();
  sub_22655C11C();
  result = sub_22655D670();
  v8 = -1 << *(_BYTE *)(v7 + 32);
  a2 = result & ~v8;
  if (((*(_QWORD *)(v7 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v9 = ~v8;
    type metadata accessor for HullPointUUID();
    v10 = OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type;
    do
    {
      v11 = *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * a2);
      swift_retain();
      if ((sub_22655C104() & 1) != 0)
      {
        v12 = *(unsigned __int8 *)(v11 + OBJC_IVAR____TtC8RoomPlan13HullPointUUID_type);
        v13 = *(unsigned __int8 *)(v19 + v10);
        result = swift_release();
        if (v12 == v13)
        {
          result = sub_22655D598();
          __break(1u);
          break;
        }
      }
      else
      {
        result = swift_release();
      }
      a2 = (a2 + 1) & v9;
    }
    while (((*(_QWORD *)(v7 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_15:
  v14 = *v18;
  *(_QWORD *)(*v18 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * a2) = v19;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    *(_QWORD *)(v14 + 16) = v17;
  return result;
}

uint64_t sub_2265390A8(uint64_t result, char a2, float32x2_t a3)
{
  uint64_t *v3;
  unint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int32x2_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v4 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a2 & 1) != 0)
    goto LABEL_12;
  if ((a2 & 1) != 0)
  {
    sub_226537E10();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_226539C8C();
      goto LABEL_12;
    }
    sub_22653AA44();
  }
  v8 = *v3;
  sub_22655D640();
  sub_2264968C4();
  result = sub_22655D670();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  v4 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v10 = ~v9;
    do
    {
      v11 = vceq_f32(*(float32x2_t *)(*(_QWORD *)(v8 + 48) + 8 * v4), a3);
      if ((v11.i32[0] & v11.i32[1] & 1) != 0)
        goto LABEL_15;
      v4 = (v4 + 1) & v10;
    }
    while (((*(_QWORD *)(v8 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
LABEL_12:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (v4 >> 6) + 56) |= 1 << v4;
  *(double *)(*(_QWORD *)(v12 + 48) + 8 * v4) = *(double *)&a3;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (!v14)
  {
    *(_QWORD *)(v12 + 16) = v15;
    return result;
  }
  __break(1u);
LABEL_15:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558443D0);
  result = sub_22655D598();
  __break(1u);
  return result;
}

uint64_t sub_2265391F8(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  float32x2_t *v13;
  float32x2_t v14;
  float32x2_t *v15;
  float32x2_t *v16;
  float32x2_t *v17;
  float32x2_t v18;
  int32x2_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_22;
  if ((a3 & 1) != 0)
  {
    sub_2265380E0();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_226539E20(&qword_25584A6D0);
      goto LABEL_22;
    }
    sub_22653ACE4();
  }
  v8 = *v3;
  sub_22655D640();
  v9 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 16);
  if (v9)
  {
    swift_bridgeObjectRetain();
    v10 = 0;
    do
    {
      ++v10;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2558443D0);
      sub_22655D5EC();
      sub_22655D64C();
    }
    while (v9 != v10);
    swift_bridgeObjectRelease();
  }
  result = sub_22655D670();
  v11 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v11;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v12 = ~v11;
    result = type metadata accessor for CDTTriangle();
    v13 = *(float32x2_t **)(v5 + 48);
    v14 = v13[2];
    do
    {
      v15 = *(float32x2_t **)(*(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * a2) + 48);
      if (*(_QWORD *)&v15[2] == *(_QWORD *)&v14)
      {
        if (!*(_QWORD *)&v14 || v15 == v13)
        {
LABEL_21:
          result = sub_22655D598();
          __break(1u);
          break;
        }
        v16 = v15 + 4;
        v17 = v13 + 4;
        v18 = v13[2];
        while (1)
        {
          v19 = vceq_f32(*v16, *v17);
          if ((v19.i32[0] & v19.i32[1] & 1) == 0)
            break;
          ++v16;
          ++v17;
          if (!--*(_QWORD *)&v18)
            goto LABEL_21;
        }
      }
      a2 = (a2 + 1) & v12;
    }
    while (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_22:
  v20 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v20 + 48) + 8 * a2) = v5;
  v21 = *(_QWORD *)(v20 + 16);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (v22)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v23;
  return result;
}

uint64_t sub_2265393F8(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t DynamicType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t *v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_2265382A8();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_226539FC0();
      goto LABEL_12;
    }
    sub_22653AE74();
  }
  v8 = *v3;
  sub_22655D640();
  sub_226438600(v5, (uint64_t)&v25);
  __swift_project_boxed_opaque_existential_1(&v25, v26);
  DynamicType = swift_getDynamicType();
  v10 = v27;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  v23[0] = DynamicType;
  v23[1] = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558437F0);
  sub_22655CDDC();
  sub_22655CE00();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1((_QWORD *)v5, *(_QWORD *)(v5 + 24));
  sub_22655CE6C();
  sub_22655CE00();
  swift_bridgeObjectRelease();
  result = sub_22655D670();
  v11 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v11;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v12 = ~v11;
    do
    {
      sub_226496910(*(_QWORD *)(v8 + 48) + 40 * a2, (uint64_t)&v25);
      sub_22655D640();
      sub_226438600((uint64_t)&v25, (uint64_t)v23);
      __swift_project_boxed_opaque_existential_1(v23, v24);
      swift_getDynamicType();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      sub_22655CDDC();
      sub_22655CE00();
      swift_bridgeObjectRelease();
      __swift_project_boxed_opaque_existential_1(&v25, v26);
      sub_22655CE6C();
      sub_22655CE00();
      swift_bridgeObjectRelease();
      v13 = sub_22655D670();
      sub_22655D640();
      sub_226438600(v5, (uint64_t)v23);
      __swift_project_boxed_opaque_existential_1(v23, v24);
      swift_getDynamicType();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      sub_22655CDDC();
      sub_22655CE00();
      swift_bridgeObjectRelease();
      __swift_project_boxed_opaque_existential_1((_QWORD *)v5, *(_QWORD *)(v5 + 24));
      sub_22655CE6C();
      sub_22655CE00();
      swift_bridgeObjectRelease();
      v14 = sub_22655D670();
      result = sub_22649694C((uint64_t)&v25);
      if (v13 == v14)
        goto LABEL_15;
      a2 = (a2 + 1) & v12;
    }
    while (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v15 = *v22;
  *(_QWORD *)(*v22 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v16 = *(_QWORD *)(v15 + 48) + 40 * a2;
  v17 = *(_OWORD *)v5;
  v18 = *(_OWORD *)(v5 + 16);
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v5 + 32);
  *(_OWORD *)v16 = v17;
  *(_OWORD *)(v16 + 16) = v18;
  v19 = *(_QWORD *)(v15 + 16);
  v20 = __OFADD__(v19, 1);
  v21 = v19 + 1;
  if (!v20)
  {
    *(_QWORD *)(v15 + 16) = v21;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_22655D598();
  __break(1u);
  return result;
}

uint64_t sub_226539790(uint64_t result, unint64_t a2, char a3, uint64_t *a4)
{
  uint64_t *v4;
  int v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v6 = result;
  v7 = *(_QWORD *)(*v4 + 16);
  v8 = *(_QWORD *)(*v4 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_226538490(v9, a4);
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_22653A18C(a4);
      goto LABEL_14;
    }
    sub_22653B020(v9, a4);
  }
  v10 = *v4;
  sub_22655D640();
  sub_22655D64C();
  result = sub_22655D670();
  v11 = -1 << *(_BYTE *)(v10 + 32);
  a2 = result & ~v11;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v12 = *(_QWORD *)(v10 + 48);
    if (*(unsigned __int8 *)(v12 + a2) == v6)
    {
LABEL_13:
      result = sub_22655D598();
      __break(1u);
    }
    else
    {
      v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v12 + a2) == v6)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v14 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v14 + 48) + a2) = v6;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    *(_QWORD *)(v14 + 16) = v17;
  return result;
}

uint64_t sub_2265398E8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_22655C05C();
  v7 = *(_QWORD *)(v6 - 8);
  v8.n128_f64[0] = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_226538734();
  }
  else
  {
    if (v12 > v11)
    {
      sub_22653A314();
      goto LABEL_12;
    }
    sub_22653B294();
  }
  v13 = *v3;
  sub_226437F28(&qword_25584A8F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  v14 = sub_22655CCD4();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v10, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_226437F28(&qword_25584A6F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
      v19 = sub_22655CD04();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6, v8);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_22655D598();
  __break(1u);
  return result;
}

void *sub_226539AEC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A6F8);
  v2 = *v0;
  v3 = sub_22655D2BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v15) = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_226539C80()
{
  return sub_226539E20(&qword_255846C00);
}

void *sub_226539C8C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A6C8);
  v2 = *v0;
  v3 = sub_22655D2BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_226539E20(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_22655D2BC();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v7 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v7 + 8 * v10);
        if (!v18)
          break;
      }
    }
LABEL_27:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    result = (void *)swift_retain();
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_226539FC0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  _OWORD v23[2];
  uint64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A718);
  v2 = *v0;
  v3 = sub_22655D2BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    result = (void *)sub_226496910(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v23);
    v17 = *(_QWORD *)(v4 + 48) + v16;
    v18 = v23[0];
    v19 = v23[1];
    *(_QWORD *)(v17 + 32) = v24;
    *(_OWORD *)v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_22653A18C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_22655D2BC();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v7 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v7 + 8 * v10);
        if (!v18)
          break;
      }
    }
LABEL_27:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_22653A314()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = sub_22655C05C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A710);
  v6 = *v0;
  v7 = sub_22655D2BC();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_22653A538()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A6F8);
  result = sub_22655D2C8();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_38:
    *v1 = v4;
    return result;
  }
  v27 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v10)
      goto LABEL_36;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_36;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_36;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v14);
    if ((v18 & 0x7FFFFFFF) != 0)
      v19 = v18;
    else
      v19 = 0;
    result = MEMORY[0x227699D08](*(_QWORD *)(v4 + 40), v19, 4);
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v26 == -1);
      v12 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_36:
    result = swift_release();
    v1 = v27;
    goto LABEL_38;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_36;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_22653A7AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255846C00);
  v3 = sub_22655D2C8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    sub_22655D640();
    swift_retain();
    sub_22655C11C();
    result = sub_22655D670();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_22653AA44()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  __int128 v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  __int128 v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A6C8);
  result = sub_22655D2C8();
  v5 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v5;
    return result;
  }
  v6 = 0;
  v7 = v2 + 56;
  v8 = 1 << *(_BYTE *)(v2 + 32);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v2 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v15 = v14 | (v6 << 6);
      goto LABEL_24;
    }
    v16 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v11)
      goto LABEL_33;
    v17 = *(_QWORD *)(v7 + 8 * v16);
    ++v6;
    if (!v17)
    {
      v6 = v16 + 1;
      if (v16 + 1 >= v11)
        goto LABEL_33;
      v17 = *(_QWORD *)(v7 + 8 * v6);
      if (!v17)
      {
        v6 = v16 + 2;
        if (v16 + 2 >= v11)
          goto LABEL_33;
        v17 = *(_QWORD *)(v7 + 8 * v6);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v10 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v6 << 6);
LABEL_24:
    *(_QWORD *)&v4 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v26 = v4;
    sub_22655D640();
    sub_22655D664();
    sub_22655D664();
    result = sub_22655D670();
    v19 = -1 << *(_BYTE *)(v5 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v25 == -1);
      v13 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *((_QWORD *)&v4 + 1) = *((_QWORD *)&v26 + 1);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v13) = v26;
    ++*(_QWORD *)(v5 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v11)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
  {
    v6 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v6 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v6 >= v11)
      goto LABEL_33;
    v17 = *(_QWORD *)(v7 + 8 * v6);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_22653ACE4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  unint64_t result;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A6D0);
  v3 = sub_22655D2C8();
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_23:
    result = swift_release();
    *v1 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = v2 + 56;
  v6 = -1;
  if (v4 < 64)
    v6 = ~(-1 << v4);
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v7 &= v7 - 1;
      goto LABEL_6;
    }
    v12 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v8)
      goto LABEL_22;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v10;
    if (!v13)
    {
      v10 = v12 + 1;
      if (v12 + 1 >= v8)
        goto LABEL_22;
      v13 = *(_QWORD *)(v5 + 8 * v10);
      if (!v13)
      {
        v10 = v12 + 2;
        if (v12 + 2 >= v8)
          goto LABEL_22;
        v13 = *(_QWORD *)(v5 + 8 * v10);
        if (!v13)
          break;
      }
    }
LABEL_21:
    v7 = (v13 - 1) & v13;
LABEL_6:
    v11 = swift_retain();
    result = sub_226538B4C(v11, v3);
  }
  v14 = v12 + 3;
  if (v14 >= v8)
  {
LABEL_22:
    swift_release();
    goto LABEL_23;
  }
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v10 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    v10 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v10 >= v8)
      goto LABEL_22;
    v13 = *(_QWORD *)(v5 + 8 * v10);
    ++v14;
    if (v13)
      goto LABEL_21;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_22653AE74()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  __n128 v15[2];

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A718);
  v3 = sub_22655D2C8();
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_release();
LABEL_24:
    *v1 = v3;
    return;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = v2 + 56;
  v6 = -1;
  if (v4 < 64)
    v6 = ~(-1 << v4);
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  v9 = 0;
  while (1)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_6;
    }
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v12 >= v8)
      goto LABEL_22;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v9;
    if (!v13)
    {
      v9 = v12 + 1;
      if (v12 + 1 >= v8)
        goto LABEL_22;
      v13 = *(_QWORD *)(v5 + 8 * v9);
      if (!v13)
      {
        v9 = v12 + 2;
        if (v12 + 2 >= v8)
          goto LABEL_22;
        v13 = *(_QWORD *)(v5 + 8 * v9);
        if (!v13)
          break;
      }
    }
LABEL_21:
    v7 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v9 << 6);
LABEL_6:
    sub_226496910(*(_QWORD *)(v2 + 48) + 40 * v11, (uint64_t)v15);
    sub_226538C48(v15, v3);
  }
  v14 = v12 + 3;
  if (v14 >= v8)
  {
LABEL_22:
    swift_release_n();
    goto LABEL_24;
  }
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v9 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v8)
      goto LABEL_22;
    v13 = *(_QWORD *)(v5 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_21;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_22653B020(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  result = sub_22655D2C8();
  v6 = result;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release();
LABEL_35:
    *v3 = v6;
    return result;
  }
  v7 = 0;
  v8 = v4 + 56;
  v9 = 1 << *(_BYTE *)(v4 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v4 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_24;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v12)
      goto LABEL_33;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_33;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_33;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_23:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_24:
    v20 = *(_BYTE *)(*(_QWORD *)(v4 + 48) + v16);
    sub_22655D640();
    sub_22655D64C();
    result = sub_22655D670();
    v21 = -1 << *(_BYTE *)(v6 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v13 + 8 * v23);
      }
      while (v27 == -1);
      v14 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_33:
    result = swift_release();
    v3 = v2;
    goto LABEL_35;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_33;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_22653B294()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;

  v1 = v0;
  v2 = sub_22655C05C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A710);
  v7 = sub_22655D2C8();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 56);
  v31 = v0;
  v32 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v33)
        goto LABEL_33;
      v20 = *(_QWORD *)(v32 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v33)
          goto LABEL_33;
        v20 = *(_QWORD *)(v32 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v22 * v18, v2);
    sub_226437F28(&qword_25584A8F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
    result = sub_22655CCD4();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v16 * v22, v5, v2);
    ++*(_QWORD *)(v8 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v33)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v32 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_22653B5BC(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;

  v4 = a4;
  v6 = a2;
  v7 = (_QWORD *)result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_22655D244();
    type metadata accessor for HullPointUUID();
    sub_226437F28((unint64_t *)&qword_255846BF8, (uint64_t (*)(uint64_t))type metadata accessor for HullPointUUID, (uint64_t)&unk_226560894);
    result = sub_22655CFB0();
    v4 = v27;
    v8 = v28;
    v9 = v29;
    v10 = v30;
    v11 = v31;
    v24 = v7;
    if (v6)
      goto LABEL_3;
LABEL_36:
    v12 = 0;
LABEL_46:
    *v24 = v4;
    v24[1] = v8;
    v24[2] = v9;
    v24[3] = v10;
    v24[4] = v11;
    return v12;
  }
  v10 = 0;
  v20 = -1 << *(_BYTE *)(a4 + 32);
  v8 = a4 + 56;
  v9 = ~v20;
  v21 = -v20;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  else
    v22 = -1;
  v11 = v22 & *(_QWORD *)(a4 + 56);
  v24 = (_QWORD *)result;
  if (!a2)
    goto LABEL_36;
LABEL_3:
  if (!a3)
  {
    v12 = 0;
    goto LABEL_46;
  }
  if (a3 < 0)
    goto LABEL_48;
  v12 = 0;
  v25 = (unint64_t)(v9 + 64) >> 6;
  v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_22655D298())
        goto LABEL_45;
      type metadata accessor for HullPointUUID();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v15 = v26;
      result = swift_unknownObjectRelease();
      if (!v26)
        goto LABEL_45;
      goto LABEL_8;
    }
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_7;
    }
    v16 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v16 >= v25)
    {
      v11 = 0;
      goto LABEL_45;
    }
    v17 = *(_QWORD *)(v8 + 8 * v16);
    if (v17)
      goto LABEL_23;
    v18 = v10 + 2;
    if (v10 + 2 >= v25)
    {
      v11 = 0;
      ++v10;
      goto LABEL_45;
    }
    v17 = *(_QWORD *)(v8 + 8 * v18);
    if (!v17)
    {
      if (v10 + 3 >= v25)
        goto LABEL_42;
      v17 = *(_QWORD *)(v8 + 8 * (v10 + 3));
      if (v17)
      {
        v16 = v10 + 3;
        goto LABEL_23;
      }
      v18 = v10 + 4;
      if (v10 + 4 >= v25)
      {
        v11 = 0;
        v10 += 3;
        goto LABEL_45;
      }
      v17 = *(_QWORD *)(v8 + 8 * v18);
      if (!v17)
      {
        v16 = v10 + 5;
        if (v10 + 5 >= v25)
        {
LABEL_42:
          v11 = 0;
          v10 = v18;
          goto LABEL_45;
        }
        v17 = *(_QWORD *)(v8 + 8 * v16);
        if (!v17)
        {
          v19 = v10 + 6;
          while (v25 != v19)
          {
            v17 = *(_QWORD *)(v8 + 8 * v19++);
            if (v17)
            {
              v16 = v19 - 1;
              goto LABEL_23;
            }
          }
          v11 = 0;
          v10 = v25 - 1;
          goto LABEL_45;
        }
        goto LABEL_23;
      }
    }
    v16 = v18;
LABEL_23:
    v11 = (v17 - 1) & v17;
    v14 = __clz(__rbit64(v17)) + (v16 << 6);
    v10 = v16;
LABEL_7:
    v15 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    result = swift_retain();
    if (!v15)
      goto LABEL_45;
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
    {
      v12 = a3;
LABEL_45:
      v9 = v23;
      goto LABEL_46;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

_QWORD *sub_22653B8BC(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

_QWORD *sub_22653BA50(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_22653BBE4(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *v11 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    result = swift_retain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_22653BDDC(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *v11 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    result = swift_retain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_22653BFD4(_QWORD *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22655C140();
  v41 = *(_QWORD *)(v11 - 8);
  v12.n128_f64[0] = MEMORY[0x24BDAC7A8](v11);
  v40 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a4;
  v15 = a4 + 64;
  v14 = *(_QWORD *)(a4 + 64);
  v16 = -1 << *(_BYTE *)(a4 + 32);
  v35 = a1;
  v36 = v16;
  v17 = -v16;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v14;
  if (!a2)
  {
    v20 = 0;
LABEL_39:
    v31 = v35;
    v32 = ~v36;
    *v35 = v42;
    v31[1] = v15;
    v31[2] = v32;
    v31[3] = v20;
    v31[4] = v19;
    return;
  }
  if (!a3)
  {
    v20 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v20 = 0;
  v21 = 0;
  v37 = a4 + 64;
  v38 = (unint64_t)(63 - v36) >> 6;
  v34 = v38 - 1;
  v39 = a3;
  v22 = v40;
  v23 = v41;
  if (!v19)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v25 = v24 | (v20 << 6);
  while (1)
  {
    v29 = *(_QWORD *)(v23 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v23 + 16))(v10, *(_QWORD *)(v42 + 48) + v29 * v25, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v11) == 1)
    {
      v15 = v37;
      goto LABEL_38;
    }
    ++v21;
    v30 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v30(v22, v10, v11);
    v30(a2, v22, v11);
    if (v21 == v39)
    {
      v15 = v37;
      goto LABEL_39;
    }
    a2 += v29;
    v23 = v41;
    if (v19)
      goto LABEL_8;
LABEL_9:
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    v15 = v37;
    if (v26 >= v38)
      goto LABEL_37;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
    {
      v28 = v20 + 2;
      ++v20;
      if (v26 + 1 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * v28);
      if (v27)
        goto LABEL_14;
      v20 = v26 + 1;
      if (v26 + 2 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * (v26 + 2));
      if (v27)
      {
        v26 += 2;
      }
      else
      {
        v20 = v26 + 2;
        if (v26 + 3 >= v38)
          goto LABEL_37;
        v27 = *(_QWORD *)(v37 + 8 * (v26 + 3));
        if (!v27)
        {
          v28 = v26 + 4;
          v20 = v26 + 3;
          if (v26 + 4 < v38)
          {
            v27 = *(_QWORD *)(v37 + 8 * v28);
            if (!v27)
            {
              while (1)
              {
                v26 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_42;
                if (v26 >= v38)
                {
                  v20 = v34;
                  goto LABEL_37;
                }
                v27 = *(_QWORD *)(v37 + 8 * v26);
                ++v28;
                if (v27)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v26 = v28;
            goto LABEL_21;
          }
LABEL_37:
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v23 + 56))(v10, 1, 1, v11, v12);
          v19 = 0;
LABEL_38:
          sub_22643D7E4((uint64_t)v10, (uint64_t *)&unk_255849AC0);
          goto LABEL_39;
        }
        v26 += 3;
      }
    }
LABEL_21:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v20 = v26;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

_QWORD *sub_22653C324(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

void sub_22653C4B8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  _QWORD *v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;

  v10 = a5(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v32 - v15;
  v37 = a4;
  v19 = *(_QWORD *)(a4 + 64);
  v18 = a4 + 64;
  v17 = v19;
  v36 = v18;
  v20 = -1 << *(_BYTE *)(v18 - 32);
  if (-v20 < 64)
    v21 = ~(-1 << -(char)v20);
  else
    v21 = -1;
  v22 = v21 & v17;
  if (!a2)
  {
    v23 = 0;
LABEL_37:
    v31 = v36;
    *a1 = v37;
    a1[1] = v31;
    a1[2] = ~v20;
    a1[3] = v23;
    a1[4] = v22;
    return;
  }
  if (!a3)
  {
    v23 = 0;
    goto LABEL_37;
  }
  if (a3 < 0)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v33 = -1 << *(_BYTE *)(v18 - 32);
  v34 = a1;
  v23 = 0;
  v24 = 0;
  v35 = (unint64_t)(63 - v20) >> 6;
  v32 = v35 - 1;
  if (!v22)
    goto LABEL_9;
LABEL_8:
  v25 = __clz(__rbit64(v22));
  v22 &= v22 - 1;
  v26 = v25 | (v23 << 6);
  while (1)
  {
    ++v24;
    v30 = *(_QWORD *)(v11 + 72);
    sub_22643D704(*(_QWORD *)(v37 + 56) + v30 * v26, (uint64_t)v13, a5);
    sub_22643F6AC((uint64_t)v13, (uint64_t)v16, a5);
    sub_22643F6AC((uint64_t)v16, a2, a5);
    if (v24 == a3)
      goto LABEL_36;
    a2 += v30;
    if (v22)
      goto LABEL_8;
LABEL_9:
    v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v27 >= v35)
      goto LABEL_32;
    v28 = *(_QWORD *)(v36 + 8 * v27);
    if (!v28)
      break;
LABEL_18:
    v22 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v27 << 6);
    v23 = v27;
  }
  v23 += 2;
  if (v27 + 1 >= v35)
  {
    v22 = 0;
    v23 = v27;
    goto LABEL_36;
  }
  v28 = *(_QWORD *)(v36 + 8 * v23);
  if (v28)
    goto LABEL_14;
  v29 = v27 + 2;
  if (v27 + 2 >= v35)
    goto LABEL_32;
  v28 = *(_QWORD *)(v36 + 8 * v29);
  if (v28)
    goto LABEL_17;
  v23 = v27 + 3;
  if (v27 + 3 >= v35)
  {
    v22 = 0;
    v23 = v27 + 2;
    goto LABEL_36;
  }
  v28 = *(_QWORD *)(v36 + 8 * v23);
  if (v28)
  {
LABEL_14:
    v27 = v23;
    goto LABEL_18;
  }
  v29 = v27 + 4;
  if (v27 + 4 >= v35)
  {
LABEL_32:
    v22 = 0;
LABEL_36:
    v20 = v33;
    a1 = v34;
    goto LABEL_37;
  }
  v28 = *(_QWORD *)(v36 + 8 * v29);
  if (v28)
  {
LABEL_17:
    v27 = v29;
    goto LABEL_18;
  }
  while (1)
  {
    v27 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v27 >= v35)
    {
      v22 = 0;
      v23 = v32;
      goto LABEL_36;
    }
    v28 = *(_QWORD *)(v36 + 8 * v27);
    ++v29;
    if (v28)
      goto LABEL_18;
  }
LABEL_40:
  __break(1u);
}

void sub_22653C770(_QWORD *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849210);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22655C05C();
  v41 = *(_QWORD *)(v11 - 8);
  v12.n128_f64[0] = MEMORY[0x24BDAC7A8](v11);
  v40 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a4;
  v15 = a4 + 56;
  v14 = *(_QWORD *)(a4 + 56);
  v16 = -1 << *(_BYTE *)(a4 + 32);
  v35 = a1;
  v36 = v16;
  v17 = -v16;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v14;
  if (!a2)
  {
    v20 = 0;
LABEL_39:
    v31 = v35;
    v32 = ~v36;
    *v35 = v42;
    v31[1] = v15;
    v31[2] = v32;
    v31[3] = v20;
    v31[4] = v19;
    return;
  }
  if (!a3)
  {
    v20 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v20 = 0;
  v21 = 0;
  v37 = a4 + 56;
  v38 = (unint64_t)(63 - v36) >> 6;
  v34 = v38 - 1;
  v39 = a3;
  v22 = v40;
  v23 = v41;
  if (!v19)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v25 = v24 | (v20 << 6);
  while (1)
  {
    v29 = *(_QWORD *)(v23 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v23 + 16))(v10, *(_QWORD *)(v42 + 48) + v29 * v25, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v11) == 1)
    {
      v15 = v37;
      goto LABEL_38;
    }
    ++v21;
    v30 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v30(v22, v10, v11);
    v30(a2, v22, v11);
    if (v21 == v39)
    {
      v15 = v37;
      goto LABEL_39;
    }
    a2 += v29;
    v23 = v41;
    if (v19)
      goto LABEL_8;
LABEL_9:
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    v15 = v37;
    if (v26 >= v38)
      goto LABEL_37;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
    {
      v28 = v20 + 2;
      ++v20;
      if (v26 + 1 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * v28);
      if (v27)
        goto LABEL_14;
      v20 = v26 + 1;
      if (v26 + 2 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * (v26 + 2));
      if (v27)
      {
        v26 += 2;
      }
      else
      {
        v20 = v26 + 2;
        if (v26 + 3 >= v38)
          goto LABEL_37;
        v27 = *(_QWORD *)(v37 + 8 * (v26 + 3));
        if (!v27)
        {
          v28 = v26 + 4;
          v20 = v26 + 3;
          if (v26 + 4 < v38)
          {
            v27 = *(_QWORD *)(v37 + 8 * v28);
            if (!v27)
            {
              while (1)
              {
                v26 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_42;
                if (v26 >= v38)
                {
                  v20 = v34;
                  goto LABEL_37;
                }
                v27 = *(_QWORD *)(v37 + 8 * v26);
                ++v28;
                if (v27)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v26 = v28;
            goto LABEL_21;
          }
LABEL_37:
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v23 + 56))(v10, 1, 1, v11, v12);
          v19 = 0;
LABEL_38:
          sub_22643D7E4((uint64_t)v10, &qword_255849210);
          goto LABEL_39;
        }
        v26 += 3;
      }
    }
LABEL_21:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v20 = v26;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

uint64_t sub_22653CAC0(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t DynamicType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  int64_t v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _OWORD v34[2];
  uint64_t v35;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v22 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(result + 56);
  v23 = (unint64_t)(v5 + 63) >> 6;
  v8 = a2 + 56;
  if (!v7)
    goto LABEL_9;
LABEL_7:
  v24 = (v7 - 1) & v7;
  v25 = v4;
  for (i = __clz(__rbit64(v7)) | (v4 << 6); ; i = __clz(__rbit64(v11)) + (v12 << 6))
  {
    sub_226496910(*(_QWORD *)(v3 + 48) + 40 * i, (uint64_t)v34);
    v31 = v34[0];
    v32 = v34[1];
    v33 = v35;
    sub_22655D640();
    sub_226438600((uint64_t)&v31, (uint64_t)&v28);
    __swift_project_boxed_opaque_existential_1(&v28, v29);
    DynamicType = swift_getDynamicType();
    v15 = v30;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
    v26[0] = DynamicType;
    v26[1] = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558437F0);
    sub_22655CDDC();
    sub_22655CE00();
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1(&v31, *((uint64_t *)&v32 + 1));
    sub_22655CE6C();
    sub_22655CE00();
    swift_bridgeObjectRelease();
    v16 = sub_22655D670();
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = v16 & ~v17;
    if (((*(_QWORD *)(v8 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
    {
LABEL_27:
      sub_22649694C((uint64_t)&v31);
      return 0;
    }
    v19 = ~v17;
    while (1)
    {
      sub_226496910(*(_QWORD *)(a2 + 48) + 40 * v18, (uint64_t)&v28);
      sub_22655D640();
      sub_226438600((uint64_t)&v28, (uint64_t)v26);
      __swift_project_boxed_opaque_existential_1(v26, v27);
      swift_getDynamicType();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      sub_22655CDDC();
      sub_22655CE00();
      swift_bridgeObjectRelease();
      __swift_project_boxed_opaque_existential_1(&v28, v29);
      sub_22655CE6C();
      sub_22655CE00();
      swift_bridgeObjectRelease();
      v20 = sub_22655D670();
      sub_22655D640();
      sub_226438600((uint64_t)&v31, (uint64_t)v26);
      __swift_project_boxed_opaque_existential_1(v26, v27);
      swift_getDynamicType();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      sub_22655CDDC();
      sub_22655CE00();
      swift_bridgeObjectRelease();
      __swift_project_boxed_opaque_existential_1(&v31, *((uint64_t *)&v32 + 1));
      sub_22655CE6C();
      sub_22655CE00();
      swift_bridgeObjectRelease();
      v21 = sub_22655D670();
      sub_22649694C((uint64_t)&v28);
      if (v20 == v21)
        break;
      v18 = (v18 + 1) & v19;
      if (((*(_QWORD *)(v8 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
        goto LABEL_27;
    }
    result = sub_22649694C((uint64_t)&v31);
    v7 = v24;
    v4 = v25;
    if (v24)
      goto LABEL_7;
LABEL_9:
    v10 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v10 >= v23)
      return 1;
    v11 = *(_QWORD *)(v22 + 8 * v10);
    v12 = v4 + 1;
    if (!v11)
    {
      v12 = v10 + 1;
      if (v10 + 1 >= v23)
        return 1;
      v11 = *(_QWORD *)(v22 + 8 * v12);
      if (!v11)
      {
        v12 = v10 + 2;
        if (v10 + 2 >= v23)
          return 1;
        v11 = *(_QWORD *)(v22 + 8 * v12);
        if (!v11)
          break;
      }
    }
LABEL_22:
    v24 = (v11 - 1) & v11;
    v25 = v12;
  }
  v13 = v10 + 3;
  if (v13 >= v23)
    return 1;
  v11 = *(_QWORD *)(v22 + 8 * v13);
  if (v11)
  {
    v12 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v23)
      return 1;
    v11 = *(_QWORD *)(v22 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_22;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_22653CF48(unint64_t a1)
{
  return sub_22653CF90(a1, (uint64_t (*)(uint64_t))type metadata accessor for HullPointUUID, (unint64_t *)&qword_255846BF8, (uint64_t)&unk_226560894, (void (*)(uint64_t *, uint64_t))sub_22653671C);
}

uint64_t sub_22653CF6C(unint64_t a1)
{
  return sub_22653CF90(a1, (uint64_t (*)(uint64_t))type metadata accessor for CDTTriangle, (unint64_t *)&qword_255846F48, (uint64_t)&unk_226568250, (void (*)(uint64_t *, uint64_t))sub_226536B30);
}

uint64_t sub_22653CF90(unint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4, void (*a5)(uint64_t *, uint64_t))
{
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t i;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v10 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_22655D400();
    swift_bridgeObjectRelease();
  }
  a2(0);
  sub_226437F28(a3, a2, a4);
  result = sub_22655CF98();
  v18 = result;
  if (v10)
  {
    swift_bridgeObjectRetain();
    v12 = sub_22655D400();
    result = swift_bridgeObjectRelease();
    if (!v12)
      return v18;
  }
  else
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v12)
      return v18;
  }
  if (v12 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v12; ++i)
      {
        v14 = MEMORY[0x2276999E4](i, a1);
        a5(&v17, v14);
        swift_release();
      }
    }
    else
    {
      v15 = (uint64_t *)(a1 + 32);
      do
      {
        v16 = *v15++;
        swift_retain();
        a5(&v17, v16);
        swift_release();
        --v12;
      }
      while (v12);
    }
    return v18;
  }
  __break(1u);
  return result;
}

uint64_t sub_22653D108(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _BYTE v5[40];
  _BYTE v6[40];
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  sub_226535CE4();
  result = sub_22655CF98();
  v7 = result;
  if (v2)
  {
    v4 = a1 + 32;
    do
    {
      sub_226496910(v4, (uint64_t)v5);
      sub_226536E40((uint64_t)v6, (uint64_t)v5);
      sub_22649694C((uint64_t)v6);
      v4 += 40;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_22653D190(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned __int8 *v4;
  unsigned int v5;
  char v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  sub_22653DC58();
  result = sub_22655CF98();
  v7 = result;
  if (v2)
  {
    v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_2265371FC(&v6, v5, &qword_25584A6E8);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_22653D220(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  _OWORD v23[2];
  uint64_t v24;
  uint64_t v25;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v25 = MEMORY[0x24BEE4AF8];
    sub_2264C7B40(0, v2, 0);
    v3 = a1 + 32;
    v4 = v25;
    do
    {
      sub_226438600(v3, (uint64_t)v20);
      v5 = v21;
      v6 = v22;
      v7 = __swift_project_boxed_opaque_existential_1(v20, v21);
      v8 = MEMORY[0x24BDAC7A8](v7);
      v10 = (char *)&v20[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v11 + 16))(v10, v8);
      sub_226484E10((uint64_t)v10, v5, v6, (uint64_t *)v23);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2264C7B40(0, *(_QWORD *)(v4 + 16) + 1, 1);
        v4 = v25;
      }
      v13 = *(_QWORD *)(v4 + 16);
      v12 = *(_QWORD *)(v4 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_2264C7B40(v12 > 1, v13 + 1, 1);
        v4 = v25;
      }
      *(_QWORD *)(v4 + 16) = v13 + 1;
      v14 = v4 + 40 * v13;
      v15 = v23[0];
      v16 = v23[1];
      *(_QWORD *)(v14 + 64) = v24;
      *(_OWORD *)(v14 + 32) = v15;
      *(_OWORD *)(v14 + 48) = v16;
      v3 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v4 = MEMORY[0x24BEE4AF8];
  }
  v17 = sub_22653D108(v4);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t type metadata accessor for CapturedRoom.ModelProvider.Error()
{
  uint64_t result;

  result = qword_25584A6A8;
  if (!qword_25584A6A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22653D408(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255849210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22653D450()
{
  return sub_226437F28(&qword_25584A630, (uint64_t (*)(uint64_t))type metadata accessor for CapturedRoom.ModelProvider.Error, (uint64_t)&protocol conformance descriptor for CapturedRoom.ModelProvider.Error);
}

uint64_t _s13ModelProviderVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s13ModelProviderVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s13ModelProviderVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *_s13ModelProviderVwta(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13ModelProviderVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s13ModelProviderVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CapturedRoom.ModelProvider()
{
  return &type metadata for CapturedRoom.ModelProvider;
}

uint64_t *_s13ModelProviderV5ErrorOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25584A628);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = sub_22655C05C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t _s13ModelProviderV5ErrorOwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25584A628);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_22655C05C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *_s13ModelProviderV5ErrorOwcp(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25584A628);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_22655C05C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *_s13ModelProviderV5ErrorOwca(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25584A628);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = sub_22655C05C();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_22643D7E4((uint64_t)a1, &qword_25584A628);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_22655C05C();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *_s13ModelProviderV5ErrorOwtk(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25584A628);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_22655C05C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *_s13ModelProviderV5ErrorOwta(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25584A628);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = sub_22655C05C();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_22643D7E4((uint64_t)a1, &qword_25584A628);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_22655C05C();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t _s13ModelProviderV5ErrorOwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22653DAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25584A628);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t _s13ModelProviderV5ErrorOwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22653DB30(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25584A628);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_22653DB84(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25584A628);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_22653DBC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25584A628);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_22653DC04()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22655C05C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

unint64_t sub_22653DC58()
{
  unint64_t result;

  result = qword_25584A6E0;
  if (!qword_25584A6E0)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for CapturedRoom.Object.Category, &type metadata for CapturedRoom.Object.Category);
    atomic_store(result, (unint64_t *)&qword_25584A6E0);
  }
  return result;
}

uint64_t sub_22653DC9C()
{
  uint64_t result;

  type metadata accessor for HitPointUtility();
  result = swift_initStaticObject();
  qword_25585B330 = result;
  return result;
}

uint64_t sub_22653DCC4()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HitPointUtility()
{
  return objc_opt_self();
}

int8x8_t sub_22653DCF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, simd_float4x4 a9)
{
  char v9;
  double v11;
  double v12;
  char v13;
  int8x8_t v14;
  int8x8_t v15;
  int8x8_t result;
  int v17;
  float v18;
  float v19;
  float v20;
  float v21;
  float v22;
  float v23;
  float v24;
  float v25;
  float v26;
  float v27;
  float v28;
  float v29;
  unint64_t v30;
  BOOL v31;
  float32x2_t v32;
  float v33;
  unint64_t v34;
  simd_float4 v35;
  simd_float4 v36;
  float32x4_t v37;
  float32x4_t v38;
  __int128 v39;
  int8x8_t v40;

  v9 = a2;
  v39 = *(_OWORD *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawDimensions);
  v35 = *(simd_float4 *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawTransform);
  v36 = *(simd_float4 *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawTransform + 16);
  v38 = *(float32x4_t *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawTransform + 32);
  v37 = *(float32x4_t *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawTransform + 48);
  v11 = sub_2264CB844(a9, v35, v36, v38, v37, a1, a2, a3, a4, a5, a6, a7, a8, 0, *(float32x2_t *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawDimensions));
  v12 = *(double *)&v39;
  LODWORD(v11) = 0;
  v14.i32[0] = v13 & 1;
  result = vand_s8(v15, vdup_lane_s8(vceq_s8(v14, *(int8x8_t *)&v11), 0));
  v17 = *(_DWORD *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_completedSides);
  v18 = 0.0 - (float)(0.5 * *(float *)&v39);
  v19 = vabds_f32(*(float *)result.i32, v18);
  v20 = 3.4028e38;
  if ((v17 & 1) == 0)
    v19 = 3.4028e38;
  v21 = (float)(0.5 * *(float *)&v39) + 0.0;
  v22 = vabds_f32(*(float *)result.i32, v21);
  if ((v17 & 2) == 0)
    v22 = 3.4028e38;
  v23 = vmuls_lane_f32(0.5, *(float32x2_t *)&v39, 1);
  v24 = v23 + 0.0;
  v25 = vabds_f32(*(float *)&result.i32[1], v23 + 0.0);
  if ((v17 & 8) != 0)
    v20 = v25;
  v26 = 0.0 - v23;
  if ((v17 & 4) != 0)
  {
    v27 = vabds_f32(*(float *)&result.i32[1], v26);
    if (v22 >= v19)
      v28 = v19;
    else
      v28 = v22;
    if (v20 < v28)
      v28 = v20;
    if (v27 >= v28)
      v27 = v28;
    goto LABEL_23;
  }
  if (v22 < v19)
  {
    if (v20 >= v22)
    {
      v27 = v22;
      if (v22 > 3.4028e38)
        return result;
      goto LABEL_23;
    }
    goto LABEL_20;
  }
  if (v20 < v19)
  {
LABEL_20:
    v27 = v20;
    if (v20 > 3.4028e38)
      return result;
    goto LABEL_23;
  }
  v27 = v19;
  if (v19 > 3.4028e38)
    return result;
LABEL_23:
  if (v27 != 3.4028e38)
  {
    if (v27 == v19)
    {
      v29 = v18 + 0.1;
    }
    else
    {
      if (v27 != v22)
      {
        if (v27 == v20)
          v33 = v24 + -0.1;
        else
          v33 = v26 + 0.1;
        v30 = __PAIR64__(LODWORD(v33), result.u32[0]);
        if ((v9 & 1) == 0)
        {
LABEL_30:
          v40 = result;
          v34 = v30;
          v31 = sub_2264CB7F0(*(double *)&result, 0.0, v12);
          v30 = v34;
          v32 = (float32x2_t)v40;
          if (v31)
            return (int8x8_t)vaddq_f32(v37, vmlaq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v35, v32.f32[0]), (float32x4_t)v36, v32, 1), (float32x4_t)0, v38)).u64[0];
        }
LABEL_36:
        v32 = (float32x2_t)v30;
        return (int8x8_t)vaddq_f32(v37, vmlaq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v35, v32.f32[0]), (float32x4_t)v36, v32, 1), (float32x4_t)0, v38)).u64[0];
      }
      v29 = v21 + -0.1;
    }
    v30 = __PAIR64__(result.u32[1], LODWORD(v29));
    if ((v9 & 1) == 0)
      goto LABEL_30;
    goto LABEL_36;
  }
  return result;
}

uint64_t sub_22653DF3C(uint64_t a1, char a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6)
{
  float32x4_t v7;
  float32x4_t v8;
  __int128 v9;
  __int128 v10;
  int32x2_t v11;
  float32x4_t v12;
  float32x4_t v13;
  __int128 v14;
  float v15;
  float v16;
  float32x2_t v17;
  float v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  int32x2_t v22;
  float v23;
  __int128 v24;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  _QWORD *v36;
  float32x2_t v37;
  float32x4_t v38;
  uint64_t v39;
  float v40;
  float v41;
  float v42;
  float v43;
  float v44;
  float v45;
  float v46;
  float v47;
  float v48;
  float v49;
  float v50;
  unsigned __int8 v51;
  unsigned int v52;
  unint64_t v53;
  unint64_t v54;
  int8x8_t v55;
  __int32 v56;
  uint64_t v57;
  uint64_t v58;
  float v59;
  uint64_t v60;
  float32x4_t v61;
  float v62;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  float32x4_t v69;
  __int128 v70;
  float32x4_t v71;
  uint64_t v72;
  float32x4_t v73;
  _BYTE v74[64];
  __int128 v75;
  float32x2_t v76;
  __int128 v77;
  float32x2_t v78;
  int8x8_t v79;
  __int128 v80;
  simd_float4 v81;
  float32x4_t v82;
  simd_float4 v83;
  __int128 v84;
  float32x4_t v85;
  uint64_t v86;
  float32x4_t v87;
  simd_float4x4 v88;

  *(__n128 *)&v74[32] = a5;
  *(__n128 *)&v74[48] = a6;
  *(__n128 *)v74 = a3;
  *(__n128 *)&v74[16] = a4;
  v7 = *(float32x4_t *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawTransform);
  v8 = *(float32x4_t *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawTransform + 16);
  v9 = *(_OWORD *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawTransform + 32);
  v10 = *(_OWORD *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawTransform + 48);
  v11 = (int32x2_t)vextq_s8(*(int8x16_t *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawDimensions), *(int8x16_t *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawDimensions), 8uLL).u64[0];
  v12 = *(float32x4_t *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawDimensions);
  v13 = v12;
  v12.i32[0] = v11.i32[0];
  v86 = v12.i64[0];
  *(float32x2_t *)&v14 = vsub_f32(0, *(float32x2_t *)v8.f32);
  v15 = vmuls_lane_f32(0.5, *(float32x2_t *)v13.f32, 1);
  v16 = vmuls_lane_f32(v15, v8, 2);
  v17 = vmul_n_f32(*(float32x2_t *)v8.f32, v15);
  v8.i32[3] = 0;
  v82 = v8;
  v18 = vmuls_lane_f32(0.5 * v13.f32[0], v7, 2);
  *(float32x2_t *)&v19 = vsub_f32(0, *(float32x2_t *)v7.f32);
  *(float32x2_t *)v8.f32 = vmul_n_f32(*(float32x2_t *)v7.f32, 0.5 * v13.f32[0]);
  v7.i32[3] = 0;
  v73 = v7;
  *(float32x2_t *)&v20 = vadd_f32(*(float32x2_t *)&v9, 0);
  *((float *)&v20 + 2) = *((float *)&v9 + 2) + 0.0;
  HIDWORD(v20) = 0;
  *((float *)&v19 + 2) = 0.0 - v7.f32[2];
  HIDWORD(v19) = 0;
  v75 = v20;
  v77 = v19;
  *(float32x2_t *)&v19 = vsub_f32(*(float32x2_t *)&v10, *(float32x2_t *)v8.f32);
  *((float *)&v19 + 2) = *((float *)&v10 + 2) - v18;
  HIDWORD(v19) = 1.0;
  v67 = v19;
  *(float32x2_t *)&v21 = vadd_f32(*(float32x2_t *)&v10, *(float32x2_t *)v8.f32);
  *((float *)&v21 + 2) = *((float *)&v10 + 2) + v18;
  v84 = *(_OWORD *)(a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawDimensions);
  v22 = vzip1_s32(*(int32x2_t *)v13.f32, v11);
  HIDWORD(v21) = 1.0;
  v70 = v21;
  *((float *)&v14 + 2) = 0.0 - v8.f32[2];
  HIDWORD(v14) = 0;
  v80 = v14;
  *(float32x2_t *)v12.f32 = vadd_f32(*(float32x2_t *)&v10, v17);
  v12.f32[2] = *((float *)&v10 + 2) + v16;
  v12.i32[3] = 1.0;
  v69 = v12;
  *(float32x2_t *)v12.f32 = vsub_f32(*(float32x2_t *)&v10, v17);
  v12.f32[2] = *((float *)&v10 + 2) - v16;
  v12.i32[3] = 1.0;
  v71 = v12;
  v12.f32[0] = vmuls_lane_f32(0.5, v13, 2);
  v23 = -(float)(*((float *)&v9 + 2) * v12.f32[0]);
  *(float32x2_t *)&v9 = vneg_f32(*(float32x2_t *)&v9);
  *(float32x2_t *)v12.f32 = vmul_n_f32(*(float32x2_t *)&v9, v12.f32[0]);
  *((float *)&v9 + 2) = -*((float *)&v9 + 2);
  HIDWORD(v9) = 0;
  v65 = v9;
  *(float32x2_t *)&v24 = vadd_f32(*(float32x2_t *)&v10, *(float32x2_t *)v12.f32);
  *((float *)&v24 + 2) = *((float *)&v10 + 2) + v23;
  HIDWORD(v24) = 1.0;
  v66 = v24;
  *(float32x2_t *)&v24 = vsub_f32(*(float32x2_t *)&v10, *(float32x2_t *)v12.f32);
  *((float *)&v24 + 2) = *((float *)&v10 + 2) - v23;
  HIDWORD(v24) = 1.0;
  v68 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A7D8);
  isUniquelyReferenced_nonNull_native = swift_allocObject();
  v33 = isUniquelyReferenced_nonNull_native;
  v34 = 0;
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 16) = xmmword_226566570;
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 32) = v65;
  *(float32x4_t *)(isUniquelyReferenced_nonNull_native + 48) = v82;
  *(float32x4_t *)(isUniquelyReferenced_nonNull_native + 64) = v73;
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 80) = v67;
  *(_QWORD *)(isUniquelyReferenced_nonNull_native + 96) = 0;
  *(_QWORD *)(isUniquelyReferenced_nonNull_native + 104) = v86;
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 112) = v75;
  *(float32x4_t *)(isUniquelyReferenced_nonNull_native + 128) = v82;
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 144) = v77;
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 160) = v70;
  *(_QWORD *)(isUniquelyReferenced_nonNull_native + 176) = 0;
  *(_QWORD *)(isUniquelyReferenced_nonNull_native + 184) = v86;
  *(float32x4_t *)(isUniquelyReferenced_nonNull_native + 192) = v73;
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 208) = v75;
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 224) = v80;
  *(float32x4_t *)(isUniquelyReferenced_nonNull_native + 240) = v69;
  *(_QWORD *)(isUniquelyReferenced_nonNull_native + 256) = 0;
  *(int32x2_t *)(isUniquelyReferenced_nonNull_native + 264) = v22;
  *(float32x4_t *)(isUniquelyReferenced_nonNull_native + 272) = v73;
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 288) = v65;
  *(float32x4_t *)(isUniquelyReferenced_nonNull_native + 304) = v82;
  *(float32x4_t *)(isUniquelyReferenced_nonNull_native + 320) = v71;
  *(_QWORD *)(isUniquelyReferenced_nonNull_native + 336) = 0;
  *(int32x2_t *)(isUniquelyReferenced_nonNull_native + 344) = v22;
  *(float32x4_t *)(isUniquelyReferenced_nonNull_native + 352) = v73;
  *(float32x4_t *)(isUniquelyReferenced_nonNull_native + 368) = v82;
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 384) = v75;
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 400) = v66;
  *(_QWORD *)(isUniquelyReferenced_nonNull_native + 416) = 0;
  *(_QWORD *)(isUniquelyReferenced_nonNull_native + 424) = v84;
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 432) = v77;
  *(float32x4_t *)(isUniquelyReferenced_nonNull_native + 448) = v82;
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 464) = v65;
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 480) = v68;
  v35 = a2 ^ 1;
  *(_QWORD *)(isUniquelyReferenced_nonNull_native + 496) = 0;
  *(_QWORD *)(isUniquelyReferenced_nonNull_native + 504) = v84;
  v36 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v76 = *(float32x2_t *)(v33 + v34 + 104);
    v78 = *(float32x2_t *)(v33 + v34 + 96);
    v81 = *(simd_float4 *)(v33 + v34 + 32);
    v83 = *(simd_float4 *)(v33 + v34 + 48);
    v85 = *(float32x4_t *)(v33 + v34 + 80);
    v87 = *(float32x4_t *)(v33 + v34 + 64);
    sub_2264CB844(*(simd_float4x4 *)v74, v81, v83, v87, v85, isUniquelyReferenced_nonNull_native, v26, v27, v28, v29, v30, v31, v32, v78, v76);
    if ((v26 & 1) == 0)
    {
      v39 = isUniquelyReferenced_nonNull_native;
      v40 = v78.f32[0] - (float)(0.5 * v76.f32[0]);
      v41 = vabds_f32(*(float *)&isUniquelyReferenced_nonNull_native, v40);
      v42 = v78.f32[0] + (float)(0.5 * v76.f32[0]);
      v43 = vabds_f32(*(float *)&isUniquelyReferenced_nonNull_native, v42);
      v44 = vmuls_lane_f32(0.5, v76, 1);
      v45 = v78.f32[1] + v44;
      v46 = vabds_f32(*((float *)&isUniquelyReferenced_nonNull_native + 1), v78.f32[1] + v44);
      v47 = v78.f32[1] - v44;
      v48 = vabds_f32(*((float *)&isUniquelyReferenced_nonNull_native + 1), v78.f32[1] - v44);
      if (v43 >= v41)
        v49 = v41;
      else
        v49 = v43;
      if (v46 < v49)
        v49 = v46;
      if (v48 >= v49)
        v48 = v49;
      v72 = isUniquelyReferenced_nonNull_native;
      if (v48 == v41)
      {
        *(float *)&v39 = v40 + 0.1;
      }
      else if (v48 == v43)
      {
        *(float *)&v39 = v42 + -0.1;
      }
      else
      {
        if (v48 == v46)
          v50 = v45 + -0.1;
        else
          v50 = v47 + 0.1;
        *((float *)&v39 + 1) = v50;
      }
      v79 = (int8x8_t)v39;
      v51 = v35 & (v40 <= *(float *)&isUniquelyReferenced_nonNull_native);
      if (v42 < *(float *)&isUniquelyReferenced_nonNull_native)
        v51 = 0;
      if (v47 > *((float *)&isUniquelyReferenced_nonNull_native + 1))
        v51 = 0;
      if ((v51 & (*((float *)&isUniquelyReferenced_nonNull_native + 1) <= v45)) != 0)
        v52 = -1;
      else
        v52 = 0;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_226486AE0(0, v36[2] + 1, 1, v36);
        v36 = (_QWORD *)isUniquelyReferenced_nonNull_native;
      }
      v54 = v36[2];
      v53 = v36[3];
      v55 = (int8x8_t)v72;
      v56 = v73.i32[3];
      if (v54 >= v53 >> 1)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_226486AE0((_QWORD *)(v53 > 1), v54 + 1, 1, v36);
        v55 = (int8x8_t)v72;
        v56 = v73.i32[3];
        v36 = (_QWORD *)isUniquelyReferenced_nonNull_native;
      }
      v37 = (float32x2_t)vbsl_s8((int8x8_t)vdup_n_s32(v52), v55, v79);
      v38 = vaddq_f32(v85, vmlaq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v81, v37.f32[0]), (float32x4_t)v83, v37, 1), (float32x4_t)0, v87));
      v38.i32[3] = v56;
      v36[2] = v54 + 1;
      *(float32x4_t *)&v36[2 * v54 + 4] = v38;
      v73.i32[3] = v56;
    }
    v34 += 80;
  }
  while (v34 != 480);
  swift_bridgeObjectRelease();
  v88 = __invert_f4(*(simd_float4x4 *)v74);
  v57 = v36[2];
  if (v57)
  {
    v58 = 0;
    v59 = 3.4028e38;
    do
    {
      while (1)
      {
        v60 = v58 + 1;
        v61 = vaddq_f32((float32x4_t)v88.columns[3], vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v88.columns[0], COERCE_FLOAT(*(_OWORD *)&v36[2 * v58 + 4])), (float32x4_t)v88.columns[1], (float32x2_t)v36[2 * v58 + 4], 1), (float32x4_t)v88.columns[2], *(float32x4_t *)&v36[2 * v58 + 4], 2));
        v62 = sqrtf(vaddv_f32((float32x2_t)*(_OWORD *)&vmulq_f32(v61, v61)));
        if (v62 < v59)
          break;
        ++v58;
        if (v57 == v60)
          return swift_bridgeObjectRelease();
      }
      v59 = v62;
    }
    while (v57 - 1 != v58++);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_22653E450(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  float v18;
  double v19;
  double v20;
  float v21;
  id v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(BOOL *, _QWORD);
  void (*v33)(uint64_t, unint64_t);
  uint64_t (*v35)(BOOL *, _QWORD);
  char *v36;
  void (*v37)(char *, unint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  unint64_t v43;
  char *v44;
  char *v45;
  BOOL v46[32];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25584A7E8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22655C674();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v45 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t)&v38 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v44 = (char *)&v38 - v14;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v38 - v16;
  sub_226552B84(v46);
  if (v46[0])
    v18 = 30.0;
  else
    v18 = 0.0;
  sub_226551FA4(v46);
  sub_22653FF48((unsigned __int8 *)v46);
  v20 = v19;
  sub_22655C794();
  if (v21 != v18)
  {
    sub_22655C7A0();
    sub_22655C7B8();
  }
  sub_22653FDF4(a1, v20);
  v22 = objc_msgSend(a1, sel_layer);
  v23 = objc_msgSend(v22, sel_sublayers);

  if (v23)
  {
    sub_22643F548(0, &qword_25584A7E0);
    v24 = sub_22655CECC();

    if (v24 >> 62)
      goto LABEL_23;
    v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v25; v25 = sub_22655D400())
    {
      v39 = v17;
      v40 = v12;
      v41 = v8;
      v42 = v6;
      v43 = v7;
      v7 = v24 & 0xC000000000000001;
      v12 = 4;
      v8 = 0x24BDE5000uLL;
      while (1)
      {
        v17 = (char *)(v12 - 4);
        v26 = v7 ? (id)MEMORY[0x2276999E4](v12 - 4, v24) : *(id *)(v24 + 8 * v12);
        v27 = v26;
        v6 = (char *)(v12 - 3);
        if (__OFADD__(v17, 1))
          break;
        objc_opt_self();
        v28 = swift_dynamicCastObjCClass();
        if (v28)
        {
          v29 = (void *)v28;
          swift_bridgeObjectRelease_n();
          swift_beginAccess();
          if (*(_BYTE *)(a2 + 141))
            v30 = 81;
          else
            v30 = 553;
          objc_msgSend(v29, sel_setPixelFormat_, v30);

          goto LABEL_21;
        }

        ++v12;
        if (v6 == (char *)v25)
        {
          swift_bridgeObjectRelease_n();
LABEL_21:
          v6 = v42;
          v7 = v43;
          v12 = v40;
          v8 = v41;
          v17 = v39;
          goto LABEL_25;
        }
      }
      __break(1u);
LABEL_23:
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease_n();
  }
LABEL_25:
  swift_beginAccess();
  sub_22655C788();
  swift_beginAccess();
  if (*(_BYTE *)(a2 + 143) == 1)
  {
    v31 = (uint64_t)v44;
    sub_22655C668();
    v32 = (uint64_t (*)(BOOL *, _QWORD))sub_22655C680();
    sub_22650F0F8(v17, v31);
    v33 = *(void (**)(uint64_t, unint64_t))(v8 + 8);
    v33(v31, v7);
    v33((uint64_t)v17, v7);
    return v32(v46, 0);
  }
  else
  {
    sub_22655C668();
    v35 = (uint64_t (*)(BOOL *, _QWORD))sub_22655C680();
    (*(void (**)(char *))(v8 + 16))(v17);
    sub_226540038();
    v36 = v45;
    sub_22655D1D8();
    if ((sub_22655D1E4() & 1) != 0)
    {
      v37 = *(void (**)(char *, unint64_t))(v8 + 8);
      v37(v36, v7);
      (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(v8 + 56))(v6, 1, 1, v7);
    }
    else
    {
      sub_22655D1F0();
      (*(void (**)(char *, char *, unint64_t))(v8 + 32))(v6, v36, v7);
      (*(void (**)(char *, _QWORD, uint64_t, unint64_t))(v8 + 56))(v6, 0, 1, v7);
      v37 = *(void (**)(char *, unint64_t))(v8 + 8);
    }
    v37((char *)v12, v7);
    sub_226540080((uint64_t)v6);
    return v35(v46, 0);
  }
}

void *sub_22653E900(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  uint64_t v9;
  id v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  char v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  float v27;
  id v28;
  void *v29;
  float v30;
  id v31;
  id v32;
  void (*v33)(_BYTE *, _QWORD);
  __int128 v34;
  id v35;
  char *v36;
  char *v37;
  void (*v38)(_BYTE *, _QWORD);
  char *v39;
  unint64_t v40;
  char *v41;
  __n128 v42;
  char *v43;
  uint64_t v44;
  char *v45;
  void (*v46)(_BYTE *, _QWORD);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  unint64_t v51;
  char *v52;
  __n128 v53;
  char *v54;
  char *v55;
  void (*v56)(_BYTE *, _QWORD);
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  float v67;
  uint64_t v68;
  unsigned int (*v69)(uint64_t, uint64_t, uint64_t);
  _BYTE v70[32];

  v2 = v1;
  swift_beginAccess();
  v4 = *(unsigned __int8 *)(a1 + 178);
  v5 = (_BYTE *)(v1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_isModelEnabled);
  swift_beginAccess();
  *v5 = v4;
  v6 = OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView;
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_coachingOverlayView);
  if (!v7)
    goto LABEL_52;
  *(_BYTE *)(v7 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_isModelEnabled) = v4;
  result = *(void **)(v7 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView);
  if (!result)
  {
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  objc_msgSend(result, sel_setHidden_, v4 ^ 1u);
  v9 = *(_QWORD *)(v2 + v6);
  if (!v9)
    goto LABEL_52;
  result = *(void **)(v9 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouseARView);
  if (!result)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  v10 = objc_msgSend(result, sel_layer);
  v11 = objc_msgSend(v10, sel_sublayers);

  if (v11)
  {
    sub_22643F548(0, &qword_25584A7E0);
    v12 = sub_22655CECC();

    if (v12 >> 62)
      goto LABEL_50;
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v13; v13 = sub_22655D400())
    {
      v68 = v6;
      v6 = 4;
      while (1)
      {
        v14 = (v12 & 0xC000000000000001) != 0
            ? (id)MEMORY[0x2276999E4](v6 - 4, v12)
            : *(id *)(v12 + 8 * v6);
        v15 = v14;
        v16 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
          break;
        objc_opt_self();
        v17 = swift_dynamicCastObjCClass();
        if (v17)
        {
          v18 = (void *)v17;
          swift_bridgeObjectRelease_n();
          swift_beginAccess();
          if (*(_BYTE *)(a1 + 141))
            v19 = 81;
          else
            v19 = 553;
          objc_msgSend(v18, sel_setPixelFormat_, v19);

          goto LABEL_20;
        }

        ++v6;
        if (v16 == v13)
        {
          swift_bridgeObjectRelease_n();
LABEL_20:
          v6 = v68;
          goto LABEL_21;
        }
      }
      __break(1u);
LABEL_50:
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease_n();
    v20 = *(void **)(v2 + v6);
    if (!v20)
      goto LABEL_52;
  }
  else
  {
LABEL_21:
    v20 = *(void **)(v2 + v6);
    if (!v20)
    {
LABEL_52:
      v23 = 0;
      goto LABEL_53;
    }
  }
  swift_beginAccess();
  v21 = *(_BYTE *)(a1 + 179);
  v22 = v20;
  sub_22652F754(v21);

  v23 = *(_QWORD *)(v2 + v6);
  if (!v23)
    goto LABEL_53;
  result = (void *)swift_beginAccess();
  v24 = *(_QWORD *)(v23 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse);
  if (!v24)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  *(_DWORD *)(v24 + qword_25583FB50) = *(_DWORD *)(a1 + 180);
  v25 = (id)v23;
  swift_retain();
  sub_2264366BC();

  swift_release();
  v26 = *(void **)(v2 + v6);
  if (!v26)
    goto LABEL_52;
  swift_beginAccess();
  v27 = *(float *)(a1 + 184);
  v28 = v26;
  sub_22652F86C(v27);

  v29 = *(void **)(v2 + v6);
  if (!v29)
    goto LABEL_52;
  swift_beginAccess();
  v30 = *(float *)(a1 + 188);
  v31 = v29;
  sub_22652F890(v30);

  v23 = *(_QWORD *)(v2 + v6);
  if (v23)
  {
    result = (void *)swift_beginAccess();
    if (!*(_QWORD *)(v23 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_ambientLight))
    {
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }
    v32 = (id)v23;
    swift_retain();
    sub_22655C1E8();
    v33 = (void (*)(_BYTE *, _QWORD))sub_22655CADC();
    sub_22655C560();
    v33(v70, 0);

    swift_release();
    v23 = *(_QWORD *)(v2 + v6);
    if (v23)
    {
      result = (void *)swift_beginAccess();
      v34 = *(_OWORD *)(a1 + 208);
      *(_OWORD *)(v23 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_directionalLightDirection) = v34;
      if (!*(_QWORD *)(v23 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_directionalLight))
      {
LABEL_75:
        __break(1u);
        goto LABEL_76;
      }
      v67 = *(float *)&v34;
      __sincosf_stret(vmuls_lane_f32(0.5, *(float32x2_t *)&v34, 1));
      __sincosf_stret(0.5 * v67);
      sub_22655C488();
      v35 = (id)v23;
      swift_retain();
      sub_22655C260();

      swift_release();
      v36 = *(char **)(v2 + v6);
      if (!v36)
        goto LABEL_52;
      result = (void *)swift_beginAccess();
      if (!*(_QWORD *)&v36[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_directionalLight])
      {
LABEL_76:
        __break(1u);
        goto LABEL_77;
      }
      v37 = v36;
      swift_retain();
      v38 = (void (*)(_BYTE *, _QWORD))sub_22655C530();
      sub_22655C5B4();
      v38(v70, 0);

      swift_release();
      v39 = *(char **)(v2 + v6);
      if (!v39)
        goto LABEL_52;
      result = (void *)swift_beginAccess();
      if (!*(_QWORD *)&v39[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse])
      {
LABEL_77:
        __break(1u);
        goto LABEL_78;
      }
      v40 = *(_QWORD *)(a1 + 232);
      v41 = v39;
      swift_retain();
      v42.n128_u64[0] = v40;
      sub_226436B7C(v42);

      swift_release();
      v43 = *(char **)(v2 + v6);
      if (!v43)
        goto LABEL_52;
      v44 = v6;
      result = (void *)swift_beginAccess();
      if (!*(_QWORD *)&v43[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_directionalLight])
      {
LABEL_78:
        __break(1u);
        goto LABEL_79;
      }
      v45 = v43;
      swift_retain();
      v46 = (void (*)(_BYTE *, _QWORD))sub_22655C53C();
      v48 = v47;
      v49 = sub_22655C5A8();
      v69 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 48);
      if (!v69(v48, 1, v49))
        sub_22655C59C();
      v46(v70, 0);

      swift_release();
      v6 = v44;
      v50 = *(char **)(v2 + v44);
      if (!v50)
        goto LABEL_52;
      result = (void *)swift_beginAccess();
      if (!*(_QWORD *)&v50[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse])
      {
LABEL_79:
        __break(1u);
        goto LABEL_80;
      }
      v51 = *(_QWORD *)(a1 + 240);
      v52 = v50;
      swift_retain();
      v53.n128_u64[0] = v51;
      sub_226436F50(v53);

      swift_release();
      v54 = *(char **)(v2 + v44);
      if (!v54)
        goto LABEL_52;
      result = (void *)swift_beginAccess();
      if (!*(_QWORD *)&v54[OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_directionalLight])
      {
LABEL_80:
        __break(1u);
        goto LABEL_81;
      }
      v55 = v54;
      swift_retain();
      v56 = (void (*)(_BYTE *, _QWORD))sub_22655C53C();
      if (!v69(v57, 1, v49))
        sub_22655C590();
      v56(v70, 0);

      swift_release();
      v23 = *(_QWORD *)(v2 + v44);
      if (v23)
      {
        result = (void *)swift_beginAccess();
        v58 = *(_QWORD *)(v23 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse);
        if (!v58)
        {
LABEL_81:
          __break(1u);
          goto LABEL_82;
        }
        *(_BYTE *)(v58 + qword_25583FB40) = *(_BYTE *)(a1 + 177);
        v59 = (id)v23;
        swift_retain();
        sub_226435858();

        result = (void *)swift_release();
        v60 = *(_QWORD *)(v2 + v44);
        if (!v60)
          goto LABEL_52;
        if (!*(_QWORD *)(v60 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse))
        {
LABEL_82:
          __break(1u);
          return result;
        }
        swift_retain();
        v23 = *(_QWORD *)(sub_226434EF4() + 16);
        swift_release();
        swift_release();
      }
    }
  }
LABEL_53:
  swift_beginAccess();
  if (*(_BYTE *)(a1 + 176) == 1)
  {
    swift_beginAccess();
    v61 = v23 & 0xFFFFFFFFFFFFFFF9 | 2;
    if ((v23 & 4) == 0)
      v61 = v23 | 2;
    v62 = v23 | 6;
    if ((v23 & 4) != 0)
      v62 = v23 | 2;
    if (*(_BYTE *)(a1 + 177) == 1)
      v63 = v62;
    else
      v63 = v61;
  }
  else if ((v23 & 4) != 0)
  {
    v63 = (v23 & 0xFFFFFFFFFFFFFFFDLL ^ 4) & v23;
  }
  else
  {
    v63 = v23 & 0xFFFFFFFFFFFFFFFDLL;
  }
  result = (void *)swift_beginAccess();
  v64 = *(_QWORD *)(v2 + v6);
  if (v64)
  {
    if (*(_QWORD *)(v64 + OBJC_IVAR____TtC8RoomPlan30RoomCaptureCoachingOverlayView_dollHouse))
    {
      v65 = v63 & 0xFFFFFFFFFFFFFFFELL | (*(_BYTE *)(a1 + 177) == 1);
      swift_retain();
      v66 = sub_226434EF4();
      *(_QWORD *)(v66 + 16) = v65;
      sub_226496F74((v63 & 2) != 0);
      if ((*(_BYTE *)(v66 + 16) & 1) == 0)
      {
        sub_226499D58();
        sub_2264477D0();
        swift_release();
      }
      swift_release();
      return (void *)swift_release();
    }
    goto LABEL_71;
  }
  return result;
}

uint64_t sub_22653F264(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  double v7;
  float v8;
  unsigned __int8 v9;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_worldSpaceManager);
  if (v2)
  {
    v3 = result;
    v4 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan17WorldSpaceManager_worldViewManager) + 24);
    v5 = *(void **)(v1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
    swift_retain();
    swift_retain();
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v6, sel_contentScaleFactor);
      v8 = v7;
      *(float *)(v4 + 140) = v8;
      swift_beginAccess();
      *(float *)(v4 + 156) = *(float *)(v3 + 172) * v8;
      sub_226447B50();

    }
    swift_beginAccess();
    v9 = *(_BYTE *)(v3 + 177);
    sub_2265059C8(&v9);
    swift_release();
    return swift_release();
  }
  return result;
}

void *sub_22653F380(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  void *result;
  uint64_t v6;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  _QWORD *v11;
  uint64_t v12;
  char v13;
  _QWORD *v14;
  uint64_t v15;
  char v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  _UNKNOWN **v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v2 = v1;
  swift_beginAccess();
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_captureSession);
  if (a1[166] == 1)
  {
    result = (void *)swift_beginAccess();
    if (!*v4)
    {
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    swift_retain();
    v6 = sub_226517CE4();
    swift_release();
    v7 = *(_BYTE *)(v6 + 17) | 3;
    goto LABEL_7;
  }
  result = (void *)swift_beginAccess();
  if (!*v4)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  swift_retain();
  v6 = sub_226517CE4();
  swift_release();
  if ((*(_BYTE *)(v6 + 17) & 3) != 0)
  {
    v7 = *(_BYTE *)(v6 + 17) & 0xFC;
LABEL_7:
    *(_BYTE *)(v6 + 17) = v7;
  }
  swift_release();
  swift_beginAccess();
  v8 = (_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_captureSession);
  if (a1[168] == 1)
  {
    result = (void *)swift_beginAccess();
    if (!*v8)
    {
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    swift_retain();
    v9 = sub_226517CE4();
    swift_release();
    v10 = *(_BYTE *)(v9 + 17) | 0x38;
    goto LABEL_14;
  }
  result = (void *)swift_beginAccess();
  if (!*v8)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  swift_retain();
  v9 = sub_226517CE4();
  swift_release();
  if ((*(_BYTE *)(v9 + 17) & 0x38) != 0)
  {
    v10 = *(_BYTE *)(v9 + 17) & 0xC7;
LABEL_14:
    *(_BYTE *)(v9 + 17) = v10;
  }
  swift_release();
  swift_beginAccess();
  v11 = (_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_captureSession);
  if (a1[167] == 1)
  {
    result = (void *)swift_beginAccess();
    if (!*v11)
    {
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    swift_retain();
    v12 = sub_226517CE4();
    swift_release();
    v13 = *(_BYTE *)(v12 + 17) | 4;
    goto LABEL_21;
  }
  result = (void *)swift_beginAccess();
  if (!*v11)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  swift_retain();
  v12 = sub_226517CE4();
  swift_release();
  if ((*(_BYTE *)(v12 + 17) & 4) != 0)
  {
    v13 = *(_BYTE *)(v12 + 17) & 0xFB;
LABEL_21:
    *(_BYTE *)(v12 + 17) = v13;
  }
  swift_release();
  swift_beginAccess();
  v14 = (_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_captureSession);
  if (a1[170] == 1)
  {
    result = (void *)swift_beginAccess();
    if (!*v14)
    {
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
    swift_retain();
    v15 = sub_226517CE4();
    swift_release();
    v16 = *(_BYTE *)(v15 + 17) | 2;
    goto LABEL_28;
  }
  result = (void *)swift_beginAccess();
  if (!*v14)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  swift_retain();
  v15 = sub_226517CE4();
  swift_release();
  if ((*(_BYTE *)(v15 + 17) & 2) != 0)
  {
    v16 = *(_BYTE *)(v15 + 17) & 0xFD;
LABEL_28:
    *(_BYTE *)(v15 + 17) = v16;
  }
  swift_release();
  swift_beginAccess();
  v17 = (_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_captureSession);
  if (a1[158] == 1)
  {
    result = (void *)swift_beginAccess();
    if (!*v17)
    {
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
    result = *(void **)(*v17 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arWorldTrackingConfiguration);
    if (!result)
    {
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
    v18 = 24;
LABEL_36:
    objc_msgSend(result, sel_setFrameSemantics_, v18);
    v19 = (uint64_t *)(v2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_captureSession);
    result = (void *)swift_beginAccess();
    if (*v19)
    {
      swift_retain();
      v20 = sub_226517CE4();
      swift_release();
      swift_beginAccess();
      *(_BYTE *)(v20 + 16) = a1[159] == 1;
      swift_release();
      if (qword_25583F9E8 != -1)
        swift_once();
      v21 = qword_25585B3A0;
      v22 = a1[159] == 2;
      *(_BYTE *)(qword_25585B3A0 + 16) = v22;
      if (v22)
      {
        v23 = &off_24EDE6F08;
        if (!*v19)
          v23 = 0;
        *(_QWORD *)(v21 + 32) = v23;
        swift_unknownObjectWeakAssign();
      }
      if (qword_25583F950 != -1)
        swift_once();
      v24 = qword_25585AFD0;
      swift_beginAccess();
      *(_BYTE *)(v24 + 32) = a1[162];
      if (qword_25583F8C0 != -1)
        swift_once();
      v25 = qword_25585AE48;
      result = (void *)swift_beginAccess();
      *(_BYTE *)(v25 + 32) = a1[163];
      v26 = *v19;
      if (*v19)
      {
        result = (void *)swift_beginAccess();
        *(_BYTE *)(v26 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_enableLiveDump) = a1[164];
        v27 = *v19;
        if (*v19)
        {
          swift_beginAccess();
          v28 = a1[165];
          result = (void *)swift_beginAccess();
          *(_BYTE *)(v27 + 64) = v28;
          return result;
        }
        goto LABEL_53;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  result = (void *)swift_beginAccess();
  if (!*v17)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  result = *(void **)(*v17 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_arWorldTrackingConfiguration);
  if (result)
  {
    v18 = 8;
    goto LABEL_36;
  }
LABEL_65:
  __break(1u);
  return result;
}

void sub_22653F91C(float a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v4;
  id v5;
  float *v6;
  float v7;
  int v8;
  _BOOL4 v9;
  float v10;
  BOOL v11;
  float v12;
  BOOL v13;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
  if (v2)
  {
    v4 = qword_25583F9D0;
    v5 = v2;
    if (v4 != -1)
      swift_once();
    v6 = (float *)off_25584AF28;
    swift_beginAccess();
    v7 = v6[37];
    swift_beginAccess();
    v8 = *((unsigned __int8 *)v6 + 152);
    sub_226552B84(&v13);
    v9 = v13;
    sub_22655C794();
    if (v7 <= a1)
      v11 = !v9;
    else
      v11 = v8 == 0;
    if (v11)
      v12 = 0.0;
    else
      v12 = 30.0;
    if (v10 != v12)
    {
      sub_22655C7A0();
      sub_22655C7B8();
    }

  }
}

void sub_22653FA24(float a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v4;
  id v5;
  float *v6;
  float v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  double v15;
  double v16;
  double v17;
  unsigned __int8 v18;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
  if (v2)
  {
    v4 = qword_25583F9D0;
    v5 = v2;
    if (v4 != -1)
      swift_once();
    v6 = (float *)off_25584AF28;
    swift_beginAccess();
    v7 = v6[36];
    swift_beginAccess();
    v18 = *((_BYTE *)v6 + 154);
    sub_22653FF48(&v18);
    v9 = v8;
    sub_226551FA4(&v18);
    sub_22653FF48(&v18);
    v11 = v10;
    objc_msgSend(v5, sel_contentScaleFactor);
    v13 = v12;
    v14 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v14, sel_scale);
    v16 = v15;

    v17 = v13 / v16;
    if (v7 <= a1)
    {
      if (v17 != v9)
        goto LABEL_8;
    }
    else if (v17 != v11)
    {
      v9 = v11;
LABEL_8:
      sub_22653FDF4(v5, v9);
    }

  }
}

uint64_t sub_22653FB90()
{
  uint64_t result;

  result = sub_22653FBAC();
  dword_25585B338 = result;
  return result;
}

uint64_t sub_22653FBAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t ObjCClassFromMetadata;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  unsigned int v16;

  v0 = sub_22655CB84();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22643F548(0, &qword_2558469F0);
  v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_configurableCaptureDeviceForPrimaryCamera);
  if (!v4)
    return 60;
  v5 = v4;
  objc_msgSend(v4, sel_activeVideoMinFrameDuration);
  v6 = v16;
  objc_msgSend(v5, sel_activeVideoMinFrameDuration);
  v7 = v16;
  if (v16 == v6)
  {

  }
  else
  {
    type metadata accessor for Constants();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v10 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v11 = objc_msgSend(v10, sel_bundleIdentifier);

    if (v11)
    {
      sub_22655CD88();

    }
    sub_22643F548(0, (unint64_t *)&qword_255843DE0);
    sub_22655D124();
    sub_22655CB90();
    v12 = sub_22655CB6C();
    v13 = sub_22655CFF8();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_226423000, v12, v13, "Varying framerate, taking max framerate as native value", v14, 2u);
      MEMORY[0x22769A884](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  if ((int)v6 <= (int)v7)
    return v7;
  else
    return v6;
}

id sub_22653FDF4(void *a1, double a2)
{
  uint64_t v2;
  double v5;
  double v6;
  id v7;
  double v8;
  double v9;
  id result;
  double v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  float *v15;

  objc_msgSend(a1, sel_contentScaleFactor);
  v6 = v5;
  v7 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v7, sel_scale);
  v9 = v8;

  objc_msgSend(a1, sel_setContentScaleFactor_, v9 * a2);
  result = objc_msgSend(a1, sel_contentScaleFactor);
  if (v11 != v6)
  {
    v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_worldSpaceManager);
    if (v12)
    {
      v13 = *(_QWORD *)(*(_QWORD *)(v12 + OBJC_IVAR____TtC8RoomPlan17WorldSpaceManager_worldViewManager) + 24);
      swift_retain();
      objc_msgSend(a1, sel_contentScaleFactor);
      *(float *)&v14 = v14;
      *(_DWORD *)(v13 + 140) = LODWORD(v14);
      if (qword_25583F9D0 != -1)
        swift_once();
      v15 = (float *)off_25584AF28;
      swift_beginAccess();
      *(float *)(v13 + 156) = v15[43] * *(float *)(v13 + 140);
      sub_226447B50();
      return (id)swift_release();
    }
  }
  return result;
}

void sub_22653FF48(unsigned __int8 *a1)
{
  uint64_t v1;
  id v2;
  CGRect v3;
  CGRect v4;

  v1 = *a1;
  v2 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v2, sel_bounds);
  CGRectGetWidth(v3);
  objc_msgSend(v2, sel_bounds);
  CGRectGetHeight(v4);
  objc_msgSend(v2, sel_scale);

  __asm { BR              X9 }
}

double sub_22653FFE8(double a1, double a2)
{
  return 960.0 / a2;
}

unint64_t sub_226540038()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2558491C0;
  if (!qword_2558491C0)
  {
    v1 = sub_22655C674();
    result = MEMORY[0x22769A794](MEMORY[0x24BDE7F38], v1);
    atomic_store(result, (unint64_t *)&qword_2558491C0);
  }
  return result;
}

uint64_t sub_226540080(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25584A7E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for FloorEntity()
{
  uint64_t result;

  result = qword_25584A7F0;
  if (!qword_25584A7F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2265400FC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_226540138()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (*(_QWORD *)(v0 + qword_25585AE18))
  {
    type metadata accessor for ScanEntity();
    swift_retain();
    sub_22655C218();
    swift_release();
  }
  if (qword_25583F908 != -1)
    swift_once();
  if (qword_25585AEE0)
  {
    swift_beginAccess();
    v1 = swift_retain();
    sub_226540344(v1, (uint64_t)sub_2265347C8, (void (*)(uint64_t, uint64_t))sub_226546108, (void (*)(void))sub_2265478D4, sub_2265405D8);
    swift_endAccess();
    swift_release();
    swift_release();
  }
  v2 = sub_22655C8C0();
  v3 = v2 + qword_25585ADF8;
  v4 = sub_22655C140();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v2 + qword_25585AE00);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2265402F4()
{
  return type metadata accessor for FloorEntity();
}

uint64_t sub_2265402FC(uint64_t a1)
{
  return sub_226540344(a1, (uint64_t)sub_2265347C8, (void (*)(uint64_t, uint64_t))sub_226546108, (void (*)(void))sub_2265478D4, sub_2265405D8);
}

uint64_t sub_226540320(uint64_t a1)
{
  return sub_226540344(a1, (uint64_t)sub_226534E48, (void (*)(uint64_t, uint64_t))sub_226546B30, (void (*)(void))sub_226549B24, (uint64_t (*)(uint64_t, uint64_t))sub_226540830);
}

uint64_t sub_226540344(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t), void (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t *v5;
  uint64_t *v8;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void);
  char v18;
  char v19;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v23;

  v8 = v5;
  v10 = *v8;
  if ((*v8 & 0xC000000000000001) == 0)
  {
LABEL_8:
    v17 = a4;
    swift_bridgeObjectRetain();
    a2 = ((uint64_t (*)(uint64_t))a2)(a1);
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v15 = *v8;
      v23 = *v8;
      *v8 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        v17();
        v15 = v23;
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v10 < 0)
    v12 = *v8;
  else
    v12 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  swift_retain();
  v13 = sub_22655D3C4();
  swift_release();
  if (!v13)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRelease();
  v14 = sub_22655D274();
  v15 = a5(v12, v14);
  swift_retain();
  a2 = ((uint64_t (*)(uint64_t))a2)(a1);
  a1 = v16;
  swift_release();
  if ((a1 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_11:
  swift_release();
  v21 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * a2);
  a3(a2, v15);
  *v8 = v15;
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_2265404B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_226534CD0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v15 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_22654A764();
      v9 = v15;
    }
    swift_bridgeObjectRelease();
    v10 = *(_QWORD *)(v9 + 56);
    v11 = sub_22655C05C();
    v12 = *(_QWORD *)(v11 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 32))(a2, v10 + *(_QWORD *)(v12 + 72) * v6, v11);
    sub_2265471B8(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
  }
  else
  {
    v14 = sub_22655C05C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
}

uint64_t sub_2265405D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25584A840);
    v2 = sub_22655D424();
    v18 = v2;
    sub_22655D3AC();
    v3 = sub_22655D3D0();
    if (v3)
    {
      v4 = v3;
      type metadata accessor for ScanEntity();
      do
      {
        swift_dynamicCast();
        type metadata accessor for ScanEntityDebugUtility();
        swift_dynamicCast();
        v2 = v18;
        v12 = *(_QWORD *)(v18 + 16);
        if (*(_QWORD *)(v18 + 24) <= v12)
        {
          sub_226540978(v12 + 1, 1);
          v2 = v18;
        }
        sub_226437F28(&qword_25584A6B8, (uint64_t (*)(uint64_t))type metadata accessor for ScanEntity, MEMORY[0x24BDE71F8]);
        result = sub_22655CCD4();
        v6 = v2 + 64;
        v7 = -1 << *(_BYTE *)(v2 + 32);
        v8 = result & ~v7;
        v9 = v8 >> 6;
        if (((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          v10 = __clz(__rbit64((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v13 = 0;
          v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v15 = v9 == v14;
            if (v9 == v14)
              v9 = 0;
            v13 |= v15;
            v16 = *(_QWORD *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(_QWORD *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        v11 = 8 * v10;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + v11) = v17;
        *(_QWORD *)(*(_QWORD *)(v2 + 56) + v11) = v4;
        ++*(_QWORD *)(v2 + 16);
        v4 = sub_22655D3D0();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B00];
  }
  return v2;
}

_QWORD *sub_226540830(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  _QWORD *v8;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25584A8C8);
    v2 = (_QWORD *)sub_22655D424();
    v8 = v2;
    sub_22655D3AC();
    v3 = sub_22655D3D0();
    if (v3)
    {
      v4 = v3;
      type metadata accessor for PixelBufferFormat();
      do
      {
        swift_dynamicCast();
        type metadata accessor for CVPixelBufferPool(0);
        swift_dynamicCast();
        v2 = v8;
        v5 = v8[2];
        if (v8[3] <= v5)
        {
          sub_226544638(v5 + 1, 1);
          v2 = v8;
        }
        sub_226547800(v7, v4, v2);
        v4 = sub_22655D3D0();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (_QWORD *)MEMORY[0x24BEE4B00];
  }
  return v2;
}

uint64_t sub_226540978(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  char v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25584A840);
  v35 = a2;
  v6 = sub_22655D418();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v33 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v33)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v34 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v33)
        goto LABEL_33;
      v23 = *(_QWORD *)(v34 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v33)
        {
LABEL_33:
          swift_release();
          v3 = v2;
          if ((v35 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v34 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v33)
              goto LABEL_33;
            v23 = *(_QWORD *)(v34 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = 8 * v20;
    v30 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v29);
    v31 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v29);
    if ((v35 & 1) == 0)
    {
      swift_retain();
      swift_retain();
    }
    type metadata accessor for ScanEntity();
    sub_226437F28(&qword_25584A6B8, (uint64_t (*)(uint64_t))type metadata accessor for ScanEntity, MEMORY[0x24BDE71F8]);
    result = sub_22655CCD4();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 8 * v17;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v31;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v2;
  v22 = (_QWORD *)(v5 + 64);
  if ((v35 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v22, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_226540CA8(uint64_t a1, char a2)
{
  return sub_226544C6C(a1, a2, &qword_25584A928);
}

uint64_t sub_226540CB4(uint64_t a1, int a2)
{
  return sub_226540CCC(a1, a2, (uint64_t *)&unk_25584A950);
}

uint64_t sub_226540CC0(uint64_t a1, int a2)
{
  return sub_226540CCC(a1, a2, (uint64_t *)&unk_25584A930);
}

uint64_t sub_226540CCC(uint64_t a1, int a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t i;
  int v44;

  v5 = v3;
  v7 = sub_22655C140();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v44 = a2;
  v12 = sub_22655D418();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v42 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v40 = v3;
  v41 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  for (i = v11; ; v11 = i)
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41)
      break;
    v25 = v42;
    v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      v20 = v24 + 1;
      if (v24 + 1 >= v41)
        goto LABEL_34;
      v26 = v42[v20];
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          v5 = v40;
          if ((v44 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            v20 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_43;
            if (v20 >= v41)
              goto LABEL_34;
            v26 = v42[v20];
            ++v27;
            if (v26)
              goto LABEL_21;
          }
        }
        v20 = v27;
      }
    }
LABEL_21:
    v17 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    v28 = *(_QWORD *)(v8 + 72);
    v29 = *(_QWORD *)(v11 + 48) + v28 * v23;
    if ((v44 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 32))(v10, v29, v7);
      v30 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v29, v7);
      v30 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v23);
      swift_retain();
    }
    sub_226437F28(&qword_2558436F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_22655CCD4();
    v31 = -1 << *(_BYTE *)(v13 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v13 + 48) + v28 * v21, v10, v7);
    *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v21) = v30;
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v5 = v40;
  v25 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v11 + 32);
  if (v38 >= 64)
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v38;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v5 = v13;
  return result;
}

uint64_t sub_226541064(uint64_t a1, int a2)
{
  return sub_226540CCC(a1, a2, &qword_25584A940);
}

uint64_t sub_226541070(uint64_t a1, int a2)
{
  return sub_226540CCC(a1, a2, &qword_25584A948);
}

uint64_t sub_22654107C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  __int128 v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A878);
  v6 = sub_22655D418();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v33 = v2;
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_31;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v34 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_33;
      v23 = *(_QWORD *)(v34 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v33;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v34 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v23 = *(_QWORD *)(v34 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v14 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_31:
    v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v20);
    v35 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v20);
    if ((a2 & 1) == 0)
    {
      swift_retain();
      v30 = (id)v35;
      v31 = *((id *)&v35 + 1);
    }
    sub_22655D640();
    sub_22655C11C();
    result = sub_22655D670();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v17 == v26;
        if (v17 == v26)
          v17 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v28 == -1);
      v18 = __clz(__rbit64(~v28)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v18) = v29;
    *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v18) = v35;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v33;
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v22, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_226541388(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25584A880);
  v6 = sub_22655D418();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v34 = v2;
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v35 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v35 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v35 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v35 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = 8 * v21;
    v31 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v30);
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
      swift_retain();
    sub_22655D640();
    sub_22655C11C();
    result = sub_22655D670();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 8 * v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v23 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v23, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_226541684(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  __int128 v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  __int128 v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849BF0);
  result = sub_22655D418();
  v8 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 0;
    v32 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v20 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v22 >= v13)
          goto LABEL_33;
        v23 = v32[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v13)
            goto LABEL_33;
          v23 = v32[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 >= 64)
                bzero(v32, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v32 = -1 << v31;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v23 = v32[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_42;
                if (v9 >= v13)
                  goto LABEL_33;
                v23 = v32[v9];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v9 = v24;
          }
        }
LABEL_30:
        v12 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = 8 * v21;
      *(_QWORD *)&v7 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v29);
      v33 = v7;
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v29);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_22655D640();
      sub_22655D664();
      sub_22655D664();
      result = sub_22655D670();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
        v7 = v33;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        v7 = v33;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 8 * v18;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v19) = v7;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v19) = v30;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v8;
  return result;
}

uint64_t sub_226541984(uint64_t a1, char a2)
{
  return sub_226542B14(a1, a2, &qword_25584A8A8);
}

uint64_t sub_226541990(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A8A0);
  result = sub_22655D418();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v36 = a2;
    v35 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v33 = -1 << v10;
    v34 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13)
          goto LABEL_31;
        v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v13)
            goto LABEL_31;
          v20 = v9[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v36 & 1) == 0)
              {
                result = swift_release();
                v3 = v35;
                goto LABEL_38;
              }
              if (v34 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v33;
              v3 = v35;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v20 = v9[v8];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v8 = v21;
          }
        }
LABEL_21:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v22 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v18);
      v23 = *(_QWORD *)(v5 + 56) + 16 * v18;
      v24 = *(_QWORD *)(v23 + 8);
      v25 = *(_BYTE *)v23;
      result = sub_22655D634();
      v26 = -1 << *(_BYTE *)(v7 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v14 + 8 * (v27 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v14 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v14 + 8 * v28);
        }
        while (v32 == -1);
        v15 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v22;
      v16 = *(_QWORD *)(v7 + 56) + 16 * v15;
      *(_BYTE *)v16 = v25;
      *(_QWORD *)(v16 + 8) = v24;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

unint64_t sub_226541C44(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25584A8D0);
  v6 = (_QWORD *)sub_22655D418();
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v8 = (_QWORD *)(v5 + 64);
    v9 = -1;
    if (v7 < 64)
      v9 = ~(-1 << v7);
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v7 + 63) >> 6;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v15 = v14 | (v13 << 6);
      }
      else
      {
        v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11)
          goto LABEL_22;
        v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          v13 = v16 + 1;
          if (v16 + 1 >= v11)
            goto LABEL_22;
          v17 = v8[v13];
          if (!v17)
          {
            v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              if ((a2 & 1) != 0)
              {
                v22 = 1 << *(_BYTE *)(v5 + 32);
                if (v22 > 63)
                  bzero((void *)(v5 + 64), ((unint64_t)(v22 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v22;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                v13 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_29;
                if (v13 >= v11)
                  goto LABEL_22;
                v17 = v8[v13];
                ++v18;
                if (v17)
                  goto LABEL_19;
              }
            }
            v13 = v18;
          }
        }
LABEL_19:
        v10 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      v19 = 8 * v15;
      v20 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v19);
      v21 = *(double *)(*(_QWORD *)(v5 + 56) + v19);
      if ((a2 & 1) == 0)
        v20 = swift_retain();
      result = sub_22654758C(v20, v6, v21);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_226541E20(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A8E0);
  result = sub_22655D418();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v10;
    v32 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero((void *)(v5 + 64), 8 * v33);
                else
                  *v9 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_retain();
      result = sub_22655D634();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2265420D4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  __int128 v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  __int128 v32;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A920);
  result = sub_22655D418();
  v8 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v31 = a2;
    v9 = 0;
    v10 = (_QWORD *)(v5 + 64);
    v11 = 1 << *(_BYTE *)(v5 + 32);
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v5 + 64);
    v14 = (unint64_t)(v11 + 63) >> 6;
    v15 = result + 64;
    while (1)
    {
      if (v13)
      {
        v17 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v18 = v17 | (v9 << 6);
      }
      else
      {
        v19 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v14)
          goto LABEL_31;
        v20 = v10[v19];
        ++v9;
        if (!v20)
        {
          v9 = v19 + 1;
          if (v19 + 1 >= v14)
            goto LABEL_31;
          v20 = v10[v9];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v14)
            {
LABEL_31:
              if ((v31 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_38;
              }
              v30 = 1 << *(_BYTE *)(v5 + 32);
              if (v30 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v10 = -1 << v30;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v10[v21];
            if (!v20)
            {
              while (1)
              {
                v9 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_40;
                if (v9 >= v14)
                  goto LABEL_31;
                v20 = v10[v9];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v9 = v21;
          }
        }
LABEL_21:
        v13 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v9 << 6);
      }
      *(_QWORD *)&v7 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v18);
      v32 = v7;
      v22 = *(_DWORD *)(*(_QWORD *)(v5 + 56) + 4 * v18);
      sub_22655D640();
      sub_22655D664();
      sub_22655D664();
      result = sub_22655D670();
      v23 = -1 << *(_BYTE *)(v8 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v15 + 8 * (v24 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v15 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v15 + 8 * v25);
        }
        while (v29 == -1);
        v16 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *((_QWORD *)&v7 + 1) = *((_QWORD *)&v32 + 1);
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v16) = v32;
      *(_DWORD *)(*(_QWORD *)(v8 + 56) + 4 * v16) = v22;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v8;
  return result;
}

uint64_t sub_2265423C0(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_22655C140();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A8C0);
  v42 = a2;
  v10 = sub_22655D418();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      swift_bridgeObjectRetain();
    }
    sub_226437F28(&qword_2558436F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_22655CCD4();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_226542754(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;

  v4 = sub_22655C140();
  v46 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = v2;
  v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A890);
  v8 = sub_22655D418();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = swift_release();
    v37 = v41;
LABEL_42:
    *v37 = v9;
    return result;
  }
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 64);
  v43 = (_QWORD *)(v7 + 64);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v42 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 64;
  result = swift_retain();
  v16 = 0;
  v40 = a2;
  v17 = 16;
  if ((a2 & 1) != 0)
    v17 = 32;
  v44 = v17;
  while (1)
  {
    if (v13)
    {
      v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v21 = v20 | (v16 << 6);
      goto LABEL_24;
    }
    v22 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v22 >= v42)
    {
      swift_release();
      v37 = v41;
      v23 = v43;
      if ((v40 & 1) != 0)
      {
LABEL_37:
        v38 = 1 << *(_BYTE *)(v7 + 32);
        if (v38 >= 64)
          bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v23 = -1 << v38;
        *(_QWORD *)(v7 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v23 = v43;
    v24 = v43[v22];
    ++v16;
    if (!v24)
    {
      v16 = v22 + 1;
      if (v22 + 1 >= v42)
        goto LABEL_34;
      v24 = v43[v16];
      if (!v24)
        break;
    }
LABEL_23:
    v13 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v16 << 6);
LABEL_24:
    v26 = *(_QWORD *)(v46 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v46 + v44))(v6, *(_QWORD *)(v7 + 48) + v26 * v21, v4);
    v27 = v7;
    v28 = *(_QWORD *)(v7 + 56) + 32 * v21;
    v29 = *(_BYTE *)(v28 + 16);
    v45 = *(_OWORD *)v28;
    sub_226437F28(&qword_2558436F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_22655CCD4();
    v30 = -1 << *(_BYTE *)(v9 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v14 + 8 * (v31 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v14 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v14 + 8 * v32);
      }
      while (v36 == -1);
      v18 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v46 + 32))(*(_QWORD *)(v9 + 48) + v26 * v18, v6, v4);
    v19 = *(_QWORD *)(v9 + 56) + 32 * v18;
    *(_OWORD *)v19 = v45;
    *(_BYTE *)(v19 + 16) = v29;
    ++*(_QWORD *)(v9 + 16);
    v7 = v27;
  }
  v25 = v22 + 2;
  if (v25 >= v42)
  {
LABEL_34:
    swift_release();
    v37 = v41;
    if ((v40 & 1) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v24 = v43[v25];
  if (v24)
  {
    v16 = v25;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v16 >= v42)
      goto LABEL_34;
    v24 = v43[v16];
    ++v25;
    if (v24)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_226542B08(uint64_t a1, char a2)
{
  return sub_226542B14(a1, a2, &qword_25584A898);
}

uint64_t sub_226542B14(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = sub_22655D418();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 0;
    v10 = (uint64_t *)(v6 + 64);
    v11 = 1 << *(_BYTE *)(v6 + 32);
    v32 = -1 << v11;
    v33 = v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v6 + 64);
    v34 = (unint64_t)(v11 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        v20 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v34)
          goto LABEL_33;
        v23 = v10[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v34)
            goto LABEL_33;
          v23 = v10[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v34)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v33 >= 64)
                  bzero((void *)(v6 + 64), 8 * v34);
                else
                  *v10 = v32;
                *(_QWORD *)(v6 + 16) = 0;
              }
              break;
            }
            v23 = v10[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_41;
                if (v9 >= v34)
                  goto LABEL_33;
                v23 = v10[v9];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v9 = v24;
          }
        }
LABEL_30:
        v13 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = 8 * v21;
      v30 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v29);
      v31 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v29);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = sub_22655D634();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 8 * v18;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v19) = v30;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v19) = v31;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_226542DC4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255849B88);
  v38 = a2;
  result = sub_22655D418();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v36 = (_QWORD *)(v5 + 64);
    v37 = v5;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v36;
        if (v20 >= v35)
          goto LABEL_33;
        v21 = v36[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v35)
            goto LABEL_33;
          v21 = v36[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v35)
            {
LABEL_33:
              if ((v38 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v34 = 1 << *(_BYTE *)(v5 + 32);
              if (v34 >= 64)
                bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v36 = -1 << v34;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v35)
                  goto LABEL_33;
                v21 = v36[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v19);
      v28 = *(_QWORD *)(v5 + 56) + 40 * v19;
      v29 = *(_QWORD *)v28;
      v30 = *(_BYTE *)(v28 + 8);
      v31 = *(_QWORD *)(v28 + 16);
      v32 = *(_QWORD *)(v28 + 24);
      v33 = *(_DWORD *)(v28 + 32);
      if ((v38 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_22655D640();
      sub_22655D64C();
      result = sub_22655D670();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v27;
      v17 = *(_QWORD *)(v7 + 56) + 40 * v16;
      *(_QWORD *)v17 = v29;
      *(_BYTE *)(v17 + 8) = v30;
      *(_QWORD *)(v17 + 16) = v31;
      *(_QWORD *)(v17 + 24) = v32;
      *(_DWORD *)(v17 + 32) = v33;
      ++*(_QWORD *)(v7 + 16);
      v5 = v37;
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_2265430E8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25584A968);
  result = sub_22655D418();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v30 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v29 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v19 >= v29)
          goto LABEL_33;
        v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v29)
            goto LABEL_33;
          v20 = v30[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v30 = -1 << v28;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v8 >= v29)
                  goto LABEL_33;
                v20 = v30[v8];
                ++v21;
                if (v20)
                  goto LABEL_30;
              }
            }
            v8 = v21;
          }
        }
LABEL_30:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v26 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v18);
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_22655D640();
      sub_22655D64C();
      result = sub_22655D670();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v24 = v15 == v23;
          if (v15 == v23)
            v15 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v26;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v27;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_2265433B8(uint64_t a1, int a2)
{
  return sub_226540CCC(a1, a2, &qword_25584A960);
}

uint64_t sub_2265433C4(uint64_t a1, int a2)
{
  return sub_226540CCC(a1, a2, &qword_255849B98);
}

uint64_t sub_2265433D0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255849BB8);
  v6 = sub_22655D418();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_226455C88(v24, v35);
      }
      else
      {
        sub_2264F6538((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_22655D640();
      sub_22655CE00();
      result = sub_22655D670();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_226455C88(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2265436CC(uint64_t a1, int a2)
{
  return sub_226545320(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for ScanItemStrut, &qword_25584A8F8);
}

uint64_t sub_2265436E0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A918);
  result = sub_22655D418();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v30 = a2;
    v8 = 0;
    v31 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v8 << 6);
      }
      else
      {
        v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v17 >= v12)
          goto LABEL_31;
        v18 = v31[v17];
        ++v8;
        if (!v18)
        {
          v8 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_31;
          v18 = v31[v8];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_31:
              if ((v30 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_38;
              }
              v29 = 1 << *(_BYTE *)(v5 + 32);
              if (v29 >= 64)
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v31 = -1 << v29;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                v8 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_40;
                if (v8 >= v12)
                  goto LABEL_31;
                v18 = v31[v8];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v8 = v19;
          }
        }
LABEL_21:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      v20 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16);
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
      sub_22655D640();
      sub_22655D64C();
      result = sub_22655D670();
      v22 = -1 << *(_BYTE *)(v7 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v14) = v20;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v14) = v21;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_2265439A4(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t i;
  int v44;
  uint64_t v45;

  v3 = v2;
  v5 = sub_22655C140();
  v45 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A910);
  v44 = a2;
  v9 = sub_22655D418();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v42 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v40 = v2;
  v41 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  for (i = v8; ; v8 = i)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v41)
      break;
    v23 = v42;
    v24 = v42[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v41)
        goto LABEL_34;
      v24 = v42[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v41)
        {
LABEL_34:
          swift_release();
          v3 = v40;
          if ((v44 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v42[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v17 >= v41)
              goto LABEL_34;
            v24 = v42[v17];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v17 = v25;
      }
    }
LABEL_21:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v45 + 72);
    v27 = *(_QWORD *)(v8 + 48) + v26 * v21;
    if ((v44 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v45 + 32))(v7, v27, v5);
      v28 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 16 * v21);
      v30 = *v28;
      v29 = v28[1];
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v45 + 16))(v7, v27, v5);
      v31 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 16 * v21);
      v30 = *v31;
      v29 = v31[1];
      swift_bridgeObjectRetain();
    }
    sub_226437F28(&qword_2558436F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_22655CCD4();
    v32 = -1 << *(_BYTE *)(v10 + 32);
    v33 = result & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v15 + 8 * v34);
      }
      while (v38 == -1);
      v18 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v45 + 32))(*(_QWORD *)(v10 + 48) + v26 * v18, v7, v5);
    v19 = (_QWORD *)(*(_QWORD *)(v10 + 56) + 16 * v18);
    *v19 = v30;
    v19[1] = v29;
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v40;
  v23 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v39 = 1 << *(_BYTE *)(v8 + 32);
  if (v39 >= 64)
    bzero(v23, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v39;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

void sub_226543D50(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25584A900);
  v6 = sub_22655D418();
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v8 = (_QWORD *)(v5 + 64);
    v9 = -1;
    if (v7 < 64)
      v9 = ~(-1 << v7);
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v7 + 63) >> 6;
    swift_retain();
    v12 = 0;
    while (1)
    {
      if (v10)
      {
        v13 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v14 = v13 | (v12 << 6);
      }
      else
      {
        v15 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return;
        }
        if (v15 >= v11)
          goto LABEL_22;
        v16 = v8[v15];
        ++v12;
        if (!v16)
        {
          v12 = v15 + 1;
          if (v15 + 1 >= v11)
            goto LABEL_22;
          v16 = v8[v12];
          if (!v16)
          {
            v17 = v15 + 2;
            if (v17 >= v11)
            {
LABEL_22:
              swift_release();
              if ((a2 & 1) != 0)
              {
                v19 = 1 << *(_BYTE *)(v5 + 32);
                if (v19 > 63)
                  bzero((void *)(v5 + 64), ((unint64_t)(v19 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v19;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v16 = v8[v17];
            if (!v16)
            {
              while (1)
              {
                v12 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_29;
                if (v12 >= v11)
                  goto LABEL_22;
                v16 = v8[v12];
                ++v17;
                if (v16)
                  goto LABEL_19;
              }
            }
            v12 = v17;
          }
        }
LABEL_19:
        v10 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v12 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v14);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_2265476A0(v18);
    }
  }
  swift_release();
  *v3 = v6;
}

uint64_t sub_226543F30(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  _OWORD *v20;
  __int128 v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 *v29;
  __int128 v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;

  v4 = sub_22655C05C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = v2;
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A8E8);
  v9 = sub_22655D418();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
    result = swift_release();
    v38 = v42;
LABEL_42:
    *v38 = v10;
    return result;
  }
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v44 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v43 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  v41 = a2;
  v18 = 16;
  if ((a2 & 1) != 0)
    v18 = 32;
  v45 = v18;
  while (1)
  {
    if (v14)
    {
      v22 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v23 = v22 | (v17 << 6);
      goto LABEL_24;
    }
    v24 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v24 >= v43)
    {
      swift_release();
      v38 = v42;
      v25 = v44;
      if ((v41 & 1) != 0)
      {
LABEL_37:
        v39 = 1 << *(_BYTE *)(v8 + 32);
        if (v39 >= 64)
          bzero(v25, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v25 = -1 << v39;
        *(_QWORD *)(v8 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v25 = v44;
    v26 = v44[v24];
    ++v17;
    if (!v26)
    {
      v17 = v24 + 1;
      if (v24 + 1 >= v43)
        goto LABEL_34;
      v26 = v44[v17];
      if (!v26)
        break;
    }
LABEL_23:
    v14 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v17 << 6);
LABEL_24:
    v28 = *(_QWORD *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + v45))(v7, *(_QWORD *)(v8 + 48) + v28 * v23, v4);
    v29 = (__int128 *)(*(_QWORD *)(v8 + 56) + 32 * v23);
    v30 = v29[1];
    v46 = *v29;
    v47 = v30;
    sub_226437F28(&qword_25584A8F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
    result = sub_22655CCD4();
    v31 = -1 << *(_BYTE *)(v10 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      v19 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v28 * v19, v7, v4);
    v20 = (_OWORD *)(*(_QWORD *)(v10 + 56) + 32 * v19);
    v21 = v47;
    *v20 = v46;
    v20[1] = v21;
    ++*(_QWORD *)(v10 + 16);
  }
  v27 = v24 + 2;
  if (v27 >= v43)
  {
LABEL_34:
    swift_release();
    v38 = v42;
    if ((v41 & 1) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v26 = v44[v27];
  if (v26)
  {
    v17 = v27;
    goto LABEL_23;
  }
  while (1)
  {
    v17 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v17 >= v43)
      goto LABEL_34;
    v26 = v44[v17];
    ++v27;
    if (v26)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_2265442D0(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  int v43;
  char *v44;
  uint64_t v45;

  v3 = v2;
  v45 = sub_22655C140();
  v5 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v44 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255843300);
  v43 = a2;
  v8 = sub_22655D418();
  v9 = v8;
  if (*(_QWORD *)(v7 + 16))
  {
    v40 = v2;
    v10 = 1 << *(_BYTE *)(v7 + 32);
    v11 = *(_QWORD *)(v7 + 64);
    v42 = (_QWORD *)(v7 + 64);
    if (v10 < 64)
      v12 = ~(-1 << v10);
    else
      v12 = -1;
    v13 = v12 & v11;
    v41 = (unint64_t)(v10 + 63) >> 6;
    v14 = v8 + 64;
    result = swift_retain();
    v16 = 0;
    while (1)
    {
      if (v13)
      {
        v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v20 = v19 | (v16 << 6);
      }
      else
      {
        v21 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v41)
          goto LABEL_34;
        v22 = v42[v21];
        ++v16;
        if (!v22)
        {
          v16 = v21 + 1;
          if (v21 + 1 >= v41)
            goto LABEL_34;
          v22 = v42[v16];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v41)
            {
LABEL_34:
              swift_release();
              v3 = v40;
              if ((v43 & 1) != 0)
              {
                v38 = 1 << *(_BYTE *)(v7 + 32);
                if (v38 >= 64)
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v38;
                *(_QWORD *)(v7 + 16) = 0;
              }
              break;
            }
            v22 = v42[v23];
            if (!v22)
            {
              while (1)
              {
                v16 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v16 >= v41)
                  goto LABEL_34;
                v22 = v42[v16];
                ++v23;
                if (v22)
                  goto LABEL_21;
              }
            }
            v16 = v23;
          }
        }
LABEL_21:
        v13 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v16 << 6);
      }
      v24 = *(_QWORD *)(v7 + 56);
      v25 = v7;
      v26 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v20);
      v28 = *v26;
      v27 = v26[1];
      v29 = *(_QWORD *)(v5 + 72);
      v30 = v24 + v29 * v20;
      if ((v43 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v44, v30, v45);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v44, v30, v45);
        swift_bridgeObjectRetain();
      }
      sub_22655D640();
      sub_22655CE00();
      result = sub_22655D670();
      v31 = -1 << *(_BYTE *)(v9 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v14 + 8 * (v32 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v14 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v14 + 8 * v33);
        }
        while (v37 == -1);
        v17 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v17);
      *v18 = v28;
      v18[1] = v27;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v9 + 56) + v29 * v17, v44, v45);
      ++*(_QWORD *)(v9 + 16);
      v7 = v25;
    }
  }
  result = swift_release();
  *v3 = v9;
  return result;
}

uint64_t sub_226544638(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A8C8);
  v6 = sub_22655D418();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = 8 * v20;
    v30 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v29);
    v31 = *(void **)(*(_QWORD *)(v5 + 56) + v29);
    if ((a2 & 1) == 0)
    {
      swift_retain();
      v32 = v31;
    }
    sub_22655D640();
    sub_22655CFC8();
    sub_22655D64C();
    sub_22655CFC8();
    sub_22655D64C();
    sub_22655D67C();
    sub_22655D64C();
    result = sub_22655D670();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 8 * v17;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v31;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_226544954(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25584A8B0);
  v38 = a2;
  v6 = sub_22655D418();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_22655D640();
    sub_22655CE00();
    result = sub_22655D670();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_226544C60(uint64_t a1, char a2)
{
  return sub_226544C6C(a1, a2, &qword_255849BB0);
}

uint64_t sub_226544C6C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v38 = a2;
  v7 = sub_22655D418();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v37 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = v3;
  v36 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v36)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v36)
        goto LABEL_33;
      v24 = *(_QWORD *)(v37 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_33:
          swift_release();
          v4 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v36)
              goto LABEL_33;
            v24 = *(_QWORD *)(v37 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_22655D640();
    sub_22655CE00();
    result = sub_22655D670();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v35;
  v23 = (_QWORD *)(v6 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_226544F70(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;

  v4 = sub_22655C140();
  v42 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v2;
  v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A870);
  v8 = sub_22655D418();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = swift_release();
    v35 = v38;
LABEL_42:
    *v35 = v9;
    return result;
  }
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 64);
  v40 = (_QWORD *)(v7 + 64);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v39 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 64;
  result = swift_retain();
  v16 = 0;
  HIDWORD(v37) = a2;
  v17 = 16;
  if ((a2 & 1) != 0)
    v17 = 32;
  v41 = v17;
  while (1)
  {
    if (v13)
    {
      v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v20 = v19 | (v16 << 6);
      goto LABEL_24;
    }
    v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v21 >= v39)
    {
      swift_release();
      v35 = v38;
      v22 = v40;
      if ((v37 & 0x100000000) != 0)
      {
LABEL_37:
        v36 = 1 << *(_BYTE *)(v7 + 32);
        if (v36 >= 64)
          bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v22 = -1 << v36;
        *(_QWORD *)(v7 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v22 = v40;
    v23 = v40[v21];
    ++v16;
    if (!v23)
    {
      v16 = v21 + 1;
      if (v21 + 1 >= v39)
        goto LABEL_34;
      v23 = v40[v16];
      if (!v23)
        break;
    }
LABEL_23:
    v13 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v42 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v42 + v41))(v6, *(_QWORD *)(v7 + 48) + v25 * v20, v4);
    v26 = v7;
    v27 = *(_BYTE *)(*(_QWORD *)(v7 + 56) + v20);
    sub_226437F28(&qword_2558436F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_22655CCD4();
    v28 = -1 << *(_BYTE *)(v9 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v14 + 8 * v30);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v42 + 32))(*(_QWORD *)(v9 + 48) + v25 * v18, v6, v4);
    *(_BYTE *)(*(_QWORD *)(v9 + 56) + v18) = v27;
    ++*(_QWORD *)(v9 + 16);
    v7 = v26;
  }
  v24 = v21 + 2;
  if (v24 >= v39)
  {
LABEL_34:
    swift_release();
    v35 = v38;
    if ((v37 & 0x100000000) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v23 = v40[v24];
  if (v23)
  {
    v16 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v16 >= v39)
      goto LABEL_34;
    v23 = v40[v16];
    ++v24;
    if (v23)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_22654530C(uint64_t a1, int a2)
{
  return sub_226545320(a1, a2, type metadata accessor for CapturedRoom.Surface, (uint64_t *)&unk_25584A860);
}

uint64_t sub_226545320(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t i;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t (*v51)(_QWORD);

  v6 = v4;
  v51 = a3;
  v8 = a3(0);
  v48 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v50 = (uint64_t)&v44 - v9;
  v10 = sub_22655C140();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v49 = a2;
  v15 = sub_22655D418();
  v16 = v15;
  if (!*(_QWORD *)(v14 + 16))
    goto LABEL_41;
  v17 = 1 << *(_BYTE *)(v14 + 32);
  v18 = *(_QWORD *)(v14 + 64);
  v46 = (_QWORD *)(v14 + 64);
  if (v17 < 64)
    v19 = ~(-1 << v17);
  else
    v19 = -1;
  v20 = v19 & v18;
  v44 = v4;
  v45 = (unint64_t)(v17 + 63) >> 6;
  v21 = v15 + 64;
  result = swift_retain();
  v23 = 0;
  for (i = v14; ; v14 = i)
  {
    if (v20)
    {
      v25 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v26 = v25 | (v23 << 6);
      goto LABEL_22;
    }
    v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v27 >= v45)
      break;
    v28 = v46;
    v29 = v46[v27];
    ++v23;
    if (!v29)
    {
      v23 = v27 + 1;
      if (v27 + 1 >= v45)
        goto LABEL_34;
      v29 = v46[v23];
      if (!v29)
      {
        v30 = v27 + 2;
        if (v30 >= v45)
        {
LABEL_34:
          swift_release();
          v6 = v44;
          if ((v49 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v29 = v46[v30];
        if (!v29)
        {
          while (1)
          {
            v23 = v30 + 1;
            if (__OFADD__(v30, 1))
              goto LABEL_43;
            if (v23 >= v45)
              goto LABEL_34;
            v29 = v46[v23];
            ++v30;
            if (v29)
              goto LABEL_21;
          }
        }
        v23 = v30;
      }
    }
LABEL_21:
    v20 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v23 << 6);
LABEL_22:
    v31 = *(_QWORD *)(v11 + 72);
    v32 = *(_QWORD *)(v14 + 48) + v31 * v26;
    if ((v49 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 32))(v13, v32, v10);
      v33 = *(_QWORD *)(v14 + 56);
      v34 = *(_QWORD *)(v48 + 72);
      sub_22643F6AC(v33 + v34 * v26, v50, v51);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v13, v32, v10);
      v35 = *(_QWORD *)(v14 + 56);
      v34 = *(_QWORD *)(v48 + 72);
      sub_22643D704(v35 + v34 * v26, v50, v51);
    }
    sub_226437F28(&qword_2558436F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_22655CCD4();
    v36 = -1 << *(_BYTE *)(v16 + 32);
    v37 = result & ~v36;
    v38 = v37 >> 6;
    if (((-1 << v37) & ~*(_QWORD *)(v21 + 8 * (v37 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v37) & ~*(_QWORD *)(v21 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v39 = 0;
      v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v41 = v38 == v40;
        if (v38 == v40)
          v38 = 0;
        v39 |= v41;
        v42 = *(_QWORD *)(v21 + 8 * v38);
      }
      while (v42 == -1);
      v24 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(_QWORD *)(v21 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(*(_QWORD *)(v16 + 48) + v31 * v24, v13, v10);
    result = sub_22643F6AC(v50, *(_QWORD *)(v16 + 56) + v34 * v24, v51);
    ++*(_QWORD *)(v16 + 16);
  }
  swift_release();
  v6 = v44;
  v28 = v46;
  if ((v49 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v43 = 1 << *(_BYTE *)(v14 + 32);
  if (v43 >= 64)
    bzero(v28, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v28 = -1 << v43;
  *(_QWORD *)(v14 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v6 = v16;
  return result;
}

uint64_t sub_226545714(uint64_t a1, int a2)
{
  return sub_226545320(a1, a2, type metadata accessor for CapturedRoom.Object, (uint64_t *)&unk_25584A850);
}

uint64_t sub_226545728(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_22655C140();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255849C38);
  v42 = a2;
  v10 = sub_22655D418();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      swift_unknownObjectRetain();
    }
    sub_226437F28(&qword_2558436F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_22655CCD4();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_226545ABC(uint64_t a1, int a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  __int128 v40[4];

  v3 = v2;
  v5 = sub_22655C05C();
  v38 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A980);
  v39 = a2;
  v9 = sub_22655D418();
  v10 = (_QWORD *)v9;
  if (*(_QWORD *)(v8 + 16))
  {
    v11 = 1 << *(_BYTE *)(v8 + 32);
    v12 = *(_QWORD *)(v8 + 64);
    v35 = (_QWORD *)(v8 + 64);
    if (v11 < 64)
      v13 = ~(-1 << v11);
    else
      v13 = -1;
    v14 = v13 & v12;
    v33 = v2;
    v34 = (unint64_t)(v11 + 63) >> 6;
    v37 = v9 + 64;
    result = swift_retain();
    v16 = 0;
    v36 = v7;
    v17 = v38;
    while (1)
    {
      if (v14)
      {
        v20 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v21 = v20 | (v16 << 6);
      }
      else
      {
        v22 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
          __break(1u);
LABEL_33:
          __break(1u);
          return result;
        }
        v23 = v35;
        if (v22 >= v34)
          goto LABEL_24;
        v24 = v35[v22];
        ++v16;
        if (!v24)
        {
          v16 = v22 + 1;
          if (v22 + 1 >= v34)
            goto LABEL_24;
          v24 = v35[v16];
          if (!v24)
          {
            v25 = v22 + 2;
            if (v25 >= v34)
            {
LABEL_24:
              swift_release();
              if ((v39 & 1) == 0)
              {
                result = swift_release();
                v3 = v33;
                goto LABEL_31;
              }
              v32 = 1 << *(_BYTE *)(v8 + 32);
              if (v32 >= 64)
                bzero(v23, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v23 = -1 << v32;
              v3 = v33;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v24 = v35[v25];
            if (!v24)
            {
              while (1)
              {
                v16 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_33;
                if (v16 >= v34)
                  goto LABEL_24;
                v24 = v35[v16];
                ++v25;
                if (v24)
                  goto LABEL_21;
              }
            }
            v16 = v25;
          }
        }
LABEL_21:
        v14 = (v24 - 1) & v24;
        v21 = __clz(__rbit64(v24)) + (v16 << 6);
      }
      v26 = *(_QWORD *)(v8 + 56);
      v27 = v8;
      v28 = *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v21);
      v29 = *(_QWORD *)(v17 + 72);
      v30 = v26 + v29 * v21;
      v31 = v36;
      if ((v39 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(v36, v30, v5);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v36, v30, v5);
        swift_bridgeObjectRetain();
      }
      sub_22655D640();
      sub_22654ABAC(v40, v28);
      sub_22655D670();
      v18 = v37;
      v19 = sub_22655D22C();
      *(_QWORD *)(v18 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(_QWORD *)(v10[6] + 8 * v19) = v28;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v17 + 32))(v10[7] + v29 * v19, v31, v5);
      ++v10[2];
      v8 = v27;
    }
  }
  result = swift_release();
LABEL_31:
  *v3 = v10;
  return result;
}

uint64_t sub_226545DCC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;

  v3 = v2;
  v40 = sub_22655C05C();
  v5 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A978);
  result = sub_22655D418();
  v10 = result;
  if (*(_QWORD *)(v8 + 16))
  {
    v35 = v2;
    v11 = 0;
    v12 = *(_QWORD *)(v8 + 64);
    v38 = (_QWORD *)(v8 + 64);
    v13 = 1 << *(_BYTE *)(v8 + 32);
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v15 = v14 & v12;
    v37 = (unint64_t)(v13 + 63) >> 6;
    v16 = result + 64;
    v36 = a2;
    v17 = 16;
    if ((a2 & 1) != 0)
      v17 = 32;
    v39 = v17;
    while (1)
    {
      if (v15)
      {
        v19 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v20 = v19 | (v11 << 6);
      }
      else
      {
        v21 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v38;
        if (v21 >= v37)
          goto LABEL_33;
        v22 = v38[v21];
        ++v11;
        if (!v22)
        {
          v11 = v21 + 1;
          if (v21 + 1 >= v37)
            goto LABEL_33;
          v22 = v38[v11];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v37)
            {
LABEL_33:
              if ((v36 & 1) == 0)
              {
                result = swift_release();
                v3 = v35;
                goto LABEL_40;
              }
              v33 = 1 << *(_BYTE *)(v8 + 32);
              if (v33 >= 64)
                bzero(v38, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v38 = -1 << v33;
              v3 = v35;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v22 = v38[v23];
            if (!v22)
            {
              while (1)
              {
                v11 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v11 >= v37)
                  goto LABEL_33;
                v22 = v38[v11];
                ++v23;
                if (v22)
                  goto LABEL_23;
              }
            }
            v11 = v23;
          }
        }
LABEL_23:
        v15 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v11 << 6);
      }
      v24 = *(_BYTE *)(*(_QWORD *)(v8 + 48) + v20);
      v25 = *(_QWORD *)(v5 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v5 + v39))(v7, *(_QWORD *)(v8 + 56) + v25 * v20, v40);
      sub_22655D640();
      sub_22655D64C();
      result = sub_22655D670();
      v26 = -1 << *(_BYTE *)(v10 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        v18 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v16 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_BYTE *)(*(_QWORD *)(v10 + 48) + v18) = v24;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 56) + v25 * v18, v7, v40);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v10;
  return result;
}

unint64_t sub_226546108(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_22655D220();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      type metadata accessor for ScanEntity();
      sub_226437F28(&qword_25584A6B8, (uint64_t (*)(uint64_t))type metadata accessor for ScanEntity, MEMORY[0x24BDE71F8]);
      do
      {
        result = sub_22655CCD4();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 >= v8 && v3 >= (uint64_t)v9)
          {
LABEL_16:
            v12 = *(_QWORD *)(a2 + 48);
            v13 = (_QWORD *)(v12 + 8 * v3);
            v14 = (_QWORD *)(v12 + 8 * v6);
            if (v3 != v6 || v13 >= v14 + 1)
              *v13 = *v14;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v9 >= v8 || v3 >= (uint64_t)v9)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_2265462F0(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, unint64_t, uint64_t);
  unint64_t v33;
  uint64_t v34;

  v4 = sub_22655C140();
  v34 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = sub_22655D220();
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v33 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v34 + 72);
      v32 = *(void (**)(char *, unint64_t, uint64_t))(v34 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v32(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        sub_226437F28(&qword_2558436F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v18 = sub_22655CCD4();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v33)
        {
          if (v19 >= v33 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v7 = v14;
            if (v15 * a1 < v16
              || (v12 = v15, *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15)))
            {
              swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = (_QWORD *)(v22 + 8 * a1);
            v24 = (_QWORD *)(v22 + 8 * v9);
            if (a1 != v9 || (a1 = v9, v23 >= v24 + 1))
            {
              *v23 = *v24;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v33 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v7 = v14;
        v12 = v15;
LABEL_5:
        v9 = (v9 + 1) & v13;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v25 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v26 = *v25;
    v27 = (-1 << a1) - 1;
  }
  else
  {
    v25 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v25;
    v26 = (-1 << a1) - 1;
  }
  *v25 = v27 & v26;
  v28 = *(_QWORD *)(a2 + 16);
  v29 = __OFSUB__(v28, 1);
  v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_226546590(unint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;

  v2 = a2;
  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_22655D220();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v27 = v2;
      v28 = (result + 1) & v7;
      do
      {
        v8 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v6);
        sub_22655D640();
        v9 = *(_QWORD *)(*(_QWORD *)(v8 + 48) + 16);
        if (v9)
        {
          v10 = v7;
          v11 = v4;
          swift_retain();
          swift_bridgeObjectRetain();
          v12 = 0;
          do
          {
            ++v12;
            __swift_instantiateConcreteTypeFromMangledName(&qword_2558443D0);
            sub_22655D5EC();
            sub_22655D64C();
          }
          while (v9 != v12);
          swift_bridgeObjectRelease();
          v4 = v11;
          v7 = v10;
          v2 = v27;
        }
        else
        {
          swift_retain();
        }
        v13 = sub_22655D670();
        result = swift_release();
        v14 = v13 & v7;
        if (v3 >= (uint64_t)v28)
        {
          if (v14 < v28)
            goto LABEL_5;
        }
        else if (v14 >= v28)
        {
          goto LABEL_16;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_16:
          v15 = *(_QWORD *)(v2 + 48);
          v16 = (_QWORD *)(v15 + 8 * v3);
          v17 = (_QWORD *)(v15 + 8 * v6);
          if (v3 != v6 || v16 >= v17 + 1)
            *v16 = *v17;
          v18 = *(_QWORD *)(v2 + 56);
          v19 = (_QWORD *)(v18 + 8 * v3);
          v20 = (_QWORD *)(v18 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v19 >= v20 + 1))
          {
            *v19 = *v20;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(v2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v2 + 16) = v26;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

unint64_t sub_2265467D8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_22655D220();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_22655D634();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_22654696C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_22655D220();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_22655D640();
        sub_22655D64C();
        result = sub_22655D670();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8)
            goto LABEL_5;
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          v10 = *(_QWORD *)(a2 + 48);
          v11 = (_BYTE *)(v10 + v3);
          v12 = (_BYTE *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1)
            *v11 = *v12;
          v13 = *(_QWORD *)(a2 + 56);
          v14 = (_QWORD *)(v13 + 8 * v3);
          v15 = (_QWORD *)(v13 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v14 >= v15 + 1))
          {
            *v14 = *v15;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v17 = *v16;
    v18 = (-1 << v3) - 1;
  }
  else
  {
    v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    v18 = *v16;
    v17 = (-1 << result) - 1;
  }
  *v16 = v18 & v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_226546B24(int64_t a1, uint64_t a2)
{
  return sub_226546F04(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for ScanItemStrut);
}

unint64_t sub_226546B30(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_22655D220();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_22655D640();
        swift_retain();
        sub_22655CFC8();
        sub_22655D64C();
        sub_22655CFC8();
        sub_22655D64C();
        sub_22655D67C();
        sub_22655D64C();
        v9 = sub_22655D670();
        result = swift_release();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_QWORD *)(v11 + 8 * v3);
          v13 = (_QWORD *)(v11 + 8 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_226546D24(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_22655D220();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_22655D640();
        swift_bridgeObjectRetain();
        sub_22655CE00();
        v9 = sub_22655D670();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_226546EF8(int64_t a1, uint64_t a2)
{
  return sub_226546F04(a1, a2, type metadata accessor for CapturedRoom.Surface);
}

unint64_t sub_226546F04(int64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD);
  void (*v33)(char *, unint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;

  v32 = a3;
  v5 = sub_22655C140();
  v34 = *(_QWORD *)(v5 - 8);
  result = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    v35 = a2 + 64;
    result = sub_22655D220();
    v12 = v35;
    if ((*(_QWORD *)(v35 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v13 = (result + 1) & v11;
      v14 = *(_QWORD *)(v34 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v34 + 16);
      do
      {
        v15 = v14 * v10;
        v33(v8, *(_QWORD *)(a2 + 48) + v14 * v10, v5);
        sub_226437F28(&qword_2558436F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v16 = sub_22655CCD4();
        result = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v8, v5);
        v17 = v16 & v11;
        if (a1 >= (uint64_t)v13)
        {
          if (v17 < v13 || a1 < (uint64_t)v17)
            goto LABEL_6;
        }
        else if (v17 < v13 && a1 < (uint64_t)v17)
        {
          goto LABEL_6;
        }
        if (v14 * a1 < v15 || *(_QWORD *)(a2 + 48) + v14 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v15 + v14))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v14 * a1 != v15)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v20 = *(_QWORD *)(a2 + 56);
        v21 = *(_QWORD *)(*(_QWORD *)(v32(0) - 8) + 72);
        v22 = v21 * a1;
        result = v20 + v21 * a1;
        v23 = v21 * v10;
        v24 = v20 + v21 * v10 + v21;
        if (v22 < v23 || result >= v24)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v10;
          if (v22 == v23)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        a1 = v10;
LABEL_6:
        v10 = (v10 + 1) & v11;
        v12 = v35;
      }
      while (((*(_QWORD *)(v35 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v26 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v26;
    v28 = (-1 << a1) - 1;
  }
  else
  {
    v26 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v26;
    v27 = (-1 << a1) - 1;
  }
  *v26 = v28 & v27;
  v29 = *(_QWORD *)(a2 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2265471AC(int64_t a1, uint64_t a2)
{
  return sub_226546F04(a1, a2, type metadata accessor for CapturedRoom.Object);
}

unint64_t sub_2265471B8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  __int128 v27[4];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_22655D220();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        v9 = *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        sub_22655D640();
        swift_bridgeObjectRetain();
        sub_22654ABAC(v27, v9);
        v10 = sub_22655D670();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v11 < v8)
          goto LABEL_11;
LABEL_12:
        v12 = *(_QWORD *)(a2 + 48);
        v13 = (_QWORD *)(v12 + 8 * v3);
        v14 = (_QWORD *)(v12 + 8 * v6);
        if (v3 != v6 || v13 >= v14 + 1)
          *v13 = *v14;
        v15 = *(_QWORD *)(a2 + 56);
        v16 = *(_QWORD *)(*(_QWORD *)(sub_22655C05C() - 8) + 72);
        v17 = v16 * v3;
        result = v15 + v16 * v3;
        v18 = v16 * v6;
        v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v17 == v18)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v11 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v11)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2265473AC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_22655D220();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_22655D640();
        sub_22655D64C();
        result = sub_22655D670();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v9 < v8)
          goto LABEL_11;
LABEL_12:
        v10 = *(_QWORD *)(a2 + 48);
        v11 = (_BYTE *)(v10 + v3);
        v12 = (_BYTE *)(v10 + v6);
        if (v3 != v6 || v11 >= v12 + 1)
          *v11 = *v12;
        v13 = *(_QWORD *)(a2 + 56);
        v14 = *(_QWORD *)(*(_QWORD *)(sub_22655C05C() - 8) + 72);
        v15 = v14 * v3;
        result = v13 + v14 * v3;
        v16 = v14 * v6;
        v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v15 == v16)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v9 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v9)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_22654758C(uint64_t a1, _QWORD *a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  uint64_t v9;

  sub_22655D640();
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    v7 = 0;
    do
    {
      ++v7;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2558443D0);
      sub_22655D5EC();
      sub_22655D64C();
    }
    while (v6 != v7);
    swift_bridgeObjectRelease();
  }
  sub_22655D670();
  result = sub_22655D22C();
  *(_QWORD *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  v9 = 8 * result;
  *(_QWORD *)(a2[6] + v9) = a1;
  *(double *)(a2[7] + v9) = a3;
  ++a2[2];
  return result;
}

void sub_2265476A0(char a1)
{
  sub_22655D640();
  __asm { BR              X10 }
}

unint64_t sub_226547700()
{
  _QWORD *v0;
  uint64_t v1;
  char v2;
  unint64_t result;

  sub_22655CE00();
  swift_bridgeObjectRelease();
  sub_22655D670();
  result = sub_22655D22C();
  *(_QWORD *)((char *)v0 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(_BYTE *)(v0[6] + result) = v2;
  *(_QWORD *)(v0[7] + 8 * result) = v1;
  ++v0[2];
  return result;
}

unint64_t sub_226547800(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  unint64_t result;
  uint64_t v7;

  sub_22655D640();
  sub_22655CFC8();
  sub_22655D64C();
  sub_22655CFC8();
  sub_22655D64C();
  sub_22655D67C();
  sub_22655D64C();
  sub_22655D670();
  result = sub_22655D22C();
  *(_QWORD *)((char *)a3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  v7 = 8 * result;
  *(_QWORD *)(a3[6] + v7) = a1;
  *(_QWORD *)(a3[7] + v7) = a2;
  ++a3[2];
  return result;
}

void *sub_2265478D4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25584A840);
  v2 = *v0;
  v3 = sub_22655D40C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    swift_retain();
    result = (void *)swift_retain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_226547A7C()
{
  return sub_226549E84(&qword_25584A928);
}

void *sub_226547A88()
{
  return sub_226548CBC((uint64_t *)&unk_25584A950);
}

void *sub_226547A94()
{
  return sub_226548CBC((uint64_t *)&unk_25584A930);
}

void *sub_226547AA0()
{
  return sub_226548CBC(&qword_25584A940);
}

void *sub_226547AAC()
{
  return sub_226548CBC(&qword_25584A948);
}

id sub_226547AB8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  __int128 v23;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A878);
  v2 = *v0;
  v3 = sub_22655D40C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v23 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v23;
    swift_retain();
    v19 = (id)v23;
    result = *((id *)&v23 + 1);
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_226547C80()
{
  return sub_226547FE4((uint64_t *)&unk_25584A880);
}

void *sub_226547C8C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849BF0);
  v2 = *v0;
  v3 = sub_22655D40C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_226547E2C()
{
  return sub_226548924(&qword_25584A8A8);
}

void *sub_226547E38()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A8A0);
  v2 = *v0;
  v3 = sub_22655D40C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v26 = __clz(__rbit64(v24));
    v12 = (v24 - 1) & v24;
    v15 = v26 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_BYTE *)v19;
    v21 = *(_QWORD *)(v19 + 8);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = *(_QWORD *)(v4 + 56) + v18;
    *(_BYTE *)v22 = v20;
    *(_QWORD *)(v22 + 8) = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_226547FD8()
{
  return sub_226547FE4((uint64_t *)&unk_25584A8D0);
}

void *sub_226547FE4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_22655D40C();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_26;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_25:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
    result = (void *)swift_retain();
  }
  v21 = v19 + 2;
  if (v21 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_22654817C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A8E0);
  v2 = *v0;
  v3 = sub_22655D40C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_retain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_22654831C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A920);
  v2 = *v0;
  v3 = sub_22655D40C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v23 = __clz(__rbit64(v21));
    v12 = (v21 - 1) & v21;
    v15 = v23 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 4 * v15;
    v19 = *(_DWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_DWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2265484AC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_22655C140();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A8C0);
  v24 = v0;
  v5 = *v0;
  v6 = sub_22655D40C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2265486DC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;
  __int128 v29;

  v1 = sub_22655C140();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A890);
  v26 = v0;
  v5 = *v0;
  v6 = sub_22655D40C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v26 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v27 = v5 + 64;
  v28 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v22 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v28)
      goto LABEL_26;
    v23 = *(_QWORD *)(v27 + 8 * v22);
    ++v11;
    if (!v23)
    {
      v11 = v22 + 1;
      if (v22 + 1 >= v28)
        goto LABEL_26;
      v23 = *(_QWORD *)(v27 + 8 * v11);
      if (!v23)
        break;
    }
LABEL_25:
    v14 = (v23 - 1) & v23;
    v16 = __clz(__rbit64(v23)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 32 * v16;
    v19 = *(_QWORD *)(v5 + 56) + v18;
    v29 = *(_OWORD *)v19;
    v20 = *(_BYTE *)(v19 + 16);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    v21 = *(_QWORD *)(v7 + 56) + v18;
    *(_OWORD *)v21 = v29;
    *(_BYTE *)(v21 + 16) = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v28)
    goto LABEL_26;
  v23 = *(_QWORD *)(v27 + 8 * v24);
  if (v23)
  {
    v11 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v11 >= v28)
      goto LABEL_26;
    v23 = *(_QWORD *)(v27 + 8 * v11);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_226548918()
{
  return sub_226548924(&qword_25584A898);
}

void *sub_226548924(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_22655D40C();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_26;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_25:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v21 = v19 + 2;
  if (v21 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_226548ABC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255849B88);
  v2 = *v0;
  v3 = sub_22655D40C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(v2 + 56) + 40 * v15;
    v17 = *(_QWORD *)v16;
    v18 = *(_BYTE *)(v16 + 8);
    v19 = *(_QWORD *)(v16 + 16);
    v20 = *(_QWORD *)(v16 + 24);
    v21 = *(_DWORD *)(v16 + 32);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    v22 = *(_QWORD *)(v4 + 56) + 40 * v15;
    *(_QWORD *)v22 = v17;
    *(_BYTE *)(v22 + 8) = v18;
    *(_QWORD *)(v22 + 16) = v19;
    *(_QWORD *)(v22 + 24) = v20;
    *(_DWORD *)(v22 + 32) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_226548C98()
{
  return sub_2265494EC((uint64_t *)&unk_25584A968);
}

void *sub_226548CA4()
{
  return sub_226548CBC(&qword_25584A960);
}

void *sub_226548CB0()
{
  return sub_226548CBC(&qword_255849B98);
}

void *sub_226548CBC(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *result;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;

  v3 = sub_22655C140();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v26 = v1;
  v7 = *v1;
  v8 = sub_22655D40C();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v26 = v9;
    return result;
  }
  result = (void *)(v8 + 64);
  v11 = (unint64_t)((1 << *(_BYTE *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11)
    result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  v27 = v7 + 64;
  v13 = 0;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v7 + 16);
  v14 = 1 << *(_BYTE *)(v7 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v7 + 64);
  v28 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v13 << 6);
      goto LABEL_12;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v28)
      goto LABEL_26;
    v23 = *(_QWORD *)(v27 + 8 * v22);
    ++v13;
    if (!v23)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v28)
        goto LABEL_26;
      v23 = *(_QWORD *)(v27 + 8 * v13);
      if (!v23)
        break;
    }
LABEL_25:
    v16 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v4 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(_QWORD *)(v7 + 48) + v19, v3);
    v20 = 8 * v18;
    v21 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(_QWORD *)(v9 + 48) + v19, v6, v3);
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + v20) = v21;
    result = (void *)swift_retain();
  }
  v24 = v22 + 2;
  if (v24 >= v28)
    goto LABEL_26;
  v23 = *(_QWORD *)(v27 + 8 * v24);
  if (v23)
  {
    v13 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v13 >= v28)
      goto LABEL_26;
    v23 = *(_QWORD *)(v27 + 8 * v13);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_226548EEC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255849BB8);
  v2 = *v0;
  v3 = sub_22655D40C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_2264F6538(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_226455C88(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2265490D0()
{
  return sub_22654A25C((uint64_t (*)(_QWORD))type metadata accessor for ScanItemStrut, &qword_25584A8F8);
}

void *sub_2265490E4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A918);
  v2 = *v0;
  v3 = sub_22655D40C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_226549270()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *result;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  const void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v36 = sub_22655C140();
  v1 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v35 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A910);
  v32 = v0;
  v3 = *v0;
  v4 = sub_22655D40C();
  v5 = *(_QWORD *)(v3 + 16);
  v38 = v4;
  if (!v5)
  {
    result = (void *)swift_release();
    v30 = v38;
    v29 = v32;
LABEL_28:
    *v29 = v30;
    return result;
  }
  v6 = v4;
  result = (void *)(v4 + 64);
  v8 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v34 = (const void *)(v3 + 64);
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    result = memmove(result, v34, 8 * v8);
    v6 = v38;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v37 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v33 = (unint64_t)(v11 + 63) >> 6;
  v15 = v35;
  v14 = v36;
  v16 = v38;
  while (1)
  {
    if (v13)
    {
      v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v18 = v17 | (v10 << 6);
      v19 = v37;
      goto LABEL_12;
    }
    v26 = v10 + 1;
    v19 = v37;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v33)
      goto LABEL_26;
    v27 = *((_QWORD *)v34 + v26);
    ++v10;
    if (!v27)
    {
      v10 = v26 + 1;
      if (v26 + 1 >= v33)
        goto LABEL_26;
      v27 = *((_QWORD *)v34 + v10);
      if (!v27)
        break;
    }
LABEL_25:
    v13 = (v27 - 1) & v27;
    v18 = __clz(__rbit64(v27)) + (v10 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v1 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v15, *(_QWORD *)(v19 + 48) + v20, v14);
    v21 = 16 * v18;
    v22 = (uint64_t *)(*(_QWORD *)(v19 + 56) + 16 * v18);
    v23 = *v22;
    v24 = v22[1];
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v16 + 48) + v20, v15, v14);
    v25 = (_QWORD *)(*(_QWORD *)(v16 + 56) + v21);
    *v25 = v23;
    v25[1] = v24;
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v33)
  {
LABEL_26:
    result = (void *)swift_release();
    v29 = v32;
    v30 = v38;
    goto LABEL_28;
  }
  v27 = *((_QWORD *)v34 + v28);
  if (v27)
  {
    v10 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v10 >= v33)
      goto LABEL_26;
    v27 = *((_QWORD *)v34 + v10);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2265494E0()
{
  return sub_2265494EC((uint64_t *)&unk_25584A900);
}

void *sub_2265494EC(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_22655D40C();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      v10 = v18 + 1;
      if (v18 + 1 >= v14)
        goto LABEL_26;
      v19 = *(_QWORD *)(v7 + 8 * v10);
      if (!v19)
        break;
    }
LABEL_25:
    v13 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    v17 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v16);
    *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16) = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v14)
    goto LABEL_26;
  v19 = *(_QWORD *)(v7 + 8 * v20);
  if (v19)
  {
    v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v10);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_226549684()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int128 *v21;
  __int128 v22;
  _OWORD *v23;
  __int128 v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;

  v1 = v0;
  v2 = sub_22655C05C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A8E8);
  v6 = *v0;
  v7 = sub_22655D40C();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v28 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v29 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v25 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v29 + 8 * v25);
    ++v12;
    if (!v26)
    {
      v12 = v25 + 1;
      if (v25 + 1 >= v16)
        goto LABEL_26;
      v26 = *(_QWORD *)(v29 + 8 * v12);
      if (!v26)
        break;
    }
LABEL_25:
    v15 = (v26 - 1) & v26;
    v18 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 32 * v18;
    v21 = (__int128 *)(*(_QWORD *)(v6 + 56) + v20);
    v22 = *v21;
    v30 = v21[1];
    v31 = v22;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v19, v5, v2);
    v23 = (_OWORD *)(*(_QWORD *)(v8 + 56) + v20);
    v24 = v30;
    *v23 = v31;
    v23[1] = v24;
  }
  v27 = v25 + 2;
  if (v27 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v28;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v29 + 8 * v27);
  if (v26)
  {
    v12 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v29 + 8 * v12);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2265498C8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = sub_22655C140();
  v1 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255843300);
  v31 = v0;
  v4 = *v0;
  v5 = sub_22655D40C();
  v6 = *(_QWORD *)(v4 + 16);
  v35 = v5;
  if (!v6)
  {
    result = (void *)swift_release();
    v29 = v35;
    v28 = v31;
LABEL_28:
    *v28 = v29;
    return result;
  }
  v7 = v5;
  result = (void *)(v5 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    v7 = v35;
  }
  v32 = v4 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v4 + 16);
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v33 = (unint64_t)(v12 + 63) >> 6;
  v15 = v34;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      v11 = v25 + 1;
      if (v25 + 1 >= v33)
        goto LABEL_26;
      v26 = *(_QWORD *)(v32 + 8 * v11);
      if (!v26)
        break;
    }
LABEL_25:
    v14 = (v26 - 1) & v26;
    v17 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(_QWORD *)(v4 + 56) + v22, v15);
    v23 = v35;
    v24 = (_QWORD *)(*(_QWORD *)(v35 + 48) + v18);
    *v24 = v21;
    v24[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v23 + 56) + v22, v3, v15);
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    result = (void *)swift_release();
    v28 = v31;
    v29 = v35;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v32 + 8 * v27);
  if (v26)
  {
    v11 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v11 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v11);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_226549B24()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A8C8);
  v2 = *v0;
  v3 = sub_22655D40C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    swift_retain();
    result = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_226549CC8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25584A8B0);
  v2 = *v0;
  v3 = sub_22655D40C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_226549E78()
{
  return sub_226549E84(&qword_255849BB0);
}

void *sub_226549E84(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_22655D40C();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v14)
      goto LABEL_26;
    v25 = *(_QWORD *)(v7 + 8 * v24);
    ++v10;
    if (!v25)
    {
      v10 = v24 + 1;
      if (v24 + 1 >= v14)
        goto LABEL_26;
      v25 = *(_QWORD *)(v7 + 8 * v10);
      if (!v25)
        break;
    }
LABEL_25:
    v13 = (v25 - 1) & v25;
    v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v20 = *v18;
    v19 = v18[1];
    v21 = 8 * v16;
    v22 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v21);
    v23 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v23 = v20;
    v23[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v21) = v22;
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v14)
    goto LABEL_26;
  v25 = *(_QWORD *)(v7 + 8 * v26);
  if (v25)
  {
    v10 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v25 = *(_QWORD *)(v7 + 8 * v10);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_22654A028()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int64_t v25;

  v1 = sub_22655C140();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A870);
  v23 = v0;
  v5 = *v0;
  v6 = sub_22655D40C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v23 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v24 = v5 + 64;
  v25 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v19);
    ++v11;
    if (!v20)
    {
      v11 = v19 + 1;
      if (v19 + 1 >= v25)
        goto LABEL_26;
      v20 = *(_QWORD *)(v24 + 8 * v11);
      if (!v20)
        break;
    }
LABEL_25:
    v14 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v16);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_BYTE *)(*(_QWORD *)(v7 + 56) + v16) = v18;
  }
  v21 = v19 + 2;
  if (v21 >= v25)
    goto LABEL_26;
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
  {
    v11 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_22654A248()
{
  return sub_22654A25C(type metadata accessor for CapturedRoom.Surface, (uint64_t *)&unk_25584A860);
}

void *sub_22654A25C(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t i;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  int64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t (*v41)(_QWORD);
  uint64_t v42;
  uint64_t v43;

  v41 = a1;
  v4 = a1(0);
  v40 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v34 - v5;
  v38 = sub_22655C140();
  v6 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v37 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v34 = v2;
  v8 = *v2;
  v9 = sub_22655D40C();
  v10 = *(_QWORD *)(v8 + 16);
  v43 = v9;
  if (!v10)
  {
    result = (void *)swift_release();
    v33 = v43;
    v32 = v34;
LABEL_25:
    *v32 = v33;
    return result;
  }
  v11 = v9;
  result = (void *)(v9 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v8 || (unint64_t)result >= v8 + 64 + 8 * v13)
  {
    result = memmove(result, (const void *)(v8 + 64), 8 * v13);
    v11 = v43;
  }
  v14 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v42 = v8;
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v35 = v8 + 64;
  v36 = (unint64_t)(v15 + 63) >> 6;
  v19 = v37;
  v18 = v38;
  v20 = (uint64_t)v39;
  for (i = v43; ; result = (void *)sub_22643F6AC(v20, *(_QWORD *)(i + 56) + v28, v27))
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v14 << 6);
      v24 = v42;
      goto LABEL_9;
    }
    v29 = v14 + 1;
    v24 = v42;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v29 >= v36)
      goto LABEL_23;
    v30 = *(_QWORD *)(v35 + 8 * v29);
    ++v14;
    if (!v30)
    {
      v14 = v29 + 1;
      if (v29 + 1 >= v36)
        goto LABEL_23;
      v30 = *(_QWORD *)(v35 + 8 * v14);
      if (!v30)
        break;
    }
LABEL_22:
    v17 = (v30 - 1) & v30;
    v23 = __clz(__rbit64(v30)) + (v14 << 6);
LABEL_9:
    v25 = *(_QWORD *)(v6 + 72) * v23;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v19, *(_QWORD *)(v24 + 48) + v25, v18);
    v26 = *(_QWORD *)(v24 + 56);
    v27 = v41;
    v28 = *(_QWORD *)(v40 + 72) * v23;
    sub_22643D704(v26 + v28, v20, v41);
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(i + 48) + v25, v19, v18);
  }
  v31 = v29 + 2;
  if (v31 >= v36)
  {
LABEL_23:
    result = (void *)swift_release();
    v32 = v34;
    v33 = v43;
    goto LABEL_25;
  }
  v30 = *(_QWORD *)(v35 + 8 * v31);
  if (v30)
  {
    v14 = v31;
    goto LABEL_22;
  }
  while (1)
  {
    v14 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v14 >= v36)
      goto LABEL_23;
    v30 = *(_QWORD *)(v35 + 8 * v14);
    ++v31;
    if (v30)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_22654A520()
{
  return sub_22654A25C(type metadata accessor for CapturedRoom.Object, (uint64_t *)&unk_25584A850);
}

void *sub_22654A534()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_22655C140();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255849C38);
  v24 = v0;
  v5 = *v0;
  v6 = sub_22655D40C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = (void *)swift_unknownObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_22654A764()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_22655C05C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A980);
  v24 = v0;
  v5 = *v0;
  v6 = sub_22655D40C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v19 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v19, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v19, v4, v1);
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_22654A990()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int64_t v25;

  v1 = sub_22655C05C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584A978);
  v23 = v0;
  v5 = *v0;
  v6 = sub_22655D40C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v23 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v24 = v5 + 64;
  v25 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v19);
    ++v11;
    if (!v20)
    {
      v11 = v19 + 1;
      if (v19 + 1 >= v25)
        goto LABEL_26;
      v20 = *(_QWORD *)(v24 + 8 * v11);
      if (!v20)
        break;
    }
LABEL_25:
    v14 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_12:
    v17 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16);
    v18 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v18, v1);
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v17;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v18, v4, v1);
  }
  v21 = v19 + 2;
  if (v21 >= v25)
    goto LABEL_26;
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
  {
    v11 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_22654ABAC(__int128 *a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t result;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v18;
  int64_t v19;
  _QWORD v20[4];
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  _OWORD v24[2];
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  v3 = *((_QWORD *)a1 + 8);
  v4 = a1[1];
  v26 = *a1;
  v27 = v4;
  v5 = a1[3];
  v28 = a1[2];
  v29 = v5;
  v30 = v3;
  sub_22655D670();
  v6 = a2 + 56;
  v7 = 1 << *(_BYTE *)(a2 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  v13 = 0;
  while (1)
  {
    if (v9)
    {
      v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v15 = v14 | (v13 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v13++, 1))
      goto LABEL_19;
    if (v13 >= v10)
    {
LABEL_17:
      swift_release();
      return sub_22655D64C();
    }
    v18 = *(_QWORD *)(v6 + 8 * v13);
    if (!v18)
      break;
LABEL_16:
    v9 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_5:
    sub_226496910(*(_QWORD *)(a2 + 48) + 40 * v15, (uint64_t)v24);
    v21 = v24[0];
    v22 = v24[1];
    v23 = v25;
    sub_22655D640();
    sub_226438600((uint64_t)&v21, (uint64_t)v20);
    __swift_project_boxed_opaque_existential_1(v20, v20[3]);
    swift_getDynamicType();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2558437F0);
    sub_22655CDDC();
    sub_22655CE00();
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1(&v21, *((uint64_t *)&v22 + 1));
    sub_22655CE6C();
    sub_22655CE00();
    swift_bridgeObjectRelease();
    v16 = sub_22655D670();
    result = sub_22649694C((uint64_t)&v21);
    v12 ^= v16;
  }
  v19 = v13 + 1;
  if (v13 + 1 >= v10)
    goto LABEL_17;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    ++v13;
    goto LABEL_16;
  }
  while (1)
  {
    v13 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v13 >= v10)
      goto LABEL_17;
    v18 = *(_QWORD *)(v6 + 8 * v13);
    ++v19;
    if (v18)
      goto LABEL_16;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for PlaceholderEntity()
{
  uint64_t result;

  result = qword_25584A988;
  if (!qword_25584A988)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22654AE30()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22655C140();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_22654AEBC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  _BYTE *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_BYTE *, _QWORD);
  _BYTE *v23;
  uint64_t v24;
  _BYTE v26[4];
  int v27;
  _BYTE *v28;
  _BYTE v29[32];

  v27 = a2 & 1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255847148);
  MEMORY[0x24BDAC7A8](v4);
  v28 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_22655C434();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_22655C4F4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25584A9D8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v26[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_22655C140();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = &v26[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = (_QWORD *)(v2 + qword_25585B360);
  *v19 = 0;
  v19[1] = 0;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v15 + 16))(v18, a1 + OBJC_IVAR____TtC8RoomPlan8ScanItem_uuid, v14, v16);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v15 + 32))(v2 + qword_25585B350, v18, v14);
  *(_BYTE *)(v2 + qword_25585B358) = v27;
  v20 = sub_22655C1DC();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BDE6588], v7);
  swift_retain();
  sub_22655C428();
  sub_22655C500();
  v21 = sub_22655C518();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v13, 0, 1, v21);
  v22 = (void (*)(_BYTE *, _QWORD))sub_22655C7F4();
  sub_22655C848();
  v22(v29, 0);
  sub_22655C398();
  sub_22655C380();
  v23 = v28;
  sub_22655C3F8();
  v24 = sub_22655C41C();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 0, 1, v24);
  type metadata accessor for PlaceholderEntity();
  sub_22654B91C();
  sub_22655C8E4();
  swift_release();
  swift_release();
  return v20;
}

void sub_22654B1B4()
{
  _QWORD *v0;

  v0 = (_QWORD *)(swift_allocObject() + qword_25585B360);
  *v0 = 0;
  v0[1] = 0;
  swift_release();
  sub_22655D3E8();
  __break(1u);
}

uint64_t sub_22654B230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  __n128 *v28;
  __int128 v29;
  BOOL v30;
  float v32;
  float v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(_QWORD *, _QWORD);
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  __n128 v44;
  uint64_t *v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  void (*v50)(_QWORD *, _QWORD);
  _OWORD *v51;
  _OWORD *v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  char *v57;
  uint64_t v58;
  char *v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  char *v66;
  __n128 v67;
  __int128 v68;
  _QWORD v69[4];

  v1 = v0;
  *(_QWORD *)&v62 = sub_22655C1C4();
  *(_QWORD *)&v61 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v66 = (char *)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v64 = sub_22655C830();
  *(_QWORD *)&v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v4 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25584A9D8);
  MEMORY[0x24BDAC7A8](v5);
  *(_QWORD *)&v60 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v58 - v8;
  v10 = sub_22655C518();
  *(_QWORD *)&v65 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v59 = (char *)&v58 - v14;
  v15 = sub_22655C140();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25583F808 != -1)
    swift_once();
  v19 = qword_25585AC80;
  v20 = v1;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v1 + qword_25585B350, v15);
  swift_beginAccess();
  v21 = *(_QWORD *)(v19 + 24);
  if (!*(_QWORD *)(v21 + 16))
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  swift_bridgeObjectRetain();
  v22 = sub_226534858((uint64_t)v18);
  if ((v23 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  v24 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v22);
  swift_retain();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  v25 = 0;
  v26 = *(__n128 *)(v24 + OBJC_IVAR____TtC8RoomPlan8ScanItem_rawDimensions);
  v27 = v20;
  v28 = (__n128 *)(v20 + qword_25585B360);
  v29 = *(_OWORD *)(v20 + qword_25585B360);
  while (1)
  {
    v67 = v26;
    v32 = *(float *)((unint64_t)&v67 & 0xFFFFFFFFFFFFFFF3 | (4 * (v25 & 3)));
    v68 = v29;
    v33 = *(float *)((unint64_t)&v68 & 0xFFFFFFFFFFFFFFF3 | (4 * (v25 & 3)));
    v30 = v32 == v33;
    if (v25 == 2)
      break;
    while (1)
    {
      ++v25;
      if (v30)
        break;
      if (v25 == 2)
        goto LABEL_13;
      v30 = 0;
    }
  }
  if (v32 != v33)
  {
LABEL_13:
    *v28 = v26;
    sub_22655C800();
    sub_22655C83C();
    (*(void (**)(char *, _QWORD))(v63 + 8))(v4, v64);
    v34 = v65;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v9, 1, v10) == 1)
    {
      v35 = sub_22654B8DC((uint64_t)v9);
    }
    else
    {
      v36 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
      v36(v12, v9, v10);
      v37 = v59;
      v36(v59, v12, v10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255849180);
      v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = xmmword_22655FA20;
      sub_22655C3B0();
      *(_QWORD *)(v38 + 32) = MEMORY[0x227698A84](*v28);
      v69[0] = v38;
      sub_22655CEE4();
      sub_22655C50C();
      v39 = v60;
      (*(void (**)(_QWORD, char *, uint64_t))(v34 + 16))(v60, v37, v10);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v39, 0, 1, v10);
      v40 = (void (*)(_QWORD *, _QWORD))sub_22655C7F4();
      sub_22655C848();
      v40(v69, 0);
      v35 = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v37, v10);
    }
    v41 = v62;
    v42 = v61;
    if (*(_BYTE *)(v27 + qword_25585B358))
      v43 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_dollhousePosition;
    else
      v43 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_worldSpacePosition;
    v44 = *(__n128 *)(v24 + *v43);
    v45 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_dollhouseOrientation;
    if (!*(_BYTE *)(v27 + qword_25585B358))
      v45 = &OBJC_IVAR____TtC8RoomPlan8ScanItem_worldSpaceOrientation;
    *(double *)&v46 = MEMORY[0x227699714](v35, v44, *(__n128 *)(v24 + *v45), (__n128)xmmword_22655FA70);
    v63 = v47;
    v64 = v46;
    v62 = v48;
    v65 = v49;
    type metadata accessor for PlaceholderEntity();
    v50 = (void (*)(_QWORD *, _QWORD))sub_22655C29C();
    v52 = v51;
    sub_22655D610();
    v61 = v53;
    sub_22655D028();
    v60 = v54;
    sub_22655D01C();
    *v52 = v55;
    v56 = v61;
    v52[1] = v60;
    v52[2] = v56;
    v50(v69, 0);
    v57 = v66;
    sub_22655C7E8();
    sub_22655C170();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v57, v41);
    REMeshComponentGetComponentType();
    if (REEntityGetComponentByClass())
      REMeshComponentSetBoundsMargin();
  }
  return swift_release();
}

uint64_t sub_22654B7FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_25585B350;
  v2 = sub_22655C140();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t sub_22654B838()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_22655C8C0() + qword_25585B350;
  v1 = sub_22655C140();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
  return swift_deallocClassInstance();
}

uint64_t sub_22654B890()
{
  return type metadata accessor for PlaceholderEntity();
}

uint64_t sub_22654B898@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + qword_25585B350;
  v4 = sub_22655C140();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_22654B8DC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25584A9D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_22654B91C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25584A9E0;
  if (!qword_25584A9E0)
  {
    v1 = type metadata accessor for PlaceholderEntity();
    result = MEMORY[0x22769A794](&unk_226568FC8, v1);
    atomic_store(result, (unint64_t *)&qword_25584A9E0);
  }
  return result;
}

uint64_t sub_22654B964(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  objc_class *ObjCClassFromMetadata;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  char **v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  void *v80;
  id v81;
  id v82;
  id v83;
  uint64_t v84;
  uint64_t result;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  char *v89;
  __n128 v90;
  __n128 v91;
  __n128 v92;
  __n128 v93;
  __int128 v94;
  __int128 v95;
  __n128 v96;
  id v98;
  unint64_t v99;
  id v100;
  void *v101;
  unint64_t v102;
  id v103;
  void *v104;
  unint64_t v105;
  id v106;
  void *v107;
  unint64_t v108;
  __n128 v109;
  uint32x4_t v110;
  uint32x4_t v111;
  id v112;
  void *v113;
  unint64_t v114;
  id v115;
  void *v116;
  unint64_t v117;
  id v118;
  void *v119;
  unint64_t v120;
  __n128 v121;
  id v122;
  id v123;
  id v124;
  uint64_t *v125;
  unint64_t v126;
  unint64_t v127;
  void *v128;
  uint64_t v129;
  __n128 v130;
  __n128 v131;
  __int128 v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  __n128 v136;
  __n128 v137;
  __int128 v138;
  unint64_t v139;
  unint64_t v140;
  id v141;
  id v142;
  void *v143;
  id v144;
  _QWORD v145[5];

  v5 = v4;
  v145[3] = *MEMORY[0x24BDAC8D0];
  swift_unknownObjectWeakInit();
  __asm { FMOV            V0.2S, #16.0 }
  *(_QWORD *)(v4 + 56) = _D0;
  type metadata accessor for GlyphState();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_BYTE *)(v15 + 32) = 1;
  *(_OWORD *)(v15 + 48) = 0u;
  *(_OWORD *)(v15 + 64) = 0u;
  *(_OWORD *)(v15 + 80) = 0u;
  *(_OWORD *)(v15 + 96) = 0u;
  *(_OWORD *)(v15 + 112) = 0u;
  *(_OWORD *)(v15 + 128) = 0u;
  *(_QWORD *)(v4 + 64) = v15;
  type metadata accessor for AnimTime();
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_226560080;
  *(_QWORD *)(v16 + 32) = 0;
  *(_QWORD *)(v4 + 72) = v16;
  *(_DWORD *)(v4 + 80) = 1024416809;
  *(_QWORD *)(v4 + 88) = sub_226452578();
  *(_QWORD *)(v4 + 96) = v17;
  *(_QWORD *)(v4 + 104) = v18;
  *(_QWORD *)(v4 + 112) = sub_22645275C();
  v125 = (uint64_t *)(v4 + 112);
  *(_QWORD *)(v4 + 120) = v19;
  *(_QWORD *)(v4 + 128) = v20;
  *(_QWORD *)(v4 + 136) = sub_22645275C();
  v21 = v4 + 136;
  *(_QWORD *)(v4 + 144) = v22;
  *(_QWORD *)(v4 + 152) = v23;
  type metadata accessor for StateSpring();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  *(_QWORD *)(v21 + 24) = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
  *(_QWORD *)(v21 + 32) = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
  *(_QWORD *)(v21 + 40) = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
  *(_OWORD *)(v21 + 120) = 0u;
  *(_OWORD *)(v21 + 104) = 0u;
  *(_OWORD *)(v21 + 56) = 0u;
  *(_OWORD *)(v21 + 72) = 0u;
  *(_QWORD *)(v21 + 88) = 0;
  v25 = *MEMORY[0x24BDAEE00];
  v26 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 16);
  v27 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 32);
  v28 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 48);
  *(_OWORD *)(v21 + 136) = *MEMORY[0x24BDAEE00];
  *(_OWORD *)(v21 + 152) = v26;
  *(_OWORD *)(v21 + 168) = v27;
  *(_OWORD *)(v21 + 184) = v28;
  *(_OWORD *)(v21 + 200) = v25;
  *(_OWORD *)(v21 + 216) = v26;
  *(_OWORD *)(v21 + 232) = v27;
  *(_OWORD *)(v21 + 248) = v28;
  *(_OWORD *)(v21 + 264) = v25;
  *(_OWORD *)(v21 + 280) = v26;
  *(_OWORD *)(v21 + 296) = v27;
  *(_OWORD *)(v21 + 312) = v28;
  *(_OWORD *)(v21 + 328) = v25;
  *(_OWORD *)(v21 + 344) = v26;
  *(_OWORD *)(v21 + 360) = v27;
  *(_OWORD *)(v21 + 376) = v28;
  type metadata accessor for DeviceController();
  *(_QWORD *)(v21 + 416) = 0;
  *(_QWORD *)(v21 + 424) = 0;
  *(_QWORD *)(v21 + 408) = 0;
  swift_allocObject();
  sub_22649E430();
  *(_QWORD *)(v21 + 432) = v29;
  *(_DWORD *)(v21 + 440) = 0;
  *(_BYTE *)(v21 + 444) = 1;
  *(_QWORD *)(v21 + 448) = 0xBFF0000000000000;
  *(_QWORD *)(v21 + 456) = 0xBFF0000000000000;
  *(_QWORD *)(v21 - 120) = a2;
  *(_QWORD *)(v21 - 112) = a3;
  v135 = a4;
  *(_QWORD *)(v21 - 104) = a4;
  swift_unknownObjectWeakAssign();
  type metadata accessor for MetalConstants();
  swift_unknownObjectRetain();
  swift_initStaticObject();
  *(_QWORD *)(v21 - 96) = sub_22648BCD8();
  type metadata accessor for DotsRenderer();
  swift_allocObject();
  v30 = (void *)swift_unknownObjectRetain();
  v129 = a3;
  v31 = sub_2264E96EC(v30, a3);
  if (v143)
  {

    v31 = 0;
  }
  *(_QWORD *)(v5 + 560) = v31;
  swift_release();
  objc_msgSend(a1, sel_addSublayer_, *(_QWORD *)(*(_QWORD *)(v5 + 568) + 32));
  objc_msgSend(a1, sel_addSublayer_, *(_QWORD *)(*(_QWORD *)(v5 + 568) + 40));
  objc_msgSend(a1, sel_addSublayer_, *(_QWORD *)(*(_QWORD *)(v5 + 568) + 56));
  objc_msgSend(a1, sel_setAllowsGroupBlending_, 1);
  v32 = *(void **)(v5 + 40);
  v33 = (void *)sub_22655CD64();
  v34 = objc_msgSend(v32, sel_newFunctionWithName_, v33);

  v142 = v34;
  if (!v34)
    goto LABEL_70;
  v35 = *(void **)(v5 + 40);
  v36 = (void *)sub_22655CD64();
  v37 = objc_msgSend(v35, sel_newFunctionWithName_, v36);

  v141 = v37;
  if (!v37)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  v38 = *(void **)(v5 + 40);
  v39 = (void *)sub_22655CD64();
  v40 = objc_msgSend(v38, sel_newFunctionWithName_, v39);

  v144 = v40;
  if (!v40)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  v128 = a1;
  v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDD770]), sel_init);
  v42 = objc_msgSend(v41, sel_attributes);
  v43 = (char **)&stru_24EE07000;
  v44 = objc_msgSend(v42, sel_objectAtIndexedSubscript_, 0);

  if (!v44)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  objc_msgSend(v44, sel_setFormat_, 30);

  v45 = objc_msgSend(v41, sel_attributes);
  v46 = objc_msgSend(v45, sel_objectAtIndexedSubscript_, 0);

  if (!v46)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  objc_msgSend(v46, sel_setOffset_, 0);

  v47 = objc_msgSend(v41, sel_attributes);
  v48 = objc_msgSend(v47, sel_objectAtIndexedSubscript_, 0);

  if (!v48)
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  objc_msgSend(v48, sel_setBufferIndex_, 0);

  v49 = objc_msgSend(v41, sel_attributes);
  v50 = objc_msgSend(v49, sel_objectAtIndexedSubscript_, 1);

  if (!v50)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  objc_msgSend(v50, sel_setFormat_, 28);

  v51 = objc_msgSend(v41, sel_attributes);
  v52 = objc_msgSend(v51, sel_objectAtIndexedSubscript_, 1);

  if (!v52)
  {
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  objc_msgSend(v52, sel_setOffset_, 16);

  v53 = objc_msgSend(v41, sel_attributes);
  v54 = objc_msgSend(v53, sel_objectAtIndexedSubscript_, 1);

  if (!v54)
  {
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  objc_msgSend(v54, sel_setBufferIndex_, 0);

  v55 = objc_msgSend(v41, sel_layouts);
  v56 = objc_msgSend(v55, sel_objectAtIndexedSubscript_, 0);

  if (!v56)
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  objc_msgSend(v56, sel_setStepFunction_, 4);

  v57 = objc_msgSend(v41, sel_layouts);
  v58 = objc_msgSend(v57, sel_objectAtIndexedSubscript_, 0);

  if (!v58)
  {
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  objc_msgSend(v58, sel_setStepRate_, 1);

  v59 = objc_msgSend(v41, sel_layouts);
  v60 = objc_msgSend(v59, sel_objectAtIndexedSubscript_, 0);

  if (!v60)
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  objc_msgSend(v60, sel_setStride_, 32);

  v61 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDD6B8]), sel_init);
  objc_msgSend(v61, sel_setVertexDescriptor_, v41);
  objc_msgSend(v61, sel_setTessellationFactorScaleEnabled_, 0);
  objc_msgSend(v61, sel_setTessellationFactorFormat_, 0);
  objc_msgSend(v61, sel_setTessellationControlPointIndexType_, 1);
  objc_msgSend(v61, sel_setTessellationFactorStepFunction_, 1);
  objc_msgSend(v61, sel_setTessellationOutputWindingOrder_, 0);
  objc_msgSend(v61, sel_setTessellationPartitionMode_, 3);
  objc_msgSend(v61, sel_setMaxTessellationFactor_, 16);
  objc_msgSend(v61, sel_setVertexFunction_, v141);
  objc_msgSend(v61, sel_setFragmentFunction_, v144);
  v62 = objc_msgSend(v61, sel_colorAttachments);
  v63 = objc_msgSend(v62, sel_objectAtIndexedSubscript_, 0);

  if (!v63)
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  objc_msgSend(v63, sel_setBlendingEnabled_, 1);

  v64 = objc_msgSend(v61, sel_colorAttachments);
  v65 = objc_msgSend(v64, sel_objectAtIndexedSubscript_, 0);

  if (!v65)
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  objc_msgSend(v65, sel_setRgbBlendOperation_, 4);

  v66 = objc_msgSend(v61, sel_colorAttachments);
  v67 = objc_msgSend(v66, sel_objectAtIndexedSubscript_, 0);

  if (!v67)
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  objc_msgSend(v67, sel_setAlphaBlendOperation_, 4);

  v68 = objc_msgSend(v61, sel_colorAttachments);
  v69 = objc_msgSend(v68, sel_objectAtIndexedSubscript_, 0);

  if (!v69)
  {
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  objc_msgSend(v69, sel_setSourceRGBBlendFactor_, 1);

  v70 = objc_msgSend(v61, sel_colorAttachments);
  v71 = objc_msgSend(v70, sel_objectAtIndexedSubscript_, 0);

  if (!v71)
  {
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
  objc_msgSend(v71, sel_setSourceAlphaBlendFactor_, 1);

  v72 = objc_msgSend(v61, sel_colorAttachments);
  v73 = objc_msgSend(v72, sel_objectAtIndexedSubscript_, 0);

  if (!v73)
  {
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  objc_msgSend(v73, sel_setDestinationRGBBlendFactor_, 5);

  v74 = objc_msgSend(v61, sel_colorAttachments);
  v75 = objc_msgSend(v74, sel_objectAtIndexedSubscript_, 0);

  if (!v75)
  {
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
  }
  objc_msgSend(v75, sel_setDestinationAlphaBlendFactor_, 5);

  v76 = objc_msgSend(v61, sel_colorAttachments);
  v77 = objc_msgSend(v76, sel_objectAtIndexedSubscript_, 0);

  if (!v77)
    goto LABEL_89;
  objc_msgSend(v77, sel_setPixelFormat_, v129);

  objc_msgSend(v61, sel_setRasterSampleCount_, v135);
  v145[0] = 0;
  v78 = objc_msgSend(a2, sel_newRenderPipelineStateWithDescriptor_error_, v61, v145);
  v79 = v78;
  v80 = (void *)v145[0];
  if (!v78
    || (*(_QWORD *)(v5 + 536) = v78,
        v145[0] = 0,
        v81 = v80,
        v82 = objc_msgSend(a2, sel_newComputePipelineStateWithFunction_error_, v142, v145),
        v80 = (void *)v145[0],
        !v82))
  {
    v98 = v80;
    sub_22655BF6C();

    swift_willThrow();
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    swift_willThrow();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectWeakDestroy();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (v79)
      swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    type metadata accessor for GlyphRenderer();
    swift_deallocPartialClassInstance();
    return v5;
  }
  *(_QWORD *)(v5 + 528) = v82;
  type metadata accessor for MetalSplineData();
  swift_allocObject();
  swift_unknownObjectRetain();
  v83 = v80;
  sub_22652D6C4(a2);
  *(_QWORD *)(v5 + 552) = v84;
  result = swift_release();
  v86 = *(_QWORD *)(v5 + 552);
  if (v86)
  {
    v87 = *(_QWORD *)(v86 + 72);
    if (v87)
    {
      swift_beginAccess();
      v88 = *(_QWORD *)(v87 + 16);
      if (*(_QWORD *)(v88 + 16) < 3uLL)
      {
        __break(1u);
      }
      else
      {
        v89 = *(char **)(v88 + 48);
        swift_bridgeObjectRetain();
        swift_retain();
        sub_22652E544(v89);
        swift_bridgeObjectRelease();
        swift_release();
        v90.n128_f64[0] = sub_22652EC1C();
        v130 = v91;
        v136 = v90;
        swift_beginAccess();
        sub_226452420(v136, v130);
        swift_endAccess();
        swift_beginAccess();
        sub_2264522C4(*(_QWORD *)(v5 + 88));
        v131 = v93;
        v137 = v92;
        swift_endAccess();
        swift_beginAccess();
        sub_2264522B8(v137, v131);
        swift_endAccess();
        swift_beginAccess();
        sub_2264522C4(*(_QWORD *)(v5 + 88));
        v132 = v95;
        v138 = v94;
        swift_endAccess();
        *(_OWORD *)(v5 + 192) = v138;
        *(_OWORD *)(v5 + 208) = v132;
        swift_beginAccess();
        *(_QWORD *)(v5 + 120) = 0x3FE6666666666666;
        sub_226452028();
        if (*(unsigned __int8 *)(*(_QWORD *)(v5 + 64) + 32) - 1 >= 2)
        {
          if (*(_BYTE *)(*(_QWORD *)(v5 + 64) + 32))
          {
            v96 = (__n128)xmmword_226568950;
            v99 = 0x3FD3333333333333;
          }
          else
          {
            v96 = (__n128)xmmword_226568940;
            v99 = 0x3FC3333333333333;
          }
          _Q0 = (__n128)vdupq_n_s64(v99);
        }
        else
        {
          v96 = (__n128)xmmword_22655EF70;
          __asm { FMOV            V0.2D, #1.0 }
        }
        sub_226451F18(_Q0, v96);
        swift_endAccess();
        swift_beginAccess();
        v86 = *v125;
        v87 = *v125 & 0xC000000000000001;
        if (!v87)
        {
          if (!*(_QWORD *)((v86 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_64;
          }
          v100 = *(id *)(v86 + 32);
LABEL_40:
          v101 = v100;
          v43 = &selRef_session_didUpdateTextCoaching_;
          objc_msgSend(v100, sel_target);
          v139 = v102;

          if (v87)
          {
            v103 = (id)MEMORY[0x2276999E4](1, v86);
          }
          else
          {
            if (*(_QWORD *)((v86 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
            {
LABEL_66:
              __break(1u);
              goto LABEL_67;
            }
            v103 = *(id *)(v86 + 40);
          }
          v104 = v103;
          objc_msgSend(v103, sel_target);
          v133 = v105;

          if (v87)
          {
            v106 = (id)MEMORY[0x2276999E4](2, v86);
          }
          else
          {
            if (*(_QWORD *)((v86 & 0xFFFFFFFFFFFFF8) + 0x10) < 3uLL)
            {
LABEL_67:
              __break(1u);
              goto LABEL_68;
            }
            v106 = *(id *)(v86 + 48);
          }
          v107 = v106;
          objc_msgSend(v106, sel_target);
          v126 = v108;
          swift_endAccess();

          swift_beginAccess();
          v109.n128_u64[0] = v139;
          v109.n128_u64[1] = v133;
          sub_226451F0C(v109, (__n128)v126);
          swift_endAccess();
          swift_beginAccess();
          *(_QWORD *)(v5 + 144) = 0x3FE6666666666666;
          sub_226452028();
          v110.i32[0] = 2;
          v111.i32[0] = *(unsigned __int8 *)(*(_QWORD *)(v5 + 64) + 32) - 1;
          sub_226451F18((__n128)vandq_s8((int8x16_t)xmmword_22655EF60, (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_u32(v110, v111), 0)), (__n128)0);
          swift_endAccess();
          swift_beginAccess();
          v86 = *(_QWORD *)(v5 + 136);
          v87 = v86 & 0xC000000000000001;
          if ((v86 & 0xC000000000000001) == 0)
          {
            if (*(_QWORD *)((v86 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              v112 = *(id *)(v86 + 32);
LABEL_51:
              v113 = v112;
              objc_msgSend(v112, v43[53]);
              v140 = v114;

              if (v87)
              {
                v115 = (id)MEMORY[0x2276999E4](1, v86);
LABEL_55:
                v116 = v115;
                objc_msgSend(v115, v43[53]);
                v134 = v117;

                if (v87)
                {
                  v118 = (id)MEMORY[0x2276999E4](2, v86);
LABEL_59:
                  v119 = v118;
                  objc_msgSend(v118, v43[53]);
                  v127 = v120;
                  swift_endAccess();

                  swift_beginAccess();
                  v121.n128_u64[0] = v140;
                  v121.n128_u64[1] = v134;
                  sub_226451F0C(v121, (__n128)v127);
                  swift_endAccess();
                  v122 = *(id *)(v5 + 160);
                  objc_msgSend(v122, sel_parameters);
                  objc_msgSend(v122, sel_setParameters_);

                  objc_msgSend(*(id *)(v5 + 160), sel_setTarget_, 0.0);
                  objc_msgSend(*(id *)(v5 + 160), sel_setValue_, 0.0);
                  v123 = *(id *)(v5 + 168);
                  objc_msgSend(v123, sel_parameters);
                  objc_msgSend(v123, sel_setParameters_);

                  objc_msgSend(*(id *)(v5 + 168), sel_setTarget_, 0.0);
                  objc_msgSend(*(id *)(v5 + 168), sel_setValue_, 0.0);
                  objc_msgSend(*(id *)(v5 + 176), sel_setTarget_, 0.0);
                  v124 = *(id *)(v5 + 176);
                  objc_msgSend(v124, sel_setValue_, 0.0);

                  swift_unknownObjectRelease();
                  swift_unknownObjectRelease();
                  swift_unknownObjectRelease();

                  swift_unknownObjectRelease();
                  *(_QWORD *)(*(_QWORD *)(v5 + 64) + 24) = &off_24EDE7D68;
                  swift_unknownObjectWeakAssign();
                  return v5;
                }
                if (*(_QWORD *)((v86 & 0xFFFFFFFFFFFFF8) + 0x10) >= 3uLL)
                {
                  v118 = *(id *)(v86 + 48);
                  goto LABEL_59;
                }
                goto LABEL_69;
              }
              if (*(_QWORD *)((v86 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
              {
                v115 = *(id *)(v86 + 40);
                goto LABEL_55;
              }
LABEL_68:
              __break(1u);
LABEL_69:
              __break(1u);
LABEL_70:
              __break(1u);
              goto LABEL_71;
            }
            __break(1u);
            goto LABEL_66;
          }
LABEL_64:
          v112 = (id)MEMORY[0x2276999E4](0, v86);
          goto LABEL_51;
        }
      }
      v100 = (id)MEMORY[0x2276999E4](0, v86);
      goto LABEL_40;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_22654CB88()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  int v3;
  double v5;
  double v6;
  id v7;
  id v8;
  id v9;

  v1 = v0;
  if (*(_QWORD *)(v0 + 552))
  {
    swift_retain();
    sub_22652E210();
    swift_release();
    *(_DWORD *)(*(_QWORD *)(v0 + 72) + 20) = *(_DWORD *)(*(_QWORD *)(v0 + 72) + 16);
    if (*(_BYTE *)(*(_QWORD *)(v0 + 64) + 32) == 1)
      v2 = 0.0;
    else
      v2 = 1.0;
    objc_msgSend(*(id *)(v0 + 168), sel_setTarget_, v2);
    v3 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 64) + 32);
    if (v3 == 3 || v3 == 0)
      v5 = 1.0;
    else
      v5 = 0.0;
    objc_msgSend(*(id *)(v0 + 160), sel_setTarget_, v5);
    if (*(_BYTE *)(*(_QWORD *)(v0 + 64) + 32))
      v6 = 1.0;
    else
      v6 = 0.0;
    objc_msgSend(*(id *)(v0 + 176), sel_setTarget_, v6);
    if (*(_BYTE *)(*(_QWORD *)(v0 + 64) + 32) == 1)
    {
      v7 = *(id *)(v0 + 168);
      objc_msgSend(v7, sel_target);
      objc_msgSend(v7, sel_setValue_);

      v8 = *(id *)(v1 + 160);
      objc_msgSend(v8, sel_target);
      objc_msgSend(v8, sel_setValue_);

      v9 = *(id *)(v1 + 176);
      objc_msgSend(v9, sel_target);
      objc_msgSend(v9, sel_setValue_);

      *(_DWORD *)(*(_QWORD *)(v1 + 72) + 16) = 0;
      sub_22652ECB0();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_22654CCD4()
{
  __n128 *v0;
  __n128 *v1;
  uint64_t result;
  unint64_t v3;
  __n128 v4;
  __n128 v5;
  __n128 v6;
  __n128 v7;
  __n128 v8;
  __n128 v9;

  v1 = (__n128 *)v0[4].n128_u64[0];
  v6 = v1[3];
  v8 = v1[4];
  swift_beginAccess();
  sub_226452420(v6, v8);
  sub_2264522B8(v0[12], v0[13]);
  result = swift_endAccess();
  if (*(_BYTE *)(v0[4].n128_u64[0] + 32) == 1)
  {
    v3 = swift_bridgeObjectRetain();
    sub_2264522C4(v3);
    v7 = v5;
    v9 = v4;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_2264522B8(v9, v7);
    return swift_endAccess();
  }
  return result;
}

void sub_22654CDA4()
{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  id v7;
  void *v8;
  unint64_t v9;
  id v10;
  void *v11;
  unint64_t v12;
  id v13;
  void *v14;
  unint64_t v15;
  __n128 v16;
  unint64_t v17;
  __n128 v18;
  unint64_t v19;
  __n128 v20;
  unint64_t v21;

  v1 = v0;
  v2 = *(__n128 **)(v0 + 64);
  v18 = v2[5];
  v20 = v2[6];
  v3 = (uint64_t *)(v0 + 112);
  swift_beginAccess();
  sub_226451F18(v18, v20);
  swift_endAccess();
  if (*(_BYTE *)(*(_QWORD *)(v1 + 64) + 32) == 1)
  {
    v4 = *v3;
    v5 = *v3 & 0xC000000000000001;
    if (v5)
    {
      swift_bridgeObjectRetain();
      v7 = (id)MEMORY[0x2276999E4](0, v4);
    }
    else
    {
      if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_17;
      }
      v6 = *(void **)(v4 + 32);
      swift_bridgeObjectRetain();
      v7 = v6;
    }
    v8 = v7;
    objc_msgSend(v7, sel_target);
    v21 = v9;

    if (v5)
    {
      v10 = (id)MEMORY[0x2276999E4](1, v4);
LABEL_9:
      v11 = v10;
      objc_msgSend(v10, sel_target);
      v19 = v12;

      if (v5)
      {
        v13 = (id)MEMORY[0x2276999E4](2, v4);
LABEL_13:
        v14 = v13;
        objc_msgSend(v13, sel_target);
        v17 = v15;
        swift_bridgeObjectRelease();

        swift_beginAccess();
        v16.n128_u64[0] = v21;
        v16.n128_u64[1] = v19;
        sub_226451F0C(v16, (__n128)v17);
        swift_endAccess();
        return;
      }
      if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) >= 3uLL)
      {
        v13 = *(id *)(v4 + 48);
        goto LABEL_13;
      }
LABEL_18:
      __break(1u);
      return;
    }
    if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
    {
      v10 = *(id *)(v4 + 40);
      goto LABEL_9;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
}

void sub_22654CF40()
{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  id v7;
  void *v8;
  unint64_t v9;
  id v10;
  void *v11;
  unint64_t v12;
  id v13;
  void *v14;
  unint64_t v15;
  __n128 v16;
  unint64_t v17;
  __n128 v18;
  unint64_t v19;
  __n128 v20;
  unint64_t v21;

  v1 = v0;
  v2 = *(__n128 **)(v0 + 64);
  v18 = v2[7];
  v20 = v2[8];
  v3 = (uint64_t *)(v0 + 136);
  swift_beginAccess();
  sub_226451F18(v18, v20);
  swift_endAccess();
  if (*(_BYTE *)(*(_QWORD *)(v1 + 64) + 32) == 1)
  {
    v4 = *v3;
    v5 = *v3 & 0xC000000000000001;
    if (v5)
    {
      swift_bridgeObjectRetain();
      v7 = (id)MEMORY[0x2276999E4](0, v4);
    }
    else
    {
      if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_17;
      }
      v6 = *(void **)(v4 + 32);
      swift_bridgeObjectRetain();
      v7 = v6;
    }
    v8 = v7;
    objc_msgSend(v7, sel_target);
    v21 = v9;

    if (v5)
    {
      v10 = (id)MEMORY[0x2276999E4](1, v4);
LABEL_9:
      v11 = v10;
      objc_msgSend(v10, sel_target);
      v19 = v12;

      if (v5)
      {
        v13 = (id)MEMORY[0x2276999E4](2, v4);
LABEL_13:
        v14 = v13;
        objc_msgSend(v13, sel_target);
        v17 = v15;
        swift_bridgeObjectRelease();

        swift_beginAccess();
        v16.n128_u64[0] = v21;
        v16.n128_u64[1] = v19;
        sub_226451F0C(v16, (__n128)v17);
        swift_endAccess();
        return;
      }
      if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) >= 3uLL)
      {
        v13 = *(id *)(v4 + 48);
        goto LABEL_13;
      }
LABEL_18:
      __break(1u);
      return;
    }
    if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
    {
      v10 = *(id *)(v4 + 40);
      goto LABEL_9;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
}

void sub_22654D0DC(double a1, double a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;

  v3 = v2;
  if (a1 != 0.0 || a2 != 0.0)
  {
    v4 = v2[4];
    if (v4 == 1)
    {
      v2[68] = 0;
      swift_unknownObjectRelease();
      return;
    }
    if (a1 <= -9.22337204e18)
    {
      __break(1u);
    }
    else if (a1 < 9.22337204e18)
    {
      if ((*(_QWORD *)&a1 & 0x7FF0000000000000) != 0x7FF0000000000000
        && (*(_QWORD *)&a2 & 0x7FF0000000000000) != 0x7FF0000000000000)
      {
        if (a2 > -9.22337204e18)
        {
          if (a2 < 9.22337204e18)
          {
            v5 = (uint64_t)a1;
            v6 = (uint64_t)a2;
            __swift_instantiateConcreteTypeFromMangledName(&qword_255843A38);
            v7 = swift_allocObject();
            *(_OWORD *)(v7 + 16) = xmmword_22655F8F0;
            sub_22655D2EC();
            swift_bridgeObjectRelease();
            sub_22655D544();
            sub_22655CE24();
            swift_bridgeObjectRelease();
            sub_22655CE24();
            sub_22655D544();
            sub_22655CE24();
            swift_bridgeObjectRelease();
            *(_QWORD *)(v7 + 56) = MEMORY[0x24BEE0D00];
            *(_QWORD *)(v7 + 32) = 0xD000000000000026;
            *(_QWORD *)(v7 + 40) = 0x80000002265717D0;
            sub_22655D61C();
            swift_bridgeObjectRelease();
            v8 = objc_msgSend((id)objc_opt_self(), sel_texture2DDescriptorWithPixelFormat_width_height_mipmapped_, v2[3], v5, v6, 0);
            objc_msgSend(v8, sel_setUsage_, 4);
            objc_msgSend(v8, sel_setTextureType_, 4);
            objc_msgSend(v8, sel_setSampleCount_, v4);
            objc_msgSend(v8, sel_setStorageMode_, 2);
            v9 = objc_msgSend((id)v3[2], sel_newTextureWithDescriptor_, v8);

            v3[68] = v9;
            swift_unknownObjectRelease();
            return;
          }
LABEL_17:
          __break(1u);
          return;
        }
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    __break(1u);
    goto LABEL_15;
  }
}

uint64_t sub_22654D398(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v2 = objc_msgSend(a1, sel_computeCommandEncoder);
  if (!v2)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = v2;
  v4 = (void *)sub_22655CD64();
  objc_msgSend(v3, sel_setLabel_, v4);

  v5 = (void *)sub_22655CD64();
  objc_msgSend(v3, sel_pushDebugGroup_, v5);

  objc_msgSend(v3, sel_setComputePipelineState_, *(_QWORD *)(v1 + 528));
  LODWORD(v16) = *(_DWORD *)(v1 + 56);
  objc_msgSend(v3, sel_setBytes_length_atIndex_, &v16, 4, 0);
  LODWORD(v16) = *(_DWORD *)(v1 + 60);
  objc_msgSend(v3, sel_setBytes_length_atIndex_, &v16, 4, 1);
  v6 = *(_QWORD *)(v1 + 552);
  if (!v6)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  objc_msgSend(v3, sel_setBuffer_offset_atIndex_, *(_QWORD *)(v6 + 40), 0, 2);
  v7 = *(_QWORD *)(v1 + 552);
  if (!v7)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
  }
  objc_msgSend(v3, sel_setBuffer_offset_atIndex_, *(_QWORD *)(v7 + 32), 0, 3);
  MTLSizeMake_0(1, (uint64_t)&v16);
  v8 = *(_QWORD *)(v1 + 552);
  if (!v8)
    goto LABEL_9;
  v9 = v16;
  v10 = v17;
  MTLSizeMake_0(*(_QWORD *)(v8 + 56), (uint64_t)&v16);
  v11 = v17;
  v12 = v16;
  v16 = v9;
  v17 = v10;
  v14 = v12;
  v15 = v11;
  objc_msgSend(v3, sel_dispatchThreadgroups_threadsPerThreadgroup_, &v16, &v14);
  objc_msgSend(v3, sel_popDebugGroup);
  objc_msgSend(v3, sel_endEncoding);
  return swift_unknownObjectRelease();
}

uint64_t sub_22654D5A8(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  char **v6;
  double v7;
  float64_t v9;
  float32x2_t v10;
  double v15;
  float32x4_t v16;
  float32x4_t v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  float32x4_t *v40;
  float32x4_t v41;
  float32x4_t v42;
  float32x4_t v43;
  float32x4_t v44;
  void *v45;
  double v46;
  double v47;
  double v48;
  float v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  _QWORD *v60;
  unint64_t v61;
  uint64_t v62;
  float32x4_t v64;
  float32x4_t v65;
  float32x4_t v66;
  float32x4_t v67;
  float32x4_t v68;
  float32x4_t v69;
  float32x4_t v70;
  float32x4_t v71;
  float32x4_t v72;
  __n128 v73;
  float32x4_t v74;
  __n128 v75;
  float32x4_t v76;
  __n128 v77;
  float64_t v78;
  float32x2_t v79;
  float32x4_t v80;
  __n128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  float v86;
  _QWORD v87[3];

  v3 = v2;
  v87[1] = *MEMORY[0x24BDAC8D0];
  v6 = (char **)&stru_24EE07000;
  objc_msgSend(*(id *)(v3 + 168), sel_value);
  v78 = v7;
  objc_msgSend(*(id *)(v3 + 160), sel_value);
  _Q1.f64[0] = v78;
  _Q1.f64[1] = v9;
  v10 = vmaxnm_f32(vcvt_f32_f64(_Q1), 0);
  __asm { FMOV            V1.2S, #1.0 }
  v79 = vminnm_f32(v10, *(float32x2_t *)&_Q1.f64[0]);
  v87[0] = v79;
  objc_msgSend(*(id *)(v3 + 176), sel_value);
  *(float *)&v15 = v15;
  v86 = fminf(fmaxf(*(float *)&v15, 0.0), 1.0);
  v16 = vaddq_f32(*(float32x4_t *)(v3 + 480), vmulq_lane_f32(vsubq_f32(*(float32x4_t *)(v3 + 416), *(float32x4_t *)(v3 + 480)), v79, 1));
  *(float32x4_t *)(v3 + 336) = vaddq_f32(*(float32x4_t *)(v3 + 464), vmulq_lane_f32(vsubq_f32(*(float32x4_t *)(v3 + 400), *(float32x4_t *)(v3 + 464)), v79, 1));
  *(float32x4_t *)(v3 + 352) = v16;
  v17 = vaddq_f32(*(float32x4_t *)(v3 + 512), vmulq_lane_f32(vsubq_f32(*(float32x4_t *)(v3 + 448), *(float32x4_t *)(v3 + 512)), v79, 1));
  *(float32x4_t *)(v3 + 368) = vaddq_f32(*(float32x4_t *)(v3 + 496), vmulq_lane_f32(vsubq_f32(*(float32x4_t *)(v3 + 432), *(float32x4_t *)(v3 + 496)), v79, 1));
  *(float32x4_t *)(v3 + 384) = v17;
  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDD690]), sel_init);
  v19 = objc_msgSend(v18, sel_colorAttachments);
  v20 = objc_msgSend(v19, sel_objectAtIndexedSubscript_, 0);

  if (!v20)
  {
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v21 = *(_QWORD *)(v3 + 32);
  if (v21 < 2)
  {
    v22 = objc_msgSend(a1, sel_texture);
  }
  else
  {
    v22 = *(id *)(v3 + 544);
    swift_unknownObjectRetain();
  }
  objc_msgSend(v20, sel_setTexture_, v22);

  swift_unknownObjectRelease();
  v23 = objc_msgSend(v18, sel_colorAttachments);
  v24 = objc_msgSend(v23, sel_objectAtIndexedSubscript_, 0);

  if (!v24)
    goto LABEL_38;
  if (v21 < 2)
    v25 = 0;
  else
    v25 = objc_msgSend(a1, sel_texture);
  objc_msgSend(v24, sel_setResolveTexture_, v25);

  swift_unknownObjectRelease();
  v26 = objc_msgSend(v18, sel_colorAttachments);
  v27 = objc_msgSend(v26, sel_objectAtIndexedSubscript_, 0);

  if (!v27)
    goto LABEL_39;
  objc_msgSend(v27, sel_setClearColor_, 0.0, 0.0, 0.0, 0.0);

  v28 = objc_msgSend(v18, sel_colorAttachments);
  v29 = objc_msgSend(v28, sel_objectAtIndexedSubscript_, 0);

  if (!v29)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v21 <= 1)
    v30 = 1;
  else
    v30 = 2;
  objc_msgSend(v29, sel_setStoreAction_, v30);

  v31 = objc_msgSend(v18, sel_colorAttachments);
  v32 = objc_msgSend(v31, sel_objectAtIndexedSubscript_, 0);

  if (!v32)
    goto LABEL_41;
  objc_msgSend(v32, sel_setLoadAction_, 2);

  v33 = objc_msgSend(a2, sel_renderCommandEncoderWithDescriptor_, v18);
  if (!v33)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v34 = v33;
  v35 = (void *)sub_22655CD64();
  objc_msgSend(v34, sel_setLabel_, v35);

  v36 = (void *)sub_22655CD64();
  objc_msgSend(v34, sel_pushDebugGroup_, v36);

  v37 = *(_QWORD *)(v3 + 552);
  if (!v37)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v72 = *(float32x4_t *)(v3 + 336);
  v74 = *(float32x4_t *)(v3 + 352);
  v76 = *(float32x4_t *)(v3 + 368);
  v80 = *(float32x4_t *)(v3 + 384);
  v68 = *(float32x4_t *)(v3 + 272);
  v69 = *(float32x4_t *)(v3 + 288);
  v70 = *(float32x4_t *)(v3 + 304);
  v71 = *(float32x4_t *)(v3 + 320);
  v38 = *(_QWORD *)(v37 + 64);
  if (!(v38 >> 62))
  {
    v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v39)
      goto LABEL_19;
LABEL_33:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_34;
  }
  swift_bridgeObjectRetain();
  if (!sub_22655D400())
    goto LABEL_33;
LABEL_19:
  if ((v38 & 0xC000000000000001) != 0)
  {
LABEL_34:
    v40 = (float32x4_t *)MEMORY[0x2276999E4](0, v38);
    goto LABEL_22;
  }
  if (!*(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_36;
  }
  v40 = *(float32x4_t **)(v38 + 32);
  swift_retain();
LABEL_22:
  swift_bridgeObjectRelease();
  v64 = v40[5];
  v65 = v40[6];
  v66 = v40[7];
  v67 = v40[8];
  swift_release();
  if (*(_QWORD *)(v3 + 560))
  {
    v41 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v72, v68.f32[0]), v74, *(float32x2_t *)v68.f32, 1), v76, v68, 2), v80, v68, 3);
    v42 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v72, v69.f32[0]), v74, *(float32x2_t *)v69.f32, 1), v76, v69, 2), v80, v69, 3);
    v43 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v72, v70.f32[0]), v74, *(float32x2_t *)v70.f32, 1), v76, v70, 2), v80, v70, 3);
    v44 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v72, v71.f32[0]), v74, *(float32x2_t *)v71.f32, 1), v76, v71, 2), v80, v71, 3);
    v81 = (__n128)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v41, v64.f32[0]), v42, *(float32x2_t *)v64.f32, 1), v43, v64, 2), v44, v64, 3);
    v77 = (__n128)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v41, v65.f32[0]), v42, *(float32x2_t *)v65.f32, 1), v43, v65, 2), v44, v65, 3);
    v73 = (__n128)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v41, v67.f32[0]), v42, *(float32x2_t *)v67.f32, 1), v43, v67, 2), v44, v67, 3);
    v75 = (__n128)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v41, v66.f32[0]), v42, *(float32x2_t *)v66.f32, 1), v43, v66, 2), v44, v66, 3);
    v45 = *(void **)(v3 + 160);
    swift_retain();
    objc_msgSend(v45, sel_value);
    v47 = 1.0 - v46;
    objc_msgSend(*(id *)(v3 + 168), sel_value);
    v49 = v47 * v48;
    sub_2264E9C0C(v34, v81, v77, v75, v73, v49, *(float *)(*(_QWORD *)(v3 + 72) + 16) + -0.3);
    swift_release();
  }
  v6 = &selRef_session_didUpdateTextCoaching_;
  objc_msgSend(v34, sel_popDebugGroup);
  v50 = (void *)sub_22655CD64();
  objc_msgSend(v34, sel_pushDebugGroup_, v50);

  objc_msgSend(v34, sel_setRenderPipelineState_, *(_QWORD *)(v3 + 536));
  v51 = *(_QWORD *)(v3 + 552);
  if (!v51)
    goto LABEL_44;
  objc_msgSend(v34, sel_setVertexBuffer_offset_atIndex_, *(_QWORD *)(v51 + 16), 0, 0);
  v52 = *(_QWORD *)(v3 + 552);
  if (!v52)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  objc_msgSend(v34, sel_setVertexBuffer_offset_atIndex_, *(_QWORD *)(v52 + 48), 0, 1);
  v53 = *(_OWORD *)(v3 + 288);
  v54 = *(_OWORD *)(v3 + 304);
  v55 = *(_OWORD *)(v3 + 320);
  v82 = *(_OWORD *)(v3 + 272);
  v83 = v53;
  v84 = v54;
  v85 = v55;
  objc_msgSend(v34, sel_setVertexBytes_length_atIndex_, &v82, 64, 2);
  v56 = *(_OWORD *)(v3 + 352);
  v57 = *(_OWORD *)(v3 + 368);
  v58 = *(_OWORD *)(v3 + 384);
  v82 = *(_OWORD *)(v3 + 336);
  v83 = v56;
  v84 = v57;
  v85 = v58;
  objc_msgSend(v34, sel_setVertexBytes_length_atIndex_, &v82, 64, 3);
  LODWORD(v82) = *(_DWORD *)(v3 + 80);
  objc_msgSend(v34, sel_setVertexBytes_length_atIndex_, &v82, 4, 4);
  objc_msgSend(v34, sel_setVertexBytes_length_atIndex_, v87, 8, 5);
  objc_msgSend(v34, sel_setVertexBytes_length_atIndex_, &v86, 4, 6);
  v59 = *(_QWORD *)(v3 + 552);
  if (!v59)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  objc_msgSend(v34, sel_setTessellationFactorBuffer_offset_instanceStride_, *(_QWORD *)(v59 + 40), 0, 0);
  v60 = *(_QWORD **)(v3 + 552);
  if (!v60)
  {
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
  }
  v38 = v60[3];
  if (!v38)
    goto LABEL_48;
  v3 = v60[7];
  v61 = v60[8];
  if (v61 >> 62)
  {
LABEL_36:
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    v62 = sub_22655D400();
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  v62 = *(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_unknownObjectRetain();
LABEL_31:
  objc_msgSend(v34, sel_drawIndexedPatches_patchStart_patchCount_patchIndexBuffer_patchIndexBufferOffset_controlPointIndexBuffer_controlPointIndexBufferOffset_instanceCount_baseInstance_, 4, 0, v3, 0, 0, v38, 0, v62, 0);
  swift_unknownObjectRelease();
  objc_msgSend(v34, v6[430]);
  objc_msgSend(v34, sel_endEncoding);

  return swift_unknownObjectRelease();
}

void sub_22654DDF8(double a1)
{
  uint64_t v1;
  char **v2;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  unint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  swift_beginAccess();
  v4 = swift_bridgeObjectRetain();
  sub_226452160(v4, a1);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v5 = *(_QWORD *)(v1 + 112);
  v6 = v5 & 0xC000000000000001;
  if ((v5 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v8 = (id)MEMORY[0x2276999E4](0, v5);
  }
  else
  {
    if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_26;
    }
    v7 = *(void **)(v5 + 32);
    swift_bridgeObjectRetain();
    v8 = v7;
  }
  v9 = v8;
  v2 = &selRef_session_didUpdateTextCoaching_;
  objc_msgSend(v8, sel_step_, a1);

  if (v6)
  {
    v10 = (id)MEMORY[0x2276999E4](1, v5);
  }
  else
  {
    if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    v10 = *(id *)(v5 + 40);
  }
  v11 = v10;
  objc_msgSend(v10, sel_step_, a1);

  if (v6)
  {
    v12 = (id)MEMORY[0x2276999E4](2, v5);
  }
  else
  {
    if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) < 3uLL)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v12 = *(id *)(v5 + 48);
  }
  v13 = v12;
  objc_msgSend(v12, sel_step_, a1);
  swift_bridgeObjectRelease();

  swift_beginAccess();
  v5 = *(_QWORD *)(v1 + 136);
  v6 = v5 & 0xC000000000000001;
  if ((v5 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v14 = *(void **)(v5 + 32);
      swift_bridgeObjectRetain();
      v15 = v14;
      goto LABEL_15;
    }
    __break(1u);
    goto LABEL_28;
  }
LABEL_26:
  swift_bridgeObjectRetain();
  v15 = (id)MEMORY[0x2276999E4](0, v5);
LABEL_15:
  v16 = v15;
  objc_msgSend(v15, v2[50], a1);

  if (!v6)
  {
    if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
    {
      v17 = *(id *)(v5 + 40);
      goto LABEL_19;
    }
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v17 = (id)MEMORY[0x2276999E4](1, v5);
LABEL_19:
  v18 = v17;
  objc_msgSend(v17, v2[50], a1);

  if (v6)
  {
    v19 = (id)MEMORY[0x2276999E4](2, v5);
LABEL_23:
    v20 = v19;
    objc_msgSend(v19, v2[50], a1);
    swift_bridgeObjectRelease();

    objc_msgSend(*(id *)(v1 + 160), v2[50], a1);
    objc_msgSend(*(id *)(v1 + 168), v2[50], a1);
    objc_msgSend(*(id *)(v1 + 176), v2[50], a1);
    v21 = swift_bridgeObjectRetain();
    sub_2264522AC(v21);
    v24 = v23;
    v25 = v22;
    swift_bridgeObjectRelease();
    *(_OWORD *)(v1 + 192) = v25;
    *(_OWORD *)(v1 + 208) = v24;
    return;
  }
  if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) >= 3uLL)
  {
    v19 = *(id *)(v5 + 48);
    goto LABEL_23;
  }
LABEL_31:
  __break(1u);
}

void sub_22654E0D8(void *a1, void *a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  float v13;
  double v14;
  double v15;
  double v16;
  float v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  id v21;
  void *v22;
  double v23;
  double v24;
  id v25;
  void *v26;
  double v27;
  double v28;
  id v29;
  void *v30;
  float v31;
  float v32;
  double v33;
  double v34;
  float v35;
  float v36;
  float v37;
  __n128 v38;
  void *v39;
  id v40;
  void *v41;
  double v42;
  double v43;
  id v44;
  void *v45;
  double v46;
  double v47;
  id v48;
  void *v49;
  double v50;
  double v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  __n128 v55;
  void *v56;
  id v57;
  void *v58;
  double v59;
  id v60;
  void *v61;
  __int128 v62;
  id v63;
  void *v64;
  double v65;
  double v66;
  float64x2_t v67;
  __n128 v68;
  void *v69;
  id v70;
  void *v71;
  double v72;
  double v73;
  id v74;
  void *v75;
  double v76;
  double v77;
  id v78;
  void *v79;
  double v80;
  double v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  __n128 v85;
  void *v86;
  id v87;
  void *v88;
  double v89;
  double v90;
  id v91;
  void *v92;
  double v93;
  double v94;
  id v95;
  void *v96;
  double v97;
  double v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  __n128 v102;
  void *v103;
  id v104;
  void *v105;
  double v106;
  double v107;
  id v108;
  void *v109;
  double v110;
  double v111;
  id v112;
  void *v113;
  double v114;
  double v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  __n128 v119;
  void *v120;
  id v121;
  void *v122;
  double v123;
  double v124;
  id v125;
  void *v126;
  double v127;
  double v128;
  id v129;
  void *v130;
  double v131;
  double v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  __n128 v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  uint64_t v142;
  int v143;
  double v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  float32x4_t *v149;
  void *v150;
  double v151;
  double v152;
  double v153;
  double v154;
  double v155;
  double v156;
  double v157;
  double v158;
  float v159;
  void *v160;
  __int128 v161;
  float64_t v162;
  float64_t v163;

  v6 = v3;
  v10 = MEMORY[0x22769A944](v3 + 48);
  if (!v10)
    return;
  v11 = (void *)v10;
  sub_22654DDF8(a3);
  v12 = *(_QWORD *)(v3 + 72);
  v13 = a3;
  if (*(_BYTE *)(*(_QWORD *)(v6 + 64) + 32) == 1)
    v13 = 0.0;
  *(float *)(v12 + 16) = *(float *)(v12 + 16) + v13;
  *(float *)&v14 = sub_22652ECB0();
  objc_msgSend(*(id *)(v6 + 160), sel_value, v14);
  if (!*(_QWORD *)(v6 + 552))
    goto LABEL_130;
  v16 = v15;
  v17 = *(float *)(*(_QWORD *)(v6 + 72) + 28);
  swift_beginAccess();
  v18 = *(_QWORD *)(v6 + 112);
  v19 = v18 & 0xC000000000000001;
  if ((v18 & 0xC000000000000001) != 0)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    v21 = (id)MEMORY[0x2276999E4](0, v18);
  }
  else
  {
    if (!*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_101:
      swift_retain();
      swift_bridgeObjectRetain();
      v40 = (id)MEMORY[0x2276999E4](0, v4);
      goto LABEL_20;
    }
    v20 = *(void **)(v18 + 32);
    swift_retain();
    swift_bridgeObjectRetain();
    v21 = v20;
  }
  v22 = v21;
  objc_msgSend(v21, sel_value);
  v24 = v23;

  if (v19)
  {
    v25 = (id)MEMORY[0x2276999E4](1, v18);
  }
  else
  {
    if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
LABEL_116:
      __break(1u);
      goto LABEL_117;
    }
    v25 = *(id *)(v18 + 40);
  }
  v26 = v25;
  objc_msgSend(v25, sel_value);
  v28 = v27;

  if (v19)
  {
    v29 = (id)MEMORY[0x2276999E4](2, v18);
  }
  else
  {
    if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10) < 3uLL)
    {
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    v29 = *(id *)(v18 + 48);
  }
  v30 = v29;
  v31 = v16;
  v32 = fminf(fmaxf(v31, 0.0), 1.0) * (float)(v17 * 0.05);
  objc_msgSend(v29, sel_value);
  v34 = v33;
  swift_bridgeObjectRelease();

  v35 = v24;
  v36 = v28;
  v37 = v34;
  v38.n128_u32[3] = 0;
  v38.n128_f32[0] = v32 + v35;
  v38.n128_f32[1] = v32 + v36;
  v38.n128_f32[2] = v32 + v37;
  sub_22652E5BC(v38);
  swift_release();
  if (!*(_QWORD *)(v6 + 552))
  {
LABEL_131:
    __break(1u);
    goto LABEL_132;
  }
  v18 = v6 + 136;
  swift_beginAccess();
  v4 = *(_QWORD *)(v6 + 136);
  v5 = v4 & 0xC000000000000001;
  if ((v4 & 0xC000000000000001) != 0)
    goto LABEL_101;
  if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_103:
    swift_retain();
    swift_bridgeObjectRetain();
    v57 = (id)MEMORY[0x2276999E4](0, v4);
    goto LABEL_32;
  }
  v39 = *(void **)(v4 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  v40 = v39;
LABEL_20:
  v41 = v40;
  objc_msgSend(v40, sel_value);
  v43 = v42;

  if (v5)
  {
    v44 = (id)MEMORY[0x2276999E4](1, v4);
  }
  else
  {
    if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
LABEL_118:
      __break(1u);
      goto LABEL_119;
    }
    v44 = *(id *)(v4 + 40);
  }
  v45 = v44;
  objc_msgSend(v44, sel_value);
  v47 = v46;

  if (v5)
  {
    v48 = (id)MEMORY[0x2276999E4](2, v4);
  }
  else
  {
    if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) < 3uLL)
    {
LABEL_119:
      __break(1u);
      goto LABEL_120;
    }
    v48 = *(id *)(v4 + 48);
  }
  v49 = v48;
  objc_msgSend(v48, sel_value);
  v51 = v50;
  swift_bridgeObjectRelease();

  *(float *)&v52 = v43;
  *(float *)&v53 = v47;
  *(float *)&v54 = v51;
  v55.n128_u64[0] = __PAIR64__(v53, v52);
  v55.n128_u64[1] = v54;
  sub_22652E878(0, v55);
  swift_release();
  if (!*(_QWORD *)(v6 + 552))
  {
LABEL_132:
    __break(1u);
    goto LABEL_133;
  }
  v4 = *(_QWORD *)v18;
  v5 = *(_QWORD *)v18 & 0xC000000000000001;
  if (v5)
    goto LABEL_103;
  if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_105:
    swift_retain();
    swift_bridgeObjectRetain();
    v70 = (id)MEMORY[0x2276999E4](0, v4);
    goto LABEL_44;
  }
  v56 = *(void **)(v4 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  v57 = v56;
LABEL_32:
  v58 = v57;
  objc_msgSend(v57, sel_value);
  v163 = v59;

  if (v5)
  {
    v60 = (id)MEMORY[0x2276999E4](1, v4);
  }
  else
  {
    if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
LABEL_120:
      __break(1u);
      goto LABEL_121;
    }
    v60 = *(id *)(v4 + 40);
  }
  v61 = v60;
  objc_msgSend(v60, sel_value);
  v161 = v62;

  if (v5)
  {
    v63 = (id)MEMORY[0x2276999E4](2, v4);
  }
  else
  {
    if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) < 3uLL)
    {
LABEL_121:
      __break(1u);
      goto LABEL_122;
    }
    v63 = *(id *)(v4 + 48);
  }
  v64 = v63;
  objc_msgSend(v63, sel_value, v161);
  v66 = v65;
  swift_bridgeObjectRelease();

  v67.f64[0] = v163;
  v67.f64[1] = v162;
  v68.n128_u64[0] = (unint64_t)vcvt_f32_f64(vsubq_f64((float64x2_t)0, v67));
  *(float *)v67.f64 = 0.0 - v66;
  v68.n128_u64[1] = LODWORD(v67.f64[0]);
  sub_22652E878(1, v68);
  swift_release();
  if (!*(_QWORD *)(v6 + 552))
  {
LABEL_133:
    __break(1u);
    goto LABEL_134;
  }
  v4 = *(_QWORD *)v18;
  v5 = *(_QWORD *)v18 & 0xC000000000000001;
  if (v5)
    goto LABEL_105;
  if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_107:
    swift_retain();
    swift_bridgeObjectRetain();
    v87 = (id)MEMORY[0x2276999E4](0, v4);
    goto LABEL_56;
  }
  v69 = *(void **)(v4 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  v70 = v69;
LABEL_44:
  v71 = v70;
  objc_msgSend(v70, sel_value);
  v73 = v72;

  if (v5)
  {
    v74 = (id)MEMORY[0x2276999E4](1, v4);
  }
  else
  {
    if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
LABEL_122:
      __break(1u);
      goto LABEL_123;
    }
    v74 = *(id *)(v4 + 40);
  }
  v75 = v74;
  objc_msgSend(v74, sel_value);
  v77 = v76;

  if (v5)
  {
    v78 = (id)MEMORY[0x2276999E4](2, v4);
  }
  else
  {
    if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) < 3uLL)
    {
LABEL_123:
      __break(1u);
      goto LABEL_124;
    }
    v78 = *(id *)(v4 + 48);
  }
  v79 = v78;
  objc_msgSend(v78, sel_value);
  v81 = v80;
  swift_bridgeObjectRelease();

  *(float *)&v82 = v73;
  *(float *)&v83 = v77;
  *(float *)&v84 = v81;
  v85.n128_u64[0] = __PAIR64__(v83, v82);
  v85.n128_u64[1] = v84;
  sub_22652E878(2, v85);
  swift_release();
  if (!*(_QWORD *)(v6 + 552))
  {
LABEL_134:
    __break(1u);
    goto LABEL_135;
  }
  v4 = *(_QWORD *)v18;
  v5 = *(_QWORD *)v18 & 0xC000000000000001;
  if (v5)
    goto LABEL_107;
  if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_109:
    swift_retain();
    swift_bridgeObjectRetain();
    v104 = (id)MEMORY[0x2276999E4](0, v4);
    goto LABEL_68;
  }
  v86 = *(void **)(v4 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  v87 = v86;
LABEL_56:
  v88 = v87;
  objc_msgSend(v87, sel_value);
  v90 = v89;

  if (v5)
  {
    v91 = (id)MEMORY[0x2276999E4](1, v4);
  }
  else
  {
    if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
LABEL_124:
      __break(1u);
      goto LABEL_125;
    }
    v91 = *(id *)(v4 + 40);
  }
  v92 = v91;
  objc_msgSend(v91, sel_value);
  v94 = v93;

  if (v5)
  {
    v95 = (id)MEMORY[0x2276999E4](2, v4);
  }
  else
  {
    if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) < 3uLL)
    {
LABEL_125:
      __break(1u);
      goto LABEL_126;
    }
    v95 = *(id *)(v4 + 48);
  }
  v96 = v95;
  objc_msgSend(v95, sel_value);
  v98 = v97;
  swift_bridgeObjectRelease();

  *(float *)&v99 = v90;
  *(float *)&v100 = v94;
  *(float *)&v101 = v98;
  v102.n128_u64[0] = __PAIR64__(v100, v99);
  v102.n128_u64[1] = v101;
  sub_22652E878(3, v102);
  swift_release();
  if (!*(_QWORD *)(v6 + 552))
  {
LABEL_135:
    __break(1u);
    goto LABEL_136;
  }
  v4 = *(_QWORD *)v18;
  v5 = *(_QWORD *)v18 & 0xC000000000000001;
  if (v5)
    goto LABEL_109;
  if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_111:
    swift_retain();
    swift_bridgeObjectRetain();
    v121 = (id)MEMORY[0x2276999E4](0, v18);
    goto LABEL_80;
  }
  v103 = *(void **)(v4 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  v104 = v103;
LABEL_68:
  v105 = v104;
  objc_msgSend(v104, sel_value);
  v107 = v106;

  if (v5)
  {
    v108 = (id)MEMORY[0x2276999E4](1, v4);
  }
  else
  {
    if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
LABEL_126:
      __break(1u);
      goto LABEL_127;
    }
    v108 = *(id *)(v4 + 40);
  }
  v109 = v108;
  objc_msgSend(v108, sel_value);
  v111 = v110;

  if (v5)
  {
    v112 = (id)MEMORY[0x2276999E4](2, v4);
  }
  else
  {
    if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) < 3uLL)
    {
LABEL_127:
      __break(1u);
      goto LABEL_128;
    }
    v112 = *(id *)(v4 + 48);
  }
  v113 = v112;
  objc_msgSend(v112, sel_value);
  v115 = v114;
  swift_bridgeObjectRelease();

  *(float *)&v116 = v107;
  *(float *)&v117 = v111;
  *(float *)&v118 = v115;
  v119.n128_u64[0] = __PAIR64__(v117, v116);
  v119.n128_u64[1] = v118;
  sub_22652E878(4, v119);
  swift_release();
  if (!*(_QWORD *)(v6 + 552))
  {
LABEL_136:
    __break(1u);
    goto LABEL_137;
  }
  v18 = *(_QWORD *)v18;
  v96 = (void *)(v18 & 0xC000000000000001);
  if ((v18 & 0xC000000000000001) != 0)
    goto LABEL_111;
  if (!*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_113:
    __break(1u);
    goto LABEL_114;
  }
  v120 = *(void **)(v18 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  v121 = v120;
LABEL_80:
  v122 = v121;
  objc_msgSend(v121, sel_value);
  v124 = v123;

  if (v96)
  {
    v125 = (id)MEMORY[0x2276999E4](1, v18);
  }
  else
  {
    if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
LABEL_128:
      __break(1u);
      goto LABEL_129;
    }
    v125 = *(id *)(v18 + 40);
  }
  v126 = v125;
  objc_msgSend(v125, sel_value);
  v128 = v127;

  if (v96)
  {
    v129 = (id)MEMORY[0x2276999E4](2, v18);
  }
  else
  {
    if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10) < 3uLL)
    {
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
      goto LABEL_131;
    }
    v129 = *(id *)(v18 + 48);
  }
  v130 = v129;
  objc_msgSend(v129, sel_value);
  v132 = v131;
  swift_bridgeObjectRelease();

  *(float *)&v133 = v124;
  *(float *)&v134 = v128;
  *(float *)&v135 = v132;
  v136.n128_u64[0] = __PAIR64__(v134, v133);
  v136.n128_u64[1] = v135;
  sub_22652E878(5, v136);
  swift_release();
  v137 = *(_QWORD *)(v6 + 552);
  if (!v137)
  {
LABEL_137:
    __break(1u);
    goto LABEL_138;
  }
  v138 = *(_QWORD *)(v137 + 72);
  if (!v138)
  {
LABEL_138:
    __break(1u);
    goto LABEL_139;
  }
  v139 = v138 + 16;
  swift_beginAccess();
  v140 = *(_QWORD *)(v138 + 16);
  if (*(_QWORD *)(v140 + 16) < 2uLL)
    goto LABEL_113;
  v141 = *(_QWORD **)(v140 + 40);
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)v139 + 16))
  {
LABEL_114:
    __break(1u);
LABEL_115:
    __break(1u);
    goto LABEL_116;
  }
  v142 = *(_QWORD *)(*(_QWORD *)v139 + 32);
  v143 = *(_DWORD *)(*(_QWORD *)(v6 + 72) + 28);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  LODWORD(v144) = v143;
  v145 = sub_22652EE54(v141, v142, v144);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v146 = *(_QWORD *)(v6 + 552);
  if (!v146)
  {
LABEL_139:
    __break(1u);
    goto LABEL_140;
  }
  v147 = *(_QWORD *)(v146 + 72);
  if (!v147)
  {
LABEL_140:
    __break(1u);
    return;
  }
  swift_beginAccess();
  v148 = *(_QWORD *)(v147 + 16);
  if (*(_QWORD *)(v148 + 16) < 3uLL)
    goto LABEL_115;
  v149 = *(float32x4_t **)(v148 + 48);
  v150 = *(void **)(v6 + 160);
  swift_retain();
  swift_bridgeObjectRetain();
  objc_msgSend(v150, sel_value);
  v152 = v151;
  objc_msgSend(*(id *)(v6 + 176), sel_value);
  v154 = v152 * v153;
  objc_msgSend(*(id *)(v6 + 176), sel_value);
  v156 = v154 * v155;
  objc_msgSend(*(id *)(v6 + 176), sel_value);
  v158 = v156 * v157;
  *(float *)&v158 = v158;
  sub_22652E478(v149, (uint64_t)v145, v158);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  *(long double *)(v6 + 224) = fmod(*(double *)(v6 + 224) + *(float *)(v6 + 576), 1.57079637);
  *(_QWORD *)(v6 + 256) = 0;
  *(_QWORD *)(v6 + 264) = 0;
  *(_OWORD *)(v6 + 240) = xmmword_22655EF70;
  sub_22654EF5C();
  if (*(_BYTE *)(v6 + 580) == 1)
    sub_22654D398(a2);
  *(_BYTE *)(v6 + 580) = 0;
  sub_22654D5A8(a1, a2);
  v159 = *(float *)(*(_QWORD *)(v6 + 72) + 16);
  v160 = *(void **)(v6 + 160);
  swift_retain();
  objc_msgSend(v160, sel_value);
  objc_msgSend(*(id *)(v6 + 168), sel_value);
  sub_22649E858(v11, v159);

  swift_release();
}

void sub_22654EC7C(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  double v5;
  double v6;
  float v8;
  float32x4_t v9;
  float32x4_t v10;
  float32x4_t v11;
  float32x4_t v12;
  float32x4_t v13;
  float32x4_t v14;
  float32x4_t v15;
  float32x4_t v16;
  float32x4_t v17;
  float32x4_t v18;
  float32x4_t v19;
  float32x4_t v20;
  float32x4_t v21;
  float32x4_t v22;
  float32x4_t v23;
  float32x4_t v24;
  float32x4_t v25;
  float32x4_t v26;
  float32x4_t v27;
  float32x4_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x4_t v32;

  v3 = objc_msgSend(objc_msgSend(a1, sel_texture), sel_width);
  swift_unknownObjectRelease();
  v4 = objc_msgSend(objc_msgSend(a1, sel_texture), sel_height);
  swift_unknownObjectRelease();
  v5 = (double)(uint64_t)v3;
  v6 = (double)(uint64_t)v4;
  if (*(double *)(v1 + 584) != (double)(uint64_t)v3 || *(double *)(v1 + 592) != v6)
  {
    *(double *)(v1 + 584) = v5;
    *(double *)(v1 + 592) = v6;
    sub_22654D0DC((double)(uint64_t)v3, (double)(uint64_t)v4);
    v8 = v5 / v6;
    v9.f32[0] = sub_22652F52C(v8 * -1.5, v8 * 1.5);
    v25 = v9;
    v27 = v10;
    v29 = v11;
    v31 = v12;
    *(double *)v13.i64 = sub_22652F580((float32x4_t)xmmword_226568FF0, (float32x4_t)0, (float32x4_t)xmmword_2265600C0);
    *(float32x4_t *)(v1 + 400) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v25, v13.f32[0]), v27, *(float32x2_t *)v13.f32, 1), v29, v13, 2), v31, v13, 3);
    *(float32x4_t *)(v1 + 416) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v25, v14.f32[0]), v27, *(float32x2_t *)v14.f32, 1), v29, v14, 2), v31, v14, 3);
    *(float32x4_t *)(v1 + 432) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v25, v15.f32[0]), v27, *(float32x2_t *)v15.f32, 1), v29, v15, 2), v31, v15, 3);
    *(float32x4_t *)(v1 + 448) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v25, v16.f32[0]), v27, *(float32x2_t *)v16.f32, 1), v29, v16, 2), v31, v16, 3);
    v17.f32[0] = sub_22652F6CC(85.0, v8);
    v26 = v17;
    v28 = v18;
    v30 = v19;
    v32 = v20;
    *(double *)v21.i64 = sub_22652F580((float32x4_t)xmmword_226569000, (float32x4_t)xmmword_226569010, (float32x4_t)xmmword_2265600C0);
    *(float32x4_t *)(v1 + 464) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v26, v21.f32[0]), v28, *(float32x2_t *)v21.f32, 1), v30, v21, 2), v32, v21, 3);
    *(float32x4_t *)(v1 + 480) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v26, v22.f32[0]), v28, *(float32x2_t *)v22.f32, 1), v30, v22, 2), v32, v22, 3);
    *(float32x4_t *)(v1 + 496) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v26, v23.f32[0]), v28, *(float32x2_t *)v23.f32, 1), v30, v23, 2), v32, v23, 3);
    *(float32x4_t *)(v1 + 512) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v26, v24.f32[0]), v28, *(float32x2_t *)v24.f32, 1), v30, v24, 2), v32, v24, 3);
    *(_BYTE *)(v1 + 580) = 1;
  }
}

id *sub_22654EE80()
{
  id *v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectWeakDestroy();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_22654EF1C()
{
  sub_22654EE80();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GlyphRenderer()
{
  return objc_opt_self();
}

void sub_22654EF5C()
{
  uint64_t v0;
  float64x2_t v1;
  float64x2_t v2;
  float64x2_t v3;
  __double2 v4;
  int8x16_t v5;
  float64x2_t v6;
  float64x2_t v7;
  float64x2_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  float64x2_t v13;
  float64x2_t v14;
  float64x2_t v15;
  float64x2_t v16;
  float64x2_t v17;
  float64x2_t v18;
  float64x2_t v19[2];
  float64x2_t v20[2];

  v1 = *(float64x2_t *)(v0 + 208);
  v20[0] = *(float64x2_t *)(v0 + 192);
  v20[1] = v1;
  v19[0] = v20[0];
  v19[1] = v1;
  simd_slerp(v20, v19, &v17);
  v2 = v18;
  v15 = v17;
  v16 = v18;
  *(float64x2_t *)(v0 + 192) = v17;
  *(float64x2_t *)(v0 + 208) = v2;
  v13 = *(float64x2_t *)(v0 + 256);
  v14 = *(float64x2_t *)(v0 + 240);
  v4 = __sincos_stret(*(double *)(v0 + 224) * 0.5);
  v3.f64[0] = v4.__sinval;
  v5.i64[0] = *(_OWORD *)&vmulq_f64(v13, v3);
  v5.i64[1] = *(_QWORD *)&v4.__cosval;
  v6 = vmulq_n_f64(v14, v4.__sinval);
  v7 = vnegq_f64(v6);
  v8 = (float64x2_t)vextq_s8(v5, (int8x16_t)vnegq_f64((float64x2_t)v5), 8uLL);
  *(double *)&v9 = MEMORY[0x2276996F0]((__n128)vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vaddq_f64(vmlaq_n_f64(vmulq_laneq_f64(v6, v16, 1), (float64x2_t)vextq_s8((int8x16_t)v7, (int8x16_t)v6, 8uLL), v16.f64[0]), vmlaq_n_f64(vmulq_laneq_f64((float64x2_t)v5, v15, 1), v8, v15.f64[0]))), vaddq_f64(vmlaq_n_f64(vmulq_laneq_f64((float64x2_t)v5, v16, 1), v8, v16.f64[0]), vmlaq_n_f64(vmulq_laneq_f64(v7, v15, 1), (float64x2_t)vextq_s8((int8x16_t)v6, (int8x16_t)v7, 8uLL), v15.f64[0]))));
  *(_OWORD *)(v0 + 272) = v9;
  *(_OWORD *)(v0 + 288) = v10;
  *(_OWORD *)(v0 + 304) = v11;
  *(_OWORD *)(v0 + 320) = v12;
}

void simd_slerp(float64x2_t *a1@<X0>, float64x2_t *a2@<X1>, float64x2_t *a3@<X8>)
{
  float64x2_t v3;
  float64x2_t v4;
  float64x2_t *v5;
  float64x2_t v6;
  float64x2_t v7;
  _OWORD v8[2];
  _OWORD v9[2];
  float64x2_t v10;
  float64x2_t v11;

  v3 = a2[1];
  if (vaddvq_f64(vaddq_f64(vmulq_f64(*a1, *a2), vmulq_f64(a1[1], v3))) >= 0.0)
  {
    v6 = a1[1];
    v10 = *a1;
    v11 = v6;
    v7 = a2[1];
    v9[0] = *a2;
    v9[1] = v7;
    v5 = (float64x2_t *)v9;
  }
  else
  {
    v8[0] = vnegq_f64(*a2);
    v8[1] = vnegq_f64(v3);
    v4 = a1[1];
    v10 = *a1;
    v11 = v4;
    v5 = (float64x2_t *)v8;
  }
  _simd_slerp_internal(&v10, v5, a3);
}

int64x2_t MTLSizeMake_0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int64x2_t result;

  *(_QWORD *)a2 = a1;
  result = vdupq_n_s64(1uLL);
  *(int64x2_t *)(a2 + 8) = result;
  return result;
}

void _simd_slerp_internal(float64x2_t *a1@<X0>, float64x2_t *a2@<X1>, float64x2_t *a3@<X8>)
{
  float64x2_t v4;
  float64x2_t v5;
  float64x2_t v6;
  float64x2_t v7;
  float64x2_t v8;
  float64x2_t v9;
  long double v10;
  double v11;
  double v12;
  BOOL v13;
  double v14;
  double v15;
  float64x2_t v16;
  double v17;
  long double v18;
  double v19;
  float64x2_t v20;
  float64x2_t v21;
  float64x2_t v22;
  double v23;
  float64x2_t v24;
  float64x2_t v25;
  double v26;
  float64x2_t v27;
  float64x2_t v28;
  float64x2_t v29;
  float64x2_t v30;
  float64x2_t v31;

  v4 = a1[1];
  v5 = a2[1];
  v6 = vsubq_f64(*a1, *a2);
  v7 = vsubq_f64(v4, v5);
  v6.f64[0] = sqrt(vaddvq_f64(vaddq_f64(vmulq_f64(v6, v6), vmulq_f64(v7, v7))));
  v29 = *a2;
  v30 = *a1;
  v8 = vaddq_f64(*a1, *a2);
  v31 = v4;
  v28 = v5;
  v9 = vaddq_f64(v4, v5);
  v10 = atan2(v6.f64[0], sqrt(vaddvq_f64(vaddq_f64(vmulq_f64(v8, v8), vmulq_f64(v9, v9)))));
  v11 = v10 + v10;
  v12 = 1.0;
  v13 = v10 + v10 == 0.0;
  v14 = 1.0;
  if (!v13)
    v14 = sin(v11) / v11;
  v15 = 1.0 / v14;
  if (v11 * 0.0 != 0.0)
    v12 = sin(v11 * 0.0) / (v11 * 0.0);
  v16 = (float64x2_t)vdupq_lane_s64(COERCE__INT64(v15 * v12 * 0.0), 0);
  v17 = 1.0;
  if (v11 != 0.0)
  {
    v27 = v16;
    v18 = sin(v11);
    v16 = v27;
    v17 = v18 / v11;
  }
  v19 = v15 * v17;
  v20 = vmulq_n_f64(v28, v19);
  v21 = vmlaq_f64(vmulq_n_f64(v29, v19), v30, v16);
  v22 = vmlaq_f64(v20, v31, v16);
  v23 = vaddvq_f64(vaddq_f64(vmulq_f64(v21, v21), vmulq_f64(v22, v22)));
  if (v23 == 0.0)
  {
    v24 = (float64x2_t)xmmword_22655EF60;
    v25 = 0uLL;
  }
  else
  {
    v26 = 1.0 / sqrt(v23);
    v24 = vmulq_n_f64(v22, v26);
    v25 = vmulq_n_f64(v21, v26);
  }
  *a3 = v25;
  a3[1] = v24;
}

uint64_t sub_22654F200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t type metadata accessor for ScanContainer()
{
  uint64_t result;

  result = qword_25584AE68;
  if (!qword_25584AE68)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22654F244()
{
  return swift_initClassMetadata2();
}

uint64_t sub_22654F280(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  __int128 v11;
  uint64_t v12;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_22655D400();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x24BEE4AF8];
  if (!v2)
    return v3;
  v12 = MEMORY[0x24BEE4AF8];
  result = sub_2264C7AD4(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        MEMORY[0x2276999E4](i, a1);
        sub_22655C8B4();
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2558466B8);
        swift_dynamicCast();
        swift_release();
        v3 = v12;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2264C7AD4(0, *(_QWORD *)(v12 + 16) + 1, 1);
          v3 = v12;
        }
        v7 = *(_QWORD *)(v3 + 16);
        v6 = *(_QWORD *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_2264C7AD4(v6 > 1, v7 + 1, 1);
          v3 = v12;
        }
        *(_QWORD *)(v3 + 16) = v7 + 1;
        *(_OWORD *)(v3 + 16 * v7 + 32) = v11;
      }
    }
    else
    {
      v8 = a1 + 32;
      sub_22655C8B4();
      do
      {
        swift_retain_n();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2558466B8);
        swift_dynamicCast();
        swift_release();
        v3 = v12;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2264C7AD4(0, *(_QWORD *)(v12 + 16) + 1, 1);
          v3 = v12;
        }
        v10 = *(_QWORD *)(v3 + 16);
        v9 = *(_QWORD *)(v3 + 24);
        if (v10 >= v9 >> 1)
        {
          sub_2264C7AD4(v9 > 1, v10 + 1, 1);
          v3 = v12;
        }
        *(_QWORD *)(v3 + 16) = v10 + 1;
        *(_OWORD *)(v3 + 16 * v10 + 32) = v11;
        v8 += 8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_22654F4E8(unint64_t a1)
{
  uint64_t v3;

  if (a1 >> 62)
  {
    sub_22646C8E8();
    swift_bridgeObjectRetain();
    v3 = sub_22655D3F4();
    swift_bridgeObjectRelease();
    return v3;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_22655D568();
    sub_22646C8E8();
    return a1;
  }
}

uint64_t sub_22654F570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558416C0);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_22655C86C();
  MEMORY[0x24BDAC7A8](v4);
  type metadata accessor for ScanContainer();
  sub_22655C23C();
  v11 = MEMORY[0x24BEE4AF8];
  sub_22654F978();
  sub_22655CE60();
  sub_22654F9C0();
  sub_22655D148();
  if (v10)
  {
    type metadata accessor for ScanEntity();
    do
    {
      if (swift_dynamicCastClass())
      {
        sub_22655D364();
        sub_22655D388();
        sub_22655D394();
        sub_22655D370();
      }
      else
      {
        swift_release();
      }
      sub_22655D148();
    }
    while (v10);
  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_release();
  v5 = v11;
  if (v11 < 0 || (v11 & 0x4000000000000000) != 0)
  {
    type metadata accessor for ScanEntity();
    swift_bridgeObjectRetain();
    v9 = sub_22655D3F4();
    swift_release_n();
    return v9;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_22655D568();
    type metadata accessor for ScanEntity();
    if (swift_dynamicCastMetatype() || (v7 = *(_QWORD *)(v5 + 16)) == 0)
    {
LABEL_10:
      swift_release();
    }
    else
    {
      v8 = 0;
      while (swift_dynamicCastClass())
      {
        if (v7 == ++v8)
          goto LABEL_10;
      }
      swift_release();
      return v5 | 1;
    }
  }
  return v5;
}

uint64_t sub_22654F7BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  unint64_t v10;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558416C0);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_22655C86C();
  MEMORY[0x24BDAC7A8](v4);
  type metadata accessor for ScanContainer();
  sub_22655C23C();
  v10 = MEMORY[0x24BEE4AF8];
  sub_22654F978();
  sub_22655CE60();
  sub_22654F9C0();
  sub_22655D148();
  for (i = v9; v9; i = v9)
  {
    if (swift_conformsToProtocol2())
      v6 = i;
    else
      v6 = 0;
    if (v6)
    {
      sub_22655D364();
      sub_22655D388();
      sub_22655D394();
      sub_22655D370();
    }
    else
    {
      swift_release();
    }
    sub_22655D148();
  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_release();
  v7 = sub_22654F280(v10);
  swift_release();
  return v7;
}

uint64_t sub_22654F970()
{
  return type metadata accessor for ScanContainer();
}

unint64_t sub_22654F978()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25584AEB8;
  if (!qword_25584AEB8)
  {
    v1 = sub_22655C86C();
    result = MEMORY[0x22769A794](MEMORY[0x24BDE7148], v1);
    atomic_store(result, (unint64_t *)&qword_25584AEB8);
  }
  return result;
}

unint64_t sub_22654F9C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25584AEC0;
  if (!qword_25584AEC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2558416C0);
    result = MEMORY[0x22769A794](MEMORY[0x24BDE7120], v1);
    atomic_store(result, (unint64_t *)&qword_25584AEC0);
  }
  return result;
}

BOOL sub_22654FA0C(unsigned __int8 *a1, double a2)
{
  float32x2_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  float32x4_t v25;
  BOOL v26;
  char *v27;
  char v28;
  void (*v29)(char *, uint64_t);
  unsigned __int8 *v30;
  float32x2_t *v31;
  int32x4_t v32;
  float32x4_t v33;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  double v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  double v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  char *v69;
  float32x2_t *v70;
  unsigned __int8 *v71;
  __int128 v72;
  _QWORD v73[3];
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  simd_float4x4 v80;

  *(double *)&v72 = a2;
  v4 = sub_22655C140();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2558432E8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849AC0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v68 - v15;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v68 - v18;
  v20 = type metadata accessor for CapturedRoom.Object(0);
  if (*(__int32 *)((char *)v2->i32 + *(int *)(v20 + 48)) != *(_DWORD *)&a1[*(int *)(v20 + 48)])
    return 0;
  v69 = v7;
  v70 = v2;
  v21 = v20;
  sub_226450C20((uint64_t)v2 + *(int *)(v20 + 44), (uint64_t)v19);
  v68 = v21;
  v22 = *(int *)(v21 + 44);
  v71 = a1;
  sub_226450C20((uint64_t)&a1[v22], (uint64_t)v16);
  v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_226450C20((uint64_t)v19, (uint64_t)v10);
  sub_226450C20((uint64_t)v16, v23);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v24((uint64_t)v10, 1, v4) != 1)
  {
    sub_226450C20((uint64_t)v10, (uint64_t)v13);
    if (v24(v23, 1, v4) != 1)
    {
      v27 = v69;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v69, v23, v4);
      sub_2264B2D74();
      v28 = sub_22655CD04();
      v29 = *(void (**)(char *, uint64_t))(v5 + 8);
      v29(v27, v4);
      sub_22643D7E4((uint64_t)v16, (uint64_t *)&unk_255849AC0);
      sub_22643D7E4((uint64_t)v19, (uint64_t *)&unk_255849AC0);
      v29(v13, v4);
      sub_22643D7E4((uint64_t)v10, (uint64_t *)&unk_255849AC0);
      if ((v28 & 1) == 0)
        return 0;
      goto LABEL_9;
    }
    sub_22643D7E4((uint64_t)v16, (uint64_t *)&unk_255849AC0);
    sub_22643D7E4((uint64_t)v19, (uint64_t *)&unk_255849AC0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
LABEL_7:
    sub_22643D7E4((uint64_t)v10, &qword_2558432E8);
    return 0;
  }
  sub_22643D7E4((uint64_t)v16, (uint64_t *)&unk_255849AC0);
  sub_22643D7E4((uint64_t)v19, (uint64_t *)&unk_255849AC0);
  if (v24(v23, 1, v4) != 1)
    goto LABEL_7;
  sub_22643D7E4((uint64_t)v10, (uint64_t *)&unk_255849AC0);
LABEL_9:
  v31 = v70;
  v30 = v71;
  if (v70->u8[0] != *v71)
    return 0;
  *(float32x2_t *)v25.f32 = vsub_f32(v70[2], *(float32x2_t *)(v71 + 16));
  v25.f32[2] = v70[3].f32[0] - *((float *)v71 + 6);
  v32 = (int32x4_t)vabsq_f32(v25);
  if (vaddq_f32((float32x4_t)vdupq_laneq_s32(v32, 2), vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v32.i8, 1), (float32x4_t)v32)).f32[0] >= *(float *)&v72)return 0;
  v80 = __invert_f4(*(simd_float4x4 *)(v71 + 32));
  v33 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&v72, 0);
  if ((vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vcgeq_f32(v33, vabdq_f32(*(float32x4_t *)(MEMORY[0x24BDAEE00] + 16), vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v80.columns[0], COERCE_FLOAT(*(_OWORD *)v31[6].f32)), (float32x4_t)v80.columns[1], v31[6], 1), (float32x4_t)v80.columns[2], *(float32x4_t *)v31[6].f32, 2), (float32x4_t)v80.columns[3], *(float32x4_t *)v31[6].f32,
                                                    3))),
                                   (int8x16_t)vcgeq_f32(v33, vabdq_f32(*MEMORY[0x24BDAEE00], vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v80.columns[0], COERCE_FLOAT(*(_OWORD *)v31[4].f32)), (float32x4_t)v80.columns[1], v31[4], 1), (float32x4_t)v80.columns[2], *(float32x4_t *)v31[4].f32, 2), (float32x4_t)v80.columns[3], *(float32x4_t *)v31[4].f32, 3)))), vandq_s8(
                                   (int8x16_t)vcgeq_f32(v33, vabdq_f32(*(float32x4_t *)(MEMORY[0x24BDAEE00] + 32), vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v80.columns[0], COERCE_FLOAT(*(_OWORD *)v31[8].f32)), (float32x4_t)v80.columns[1], v31[8], 1), (float32x4_t)v80.columns[2], *(float32x4_t *)v31[8].f32, 2), (float32x4_t)v80.columns[3], *(float32x4_t *)v31[8].f32, 3))), (int8x16_t)vcgeq_f32(
                                                v33,
                                                vabdq_f32(*(float32x4_t *)(MEMORY[0x24BDAEE00] + 48), vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v80.columns[0], COERCE_FLOAT(*(_OWORD *)v31[10].f32)), (float32x4_t)v80.columns[1], v31[10], 1), (float32x4_t)v80.columns[2], *(float32x4_t *)v31[10].f32, 2), (float32x4_t)v80.columns[3], *(float32x4_t *)v31[10].f32, 3)))))) & 0x80000000) == 0)return 0;
  v35 = *(int *)(v68 + 36);
  v36 = *(uint64_t *)((char *)v31 + v35);
  v37 = *(_QWORD *)(v36 + 16);
  v38 = MEMORY[0x24BEE4AF8];
  if (v37)
  {
    v79 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_2264C7B40(0, v37, 0);
    v39 = v36 + 32;
    v38 = v79;
    do
    {
      sub_226438600(v39, (uint64_t)v73);
      v40 = v74;
      v41 = v75;
      v42 = __swift_project_boxed_opaque_existential_1(v73, v74);
      v43 = MEMORY[0x24BDAC7A8](v42);
      v45 = (char *)&v68 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v46 + 16))(v45, v43);
      sub_226484E10((uint64_t)v45, v40, v41, (uint64_t *)&v76);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2264C7B40(0, *(_QWORD *)(v38 + 16) + 1, 1);
        v38 = v79;
      }
      v48 = *(_QWORD *)(v38 + 16);
      v47 = *(_QWORD *)(v38 + 24);
      if (v48 >= v47 >> 1)
      {
        sub_2264C7B40(v47 > 1, v48 + 1, 1);
        v38 = v79;
      }
      *(_QWORD *)(v38 + 16) = v48 + 1;
      v49 = v38 + 40 * v48;
      v50 = v76;
      v51 = v77;
      *(_QWORD *)(v49 + 64) = v78;
      *(_OWORD *)(v49 + 32) = v50;
      *(_OWORD *)(v49 + 48) = v51;
      v39 += 40;
      --v37;
    }
    while (v37);
    swift_bridgeObjectRelease();
    v35 = *(int *)(v68 + 36);
    v30 = v71;
  }
  v52 = *(_QWORD *)&v30[v35];
  v53 = *(_QWORD *)(v52 + 16);
  v54 = MEMORY[0x24BEE4AF8];
  if (v53)
  {
    v79 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_2264C7B40(0, v53, 0);
    v55 = v52 + 32;
    v54 = v79;
    do
    {
      sub_226438600(v55, (uint64_t)v73);
      v56 = v74;
      v57 = v75;
      v58 = __swift_project_boxed_opaque_existential_1(v73, v74);
      v59 = MEMORY[0x24BDAC7A8](v58);
      v61 = (char *)&v68 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v62 + 16))(v61, v59);
      sub_226484E10((uint64_t)v61, v56, v57, (uint64_t *)&v76);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2264C7B40(0, *(_QWORD *)(v54 + 16) + 1, 1);
        v54 = v79;
      }
      v64 = *(_QWORD *)(v54 + 16);
      v63 = *(_QWORD *)(v54 + 24);
      if (v64 >= v63 >> 1)
      {
        sub_2264C7B40(v63 > 1, v64 + 1, 1);
        v54 = v79;
      }
      *(_QWORD *)(v54 + 16) = v64 + 1;
      v65 = v54 + 40 * v64;
      v66 = v76;
      v67 = v77;
      *(_QWORD *)(v65 + 64) = v78;
      *(_OWORD *)(v65 + 32) = v66;
      *(_OWORD *)(v65 + 48) = v67;
      v55 += 40;
      --v53;
    }
    while (v53);
    swift_bridgeObjectRelease();
  }
  v26 = sub_226495614(v38, v54);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_2265500C4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t sub_2265500E8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a5 + 96))(a1, a2, a3 & 1);
}

uint64_t type metadata accessor for DebugFrameEntity()
{
  uint64_t result;

  result = qword_25584AED8;
  if (!qword_25584AED8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_226550130()
{
  return swift_initClassMetadata2();
}

uint64_t sub_226550184()
{
  swift_allocObject();
  return sub_2265501B4();
}

uint64_t sub_2265501B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_BYTE *, _QWORD);
  uint64_t v8;
  uint64_t v9;
  id v10;
  void (*v11)(_BYTE *, _QWORD);
  uint64_t v12;
  uint64_t v13;
  id v14;
  void (*v15)(_BYTE *, _QWORD);
  uint64_t v16;
  _BYTE v18[32];

  *(_QWORD *)(v0 + qword_25584AEC8) = 0;
  *(_DWORD *)(v0 + qword_25584AED0) = 1065353216;
  v1 = sub_22655C1DC();
  sub_22655C398();
  swift_retain();
  MEMORY[0x227698A48](0, 1.0, 0.1, 0.1, 0.05);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255842740);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_22655F8F0;
  v3 = (void *)objc_opt_self();
  swift_retain();
  v4 = objc_msgSend(v3, sel_redColor);
  v5 = sub_22655C3D4();
  v6 = MEMORY[0x24BDE62F8];
  *(_QWORD *)(v2 + 56) = v5;
  *(_QWORD *)(v2 + 64) = v6;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v2 + 32));
  sub_22655C3C8();
  sub_22655C1AC();
  swift_allocObject();
  sub_22655C1A0();
  v7 = (void (*)(_BYTE *, _QWORD))sub_22655C29C();
  *(_OWORD *)(v8 + 32) = xmmword_226569300;
  v7(v18, 0);
  type metadata accessor for DebugFrameEntity();
  sub_22655C230();
  MEMORY[0x227698A48](0, 0.1, 1.0, 0.1, 0.05);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_22655F8F0;
  swift_retain();
  v10 = objc_msgSend(v3, sel_greenColor);
  *(_QWORD *)(v9 + 56) = v5;
  *(_QWORD *)(v9 + 64) = MEMORY[0x24BDE62F8];
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v9 + 32));
  sub_22655C3C8();
  swift_allocObject();
  sub_22655C1A0();
  v11 = (void (*)(_BYTE *, _QWORD))sub_22655C29C();
  *(_OWORD *)(v12 + 32) = xmmword_226569310;
  v11(v18, 0);
  sub_22655C230();
  MEMORY[0x227698A48](0, 0.1, 0.1, 1.0, 0.05);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_22655F8F0;
  swift_retain();
  v14 = objc_msgSend(v3, sel_blueColor);
  *(_QWORD *)(v13 + 56) = v5;
  *(_QWORD *)(v13 + 64) = MEMORY[0x24BDE62F8];
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v13 + 32));
  sub_22655C3C8();
  swift_allocObject();
  sub_22655C1A0();
  v15 = (void (*)(_BYTE *, _QWORD))sub_22655C29C();
  *(_OWORD *)(v16 + 32) = xmmword_226569320;
  v15(v18, 0);
  sub_22655C230();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_2265505D4()
{
  return swift_release();
}

uint64_t sub_2265505E4()
{
  sub_22655C8C0();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_226550620()
{
  return type metadata accessor for DebugFrameEntity();
}

BOOL static PostProcessStage.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PostProcessStage.hash(into:)()
{
  return sub_22655D64C();
}

uint64_t PostProcessStage.hashValue.getter()
{
  sub_22655D640();
  sub_22655D64C();
  return sub_22655D670();
}

RoomPlan::ARKitFramerate_optional __swiftcall ARKitFramerate.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (RoomPlan::ARKitFramerate_optional)rawValue;
}

uint64_t ARKitFramerate.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

_QWORD *sub_2265506CC@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

RoomPlan::ARViewResolution_optional __swiftcall ARViewResolution.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 5;
  if ((unint64_t)rawValue < 5)
    v2 = rawValue;
  *v1 = v2;
  return (RoomPlan::ARViewResolution_optional)rawValue;
}

RoomPlan::ARViewResolution_optional sub_226550700(Swift::Int *a1)
{
  return ARViewResolution.init(rawValue:)(*a1);
}

RoomPlan::ItemColorMode_optional __swiftcall ItemColorMode.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 4;
  if ((unint64_t)rawValue < 4)
    v2 = rawValue;
  *v1 = v2;
  return (RoomPlan::ItemColorMode_optional)rawValue;
}

uint64_t ItemColorMode.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

RoomPlan::ItemColorMode_optional sub_226550724(Swift::Int *a1)
{
  return ItemColorMode.init(rawValue:)(*a1);
}

RoomPlan::DebugIndividualMode_optional __swiftcall DebugIndividualMode.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (RoomPlan::DebugIndividualMode_optional)rawValue;
}

RoomPlan::DebugIndividualMode_optional sub_226550740(Swift::Int *a1)
{
  return DebugIndividualMode.init(rawValue:)(*a1);
}

uint64_t sub_226550748()
{
  void *v0;
  uint64_t result;

  type metadata accessor for SettingsManager();
  v0 = (void *)swift_allocObject();
  result = sub_226555244();
  off_25584AF28 = v0;
  return result;
}

uint64_t static SettingsManager.shared.getter()
{
  if (qword_25583F9D0 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_2265507C0()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_2265507F0(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 32) = a1;
  return result;
}

uint64_t (*sub_22655082C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_226550868()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t sub_226550898(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 33) = a1;
  return result;
}

uint64_t (*sub_2265508D4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_226550910()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 34);
}

uint64_t sub_226550940(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 34) = a1;
  return result;
}

uint64_t (*sub_22655097C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float sub_2265509B8()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 36);
}

uint64_t sub_2265509E8(float a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(float *)(v1 + 36) = a1;
  return result;
}

uint64_t (*sub_226550A24())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_226550A60@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *a1 = *(_BYTE *)(v1 + 40);
  return result;
}

uint64_t sub_226550AA0(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = swift_beginAccess();
  *(_BYTE *)(v1 + 40) = v2;
  return result;
}

uint64_t (*sub_226550ADC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_226550B18()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 41);
}

uint64_t sub_226550B48(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 41) = a1;
  return result;
}

uint64_t (*sub_226550B84())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float sub_226550BC0()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 44);
}

uint64_t sub_226550BF0(float a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(float *)(v1 + 44) = a1;
  return result;
}

uint64_t (*sub_226550C2C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_226550C68()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t sub_226550C98(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 48) = a1;
  return result;
}

uint64_t (*sub_226550CD4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float sub_226550D10()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 52);
}

uint64_t sub_226550D40(float a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(float *)(v1 + 52) = a1;
  return result;
}

uint64_t (*sub_226550D7C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float sub_226550DB8()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 56);
}

uint64_t sub_226550DE8(float a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(float *)(v1 + 56) = a1;
  return result;
}

uint64_t (*sub_226550E24())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float sub_226550E60()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 60);
}

uint64_t sub_226550E90(float a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(float *)(v1 + 60) = a1;
  return result;
}

uint64_t (*sub_226550ECC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float sub_226550F08()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 68);
}

uint64_t sub_226550F38(float a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(float *)(v1 + 68) = a1;
  return result;
}

uint64_t (*sub_226550F74())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float sub_226550FB0()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 72);
}

uint64_t sub_226550FE0(float a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(float *)(v1 + 72) = a1;
  return result;
}

uint64_t (*sub_22655101C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float sub_226551058()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 76);
}

uint64_t sub_226551088(float a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(float *)(v1 + 76) = a1;
  return result;
}

uint64_t (*sub_2265510C4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float sub_226551100()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 80);
}

uint64_t sub_226551130(float a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(float *)(v1 + 80) = a1;
  return result;
}

uint64_t (*sub_22655116C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float sub_2265511A8()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 84);
}

uint64_t sub_2265511D8(float a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(float *)(v1 + 84) = a1;
  return result;
}

uint64_t (*sub_226551214())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float sub_226551250()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 88);
}

uint64_t sub_226551280(float a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(float *)(v1 + 88) = a1;
  return result;
}

uint64_t (*sub_2265512BC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

double sub_2265512F8()
{
  uint64_t v0;

  swift_beginAccess();
  return *(double *)(v0 + 96);
}

uint64_t sub_226551328(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(double *)(v1 + 96) = a1;
  return result;
}

uint64_t (*sub_226551364())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_2265513A0()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 104);
}

uint64_t sub_2265513D0(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 104) = a1;
  return result;
}

uint64_t (*sub_22655140C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float sub_226551448()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 108);
}

uint64_t sub_226551478(float a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(float *)(v1 + 108) = a1;
  return result;
}

uint64_t (*sub_2265514B4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float sub_2265514F0()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 112);
}

uint64_t sub_226551520(float a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(float *)(v1 + 112) = a1;
  return result;
}

uint64_t (*sub_22655155C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float sub_226551598()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 116);
}

uint64_t sub_2265515C8(float a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(float *)(v1 + 116) = a1;
  return result;
}

uint64_t (*sub_226551604())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float sub_226551640()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 120);
}

uint64_t sub_226551670(float a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(float *)(v1 + 120) = a1;
  return result;
}

uint64_t (*sub_2265516AC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float sub_2265516E8()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 124);
}

uint64_t sub_226551718(float a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(float *)(v1 + 124) = a1;
  return result;
}

uint64_t (*sub_226551754())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_226551790()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 128);
}

uint64_t sub_2265517C0(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 128) = a1;
  return result;
}

uint64_t (*sub_2265517FC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float sub_226551838()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 132);
}

uint64_t sub_226551868(float a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(float *)(v1 + 132) = a1;
  return result;
}

uint64_t (*sub_2265518A4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_2265518E0()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 136);
}

uint64_t sub_226551910(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 136) = a1;
  return result;
}

uint64_t (*sub_22655194C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_226551988()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 137);
}

uint64_t sub_2265519B8(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 137) = a1;
  return result;
}

uint64_t (*sub_2265519F4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_226551A30()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 138);
}

uint64_t sub_226551A60(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 138) = a1;
  return result;
}

uint64_t (*sub_226551A9C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

BOOL sub_226551AD8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  char v5;
  _BOOL8 result;

  v1 = *(unsigned __int8 *)(v0 + 139);
  if (v1 != 2)
    return v1 & 1;
  v2 = v0;
  v3 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  if (qword_25583F958 != -1)
    swift_once();
  v4 = *(_QWORD *)algn_255847498;
  swift_bridgeObjectRetain();

  result = 1;
  if (v4)
  {
    sub_226551BE8();
    sub_226551C2C();
    v5 = sub_22655CCEC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      result = 0;
  }
  *(_BYTE *)(v2 + 139) = result;
  return result;
}

unint64_t sub_226551BE8()
{
  unint64_t result;

  result = qword_25584AF30;
  if (!qword_25584AF30)
  {
    result = MEMORY[0x22769A794](MEMORY[0x24BEE0D18], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_25584AF30);
  }
  return result;
}

unint64_t sub_226551C2C()
{
  unint64_t result;

  result = qword_25584AF38;
  if (!qword_25584AF38)
  {
    result = MEMORY[0x22769A794](MEMORY[0x24BEE5E60], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_25584AF38);
  }
  return result;
}

uint64_t sub_226551C70(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 139) = result;
  return result;
}

_BYTE *(*sub_226551C78(uint64_t a1))(_BYTE *result)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = sub_226551AD8();
  return sub_226551CB0;
}

_BYTE *sub_226551CB0(_BYTE *result)
{
  *(_BYTE *)(*(_QWORD *)result + 139) = result[8];
  return result;
}

uint64_t sub_226551CC0()
{
  uint64_t v0;

  swift_beginAccess();
  if ((*(_BYTE *)(v0 + 142) & 1) != 0)
    return 1;
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 33);
}

char *sub_226551D14()
{
  _BYTE *v0;
  char *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v12;
  unint64_t v13;
  char *v14;

  if (sub_226551AD8() && (swift_beginAccess(), v0[34] == 1))
  {
    v1 = sub_226488780(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v2 = *((_QWORD *)v1 + 2);
    v3 = *((_QWORD *)v1 + 3);
    v4 = v2 + 1;
    if (v2 >= v3 >> 1)
    {
      v12 = v1;
      v13 = *((_QWORD *)v1 + 2);
      v14 = sub_226488780((char *)(v3 > 1), v2 + 1, 1, v12);
      v2 = v13;
      v1 = v14;
    }
    *((_QWORD *)v1 + 2) = v4;
    v1[v2 + 32] = 0;
  }
  else
  {
    v1 = (char *)MEMORY[0x24BEE4AF8];
  }
  swift_beginAccess();
  if (v0[128] == 1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v1 = sub_226488780(0, *((_QWORD *)v1 + 2) + 1, 1, v1);
    v6 = *((_QWORD *)v1 + 2);
    v5 = *((_QWORD *)v1 + 3);
    if (v6 >= v5 >> 1)
      v1 = sub_226488780((char *)(v5 > 1), v6 + 1, 1, v1);
    *((_QWORD *)v1 + 2) = v6 + 1;
    v1[v6 + 32] = 1;
  }
  if ((v0[139] & 1) == 0)
  {
    swift_beginAccess();
    if ((v0[142] & 1) != 0 || (swift_beginAccess(), v0[34] == 1))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v1 = sub_226488780(0, *((_QWORD *)v1 + 2) + 1, 1, v1);
      v8 = *((_QWORD *)v1 + 2);
      v7 = *((_QWORD *)v1 + 3);
      if (v8 >= v7 >> 1)
        v1 = sub_226488780((char *)(v7 > 1), v8 + 1, 1, v1);
      *((_QWORD *)v1 + 2) = v8 + 1;
      v1[v8 + 32] = 3;
    }
  }
  if ((v0[139] & 1) != 0)
  {
    swift_beginAccess();
    if (v0[142] == 1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v1 = sub_226488780(0, *((_QWORD *)v1 + 2) + 1, 1, v1);
      v10 = *((_QWORD *)v1 + 2);
      v9 = *((_QWORD *)v1 + 3);
      if (v10 >= v9 >> 1)
        v1 = sub_226488780((char *)(v9 > 1), v10 + 1, 1, v1);
      *((_QWORD *)v1 + 2) = v10 + 1;
      v1[v10 + 32] = 2;
    }
  }
  return v1;
}

void sub_226551FA4(_BYTE *a1@<X8>)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  char v7;

  v3 = *(unsigned __int8 *)(v1 + 140);
  if (v3 == 5)
  {
    v4 = v1;
    v5 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
    if (qword_25583F958 != -1)
      swift_once();
    v6 = *(_QWORD *)algn_255847498;
    swift_bridgeObjectRetain();

    if (v6 && (sub_226551BE8(), sub_226551C2C(), v7 = sub_22655CCEC(), swift_bridgeObjectRelease(), (v7 & 1) != 0))
      LOBYTE(v3) = 3;
    else
      LOBYTE(v3) = 4;
    *(_BYTE *)(v4 + 140) = v3;
  }
  *a1 = v3;
}

void sub_2265520BC(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  *(_BYTE *)(v1 + 140) = *a1;
  v2 = MEMORY[0x22769A944](v1 + 16);
  if (v2)
  {
    v3 = *(void **)(v2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
    if (v3)
    {
      v4 = v3;
      sub_22653E450(v4, v1);
      swift_unknownObjectRelease();

    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

uint64_t (*sub_22655214C(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  sub_226551FA4((_BYTE *)(a1 + 8));
  return sub_226552180;
}

uint64_t sub_226552180(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  void *v3;
  id v4;

  v1 = *(_QWORD *)a1;
  *(_BYTE *)(v1 + 140) = *(_BYTE *)(a1 + 8);
  result = MEMORY[0x22769A944](v1 + 16);
  if (result)
  {
    v3 = *(void **)(result + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
    if (v3)
    {
      v4 = v3;
      sub_22653E450(v4, v1);

    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2265521FC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *a1 = *(_BYTE *)(v1 + 141);
  return result;
}

uint64_t sub_22655223C(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t result;

  v2 = v1;
  v3 = *a1;
  swift_beginAccess();
  *(_BYTE *)(v2 + 141) = v3;
  v4 = MEMORY[0x22769A944](v2 + 16);
  if (v4)
  {
    v5 = *(void **)(v4 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
    if (v5)
    {
      v6 = v5;
      sub_22653E450(v6, v2);
      swift_unknownObjectRelease();

    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  result = MEMORY[0x22769A944](v2 + 16);
  if (result)
  {
    sub_22653E900(v2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2265522F4(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_226552334;
}

uint64_t sub_226552334(uint64_t a1, char a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v5 = *(_QWORD *)(a1 + 24) + 16;
    v6 = MEMORY[0x22769A944](v5);
    if (v6)
    {
      v7 = *(void **)(v6 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
      if (v7)
      {
        v8 = *(_QWORD *)(a1 + 24);
        v9 = v7;
        sub_22653E450(v9, v8);

      }
      swift_unknownObjectRelease();
    }
    result = MEMORY[0x22769A944](v5);
    if (result)
    {
      sub_22653E900(*(_QWORD *)(a1 + 24));
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_2265523E8()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 142);
}

void sub_226552418(char a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;

  swift_beginAccess();
  *(_BYTE *)(v1 + 142) = a1;
  v3 = MEMORY[0x22769A944](v1 + 16);
  if (v3)
  {
    v4 = *(void **)(v3 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
    if (v4)
    {
      v5 = v4;
      sub_22653E450(v5, v1);
      swift_unknownObjectRelease();

    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

uint64_t (*sub_2265524AC(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2265524EC;
}

uint64_t sub_2265524F0()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 143);
}

void sub_226552520(char a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;

  swift_beginAccess();
  *(_BYTE *)(v1 + 143) = a1;
  v3 = MEMORY[0x22769A944](v1 + 16);
  if (v3)
  {
    v4 = *(void **)(v3 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
    if (v4)
    {
      v5 = v4;
      sub_22653E450(v5, v1);
      swift_unknownObjectRelease();

    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

uint64_t (*sub_2265525B4(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2265524EC;
}

uint64_t sub_2265525F4(uint64_t a1, char a2)
{
  uint64_t result;
  void *v5;
  uint64_t v6;
  id v7;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    result = MEMORY[0x22769A944](*(_QWORD *)(a1 + 24) + 16);
    if (result)
    {
      v5 = *(void **)(result + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
      if (v5)
      {
        v6 = *(_QWORD *)(a1 + 24);
        v7 = v5;
        sub_22653E450(v7, v6);

      }
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

float sub_226552678()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 144);
}

uint64_t sub_2265526A8(float a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(float *)(v1 + 144) = a1;
  return result;
}

uint64_t (*sub_2265526E4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

float sub_226552720()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 148);
}

uint64_t sub_226552750(float a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(float *)(v1 + 148) = a1;
  return result;
}

uint64_t (*sub_22655278C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_2265527C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *a1 = *(_BYTE *)(v1 + 152);
  return result;
}

uint64_t sub_226552808(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = swift_beginAccess();
  *(_BYTE *)(v1 + 152) = v2;
  return result;
}

uint64_t (*sub_226552844())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_226552880@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *a1 = *(_BYTE *)(v1 + 153);
  return result;
}

uint64_t sub_2265528C0(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = swift_beginAccess();
  *(_BYTE *)(v1 + 153) = v2;
  return result;
}

uint64_t (*sub_2265528FC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_226552938@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *a1 = *(_BYTE *)(v1 + 154);
  return result;
}

uint64_t sub_226552978(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = swift_beginAccess();
  *(_BYTE *)(v1 + 154) = v2;
  return result;
}

uint64_t (*sub_2265529B4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_2265529F0()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 155);
}

void sub_226552A20(char a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;

  swift_beginAccess();
  *(_BYTE *)(v1 + 155) = a1;
  if ((a1 & 1) == 0)
  {
    v3 = MEMORY[0x22769A944](v1 + 16);
    if (v3)
    {
      v4 = *(void **)(v3 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
      if (v4)
      {
        v5 = v4;
        sub_22653E450(v5, v1);
        swift_unknownObjectRelease();

      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
}

uint64_t (*sub_226552AB8(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_226552AF8;
}

uint64_t sub_226552AF8(uint64_t a1, char a2)
{
  uint64_t result;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v5 = *(_QWORD *)(a1 + 24);
    if ((*(_BYTE *)(v5 + 155) & 1) == 0)
    {
      result = MEMORY[0x22769A944](v5 + 16);
      if (result)
      {
        v6 = *(void **)(result + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
        if (v6)
        {
          v7 = *(_QWORD *)(a1 + 24);
          v8 = v6;
          sub_22653E450(v8, v7);

        }
        return swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

void sub_226552B84(BOOL *a1@<X8>)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  char v7;
  BOOL v8;

  v3 = *(unsigned __int8 *)(v1 + 156);
  if (v3 == 2)
  {
    v4 = v1;
    v5 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
    if (qword_25583F958 != -1)
      swift_once();
    v6 = *(_QWORD *)algn_255847498;
    swift_bridgeObjectRetain();

    v8 = 0;
    if (v6)
    {
      sub_226551BE8();
      sub_226551C2C();
      v7 = sub_22655CCEC();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        v8 = 1;
    }
    *(_BYTE *)(v4 + 156) = v8;
  }
  else
  {
    v8 = v3 & 1;
  }
  *a1 = v8;
}

void sub_226552CA4(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  *(_BYTE *)(v1 + 156) = *a1;
  v2 = MEMORY[0x22769A944](v1 + 16);
  if (v2)
  {
    v3 = *(void **)(v2 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
    if (v3)
    {
      v4 = v3;
      sub_22653E450(v4, v1);
      swift_unknownObjectRelease();

    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

uint64_t (*sub_226552D34(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  sub_226552B84((BOOL *)(a1 + 8));
  return sub_226552D68;
}

uint64_t sub_226552D68(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  void *v3;
  id v4;

  v1 = *(_QWORD *)a1;
  *(_BYTE *)(v1 + 156) = *(_BYTE *)(a1 + 8);
  result = MEMORY[0x22769A944](v1 + 16);
  if (result)
  {
    v3 = *(void **)(result + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView);
    if (v3)
    {
      v4 = v3;
      sub_22653E450(v4, v1);

    }
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_226552DE4(BOOL *a1@<X8>)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  char v7;
  BOOL v8;

  v3 = *(unsigned __int8 *)(v1 + 157);
  if (v3 == 2)
  {
    v4 = v1;
    v5 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
    if (qword_25583F958 != -1)
      swift_once();
    v6 = *(_QWORD *)algn_255847498;
    swift_bridgeObjectRetain();

    v8 = 0;
    if (v6)
    {
      sub_226551BE8();
      sub_226551C2C();
      v7 = sub_22655CCEC();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        v8 = 1;
    }
    *(_BYTE *)(v4 + 157) = v8;
  }
  else
  {
    v8 = v3 & 1;
  }
  *a1 = v8;
}

_BYTE *sub_226552F04(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 157) = *result;
  return result;
}

_BYTE *(*sub_226552F10(uint64_t a1))(_BYTE *result)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  sub_226552DE4((BOOL *)(a1 + 8));
  return sub_226552F44;
}

_BYTE *sub_226552F44(_BYTE *result)
{
  *(_BYTE *)(*(_QWORD *)result + 157) = result[8];
  return result;
}

uint64_t sub_226552F54(char *a1, _BYTE **a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v3[158] = v2;
  result = MEMORY[0x22769A944](v3 + 16);
  if (result)
  {
    sub_22653F380(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_226552FB4()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 158);
}

uint64_t sub_226552FE4(char a1)
{
  _BYTE *v1;
  uint64_t result;

  swift_beginAccess();
  v1[158] = a1;
  result = MEMORY[0x22769A944](v1 + 16);
  if (result)
  {
    sub_22653F380(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_226553044(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_226553084;
}

uint64_t sub_226553084(uint64_t a1, char a2)
{
  return sub_2265550F4(a1, a2, (void (*)(_QWORD))sub_22653F380);
}

uint64_t sub_226553090(char *a1, _BYTE **a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v3[159] = v2;
  result = MEMORY[0x22769A944](v3 + 16);
  if (result)
  {
    sub_22653F380(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2265530F0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *a1 = *(_BYTE *)(v1 + 159);
  return result;
}

uint64_t sub_226553130(char *a1)
{
  _BYTE *v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  swift_beginAccess();
  v1[159] = v2;
  result = MEMORY[0x22769A944](v1 + 16);
  if (result)
  {
    sub_22653F380(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_226553190(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_226553084;
}

uint64_t sub_2265531D0()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 160);
}

uint64_t sub_226553200(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 160) = a1;
  return result;
}

uint64_t (*sub_22655323C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_226553278()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 161);
}

uint64_t sub_2265532A8(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 161) = a1;
  return result;
}

uint64_t (*sub_2265532E4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_226553320(char *a1, _BYTE **a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v3[162] = v2;
  result = MEMORY[0x22769A944](v3 + 16);
  if (result)
  {
    sub_22653F380(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_226553380()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 162);
}

uint64_t sub_2265533B0(char a1)
{
  _BYTE *v1;
  uint64_t result;

  swift_beginAccess();
  v1[162] = a1;
  result = MEMORY[0x22769A944](v1 + 16);
  if (result)
  {
    sub_22653F380(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_226553410(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_226553084;
}

uint64_t sub_226553450(char *a1, _BYTE **a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v3[163] = v2;
  result = MEMORY[0x22769A944](v3 + 16);
  if (result)
  {
    sub_22653F380(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2265534B0()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 163);
}

uint64_t sub_2265534E0(char a1)
{
  _BYTE *v1;
  uint64_t result;

  swift_beginAccess();
  v1[163] = a1;
  result = MEMORY[0x22769A944](v1 + 16);
  if (result)
  {
    sub_22653F380(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_226553540(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_226553084;
}

uint64_t sub_226553580(char *a1, _BYTE **a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v3[164] = v2;
  result = MEMORY[0x22769A944](v3 + 16);
  if (result)
  {
    sub_22653F380(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2265535E0()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 164);
}

uint64_t sub_226553610(char a1)
{
  _BYTE *v1;
  uint64_t result;

  swift_beginAccess();
  v1[164] = a1;
  result = MEMORY[0x22769A944](v1 + 16);
  if (result)
  {
    sub_22653F380(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_226553670(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_226553084;
}

uint64_t sub_2265536B0(char *a1, _BYTE **a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v3[165] = v2;
  result = MEMORY[0x22769A944](v3 + 16);
  if (result)
  {
    sub_22653F380(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_226553710()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 165);
}

uint64_t sub_226553740(char a1)
{
  _BYTE *v1;
  uint64_t result;

  swift_beginAccess();
  v1[165] = a1;
  result = MEMORY[0x22769A944](v1 + 16);
  if (result)
  {
    sub_22653F380(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2265537A0(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_226553084;
}

uint64_t sub_2265537E0(char *a1, _BYTE **a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v3[166] = v2;
  result = MEMORY[0x22769A944](v3 + 16);
  if (result)
  {
    sub_22653F380(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_226553840()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 166);
}

uint64_t sub_226553870(char a1)
{
  _BYTE *v1;
  uint64_t result;

  swift_beginAccess();
  v1[166] = a1;
  result = MEMORY[0x22769A944](v1 + 16);
  if (result)
  {
    sub_22653F380(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2265538D0(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_226553084;
}

uint64_t sub_226553910(char *a1, _BYTE **a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v3[167] = v2;
  result = MEMORY[0x22769A944](v3 + 16);
  if (result)
  {
    sub_22653F380(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_226553970()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 167);
}

uint64_t sub_2265539A0(char a1)
{
  _BYTE *v1;
  uint64_t result;

  swift_beginAccess();
  v1[167] = a1;
  result = MEMORY[0x22769A944](v1 + 16);
  if (result)
  {
    sub_22653F380(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_226553A00(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_226553084;
}

uint64_t sub_226553A40(char *a1, _BYTE **a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v3[168] = v2;
  result = MEMORY[0x22769A944](v3 + 16);
  if (result)
  {
    sub_22653F380(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_226553AA0()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 168);
}

uint64_t sub_226553AD0(char a1)
{
  _BYTE *v1;
  uint64_t result;

  swift_beginAccess();
  v1[168] = a1;
  result = MEMORY[0x22769A944](v1 + 16);
  if (result)
  {
    sub_22653F380(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_226553B30(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_226553084;
}

uint64_t sub_226553B70(char *a1, _BYTE **a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v3[169] = v2;
  result = MEMORY[0x22769A944](v3 + 16);
  if (result)
  {
    sub_22653F380(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_226553BD0()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 169);
}

uint64_t sub_226553C00(char a1)
{
  _BYTE *v1;
  uint64_t result;

  swift_beginAccess();
  v1[169] = a1;
  result = MEMORY[0x22769A944](v1 + 16);
  if (result)
  {
    sub_22653F380(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_226553C60(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_226553084;
}

uint64_t sub_226553CA0(char *a1, _BYTE **a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v3[170] = v2;
  result = MEMORY[0x22769A944](v3 + 16);
  if (result)
  {
    sub_22653F380(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_226553D00()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 170);
}

uint64_t sub_226553D30(char a1)
{
  _BYTE *v1;
  uint64_t result;

  swift_beginAccess();
  v1[170] = a1;
  result = MEMORY[0x22769A944](v1 + 16);
  if (result)
  {
    sub_22653F380(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_226553D90(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_226553084;
}

float sub_226553DD0()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 172);
}

uint64_t sub_226553E00(float a1)
{
  uint64_t v1;
  uint64_t result;

  swift_beginAccess();
  *(float *)(v1 + 172) = a1;
  result = MEMORY[0x22769A944](v1 + 16);
  if (result)
  {
    if (*(_QWORD *)(result + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView))
      sub_22653F264(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_226553E7C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_226553EBC;
}

uint64_t sub_226553EBC(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    result = MEMORY[0x22769A944](*(_QWORD *)(a1 + 24) + 16);
    if (result)
    {
      if (*(_QWORD *)(result + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView))
        sub_22653F264(*(_QWORD *)(a1 + 24));
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_226553F24(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_BYTE *)(v3 + 176) = v2;
  result = MEMORY[0x22769A944](v3 + 16);
  if (result)
  {
    sub_22653E900(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_226553F84()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 176);
}

uint64_t sub_226553FB4(char a1)
{
  uint64_t v1;
  uint64_t result;

  swift_beginAccess();
  *(_BYTE *)(v1 + 176) = a1;
  result = MEMORY[0x22769A944](v1 + 16);
  if (result)
  {
    sub_22653E900(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_226554014(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_226554054;
}

uint64_t sub_226554054(uint64_t a1, char a2)
{
  return sub_2265550F4(a1, a2, (void (*)(_QWORD))sub_22653E900);
}

uint64_t sub_226554060@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *a1 = *(_BYTE *)(v1 + 177);
  return result;
}

uint64_t sub_2265540A0(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t result;

  v2 = v1;
  v3 = *a1;
  swift_beginAccess();
  *(_BYTE *)(v2 + 177) = v3;
  v4 = MEMORY[0x22769A944](v2 + 16);
  if (v4)
  {
    if (*(_QWORD *)(v4 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView))
      sub_22653F264(v2);
    swift_unknownObjectRelease();
  }
  result = MEMORY[0x22769A944](v2 + 16);
  if (result)
  {
    sub_22653E900(v2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_226554140(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_226554180;
}

uint64_t sub_226554180(uint64_t a1, char a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v5 = *(_QWORD *)(a1 + 24) + 16;
    v6 = MEMORY[0x22769A944](v5);
    if (v6)
    {
      if (*(_QWORD *)(v6 + OBJC_IVAR____TtC8RoomPlan15RoomCaptureView_roomCaptureARView))
        sub_22653F264(*(_QWORD *)(a1 + 24));
      swift_unknownObjectRelease();
    }
    result = MEMORY[0x22769A944](v5);
    if (result)
    {
      sub_22653E900(*(_QWORD *)(a1 + 24));
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_226554218(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_BYTE *)(v3 + 178) = v2;
  result = MEMORY[0x22769A944](v3 + 16);
  if (result)
  {
    sub_22653E900(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_226554278()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 178);
}

uint64_t sub_2265542A8(char a1)
{
  uint64_t v1;
  uint64_t result;

  swift_beginAccess();
  *(_BYTE *)(v1 + 178) = a1;
  result = MEMORY[0x22769A944](v1 + 16);
  if (result)
  {
    sub_22653E900(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_226554308(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_226554054;
}

uint64_t sub_226554348(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_BYTE *)(v3 + 179) = v2;
  result = MEMORY[0x22769A944](v3 + 16);
  if (result)
  {
    sub_22653E900(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2265543A8()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 179);
}

uint64_t sub_2265543D8(char a1)
{
  uint64_t v1;
  uint64_t result;

  swift_beginAccess();
  *(_BYTE *)(v1 + 179) = a1;
  result = MEMORY[0x22769A944](v1 + 16);
  if (result)
  {
    sub_22653E900(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_226554438(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_226554054;
}

uint64_t sub_226554478(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_DWORD *)(v3 + 180) = v2;
  result = MEMORY[0x22769A944](v3 + 16);
  if (result)
  {
    sub_22653E900(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

float sub_2265544E0()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 180);
}

uint64_t sub_226554510(float a1)
{
  uint64_t v1;
  uint64_t result;

  swift_beginAccess();
  *(float *)(v1 + 180) = a1;
  result = MEMORY[0x22769A944](v1 + 16);
  if (result)
  {
    sub_22653E900(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_226554578(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_226554054;
}

uint64_t sub_2265545B8(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_DWORD *)(v3 + 184) = v2;
  result = MEMORY[0x22769A944](v3 + 16);
  if (result)
  {
    sub_22653E900(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

float sub_226554620()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 184);
}

uint64_t sub_226554650(float a1)
{
  uint64_t v1;
  uint64_t result;

  swift_beginAccess();
  *(float *)(v1 + 184) = a1;
  result = MEMORY[0x22769A944](v1 + 16);
  if (result)
  {
    sub_22653E900(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2265546B8(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_226554054;
}

uint64_t sub_2265546F8(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_DWORD *)(v3 + 188) = v2;
  result = MEMORY[0x22769A944](v3 + 16);
  if (result)
  {
    sub_22653E900(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

float sub_226554760()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 188);
}

uint64_t sub_226554790(float a1)
{
  uint64_t v1;
  uint64_t result;

  swift_beginAccess();
  *(float *)(v1 + 188) = a1;
  result = MEMORY[0x22769A944](v1 + 16);
  if (result)
  {
    sub_22653E900(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2265547F8(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_226554054;
}

uint64_t sub_226554838(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_DWORD *)(v3 + 192) = v2;
  result = MEMORY[0x22769A944](v3 + 16);
  if (result)
  {
    sub_22653E900(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

float sub_2265548A0()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 192);
}

uint64_t sub_2265548D0(float a1)
{
  uint64_t v1;
  uint64_t result;

  swift_beginAccess();
  *(float *)(v1 + 192) = a1;
  result = MEMORY[0x22769A944](v1 + 16);
  if (result)
  {
    sub_22653E900(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_226554938(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_226554054;
}

uint64_t sub_226554978(__int128 *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t result;
  __int128 v4;

  v4 = *a1;
  v2 = *a2;
  swift_beginAccess();
  *(_OWORD *)(v2 + 208) = v4;
  result = MEMORY[0x22769A944](v2 + 16);
  if (result)
  {
    sub_22653E900(v2);
    return swift_unknownObjectRelease();
  }
  return result;
}

__n128 sub_2265549E0()
{
  __n128 *v0;

  swift_beginAccess();
  return v0[13];
}

uint64_t sub_226554A10(__n128 a1)
{
  __n128 *v1;
  uint64_t result;

  swift_beginAccess();
  v1[13] = a1;
  result = MEMORY[0x22769A944](&v1[1]);
  if (result)
  {
    sub_22653E900((uint64_t)v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_226554A74(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_226554054;
}

uint64_t sub_226554AB4(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_DWORD *)(v3 + 224) = v2;
  result = MEMORY[0x22769A944](v3 + 16);
  if (result)
  {
    sub_22653E900(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

float sub_226554B1C()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 224);
}

uint64_t sub_226554B4C(float a1)
{
  uint64_t v1;
  uint64_t result;

  swift_beginAccess();
  *(float *)(v1 + 224) = a1;
  result = MEMORY[0x22769A944](v1 + 16);
  if (result)
  {
    sub_22653E900(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_226554BB4(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_226554054;
}

uint64_t sub_226554BF4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 232) = v2;
  result = MEMORY[0x22769A944](v3 + 16);
  if (result)
  {
    sub_22653E900(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

double sub_226554C5C()
{
  uint64_t v0;

  swift_beginAccess();
  return *(double *)(v0 + 232);
}

uint64_t sub_226554C8C(double a1)
{
  uint64_t v1;
  uint64_t result;

  swift_beginAccess();
  *(double *)(v1 + 232) = a1;
  result = MEMORY[0x22769A944](v1 + 16);
  if (result)
  {
    sub_22653E900(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_226554CF4(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_226554054;
}

uint64_t sub_226554D34(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 240) = v2;
  result = MEMORY[0x22769A944](v3 + 16);
  if (result)
  {
    sub_22653E900(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

double sub_226554D9C()
{
  uint64_t v0;

  swift_beginAccess();
  return *(double *)(v0 + 240);
}

uint64_t sub_226554DCC(double a1)
{
  uint64_t v1;
  uint64_t result;

  swift_beginAccess();
  *(double *)(v1 + 240) = a1;
  result = MEMORY[0x22769A944](v1 + 16);
  if (result)
  {
    sub_22653E900(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_226554E34(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_226554054;
}

uint64_t sub_226554E74(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_DWORD *)(v3 + 248) = v2;
  result = MEMORY[0x22769A944](v3 + 16);
  if (result)
  {
    sub_22653E900(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

float sub_226554EDC()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 248);
}

uint64_t sub_226554F0C(float a1)
{
  uint64_t v1;
  uint64_t result;

  swift_beginAccess();
  *(float *)(v1 + 248) = a1;
  result = MEMORY[0x22769A944](v1 + 16);
  if (result)
  {
    sub_22653E900(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_226554F74(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_226554054;
}

uint64_t sub_226554FB4(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_DWORD *)(v3 + 252) = v2;
  result = MEMORY[0x22769A944](v3 + 16);
  if (result)
  {
    sub_22653E900(v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

float sub_22655501C()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 252);
}

uint64_t sub_22655504C(float a1)
{
  uint64_t v1;
  uint64_t result;

  swift_beginAccess();
  *(float *)(v1 + 252) = a1;
  result = MEMORY[0x22769A944](v1 + 16);
  if (result)
  {
    sub_22653E900(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*sub_2265550B4(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_226554054;
}

uint64_t sub_2265550F4(uint64_t a1, char a2, void (*a3)(_QWORD))
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    result = MEMORY[0x22769A944](*(_QWORD *)(a1 + 24) + 16);
    if (result)
    {
      a3(*(_QWORD *)(a1 + 24));
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_22655515C()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 256);
}

uint64_t sub_22655518C(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 256) = a1;
  return result;
}

uint64_t (*sub_2265551C8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t SettingsManager.deinit()
{
  uint64_t v0;

  sub_22644F0C0(v0 + 16);
  return v0;
}

uint64_t SettingsManager.__deallocating_deinit()
{
  uint64_t v0;

  sub_22644F0C0(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_226555244()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_WORD *)(v0 + 32) = 0;
  *(_BYTE *)(v0 + 34) = 1;
  *(_DWORD *)(v0 + 36) = 1145569280;
  *(_WORD *)(v0 + 40) = 258;
  *(_DWORD *)(v0 + 44) = 1028443341;
  *(_BYTE *)(v0 + 48) = 1;
  *(_QWORD *)(v0 + 52) = 0x3DCCCCCD3F4CCCCDLL;
  *(_DWORD *)(v0 + 60) = 1028443341;
  *(_BYTE *)(v0 + 64) = 0;
  *(_OWORD *)(v0 + 68) = xmmword_2265693D0;
  __asm { FMOV            V0.2S, #0.75 }
  *(_QWORD *)(v0 + 84) = _D0;
  *(_QWORD *)(v0 + 96) = 0xBFF0000000000000;
  *(_BYTE *)(v0 + 104) = 1;
  *(_OWORD *)(v0 + 108) = xmmword_2265693E0;
  *(_DWORD *)(v0 + 124) = 1057384038;
  *(_BYTE *)(v0 + 128) = 1;
  *(_DWORD *)(v0 + 132) = 1094713344;
  *(_QWORD *)(v0 + 136) = 0x1010502010001;
  *(_QWORD *)(v0 + 144) = 0x3D4CCCCD3FA00000;
  *(_QWORD *)(v0 + 152) = 0x1020200010101;
  *(_DWORD *)(v0 + 160) = 256;
  *(_BYTE *)(v0 + 164) = 0;
  *(_WORD *)(v0 + 169) = 1;
  *(_DWORD *)(v0 + 165) = 16843009;
  *(_DWORD *)(v0 + 172) = 1077936128;
  *(_WORD *)(v0 + 176) = 0;
  *(_BYTE *)(v0 + 178) = 1;
  *(_QWORD *)(v0 + 179) = 0;
  *(_BYTE *)(v0 + 187) = 0;
  *(_QWORD *)(v0 + 188) = 0x438980003F800000;
  *(_OWORD *)(v0 + 208) = xmmword_2265693F0;
  *(_DWORD *)(v0 + 224) = 1153138688;
  *(_QWORD *)(v0 + 232) = 0x3F7333333F400000;
  *(_QWORD *)(v0 + 240) = 0x3F6A3D713F5851ECLL;
  *(_QWORD *)(v0 + 248) = 0x427000003FA00000;
  *(_BYTE *)(v0 + 256) = 0;
  return v0;
}

unint64_t sub_226555388()
{
  unint64_t result;

  result = qword_25584AF40;
  if (!qword_25584AF40)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for PostProcessStage, &type metadata for PostProcessStage);
    atomic_store(result, (unint64_t *)&qword_25584AF40);
  }
  return result;
}

unint64_t sub_2265553D0()
{
  unint64_t result;

  result = qword_25584AF48;
  if (!qword_25584AF48)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for ObjectRenderingMode, &type metadata for ObjectRenderingMode);
    atomic_store(result, (unint64_t *)&qword_25584AF48);
  }
  return result;
}

unint64_t sub_226555418()
{
  unint64_t result;

  result = qword_25584AF50;
  if (!qword_25584AF50)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for ARKitFramerate, &type metadata for ARKitFramerate);
    atomic_store(result, (unint64_t *)&qword_25584AF50);
  }
  return result;
}

unint64_t sub_226555460()
{
  unint64_t result;

  result = qword_25584AF58;
  if (!qword_25584AF58)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for ARViewFramerate, &type metadata for ARViewFramerate);
    atomic_store(result, (unint64_t *)&qword_25584AF58);
  }
  return result;
}

unint64_t sub_2265554A8()
{
  unint64_t result;

  result = qword_25584AF60;
  if (!qword_25584AF60)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for ARViewResolution, &type metadata for ARViewResolution);
    atomic_store(result, (unint64_t *)&qword_25584AF60);
  }
  return result;
}

unint64_t sub_2265554F0()
{
  unint64_t result;

  result = qword_25584AF68;
  if (!qword_25584AF68)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for ARViewPixelFormat, &type metadata for ARViewPixelFormat);
    atomic_store(result, (unint64_t *)&qword_25584AF68);
  }
  return result;
}

unint64_t sub_226555538()
{
  unint64_t result;

  result = qword_25584AF70;
  if (!qword_25584AF70)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for ItemColorMode, &type metadata for ItemColorMode);
    atomic_store(result, (unint64_t *)&qword_25584AF70);
  }
  return result;
}

unint64_t sub_226555580()
{
  unint64_t result;

  result = qword_25584AF78;
  if (!qword_25584AF78)
  {
    result = MEMORY[0x22769A794](&protocol conformance descriptor for DebugIndividualMode, &type metadata for DebugIndividualMode);
    atomic_store(result, (unint64_t *)&qword_25584AF78);
  }
  return result;
}

uint64_t sub_2265555C4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 32);
  return result;
}

uint64_t sub_226555608(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 32) = v2;
  return result;
}

uint64_t sub_226555648@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 33);
  return result;
}

uint64_t sub_22655568C(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 33) = v2;
  return result;
}

uint64_t sub_2265556CC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 34);
  return result;
}

uint64_t sub_226555710(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 34) = v2;
  return result;
}

float sub_226555750@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3;
  float result;

  v3 = *a1;
  swift_beginAccess();
  result = *(float *)(v3 + 36);
  *a2 = result;
  return result;
}

uint64_t sub_226555794(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_DWORD *)(v3 + 36) = v2;
  return result;
}

uint64_t sub_2265557DC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 40);
  return result;
}

uint64_t sub_226555820(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 40) = v2;
  return result;
}

uint64_t sub_226555860@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 41);
  return result;
}

uint64_t sub_2265558A4(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 41) = v2;
  return result;
}

float sub_2265558E4@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3;
  float result;

  v3 = *a1;
  swift_beginAccess();
  result = *(float *)(v3 + 44);
  *a2 = result;
  return result;
}

uint64_t sub_226555928(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_DWORD *)(v3 + 44) = v2;
  return result;
}

uint64_t sub_226555970@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 48);
  return result;
}

uint64_t sub_2265559B4(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 48) = v2;
  return result;
}

float sub_2265559F4@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3;
  float result;

  v3 = *a1;
  swift_beginAccess();
  result = *(float *)(v3 + 52);
  *a2 = result;
  return result;
}

uint64_t sub_226555A38(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_DWORD *)(v3 + 52) = v2;
  return result;
}

float sub_226555A80@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3;
  float result;

  v3 = *a1;
  swift_beginAccess();
  result = *(float *)(v3 + 56);
  *a2 = result;
  return result;
}

uint64_t sub_226555AC4(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_DWORD *)(v3 + 56) = v2;
  return result;
}

float sub_226555B0C@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3;
  float result;

  v3 = *a1;
  swift_beginAccess();
  result = *(float *)(v3 + 60);
  *a2 = result;
  return result;
}

uint64_t sub_226555B50(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_DWORD *)(v3 + 60) = v2;
  return result;
}

uint64_t sub_226555B98@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 64);
  return result;
}

uint64_t sub_226555BDC(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 64) = v2;
  return result;
}

float sub_226555C1C@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3;
  float result;

  v3 = *a1;
  swift_beginAccess();
  result = *(float *)(v3 + 68);
  *a2 = result;
  return result;
}

uint64_t sub_226555C60(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_DWORD *)(v3 + 68) = v2;
  return result;
}

float sub_226555CA8@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3;
  float result;

  v3 = *a1;
  swift_beginAccess();
  result = *(float *)(v3 + 72);
  *a2 = result;
  return result;
}

uint64_t sub_226555CEC(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_DWORD *)(v3 + 72) = v2;
  return result;
}

float sub_226555D34@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3;
  float result;

  v3 = *a1;
  swift_beginAccess();
  result = *(float *)(v3 + 76);
  *a2 = result;
  return result;
}

uint64_t sub_226555D78(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_DWORD *)(v3 + 76) = v2;
  return result;
}

float sub_226555DC0@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3;
  float result;

  v3 = *a1;
  swift_beginAccess();
  result = *(float *)(v3 + 80);
  *a2 = result;
  return result;
}

uint64_t sub_226555E04(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_DWORD *)(v3 + 80) = v2;
  return result;
}

float sub_226555E4C@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3;
  float result;

  v3 = *a1;
  swift_beginAccess();
  result = *(float *)(v3 + 84);
  *a2 = result;
  return result;
}

uint64_t sub_226555E90(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_DWORD *)(v3 + 84) = v2;
  return result;
}

float sub_226555ED8@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3;
  float result;

  v3 = *a1;
  swift_beginAccess();
  result = *(float *)(v3 + 88);
  *a2 = result;
  return result;
}

uint64_t sub_226555F1C(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_DWORD *)(v3 + 88) = v2;
  return result;
}

double sub_226555F64@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  double result;

  v3 = *a1;
  swift_beginAccess();
  result = *(double *)(v3 + 96);
  *a2 = result;
  return result;
}

uint64_t sub_226555FA8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 96) = v2;
  return result;
}

uint64_t sub_226555FF0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 104);
  return result;
}

uint64_t sub_226556034(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 104) = v2;
  return result;
}

float sub_226556074@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3;
  float result;

  v3 = *a1;
  swift_beginAccess();
  result = *(float *)(v3 + 108);
  *a2 = result;
  return result;
}

uint64_t sub_2265560B8(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_DWORD *)(v3 + 108) = v2;
  return result;
}

float sub_226556100@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3;
  float result;

  v3 = *a1;
  swift_beginAccess();
  result = *(float *)(v3 + 112);
  *a2 = result;
  return result;
}

uint64_t sub_226556144(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_DWORD *)(v3 + 112) = v2;
  return result;
}

float sub_22655618C@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3;
  float result;

  v3 = *a1;
  swift_beginAccess();
  result = *(float *)(v3 + 116);
  *a2 = result;
  return result;
}

uint64_t sub_2265561D0(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_DWORD *)(v3 + 116) = v2;
  return result;
}

float sub_226556218@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3;
  float result;

  v3 = *a1;
  swift_beginAccess();
  result = *(float *)(v3 + 120);
  *a2 = result;
  return result;
}

uint64_t sub_22655625C(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_DWORD *)(v3 + 120) = v2;
  return result;
}

float sub_2265562A4@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3;
  float result;

  v3 = *a1;
  swift_beginAccess();
  result = *(float *)(v3 + 124);
  *a2 = result;
  return result;
}

uint64_t sub_2265562E8(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_DWORD *)(v3 + 124) = v2;
  return result;
}

uint64_t sub_226556330@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 128);
  return result;
}

uint64_t sub_226556374(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 128) = v2;
  return result;
}

float sub_2265563B4@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3;
  float result;

  v3 = *a1;
  swift_beginAccess();
  result = *(float *)(v3 + 132);
  *a2 = result;
  return result;
}

uint64_t sub_2265563F8(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_DWORD *)(v3 + 132) = v2;
  return result;
}

uint64_t sub_226556440@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 136);
  return result;
}

uint64_t sub_226556484(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 136) = v2;
  return result;
}

uint64_t sub_2265564C4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 137);
  return result;
}

uint64_t sub_226556508(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 137) = v2;
  return result;
}

uint64_t sub_226556548@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 138);
  return result;
}

uint64_t sub_22655658C(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 138) = v2;
  return result;
}

BOOL sub_2265565CC@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_226551AD8();
  *a1 = result;
  return result;
}

_BYTE *sub_2265565F8(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(*(_QWORD *)a2 + 139) = *result;
  return result;
}

void sub_226556608(_BYTE *a1@<X8>)
{
  char v2;

  sub_226551FA4(&v2);
  *a1 = v2;
}

void sub_226556640(char *a1)
{
  char v1;

  v1 = *a1;
  sub_2265520BC(&v1);
}

uint64_t sub_226556674@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 141);
  return result;
}

uint64_t sub_2265566B8(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_64Tm(a1, a2, a3, a4, sub_22655223C);
}

uint64_t sub_2265566C4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 142);
  return result;
}

void sub_226556708(char *a1)
{
  sub_226552418(*a1);
}

uint64_t sub_22655672C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 143);
  return result;
}

void sub_226556770(char *a1)
{
  sub_226552520(*a1);
}

float sub_226556794@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3;
  float result;

  v3 = *a1;
  swift_beginAccess();
  result = *(float *)(v3 + 144);
  *a2 = result;
  return result;
}

uint64_t sub_2265567D8(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_DWORD *)(v3 + 144) = v2;
  return result;
}

float sub_226556820@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3;
  float result;

  v3 = *a1;
  swift_beginAccess();
  result = *(float *)(v3 + 148);
  *a2 = result;
  return result;
}

uint64_t sub_226556864(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_DWORD *)(v3 + 148) = v2;
  return result;
}

uint64_t sub_2265568AC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 152);
  return result;
}

uint64_t sub_2265568F0(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 152) = v2;
  return result;
}

uint64_t sub_226556930@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 153);
  return result;
}

uint64_t sub_226556974(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 153) = v2;
  return result;
}

uint64_t sub_2265569B4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 154);
  return result;
}

uint64_t sub_2265569F8(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 154) = v2;
  return result;
}

uint64_t sub_226556A38@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 155);
  return result;
}

void sub_226556A7C(char *a1)
{
  sub_226552A20(*a1);
}

_QWORD *sub_226556AA0@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_81Tm((_QWORD *(*)(uint64_t *__return_ptr))sub_226552B84, a1);
}

uint64_t sub_226556AAC(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_64Tm(a1, a2, a3, a4, (uint64_t (*)(char *))sub_226552CA4);
}

uint64_t keypath_set_64Tm(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *))
{
  char v6;

  v6 = *a1;
  return a5(&v6);
}

_QWORD *sub_226556AEC@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_81Tm((_QWORD *(*)(uint64_t *__return_ptr))sub_226552DE4, a1);
}

_QWORD *keypath_get_81Tm@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X3>, _BYTE *a2@<X8>)
{
  _QWORD *result;
  uint64_t v4;

  result = a1(&v4);
  *a2 = v4;
  return result;
}

_BYTE *sub_226556B30(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(*(_QWORD *)a2 + 157) = *result;
  return result;
}

uint64_t sub_226556B40@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 158);
  return result;
}

uint64_t sub_226556B88@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 159);
  return result;
}

uint64_t sub_226556BD0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 160);
  return result;
}

uint64_t sub_226556C14(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 160) = v2;
  return result;
}

uint64_t sub_226556C54@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 161);
  return result;
}

uint64_t sub_226556C98(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 161) = v2;
  return result;
}

uint64_t sub_226556CD8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 162);
  return result;
}

uint64_t sub_226556D20@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 163);
  return result;
}

uint64_t sub_226556D68@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 164);
  return result;
}

uint64_t sub_226556DB0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 165);
  return result;
}

uint64_t sub_226556DF8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 166);
  return result;
}

uint64_t sub_226556E40@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 167);
  return result;
}

uint64_t sub_226556E88@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 168);
  return result;
}

uint64_t sub_226556ED0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 169);
  return result;
}

uint64_t sub_226556F18@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 170);
  return result;
}

float sub_226556F60@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3;
  float result;

  v3 = *a1;
  swift_beginAccess();
  result = *(float *)(v3 + 172);
  *a2 = result;
  return result;
}

uint64_t sub_226556FA4(float *a1)
{
  return sub_226553E00(*a1);
}

uint64_t sub_226556FC8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 176);
  return result;
}

uint64_t sub_226557010@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 177);
  return result;
}

uint64_t sub_226557054(char *a1)
{
  char v2;

  v2 = *a1;
  return sub_2265540A0(&v2);
}

uint64_t sub_226557088@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 178);
  return result;
}

uint64_t sub_2265570D0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 179);
  return result;
}

float sub_226557118@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3;
  float result;

  v3 = *a1;
  swift_beginAccess();
  result = *(float *)(v3 + 180);
  *a2 = result;
  return result;
}

float sub_226557160@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3;
  float result;

  v3 = *a1;
  swift_beginAccess();
  result = *(float *)(v3 + 184);
  *a2 = result;
  return result;
}

float sub_2265571A8@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3;
  float result;

  v3 = *a1;
  swift_beginAccess();
  result = *(float *)(v3 + 188);
  *a2 = result;
  return result;
}

float sub_2265571F0@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3;
  float result;

  v3 = *a1;
  swift_beginAccess();
  result = *(float *)(v3 + 192);
  *a2 = result;
  return result;
}

__n128 sub_226557238@<Q0>(__n128 **a1@<X0>, __n128 *a2@<X8>)
{
  __n128 *v3;
  __n128 result;

  v3 = *a1;
  swift_beginAccess();
  result = v3[13];
  *a2 = result;
  return result;
}

float sub_226557280@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3;
  float result;

  v3 = *a1;
  swift_beginAccess();
  result = *(float *)(v3 + 224);
  *a2 = result;
  return result;
}

double sub_2265572C8@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  double result;

  v3 = *a1;
  swift_beginAccess();
  result = *(double *)(v3 + 232);
  *a2 = result;
  return result;
}

double sub_226557310@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  double result;

  v3 = *a1;
  swift_beginAccess();
  result = *(double *)(v3 + 240);
  *a2 = result;
  return result;
}

float sub_226557358@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3;
  float result;

  v3 = *a1;
  swift_beginAccess();
  result = *(float *)(v3 + 248);
  *a2 = result;
  return result;
}

float sub_2265573A0@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3;
  float result;

  v3 = *a1;
  swift_beginAccess();
  result = *(float *)(v3 + 252);
  *a2 = result;
  return result;
}

uint64_t sub_2265573E8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 256);
  return result;
}

uint64_t sub_22655742C(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 256) = v2;
  return result;
}

ValueMetadata *type metadata accessor for PostProcessStage()
{
  return &type metadata for PostProcessStage;
}

ValueMetadata *type metadata accessor for ObjectRenderingMode()
{
  return &type metadata for ObjectRenderingMode;
}

ValueMetadata *type metadata accessor for ARKitFramerate()
{
  return &type metadata for ARKitFramerate;
}

ValueMetadata *type metadata accessor for ARViewFramerate()
{
  return &type metadata for ARViewFramerate;
}

uint64_t storeEnumTagSinglePayload for ARViewResolution(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_226557504 + 4 * byte_226569405[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_226557538 + 4 * byte_226569400[v4]))();
}

uint64_t sub_226557538(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_226557540(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x226557548);
  return result;
}

uint64_t sub_226557554(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22655755CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_226557560(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_226557568(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ARViewResolution()
{
  return &type metadata for ARViewResolution;
}

uint64_t _s8RoomPlan17ARViewPixelFormatOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2265575D0 + 4 * byte_22656940F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_226557604 + 4 * byte_22656940A[v4]))();
}

uint64_t sub_226557604(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22655760C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x226557614);
  return result;
}

uint64_t sub_226557620(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x226557628);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22655762C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_226557634(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ARViewPixelFormat()
{
  return &type metadata for ARViewPixelFormat;
}

uint64_t _s8RoomPlan13ItemColorModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_22655769C + 4 * byte_226569419[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2265576D0 + 4 * byte_226569414[v4]))();
}

uint64_t sub_2265576D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2265576D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2265576E0);
  return result;
}

uint64_t sub_2265576EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2265576F4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2265576F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_226557700(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ItemColorMode()
{
  return &type metadata for ItemColorMode;
}

uint64_t _s8RoomPlan19ObjectRenderingModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_226557768 + 4 * byte_226569423[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22655779C + 4 * byte_22656941E[v4]))();
}

uint64_t sub_22655779C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2265577A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2265577ACLL);
  return result;
}

uint64_t sub_2265577B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2265577C0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2265577C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2265577CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugIndividualMode()
{
  return &type metadata for DebugIndividualMode;
}

uint64_t type metadata accessor for SettingsManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for SettingsManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SettingsManager.useDeterministicFPSMode.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 688))();
}

uint64_t dispatch thunk of SettingsManager.useDeterministicFPSMode.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 696))();
}

uint64_t dispatch thunk of SettingsManager.useDeterministicFPSMode.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 704))();
}

uint64_t dispatch thunk of SettingsManager.upscaleDepth.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 712))();
}

uint64_t dispatch thunk of SettingsManager.upscaleDepth.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 720))();
}

uint64_t dispatch thunk of SettingsManager.upscaleDepth.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 728))();
}

uint64_t dispatch thunk of SettingsManager.isOcclusionEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 736))();
}

uint64_t dispatch thunk of SettingsManager.isOcclusionEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 744))();
}

uint64_t dispatch thunk of SettingsManager.isOcclusionEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 752))();
}

uint64_t dispatch thunk of SettingsManager.lineFeatheringMaxDistance.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 760))();
}

uint64_t dispatch thunk of SettingsManager.lineFeatheringMaxDistance.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 768))();
}

uint64_t dispatch thunk of SettingsManager.lineFeatheringMaxDistance.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 776))();
}

uint64_t dispatch thunk of SettingsManager.objectRenderingMode.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 784))();
}

uint64_t dispatch thunk of SettingsManager.objectRenderingMode.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 792))();
}

uint64_t dispatch thunk of SettingsManager.objectRenderingMode.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 800))();
}

uint64_t dispatch thunk of SettingsManager.hideSelectiveObjects.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 808))();
}

uint64_t dispatch thunk of SettingsManager.hideSelectiveObjects.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 816))();
}

uint64_t dispatch thunk of SettingsManager.hideSelectiveObjects.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 824))();
}

uint64_t dispatch thunk of SettingsManager.sinkOverlapPercentage.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 832))();
}

uint64_t dispatch thunk of SettingsManager.sinkOverlapPercentage.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 840))();
}

uint64_t dispatch thunk of SettingsManager.sinkOverlapPercentage.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 848))();
}

uint64_t dispatch thunk of SettingsManager.wallAlignInWorld.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 856))();
}

uint64_t dispatch thunk of SettingsManager.wallAlignInWorld.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 864))();
}

uint64_t dispatch thunk of SettingsManager.wallAlignInWorld.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 872))();
}

uint64_t dispatch thunk of SettingsManager.chairSizeLimitationPercentage.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 880))();
}

uint64_t dispatch thunk of SettingsManager.chairSizeLimitationPercentage.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 888))();
}

uint64_t dispatch thunk of SettingsManager.chairSizeLimitationPercentage.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 896))();
}

uint64_t dispatch thunk of SettingsManager.worldSpaceTableThickness.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 904))();
}

uint64_t dispatch thunk of SettingsManager.worldSpaceTableThickness.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 912))();
}

uint64_t dispatch thunk of SettingsManager.worldSpaceTableThickness.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 920))();
}

uint64_t dispatch thunk of SettingsManager.worldSpaceChairThickness.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 928))();
}

uint64_t dispatch thunk of SettingsManager.worldSpaceChairThickness.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 936))();
}

uint64_t dispatch thunk of SettingsManager.worldSpaceChairThickness.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 944))();
}

uint64_t dispatch thunk of SettingsManager.animateIncompleteState.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 952))();
}

uint64_t dispatch thunk of SettingsManager.animateIncompleteState.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 960))();
}

uint64_t dispatch thunk of SettingsManager.animateIncompleteState.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 968))();
}

uint64_t dispatch thunk of SettingsManager.lineFadeInDuration.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 976))();
}

uint64_t dispatch thunk of SettingsManager.lineFadeInDuration.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 984))();
}

uint64_t dispatch thunk of SettingsManager.lineFadeInDuration.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 992))();
}

uint64_t dispatch thunk of SettingsManager.lineFadeOutDuration.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1000))();
}

uint64_t dispatch thunk of SettingsManager.lineFadeOutDuration.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1008))();
}

uint64_t dispatch thunk of SettingsManager.lineFadeOutDuration.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1016))();
}

uint64_t dispatch thunk of SettingsManager.wallAnimationDuration.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1024))();
}

uint64_t dispatch thunk of SettingsManager.wallAnimationDuration.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1032))();
}

uint64_t dispatch thunk of SettingsManager.wallAnimationDuration.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1040))();
}

uint64_t dispatch thunk of SettingsManager.floorAnimationDuration.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1048))();
}

uint64_t dispatch thunk of SettingsManager.floorAnimationDuration.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1056))();
}

uint64_t dispatch thunk of SettingsManager.floorAnimationDuration.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1064))();
}

uint64_t dispatch thunk of SettingsManager.objectAnimationDuration.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1072))();
}

uint64_t dispatch thunk of SettingsManager.objectAnimationDuration.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1080))();
}

uint64_t dispatch thunk of SettingsManager.objectAnimationDuration.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1088))();
}

uint64_t dispatch thunk of SettingsManager.openingAnimationDuration.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1096))();
}

uint64_t dispatch thunk of SettingsManager.openingAnimationDuration.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1104))();
}

uint64_t dispatch thunk of SettingsManager.openingAnimationDuration.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1112))();
}

uint64_t dispatch thunk of SettingsManager.cornerCompletionTimeout.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1120))();
}

uint64_t dispatch thunk of SettingsManager.cornerCompletionTimeout.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1128))();
}

uint64_t dispatch thunk of SettingsManager.cornerCompletionTimeout.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1136))();
}

uint64_t dispatch thunk of SettingsManager.useAlphaOcclusion.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1144))();
}

uint64_t dispatch thunk of SettingsManager.useAlphaOcclusion.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1152))();
}

uint64_t dispatch thunk of SettingsManager.useAlphaOcclusion.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1160))();
}

uint64_t dispatch thunk of SettingsManager.mediumConfidenceOcclusionFactor.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1168))();
}

uint64_t dispatch thunk of SettingsManager.mediumConfidenceOcclusionFactor.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1176))();
}

uint64_t dispatch thunk of SettingsManager.mediumConfidenceOcclusionFactor.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1184))();
}

uint64_t dispatch thunk of SettingsManager.lowConfidenceOcclusionFactor.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1192))();
}

uint64_t dispatch thunk of SettingsManager.lowConfidenceOcclusionFactor.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1200))();
}

uint64_t dispatch thunk of SettingsManager.lowConfidenceOcclusionFactor.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1208))();
}

uint64_t dispatch thunk of SettingsManager.occlusionTolerance.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1216))();
}

uint64_t dispatch thunk of SettingsManager.occlusionTolerance.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1224))();
}

uint64_t dispatch thunk of SettingsManager.occlusionTolerance.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1232))();
}

uint64_t dispatch thunk of SettingsManager.occlusionAlphaMinValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1240))();
}

uint64_t dispatch thunk of SettingsManager.occlusionAlphaMinValue.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1248))();
}

uint64_t dispatch thunk of SettingsManager.occlusionAlphaMinValue.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1256))();
}

uint64_t dispatch thunk of SettingsManager.cameraDimmingFactor.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1264))();
}

uint64_t dispatch thunk of SettingsManager.cameraDimmingFactor.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1272))();
}

uint64_t dispatch thunk of SettingsManager.cameraDimmingFactor.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1280))();
}

uint64_t dispatch thunk of SettingsManager.renderBloom.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1288))();
}

uint64_t dispatch thunk of SettingsManager.renderBloom.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1296))();
}

uint64_t dispatch thunk of SettingsManager.renderBloom.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1304))();
}

uint64_t dispatch thunk of SettingsManager.bloomSigma.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1312))();
}

uint64_t dispatch thunk of SettingsManager.bloomSigma.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1320))();
}

uint64_t dispatch thunk of SettingsManager.bloomSigma.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1328))();
}

uint64_t dispatch thunk of SettingsManager.exportDoorsWindows.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1336))();
}

uint64_t dispatch thunk of SettingsManager.exportDoorsWindows.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1344))();
}

uint64_t dispatch thunk of SettingsManager.exportDoorsWindows.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1352))();
}

uint64_t dispatch thunk of SettingsManager.exportOpenings.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1360))();
}

uint64_t dispatch thunk of SettingsManager.exportOpenings.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1368))();
}

uint64_t dispatch thunk of SettingsManager.exportOpenings.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1376))();
}

uint64_t dispatch thunk of SettingsManager.enableNonUniformWallHeight.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1384))();
}

uint64_t dispatch thunk of SettingsManager.enableNonUniformWallHeight.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1392))();
}

uint64_t dispatch thunk of SettingsManager.enableNonUniformWallHeight.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1400))();
}

uint64_t dispatch thunk of SettingsManager.isBloomRenderedIn2Passes.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1408))();
}

uint64_t dispatch thunk of SettingsManager.isBloomRenderedIn2Passes.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1416))();
}

uint64_t dispatch thunk of SettingsManager.isBloomRenderedIn2Passes.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1424))();
}

uint64_t dispatch thunk of SettingsManager.postProcessNeedsColor.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1432))();
}

uint64_t dispatch thunk of SettingsManager.postProcessStages.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1440))();
}

uint64_t dispatch thunk of SettingsManager.arViewResolution.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1448))();
}

uint64_t dispatch thunk of SettingsManager.arViewResolution.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1456))();
}

uint64_t dispatch thunk of SettingsManager.arViewResolution.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1464))();
}

uint64_t dispatch thunk of SettingsManager.arViewPixelFormat.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1472))();
}

uint64_t dispatch thunk of SettingsManager.arViewPixelFormat.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1480))();
}

uint64_t dispatch thunk of SettingsManager.arViewPixelFormat.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1488))();
}

uint64_t dispatch thunk of SettingsManager.isVideoCompositingEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1504))();
}

uint64_t dispatch thunk of SettingsManager.isVideoCompositingEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1512))();
}

uint64_t dispatch thunk of SettingsManager.isVideoCompositingEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1520))();
}

uint64_t dispatch thunk of SettingsManager.showStatistics.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1528))();
}

uint64_t dispatch thunk of SettingsManager.showStatistics.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1536))();
}

uint64_t dispatch thunk of SettingsManager.showStatistics.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1544))();
}

uint64_t dispatch thunk of SettingsManager.resolutionVelocityThreshold.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1552))();
}

uint64_t dispatch thunk of SettingsManager.resolutionVelocityThreshold.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1560))();
}

uint64_t dispatch thunk of SettingsManager.resolutionVelocityThreshold.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1568))();
}

uint64_t dispatch thunk of SettingsManager.framerateVelocityThreshold.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1576))();
}

uint64_t dispatch thunk of SettingsManager.framerateVelocityThreshold.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1584))();
}

uint64_t dispatch thunk of SettingsManager.framerateVelocityThreshold.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1592))();
}

uint64_t dispatch thunk of SettingsManager.arViewFramerateLowerBound.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1600))();
}

uint64_t dispatch thunk of SettingsManager.arViewFramerateLowerBound.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1608))();
}

uint64_t dispatch thunk of SettingsManager.arViewFramerateLowerBound.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1616))();
}

uint64_t dispatch thunk of SettingsManager.arKitFramerateLowerBound.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1624))();
}

uint64_t dispatch thunk of SettingsManager.arKitFramerateLowerBound.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1632))();
}

uint64_t dispatch thunk of SettingsManager.arKitFramerateLowerBound.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1640))();
}

uint64_t dispatch thunk of SettingsManager.arViewResolutionLowerBound.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1648))();
}

uint64_t dispatch thunk of SettingsManager.arViewResolutionLowerBound.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1656))();
}

uint64_t dispatch thunk of SettingsManager.arViewResolutionLowerBound.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1664))();
}

uint64_t dispatch thunk of SettingsManager.useDynamicArViewFormat.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1672))();
}

uint64_t dispatch thunk of SettingsManager.useDynamicArViewFormat.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1680))();
}

uint64_t dispatch thunk of SettingsManager.useDynamicArViewFormat.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1688))();
}

uint64_t dispatch thunk of SettingsManager.arViewFramerate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1696))();
}

uint64_t dispatch thunk of SettingsManager.arViewFramerate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1704))();
}

uint64_t dispatch thunk of SettingsManager.arViewFramerate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1712))();
}

uint64_t dispatch thunk of SettingsManager.arKitFramerate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1720))();
}

uint64_t dispatch thunk of SettingsManager.arKitFramerate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1728))();
}

uint64_t dispatch thunk of SettingsManager.arKitFramerate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1736))();
}

uint64_t dispatch thunk of SettingsManager.isSmoothedSceneDepthEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1744))();
}

uint64_t dispatch thunk of SettingsManager.isSmoothedSceneDepthEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1752))();
}

uint64_t dispatch thunk of SettingsManager.isSmoothedSceneDepthEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1760))();
}

uint64_t dispatch thunk of SettingsManager.debugIndividualMode.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1768))();
}

uint64_t dispatch thunk of SettingsManager.debugIndividualMode.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1776))();
}

uint64_t dispatch thunk of SettingsManager.debugIndividualMode.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1784))();
}

uint64_t dispatch thunk of SettingsManager.isARQATracingEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1792))();
}

uint64_t dispatch thunk of SettingsManager.isARQATracingEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1800))();
}

uint64_t dispatch thunk of SettingsManager.isARQATracingEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1808))();
}

uint64_t dispatch thunk of SettingsManager.areCurvedWallsEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1816))();
}

uint64_t dispatch thunk of SettingsManager.areCurvedWallsEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1824))();
}

uint64_t dispatch thunk of SettingsManager.areCurvedWallsEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1832))();
}

uint64_t dispatch thunk of SettingsManager.isARFrameLogEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1840))();
}

uint64_t dispatch thunk of SettingsManager.isARFrameLogEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1848))();
}

uint64_t dispatch thunk of SettingsManager.isARFrameLogEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1856))();
}

uint64_t dispatch thunk of SettingsManager.isFramerateLogEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1864))();
}

uint64_t dispatch thunk of SettingsManager.isFramerateLogEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1872))();
}

uint64_t dispatch thunk of SettingsManager.isFramerateLogEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1880))();
}

uint64_t dispatch thunk of SettingsManager.isLiveDumpEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1888))();
}

uint64_t dispatch thunk of SettingsManager.isLiveDumpEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1896))();
}

uint64_t dispatch thunk of SettingsManager.isLiveDumpEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1904))();
}

uint64_t dispatch thunk of SettingsManager.isOURGBRefinementEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1912))();
}

uint64_t dispatch thunk of SettingsManager.isOURGBRefinementEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1920))();
}

uint64_t dispatch thunk of SettingsManager.isOURGBRefinementEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1928))();
}

uint64_t dispatch thunk of SettingsManager.renderWalls.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1936))();
}

uint64_t dispatch thunk of SettingsManager.renderWalls.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1944))();
}

uint64_t dispatch thunk of SettingsManager.renderWalls.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1952))();
}

uint64_t dispatch thunk of SettingsManager.renderObjects.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1960))();
}

uint64_t dispatch thunk of SettingsManager.renderObjects.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1968))();
}

uint64_t dispatch thunk of SettingsManager.renderObjects.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1976))();
}

uint64_t dispatch thunk of SettingsManager.renderOpenings.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1984))();
}

uint64_t dispatch thunk of SettingsManager.renderOpenings.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1992))();
}

uint64_t dispatch thunk of SettingsManager.renderOpenings.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2000))();
}

uint64_t dispatch thunk of SettingsManager.renderFloors.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2008))();
}

uint64_t dispatch thunk of SettingsManager.renderFloors.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2016))();
}

uint64_t dispatch thunk of SettingsManager.renderFloors.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2024))();
}

uint64_t dispatch thunk of SettingsManager.renderARMarkers.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2032))();
}

uint64_t dispatch thunk of SettingsManager.renderARMarkers.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2040))();
}

uint64_t dispatch thunk of SettingsManager.renderARMarkers.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2048))();
}

uint64_t dispatch thunk of SettingsManager.lineWidth.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2064))();
}

uint64_t dispatch thunk of SettingsManager.lineWidth.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2072))();
}

uint64_t dispatch thunk of SettingsManager.lineWidth.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2080))();
}

uint64_t dispatch thunk of SettingsManager.isPerimeterDebugVisualizationEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2088))();
}

uint64_t dispatch thunk of SettingsManager.isPerimeterDebugVisualizationEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2096))();
}

uint64_t dispatch thunk of SettingsManager.isPerimeterDebugVisualizationEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2104))();
}

uint64_t dispatch thunk of SettingsManager.itemColorMode.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2112))();
}

uint64_t dispatch thunk of SettingsManager.itemColorMode.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2120))();
}

uint64_t dispatch thunk of SettingsManager.itemColorMode.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2128))();
}

uint64_t dispatch thunk of SettingsManager.isModelEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2136))();
}

uint64_t dispatch thunk of SettingsManager.isModelEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2144))();
}

uint64_t dispatch thunk of SettingsManager.isModelEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2152))();
}

uint64_t dispatch thunk of SettingsManager.isLightingDebugEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2160))();
}

uint64_t dispatch thunk of SettingsManager.isLightingDebugEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2168))();
}

uint64_t dispatch thunk of SettingsManager.isLightingDebugEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2176))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseEmissive.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2184))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseEmissive.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2192))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseEmissive.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2200))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseMetallic.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2208))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseMetallic.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2216))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseMetallic.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2224))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseRoughness.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2232))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseRoughness.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2240))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseRoughness.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2248))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseAmbientLightIntensity.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2256))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseAmbientLightIntensity.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2264))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseAmbientLightIntensity.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2272))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseDirectionalLightDirection.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2280))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseDirectionalLightDirection.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2288))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseDirectionalLightDirection.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2296))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseDirectionalLightIntensity.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2304))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseDirectionalLightIntensity.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2312))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseDirectionalLightIntensity.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2320))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseGradient.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2328))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseGradient.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2336))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseGradient.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2344))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseHemi.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2352))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseHemi.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2360))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseHemi.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2368))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseShadowBias.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2376))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseShadowBias.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2384))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseShadowBias.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2392))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseShadowDistance.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2400))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseShadowDistance.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2408))();
}

uint64_t dispatch thunk of SettingsManager.dollHouseShadowDistance.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2416))();
}

uint64_t dispatch thunk of SettingsManager.isPerimeterLogDumpingEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2424))();
}

uint64_t dispatch thunk of SettingsManager.isPerimeterLogDumpingEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2432))();
}

uint64_t dispatch thunk of SettingsManager.isPerimeterLogDumpingEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 2440))();
}

double sub_22655824C()
{
  void *v0;
  id v1;
  double v2;
  double v3;
  id v4;
  id v5;
  id v6;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_mainScreen);
  objc_msgSend(v1, sel_scale);
  v3 = v2;

  v4 = objc_msgSend(v0, sel_mainScreen);
  objc_msgSend(v4, sel_scale);

  v5 = objc_msgSend(v0, sel_mainScreen);
  objc_msgSend(v5, sel_scale);

  v6 = objc_msgSend(v0, sel_mainScreen);
  objc_msgSend(v6, sel_scale);

  return -1.0 / v3;
}

uint64_t sub_226558388(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t sub_226558390(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t sub_226558398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t sub_2265583A0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t sub_2265583A8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t sub_2265583B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 160))();
}

uint64_t sub_2265583B8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t sub_2265583C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 184))();
}

BOOL sub_2265583C8(_BOOL8 result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t i;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = result;
  if (*(_BYTE *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 33; ; ++i)
  {
    v5 = i - 31;
    if (__OFADD__(i - 32, 1))
      break;
    v6 = *(unsigned __int8 *)(a2 + i);
    result = v6 == v3;
    if (v6 == v3 || v5 == v2)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_226558428(uint64_t a1, char a2)
{
  uint64_t result;
  char v3;
  BOOL v4;

  switch(a2)
  {
    case 6:
    case 16:
      v4 = sub_2265583C8(18, a1);
      type metadata accessor for RoomCaptureMeshDimensionsRestriction();
      result = swift_allocObject();
      if (!v4)
        goto LABEL_3;
      goto LABEL_5;
    case 7:
    case 11:
    case 14:
    case 15:
    case 19:
    case 20:
      type metadata accessor for RoomCaptureMeshDimensionsRestriction();
      result = swift_allocObject();
LABEL_3:
      *(_BYTE *)(result + 16) = 4;
      *(_DWORD *)(result + 20) = 0;
      *(_BYTE *)(result + 24) = 1;
      *(_DWORD *)(result + 28) = 0;
      *(_BYTE *)(result + 32) = 1;
      *(_DWORD *)(result + 36) = 0;
      *(_BYTE *)(result + 40) = 0;
      return result;
    case 8:
    case 9:
    case 10:
    case 13:
      type metadata accessor for RoomCaptureMeshDimensionsRestriction();
      result = swift_allocObject();
LABEL_5:
      v3 = 2;
      goto LABEL_7;
    case 12:
    case 17:
    case 18:
      type metadata accessor for RoomCaptureMeshDimensionsRestriction();
      result = swift_allocObject();
      v3 = 3;
LABEL_7:
      *(_BYTE *)(result + 16) = v3;
      *(_DWORD *)(result + 20) = 0;
      *(_BYTE *)(result + 24) = 1;
      *(_DWORD *)(result + 28) = 0;
      *(_BYTE *)(result + 32) = 0;
      *(_DWORD *)(result + 36) = 0;
      *(_BYTE *)(result + 40) = 1;
      break;
    default:
      type metadata accessor for RoomCaptureMeshDimensionsRestriction();
      result = swift_initStaticObject();
      break;
  }
  return result;
}

uint64_t sub_226558544(uint64_t a1, int a2)
{
  unint64_t v2;
  uint64_t v3;
  _DWORD *v4;
  uint64_t result;
  float *v6;
  float v7;
  uint64_t v8;
  uint64_t v9;

  HIDWORD(v2) = a2;
  LODWORD(v2) = (a2 << 24) - 100663296;
  switch((v2 >> 25))
  {
    case 0u:
    case 5u:
      v3 = *(_QWORD *)(a1 + 16);
      if (!v3)
        goto LABEL_18;
      if (*(_BYTE *)(a1 + 32) != 18)
      {
        if (v3 == 1)
          goto LABEL_18;
        if (*(_BYTE *)(a1 + 33) != 18)
        {
          if (v3 == 2)
            goto LABEL_18;
          v8 = 34;
          while (1)
          {
            v9 = v8 - 31;
            if (__OFADD__(v8 - 32, 1))
            {
              __break(1u);
              goto LABEL_20;
            }
            if (*(_BYTE *)(a1 + v8) == 18)
              break;
            ++v8;
            if (v9 == v3)
              goto LABEL_18;
          }
        }
      }
      if (qword_25583F9D0 != -1)
        swift_once();
      v4 = off_25584AF28;
      swift_beginAccess();
      LODWORD(v4) = v4[14];
      type metadata accessor for RoomCaptureMeshDimensionsRestriction();
      result = swift_allocObject();
      *(_BYTE *)(result + 16) = 2;
      *(_DWORD *)(result + 20) = 0;
      *(_BYTE *)(result + 24) = 1;
      *(_DWORD *)(result + 28) = (_DWORD)v4;
      goto LABEL_11;
    case 6u:
      if (qword_25583F9D0 != -1)
LABEL_20:
        swift_once();
      v6 = (float *)off_25584AF28;
      swift_beginAccess();
      v7 = -v6[15];
      type metadata accessor for RoomCaptureMeshDimensionsRestriction();
      result = swift_allocObject();
      *(_BYTE *)(result + 16) = 3;
      *(_DWORD *)(result + 20) = 0;
      *(_BYTE *)(result + 24) = 1;
      *(float *)(result + 28) = v7;
LABEL_11:
      *(_BYTE *)(result + 32) = 0;
      *(_DWORD *)(result + 36) = 0;
      *(_BYTE *)(result + 40) = 1;
      break;
    case 7u:
      type metadata accessor for RoomCaptureMeshDimensionsRestriction();
      result = swift_allocObject();
      *(_BYTE *)(result + 16) = 4;
      *(_DWORD *)(result + 20) = 0;
      *(_BYTE *)(result + 24) = 1;
      *(_DWORD *)(result + 28) = 0;
      *(_BYTE *)(result + 32) = 1;
      *(_DWORD *)(result + 36) = 0;
      *(_BYTE *)(result + 40) = 0;
      break;
    default:
LABEL_18:
      type metadata accessor for RoomCaptureMeshDimensionsRestriction();
      result = swift_initStaticObject();
      break;
  }
  return result;
}

uint64_t sub_226558778(unsigned __int8 a1)
{
  _BYTE *v2;
  uint64_t *v3;

  if (qword_25583F9D0 != -1)
    swift_once();
  v2 = off_25584AF28;
  swift_beginAccess();
  if (!v2[40])
    goto LABEL_13;
  if (v2[40] != 1)
  {
    if (a1 != 20)
    {
      if (a1 == 18)
      {
LABEL_20:
        if (qword_25583F8F0 != -1)
          swift_once();
        v3 = &qword_25585AEA0;
        return *v3;
      }
      goto LABEL_13;
    }
    goto LABEL_16;
  }
  if (a1 > 0x14u)
  {
LABEL_13:
    if (qword_25583F8F8 != -1)
      swift_once();
    v3 = &qword_25585AEA8;
    return *v3;
  }
  if (((1 << a1) & 0x18C8C0) == 0)
  {
    if (((1 << a1) & 0x12700) != 0)
    {
      if (qword_25583F8E8 != -1)
        swift_once();
      v3 = &qword_25585AE98;
      return *v3;
    }
    if (((1 << a1) & 0x61000) != 0)
      goto LABEL_20;
    goto LABEL_13;
  }
LABEL_16:
  if (qword_25583F8E0 != -1)
    swift_once();
  v3 = &qword_25585AE90;
  return *v3;
}

id sub_226558920()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;

  v1 = objc_msgSend(v0, sel_smoothedSceneDepth);
  if (!v1 || (v2 = v1, v3 = objc_msgSend(v1, sel_depthMap), v2, !v3))
  {
    v4 = objc_msgSend(v0, sel_sceneDepth);
    if (v4)
    {
      v5 = v4;
      v3 = objc_msgSend(v4, sel_depthMap);

    }
    else
    {
      return 0;
    }
  }
  return v3;
}

void sub_2265589C4(void *a1, double a2, double a3, double a4, double a5)
{
  void *v5;
  void *v6;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;

  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255849180);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_22655FFA0;
  v13 = objc_msgSend(v6, sel_topAnchor);
  v14 = objc_msgSend(a1, sel_topAnchor);
  v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v14, a2);

  *(_QWORD *)(v12 + 32) = v15;
  v16 = objc_msgSend(v6, sel_bottomAnchor);
  v17 = objc_msgSend(a1, sel_bottomAnchor);
  v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_constant_, v17, -a4);

  *(_QWORD *)(v12 + 40) = v18;
  v19 = objc_msgSend(v6, sel_leftAnchor);
  v20 = objc_msgSend(a1, sel_leftAnchor);
  v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v20, a3);

  *(_QWORD *)(v12 + 48) = v21;
  v22 = objc_msgSend(v6, sel_rightAnchor);
  v23 = objc_msgSend(a1, sel_rightAnchor);
  v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v23, -a5);

  *(_QWORD *)(v12 + 56) = v24;
  sub_22655CEE4();
  v25 = (void *)objc_opt_self();
  sub_22643F548(0, (unint64_t *)&qword_255849188);
  v26 = (id)sub_22655CEC0();
  swift_bridgeObjectRelease();
  objc_msgSend(v25, sel_activateConstraints_, v26);

}

void sub_226558C38()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t i;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_superview);
  if (v2)
  {
    v3 = v2;
    do
    {
      v4 = v3;
      v5 = objc_msgSend(v4, sel_constraints);
      sub_22643F548(0, (unint64_t *)&qword_255849188);
      v6 = sub_22655CECC();

      if (v6 >> 62)
      {
        swift_bridgeObjectRetain();
        v7 = sub_22655D400();
        swift_bridgeObjectRelease();
        if (!v7)
          goto LABEL_3;
      }
      else
      {
        v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v7)
          goto LABEL_3;
      }
      if (v7 < 1)
      {
        __break(1u);
        return;
      }
      for (i = 0; i != v7; ++i)
      {
        if ((v6 & 0xC000000000000001) != 0)
          v9 = (id)MEMORY[0x2276999E4](i, v6);
        else
          v9 = *(id *)(v6 + 8 * i + 32);
        v10 = v9;
        if (objc_msgSend(v9, sel_firstItem))
        {
          objc_opt_self();
          if (swift_dynamicCastObjCClass())
          {
            sub_22643F548(0, &qword_2558432B8);
            if ((sub_22655D118() & 1) != 0)
              objc_msgSend(v4, sel_removeConstraint_, v10);
          }
          swift_unknownObjectRelease();
        }
        if (objc_msgSend(v10, sel_secondItem))
        {
          objc_opt_self();
          if (swift_dynamicCastObjCClass())
          {
            sub_22643F548(0, &qword_2558432B8);
            if ((sub_22655D118() & 1) != 0)
              objc_msgSend(v4, sel_removeConstraint_, v10);
          }
          swift_unknownObjectRelease();
        }

      }
LABEL_3:
      swift_bridgeObjectRelease();
      v3 = objc_msgSend(v4, sel_superview);

    }
    while (v3);
  }
  v11 = objc_msgSend(v1, sel_constraints);
  if (!v11)
  {
    sub_22643F548(0, (unint64_t *)&qword_255849188);
    sub_22655CECC();
    v12 = (id)sub_22655CEC0();
    swift_bridgeObjectRelease();
    v11 = v12;
  }
  v13 = v11;
  objc_msgSend(v1, sel_removeConstraints_);

}

uint64_t sub_226558F38(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_226558F58()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for DeviceVelocityManager();
  v0 = swift_allocObject();
  result = sub_226559898();
  qword_25585B398 = v0;
  return result;
}

unint64_t sub_226558F90()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t result;
  uint64_t v7;
  unsigned __int8 v8;
  _QWORD aBlock[6];
  unsigned int v10;
  char v11;

  v10 = 0;
  v11 = 1;
  v1 = *(NSObject **)(v0 + 96);
  v2 = swift_allocObject();
  swift_weakInit();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = &v10;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_226559860;
  *(_QWORD *)(v4 + 24) = v3;
  aBlock[4] = sub_226559878;
  aBlock[5] = v4;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_226558F38;
  aBlock[3] = &block_descriptor_17;
  v5 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  dispatch_sync(v1, v5);
  _Block_release(v5);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v1 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v7 = v10;
    v8 = v11;
    swift_release();
    LOBYTE(aBlock[0]) = v8;
    return v7 | ((unint64_t)v8 << 32);
  }
  return result;
}

uint64_t sub_2265590F8(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = *(_DWORD *)(result + 84);
    v4 = *(_BYTE *)(result + 88);
    result = swift_release();
  }
  else
  {
    v3 = 0;
    v4 = 1;
  }
  *(_DWORD *)a1 = v3;
  *(_BYTE *)(a1 + 4) = v4;
  return result;
}

uint64_t sub_226559168()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];
  uint64_t v14;
  uint64_t v15;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_22655CBB4();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v14 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22655CBFC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_BYTE *)(v1 + 32) = 1;
  *(_QWORD *)(v1 + 48) = 0;
  *(_QWORD *)(v1 + 56) = 0;
  *(_BYTE *)(v1 + 64) = 1;
  *(_QWORD *)(v1 + 72) = 0;
  *(_BYTE *)(v1 + 80) = 1;
  v13[1] = *(_QWORD *)(v1 + 96);
  v10 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_226559834;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2264FA450;
  aBlock[3] = &block_descriptor_7_0;
  v11 = _Block_copy(aBlock);
  swift_retain();
  sub_22655CBCC();
  v15 = MEMORY[0x24BEE4AF8];
  sub_226437F28((unint64_t *)&qword_2558452F8, v3, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
  sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
  sub_22655D214();
  MEMORY[0x22769975C](0, v9, v5, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_release();
  return swift_release();
}

uint64_t sub_226559388()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    *(_DWORD *)(result + 84) = 0;
    *(_BYTE *)(result + 88) = 1;
    return swift_release();
  }
  return result;
}

double sub_2265593DC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  float32x4_t v14;
  float32x4_t v15;
  float32x4_t v16;
  double v17;
  float32x4_t v18;
  int32x4_t v19;
  float32x4_t v20;
  int32x4_t v21;
  float v22;
  float v23;
  float v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  const void *v29;
  float32x4_t v30;
  uint64_t v31;
  double result;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  float32x4_t v37;
  float32x4_t v38;
  uint64_t v39;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_22655CBB4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22655CBFC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a1, sel_camera, v10);
  objc_msgSend(v13, sel_transform);
  v37 = v14;
  v38 = v15;

  v16 = vsubq_f32(v38, v37);
  v16.i32[3] = 0;
  v37 = v16;
  if ((*(_BYTE *)(v2 + 32) & 1) == 0 && (*(_BYTE *)(v2 + 64) & 1) == 0 && (*(_BYTE *)(v2 + 80) & 1) == 0)
  {
    v17 = *(double *)(v2 + 72);
    v18 = vsubq_f32(*(float32x4_t *)(v2 + 16), v38);
    v19 = (int32x4_t)vmulq_f32(v18, v18);
    v20 = vsubq_f32(*(float32x4_t *)(v2 + 48), v37);
    v21 = (int32x4_t)vmulq_f32(v20, v20);
    v22 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32(v19, 2), vaddq_f32((float32x4_t)v19, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v19.i8, 1))).f32[0]);
    v23 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32(v21, 2), vaddq_f32((float32x4_t)v21, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v21.i8, 1))).f32[0]);
    if (v22 > v23)
      v24 = v22;
    else
      v24 = v23;
    objc_msgSend(a1, sel_timestamp);
    v26 = v25 - v17;
    v36 = *(_QWORD *)(v2 + 96);
    v27 = swift_allocObject();
    swift_weakInit();
    v28 = swift_allocObject();
    *(_QWORD *)(v28 + 16) = v27;
    v35 = v27;
    *(float *)(v28 + 24) = v24;
    *(double *)(v28 + 32) = v26;
    aBlock[4] = sub_22655980C;
    aBlock[5] = v28;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2264FA450;
    aBlock[3] = &block_descriptor_9;
    v34 = _Block_copy(aBlock);
    swift_retain();
    sub_22655CBCC();
    v39 = MEMORY[0x24BEE4AF8];
    v33 = sub_226437F28((unint64_t *)&qword_2558452F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
    sub_2264ABAD4((unint64_t *)&qword_255845300, (uint64_t *)&unk_255849200);
    sub_22655D214();
    v29 = v34;
    MEMORY[0x22769975C](0, v12, v7, v34);
    _Block_release(v29);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    swift_release();
    swift_release();
  }
  v30 = v38;
  v30.i32[3] = 0;
  v38 = v30;
  objc_msgSend(a1, sel_timestamp);
  *(_QWORD *)(v2 + 72) = v31;
  *(_BYTE *)(v2 + 80) = 0;
  *(float32x4_t *)(v2 + 16) = v38;
  *(_BYTE *)(v2 + 32) = 0;
  result = *(double *)v37.i64;
  *(float32x4_t *)(v2 + 48) = v37;
  *(_BYTE *)(v2 + 64) = 0;
  return result;
}

uint64_t sub_226559718(float a1, double a2)
{
  uint64_t result;
  float v5;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = a2;
    *(float *)(result + 84) = a1 / v5;
    *(_BYTE *)(result + 88) = 0;
    return swift_release();
  }
  return result;
}

uint64_t sub_226559780()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DeviceVelocityManager()
{
  return objc_opt_self();
}

uint64_t sub_2265597C4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2265597E8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22655980C()
{
  uint64_t v0;

  return sub_226559718(*(float *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t sub_226559834()
{
  return sub_226559388();
}

uint64_t sub_22655983C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_226559860()
{
  uint64_t v0;

  return sub_2265590F8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_226559868()
{
  return swift_deallocObject();
}

uint64_t sub_226559878()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_226559898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  _QWORD v8[2];

  v8[0] = sub_22655D064();
  v1 = *(_QWORD *)(v8[0] - 8);
  MEMORY[0x24BDAC7A8](v8[0]);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_22655D04C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v4);
  v6 = sub_22655CBFC();
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 32) = 1;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0;
  *(_BYTE *)(v0 + 64) = 1;
  *(_QWORD *)(v0 + 72) = 0;
  *(_BYTE *)(v0 + 80) = 1;
  *(_DWORD *)(v0 + 84) = 0;
  *(_BYTE *)(v0 + 88) = 1;
  sub_22646EF58();
  sub_22655CBCC();
  v8[1] = MEMORY[0x24BEE4AF8];
  sub_226437F28((unint64_t *)&qword_2558491E0, v5, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2558442B0);
  sub_2264ABAD4((unint64_t *)&qword_2558491F0, (uint64_t *)&unk_2558442B0);
  sub_22655D214();
  (*(void (**)(char *, _QWORD, _QWORD))(v1 + 104))(v3, *MEMORY[0x24BEE5750], v8[0]);
  *(_QWORD *)(v0 + 96) = sub_22655D088();
  *(_QWORD *)(v0 + 104) = 0x4014000000000000;
  return v0;
}

void sub_226559A90(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_226559AC8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  void *v18;
  void *v19;
  id v20;

  v20 = v19;
  sub_22655D2EC();
  sub_22655CE24();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2558436F8);
  sub_22655D3A0();
  sub_22655A4A0(v19, v18, 0);
  return 0;
}

void sub_226559CA0()
{
  uint64_t v0;

  sub_226559A90(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

void sub_226559CAC()
{
  off_25584BA98 = (_UNKNOWN *)MEMORY[0x24BEE4B00];
}

uint64_t sub_226559CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  char v12;
  uint64_t AssetHandleForURL;
  uint64_t ObjCClassFromMetadata;
  id v15;
  void *v16;
  id v17;
  void *v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[3];
  uint64_t v30;
  void *v31;

  v3 = v2;
  v6 = sub_22655C05C();
  v27 = *(_QWORD *)(v6 - 8);
  v28 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22655C4D0();
  sub_22655C4C4();
  sub_22655C4A0();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v29, v30);
  v26[2] = sub_22655C494();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  sub_22655C4C4();
  sub_22655C4AC();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v29, v30);
  v9 = sub_22655C458();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  if (qword_25583F9E0 != -1)
    swift_once();
  swift_beginAccess();
  v10 = off_25584BA98;
  if (*((_QWORD *)off_25584BA98 + 2))
  {
    swift_bridgeObjectRetain();
    v11 = sub_2265348F0(a1, a2);
    if ((v12 & 1) != 0)
    {
      AssetHandleForURL = *(_QWORD *)(v10[7] + 8 * v11);
      swift_endAccess();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
  v26[1] = v9;
  swift_endAccess();
  type metadata accessor for RERoomsMaterial();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v15 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v16 = (void *)sub_22655CD64();
  v17 = objc_msgSend(v15, sel_pathForResource_ofType_, v16, 0);

  if (!v17)
  {
    sub_22644E994();
    swift_allocError();
    *(_QWORD *)v22 = a1;
    *(_QWORD *)(v22 + 8) = a2;
    *(_BYTE *)(v22 + 16) = 1;
    swift_willThrow();

LABEL_15:
    type metadata accessor for RERoomsMaterial();
    swift_deallocPartialClassInstance();
    return v3;
  }
  v26[0] = v3;
  sub_22655CD88();

  sub_22655BFC0();
  swift_bridgeObjectRelease();
  v18 = (void *)sub_22655BFE4();
  AssetHandleForURL = REAssetManagerCreateAssetHandleForURL();

  if (!AssetHandleForURL)
  {
    sub_22644E994();
    swift_allocError();
    *(_QWORD *)v24 = a1;
    *(_QWORD *)(v24 + 8) = a2;
    *(_BYTE *)(v24 + 16) = 2;
    swift_willThrow();

    (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v28);
    v3 = v26[0];
    goto LABEL_15;
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v31 = off_25584BA98;
  off_25584BA98 = (_UNKNOWN *)0x8000000000000000;
  sub_226522484(AssetHandleForURL, a1, a2, isUniquelyReferenced_nonNull_native);
  off_25584BA98 = v31;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();

  (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v28);
  v3 = v26[0];
LABEL_10:
  *(_QWORD *)(v3 + 16) = AssetHandleForURL;
  v20 = RERenderManagerMaterialParameterBlockCreateWithAsset();
  if (!v20)
  {
    sub_22644E994();
    swift_allocError();
    *(_QWORD *)v23 = a1;
    *(_QWORD *)(v23 + 8) = a2;
    *(_BYTE *)(v23 + 16) = 3;
    swift_willThrow();
    goto LABEL_15;
  }
  v21 = v20;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v3 + 24) = v21;
  return v3;
}

uint64_t sub_22655A0D0()
{
  sub_22655C1D0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RERoomsMaterial()
{
  return objc_opt_self();
}

uint64_t sub_22655A114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;

  v0 = sub_22655C1C4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22655C7E8();
  sub_22655C170();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  REMeshComponentGetComponentType();
  if (REEntityGetComponentByClass())
  {
    REMeshComponentRemoveAllMaterials();
    REMeshComponentAddMaterial();
    REMaterialParameterBlockArrayComponentGetComponentType();
    REEntityGetOrAddComponentByClass();
    if (REMaterialParameterBlockArrayComponentSize() != 1)
      REMaterialParameterBlockArrayComponentResize();
    return REMaterialParameterBlockArrayComponentSetBlockAtIndex();
  }
  else
  {
    sub_22644E994();
    swift_allocError();
    *(_QWORD *)v5 = 0;
    *(_QWORD *)(v5 + 8) = 0;
    *(_BYTE *)(v5 + 16) = 4;
    return swift_willThrow();
  }
}

uint64_t sub_22655A25C(float32x2_t a1)
{
  int8x8_t v2;
  char v3;

  sub_22655CDE8();
  REMaterialParameterBlockGetFloat2();
  swift_release();
  v2 = vmvn_s8((int8x8_t)vceq_f32(0, a1));
  v3 = v2.i8[0] | v2.i8[4];
  if (((v2.i8[0] | v2.i8[4]) & 1) != 0)
  {
    sub_22655CDE8();
    REMaterialParameterBlockSetFloat2();
    swift_release();
  }
  return v3 & 1;
}

uint64_t sub_22655A334(__n128 a1)
{
  uint64_t v1;
  BOOL v2;
  float v3;
  float v4;
  __n128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v9 = 0uLL;
  sub_22655CDE8();
  REMaterialParameterBlockGetFloat4();
  swift_release();
  v1 = 0;
  while (1)
  {
    v7 = a1;
    v3 = *(float *)((unint64_t)&v7 & 0xFFFFFFFFFFFFFFF3 | (4 * (v1 & 3)));
    v8 = v9;
    v4 = *(float *)((unint64_t)&v8 & 0xFFFFFFFFFFFFFFF3 | (4 * (v1 & 3)));
    v2 = v3 == v4;
    if (v1 == 3)
      break;
    while (1)
    {
      ++v1;
      if (v2)
        break;
      if (v1 == 3)
        goto LABEL_8;
      v2 = 0;
    }
  }
  if (v3 == v4)
    return 0;
LABEL_8:
  sub_22655CDE8();
  REMaterialParameterBlockSetFloat4();
  swift_release();
  return 1;
}

id sub_22655A458(id result, id a2, char a3)
{
  switch(a3)
  {
    case 0:
      result = result;
      break;
    case 1:
    case 2:
    case 3:
      result = (id)swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

void destroy for RERoomsMaterialError(uint64_t a1)
{
  sub_22655A4A0(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_22655A4A0(void *a1, id a2, char a3)
{
  switch(a3)
  {
    case 0:

      break;
    case 1:
    case 2:
    case 3:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t _s8RoomPlan20RERoomsMaterialErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_22655A458(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for RERoomsMaterialError(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_22655A458(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_22655A4A0(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for RERoomsMaterialError(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_22655A4A0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for RERoomsMaterialError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RERoomsMaterialError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_22655A644(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_22655A65C(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for RERoomsMaterialError()
{
  return &type metadata for RERoomsMaterialError;
}

__n128 __swift_memcpy200_16(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ARCameraParameters(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 200))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ARCameraParameters(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 200) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ARCameraParameters()
{
  return &type metadata for ARCameraParameters;
}

id sub_22655A758(void *a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  id v9;
  simd_float4 v10;
  simd_float4 v11;
  simd_float4 v12;
  simd_float4 v13;
  id v14;
  float32x4_t v15;
  float32x4_t v16;
  float32x4_t v17;
  float32x4_t v18;
  id result;
  uint64_t v20;
  simd_float4 v21;
  float32x4_t v22;
  simd_float4 v23;
  float32x4_t v24;
  simd_float4 v25;
  float32x4_t v26;
  simd_float4 v27;
  float32x4_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  simd_float4x4 v32;

  v9 = objc_msgSend(a1, sel_camera);
  objc_msgSend(v9, sel_viewMatrixForOrientation_, a2);
  v25 = v11;
  v27 = v10;
  v21 = v13;
  v23 = v12;

  v32.columns[1] = v25;
  v32.columns[0] = v27;
  v32.columns[3] = v21;
  v32.columns[2] = v23;
  *(simd_float4x4 *)v4 = __invert_f4(v32);
  v14 = objc_msgSend(a1, sel_camera);
  objc_msgSend(v14, sel_projectionMatrixForOrientation_viewportSize_zNear_zFar_, a2, a3, a4, *(double *)(v4 + 184), *(double *)(v4 + 192));
  v22 = v15;
  v24 = v16;
  v26 = v17;
  v28 = v18;

  *(float32x4_t *)(v4 + 64) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_2265600A0, v22.f32[0]), (float32x4_t)xmmword_2265600C0, *(float32x2_t *)v22.f32, 1), (float32x4_t)xmmword_226560090, v22, 2), (float32x4_t)xmmword_226569E00, v22, 3);
  *(float32x4_t *)(v4 + 80) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_2265600A0, v24.f32[0]), (float32x4_t)xmmword_2265600C0, *(float32x2_t *)v24.f32, 1), (float32x4_t)xmmword_226560090, v24, 2), (float32x4_t)xmmword_226569E00, v24, 3);
  *(float32x4_t *)(v4 + 96) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_2265600A0, v26.f32[0]), (float32x4_t)xmmword_2265600C0, *(float32x2_t *)v26.f32, 1), (float32x4_t)xmmword_226560090, v26, 2), (float32x4_t)xmmword_226569E00, v26, 3);
  *(float32x4_t *)(v4 + 112) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_2265600A0, v28.f32[0]), (float32x4_t)xmmword_2265600C0, *(float32x2_t *)v28.f32, 1), (float32x4_t)xmmword_226560090, v28, 2), (float32x4_t)xmmword_226569E00, v28, 3);
  objc_msgSend(a1, sel_displayTransformForOrientation_viewportSize_, a2, a3, a4);
  *(_OWORD *)(v4 + 136) = v29;
  *(_OWORD *)(v4 + 152) = v30;
  *(_OWORD *)(v4 + 168) = v31;
  result = objc_msgSend(a1, sel_timestamp);
  *(_QWORD *)(v4 + 128) = v20;
  return result;
}

float32x2_t *sub_22655A8E8(float32x2_t a1, float32x2_t a2, float32x2_t a3, float a4)
{
  float32x2_t *v4;
  float32x2_t *result;
  float32x2_t v6;
  float32x2_t v7;
  float32x2_t v8;
  float32x2_t v9;
  __int32 v10;
  BOOL v11;
  float32x2_t v12;
  float32x2_t v13;

  result = v4;
  v6 = vmul_f32(a3, (float32x2_t)0x3F0000003F000000);
  v7 = vneg_f32(v6);
  v8 = (float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(a1, a2), (int8x8_t)a2, (int8x8_t)a1);
  v9 = (float32x2_t)vbsl_s8((int8x8_t)vcge_f32(a2, a1), (int8x8_t)a2, (int8x8_t)a1);
  v10 = v8.f32[0] <= (float)(a4 - v6.f32[0]);
  if (v8.f32[1] <= (float)(a4 - v6.f32[1]))
    v10 |= 4u;
  if ((float)(v6.f32[0] - a4) <= v9.f32[0])
    v10 |= 2u;
  v11 = (float)(v6.f32[1] - a4) > v9.f32[1];
  v13 = vminnm_f32(vmaxnm_f32(v8, v7), v6);
  v12 = vminnm_f32(vmaxnm_f32(v9, v7), v6);
  v4[2] = v13;
  v4[3] = (float32x2_t)__PAIR64__(v13.u32[1], v12.u32[0]);
  v4[4] = v12;
  v13.i32[1] = v12.i32[1];
  if (!v11)
    v10 |= 8u;
  v4[5] = v13;
  v4[6].i32[0] = v10;
  return result;
}

uint64_t sub_22655A984()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for OpeningElement()
{
  return objc_opt_self();
}

uint64_t sub_22655A9B4(float32x4_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, float32x4_t a7, float32x4_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, float32x4_t a17, float32x2_t a18)
{
  float32x4_t v18;
  float32x4_t v19;
  uint64_t v20;
  float32x2_t v22;
  float32x2_t v23;

  v18 = vaddq_f32(vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(a1, -0.5 * a5.f32[0]), a2, vmuls_lane_f32(-0.5, *(float32x2_t *)a5.f32, 1)), a3, vmuls_lane_f32(-0.5, a5, 2)), a4);
  v19 = vaddq_f32(vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(a1, 0.5 * a5.f32[0]), a2, vmuls_lane_f32(0.5, *(float32x2_t *)a5.f32, 1)), a3, vmuls_lane_f32(0.5, a5, 2)), a4);
  v23 = (float32x2_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a6, v18.f32[0]), a7, *(float32x2_t *)v18.f32, 1), a8, v18, 2), a17, v18, 3).u64[0];
  v22 = (float32x2_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a6, v19.f32[0]), a7, *(float32x2_t *)v19.f32, 1), a8, v19, 2), a17, v19, 3).u64[0];
  type metadata accessor for OpeningElement();
  v20 = swift_allocObject();
  sub_22655A8E8(v23, v22, a18, 0.03);
  return v20;
}

uint64_t sub_22655AA84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22655B940(a1, a2, a3, &qword_25584BE78);
}

uint64_t sub_22655AA90()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25584BE78);
  return sub_22655CCE0();
}

void sub_22655AAD4()
{
  sub_2264B10A4();
  sub_22655BF60();
  __break(1u);
}

void sub_22655AAF8()
{
  sub_22655BEAC();
  __break(1u);
}

dispatch_semaphore_t sub_22655AB10()
{
  uint64_t v0;
  dispatch_semaphore_t result;
  uint64_t v2;

  type metadata accessor for OULogManager();
  v0 = swift_allocObject();
  *(_BYTE *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 32) = 0;
  swift_unknownObjectWeakInit();
  result = dispatch_semaphore_create(1);
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 40) = result;
  *(_QWORD *)(v0 + 48) = v2;
  qword_25585B3A0 = v0;
  return result;
}

uint64_t sub_22655AB6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtCC8RoomPlan12OULogManagerP33_32039FB16B3B97E8BBC711C9428C4A1610OULogEntry_uuid;
  v2 = sub_22655C140();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_22655ABD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD v32[2];
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[3];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v3 = sub_22655C140();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for CapturedRoom.Object(0);
  v7 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a1 + 40);
  v41 = *(_QWORD *)(v10 + 16);
  if (v41)
  {
    v37 = (_QWORD *)(v1 + 48);
    v32[1] = v1;
    v44 = v10 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    swift_bridgeObjectRetain();
    v11 = 0;
    v12 = v41;
    v35 = v3;
    v34 = v4;
    v33 = v6;
    v38 = v9;
    v39 = v7;
    v36 = v10;
    do
    {
      if (v11 >= *(_QWORD *)(v10 + 16))
      {
        __break(1u);
        JUMPOUT(0x22655B01CLL);
      }
      sub_22655BC60(v44 + *(_QWORD *)(v7 + 72) * v11, (uint64_t)v9);
      v13 = 0x7269616843;
      v14 = 0xE500000000000000;
      switch(*v9)
      {
        case 0:
          v13 = 0x656761726F7453;
          v14 = 0xE700000000000000;
          goto LABEL_10;
        case 10:
          v13 = 0x656C626154;
          goto LABEL_10;
        case 11:
          v14 = 0xE400000000000000;
          v13 = 1634103123;
          goto LABEL_10;
        case 12:
LABEL_10:
          v45 = v13;
          if ((sub_22655D55C() & 1) != 0)
            goto LABEL_3;
          v15 = v40;
          (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, &v9[*(int *)(v40 + 32)], v3);
          v43 = *((_OWORD *)v9 + 1);
          v16 = *(_QWORD *)&v9[*(int *)(v15 + 36)];
          v17 = *(_QWORD *)(v16 + 16);
          if (v17)
          {
            v49 = MEMORY[0x24BEE4AF8];
            swift_bridgeObjectRetain();
            sub_2264C7C00(0, v17, 0);
            v42 = v16;
            v18 = v16 + 32;
            v19 = v49;
            do
            {
              sub_226438600(v18, (uint64_t)v46);
              v20 = v47;
              v21 = v48;
              __swift_project_boxed_opaque_existential_1(v46, v47);
              v22 = sub_226485144(v20, v21);
              v24 = v23;
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_2264C7C00(0, *(_QWORD *)(v19 + 16) + 1, 1);
                v19 = v49;
              }
              v26 = *(_QWORD *)(v19 + 16);
              v25 = *(_QWORD *)(v19 + 24);
              if (v26 >= v25 >> 1)
              {
                sub_2264C7C00(v25 > 1, v26 + 1, 1);
                v19 = v49;
              }
              *(_QWORD *)(v19 + 16) = v26 + 1;
              v27 = v19 + 16 * v26;
              *(_QWORD *)(v27 + 32) = v22;
              *(_QWORD *)(v27 + 40) = v24;
              v18 += 40;
              --v17;
            }
            while (v17);
            swift_bridgeObjectRelease();
            v3 = v35;
            v4 = v34;
            v6 = v33;
          }
          else
          {
            v19 = MEMORY[0x24BEE4AF8];
          }
          type metadata accessor for OULogManager.OULogEntry();
          v28 = swift_allocObject();
          *(_QWORD *)(v28 + 16) = v45;
          *(_QWORD *)(v28 + 24) = v14;
          (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v28 + OBJC_IVAR____TtCC8RoomPlan12OULogManagerP33_32039FB16B3B97E8BBC711C9428C4A1610OULogEntry_uuid, v6, v3);
          *(_OWORD *)(v28
                    + OBJC_IVAR____TtCC8RoomPlan12OULogManagerP33_32039FB16B3B97E8BBC711C9428C4A1610OULogEntry_dimensions) = v43;
          *(_QWORD *)(v28
                    + OBJC_IVAR____TtCC8RoomPlan12OULogManagerP33_32039FB16B3B97E8BBC711C9428C4A1610OULogEntry_attributes) = v19;
          v29 = v37;
          swift_beginAccess();
          v30 = swift_retain();
          MEMORY[0x227699594](v30);
          v9 = v38;
          if (*(_QWORD *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_22655CEF0();
          sub_22655CF08();
          sub_22655CEE4();
          swift_endAccess();
          swift_release();
          v7 = v39;
          v10 = v36;
          v12 = v41;
          break;
        default:
LABEL_3:
          swift_bridgeObjectRelease();
          break;
      }
      ++v11;
      sub_22655BCA4((uint64_t)v9);
    }
    while (v11 != v12);
    swift_bridgeObjectRelease();
  }
  return sub_22655B050();
}

uint64_t sub_22655B050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t result;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD aBlock[6];

  v1 = sub_22655CBB4();
  v17 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_22655CBFC();
  v4 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22655CC14();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(id *)(v0 + 40);
  sub_22655CC08();
  sub_22655D0A0();

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  result = sub_22655CBA8();
  if ((result & 1) == 0)
  {
    sub_22646EF58();
    v13 = (void *)sub_22655D070();
    v14 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_22655BC40;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2264FA450;
    aBlock[3] = &block_descriptor_10;
    v15 = _Block_copy(aBlock);
    swift_release();
    sub_22655CBCC();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_2264B1164();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255849200);
    sub_2264B11AC();
    sub_22655D214();
    MEMORY[0x22769975C](0, v6, v3, v15);
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v17 + 8))(v3, v1);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v16);
  }
  return result;
}

uint64_t sub_22655B2A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  id v10;
  _BYTE v11[24];

  v0 = sub_22655BF00();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = result;
    sub_22655B3EC((uint64_t)v3);
    v6 = MEMORY[0x22769A944](v5 + 24);
    if (v6)
    {
      v7 = v6 + OBJC_IVAR____TtC8RoomPlan18RoomCaptureSession_debugDelegate;
      swift_beginAccess();
      if (MEMORY[0x22769A944](v7))
      {
        v8 = *(_QWORD *)(v7 + 8);
        ObjectType = swift_getObjectType();
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v3, ObjectType, v8);
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
    }
    v10 = *(id *)(v5 + 40);
    sub_22655D0AC();
    swift_release();

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
  }
  return result;
}

uint64_t sub_22655B3EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t KeyPath;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  id v62;
  uint64_t v63;

  v3 = sub_22655BF30();
  MEMORY[0x24BDAC7A8](v3);
  v56 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22655BF00();
  v54 = *(_QWORD *)(v5 - 8);
  v55 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v53 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = a1;
  sub_22655BEF4();
  swift_beginAccess();
  v7 = *(_QWORD *)(v1 + 48);
  if (!(v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    *(&v47 - 2) = v45;
    swift_getKeyPath();
    v62 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 30.0);
    sub_22655BB3C();
    return sub_22655BEC4();
  }
LABEL_13:
  swift_bridgeObjectRetain_n();
  v8 = sub_22655D400();
  swift_bridgeObjectRelease();
  if (!v8)
    goto LABEL_11;
LABEL_3:
  v52 = v7 & 0xC000000000000001;
  v9 = 4;
  v10 = MEMORY[0x24BEE0D00];
  v61 = xmmword_226563280;
  v48 = 0x8000000226572440;
  v49 = 0x800000022656DE20;
  v50 = v8;
  v51 = v7;
  while (1)
  {
    v11 = v9 - 4;
    if (v52)
    {
      v12 = MEMORY[0x2276999E4](v9 - 4, v7);
      v13 = v9 - 3;
      if (__OFADD__(v11, 1))
        goto LABEL_12;
    }
    else
    {
      v12 = *(_QWORD *)(v7 + 8 * v9);
      swift_retain();
      v13 = v9 - 3;
      if (__OFADD__(v11, 1))
      {
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
    }
    v59 = v13;
    v60 = v9;
    v62 = (id)sub_22655C0EC();
    v63 = v14;
    sub_22647D7C4();
    v15 = sub_22655D1C0();
    swift_bridgeObjectRelease();
    v16 = *(_QWORD *)(v15 + 16);
    if (!v16)
      break;
    v17 = (uint64_t *)(v15 + 32 * v16);
    v18 = *v17;
    v19 = v17[1];
    v20 = v17[2];
    v21 = v17[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v58 = MEMORY[0x2276994D4](v18, v19, v20, v21);
    swift_bridgeObjectRelease();
    v22 = v12;
    v23 = *(void **)(v12 + 16);
    v24 = *(_QWORD *)(v22 + 24);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255843100);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = v61;
    v26 = v22 + OBJC_IVAR____TtCC8RoomPlan12OULogManagerP33_32039FB16B3B97E8BBC711C9428C4A1610OULogEntry_dimensions;
    v27 = *(_DWORD *)(v22
                    + OBJC_IVAR____TtCC8RoomPlan12OULogManagerP33_32039FB16B3B97E8BBC711C9428C4A1610OULogEntry_dimensions);
    v28 = MEMORY[0x24BEE14E8];
    *(_QWORD *)(v25 + 56) = MEMORY[0x24BEE14E8];
    v29 = MEMORY[0x24BEE1568];
    *(_QWORD *)(v25 + 64) = MEMORY[0x24BEE1568];
    *(_DWORD *)(v25 + 32) = v27;
    v30 = *(_DWORD *)(v26 + 4);
    *(_QWORD *)(v25 + 96) = v28;
    *(_QWORD *)(v25 + 104) = v29;
    *(_DWORD *)(v25 + 72) = v30;
    v31 = *(_DWORD *)(v26 + 8);
    *(_QWORD *)(v25 + 136) = v28;
    *(_QWORD *)(v25 + 144) = v29;
    *(_DWORD *)(v25 + 112) = v31;
    swift_bridgeObjectRetain();
    v32 = sub_22655CDAC();
    v34 = v33;
    v35 = swift_bridgeObjectRetain();
    v36 = MEMORY[0x2276995B8](v35, v10);
    v38 = v37;
    swift_bridgeObjectRelease();
    v62 = v23;
    v63 = v24;
    sub_22655CE24();
    sub_22655CE24();
    swift_bridgeObjectRelease();
    sub_22655CE24();
    sub_22655CE24();
    sub_22655CE24();
    sub_22655CE24();
    sub_22655CE24();
    sub_22655BF24();
    v39 = v53;
    sub_22655BF0C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255843A38);
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = v61;
    v41 = v48;
    *(_QWORD *)(v40 + 32) = 0xD000000000000014;
    *(_QWORD *)(v40 + 40) = v41;
    *(_QWORD *)(v40 + 56) = v10;
    *(_QWORD *)(v40 + 64) = v32;
    *(_QWORD *)(v40 + 72) = v34;
    *(_QWORD *)(v40 + 120) = v10;
    *(_QWORD *)(v40 + 88) = v10;
    *(_QWORD *)(v40 + 96) = v36;
    *(_QWORD *)(v40 + 104) = v38;
    sub_22655D61C();
    swift_bridgeObjectRelease();
    v42 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v42);
    *(&v47 - 2) = v43;
    swift_getKeyPath();
    v62 = objc_msgSend((id)objc_opt_self(), sel_systemGreenColor);
    sub_2264B10A4();
    sub_22655BEC4();
    sub_22655BEE8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v39, v55);
    v9 = v60 + 1;
    v7 = v51;
    if (v59 == v50)
      goto LABEL_11;
  }
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_22655B940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  __swift_instantiateConcreteTypeFromMangledName(a4);
  return sub_22655CD04() & 1;
}

uint64_t type metadata accessor for OULogManager()
{
  return objc_opt_self();
}

uint64_t sub_22655B9B4()
{
  return type metadata accessor for OULogManager.OULogEntry();
}

uint64_t type metadata accessor for OULogManager.OULogEntry()
{
  uint64_t result;

  result = qword_25584BDC8;
  if (!qword_25584BDC8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22655B9F8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22655C140();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_22655BA8C()
{
  sub_22655BEAC();
  __break(1u);
}

void sub_22655BAA4()
{
  sub_2264B10A4();
  sub_22655BF60();
  __break(1u);
}

uint64_t sub_22655BAC8()
{
  return 8;
}

uint64_t sub_22655BAD4()
{
  return swift_release();
}

uint64_t sub_22655BADC(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_22655BAE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22655B940(a1, a2, a3, &qword_25584BE78) & 1;
}

uint64_t sub_22655BB08(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_25584BE78);
}

_QWORD *sub_22655BB14(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_22655BB20()
{
  sub_22655BEB8();
  __break(1u);
}

unint64_t sub_22655BB3C()
{
  unint64_t result;

  result = qword_25584BE68;
  if (!qword_25584BE68)
  {
    result = MEMORY[0x22769A794](MEMORY[0x24BEBBE20], MEMORY[0x24BEBBE30]);
    atomic_store(result, (unint64_t *)&qword_25584BE68);
  }
  return result;
}

void sub_22655BB80()
{
  sub_22655BB3C();
  sub_22655BF60();
  __break(1u);
}

uint64_t sub_22655BBA4()
{
  return 8;
}

uint64_t sub_22655BBB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22655B940(a1, a2, a3, &qword_25584BE70) & 1;
}

uint64_t sub_22655BBD0(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_25584BE70);
}

uint64_t keypath_hashTm(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return sub_22655CCE0();
}

uint64_t sub_22655BC1C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22655BC40()
{
  return sub_22655B2A4();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t sub_22655BC60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CapturedRoom.Object(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22655BCA4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CapturedRoom.Object(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22655BCEC()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DistanceAngleHullPoint()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self();
}

uint64_t sub_22655BD50()
{
  return MEMORY[0x24BDCB288]();
}

uint64_t sub_22655BD5C()
{
  return MEMORY[0x24BDCB290]();
}

uint64_t sub_22655BD68()
{
  return MEMORY[0x24BDCB2A8]();
}

uint64_t sub_22655BD74()
{
  return MEMORY[0x24BDCB2E0]();
}

uint64_t sub_22655BD80()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_22655BD8C()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_22655BD98()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_22655BDA4()
{
  return MEMORY[0x24BDCB458]();
}

uint64_t sub_22655BDB0()
{
  return MEMORY[0x24BDCB470]();
}

uint64_t sub_22655BDBC()
{
  return MEMORY[0x24BDCB488]();
}

uint64_t sub_22655BDC8()
{
  return MEMORY[0x24BDCB498]();
}

uint64_t sub_22655BDD4()
{
  return MEMORY[0x24BDCB568]();
}

uint64_t sub_22655BDE0()
{
  return MEMORY[0x24BDCB588]();
}

uint64_t sub_22655BDEC()
{
  return MEMORY[0x24BDCB628]();
}

uint64_t sub_22655BDF8()
{
  return MEMORY[0x24BDCB6D8]();
}

uint64_t sub_22655BE04()
{
  return MEMORY[0x24BDCB6F0]();
}

uint64_t sub_22655BE10()
{
  return MEMORY[0x24BDCB720]();
}

uint64_t sub_22655BE1C()
{
  return MEMORY[0x24BDCB738]();
}

uint64_t sub_22655BE28()
{
  return MEMORY[0x24BDCB750]();
}

uint64_t sub_22655BE34()
{
  return MEMORY[0x24BDCB8E8]();
}

uint64_t sub_22655BE40()
{
  return MEMORY[0x24BDCB930]();
}

uint64_t sub_22655BE4C()
{
  return MEMORY[0x24BDCBBB0]();
}

uint64_t sub_22655BE58()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_22655BE64()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_22655BE70()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_22655BE7C()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_22655BE88()
{
  return MEMORY[0x24BDCBE60]();
}

uint64_t sub_22655BE94()
{
  return MEMORY[0x24BDCBE68]();
}

uint64_t sub_22655BEA0()
{
  return MEMORY[0x24BDCBE80]();
}

uint64_t sub_22655BEAC()
{
  return MEMORY[0x24BEBBE40]();
}

uint64_t sub_22655BEB8()
{
  return MEMORY[0x24BEBBE48]();
}

uint64_t sub_22655BEC4()
{
  return MEMORY[0x24BDCC2D8]();
}

uint64_t sub_22655BED0()
{
  return MEMORY[0x24BDCC2F8]();
}

uint64_t sub_22655BEDC()
{
  return MEMORY[0x24BDCC378]();
}

uint64_t sub_22655BEE8()
{
  return MEMORY[0x24BDCC400]();
}

uint64_t sub_22655BEF4()
{
  return MEMORY[0x24BDCC5A0]();
}

uint64_t sub_22655BF00()
{
  return MEMORY[0x24BDCC5A8]();
}

uint64_t sub_22655BF0C()
{
  return MEMORY[0x24BDCC5D8]();
}

uint64_t sub_22655BF18()
{
  return MEMORY[0x24BDCC6D8]();
}

uint64_t sub_22655BF24()
{
  return MEMORY[0x24BDCC890]();
}

uint64_t sub_22655BF30()
{
  return MEMORY[0x24BDCC898]();
}

uint64_t sub_22655BF3C()
{
  return MEMORY[0x24BDCCA60]();
}

uint64_t sub_22655BF48()
{
  return MEMORY[0x24BDCCA88]();
}

uint64_t sub_22655BF54()
{
  return MEMORY[0x24BDCCA90]();
}

uint64_t sub_22655BF60()
{
  return MEMORY[0x24BEBBE70]();
}

uint64_t sub_22655BF6C()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_22655BF78()
{
  return MEMORY[0x24BDCD508]();
}

uint64_t sub_22655BF84()
{
  return MEMORY[0x24BDCD520]();
}

uint64_t sub_22655BF90()
{
  return MEMORY[0x24BDCD748]();
}

uint64_t sub_22655BF9C()
{
  return MEMORY[0x24BDCD7B8]();
}

uint64_t sub_22655BFA8()
{
  return MEMORY[0x24BDCD810]();
}

uint64_t sub_22655BFB4()
{
  return MEMORY[0x24BDCD820]();
}

uint64_t sub_22655BFC0()
{
  return MEMORY[0x24BDCD870]();
}

uint64_t sub_22655BFCC()
{
  return MEMORY[0x24BDCD888]();
}

uint64_t sub_22655BFD8()
{
  return MEMORY[0x24BDCD898]();
}

uint64_t sub_22655BFE4()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_22655BFF0()
{
  return MEMORY[0x24BDCD8E0]();
}

uint64_t sub_22655BFFC()
{
  return MEMORY[0x24BDCD908]();
}

uint64_t sub_22655C008()
{
  return MEMORY[0x24BDCD928]();
}

uint64_t sub_22655C014()
{
  return MEMORY[0x24BDCD938]();
}

uint64_t sub_22655C020()
{
  return MEMORY[0x24BDCD968]();
}

uint64_t sub_22655C02C()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_22655C038()
{
  return MEMORY[0x24BDCD9E8]();
}

uint64_t sub_22655C044()
{
  return MEMORY[0x24BDCD9F8]();
}

uint64_t sub_22655C050()
{
  return MEMORY[0x24BDCDAA0]();
}

uint64_t sub_22655C05C()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_22655C068()
{
  return MEMORY[0x24BDCDB50]();
}

uint64_t sub_22655C074()
{
  return MEMORY[0x24BDCDC10]();
}

uint64_t sub_22655C080()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_22655C08C()
{
  return MEMORY[0x24BDCDD20]();
}

uint64_t sub_22655C098()
{
  return MEMORY[0x24BDCDE98]();
}

uint64_t sub_22655C0A4()
{
  return MEMORY[0x24BDCE330]();
}

uint64_t sub_22655C0B0()
{
  return MEMORY[0x24BDCE468]();
}

uint64_t sub_22655C0BC()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_22655C0C8()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_22655C0D4()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_22655C0E0()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_22655C0EC()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_22655C0F8()
{
  return MEMORY[0x24BDCE9D0]();
}

uint64_t sub_22655C104()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t sub_22655C110()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t sub_22655C11C()
{
  return MEMORY[0x24BDCEA08]();
}

uint64_t sub_22655C128()
{
  return MEMORY[0x24BDCEA10]();
}

uint64_t sub_22655C134()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_22655C140()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_22655C14C()
{
  return MEMORY[0x24BDCEAC8]();
}

uint64_t sub_22655C158()
{
  return MEMORY[0x24BDCED58]();
}

uint64_t sub_22655C164()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_22655C170()
{
  return MEMORY[0x24BDE5F98]();
}

uint64_t sub_22655C17C()
{
  return MEMORY[0x24BDE5FA0]();
}

uint64_t sub_22655C188()
{
  return MEMORY[0x24BDE5FC8]();
}

uint64_t sub_22655C194()
{
  return MEMORY[0x24BDE5FD0]();
}

uint64_t sub_22655C1A0()
{
  return MEMORY[0x24BDE6018]();
}

uint64_t sub_22655C1AC()
{
  return MEMORY[0x24BDE6038]();
}

uint64_t sub_22655C1B8()
{
  return MEMORY[0x24BDE6080]();
}

uint64_t sub_22655C1C4()
{
  return MEMORY[0x24BDE6088]();
}

uint64_t sub_22655C1D0()
{
  return MEMORY[0x24BDE6098]();
}

uint64_t sub_22655C1DC()
{
  return MEMORY[0x24BDE60A8]();
}

uint64_t sub_22655C1E8()
{
  return MEMORY[0x24BDE60B0]();
}

uint64_t sub_22655C1F4()
{
  return MEMORY[0x24BDE60C8]();
}

uint64_t sub_22655C200()
{
  return MEMORY[0x24BDE60D8]();
}

uint64_t sub_22655C20C()
{
  return MEMORY[0x24BDE60E0]();
}

uint64_t sub_22655C218()
{
  return MEMORY[0x24BDE60F8]();
}

uint64_t sub_22655C224()
{
  return MEMORY[0x24BDE6100]();
}

uint64_t sub_22655C230()
{
  return MEMORY[0x24BDE6110]();
}

uint64_t sub_22655C23C()
{
  return MEMORY[0x24BDE6118]();
}

uint64_t sub_22655C248()
{
  return MEMORY[0x24BDE6128]();
}

uint64_t sub_22655C254()
{
  return MEMORY[0x24BDE6140]();
}

uint64_t sub_22655C260()
{
  return MEMORY[0x24BDE6148]();
}

uint64_t sub_22655C26C()
{
  return MEMORY[0x24BDE6168]();
}

uint64_t sub_22655C278()
{
  return MEMORY[0x24BDE61B0]();
}

uint64_t sub_22655C284()
{
  return MEMORY[0x24BDE61B8]();
}

uint64_t sub_22655C290()
{
  return MEMORY[0x24BDE61C0]();
}

uint64_t sub_22655C29C()
{
  return MEMORY[0x24BDE61D0]();
}

uint64_t sub_22655C2A8()
{
  return MEMORY[0x24BDE61E0]();
}

uint64_t sub_22655C2B4()
{
  return MEMORY[0x24BDE6200]();
}

uint64_t sub_22655C2C0()
{
  return MEMORY[0x24BDE6208]();
}

uint64_t sub_22655C2CC()
{
  return MEMORY[0x24BDE6218]();
}

uint64_t sub_22655C2D8()
{
  return MEMORY[0x24BDE6228]();
}

uint64_t sub_22655C2E4()
{
  return MEMORY[0x24BDE6230]();
}

uint64_t sub_22655C2F0()
{
  return MEMORY[0x24BDE6238]();
}

uint64_t sub_22655C2FC()
{
  return MEMORY[0x24BDE6248]();
}

uint64_t sub_22655C308()
{
  return MEMORY[0x24BDE6250]();
}

uint64_t sub_22655C314()
{
  return MEMORY[0x24BDE6258]();
}

uint64_t sub_22655C320()
{
  return MEMORY[0x24BDE6260]();
}

uint64_t sub_22655C32C()
{
  return MEMORY[0x24BDE6268]();
}

uint64_t sub_22655C338()
{
  return MEMORY[0x24BDE6270]();
}

uint64_t sub_22655C344()
{
  return MEMORY[0x24BDE6278]();
}

uint64_t sub_22655C350()
{
  return MEMORY[0x24BDE6298]();
}

uint64_t sub_22655C35C()
{
  return MEMORY[0x24BDE62A0]();
}

uint64_t sub_22655C368()
{
  return MEMORY[0x24BDE62A8]();
}

uint64_t sub_22655C374()
{
  return MEMORY[0x24BDE7DC0]();
}

uint64_t sub_22655C380()
{
  return MEMORY[0x24BDE62B0]();
}

uint64_t sub_22655C38C()
{
  return MEMORY[0x24BDE62C0]();
}

uint64_t sub_22655C398()
{
  return MEMORY[0x24BDE62C8]();
}

uint64_t sub_22655C3A4()
{
  return MEMORY[0x24BDE62D8]();
}

uint64_t sub_22655C3B0()
{
  return MEMORY[0x24BDE62E8]();
}

uint64_t sub_22655C3BC()
{
  return MEMORY[0x24BDE62F0]();
}

uint64_t sub_22655C3C8()
{
  return MEMORY[0x24BDE7DC8]();
}

uint64_t sub_22655C3D4()
{
  return MEMORY[0x24BDE6300]();
}

uint64_t sub_22655C3E0()
{
  return MEMORY[0x24BDE6310]();
}

uint64_t sub_22655C3EC()
{
  return MEMORY[0x24BDE6318]();
}

uint64_t sub_22655C3F8()
{
  return MEMORY[0x24BDE6320]();
}

uint64_t sub_22655C404()
{
  return MEMORY[0x24BDE6328]();
}

uint64_t sub_22655C410()
{
  return MEMORY[0x24BDE6330]();
}

uint64_t sub_22655C41C()
{
  return MEMORY[0x24BDE6340]();
}

uint64_t sub_22655C428()
{
  return MEMORY[0x24BDE6368]();
}

uint64_t sub_22655C434()
{
  return MEMORY[0x24BDE6370]();
}

uint64_t sub_22655C440()
{
  return MEMORY[0x24BDE6380]();
}

uint64_t sub_22655C44C()
{
  return MEMORY[0x24BDE6388]();
}

uint64_t sub_22655C458()
{
  return MEMORY[0x24BDE6468]();
}

uint64_t sub_22655C464()
{
  return MEMORY[0x24BDE6470]();
}

uint64_t sub_22655C470()
{
  return MEMORY[0x24BDE6490]();
}

uint64_t sub_22655C47C()
{
  return MEMORY[0x24BDE64A8]();
}

uint64_t sub_22655C488()
{
  return MEMORY[0x24BDE64B0]();
}

uint64_t sub_22655C494()
{
  return MEMORY[0x24BDE64C0]();
}

uint64_t sub_22655C4A0()
{
  return MEMORY[0x24BDE64E8]();
}

uint64_t sub_22655C4AC()
{
  return MEMORY[0x24BDE64F8]();
}

uint64_t sub_22655C4B8()
{
  return MEMORY[0x24BDE6500]();
}

uint64_t sub_22655C4C4()
{
  return MEMORY[0x24BDE6508]();
}

uint64_t sub_22655C4D0()
{
  return MEMORY[0x24BDE6510]();
}

uint64_t sub_22655C4DC()
{
  return MEMORY[0x24BDE6568]();
}

uint64_t sub_22655C4E8()
{
  return MEMORY[0x24BDE6578]();
}

uint64_t sub_22655C4F4()
{
  return MEMORY[0x24BDE6590]();
}

uint64_t sub_22655C500()
{
  return MEMORY[0x24BDE6598]();
}

uint64_t sub_22655C50C()
{
  return MEMORY[0x24BDE65A0]();
}

uint64_t sub_22655C518()
{
  return MEMORY[0x24BDE65B0]();
}

uint64_t sub_22655C524()
{
  return MEMORY[0x24BDE65C0]();
}

uint64_t sub_22655C530()
{
  return MEMORY[0x24BDE6680]();
}

uint64_t sub_22655C53C()
{
  return MEMORY[0x24BDE6688]();
}

uint64_t sub_22655C548()
{
  return MEMORY[0x24BDE66E0]();
}

uint64_t sub_22655C554()
{
  return MEMORY[0x24BDE6798]();
}

uint64_t sub_22655C560()
{
  return MEMORY[0x24BDE67A0]();
}

uint64_t sub_22655C56C()
{
  return MEMORY[0x24BDE67F0]();
}

uint64_t sub_22655C578()
{
  return MEMORY[0x24BDE6800]();
}

uint64_t sub_22655C584()
{
  return MEMORY[0x24BDE7DF8]();
}

uint64_t sub_22655C590()
{
  return MEMORY[0x24BDE6828]();
}

uint64_t sub_22655C59C()
{
  return MEMORY[0x24BDE6830]();
}

uint64_t sub_22655C5A8()
{
  return MEMORY[0x24BDE6840]();
}

uint64_t sub_22655C5B4()
{
  return MEMORY[0x24BDE6858]();
}

uint64_t sub_22655C5C0()
{
  return MEMORY[0x24BDE6E88]();
}

uint64_t sub_22655C5CC()
{
  return MEMORY[0x24BDE6EB0]();
}

uint64_t sub_22655C5D8()
{
  return MEMORY[0x24BDE6EF8]();
}

uint64_t sub_22655C5E4()
{
  return MEMORY[0x24BDE6F10]();
}

uint64_t sub_22655C5F0()
{
  return MEMORY[0x24BDE6F18]();
}

uint64_t sub_22655C5FC()
{
  return MEMORY[0x24BDE7E28]();
}

uint64_t sub_22655C608()
{
  return MEMORY[0x24BDE7E30]();
}

uint64_t sub_22655C614()
{
  return MEMORY[0x24BDE7E50]();
}

uint64_t sub_22655C620()
{
  return MEMORY[0x24BDE7E60]();
}

uint64_t sub_22655C62C()
{
  return MEMORY[0x24BDE7E68]();
}

uint64_t sub_22655C638()
{
  return MEMORY[0x24BDE7E70]();
}

uint64_t sub_22655C644()
{
  return MEMORY[0x24BDE7E78]();
}

uint64_t sub_22655C650()
{
  return MEMORY[0x24BDE7EB8]();
}

uint64_t sub_22655C65C()
{
  return MEMORY[0x24BDE7EC8]();
}

uint64_t sub_22655C668()
{
  return MEMORY[0x24BDE7EE8]();
}

uint64_t sub_22655C674()
{
  return MEMORY[0x24BDE7F20]();
}

uint64_t sub_22655C680()
{
  return MEMORY[0x24BDE7F40]();
}

uint64_t sub_22655C68C()
{
  return MEMORY[0x24BDE7F58]();
}

uint64_t sub_22655C698()
{
  return MEMORY[0x24BDE7F60]();
}

uint64_t sub_22655C6A4()
{
  return MEMORY[0x24BDE7F68]();
}

uint64_t sub_22655C6B0()
{
  return MEMORY[0x24BDE7F70]();
}

uint64_t sub_22655C6BC()
{
  return MEMORY[0x24BDE7F78]();
}

uint64_t sub_22655C6C8()
{
  return MEMORY[0x24BDE7F88]();
}

uint64_t sub_22655C6D4()
{
  return MEMORY[0x24BDE7F90]();
}

uint64_t sub_22655C6E0()
{
  return MEMORY[0x24BDE7F98]();
}

uint64_t sub_22655C6EC()
{
  return MEMORY[0x24BDE7FA0]();
}

uint64_t sub_22655C6F8()
{
  return MEMORY[0x24BDE7FE0]();
}

uint64_t sub_22655C704()
{
  return MEMORY[0x24BDE8020]();
}

uint64_t sub_22655C710()
{
  return MEMORY[0x24BDE8028]();
}

uint64_t sub_22655C71C()
{
  return MEMORY[0x24BDE8038]();
}

uint64_t sub_22655C728()
{
  return MEMORY[0x24BDE8068]();
}

uint64_t sub_22655C734()
{
  return MEMORY[0x24BDE8070]();
}

uint64_t sub_22655C740()
{
  return MEMORY[0x24BDE8078]();
}

uint64_t sub_22655C74C()
{
  return MEMORY[0x24BDE8080]();
}

uint64_t sub_22655C758()
{
  return MEMORY[0x24BDE8088]();
}

uint64_t sub_22655C764()
{
  return MEMORY[0x24BDE8098]();
}

uint64_t sub_22655C770()
{
  return MEMORY[0x24BDE80A0]();
}

uint64_t sub_22655C77C()
{
  return MEMORY[0x24BDE80A8]();
}

uint64_t sub_22655C788()
{
  return MEMORY[0x24BDE80B8]();
}

uint64_t sub_22655C794()
{
  return MEMORY[0x24BDE80C0]();
}

uint64_t sub_22655C7A0()
{
  return MEMORY[0x24BDE80C8]();
}

uint64_t sub_22655C7AC()
{
  return MEMORY[0x24BDE80E8]();
}

uint64_t sub_22655C7B8()
{
  return MEMORY[0x24BDE80F0]();
}

uint64_t sub_22655C7C4()
{
  return MEMORY[0x24BDE8120]();
}

uint64_t sub_22655C7D0()
{
  return MEMORY[0x24BDE8128]();
}

uint64_t sub_22655C7DC()
{
  return MEMORY[0x24BDE8170]();
}

uint64_t sub_22655C7E8()
{
  return MEMORY[0x24BDE6F30]();
}

uint64_t sub_22655C7F4()
{
  return MEMORY[0x24BDE7038]();
}

uint64_t sub_22655C800()
{
  return MEMORY[0x24BDE7040]();
}

uint64_t sub_22655C80C()
{
  return MEMORY[0x24BE08A88]();
}

uint64_t sub_22655C818()
{
  return MEMORY[0x24BDE7080]();
}

uint64_t sub_22655C824()
{
  return MEMORY[0x24BDE7090]();
}

uint64_t sub_22655C830()
{
  return MEMORY[0x24BDE7098]();
}

uint64_t sub_22655C83C()
{
  return MEMORY[0x24BDE70A8]();
}

uint64_t sub_22655C848()
{
  return MEMORY[0x24BDE70B0]();
}

uint64_t sub_22655C854()
{
  return MEMORY[0x24BDE7108]();
}

uint64_t sub_22655C860()
{
  return MEMORY[0x24BDE7110]();
}

uint64_t sub_22655C86C()
{
  return MEMORY[0x24BDE7138]();
}

uint64_t sub_22655C878()
{
  return MEMORY[0x24BDE7190]();
}

uint64_t sub_22655C884()
{
  return MEMORY[0x24BDE7198]();
}

uint64_t sub_22655C890()
{
  return MEMORY[0x24BDE71B8]();
}

uint64_t sub_22655C89C()
{
  return MEMORY[0x24BDE71C0]();
}

uint64_t sub_22655C8A8()
{
  return MEMORY[0x24BDE71E0]();
}

uint64_t sub_22655C8B4()
{
  return MEMORY[0x24BDE71E8]();
}

uint64_t sub_22655C8C0()
{
  return MEMORY[0x24BDE7208]();
}

uint64_t sub_22655C8CC()
{
  return MEMORY[0x24BDE7210]();
}

uint64_t sub_22655C8D8()
{
  return MEMORY[0x24BDE7218]();
}

uint64_t sub_22655C8E4()
{
  return MEMORY[0x24BDE7220]();
}

uint64_t sub_22655C8F0()
{
  return MEMORY[0x24BDE7230]();
}

uint64_t sub_22655C8FC()
{
  return MEMORY[0x24BDE72D0]();
}

uint64_t sub_22655C908()
{
  return MEMORY[0x24BDE72D8]();
}

uint64_t sub_22655C914()
{
  return MEMORY[0x24BEE5118]();
}

uint64_t sub_22655C920()
{
  return MEMORY[0x24BEE5120]();
}

uint64_t sub_22655C92C()
{
  return MEMORY[0x24BEE5130]();
}

uint64_t sub_22655C938()
{
  return MEMORY[0x24BDE73C8]();
}

uint64_t sub_22655C944()
{
  return MEMORY[0x24BDE73D0]();
}

uint64_t sub_22655C950()
{
  return MEMORY[0x24BDE73D8]();
}

uint64_t sub_22655C95C()
{
  return MEMORY[0x24BDE74D0]();
}

uint64_t sub_22655C968()
{
  return MEMORY[0x24BDE74D8]();
}

uint64_t sub_22655C974()
{
  return MEMORY[0x24BDE74E0]();
}

uint64_t sub_22655C980()
{
  return MEMORY[0x24BDE74F0]();
}

uint64_t sub_22655C98C()
{
  return MEMORY[0x24BDE74F8]();
}

uint64_t sub_22655C998()
{
  return MEMORY[0x24BDE8180]();
}

uint64_t sub_22655C9A4()
{
  return MEMORY[0x24BDE7500]();
}

uint64_t sub_22655C9B0()
{
  return MEMORY[0x24BDE7508]();
}

uint64_t sub_22655C9BC()
{
  return MEMORY[0x24BDE7520]();
}

uint64_t sub_22655C9C8()
{
  return MEMORY[0x24BDE7528]();
}

uint64_t sub_22655C9D4()
{
  return MEMORY[0x24BDE7530]();
}

uint64_t sub_22655C9E0()
{
  return MEMORY[0x24BDE7538]();
}

uint64_t sub_22655C9EC()
{
  return MEMORY[0x24BDE7540]();
}

uint64_t sub_22655C9F8()
{
  return MEMORY[0x24BDE7548]();
}

uint64_t sub_22655CA04()
{
  return MEMORY[0x24BDE7550]();
}

uint64_t sub_22655CA10()
{
  return MEMORY[0x24BDE7560]();
}

uint64_t sub_22655CA1C()
{
  return MEMORY[0x24BDE7568]();
}

uint64_t sub_22655CA28()
{
  return MEMORY[0x24BDE7578]();
}

uint64_t sub_22655CA34()
{
  return MEMORY[0x24BDE7580]();
}

uint64_t sub_22655CA40()
{
  return MEMORY[0x24BDE7588]();
}

uint64_t sub_22655CA4C()
{
  return MEMORY[0x24BDE7590]();
}

uint64_t sub_22655CA58()
{
  return MEMORY[0x24BDE7598]();
}

uint64_t sub_22655CA64()
{
  return MEMORY[0x24BDE75A0]();
}

uint64_t sub_22655CA70()
{
  return MEMORY[0x24BDE75A8]();
}

uint64_t sub_22655CA7C()
{
  return MEMORY[0x24BDE75B0]();
}

uint64_t sub_22655CA88()
{
  return MEMORY[0x24BDE75B8]();
}

uint64_t sub_22655CA94()
{
  return MEMORY[0x24BDE8188]();
}

uint64_t sub_22655CAA0()
{
  return MEMORY[0x24BDE75C0]();
}

uint64_t sub_22655CAAC()
{
  return MEMORY[0x24BDE75C8]();
}

uint64_t sub_22655CAB8()
{
  return MEMORY[0x24BDE75D0]();
}

uint64_t sub_22655CAC4()
{
  return MEMORY[0x24BDE75D8]();
}

uint64_t sub_22655CAD0()
{
  return MEMORY[0x24BDE75E0]();
}

uint64_t sub_22655CADC()
{
  return MEMORY[0x24BDE7758]();
}

uint64_t sub_22655CAE8()
{
  return MEMORY[0x24BDE7900]();
}

uint64_t sub_22655CAF4()
{
  return MEMORY[0x24BDE7970]();
}

uint64_t sub_22655CB00()
{
  return MEMORY[0x24BDE7978]();
}

uint64_t sub_22655CB0C()
{
  return MEMORY[0x24BDE7980]();
}

uint64_t sub_22655CB18()
{
  return MEMORY[0x24BDE7988]();
}

uint64_t sub_22655CB24()
{
  return MEMORY[0x24BDE7990]();
}

uint64_t sub_22655CB30()
{
  return MEMORY[0x24BDE79A0]();
}

uint64_t sub_22655CB3C()
{
  return MEMORY[0x24BDE7A88]();
}

uint64_t sub_22655CB48()
{
  return MEMORY[0x24BDE7C20]();
}

uint64_t sub_22655CB54()
{
  return MEMORY[0x24BDE8198]();
}

uint64_t sub_22655CB60()
{
  return MEMORY[0x24BDE7C28]();
}

uint64_t sub_22655CB6C()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_22655CB78()
{
  return MEMORY[0x24BEE78C8]();
}

uint64_t sub_22655CB84()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_22655CB90()
{
  return MEMORY[0x24BEE78E8]();
}

uint64_t sub_22655CB9C()
{
  return MEMORY[0x24BDB9A50]();
}

uint64_t sub_22655CBA8()
{
  return MEMORY[0x24BEE5438]();
}

uint64_t sub_22655CBB4()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_22655CBC0()
{
  return MEMORY[0x24BEE54B0]();
}

uint64_t sub_22655CBCC()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_22655CBD8()
{
  return MEMORY[0x24BEE54D8]();
}

uint64_t sub_22655CBE4()
{
  return MEMORY[0x24BEE54E0]();
}

uint64_t sub_22655CBF0()
{
  return MEMORY[0x24BEE54E8]();
}

uint64_t sub_22655CBFC()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_22655CC08()
{
  return MEMORY[0x24BEE5570]();
}

uint64_t sub_22655CC14()
{
  return MEMORY[0x24BEE5590]();
}

uint64_t sub_22655CC20()
{
  return MEMORY[0x24BEE5628]();
}

uint64_t sub_22655CC2C()
{
  return MEMORY[0x24BDC6108]();
}

uint64_t sub_22655CC38()
{
  return MEMORY[0x24BDC6120]();
}

uint64_t sub_22655CC44()
{
  return MEMORY[0x24BDC6138]();
}

uint64_t sub_22655CC50()
{
  return MEMORY[0x24BDC61A8]();
}

uint64_t sub_22655CC5C()
{
  return MEMORY[0x24BDC62A8]();
}

uint64_t sub_22655CC68()
{
  return MEMORY[0x24BDC62B0]();
}

uint64_t sub_22655CC74()
{
  return MEMORY[0x24BDC62C8]();
}

uint64_t sub_22655CC80()
{
  return MEMORY[0x24BDC62F0]();
}

uint64_t sub_22655CC8C()
{
  return MEMORY[0x24BDC63B0]();
}

uint64_t sub_22655CC98()
{
  return MEMORY[0x24BDC63E0]();
}

uint64_t sub_22655CCA4()
{
  return MEMORY[0x24BDC6AC0]();
}

uint64_t sub_22655CCB0()
{
  return MEMORY[0x24BDC6AF8]();
}

uint64_t sub_22655CCBC()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_22655CCC8()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_22655CCD4()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_22655CCE0()
{
  return MEMORY[0x24BEE0620]();
}

uint64_t sub_22655CCEC()
{
  return MEMORY[0x24BEE75F0]();
}

uint64_t sub_22655CCF8()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_22655CD04()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_22655CD10()
{
  return MEMORY[0x24BDCF8D8]();
}

uint64_t sub_22655CD1C()
{
  return MEMORY[0x24BDCF908]();
}

uint64_t sub_22655CD28()
{
  return MEMORY[0x24BDCF930]();
}

uint64_t sub_22655CD34()
{
  return MEMORY[0x24BDCF938]();
}

uint64_t sub_22655CD40()
{
  return MEMORY[0x24BDCF948]();
}

uint64_t sub_22655CD4C()
{
  return MEMORY[0x24BDCF968]();
}

uint64_t sub_22655CD58()
{
  return MEMORY[0x24BDCF978]();
}

uint64_t sub_22655CD64()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_22655CD70()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_22655CD7C()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_22655CD88()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_22655CD94()
{
  return MEMORY[0x24BDCFA38]();
}

uint64_t sub_22655CDA0()
{
  return MEMORY[0x24BDCFA48]();
}

uint64_t sub_22655CDAC()
{
  return MEMORY[0x24BDCFA78]();
}

uint64_t sub_22655CDB8()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_22655CDC4()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_22655CDD0()
{
  return MEMORY[0x24BDCFB20]();
}

uint64_t sub_22655CDDC()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_22655CDE8()
{
  return MEMORY[0x24BEE0A30]();
}

uint64_t sub_22655CDF4()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_22655CE00()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_22655CE0C()
{
  return MEMORY[0x24BEE0B78]();
}

uint64_t sub_22655CE18()
{
  return MEMORY[0x24BEE0B80]();
}

uint64_t sub_22655CE24()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_22655CE30()
{
  return MEMORY[0x24BEE0BE0]();
}

uint64_t sub_22655CE3C()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_22655CE48()
{
  return MEMORY[0x24BEE0D98]();
}

uint64_t sub_22655CE54()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_22655CE60()
{
  return MEMORY[0x24BEE0DE8]();
}

uint64_t sub_22655CE6C()
{
  return MEMORY[0x24BEE0FD8]();
}

uint64_t sub_22655CE78()
{
  return MEMORY[0x24BEE0FE8]();
}

uint64_t sub_22655CE84()
{
  return MEMORY[0x24BEE1000]();
}

uint64_t sub_22655CE90()
{
  return MEMORY[0x24BEE1038]();
}

uint64_t sub_22655CE9C()
{
  return MEMORY[0x24BEE1080]();
}

uint64_t sub_22655CEA8()
{
  return MEMORY[0x24BEE10B8]();
}

uint64_t sub_22655CEB4()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_22655CEC0()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_22655CECC()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_22655CED8()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_22655CEE4()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_22655CEF0()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_22655CEFC()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_22655CF08()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_22655CF14()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_22655CF20()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_22655CF2C()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_22655CF38()
{
  return MEMORY[0x24BEE6920]();
}

uint64_t sub_22655CF44()
{
  return MEMORY[0x24BEE6928]();
}

uint64_t sub_22655CF50()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_22655CF5C()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_22655CF68()
{
  return MEMORY[0x24BDCFC58]();
}

uint64_t sub_22655CF74()
{
  return MEMORY[0x24BEE1370]();
}

uint64_t sub_22655CF80()
{
  return MEMORY[0x24BE08A90]();
}

uint64_t sub_22655CF8C()
{
  return MEMORY[0x24BEE14C8]();
}

uint64_t sub_22655CF98()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_22655CFA4()
{
  return MEMORY[0x24BEE1608]();
}

uint64_t sub_22655CFB0()
{
  return MEMORY[0x24BEE1678]();
}

uint64_t sub_22655CFBC()
{
  return MEMORY[0x24BDCFD28]();
}

uint64_t sub_22655CFC8()
{
  return MEMORY[0x24BEE1758]();
}

uint64_t sub_22655CFD4()
{
  return MEMORY[0x24BEDF2A8]();
}

uint64_t sub_22655CFE0()
{
  return MEMORY[0x24BDCFDE8]();
}

uint64_t sub_22655CFEC()
{
  return MEMORY[0x24BDCFDF8]();
}

uint64_t sub_22655CFF8()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_22655D004()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_22655D010()
{
  return MEMORY[0x24BEE79B8]();
}

uint64_t sub_22655D01C()
{
  return MEMORY[0x24BDE7D88]();
}

uint64_t sub_22655D028()
{
  return MEMORY[0x24BDE7D98]();
}

uint64_t sub_22655D034()
{
  return MEMORY[0x24BE08A98]();
}

uint64_t sub_22655D040()
{
  return MEMORY[0x24BDCFFD8]();
}

uint64_t sub_22655D04C()
{
  return MEMORY[0x24BEE5688]();
}

uint64_t sub_22655D058()
{
  return MEMORY[0x24BEE56B8]();
}

uint64_t sub_22655D064()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_22655D070()
{
  return MEMORY[0x24BEE5770]();
}

uint64_t sub_22655D07C()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_22655D088()
{
  return MEMORY[0x24BEE57A0]();
}

uint64_t sub_22655D094()
{
  return MEMORY[0x24BEE57B0]();
}

uint64_t sub_22655D0A0()
{
  return MEMORY[0x24BEE5918]();
}

uint64_t sub_22655D0AC()
{
  return MEMORY[0x24BEE5928]();
}

uint64_t sub_22655D0B8()
{
  return MEMORY[0x24BEE5308]();
}

uint64_t sub_22655D0C4()
{
  return MEMORY[0x24BEE5310]();
}

uint64_t sub_22655D0D0()
{
  return MEMORY[0x24BDD0158]();
}

uint64_t sub_22655D0DC()
{
  return MEMORY[0x24BDD0160]();
}

uint64_t sub_22655D0E8()
{
  return MEMORY[0x24BEDF350]();
}

uint64_t sub_22655D0F4()
{
  return MEMORY[0x24BEDF358]();
}

uint64_t sub_22655D100()
{
  return MEMORY[0x24BEDF368]();
}

uint64_t sub_22655D10C()
{
  return MEMORY[0x24BDD01F0]();
}

uint64_t sub_22655D118()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_22655D124()
{
  return MEMORY[0x24BEE79A0]();
}

uint64_t sub_22655D130()
{
  return MEMORY[0x24BEE1C60]();
}

uint64_t sub_22655D13C()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_22655D148()
{
  return MEMORY[0x24BEE1E70]();
}

uint64_t sub_22655D154()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_22655D160()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_22655D16C()
{
  return MEMORY[0x24BDD04B8]();
}

uint64_t sub_22655D178()
{
  return MEMORY[0x24BDD04C8]();
}

uint64_t sub_22655D184()
{
  return MEMORY[0x24BDD04F0]();
}

uint64_t sub_22655D190()
{
  return MEMORY[0x24BDD0518]();
}

uint64_t sub_22655D19C()
{
  return MEMORY[0x24BDD0590]();
}

uint64_t sub_22655D1A8()
{
  return MEMORY[0x24BDD0620]();
}

uint64_t sub_22655D1B4()
{
  return MEMORY[0x24BDD0638]();
}

uint64_t sub_22655D1C0()
{
  return MEMORY[0x24BEE5E68]();
}

uint64_t sub_22655D1CC()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_22655D1D8()
{
  return MEMORY[0x24BEE2210]();
}

uint64_t sub_22655D1E4()
{
  return MEMORY[0x24BEE2250]();
}

uint64_t sub_22655D1F0()
{
  return MEMORY[0x24BEE2268]();
}

uint64_t sub_22655D1FC()
{
  return MEMORY[0x24BEE2270]();
}

uint64_t sub_22655D208()
{
  return MEMORY[0x24BEE22B0]();
}

uint64_t sub_22655D214()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_22655D220()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_22655D22C()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t sub_22655D238()
{
  return MEMORY[0x24BEE22F8]();
}

uint64_t sub_22655D244()
{
  return MEMORY[0x24BEE2300]();
}

uint64_t sub_22655D250()
{
  return MEMORY[0x24BEE2308]();
}

uint64_t sub_22655D25C()
{
  return MEMORY[0x24BEE2320]();
}

uint64_t sub_22655D268()
{
  return MEMORY[0x24BEE2328]();
}

uint64_t sub_22655D274()
{
  return MEMORY[0x24BEE2330]();
}

uint64_t sub_22655D280()
{
  return MEMORY[0x24BEE2340]();
}

uint64_t sub_22655D28C()
{
  return MEMORY[0x24BEE2348]();
}

uint64_t sub_22655D298()
{
  return MEMORY[0x24BEE2358]();
}

uint64_t sub_22655D2A4()
{
  return MEMORY[0x24BEE2360]();
}

uint64_t sub_22655D2B0()
{
  return MEMORY[0x24BEE2370]();
}

uint64_t sub_22655D2BC()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_22655D2C8()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_22655D2D4()
{
  return MEMORY[0x24BEE24C8]();
}

uint64_t sub_22655D2E0()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_22655D2EC()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_22655D2F8()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_22655D304()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_22655D310()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t sub_22655D31C()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_22655D328()
{
  return MEMORY[0x24BEE2700]();
}

uint64_t sub_22655D334()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_22655D340()
{
  return MEMORY[0x24BEE2730]();
}

uint64_t sub_22655D34C()
{
  return MEMORY[0x24BEE2750]();
}

uint64_t sub_22655D358()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_22655D364()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_22655D370()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_22655D37C()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_22655D388()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_22655D394()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_22655D3A0()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_22655D3AC()
{
  return MEMORY[0x24BEE2EA8]();
}

uint64_t sub_22655D3B8()
{
  return MEMORY[0x24BEE2EE0]();
}

uint64_t sub_22655D3C4()
{
  return MEMORY[0x24BEE2F08]();
}

uint64_t sub_22655D3D0()
{
  return MEMORY[0x24BEE2F18]();
}

uint64_t sub_22655D3DC()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_22655D3E8()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_22655D3F4()
{
  return MEMORY[0x24BEE2F58]();
}

uint64_t sub_22655D400()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_22655D40C()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_22655D418()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_22655D424()
{
  return MEMORY[0x24BEE3090]();
}

uint64_t sub_22655D430()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_22655D43C()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_22655D448()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_22655D454()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_22655D460()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_22655D46C()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_22655D478()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_22655D484()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_22655D490()
{
  return MEMORY[0x24BEE3360]();
}

uint64_t sub_22655D49C()
{
  return MEMORY[0x24BEE3368]();
}

uint64_t sub_22655D4A8()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_22655D4B4()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_22655D4C0()
{
  return MEMORY[0x24BEE33B8]();
}

uint64_t sub_22655D4CC()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_22655D4D8()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_22655D4E4()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_22655D4F0()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_22655D4FC()
{
  return MEMORY[0x24BEE34B8]();
}

uint64_t sub_22655D508()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_22655D514()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_22655D520()
{
  return MEMORY[0x24BEE3508]();
}

uint64_t sub_22655D52C()
{
  return MEMORY[0x24BEE3540]();
}

uint64_t sub_22655D538()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_22655D544()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_22655D550()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_22655D55C()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_22655D568()
{
  return MEMORY[0x24BEE3B90]();
}

uint64_t sub_22655D574()
{
  return MEMORY[0x24BEE3B98]();
}

uint64_t sub_22655D580()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_22655D58C()
{
  return MEMORY[0x24BEE3DE0]();
}

uint64_t sub_22655D598()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_22655D5A4()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_22655D5B0()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t sub_22655D5BC()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_22655D5C8()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_22655D5D4()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_22655D5E0()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_22655D5EC()
{
  return MEMORY[0x24BEE40C0]();
}

uint64_t sub_22655D5F8()
{
  return MEMORY[0x24BE08AA0]();
}

uint64_t sub_22655D604()
{
  return MEMORY[0x24BE08AA8]();
}

uint64_t sub_22655D610()
{
  return MEMORY[0x24BDE7DB0]();
}

uint64_t sub_22655D61C()
{
  return MEMORY[0x24BEE42C0]();
}

uint64_t sub_22655D628()
{
  return MEMORY[0x24BEE42C8]();
}

uint64_t sub_22655D634()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_22655D640()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_22655D64C()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_22655D658()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_22655D664()
{
  return MEMORY[0x24BEE4310]();
}

uint64_t sub_22655D670()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_22655D67C()
{
  return MEMORY[0x24BEE44E0]();
}

uint64_t sub_22655D688()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_22655D694()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_22655D6A0()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_22655D6AC()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t ARVisionToRenderingCoordinateTransform()
{
  return MEMORY[0x24BDB1468]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x24BE1A1C8]();
}

CFTimeInterval CACurrentMediaTime(void)
{
  CFTimeInterval result;

  MEMORY[0x24BDE5410]();
  return result;
}

CATransform3D *__cdecl CATransform3DRotate(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat angle, CGFloat x, CGFloat y, CGFloat z)
{
  return (CATransform3D *)MEMORY[0x24BDE55E8](retstr, t, angle, x, y, z);
}

CATransform3D *__cdecl CATransform3DScale(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return (CATransform3D *)MEMORY[0x24BDE55F8](retstr, t, sx, sy, sz);
}

CATransform3D *__cdecl CATransform3DTranslate(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat tx, CGFloat ty, CGFloat tz)
{
  return (CATransform3D *)MEMORY[0x24BDE5600](retstr, t, tx, ty, tz);
}

CFTypeID CFDataGetTypeID(void)
{
  return MEMORY[0x24BDBBD08]();
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x24BDBBEF8](cf);
}

CFTypeID CFStringGetTypeID(void)
{
  return MEMORY[0x24BDBC698]();
}

CGAffineTransform *__cdecl CGAffineTransformInvert(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t)
{
  return (CGAffineTransform *)MEMORY[0x24BDBD8C0](retstr, t);
}

CGAffineTransform *__cdecl CGAffineTransformMakeRotation(CGAffineTransform *__return_ptr retstr, CGFloat angle)
{
  return (CGAffineTransform *)MEMORY[0x24BDBD8D8](retstr, angle);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x24BDBEFE0]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBEFE8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF000]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF008]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF020]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CVReturn CVMetalTextureCacheCreate(CFAllocatorRef allocator, CFDictionaryRef cacheAttributes, id metalDevice, CFDictionaryRef textureAttributes, CVMetalTextureCacheRef *cacheOut)
{
  return MEMORY[0x24BDC51F8](allocator, cacheAttributes, metalDevice, textureAttributes, cacheOut);
}

CVReturn CVMetalTextureCacheCreateTextureFromImage(CFAllocatorRef allocator, CVMetalTextureCacheRef textureCache, CVImageBufferRef sourceImage, CFDictionaryRef textureAttributes, MTLPixelFormat pixelFormat, size_t width, size_t height, size_t planeIndex, CVMetalTextureRef *textureOut)
{
  return MEMORY[0x24BDC5200](allocator, textureCache, sourceImage, textureAttributes, pixelFormat, width, height, planeIndex);
}

id CVMetalTextureGetTexture(CVMetalTextureRef image)
{
  return (id)MEMORY[0x24BDC5210](image);
}

CVReturn CVPixelBufferCreate(CFAllocatorRef allocator, size_t width, size_t height, OSType pixelFormatType, CFDictionaryRef pixelBufferAttributes, CVPixelBufferRef *pixelBufferOut)
{
  return MEMORY[0x24BDC5248](allocator, width, height, *(_QWORD *)&pixelFormatType, pixelBufferAttributes, pixelBufferOut);
}

void *__cdecl CVPixelBufferGetBaseAddress(CVPixelBufferRef pixelBuffer)
{
  return (void *)MEMORY[0x24BDC5278](pixelBuffer);
}

void *__cdecl CVPixelBufferGetBaseAddressOfPlane(CVPixelBufferRef pixelBuffer, size_t planeIndex)
{
  return (void *)MEMORY[0x24BDC5288](pixelBuffer, planeIndex);
}

size_t CVPixelBufferGetBytesPerRow(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x24BDC5290](pixelBuffer);
}

size_t CVPixelBufferGetBytesPerRowOfPlane(CVPixelBufferRef pixelBuffer, size_t planeIndex)
{
  return MEMORY[0x24BDC5298](pixelBuffer, planeIndex);
}

size_t CVPixelBufferGetDataSize(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x24BDC52A0](pixelBuffer);
}

void CVPixelBufferGetExtendedPixels(CVPixelBufferRef pixelBuffer, size_t *extraColumnsOnLeft, size_t *extraColumnsOnRight, size_t *extraRowsOnTop, size_t *extraRowsOnBottom)
{
  MEMORY[0x24BDC52A8](pixelBuffer, extraColumnsOnLeft, extraColumnsOnRight, extraRowsOnTop, extraRowsOnBottom);
}

size_t CVPixelBufferGetHeight(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x24BDC52B0](pixelBuffer);
}

size_t CVPixelBufferGetHeightOfPlane(CVPixelBufferRef pixelBuffer, size_t planeIndex)
{
  return MEMORY[0x24BDC52B8](pixelBuffer, planeIndex);
}

OSType CVPixelBufferGetPixelFormatType(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x24BDC52D0](pixelBuffer);
}

size_t CVPixelBufferGetPlaneCount(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x24BDC52D8](pixelBuffer);
}

size_t CVPixelBufferGetWidth(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x24BDC52E8](pixelBuffer);
}

size_t CVPixelBufferGetWidthOfPlane(CVPixelBufferRef pixelBuffer, size_t planeIndex)
{
  return MEMORY[0x24BDC52F0](pixelBuffer, planeIndex);
}

Boolean CVPixelBufferIsPlanar(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x24BDC52F8](pixelBuffer);
}

CVReturn CVPixelBufferLockBaseAddress(CVPixelBufferRef pixelBuffer, CVPixelBufferLockFlags lockFlags)
{
  return MEMORY[0x24BDC5308](pixelBuffer, lockFlags);
}

CVReturn CVPixelBufferPoolCreate(CFAllocatorRef allocator, CFDictionaryRef poolAttributes, CFDictionaryRef pixelBufferAttributes, CVPixelBufferPoolRef *poolOut)
{
  return MEMORY[0x24BDC5318](allocator, poolAttributes, pixelBufferAttributes, poolOut);
}

CVReturn CVPixelBufferPoolCreatePixelBuffer(CFAllocatorRef allocator, CVPixelBufferPoolRef pixelBufferPool, CVPixelBufferRef *pixelBufferOut)
{
  return MEMORY[0x24BDC5320](allocator, pixelBufferPool, pixelBufferOut);
}

CVReturn CVPixelBufferUnlockBaseAddress(CVPixelBufferRef pixelBuffer, CVPixelBufferLockFlags unlockFlags)
{
  return MEMORY[0x24BDC53B0](pixelBuffer, unlockFlags);
}

CFTypeRef IORegistryEntryCreateCFProperty(io_registry_entry_t entry, CFStringRef key, CFAllocatorRef allocator, IOOptionBits options)
{
  return (CFTypeRef)MEMORY[0x24BDD88B0](*(_QWORD *)&entry, key, allocator, *(_QWORD *)&options);
}

io_service_t IOServiceGetMatchingService(mach_port_t mainPort, CFDictionaryRef matching)
{
  return MEMORY[0x24BDD8988](*(_QWORD *)&mainPort, matching);
}

CFMutableDictionaryRef IOServiceMatching(const char *name)
{
  return (CFMutableDictionaryRef)MEMORY[0x24BDD89A8](name);
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x24BED8448]();
}

id MTLCreateSystemDefaultDevice(void)
{
  return (id)MEMORY[0x24BDDD1E0]();
}

uint64_t REAssetManagerCreateAssetHandleForURL()
{
  return MEMORY[0x24BE20928]();
}

uint64_t RECameraViewDescriptorsComponentAddSpecifyCommandFromLayer()
{
  return MEMORY[0x24BE21358]();
}

uint64_t RECameraViewDescriptorsComponentAddViewDescriptor()
{
  return MEMORY[0x24BE21368]();
}

uint64_t RECameraViewDescriptorsComponentCameraViewDescriptorCopySettingStruct()
{
  return MEMORY[0x24BE21370]();
}

uint64_t RECameraViewDescriptorsComponentCameraViewDescriptorSetSettingStruct()
{
  return MEMORY[0x24BE21378]();
}

uint64_t RECameraViewDescriptorsComponentClearCameraViewDescriptors()
{
  return MEMORY[0x24BE21388]();
}

uint64_t RECameraViewDescriptorsComponentGetComponentType()
{
  return MEMORY[0x24BE21390]();
}

uint64_t RECheckEntityInsideCustomMatrixCameraFrustumAnyViewWithCustomViewport()
{
  return MEMORY[0x24BE214D0]();
}

uint64_t REComponentGetEntity()
{
  return MEMORY[0x24BE216F8]();
}

uint64_t RECustomMatrixCameraComponentGetComponentType()
{
  return MEMORY[0x24BE21930]();
}

uint64_t RECustomMatrixCameraComponentGetProjectionMatrix()
{
  return MEMORY[0x24BE21940]();
}

uint64_t RECustomMatrixCameraComponentSetProjectionFromMatrix()
{
  return MEMORY[0x24BE21958]();
}

uint64_t REEngineConfigurationCreateFromEngine()
{
  return MEMORY[0x24BE21E10]();
}

uint64_t REEngineConfigurationGetEngineQueue()
{
  return MEMORY[0x24BE21E38]();
}

uint64_t REEngineSetPreferredFramesPerSecond()
{
  return MEMORY[0x24BE21FC8]();
}

uint64_t REEntityGetComponentByClass()
{
  return MEMORY[0x24BE220A8]();
}

uint64_t REEntityGetOrAddComponentByClass()
{
  return MEMORY[0x24BE220D8]();
}

uint64_t REMaterialParameterBlockArrayComponentGetComponentType()
{
  return MEMORY[0x24BE22D00]();
}

uint64_t REMaterialParameterBlockArrayComponentResize()
{
  return MEMORY[0x24BE22D18]();
}

uint64_t REMaterialParameterBlockArrayComponentSetBlockAtIndex()
{
  return MEMORY[0x24BE22D28]();
}

uint64_t REMaterialParameterBlockArrayComponentSize()
{
  return MEMORY[0x24BE22D38]();
}

uint64_t REMaterialParameterBlockGetFloat()
{
  return MEMORY[0x24BE22D40]();
}

uint64_t REMaterialParameterBlockGetFloat2()
{
  return MEMORY[0x24BE22D48]();
}

uint64_t REMaterialParameterBlockGetFloat4()
{
  return MEMORY[0x24BE22D50]();
}

uint64_t REMaterialParameterBlockSetBuffer()
{
  return MEMORY[0x24BE22D60]();
}

uint64_t REMaterialParameterBlockSetFloat()
{
  return MEMORY[0x24BE22D68]();
}

uint64_t REMaterialParameterBlockSetFloat2()
{
  return MEMORY[0x24BE22D70]();
}

uint64_t REMaterialParameterBlockSetFloat4()
{
  return MEMORY[0x24BE22D78]();
}

uint64_t REMatrix4x4MakePerspectiveFieldOfViewReverseDepth()
{
  return MEMORY[0x24BE22FF0]();
}

uint64_t REMeshComponentAddMaterial()
{
  return MEMORY[0x24BE232E0]();
}

uint64_t REMeshComponentGetComponentType()
{
  return MEMORY[0x24BE23300]();
}

uint64_t REMeshComponentRemoveAllMaterials()
{
  return MEMORY[0x24BE23328]();
}

uint64_t REMeshComponentSetBoundsMargin()
{
  return MEMORY[0x24BE23330]();
}

uint64_t REOrthographicCameraComponentGetComponentType()
{
  return MEMORY[0x24BE23550]();
}

uint64_t REOrthographicCameraComponentSetScale()
{
  return MEMORY[0x24BE23588]();
}

uint64_t RERelease()
{
  return MEMORY[0x24BE23EA8]();
}

uint64_t RERenderGraphDataStructAddBool()
{
  return MEMORY[0x24BE23FB8]();
}

uint64_t RERenderGraphDataStructAddFloat4()
{
  return MEMORY[0x24BE23FC0]();
}

uint64_t RERenderManagerMaterialParameterBlockCreateWithAsset()
{
  return MEMORY[0x24BE24028]();
}

uint64_t RESceneGetComponentsOfClass()
{
  return MEMORY[0x24BE242F8]();
}

uint64_t RS3DSurfaceTypeGetDirectionalAxis()
{
  return MEMORY[0x24BE80A30]();
}

uint64_t RSKeyframeFromDictionary()
{
  return MEMORY[0x24BE80A38]();
}

uint64_t RSKeyframeSequenceFromDictionary()
{
  return MEMORY[0x24BE80A40]();
}

uint64_t RSKeyframeSequenceToDictionary()
{
  return MEMORY[0x24BE80A48]();
}

uint64_t RSKeyframeToDictionary()
{
  return MEMORY[0x24BE80A50]();
}

BOOL UIAccessibilityIsVoiceOverRunning(void)
{
  return MEMORY[0x24BEBDE80]();
}

void UIAccessibilityPostNotification(UIAccessibilityNotifications notification, id argument)
{
  MEMORY[0x24BEBDE98](*(_QWORD *)&notification, argument);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x24BDAC780](exception_object);
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return (std::logic_error *)MEMORY[0x24BEDAAA8](this, a2);
}

std::bad_array_new_length *__cdecl std::bad_array_new_length::bad_array_new_length(std::bad_array_new_length *this)
{
  return (std::bad_array_new_length *)MEMORY[0x24BEDABB0](this);
}

void operator delete(void *__p)
{
  off_24EDDDE60(__p);
}

void *__cdecl operator new(size_t __sz)
{
  return (void *)off_24EDDDE68(__sz);
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return (void *)MEMORY[0x24BEDB8F8](thrown_size);
}

void __cxa_free_exception(void *a1)
{
  MEMORY[0x24BEDB930](a1);
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
  MEMORY[0x24BEDB960](a1, lptinfo, a3);
}

uint64_t __invert_d4()
{
  return MEMORY[0x24BDAC810]();
}

simd_float4x4 __invert_f4(simd_float4x4 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  simd_float4x4 result;

  MEMORY[0x24BDAC828]((__n128)a1.columns[0], (__n128)a1.columns[1], (__n128)a1.columns[2], (__n128)a1.columns[3]);
  result.columns[3].i64[1] = v8;
  result.columns[3].i64[0] = v7;
  result.columns[2].i64[1] = v6;
  result.columns[2].i64[0] = v5;
  result.columns[1].i64[1] = v4;
  result.columns[1].i64[0] = v3;
  result.columns[0].i64[1] = v2;
  result.columns[0].i64[0] = v1;
  return result;
}

__double2 __sincos_stret(double a1)
{
  double v1;
  double v2;
  __double2 result;

  MEMORY[0x24BDAC890](a1);
  result.__cosval = v2;
  result.__sinval = v1;
  return result;
}

__float2 __sincosf_stret(float a1)
{
  float v1;
  float v2;
  __float2 result;

  MEMORY[0x24BDAC898](a1);
  result.__cosval = v2;
  result.__sinval = v1;
  return result;
}

__float2 __sincospif_stret(float a1)
{
  float v1;
  float v2;
  __float2 result;

  MEMORY[0x24BDAC8A0](a1);
  result.__cosval = v2;
  result.__sinval = v1;
  return result;
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

float _simd_orient_pf2(simd_float2 a1, simd_float2 a2, simd_float2 a3)
{
  float result;

  MEMORY[0x24BDACDE8](*(__n128 *)a1.f32, *(__n128 *)a2.f32, *(__n128 *)a3.f32);
  return result;
}

float _simd_orient_vf2(simd_float2 a1, simd_float2 a2)
{
  float result;

  MEMORY[0x24BDACDF8](*(__n128 *)a1.f32, *(__n128 *)a2.f32);
  return result;
}

float _simd_orient_vf3(simd_float3 a1, simd_float3 a2, simd_float3 a3)
{
  float result;

  MEMORY[0x24BDACE00]((__n128)a1, (__n128)a2, (__n128)a3);
  return result;
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void abort(void)
{
  MEMORY[0x24BDAD008]();
}

long double acos(long double __x)
{
  long double result;

  MEMORY[0x24BDAD108](__x);
  return result;
}

float acosf(float a1)
{
  float result;

  MEMORY[0x24BDAD110](a1);
  return result;
}

long double atan2(long double __y, long double __x)
{
  long double result;

  MEMORY[0x24BDAD220](__y, __x);
  return result;
}

float atan2f(float a1, float a2)
{
  float result;

  MEMORY[0x24BDAD228](a1, a2);
  return result;
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

float cosf(float a1)
{
  float result;

  MEMORY[0x24BDADBE8](a1);
  return result;
}

long double cosh(long double __x)
{
  long double result;

  MEMORY[0x24BDADBF0](__x);
  return result;
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x24BDADE98](predicate, block);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x24BDADF28](value);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADFE8](queue, block);
}

long double exp(long double __x)
{
  long double result;

  MEMORY[0x24BDAE270](__x);
  return result;
}

long double fmod(long double __x, long double __y)
{
  long double result;

  MEMORY[0x24BDAE3F0](__x, __y);
  return result;
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

long double frexp(long double __x, int *__e)
{
  long double result;

  MEMORY[0x24BDAE480](__e, __x);
  return result;
}

long double ldexp(long double __x, int __e)
{
  long double result;

  MEMORY[0x24BDAEA30](*(_QWORD *)&__e, __x);
  return result;
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x24BDAEEA8](__b, *(_QWORD *)&__c, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x24BEDCF68](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x24BEDCFA8](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x24BEDCFE8]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x24BEDD068](obj);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_new()
{
  return MEMORY[0x24BEDD148]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

long double sin(long double __x)
{
  long double result;

  MEMORY[0x24BDAFE18](__x);
  return result;
}

float sinf(float a1)
{
  float result;

  MEMORY[0x24BDAFE20](a1);
  return result;
}

long double sinh(long double __x)
{
  long double result;

  MEMORY[0x24BDAFE28](__x);
  return result;
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x24BEE4BF0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x24BEE4C50]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x24BEE4D00]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x24BEE4D98]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x24BEE4E40]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStaticObject()
{
  return MEMORY[0x24BEE4E50]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x24BEE4E68]();
}

uint64_t swift_isUniquelyReferenced()
{
  return MEMORY[0x24BEE4E78]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x24BEE4F48]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x24BEE4FB0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x24BEE5010]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

long double tan(long double __x)
{
  long double result;

  MEMORY[0x24BDB0138](__x);
  return result;
}

float tanf(float a1)
{
  float result;

  MEMORY[0x24BDB0140](a1);
  return result;
}

